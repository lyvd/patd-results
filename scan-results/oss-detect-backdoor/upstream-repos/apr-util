{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/jose/apr_jose_decode.c"
                },
                "region": {
                  "startLine": 1677,
                  "startColumn": 56,
                  "endLine": 1677,
                  "endColumn": 60,
                  "snippet": {
                    "text": "        char buf[1024];\n        apr_strerror(status, buf, sizeof(buf));\n        apr_errprintf(&(*jose)->result, pool, NULL, 0,\n                \"Syntax error: JOSE JSON decoding failed at character %\" APR_OFF_T_FMT \": %s\",\n                offset, buf);\n    }\n\n",
                    "rendered": {
                      "text": "        char buf[1024];\n        apr_strerror(status, buf, sizeof(buf));\n        apr_errprintf(&(*jose)->result, pool, NULL, 0,\n                \"Syntax error: JOSE JSON decoding failed at character %\" APR_OFF_T_FMT \": %s\",\n                offset, buf);\n    }\n\n",
                      "markdown": "`        char buf[1024];\n        apr_strerror(status, buf, sizeof(buf));\n        apr_errprintf(&(*jose)->result, pool, NULL, 0,\n                \"Syntax error: JOSE JSON decoding failed at character %\" APR_OFF_T_FMT \": %s\",\n                offset, buf);\n    }\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/jose/apr_jose_decode.c"
                },
                "region": {
                  "startLine": 1272,
                  "startColumn": 66,
                  "endLine": 1272,
                  "endColumn": 70,
                  "snippet": {
                    "text": "            char buf[1024];\n            apr_strerror(status, buf, sizeof(buf));\n            apr_errprintf(&(*jose)->result, pool, NULL, 0,\n                    \"Syntax error: JWE 'protected' decoding failed at %\" APR_OFF_T_FMT \": %s\",\n                    offset, buf);\n\n            return status;\n",
                    "rendered": {
                      "text": "            char buf[1024];\n            apr_strerror(status, buf, sizeof(buf));\n            apr_errprintf(&(*jose)->result, pool, NULL, 0,\n                    \"Syntax error: JWE 'protected' decoding failed at %\" APR_OFF_T_FMT \": %s\",\n                    offset, buf);\n\n            return status;\n",
                      "markdown": "`            char buf[1024];\n            apr_strerror(status, buf, sizeof(buf));\n            apr_errprintf(&(*jose)->result, pool, NULL, 0,\n                    \"Syntax error: JWE 'protected' decoding failed at %\" APR_OFF_T_FMT \": %s\",\n                    offset, buf);\n\n            return status;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/jose/apr_jose_decode.c"
                },
                "region": {
                  "startLine": 735,
                  "startColumn": 58,
                  "endLine": 735,
                  "endColumn": 62,
                  "snippet": {
                    "text": "        char buf[1024];\n        apr_strerror(status, buf, sizeof(buf));\n        apr_errprintf(&(*jose)->result, pool, NULL, 0,\n                \"Syntax error: JOSE header decoding failed at %\" APR_OFF_T_FMT \": %s\",\n                offset, buf);\n\n        return status;\n",
                    "rendered": {
                      "text": "        char buf[1024];\n        apr_strerror(status, buf, sizeof(buf));\n        apr_errprintf(&(*jose)->result, pool, NULL, 0,\n                \"Syntax error: JOSE header decoding failed at %\" APR_OFF_T_FMT \": %s\",\n                offset, buf);\n\n        return status;\n",
                      "markdown": "`        char buf[1024];\n        apr_strerror(status, buf, sizeof(buf));\n        apr_errprintf(&(*jose)->result, pool, NULL, 0,\n                \"Syntax error: JOSE header decoding failed at %\" APR_OFF_T_FMT \": %s\",\n                offset, buf);\n\n        return status;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/jose/apr_jose_decode.c"
                },
                "region": {
                  "startLine": 716,
                  "startColumn": 68,
                  "endLine": 716,
                  "endColumn": 72,
                  "snippet": {
                    "text": "            &phs.len);\n    if (!phs.text) {\n        apr_errprintf(&(*jose)->result, pool, NULL, 0,\n                \"Syntax error: JOSE header base64url decoding failed at %\" APR_SIZE_T_FMT \"\",\n                phs.len);\n\n        return APR_BADCH;\n",
                    "rendered": {
                      "text": "            &phs.len);\n    if (!phs.text) {\n        apr_errprintf(&(*jose)->result, pool, NULL, 0,\n                \"Syntax error: JOSE header base64url decoding failed at %\" APR_SIZE_T_FMT \"\",\n                phs.len);\n\n        return APR_BADCH;\n",
                      "markdown": "`            &phs.len);\n    if (!phs.text) {\n        apr_errprintf(&(*jose)->result, pool, NULL, 0,\n                \"Syntax error: JOSE header base64url decoding failed at %\" APR_SIZE_T_FMT \"\",\n                phs.len);\n\n        return APR_BADCH;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/jose/apr_jose_decode.c"
                },
                "region": {
                  "startLine": 622,
                  "startColumn": 64,
                  "endLine": 622,
                  "endColumn": 68,
                  "snippet": {
                    "text": "            dot - left, APR_ENCODE_BASE64URL, &jwe->encryption->tag.len);\n    if (!jwe->encryption->tag.data) {\n        apr_errprintf(&(*jose)->result, pool, NULL, 0,\n                \"Syntax error: JWE tag base64url decoding failed at %\" APR_SIZE_T_FMT \"\",\n                jwe->encryption->tag.len);\n\n        return APR_BADCH;\n",
                    "rendered": {
                      "text": "            dot - left, APR_ENCODE_BASE64URL, &jwe->encryption->tag.len);\n    if (!jwe->encryption->tag.data) {\n        apr_errprintf(&(*jose)->result, pool, NULL, 0,\n                \"Syntax error: JWE tag base64url decoding failed at %\" APR_SIZE_T_FMT \"\",\n                jwe->encryption->tag.len);\n\n        return APR_BADCH;\n",
                      "markdown": "`            dot - left, APR_ENCODE_BASE64URL, &jwe->encryption->tag.len);\n    if (!jwe->encryption->tag.data) {\n        apr_errprintf(&(*jose)->result, pool, NULL, 0,\n                \"Syntax error: JWE tag base64url decoding failed at %\" APR_SIZE_T_FMT \"\",\n                jwe->encryption->tag.len);\n\n        return APR_BADCH;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/jose/apr_jose_decode.c"
                },
                "region": {
                  "startLine": 609,
                  "startColumn": 71,
                  "endLine": 609,
                  "endColumn": 75,
                  "snippet": {
                    "text": "            dot - left, APR_ENCODE_BASE64URL, &jwe->encryption->cipher.len);\n    if (!jwe->encryption->cipher.data) {\n        apr_errprintf(&(*jose)->result, pool, NULL, 0,\n                \"Syntax error: JWE ciphertext base64url decoding failed at %\" APR_SIZE_T_FMT \"\",\n                jwe->encryption->cipher.len);\n\n        return APR_BADCH;\n",
                    "rendered": {
                      "text": "            dot - left, APR_ENCODE_BASE64URL, &jwe->encryption->cipher.len);\n    if (!jwe->encryption->cipher.data) {\n        apr_errprintf(&(*jose)->result, pool, NULL, 0,\n                \"Syntax error: JWE ciphertext base64url decoding failed at %\" APR_SIZE_T_FMT \"\",\n                jwe->encryption->cipher.len);\n\n        return APR_BADCH;\n",
                      "markdown": "`            dot - left, APR_ENCODE_BASE64URL, &jwe->encryption->cipher.len);\n    if (!jwe->encryption->cipher.data) {\n        apr_errprintf(&(*jose)->result, pool, NULL, 0,\n                \"Syntax error: JWE ciphertext base64url decoding failed at %\" APR_SIZE_T_FMT \"\",\n                jwe->encryption->cipher.len);\n\n        return APR_BADCH;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/jose/apr_jose_decode.c"
                },
                "region": {
                  "startLine": 589,
                  "startColumn": 63,
                  "endLine": 589,
                  "endColumn": 67,
                  "snippet": {
                    "text": "            dot - left, APR_ENCODE_BASE64URL, &jwe->encryption->iv.len);\n    if (!jwe->encryption->iv.data) {\n        apr_errprintf(&(*jose)->result, pool, NULL, 0,\n                \"Syntax error: JWE iv base64url decoding failed at %\" APR_SIZE_T_FMT \"\",\n                                        jwe->encryption->iv.len);\n        return APR_BADCH;\n    }\n",
                    "rendered": {
                      "text": "            dot - left, APR_ENCODE_BASE64URL, &jwe->encryption->iv.len);\n    if (!jwe->encryption->iv.data) {\n        apr_errprintf(&(*jose)->result, pool, NULL, 0,\n                \"Syntax error: JWE iv base64url decoding failed at %\" APR_SIZE_T_FMT \"\",\n                                        jwe->encryption->iv.len);\n        return APR_BADCH;\n    }\n",
                      "markdown": "`            dot - left, APR_ENCODE_BASE64URL, &jwe->encryption->iv.len);\n    if (!jwe->encryption->iv.data) {\n        apr_errprintf(&(*jose)->result, pool, NULL, 0,\n                \"Syntax error: JWE iv base64url decoding failed at %\" APR_SIZE_T_FMT \"\",\n                                        jwe->encryption->iv.len);\n        return APR_BADCH;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/jose/apr_jose_decode.c"
                },
                "region": {
                  "startLine": 570,
                  "startColumn": 65,
                  "endLine": 570,
                  "endColumn": 69,
                  "snippet": {
                    "text": "            dot - left, APR_ENCODE_BASE64URL, &jwe->recipient->ekey.len);\n    if (!jwe->recipient->ekey.data) {\n        apr_errprintf(&(*jose)->result, pool, NULL, 0,\n                \"Syntax error: JWE ekey base64url decoding failed at %\" APR_SIZE_T_FMT \"\",\n                jwe->recipient->ekey.len);\n        return APR_BADCH;\n    }\n",
                    "rendered": {
                      "text": "            dot - left, APR_ENCODE_BASE64URL, &jwe->recipient->ekey.len);\n    if (!jwe->recipient->ekey.data) {\n        apr_errprintf(&(*jose)->result, pool, NULL, 0,\n                \"Syntax error: JWE ekey base64url decoding failed at %\" APR_SIZE_T_FMT \"\",\n                jwe->recipient->ekey.len);\n        return APR_BADCH;\n    }\n",
                      "markdown": "`            dot - left, APR_ENCODE_BASE64URL, &jwe->recipient->ekey.len);\n    if (!jwe->recipient->ekey.data) {\n        apr_errprintf(&(*jose)->result, pool, NULL, 0,\n                \"Syntax error: JWE ekey base64url decoding failed at %\" APR_SIZE_T_FMT \"\",\n                jwe->recipient->ekey.len);\n        return APR_BADCH;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/jose/apr_jose_decode.c"
                },
                "region": {
                  "startLine": 217,
                  "startColumn": 62,
                  "endLine": 217,
                  "endColumn": 66,
                  "snippet": {
                    "text": "        char buf[1024];\n        apr_strerror(status, buf, sizeof(buf));\n        apr_errprintf(&(*jose)->result, pool, NULL, 0,\n                \"Syntax error: JWS 'protected' decoding failed at %\" APR_OFF_T_FMT \": %s\",\n                offset, buf);\n\n        return status;\n",
                    "rendered": {
                      "text": "        char buf[1024];\n        apr_strerror(status, buf, sizeof(buf));\n        apr_errprintf(&(*jose)->result, pool, NULL, 0,\n                \"Syntax error: JWS 'protected' decoding failed at %\" APR_OFF_T_FMT \": %s\",\n                offset, buf);\n\n        return status;\n",
                      "markdown": "`        char buf[1024];\n        apr_strerror(status, buf, sizeof(buf));\n        apr_errprintf(&(*jose)->result, pool, NULL, 0,\n                \"Syntax error: JWS 'protected' decoding failed at %\" APR_OFF_T_FMT \": %s\",\n                offset, buf);\n\n        return status;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/jose/apr_jose_decode.c"
                },
                "region": {
                  "startLine": 146,
                  "startColumn": 50,
                  "endLine": 146,
                  "endColumn": 54,
                  "snippet": {
                    "text": "        char buf[1024];\n        apr_strerror(status, buf, sizeof(buf));\n        apr_errprintf(&(*jose)->result, pool, NULL, 0,\n                \"Syntax error: JWT decoding failed at offset %\" APR_OFF_T_FMT \": %s\",\n                offset, buf);\n\n        return status;\n",
                    "rendered": {
                      "text": "        char buf[1024];\n        apr_strerror(status, buf, sizeof(buf));\n        apr_errprintf(&(*jose)->result, pool, NULL, 0,\n                \"Syntax error: JWT decoding failed at offset %\" APR_OFF_T_FMT \": %s\",\n                offset, buf);\n\n        return status;\n",
                      "markdown": "`        char buf[1024];\n        apr_strerror(status, buf, sizeof(buf));\n        apr_errprintf(&(*jose)->result, pool, NULL, 0,\n                \"Syntax error: JWT decoding failed at offset %\" APR_OFF_T_FMT \": %s\",\n                offset, buf);\n\n        return status;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/jose/apr_jose_decode.c"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 51,
                  "endLine": 104,
                  "endColumn": 55,
                  "snippet": {
                    "text": "        char buf[1024];\n        apr_strerror(status, buf, sizeof(buf));\n        apr_errprintf(&(*jose)->result, pool, NULL, 0,\n                \"Syntax error: JWKS decoding failed at offset %\" APR_OFF_T_FMT \": %s\",\n                offset, buf);\n\n        return status;\n",
                    "rendered": {
                      "text": "        char buf[1024];\n        apr_strerror(status, buf, sizeof(buf));\n        apr_errprintf(&(*jose)->result, pool, NULL, 0,\n                \"Syntax error: JWKS decoding failed at offset %\" APR_OFF_T_FMT \": %s\",\n                offset, buf);\n\n        return status;\n",
                      "markdown": "`        char buf[1024];\n        apr_strerror(status, buf, sizeof(buf));\n        apr_errprintf(&(*jose)->result, pool, NULL, 0,\n                \"Syntax error: JWKS decoding failed at offset %\" APR_OFF_T_FMT \": %s\",\n                offset, buf);\n\n        return status;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/jose/apr_jose_decode.c"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 50,
                  "endLine": 68,
                  "endColumn": 54,
                  "snippet": {
                    "text": "        char buf[1024];\n        apr_strerror(status, buf, sizeof(buf));\n        apr_errprintf(&(*jose)->result, pool, NULL, 0,\n                \"Syntax error: JWK decoding failed at offset %\" APR_OFF_T_FMT \": %s\",\n                                        offset, buf);\n\n        return status;\n",
                    "rendered": {
                      "text": "        char buf[1024];\n        apr_strerror(status, buf, sizeof(buf));\n        apr_errprintf(&(*jose)->result, pool, NULL, 0,\n                \"Syntax error: JWK decoding failed at offset %\" APR_OFF_T_FMT \": %s\",\n                                        offset, buf);\n\n        return status;\n",
                      "markdown": "`        char buf[1024];\n        apr_strerror(status, buf, sizeof(buf));\n        apr_errprintf(&(*jose)->result, pool, NULL, 0,\n                \"Syntax error: JWK decoding failed at offset %\" APR_OFF_T_FMT \": %s\",\n                                        offset, buf);\n\n        return status;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/ldap/apr_ldap_option.c"
                },
                "region": {
                  "startLine": 555,
                  "startColumn": 71,
                  "endLine": 555,
                  "endColumn": 79,
                  "snippet": {
                    "text": "        case APR_LDAP_KEY_TYPE_PFX:\n            result->rc = ldapssl_set_client_private_key((void *)ents[i].path,\n                                                        LDAPSSL_FILETYPE_P12,\n                                                        (void*)ents[i].password);\n            result->msg = ldap_err2string(result->rc);\n            break;\n        default:\n",
                    "rendered": {
                      "text": "        case APR_LDAP_KEY_TYPE_PFX:\n            result->rc = ldapssl_set_client_private_key((void *)ents[i].path,\n                                                        LDAPSSL_FILETYPE_P12,\n                                                        (void*)ents[i].password);\n            result->msg = ldap_err2string(result->rc);\n            break;\n        default:\n",
                      "markdown": "`        case APR_LDAP_KEY_TYPE_PFX:\n            result->rc = ldapssl_set_client_private_key((void *)ents[i].path,\n                                                        LDAPSSL_FILETYPE_P12,\n                                                        (void*)ents[i].password);\n            result->msg = ldap_err2string(result->rc);\n            break;\n        default:\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/ldap/apr_ldap_option.c"
                },
                "region": {
                  "startLine": 553,
                  "startColumn": 44,
                  "endLine": 553,
                  "endColumn": 55,
                  "snippet": {
                    "text": "            result->msg = ldap_err2string(result->rc);\n            break;\n        case APR_LDAP_KEY_TYPE_PFX:\n            result->rc = ldapssl_set_client_private_key((void *)ents[i].path,\n                                                        LDAPSSL_FILETYPE_P12,\n                                                        (void*)ents[i].password);\n            result->msg = ldap_err2string(result->rc);\n",
                    "rendered": {
                      "text": "            result->msg = ldap_err2string(result->rc);\n            break;\n        case APR_LDAP_KEY_TYPE_PFX:\n            result->rc = ldapssl_set_client_private_key((void *)ents[i].path,\n                                                        LDAPSSL_FILETYPE_P12,\n                                                        (void*)ents[i].password);\n            result->msg = ldap_err2string(result->rc);\n",
                      "markdown": "`            result->msg = ldap_err2string(result->rc);\n            break;\n        case APR_LDAP_KEY_TYPE_PFX:\n            result->rc = ldapssl_set_client_private_key((void *)ents[i].path,\n                                                        LDAPSSL_FILETYPE_P12,\n                                                        (void*)ents[i].password);\n            result->msg = ldap_err2string(result->rc);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/ldap/apr_ldap_option.c"
                },
                "region": {
                  "startLine": 549,
                  "startColumn": 71,
                  "endLine": 549,
                  "endColumn": 79,
                  "snippet": {
                    "text": "        case APR_LDAP_KEY_TYPE_BASE64:\n            result->rc = ldapssl_set_client_private_key((void *)ents[i].path,\n                                                        LDAPSSL_CERT_FILETYPE_B64,\n                                                        (void*)ents[i].password);\n            result->msg = ldap_err2string(result->rc);\n            break;\n        case APR_LDAP_KEY_TYPE_PFX:\n",
                    "rendered": {
                      "text": "        case APR_LDAP_KEY_TYPE_BASE64:\n            result->rc = ldapssl_set_client_private_key((void *)ents[i].path,\n                                                        LDAPSSL_CERT_FILETYPE_B64,\n                                                        (void*)ents[i].password);\n            result->msg = ldap_err2string(result->rc);\n            break;\n        case APR_LDAP_KEY_TYPE_PFX:\n",
                      "markdown": "`        case APR_LDAP_KEY_TYPE_BASE64:\n            result->rc = ldapssl_set_client_private_key((void *)ents[i].path,\n                                                        LDAPSSL_CERT_FILETYPE_B64,\n                                                        (void*)ents[i].password);\n            result->msg = ldap_err2string(result->rc);\n            break;\n        case APR_LDAP_KEY_TYPE_PFX:\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/ldap/apr_ldap_option.c"
                },
                "region": {
                  "startLine": 547,
                  "startColumn": 44,
                  "endLine": 547,
                  "endColumn": 55,
                  "snippet": {
                    "text": "            result->msg = ldap_err2string(result->rc);\n            break;\n        case APR_LDAP_KEY_TYPE_BASE64:\n            result->rc = ldapssl_set_client_private_key((void *)ents[i].path,\n                                                        LDAPSSL_CERT_FILETYPE_B64,\n                                                        (void*)ents[i].password);\n            result->msg = ldap_err2string(result->rc);\n",
                    "rendered": {
                      "text": "            result->msg = ldap_err2string(result->rc);\n            break;\n        case APR_LDAP_KEY_TYPE_BASE64:\n            result->rc = ldapssl_set_client_private_key((void *)ents[i].path,\n                                                        LDAPSSL_CERT_FILETYPE_B64,\n                                                        (void*)ents[i].password);\n            result->msg = ldap_err2string(result->rc);\n",
                      "markdown": "`            result->msg = ldap_err2string(result->rc);\n            break;\n        case APR_LDAP_KEY_TYPE_BASE64:\n            result->rc = ldapssl_set_client_private_key((void *)ents[i].path,\n                                                        LDAPSSL_CERT_FILETYPE_B64,\n                                                        (void*)ents[i].password);\n            result->msg = ldap_err2string(result->rc);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/ldap/apr_ldap_option.c"
                },
                "region": {
                  "startLine": 543,
                  "startColumn": 71,
                  "endLine": 543,
                  "endColumn": 79,
                  "snippet": {
                    "text": "        case APR_LDAP_KEY_TYPE_DER:\n            result->rc = ldapssl_set_client_private_key((void *)ents[i].path,\n                                                        LDAPSSL_CERT_FILETYPE_DER,\n                                                        (void*)ents[i].password);\n            result->msg = ldap_err2string(result->rc);\n            break;\n        case APR_LDAP_KEY_TYPE_BASE64:\n",
                    "rendered": {
                      "text": "        case APR_LDAP_KEY_TYPE_DER:\n            result->rc = ldapssl_set_client_private_key((void *)ents[i].path,\n                                                        LDAPSSL_CERT_FILETYPE_DER,\n                                                        (void*)ents[i].password);\n            result->msg = ldap_err2string(result->rc);\n            break;\n        case APR_LDAP_KEY_TYPE_BASE64:\n",
                      "markdown": "`        case APR_LDAP_KEY_TYPE_DER:\n            result->rc = ldapssl_set_client_private_key((void *)ents[i].path,\n                                                        LDAPSSL_CERT_FILETYPE_DER,\n                                                        (void*)ents[i].password);\n            result->msg = ldap_err2string(result->rc);\n            break;\n        case APR_LDAP_KEY_TYPE_BASE64:\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/ldap/apr_ldap_option.c"
                },
                "region": {
                  "startLine": 541,
                  "startColumn": 44,
                  "endLine": 541,
                  "endColumn": 55,
                  "snippet": {
                    "text": "            result->msg = ldap_err2string(result->rc);\n            break;\n        case APR_LDAP_KEY_TYPE_DER:\n            result->rc = ldapssl_set_client_private_key((void *)ents[i].path,\n                                                        LDAPSSL_CERT_FILETYPE_DER,\n                                                        (void*)ents[i].password);\n            result->msg = ldap_err2string(result->rc);\n",
                    "rendered": {
                      "text": "            result->msg = ldap_err2string(result->rc);\n            break;\n        case APR_LDAP_KEY_TYPE_DER:\n            result->rc = ldapssl_set_client_private_key((void *)ents[i].path,\n                                                        LDAPSSL_CERT_FILETYPE_DER,\n                                                        (void*)ents[i].password);\n            result->msg = ldap_err2string(result->rc);\n",
                      "markdown": "`            result->msg = ldap_err2string(result->rc);\n            break;\n        case APR_LDAP_KEY_TYPE_DER:\n            result->rc = ldapssl_set_client_private_key((void *)ents[i].path,\n                                                        LDAPSSL_CERT_FILETYPE_DER,\n                                                        (void*)ents[i].password);\n            result->msg = ldap_err2string(result->rc);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/ldap/apr_ldap_option.c"
                },
                "region": {
                  "startLine": 537,
                  "startColumn": 64,
                  "endLine": 537,
                  "endColumn": 72,
                  "snippet": {
                    "text": "        case APR_LDAP_CERT_TYPE_PFX: \n            result->rc = ldapssl_set_client_cert((void *)ents[i].path,\n                                                 LDAPSSL_FILETYPE_P12,\n                                                 (void*)ents[i].password);\n            result->msg = ldap_err2string(result->rc);\n            break;\n        case APR_LDAP_KEY_TYPE_DER:\n",
                    "rendered": {
                      "text": "        case APR_LDAP_CERT_TYPE_PFX: \n            result->rc = ldapssl_set_client_cert((void *)ents[i].path,\n                                                 LDAPSSL_FILETYPE_P12,\n                                                 (void*)ents[i].password);\n            result->msg = ldap_err2string(result->rc);\n            break;\n        case APR_LDAP_KEY_TYPE_DER:\n",
                      "markdown": "`        case APR_LDAP_CERT_TYPE_PFX: \n            result->rc = ldapssl_set_client_cert((void *)ents[i].path,\n                                                 LDAPSSL_FILETYPE_P12,\n                                                 (void*)ents[i].password);\n            result->msg = ldap_err2string(result->rc);\n            break;\n        case APR_LDAP_KEY_TYPE_DER:\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/ldap/apr_ldap_option.c"
                },
                "region": {
                  "startLine": 531,
                  "startColumn": 64,
                  "endLine": 531,
                  "endColumn": 72,
                  "snippet": {
                    "text": "        case APR_LDAP_CERT_TYPE_BASE64: \n            result->rc = ldapssl_set_client_cert((void *)ents[i].path,\n                                                 LDAPSSL_CERT_FILETYPE_B64,\n                                                 (void*)ents[i].password);\n            result->msg = ldap_err2string(result->rc);\n            break;\n        case APR_LDAP_CERT_TYPE_PFX: \n",
                    "rendered": {
                      "text": "        case APR_LDAP_CERT_TYPE_BASE64: \n            result->rc = ldapssl_set_client_cert((void *)ents[i].path,\n                                                 LDAPSSL_CERT_FILETYPE_B64,\n                                                 (void*)ents[i].password);\n            result->msg = ldap_err2string(result->rc);\n            break;\n        case APR_LDAP_CERT_TYPE_PFX: \n",
                      "markdown": "`        case APR_LDAP_CERT_TYPE_BASE64: \n            result->rc = ldapssl_set_client_cert((void *)ents[i].path,\n                                                 LDAPSSL_CERT_FILETYPE_B64,\n                                                 (void*)ents[i].password);\n            result->msg = ldap_err2string(result->rc);\n            break;\n        case APR_LDAP_CERT_TYPE_PFX: \n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/ldap/apr_ldap_option.c"
                },
                "region": {
                  "startLine": 525,
                  "startColumn": 64,
                  "endLine": 525,
                  "endColumn": 72,
                  "snippet": {
                    "text": "        case APR_LDAP_CERT_TYPE_DER:\n            result->rc = ldapssl_set_client_cert((void *)ents[i].path,\n                                                 LDAPSSL_CERT_FILETYPE_DER,\n                                                 (void*)ents[i].password);\n            result->msg = ldap_err2string(result->rc);\n            break;\n        case APR_LDAP_CERT_TYPE_BASE64: \n",
                    "rendered": {
                      "text": "        case APR_LDAP_CERT_TYPE_DER:\n            result->rc = ldapssl_set_client_cert((void *)ents[i].path,\n                                                 LDAPSSL_CERT_FILETYPE_DER,\n                                                 (void*)ents[i].password);\n            result->msg = ldap_err2string(result->rc);\n            break;\n        case APR_LDAP_CERT_TYPE_BASE64: \n",
                      "markdown": "`        case APR_LDAP_CERT_TYPE_DER:\n            result->rc = ldapssl_set_client_cert((void *)ents[i].path,\n                                                 LDAPSSL_CERT_FILETYPE_DER,\n                                                 (void*)ents[i].password);\n            result->msg = ldap_err2string(result->rc);\n            break;\n        case APR_LDAP_CERT_TYPE_BASE64: \n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/ldap/apr_ldap_option.c"
                },
                "region": {
                  "startLine": 447,
                  "startColumn": 59,
                  "endLine": 447,
                  "endColumn": 67,
                  "snippet": {
                    "text": "    if (result->rc == LDAP_SUCCESS) {\n        if (nickname) {\n            result->rc = ldapssl_enable_clientauth(ldap, \"\",\n                                                   (char *)password,\n                                                   (char *)nickname);\n            if (result->rc != LDAP_SUCCESS) {\n                result->reason = \"LDAP: could not set client certificate: \"\n",
                    "rendered": {
                      "text": "    if (result->rc == LDAP_SUCCESS) {\n        if (nickname) {\n            result->rc = ldapssl_enable_clientauth(ldap, \"\",\n                                                   (char *)password,\n                                                   (char *)nickname);\n            if (result->rc != LDAP_SUCCESS) {\n                result->reason = \"LDAP: could not set client certificate: \"\n",
                      "markdown": "`    if (result->rc == LDAP_SUCCESS) {\n        if (nickname) {\n            result->rc = ldapssl_enable_clientauth(ldap, \"\",\n                                                   (char *)password,\n                                                   (char *)nickname);\n            if (result->rc != LDAP_SUCCESS) {\n                result->reason = \"LDAP: could not set client certificate: \"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/ldap/apr_ldap_option.c"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 31,
                  "endLine": 429,
                  "endColumn": 39,
                  "snippet": {
                    "text": "            break;\n        case APR_LDAP_CERT_TYPE_NICKNAME:\n            nickname = ents[i].path;\n            password = ents[i].password;\n            break;\n        default:\n            result->rc = -1;\n",
                    "rendered": {
                      "text": "            break;\n        case APR_LDAP_CERT_TYPE_NICKNAME:\n            nickname = ents[i].path;\n            password = ents[i].password;\n            break;\n        default:\n            result->rc = -1;\n",
                      "markdown": "`            break;\n        case APR_LDAP_CERT_TYPE_NICKNAME:\n            nickname = ents[i].path;\n            password = ents[i].password;\n            break;\n        default:\n            result->rc = -1;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/ldap/apr_ldap_option.c"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 12,
                  "endLine": 429,
                  "endColumn": 20,
                  "snippet": {
                    "text": "            break;\n        case APR_LDAP_CERT_TYPE_NICKNAME:\n            nickname = ents[i].path;\n            password = ents[i].password;\n            break;\n        default:\n            result->rc = -1;\n",
                    "rendered": {
                      "text": "            break;\n        case APR_LDAP_CERT_TYPE_NICKNAME:\n            nickname = ents[i].path;\n            password = ents[i].password;\n            break;\n        default:\n            result->rc = -1;\n",
                      "markdown": "`            break;\n        case APR_LDAP_CERT_TYPE_NICKNAME:\n            nickname = ents[i].path;\n            password = ents[i].password;\n            break;\n        default:\n            result->rc = -1;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/ldap/apr_ldap_option.c"
                },
                "region": {
                  "startLine": 413,
                  "startColumn": 16,
                  "endLine": 413,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    const char *secmod = NULL;\n    const char *key3db = NULL;\n    const char *cert7db = NULL;\n    const char *password = NULL;\n\n    /* set up cert7.db, key3.db and secmod parameters */\n    for (i = 0; i < certs->nelts; i++) {\n",
                    "rendered": {
                      "text": "    const char *secmod = NULL;\n    const char *key3db = NULL;\n    const char *cert7db = NULL;\n    const char *password = NULL;\n\n    /* set up cert7.db, key3.db and secmod parameters */\n    for (i = 0; i < certs->nelts; i++) {\n",
                      "markdown": "`    const char *secmod = NULL;\n    const char *key3db = NULL;\n    const char *cert7db = NULL;\n    const char *password = NULL;\n\n    /* set up cert7.db, key3.db and secmod parameters */\n    for (i = 0; i < certs->nelts; i++) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/ldap/apr_ldap_option.c"
                },
                "region": {
                  "startLine": 611,
                  "startColumn": 22,
                  "endLine": 611,
                  "endColumn": 28,
                  "snippet": {
                    "text": "        default:\n            result->rc = -1;\n            result->reason = \"LDAP: The OpenLDAP SDK only understands the \"\n                \"PEM (BASE64) file type.\";\n            break;\n        }\n        if (result->rc != LDAP_SUCCESS) {\n",
                    "rendered": {
                      "text": "        default:\n            result->rc = -1;\n            result->reason = \"LDAP: The OpenLDAP SDK only understands the \"\n                \"PEM (BASE64) file type.\";\n            break;\n        }\n        if (result->rc != LDAP_SUCCESS) {\n",
                      "markdown": "`        default:\n            result->rc = -1;\n            result->reason = \"LDAP: The OpenLDAP SDK only understands the \"\n                \"PEM (BASE64) file type.\";\n            break;\n        }\n        if (result->rc != LDAP_SUCCESS) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/ldap/apr_ldap_option.c"
                },
                "region": {
                  "startLine": 561,
                  "startColumn": 30,
                  "endLine": 561,
                  "endColumn": 36,
                  "snippet": {
                    "text": "        default:\n            result->rc = -1;\n            result->reason = \"LDAP: The Novell LDAP SDK only understands the \"\n                \"DER and PEM (BASE64) file types.\";\n            break;\n        }\n        if (result->rc != LDAP_SUCCESS) {\n",
                    "rendered": {
                      "text": "        default:\n            result->rc = -1;\n            result->reason = \"LDAP: The Novell LDAP SDK only understands the \"\n                \"DER and PEM (BASE64) file types.\";\n            break;\n        }\n        if (result->rc != LDAP_SUCCESS) {\n",
                      "markdown": "`        default:\n            result->rc = -1;\n            result->reason = \"LDAP: The Novell LDAP SDK only understands the \"\n                \"DER and PEM (BASE64) file types.\";\n            break;\n        }\n        if (result->rc != LDAP_SUCCESS) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/ldap/apr_ldap_option.c"
                },
                "region": {
                  "startLine": 345,
                  "startColumn": 13,
                  "endLine": 345,
                  "endColumn": 17,
                  "snippet": {
                    "text": "        }\n    }\n    else if (tls == APR_LDAP_SSL) {\n        ULONG ul = (ULONG) LDAP_OPT_ON;\n        result->rc = ldap_set_option(ldap, LDAP_OPT_SSL, &ul);\n        if (result->rc != LDAP_SUCCESS) {\n            result->reason = \"LDAP: an attempt to set LDAP_OPT_SSL on \"\n",
                    "rendered": {
                      "text": "        }\n    }\n    else if (tls == APR_LDAP_SSL) {\n        ULONG ul = (ULONG) LDAP_OPT_ON;\n        result->rc = ldap_set_option(ldap, LDAP_OPT_SSL, &ul);\n        if (result->rc != LDAP_SUCCESS) {\n            result->reason = \"LDAP: an attempt to set LDAP_OPT_SSL on \"\n",
                      "markdown": "`        }\n    }\n    else if (tls == APR_LDAP_SSL) {\n        ULONG ul = (ULONG) LDAP_OPT_ON;\n        result->rc = ldap_set_option(ldap, LDAP_OPT_SSL, &ul);\n        if (result->rc != LDAP_SUCCESS) {\n            result->reason = \"LDAP: an attempt to set LDAP_OPT_SSL on \"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/ldap/apr_ldap_option.c"
                },
                "region": {
                  "startLine": 336,
                  "startColumn": 13,
                  "endLine": 336,
                  "endColumn": 17,
                  "snippet": {
                    "text": "    /* Microsoft SDK */\n#if APR_HAS_MICROSOFT_LDAPSDK\n    if (tls == APR_LDAP_NONE) {\n        ULONG ul = (ULONG) LDAP_OPT_OFF;\n        result->rc = ldap_set_option(ldap, LDAP_OPT_SSL, &ul);\n        if (result->rc != LDAP_SUCCESS) {\n            result->reason = \"LDAP: an attempt to set LDAP_OPT_SSL off \"\n",
                    "rendered": {
                      "text": "    /* Microsoft SDK */\n#if APR_HAS_MICROSOFT_LDAPSDK\n    if (tls == APR_LDAP_NONE) {\n        ULONG ul = (ULONG) LDAP_OPT_OFF;\n        result->rc = ldap_set_option(ldap, LDAP_OPT_SSL, &ul);\n        if (result->rc != LDAP_SUCCESS) {\n            result->reason = \"LDAP: an attempt to set LDAP_OPT_SSL off \"\n",
                      "markdown": "`    /* Microsoft SDK */\n#if APR_HAS_MICROSOFT_LDAPSDK\n    if (tls == APR_LDAP_NONE) {\n        ULONG ul = (ULONG) LDAP_OPT_OFF;\n        result->rc = ldap_set_option(ldap, LDAP_OPT_SSL, &ul);\n        if (result->rc != LDAP_SUCCESS) {\n            result->reason = \"LDAP: an attempt to set LDAP_OPT_SSL off \"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/ldap/NWGNUmakefile"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 25,
                  "endLine": 126,
                  "endColumn": 40,
                  "snippet": {
                    "text": "NLM_THREAD_NAME\t= \n#\n# If this is specified, it will override VERSION value in \n# $(APR_WORK)/build/NWGNUenvironment.inc\n#\nNLM_VERSION\t\t=\n\n",
                    "rendered": {
                      "text": "NLM_THREAD_NAME\t= \n#\n# If this is specified, it will override VERSION value in \n# $(APR_WORK)/build/NWGNUenvironment.inc\n#\nNLM_VERSION\t\t=\n\n",
                      "markdown": "`NLM_THREAD_NAME\t= \n#\n# If this is specified, it will override VERSION value in \n# $(APR_WORK)/build/NWGNUenvironment.inc\n#\nNLM_VERSION\t\t=\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/ldap/NWGNUmakefile"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 30,
                  "endLine": 9,
                  "endColumn": 72,
                  "snippet": {
                    "text": "\t$(EOLIST) \n\n#\n# Get the 'head' of the build environment.  This includes default targets and\n# paths to tools\n#\n\n",
                    "rendered": {
                      "text": "\t$(EOLIST) \n\n#\n# Get the 'head' of the build environment.  This includes default targets and\n# paths to tools\n#\n\n",
                      "markdown": "`\t$(EOLIST) \n\n#\n# Get the 'head' of the build environment.  This includes default targets and\n# paths to tools\n#\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/ldap/NWGNUmakefile"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 27,
                  "endLine": 23,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n",
                    "rendered": {
                      "text": "#\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n",
                      "markdown": "`#\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/ldap/apr_ldap_init.c"
                },
                "region": {
                  "startLine": 173,
                  "startColumn": 30,
                  "endLine": 173,
                  "endColumn": 38,
                  "snippet": {
                    "text": "#elif APR_HAS_LDAP_SSLINIT\n    *ldap = ldap_sslinit((char *)hostname, portno, 0);\n#else\n    *ldap = ldap_init((char *)hostname, portno);\n#endif\n\n    if (*ldap != NULL) {\n",
                    "rendered": {
                      "text": "#elif APR_HAS_LDAP_SSLINIT\n    *ldap = ldap_sslinit((char *)hostname, portno, 0);\n#else\n    *ldap = ldap_init((char *)hostname, portno);\n#endif\n\n    if (*ldap != NULL) {\n",
                      "markdown": "`#elif APR_HAS_LDAP_SSLINIT\n    *ldap = ldap_sslinit((char *)hostname, portno, 0);\n#else\n    *ldap = ldap_init((char *)hostname, portno);\n#endif\n\n    if (*ldap != NULL) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/ldap/apr_ldap_init.c"
                },
                "region": {
                  "startLine": 171,
                  "startColumn": 33,
                  "endLine": 171,
                  "endColumn": 41,
                  "snippet": {
                    "text": "    *ldap = ldapssl_init(hostname, portno, 0);\n#endif\n#elif APR_HAS_LDAP_SSLINIT\n    *ldap = ldap_sslinit((char *)hostname, portno, 0);\n#else\n    *ldap = ldap_init((char *)hostname, portno);\n#endif\n",
                    "rendered": {
                      "text": "    *ldap = ldapssl_init(hostname, portno, 0);\n#endif\n#elif APR_HAS_LDAP_SSLINIT\n    *ldap = ldap_sslinit((char *)hostname, portno, 0);\n#else\n    *ldap = ldap_init((char *)hostname, portno);\n#endif\n",
                      "markdown": "`    *ldap = ldapssl_init(hostname, portno, 0);\n#endif\n#elif APR_HAS_LDAP_SSLINIT\n    *ldap = ldap_sslinit((char *)hostname, portno, 0);\n#else\n    *ldap = ldap_init((char *)hostname, portno);\n#endif\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/ldap/apr_ldap_init.c"
                },
                "region": {
                  "startLine": 168,
                  "startColumn": 25,
                  "endLine": 168,
                  "endColumn": 33,
                  "snippet": {
                    "text": "     */\n    *ldap = ldapssl_init(hostname, portno, secure == APR_LDAP_SSL);\n#else\n    *ldap = ldapssl_init(hostname, portno, 0);\n#endif\n#elif APR_HAS_LDAP_SSLINIT\n    *ldap = ldap_sslinit((char *)hostname, portno, 0);\n",
                    "rendered": {
                      "text": "     */\n    *ldap = ldapssl_init(hostname, portno, secure == APR_LDAP_SSL);\n#else\n    *ldap = ldapssl_init(hostname, portno, 0);\n#endif\n#elif APR_HAS_LDAP_SSLINIT\n    *ldap = ldap_sslinit((char *)hostname, portno, 0);\n",
                      "markdown": "`     */\n    *ldap = ldapssl_init(hostname, portno, secure == APR_LDAP_SSL);\n#else\n    *ldap = ldapssl_init(hostname, portno, 0);\n#endif\n#elif APR_HAS_LDAP_SSLINIT\n    *ldap = ldap_sslinit((char *)hostname, portno, 0);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/ldap/apr_ldap_init.c"
                },
                "region": {
                  "startLine": 166,
                  "startColumn": 25,
                  "endLine": 166,
                  "endColumn": 33,
                  "snippet": {
                    "text": "     * for each of them, first. For Solaris LDAP it works, and the method\n     * with ldap_set_option doesn't.\n     */\n    *ldap = ldapssl_init(hostname, portno, secure == APR_LDAP_SSL);\n#else\n    *ldap = ldapssl_init(hostname, portno, 0);\n#endif\n",
                    "rendered": {
                      "text": "     * for each of them, first. For Solaris LDAP it works, and the method\n     * with ldap_set_option doesn't.\n     */\n    *ldap = ldapssl_init(hostname, portno, secure == APR_LDAP_SSL);\n#else\n    *ldap = ldapssl_init(hostname, portno, 0);\n#endif\n",
                      "markdown": "`     * for each of them, first. For Solaris LDAP it works, and the method\n     * with ldap_set_option doesn't.\n     */\n    *ldap = ldapssl_init(hostname, portno, secure == APR_LDAP_SSL);\n#else\n    *ldap = ldapssl_init(hostname, portno, 0);\n#endif\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/ldap/apr_ldap_init.c"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 48,
                  "endLine": 149,
                  "endColumn": 56,
                  "snippet": {
                    "text": " */\nAPU_DECLARE_LDAP(int) apr_ldap_init(apr_pool_t *pool,\n                                    LDAP **ldap,\n                                    const char *hostname,\n                                    int portno,\n                                    int secure,\n                                    apr_ldap_err_t **result_err)\n",
                    "rendered": {
                      "text": " */\nAPU_DECLARE_LDAP(int) apr_ldap_init(apr_pool_t *pool,\n                                    LDAP **ldap,\n                                    const char *hostname,\n                                    int portno,\n                                    int secure,\n                                    apr_ldap_err_t **result_err)\n",
                      "markdown": "` */\nAPU_DECLARE_LDAP(int) apr_ldap_init(apr_pool_t *pool,\n                                    LDAP **ldap,\n                                    const char *hostname,\n                                    int portno,\n                                    int secure,\n                                    apr_ldap_err_t **result_err)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/ldap/apr_ldap_stub.c"
                },
                "region": {
                  "startLine": 146,
                  "startColumn": 33,
                  "endLine": 146,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                                    apr_ldap_err_t **result_err)\n{\n    LOAD_LDAP_STUB(pool, NULL, -1);\n    return lfn->init(pool, ldap, hostname, portno, secure, result_err);\n}\n\nAPU_DECLARE_LDAP(int) apr_ldap_ssl_init(apr_pool_t *pool,\n",
                    "rendered": {
                      "text": "                                    apr_ldap_err_t **result_err)\n{\n    LOAD_LDAP_STUB(pool, NULL, -1);\n    return lfn->init(pool, ldap, hostname, portno, secure, result_err);\n}\n\nAPU_DECLARE_LDAP(int) apr_ldap_ssl_init(apr_pool_t *pool,\n",
                      "markdown": "`                                    apr_ldap_err_t **result_err)\n{\n    LOAD_LDAP_STUB(pool, NULL, -1);\n    return lfn->init(pool, ldap, hostname, portno, secure, result_err);\n}\n\nAPU_DECLARE_LDAP(int) apr_ldap_ssl_init(apr_pool_t *pool,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/ldap/apr_ldap_stub.c"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 48,
                  "endLine": 140,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\nAPU_DECLARE_LDAP(int) apr_ldap_init(apr_pool_t *pool,\n                                    LDAP **ldap,\n                                    const char *hostname,\n                                    int portno,\n                                    int secure,\n                                    apr_ldap_err_t **result_err)\n",
                    "rendered": {
                      "text": "\nAPU_DECLARE_LDAP(int) apr_ldap_init(apr_pool_t *pool,\n                                    LDAP **ldap,\n                                    const char *hostname,\n                                    int portno,\n                                    int secure,\n                                    apr_ldap_err_t **result_err)\n",
                      "markdown": "`\nAPU_DECLARE_LDAP(int) apr_ldap_init(apr_pool_t *pool,\n                                    LDAP **ldap,\n                                    const char *hostname,\n                                    int portno,\n                                    int secure,\n                                    apr_ldap_err_t **result_err)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/ldap/apr_ldap.mak"
                },
                "region": {
                  "startLine": 465,
                  "startColumn": 24,
                  "endLine": 465,
                  "endColumn": 30,
                  "snippet": {
                    "text": "!IF EXISTS(\"apr_ldap.dep\")\r\n!INCLUDE \"apr_ldap.dep\"\r\n!ELSE \r\n!MESSAGE Warning: cannot find \"apr_ldap.dep\"\r\n!ENDIF \r\n!ENDIF \r\n\r\n",
                    "rendered": {
                      "text": "!IF EXISTS(\"apr_ldap.dep\")\r\n!INCLUDE \"apr_ldap.dep\"\r\n!ELSE \r\n!MESSAGE Warning: cannot find \"apr_ldap.dep\"\r\n!ENDIF \r\n!ENDIF \r\n\r\n",
                      "markdown": "`!IF EXISTS(\"apr_ldap.dep\")\r\n!INCLUDE \"apr_ldap.dep\"\r\n!ELSE \r\n!MESSAGE Warning: cannot find \"apr_ldap.dep\"\r\n!ENDIF \r\n!ENDIF \r\n\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/ldap/apr_ldap.c"
                },
                "region": {
                  "startLine": 1999,
                  "startColumn": 11,
                  "endLine": 1999,
                  "endColumn": 19,
                  "snippet": {
                    "text": "        /*\n         * ldap_simple_bind() is deprecated, so use ldap_sasl_bind() instead. In this\n         * mode mechanism is null, the username is passed in the dn, and the\n         * password is passed as a buffer to cred.\n         */\n\n        err->rc = ldap_sasl_bind(ldap->ld, dn, LDAP_SASL_SIMPLE, &cred,\n",
                    "rendered": {
                      "text": "        /*\n         * ldap_simple_bind() is deprecated, so use ldap_sasl_bind() instead. In this\n         * mode mechanism is null, the username is passed in the dn, and the\n         * password is passed as a buffer to cred.\n         */\n\n        err->rc = ldap_sasl_bind(ldap->ld, dn, LDAP_SASL_SIMPLE, &cred,\n",
                      "markdown": "`        /*\n         * ldap_simple_bind() is deprecated, so use ldap_sasl_bind() instead. In this\n         * mode mechanism is null, the username is passed in the dn, and the\n         * password is passed as a buffer to cred.\n         */\n\n        err->rc = ldap_sasl_bind(ldap->ld, dn, LDAP_SASL_SIMPLE, &cred,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/ldap/apr_ldap.c"
                },
                "region": {
                  "startLine": 1980,
                  "startColumn": 30,
                  "endLine": 1980,
                  "endColumn": 38,
                  "snippet": {
                    "text": "        }\n\n        interaction.id = APR_LDAP_INTERACT_PASS;\n        interaction.prompt = \"Password\";\n\n        payload.status = interact_cb(ldap, 0, &interaction, interact_ctx);\n\n",
                    "rendered": {
                      "text": "        }\n\n        interaction.id = APR_LDAP_INTERACT_PASS;\n        interaction.prompt = \"Password\";\n\n        payload.status = interact_cb(ldap, 0, &interaction, interact_ctx);\n\n",
                      "markdown": "`        }\n\n        interaction.id = APR_LDAP_INTERACT_PASS;\n        interaction.prompt = \"Password\";\n\n        payload.status = interact_cb(ldap, 0, &interaction, interact_ctx);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/ldap/apr_ldap.c"
                },
                "region": {
                  "startLine": 344,
                  "startColumn": 31,
                  "endLine": 344,
                  "endColumn": 39,
                  "snippet": {
                    "text": " * ON ENTRY:\n *     ld       Pointer to an LDAP control structure. (input only)\n *     binddnp  Pointer to an Application DName used for binding (in *or* out)\n *     passwdp  Pointer to the password associated with the DName (in *or* out)\n *     methodp  Pointer to the Auth method (output only)\n *     freeit   Flag to indicate if this is a lookup or a free request (input only)\n */\n",
                    "rendered": {
                      "text": " * ON ENTRY:\n *     ld       Pointer to an LDAP control structure. (input only)\n *     binddnp  Pointer to an Application DName used for binding (in *or* out)\n *     passwdp  Pointer to the password associated with the DName (in *or* out)\n *     methodp  Pointer to the Auth method (output only)\n *     freeit   Flag to indicate if this is a lookup or a free request (input only)\n */\n",
                      "markdown": "` * ON ENTRY:\n *     ld       Pointer to an LDAP control structure. (input only)\n *     binddnp  Pointer to an Application DName used for binding (in *or* out)\n *     passwdp  Pointer to the password associated with the DName (in *or* out)\n *     methodp  Pointer to the Auth method (output only)\n *     freeit   Flag to indicate if this is a lookup or a free request (input only)\n */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/ldap/apr_ldap.c"
                },
                "region": {
                  "startLine": 588,
                  "startColumn": 22,
                  "endLine": 588,
                  "endColumn": 28,
                  "snippet": {
                    "text": "        default:\n            result->rc = -1;\n            result->reason = \"LDAP: The OpenLDAP SDK only understands the \"\n                \"PEM (BASE64) file type.\";\n            break;\n        }\n        if (result->rc != LDAP_SUCCESS) {\n",
                    "rendered": {
                      "text": "        default:\n            result->rc = -1;\n            result->reason = \"LDAP: The OpenLDAP SDK only understands the \"\n                \"PEM (BASE64) file type.\";\n            break;\n        }\n        if (result->rc != LDAP_SUCCESS) {\n",
                      "markdown": "`        default:\n            result->rc = -1;\n            result->reason = \"LDAP: The OpenLDAP SDK only understands the \"\n                \"PEM (BASE64) file type.\";\n            break;\n        }\n        if (result->rc != LDAP_SUCCESS) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/ldap/apr_ldap.c"
                },
                "region": {
                  "startLine": 1033,
                  "startColumn": 22,
                  "endLine": 1033,
                  "endColumn": 31,
                  "snippet": {
                    "text": "         * XXX: synchronous ldap function calls with asynchronous calls and using\n         * XXX: ldap_result() with a timeout.\n         */\n        struct timeval timeout = {0};\n\n        timeout.tv_sec = apr_time_sec(invalue->timeout);\n        timeout.tv_usec = apr_time_usec(invalue->timeout);\n",
                    "rendered": {
                      "text": "         * XXX: synchronous ldap function calls with asynchronous calls and using\n         * XXX: ldap_result() with a timeout.\n         */\n        struct timeval timeout = {0};\n\n        timeout.tv_sec = apr_time_sec(invalue->timeout);\n        timeout.tv_usec = apr_time_usec(invalue->timeout);\n",
                      "markdown": "`         * XXX: synchronous ldap function calls with asynchronous calls and using\n         * XXX: ldap_result() with a timeout.\n         */\n        struct timeval timeout = {0};\n\n        timeout.tv_sec = apr_time_sec(invalue->timeout);\n        timeout.tv_usec = apr_time_usec(invalue->timeout);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/ldap/apr_ldap.c"
                },
                "region": {
                  "startLine": 815,
                  "startColumn": 22,
                  "endLine": 815,
                  "endColumn": 31,
                  "snippet": {
                    "text": "         * XXX: synchronous ldap function calls with asynchronous calls and using\n         * XXX: ldap_result() with a timeout.\n         */\n        struct timeval timeout = {0};\n\n        rc = ldap_get_option(ldap ? ldap->ld : NULL, LDAP_OPT_TIMEOUT, &timeout);\n\n",
                    "rendered": {
                      "text": "         * XXX: synchronous ldap function calls with asynchronous calls and using\n         * XXX: ldap_result() with a timeout.\n         */\n        struct timeval timeout = {0};\n\n        rc = ldap_get_option(ldap ? ldap->ld : NULL, LDAP_OPT_TIMEOUT, &timeout);\n\n",
                      "markdown": "`         * XXX: synchronous ldap function calls with asynchronous calls and using\n         * XXX: ldap_result() with a timeout.\n         */\n        struct timeval timeout = {0};\n\n        rc = ldap_get_option(ldap ? ldap->ld : NULL, LDAP_OPT_TIMEOUT, &timeout);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/ldap/apr_ldap.c"
                },
                "region": {
                  "startLine": 499,
                  "startColumn": 13,
                  "endLine": 499,
                  "endColumn": 17,
                  "snippet": {
                    "text": "        }\n    }\n    else if (tls == APR_LDAP_SSL) {\n        ULONG ul = (ULONG) LDAP_OPT_ON;\n        result->rc = ldap_set_option(ldap, LDAP_OPT_SSL, &ul);\n        if (result->rc != LDAP_SUCCESS) {\n            result->reason = \"LDAP: an attempt to set LDAP_OPT_SSL on \"\n",
                    "rendered": {
                      "text": "        }\n    }\n    else if (tls == APR_LDAP_SSL) {\n        ULONG ul = (ULONG) LDAP_OPT_ON;\n        result->rc = ldap_set_option(ldap, LDAP_OPT_SSL, &ul);\n        if (result->rc != LDAP_SUCCESS) {\n            result->reason = \"LDAP: an attempt to set LDAP_OPT_SSL on \"\n",
                      "markdown": "`        }\n    }\n    else if (tls == APR_LDAP_SSL) {\n        ULONG ul = (ULONG) LDAP_OPT_ON;\n        result->rc = ldap_set_option(ldap, LDAP_OPT_SSL, &ul);\n        if (result->rc != LDAP_SUCCESS) {\n            result->reason = \"LDAP: an attempt to set LDAP_OPT_SSL on \"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/ldap/apr_ldap.c"
                },
                "region": {
                  "startLine": 490,
                  "startColumn": 13,
                  "endLine": 490,
                  "endColumn": 17,
                  "snippet": {
                    "text": "    /* Microsoft SDK */\n#if APR_HAS_MICROSOFT_LDAPSDK\n    if (tls == APR_LDAP_NONE) {\n        ULONG ul = (ULONG) LDAP_OPT_OFF;\n        result->rc = ldap_set_option(ldap, LDAP_OPT_SSL, &ul);\n        if (result->rc != LDAP_SUCCESS) {\n            result->reason = \"LDAP: an attempt to set LDAP_OPT_SSL off \"\n",
                    "rendered": {
                      "text": "    /* Microsoft SDK */\n#if APR_HAS_MICROSOFT_LDAPSDK\n    if (tls == APR_LDAP_NONE) {\n        ULONG ul = (ULONG) LDAP_OPT_OFF;\n        result->rc = ldap_set_option(ldap, LDAP_OPT_SSL, &ul);\n        if (result->rc != LDAP_SUCCESS) {\n            result->reason = \"LDAP: an attempt to set LDAP_OPT_SSL off \"\n",
                      "markdown": "`    /* Microsoft SDK */\n#if APR_HAS_MICROSOFT_LDAPSDK\n    if (tls == APR_LDAP_NONE) {\n        ULONG ul = (ULONG) LDAP_OPT_OFF;\n        result->rc = ldap_set_option(ldap, LDAP_OPT_SSL, &ul);\n        if (result->rc != LDAP_SUCCESS) {\n            result->reason = \"LDAP: an attempt to set LDAP_OPT_SSL off \"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/ldap/apr_ldap_rebind.c"
                },
                "region": {
                  "startLine": 248,
                  "startColumn": 31,
                  "endLine": 248,
                  "endColumn": 39,
                  "snippet": {
                    "text": " * ON ENTRY:\n *     ld       Pointer to an LDAP control structure. (input only)\n *     binddnp  Pointer to an Application DName used for binding (in *or* out)\n *     passwdp  Pointer to the password associated with the DName (in *or* out)\n *     methodp  Pointer to the Auth method (output only)\n *     freeit   Flag to indicate if this is a lookup or a free request (input only)\n */\n",
                    "rendered": {
                      "text": " * ON ENTRY:\n *     ld       Pointer to an LDAP control structure. (input only)\n *     binddnp  Pointer to an Application DName used for binding (in *or* out)\n *     passwdp  Pointer to the password associated with the DName (in *or* out)\n *     methodp  Pointer to the Auth method (output only)\n *     freeit   Flag to indicate if this is a lookup or a free request (input only)\n */\n",
                      "markdown": "` * ON ENTRY:\n *     ld       Pointer to an LDAP control structure. (input only)\n *     binddnp  Pointer to an Application DName used for binding (in *or* out)\n *     passwdp  Pointer to the password associated with the DName (in *or* out)\n *     methodp  Pointer to the Auth method (output only)\n *     freeit   Flag to indicate if this is a lookup or a free request (input only)\n */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/json/apr_json_decode.c"
                },
                "region": {
                  "startLine": 171,
                  "startColumn": 27,
                  "endLine": 171,
                  "endColumn": 31,
                  "snippet": {
                    "text": "                                status = APR_BADCH;\n                                goto out;\n                            }\n                            sc = (sc << 4) | d;\n                        }\n                        cp = ((cp & 0x3ff) << 10) | (sc & 0x3ff);\n                        if ((cp >= 0xd800 && cp < 0xe000) || (cp >= 0x110000)) {\n",
                    "rendered": {
                      "text": "                                status = APR_BADCH;\n                                goto out;\n                            }\n                            sc = (sc << 4) | d;\n                        }\n                        cp = ((cp & 0x3ff) << 10) | (sc & 0x3ff);\n                        if ((cp >= 0xd800 && cp < 0xe000) || (cp >= 0x110000)) {\n",
                      "markdown": "`                                status = APR_BADCH;\n                                goto out;\n                            }\n                            sc = (sc << 4) | d;\n                        }\n                        cp = ((cp & 0x3ff) << 10) | (sc & 0x3ff);\n                        if ((cp >= 0xd800 && cp < 0xe000) || (cp >= 0x110000)) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/json/apr_json_decode.c"
                },
                "region": {
                  "startLine": 156,
                  "startColumn": 27,
                  "endLine": 156,
                  "endColumn": 31,
                  "snippet": {
                    "text": "                    }\n                    if (cp >= 0xd800 && cp < 0xdc00) {\n                        /* surrogate pair */\n                        int sc = 0;\n                        if (p + 6 > e) {\n                            status = APR_EOF;\n                            goto out;\n",
                    "rendered": {
                      "text": "                    }\n                    if (cp >= 0xd800 && cp < 0xdc00) {\n                        /* surrogate pair */\n                        int sc = 0;\n                        if (p + 6 > e) {\n                            status = APR_EOF;\n                            goto out;\n",
                      "markdown": "`                    }\n                    if (cp >= 0xd800 && cp < 0xdc00) {\n                        /* surrogate pair */\n                        int sc = 0;\n                        if (p + 6 > e) {\n                            status = APR_EOF;\n                            goto out;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/json/apr_json_decode.c"
                },
                "region": {
                  "startLine": 179,
                  "startColumn": 44,
                  "endLine": 179,
                  "endColumn": 48,
                  "snippet": {
                    "text": "                            goto out;\n                        }\n                    }\n                    else if (cp >= 0xdc00 && cp < 0xe000) {\n                        status = APR_BADCH;\n                        goto out;\n                    }\n",
                    "rendered": {
                      "text": "                            goto out;\n                        }\n                    }\n                    else if (cp >= 0xdc00 && cp < 0xe000) {\n                        status = APR_BADCH;\n                        goto out;\n                    }\n",
                      "markdown": "`                            goto out;\n                        }\n                    }\n                    else if (cp >= 0xdc00 && cp < 0xe000) {\n                        status = APR_BADCH;\n                        goto out;\n                    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/json/apr_json_decode.c"
                },
                "region": {
                  "startLine": 174,
                  "startColumn": 44,
                  "endLine": 174,
                  "endColumn": 48,
                  "snippet": {
                    "text": "                            sc = (sc << 4) | d;\n                        }\n                        cp = ((cp & 0x3ff) << 10) | (sc & 0x3ff);\n                        if ((cp >= 0xd800 && cp < 0xe000) || (cp >= 0x110000)) {\n                            status = APR_BADCH;\n                            goto out;\n                        }\n",
                    "rendered": {
                      "text": "                            sc = (sc << 4) | d;\n                        }\n                        cp = ((cp & 0x3ff) << 10) | (sc & 0x3ff);\n                        if ((cp >= 0xd800 && cp < 0xe000) || (cp >= 0x110000)) {\n                            status = APR_BADCH;\n                            goto out;\n                        }\n",
                      "markdown": "`                            sc = (sc << 4) | d;\n                        }\n                        cp = ((cp & 0x3ff) << 10) | (sc & 0x3ff);\n                        if ((cp >= 0xd800 && cp < 0xe000) || (cp >= 0x110000)) {\n                            status = APR_BADCH;\n                            goto out;\n                        }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/json/apr_json_decode.c"
                },
                "region": {
                  "startLine": 173,
                  "startColumn": 23,
                  "endLine": 173,
                  "endColumn": 27,
                  "snippet": {
                    "text": "                            }\n                            sc = (sc << 4) | d;\n                        }\n                        cp = ((cp & 0x3ff) << 10) | (sc & 0x3ff);\n                        if ((cp >= 0xd800 && cp < 0xe000) || (cp >= 0x110000)) {\n                            status = APR_BADCH;\n                            goto out;\n",
                    "rendered": {
                      "text": "                            }\n                            sc = (sc << 4) | d;\n                        }\n                        cp = ((cp & 0x3ff) << 10) | (sc & 0x3ff);\n                        if ((cp >= 0xd800 && cp < 0xe000) || (cp >= 0x110000)) {\n                            status = APR_BADCH;\n                            goto out;\n",
                      "markdown": "`                            }\n                            sc = (sc << 4) | d;\n                        }\n                        cp = ((cp & 0x3ff) << 10) | (sc & 0x3ff);\n                        if ((cp >= 0xd800 && cp < 0xe000) || (cp >= 0x110000)) {\n                            status = APR_BADCH;\n                            goto out;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/json/apr_json_decode.c"
                },
                "region": {
                  "startLine": 154,
                  "startColumn": 39,
                  "endLine": 154,
                  "endColumn": 43,
                  "snippet": {
                    "text": "                        }\n                        cp = (cp << 4) | d;\n                    }\n                    if (cp >= 0xd800 && cp < 0xdc00) {\n                        /* surrogate pair */\n                        int sc = 0;\n                        if (p + 6 > e) {\n",
                    "rendered": {
                      "text": "                        }\n                        cp = (cp << 4) | d;\n                    }\n                    if (cp >= 0xd800 && cp < 0xdc00) {\n                        /* surrogate pair */\n                        int sc = 0;\n                        if (p + 6 > e) {\n",
                      "markdown": "`                        }\n                        cp = (cp << 4) | d;\n                    }\n                    if (cp >= 0xd800 && cp < 0xdc00) {\n                        /* surrogate pair */\n                        int sc = 0;\n                        if (p + 6 > e) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/json/apr_json_decode.c"
                },
                "region": {
                  "startLine": 152,
                  "startColumn": 23,
                  "endLine": 152,
                  "endColumn": 27,
                  "snippet": {
                    "text": "                            status = APR_BADCH;\n                            goto out;\n                        }\n                        cp = (cp << 4) | d;\n                    }\n                    if (cp >= 0xd800 && cp < 0xdc00) {\n                        /* surrogate pair */\n",
                    "rendered": {
                      "text": "                            status = APR_BADCH;\n                            goto out;\n                        }\n                        cp = (cp << 4) | d;\n                    }\n                    if (cp >= 0xd800 && cp < 0xdc00) {\n                        /* surrogate pair */\n",
                      "markdown": "`                            status = APR_BADCH;\n                            goto out;\n                        }\n                        cp = (cp << 4) | d;\n                    }\n                    if (cp >= 0xd800 && cp < 0xdc00) {\n                        /* surrogate pair */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/json/apr_json_decode.c"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 29,
                  "endLine": 145,
                  "endColumn": 33,
                  "snippet": {
                    "text": "            case 'u':\n                /* THIS IS REQUIRED TO BE A 4 DIGIT HEX NUMBER */\n                {\n                    int i, d, cp = 0;\n                    for (i = 0, p++; i < 4 && p < e; i++, p++) {\n                        d = hex_to_int(*p);\n                        if (d < 0) {\n",
                    "rendered": {
                      "text": "            case 'u':\n                /* THIS IS REQUIRED TO BE A 4 DIGIT HEX NUMBER */\n                {\n                    int i, d, cp = 0;\n                    for (i = 0, p++; i < 4 && p < e; i++, p++) {\n                        d = hex_to_int(*p);\n                        if (d < 0) {\n",
                      "markdown": "`            case 'u':\n                /* THIS IS REQUIRED TO BE A 4 DIGIT HEX NUMBER */\n                {\n                    int i, d, cp = 0;\n                    for (i = 0, p++; i < 4 && p < e; i++, p++) {\n                        d = hex_to_int(*p);\n                        if (d < 0) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testmemcache.c"
                },
                "region": {
                  "startLine": 509,
                  "startColumn": 3,
                  "endLine": 509,
                  "endColumn": 11,
                  "snippet": {
                    "text": "    rv = apr_memcache_getp(memcache, pool, prefix, &result, &len, NULL);\n    ABTS_ASSERT(tc, \"get failed\", rv == APR_SUCCESS);\n\n    expect = i + atoi(result);\n\n    rv = apr_memcache_incr(memcache, prefix, i, &new);\n    ABTS_ASSERT(tc, \"incr failed\", rv == APR_SUCCESS);\n",
                    "rendered": {
                      "text": "    rv = apr_memcache_getp(memcache, pool, prefix, &result, &len, NULL);\n    ABTS_ASSERT(tc, \"get failed\", rv == APR_SUCCESS);\n\n    expect = i + atoi(result);\n\n    rv = apr_memcache_incr(memcache, prefix, i, &new);\n    ABTS_ASSERT(tc, \"incr failed\", rv == APR_SUCCESS);\n",
                      "markdown": "`    rv = apr_memcache_getp(memcache, pool, prefix, &result, &len, NULL);\n    ABTS_ASSERT(tc, \"get failed\", rv == APR_SUCCESS);\n\n    expect = i + atoi(result);\n\n    rv = apr_memcache_incr(memcache, prefix, i, &new);\n    ABTS_ASSERT(tc, \"incr failed\", rv == APR_SUCCESS);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testjose.c"
                },
                "region": {
                  "startLine": 1317,
                  "startColumn": 12,
                  "endLine": 1317,
                  "endColumn": 75,
                  "snippet": {
                    "text": "            \"\\\"UGhIOguC7IuEvf_NPVaXsGMoLOmwvc1GyqlIKOK1nN94nHPoltGRhWhw7Zx0-\"\n            \"kFm1NJn8LE9XShH59_i8J0PH5ZZyNfGy2xGdULU7sHNF6Gp2vPLgNZ__deLKx\"\n            \"GHZ7PcHALUzoOegEI-8E66jX2E4zyJKx-YxzZIItRzC5hlRirb6Y5Cl_p-ko3\"\n            \"YvkkysZIFNPccxRU7qve1WYPxqbb2Yw8kZqa2rMWI5ng8OtvzlV7elprCbuPh\"\n            \"cCdZ6XDP0_F8rkXds2vE4X-ncOIM8hAYHHi29NX0mcKiRaD0-D-ljQTP-cFPg\"\n            \"wCp6X-nZZd9OHBv-B3oWh2TbqmScqXMR4gp_A\\\"},\"\n            \"{\\\"header\\\":\"\n",
                    "rendered": {
                      "text": "            \"\\\"UGhIOguC7IuEvf_NPVaXsGMoLOmwvc1GyqlIKOK1nN94nHPoltGRhWhw7Zx0-\"\n            \"kFm1NJn8LE9XShH59_i8J0PH5ZZyNfGy2xGdULU7sHNF6Gp2vPLgNZ__deLKx\"\n            \"GHZ7PcHALUzoOegEI-8E66jX2E4zyJKx-YxzZIItRzC5hlRirb6Y5Cl_p-ko3\"\n            \"YvkkysZIFNPccxRU7qve1WYPxqbb2Yw8kZqa2rMWI5ng8OtvzlV7elprCbuPh\"\n            \"cCdZ6XDP0_F8rkXds2vE4X-ncOIM8hAYHHi29NX0mcKiRaD0-D-ljQTP-cFPg\"\n            \"wCp6X-nZZd9OHBv-B3oWh2TbqmScqXMR4gp_A\\\"},\"\n            \"{\\\"header\\\":\"\n",
                      "markdown": "`            \"\\\"UGhIOguC7IuEvf_NPVaXsGMoLOmwvc1GyqlIKOK1nN94nHPoltGRhWhw7Zx0-\"\n            \"kFm1NJn8LE9XShH59_i8J0PH5ZZyNfGy2xGdULU7sHNF6Gp2vPLgNZ__deLKx\"\n            \"GHZ7PcHALUzoOegEI-8E66jX2E4zyJKx-YxzZIItRzC5hlRirb6Y5Cl_p-ko3\"\n            \"YvkkysZIFNPccxRU7qve1WYPxqbb2Yw8kZqa2rMWI5ng8OtvzlV7elprCbuPh\"\n            \"cCdZ6XDP0_F8rkXds2vE4X-ncOIM8hAYHHi29NX0mcKiRaD0-D-ljQTP-cFPg\"\n            \"wCp6X-nZZd9OHBv-B3oWh2TbqmScqXMR4gp_A\\\"},\"\n            \"{\\\"header\\\":\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testjose.c"
                },
                "region": {
                  "startLine": 1265,
                  "startColumn": 12,
                  "endLine": 1265,
                  "endColumn": 78,
                  "snippet": {
                    "text": "    apr_status_t status;\n\n    const char *source = \"eyJhbGciOiJSU0EtT0FFUCIsImVuYyI6IkEyNTZHQ00ifQ.\"\n            \"OKOawDo13gRp2ojaHV7LFpZcgV7T6DVZKTyKOMTYUmKoTCVJRgckCL9kiMT03JGe\"\n            \"ipsEdY3mx_etLbbWSrFr05kLzcSr4qKAq7YN7e9jwQRb23nfa6c9d-StnImGyFDb\"\n            \"Sv04uVuxIp5Zms1gNxKKK2Da14B8S4rzVRltdYwam_lDp5XnZAYpQdb76FdIKLaV\"\n            \"mqgfwX7XWRxv2322i-vDxRfqNzo_tETKzpVLzfiwQyeyPGLBIO56YJ7eObdv0je8\"\n",
                    "rendered": {
                      "text": "    apr_status_t status;\n\n    const char *source = \"eyJhbGciOiJSU0EtT0FFUCIsImVuYyI6IkEyNTZHQ00ifQ.\"\n            \"OKOawDo13gRp2ojaHV7LFpZcgV7T6DVZKTyKOMTYUmKoTCVJRgckCL9kiMT03JGe\"\n            \"ipsEdY3mx_etLbbWSrFr05kLzcSr4qKAq7YN7e9jwQRb23nfa6c9d-StnImGyFDb\"\n            \"Sv04uVuxIp5Zms1gNxKKK2Da14B8S4rzVRltdYwam_lDp5XnZAYpQdb76FdIKLaV\"\n            \"mqgfwX7XWRxv2322i-vDxRfqNzo_tETKzpVLzfiwQyeyPGLBIO56YJ7eObdv0je8\"\n",
                      "markdown": "`    apr_status_t status;\n\n    const char *source = \"eyJhbGciOiJSU0EtT0FFUCIsImVuYyI6IkEyNTZHQ00ifQ.\"\n            \"OKOawDo13gRp2ojaHV7LFpZcgV7T6DVZKTyKOMTYUmKoTCVJRgckCL9kiMT03JGe\"\n            \"ipsEdY3mx_etLbbWSrFr05kLzcSr4qKAq7YN7e9jwQRb23nfa6c9d-StnImGyFDb\"\n            \"Sv04uVuxIp5Zms1gNxKKK2Da14B8S4rzVRltdYwam_lDp5XnZAYpQdb76FdIKLaV\"\n            \"mqgfwX7XWRxv2322i-vDxRfqNzo_tETKzpVLzfiwQyeyPGLBIO56YJ7eObdv0je8\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testjose.c"
                },
                "region": {
                  "startLine": 1225,
                  "startColumn": 14,
                  "endLine": 1225,
                  "endColumn": 79,
                  "snippet": {
                    "text": "\n    const char *source = \"{\"\n            \"\\\"payload\\\":\"\n            \"\\\"eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGF\"\n            \"tcGxlLmNvbS9pc19yb290Ijp0cnVlfQ\\\",\"\n            \"\\\"protected\\\":\\\"eyJhbGciOiJFUzI1NiJ9\\\",\"\n            \"\\\"header\\\":\"\n",
                    "rendered": {
                      "text": "\n    const char *source = \"{\"\n            \"\\\"payload\\\":\"\n            \"\\\"eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGF\"\n            \"tcGxlLmNvbS9pc19yb290Ijp0cnVlfQ\\\",\"\n            \"\\\"protected\\\":\\\"eyJhbGciOiJFUzI1NiJ9\\\",\"\n            \"\\\"header\\\":\"\n",
                      "markdown": "`\n    const char *source = \"{\"\n            \"\\\"payload\\\":\"\n            \"\\\"eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGF\"\n            \"tcGxlLmNvbS9pc19yb290Ijp0cnVlfQ\\\",\"\n            \"\\\"protected\\\":\\\"eyJhbGciOiJFUzI1NiJ9\\\",\"\n            \"\\\"header\\\":\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testjose.c"
                },
                "region": {
                  "startLine": 1174,
                  "startColumn": 12,
                  "endLine": 1174,
                  "endColumn": 75,
                  "snippet": {
                    "text": "            \"mh7AAuHIm4Bh-0Qc_lF5YKt_O8W2Fp5jujGbds9uJdbF9CUAr7t1dnZcAcQjb\"\n            \"KBYNX4BAynRFdiuB--f_nZLgrnbyTyWzO75vRK5h6xBArLIARNPvkSjtQBMHl\"\n            \"b1L07Qe7K0GarZRmB_eSN9383LcOLn6_dO--xi12jzDwusC-eOkHWEsqtFZES\"\n            \"c6BfI7noOPqvhJ1phCnvWh6IeYI2w9QOYEUipUTI8np6LbgGY9Fs98rqVt5AX\"\n            \"LIhWkWywlVmtVrBp0igcN_IoypGlUPQGe77Rw\\\"},\"\n            \"{\\\"protected\\\":\\\"eyJhbGciOiJFUzI1NiJ9\\\",\"\n            \"\\\"header\\\":\"\n",
                    "rendered": {
                      "text": "            \"mh7AAuHIm4Bh-0Qc_lF5YKt_O8W2Fp5jujGbds9uJdbF9CUAr7t1dnZcAcQjb\"\n            \"KBYNX4BAynRFdiuB--f_nZLgrnbyTyWzO75vRK5h6xBArLIARNPvkSjtQBMHl\"\n            \"b1L07Qe7K0GarZRmB_eSN9383LcOLn6_dO--xi12jzDwusC-eOkHWEsqtFZES\"\n            \"c6BfI7noOPqvhJ1phCnvWh6IeYI2w9QOYEUipUTI8np6LbgGY9Fs98rqVt5AX\"\n            \"LIhWkWywlVmtVrBp0igcN_IoypGlUPQGe77Rw\\\"},\"\n            \"{\\\"protected\\\":\\\"eyJhbGciOiJFUzI1NiJ9\\\",\"\n            \"\\\"header\\\":\"\n",
                      "markdown": "`            \"mh7AAuHIm4Bh-0Qc_lF5YKt_O8W2Fp5jujGbds9uJdbF9CUAr7t1dnZcAcQjb\"\n            \"KBYNX4BAynRFdiuB--f_nZLgrnbyTyWzO75vRK5h6xBArLIARNPvkSjtQBMHl\"\n            \"b1L07Qe7K0GarZRmB_eSN9383LcOLn6_dO--xi12jzDwusC-eOkHWEsqtFZES\"\n            \"c6BfI7noOPqvhJ1phCnvWh6IeYI2w9QOYEUipUTI8np6LbgGY9Fs98rqVt5AX\"\n            \"LIhWkWywlVmtVrBp0igcN_IoypGlUPQGe77Rw\\\"},\"\n            \"{\\\"protected\\\":\\\"eyJhbGciOiJFUzI1NiJ9\\\",\"\n            \"\\\"header\\\":\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testjose.c"
                },
                "region": {
                  "startLine": 1163,
                  "startColumn": 14,
                  "endLine": 1163,
                  "endColumn": 79,
                  "snippet": {
                    "text": "{\n    const char *source = \"{\"\n            \"\\\"payload\\\":\"\n            \"\\\"eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGF\"\n            \"tcGxlLmNvbS9pc19yb290Ijp0cnVlfQ\\\",\"\n            \"\\\"signatures\\\":[\"\n            \"{\\\"protected\\\":\\\"eyJhbGciOiJSUzI1NiJ9\\\",\"\n",
                    "rendered": {
                      "text": "{\n    const char *source = \"{\"\n            \"\\\"payload\\\":\"\n            \"\\\"eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGF\"\n            \"tcGxlLmNvbS9pc19yb290Ijp0cnVlfQ\\\",\"\n            \"\\\"signatures\\\":[\"\n            \"{\\\"protected\\\":\\\"eyJhbGciOiJSUzI1NiJ9\\\",\"\n",
                      "markdown": "`{\n    const char *source = \"{\"\n            \"\\\"payload\\\":\"\n            \"\\\"eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGF\"\n            \"tcGxlLmNvbS9pc19yb290Ijp0cnVlfQ\\\",\"\n            \"\\\"signatures\\\":[\"\n            \"{\\\"protected\\\":\\\"eyJhbGciOiJSUzI1NiJ9\\\",\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testjose.c"
                },
                "region": {
                  "startLine": 1127,
                  "startColumn": 12,
                  "endLine": 1127,
                  "endColumn": 78,
                  "snippet": {
                    "text": "\n    const char *source = \"eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9\"\n            \".\"\n            \"eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFt\"\n            \"cGxlLmNvbS9pc19yb290Ijp0cnVlfQ\"\n            \".\"\n            \"dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk\";\n",
                    "rendered": {
                      "text": "\n    const char *source = \"eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9\"\n            \".\"\n            \"eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFt\"\n            \"cGxlLmNvbS9pc19yb290Ijp0cnVlfQ\"\n            \".\"\n            \"dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk\";\n",
                      "markdown": "`\n    const char *source = \"eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9\"\n            \".\"\n            \"eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFt\"\n            \"cGxlLmNvbS9pc19yb290Ijp0cnVlfQ\"\n            \".\"\n            \"dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk\";\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testjose.c"
                },
                "region": {
                  "startLine": 1125,
                  "startColumn": 25,
                  "endLine": 1125,
                  "endColumn": 67,
                  "snippet": {
                    "text": "    apr_json_kv_t *kv;\n    apr_status_t status;\n\n    const char *source = \"eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9\"\n            \".\"\n            \"eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFt\"\n            \"cGxlLmNvbS9pc19yb290Ijp0cnVlfQ\"\n",
                    "rendered": {
                      "text": "    apr_json_kv_t *kv;\n    apr_status_t status;\n\n    const char *source = \"eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9\"\n            \".\"\n            \"eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFt\"\n            \"cGxlLmNvbS9pc19yb290Ijp0cnVlfQ\"\n",
                      "markdown": "`    apr_json_kv_t *kv;\n    apr_status_t status;\n\n    const char *source = \"eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9\"\n            \".\"\n            \"eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFt\"\n            \"cGxlLmNvbS9pc19yb290Ijp0cnVlfQ\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testjose.c"
                },
                "region": {
                  "startLine": 1086,
                  "startColumn": 12,
                  "endLine": 1086,
                  "endColumn": 78,
                  "snippet": {
                    "text": "\n    const char *source = \"eyJhbGciOiJub25lIn0\"\n            \".\"\n            \"eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFt\"\n            \"cGxlLmNvbS9pc19yb290Ijp0cnVlfQ\"\n            \".\";\n\n",
                    "rendered": {
                      "text": "\n    const char *source = \"eyJhbGciOiJub25lIn0\"\n            \".\"\n            \"eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFt\"\n            \"cGxlLmNvbS9pc19yb290Ijp0cnVlfQ\"\n            \".\";\n\n",
                      "markdown": "`\n    const char *source = \"eyJhbGciOiJub25lIn0\"\n            \".\"\n            \"eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFt\"\n            \"cGxlLmNvbS9pc19yb290Ijp0cnVlfQ\"\n            \".\";\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testjose.c"
                },
                "region": {
                  "startLine": 952,
                  "startColumn": 12,
                  "endLine": 952,
                  "endColumn": 75,
                  "snippet": {
                    "text": "            \"\\\"UGhIOguC7IuEvf_NPVaXsGMoLOmwvc1GyqlIKOK1nN94nHPoltGRhWhw7Zx0-\"\n            \"kFm1NJn8LE9XShH59_i8J0PH5ZZyNfGy2xGdULU7sHNF6Gp2vPLgNZ__deLKx\"\n            \"GHZ7PcHALUzoOegEI-8E66jX2E4zyJKx-YxzZIItRzC5hlRirb6Y5Cl_p-ko3\"\n            \"YvkkysZIFNPccxRU7qve1WYPxqbb2Yw8kZqa2rMWI5ng8OtvzlV7elprCbuPh\"\n            \"cCdZ6XDP0_F8rkXds2vE4X-ncOIM8hAYHHi29NX0mcKiRaD0-D-ljQTP-cFPg\"\n            \"wCp6X-nZZd9OHBv-B3oWh2TbqmScqXMR4gp_A\\\"},\"\n            \"{\\\"header\\\":\"\n",
                    "rendered": {
                      "text": "            \"\\\"UGhIOguC7IuEvf_NPVaXsGMoLOmwvc1GyqlIKOK1nN94nHPoltGRhWhw7Zx0-\"\n            \"kFm1NJn8LE9XShH59_i8J0PH5ZZyNfGy2xGdULU7sHNF6Gp2vPLgNZ__deLKx\"\n            \"GHZ7PcHALUzoOegEI-8E66jX2E4zyJKx-YxzZIItRzC5hlRirb6Y5Cl_p-ko3\"\n            \"YvkkysZIFNPccxRU7qve1WYPxqbb2Yw8kZqa2rMWI5ng8OtvzlV7elprCbuPh\"\n            \"cCdZ6XDP0_F8rkXds2vE4X-ncOIM8hAYHHi29NX0mcKiRaD0-D-ljQTP-cFPg\"\n            \"wCp6X-nZZd9OHBv-B3oWh2TbqmScqXMR4gp_A\\\"},\"\n            \"{\\\"header\\\":\"\n",
                      "markdown": "`            \"\\\"UGhIOguC7IuEvf_NPVaXsGMoLOmwvc1GyqlIKOK1nN94nHPoltGRhWhw7Zx0-\"\n            \"kFm1NJn8LE9XShH59_i8J0PH5ZZyNfGy2xGdULU7sHNF6Gp2vPLgNZ__deLKx\"\n            \"GHZ7PcHALUzoOegEI-8E66jX2E4zyJKx-YxzZIItRzC5hlRirb6Y5Cl_p-ko3\"\n            \"YvkkysZIFNPccxRU7qve1WYPxqbb2Yw8kZqa2rMWI5ng8OtvzlV7elprCbuPh\"\n            \"cCdZ6XDP0_F8rkXds2vE4X-ncOIM8hAYHHi29NX0mcKiRaD0-D-ljQTP-cFPg\"\n            \"wCp6X-nZZd9OHBv-B3oWh2TbqmScqXMR4gp_A\\\"},\"\n            \"{\\\"header\\\":\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testjose.c"
                },
                "region": {
                  "startLine": 874,
                  "startColumn": 12,
                  "endLine": 874,
                  "endColumn": 78,
                  "snippet": {
                    "text": "            109, 97, 103, 105, 110, 97, 116, 105, 111, 110, 46 };\n\n    const char *expect = \"eyJhbGciOiJSU0EtT0FFUCIsImVuYyI6IkEyNTZHQ00ifQ.\"\n            \"OKOawDo13gRp2ojaHV7LFpZcgV7T6DVZKTyKOMTYUmKoTCVJRgckCL9kiMT03JGe\"\n            \"ipsEdY3mx_etLbbWSrFr05kLzcSr4qKAq7YN7e9jwQRb23nfa6c9d-StnImGyFDb\"\n            \"Sv04uVuxIp5Zms1gNxKKK2Da14B8S4rzVRltdYwam_lDp5XnZAYpQdb76FdIKLaV\"\n            \"mqgfwX7XWRxv2322i-vDxRfqNzo_tETKzpVLzfiwQyeyPGLBIO56YJ7eObdv0je8\"\n",
                    "rendered": {
                      "text": "            109, 97, 103, 105, 110, 97, 116, 105, 111, 110, 46 };\n\n    const char *expect = \"eyJhbGciOiJSU0EtT0FFUCIsImVuYyI6IkEyNTZHQ00ifQ.\"\n            \"OKOawDo13gRp2ojaHV7LFpZcgV7T6DVZKTyKOMTYUmKoTCVJRgckCL9kiMT03JGe\"\n            \"ipsEdY3mx_etLbbWSrFr05kLzcSr4qKAq7YN7e9jwQRb23nfa6c9d-StnImGyFDb\"\n            \"Sv04uVuxIp5Zms1gNxKKK2Da14B8S4rzVRltdYwam_lDp5XnZAYpQdb76FdIKLaV\"\n            \"mqgfwX7XWRxv2322i-vDxRfqNzo_tETKzpVLzfiwQyeyPGLBIO56YJ7eObdv0je8\"\n",
                      "markdown": "`            109, 97, 103, 105, 110, 97, 116, 105, 111, 110, 46 };\n\n    const char *expect = \"eyJhbGciOiJSU0EtT0FFUCIsImVuYyI6IkEyNTZHQ00ifQ.\"\n            \"OKOawDo13gRp2ojaHV7LFpZcgV7T6DVZKTyKOMTYUmKoTCVJRgckCL9kiMT03JGe\"\n            \"ipsEdY3mx_etLbbWSrFr05kLzcSr4qKAq7YN7e9jwQRb23nfa6c9d-StnImGyFDb\"\n            \"Sv04uVuxIp5Zms1gNxKKK2Da14B8S4rzVRltdYwam_lDp5XnZAYpQdb76FdIKLaV\"\n            \"mqgfwX7XWRxv2322i-vDxRfqNzo_tETKzpVLzfiwQyeyPGLBIO56YJ7eObdv0je8\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testjose.c"
                },
                "region": {
                  "startLine": 812,
                  "startColumn": 14,
                  "endLine": 812,
                  "endColumn": 79,
                  "snippet": {
                    "text": "\n    const char *expect = \"{\"\n            \"\\\"payload\\\":\"\n            \"\\\"eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGF\"\n            \"tcGxlLmNvbS9pc19yb290Ijp0cnVlfQ\\\",\"\n            \"\\\"protected\\\":\\\"eyJhbGciOiJFUzI1NiJ9\\\",\"\n            \"\\\"header\\\":\"\n",
                    "rendered": {
                      "text": "\n    const char *expect = \"{\"\n            \"\\\"payload\\\":\"\n            \"\\\"eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGF\"\n            \"tcGxlLmNvbS9pc19yb290Ijp0cnVlfQ\\\",\"\n            \"\\\"protected\\\":\\\"eyJhbGciOiJFUzI1NiJ9\\\",\"\n            \"\\\"header\\\":\"\n",
                      "markdown": "`\n    const char *expect = \"{\"\n            \"\\\"payload\\\":\"\n            \"\\\"eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGF\"\n            \"tcGxlLmNvbS9pc19yb290Ijp0cnVlfQ\\\",\"\n            \"\\\"protected\\\":\\\"eyJhbGciOiJFUzI1NiJ9\\\",\"\n            \"\\\"header\\\":\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testjose.c"
                },
                "region": {
                  "startLine": 742,
                  "startColumn": 12,
                  "endLine": 742,
                  "endColumn": 75,
                  "snippet": {
                    "text": "            \"mh7AAuHIm4Bh-0Qc_lF5YKt_O8W2Fp5jujGbds9uJdbF9CUAr7t1dnZcAcQjb\"\n            \"KBYNX4BAynRFdiuB--f_nZLgrnbyTyWzO75vRK5h6xBArLIARNPvkSjtQBMHl\"\n            \"b1L07Qe7K0GarZRmB_eSN9383LcOLn6_dO--xi12jzDwusC-eOkHWEsqtFZES\"\n            \"c6BfI7noOPqvhJ1phCnvWh6IeYI2w9QOYEUipUTI8np6LbgGY9Fs98rqVt5AX\"\n            \"LIhWkWywlVmtVrBp0igcN_IoypGlUPQGe77Rw\\\"},\"\n            \"{\\\"protected\\\":\\\"eyJhbGciOiJFUzI1NiJ9\\\",\"\n            \"\\\"header\\\":\"\n",
                    "rendered": {
                      "text": "            \"mh7AAuHIm4Bh-0Qc_lF5YKt_O8W2Fp5jujGbds9uJdbF9CUAr7t1dnZcAcQjb\"\n            \"KBYNX4BAynRFdiuB--f_nZLgrnbyTyWzO75vRK5h6xBArLIARNPvkSjtQBMHl\"\n            \"b1L07Qe7K0GarZRmB_eSN9383LcOLn6_dO--xi12jzDwusC-eOkHWEsqtFZES\"\n            \"c6BfI7noOPqvhJ1phCnvWh6IeYI2w9QOYEUipUTI8np6LbgGY9Fs98rqVt5AX\"\n            \"LIhWkWywlVmtVrBp0igcN_IoypGlUPQGe77Rw\\\"},\"\n            \"{\\\"protected\\\":\\\"eyJhbGciOiJFUzI1NiJ9\\\",\"\n            \"\\\"header\\\":\"\n",
                      "markdown": "`            \"mh7AAuHIm4Bh-0Qc_lF5YKt_O8W2Fp5jujGbds9uJdbF9CUAr7t1dnZcAcQjb\"\n            \"KBYNX4BAynRFdiuB--f_nZLgrnbyTyWzO75vRK5h6xBArLIARNPvkSjtQBMHl\"\n            \"b1L07Qe7K0GarZRmB_eSN9383LcOLn6_dO--xi12jzDwusC-eOkHWEsqtFZES\"\n            \"c6BfI7noOPqvhJ1phCnvWh6IeYI2w9QOYEUipUTI8np6LbgGY9Fs98rqVt5AX\"\n            \"LIhWkWywlVmtVrBp0igcN_IoypGlUPQGe77Rw\\\"},\"\n            \"{\\\"protected\\\":\\\"eyJhbGciOiJFUzI1NiJ9\\\",\"\n            \"\\\"header\\\":\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testjose.c"
                },
                "region": {
                  "startLine": 731,
                  "startColumn": 14,
                  "endLine": 731,
                  "endColumn": 79,
                  "snippet": {
                    "text": "\n    const char *expect = \"{\"\n            \"\\\"payload\\\":\"\n            \"\\\"eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGF\"\n            \"tcGxlLmNvbS9pc19yb290Ijp0cnVlfQ\\\",\"\n            \"\\\"signatures\\\":[\"\n            \"{\\\"protected\\\":\\\"eyJhbGciOiJSUzI1NiJ9\\\",\"\n",
                    "rendered": {
                      "text": "\n    const char *expect = \"{\"\n            \"\\\"payload\\\":\"\n            \"\\\"eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGF\"\n            \"tcGxlLmNvbS9pc19yb290Ijp0cnVlfQ\\\",\"\n            \"\\\"signatures\\\":[\"\n            \"{\\\"protected\\\":\\\"eyJhbGciOiJSUzI1NiJ9\\\",\"\n",
                      "markdown": "`\n    const char *expect = \"{\"\n            \"\\\"payload\\\":\"\n            \"\\\"eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGF\"\n            \"tcGxlLmNvbS9pc19yb290Ijp0cnVlfQ\\\",\"\n            \"\\\"signatures\\\":[\"\n            \"{\\\"protected\\\":\\\"eyJhbGciOiJSUzI1NiJ9\\\",\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testjose.c"
                },
                "region": {
                  "startLine": 671,
                  "startColumn": 12,
                  "endLine": 671,
                  "endColumn": 78,
                  "snippet": {
                    "text": "                       111, 116, 34, 58, 116, 114, 117, 101, 125};\n    const char *expect = \"eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9\"\n            \".\"\n            \"eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFt\"\n            \"cGxlLmNvbS9pc19yb290Ijp0cnVlfQ\"\n            \".\"\n            \"dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk\";\n",
                    "rendered": {
                      "text": "                       111, 116, 34, 58, 116, 114, 117, 101, 125};\n    const char *expect = \"eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9\"\n            \".\"\n            \"eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFt\"\n            \"cGxlLmNvbS9pc19yb290Ijp0cnVlfQ\"\n            \".\"\n            \"dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk\";\n",
                      "markdown": "`                       111, 116, 34, 58, 116, 114, 117, 101, 125};\n    const char *expect = \"eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9\"\n            \".\"\n            \"eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFt\"\n            \"cGxlLmNvbS9pc19yb290Ijp0cnVlfQ\"\n            \".\"\n            \"dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk\";\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testjose.c"
                },
                "region": {
                  "startLine": 669,
                  "startColumn": 25,
                  "endLine": 669,
                  "endColumn": 67,
                  "snippet": {
                    "text": "                       48, 44, 13, 10, 32, 34, 104, 116, 116, 112, 58, 47, 47, 101, 120, 97,\n                       109, 112, 108, 101, 46, 99, 111, 109, 47, 105, 115, 95, 114, 111,\n                       111, 116, 34, 58, 116, 114, 117, 101, 125};\n    const char *expect = \"eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9\"\n            \".\"\n            \"eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFt\"\n            \"cGxlLmNvbS9pc19yb290Ijp0cnVlfQ\"\n",
                    "rendered": {
                      "text": "                       48, 44, 13, 10, 32, 34, 104, 116, 116, 112, 58, 47, 47, 101, 120, 97,\n                       109, 112, 108, 101, 46, 99, 111, 109, 47, 105, 115, 95, 114, 111,\n                       111, 116, 34, 58, 116, 114, 117, 101, 125};\n    const char *expect = \"eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9\"\n            \".\"\n            \"eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFt\"\n            \"cGxlLmNvbS9pc19yb290Ijp0cnVlfQ\"\n",
                      "markdown": "`                       48, 44, 13, 10, 32, 34, 104, 116, 116, 112, 58, 47, 47, 101, 120, 97,\n                       109, 112, 108, 101, 46, 99, 111, 109, 47, 105, 115, 95, 114, 111,\n                       111, 116, 34, 58, 116, 114, 117, 101, 125};\n    const char *expect = \"eyJ0eXAiOiJKV1QiLA0KICJhbGciOiJIUzI1NiJ9\"\n            \".\"\n            \"eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFt\"\n            \"cGxlLmNvbS9pc19yb290Ijp0cnVlfQ\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testjose.c"
                },
                "region": {
                  "startLine": 618,
                  "startColumn": 12,
                  "endLine": 618,
                  "endColumn": 78,
                  "snippet": {
                    "text": "                       111, 116, 34, 58, 116, 114, 117, 101, 125};\n    const char *expect = \"eyJhbGciOiJub25lIn0\"\n            \".\"\n            \"eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFt\"\n            \"cGxlLmNvbS9pc19yb290Ijp0cnVlfQ\"\n            \".\";\n\n",
                    "rendered": {
                      "text": "                       111, 116, 34, 58, 116, 114, 117, 101, 125};\n    const char *expect = \"eyJhbGciOiJub25lIn0\"\n            \".\"\n            \"eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFt\"\n            \"cGxlLmNvbS9pc19yb290Ijp0cnVlfQ\"\n            \".\";\n\n",
                      "markdown": "`                       111, 116, 34, 58, 116, 114, 117, 101, 125};\n    const char *expect = \"eyJhbGciOiJub25lIn0\"\n            \".\"\n            \"eyJpc3MiOiJqb2UiLA0KICJleHAiOjEzMDA4MTkzODAsDQogImh0dHA6Ly9leGFt\"\n            \"cGxlLmNvbS9pc19yb290Ijp0cnVlfQ\"\n            \".\";\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/NWGNUmemcachedmock"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 25,
                  "endLine": 114,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\n#\n# If this is specified, it will override VERSION value in \n# $(APR_WORK)/build/NWGNUenvironment.inc\n#\nNLM_VERSION\t=\n\n",
                    "rendered": {
                      "text": "\n#\n# If this is specified, it will override VERSION value in \n# $(APR_WORK)/build/NWGNUenvironment.inc\n#\nNLM_VERSION\t=\n\n",
                      "markdown": "`\n#\n# If this is specified, it will override VERSION value in \n# $(APR_WORK)/build/NWGNUenvironment.inc\n#\nNLM_VERSION\t=\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/NWGNUmemcachedmock"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 30,
                  "endLine": 6,
                  "endColumn": 65,
                  "snippet": {
                    "text": "#\n\n#\n# Get the 'head' of the build environment if necessary.  This includes default\n# targets and paths to tools\n#\n\n",
                    "rendered": {
                      "text": "#\n\n#\n# Get the 'head' of the build environment if necessary.  This includes default\n# targets and paths to tools\n#\n\n",
                      "markdown": "`#\n\n#\n# Get the 'head' of the build environment if necessary.  This includes default\n# targets and paths to tools\n#\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/NWGNUmemcachedmock"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 27,
                  "endLine": 15,
                  "endColumn": 31,
                  "snippet": {
                    "text": "endif\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n",
                    "rendered": {
                      "text": "endif\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n",
                      "markdown": "`endif\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/NWGNUmakefile"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 25,
                  "endLine": 123,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\n#\n# If this is specified, it will override VERSION value in\n# $(APR_WORK)/build/NWGNUenvironment.inc\n#\nNLM_VERSION\t=\n\n",
                    "rendered": {
                      "text": "\n#\n# If this is specified, it will override VERSION value in\n# $(APR_WORK)/build/NWGNUenvironment.inc\n#\nNLM_VERSION\t=\n\n",
                      "markdown": "`\n#\n# If this is specified, it will override VERSION value in\n# $(APR_WORK)/build/NWGNUenvironment.inc\n#\nNLM_VERSION\t=\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/NWGNUmakefile"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 30,
                  "endLine": 9,
                  "endColumn": 72,
                  "snippet": {
                    "text": "\t$(EOLIST)\n\n#\n# Get the 'head' of the build environment.  This includes default targets and\n# paths to tools\n#\n\n",
                    "rendered": {
                      "text": "\t$(EOLIST)\n\n#\n# Get the 'head' of the build environment.  This includes default targets and\n# paths to tools\n#\n\n",
                      "markdown": "`\t$(EOLIST)\n\n#\n# Get the 'head' of the build environment.  This includes default targets and\n# paths to tools\n#\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/NWGNUmakefile"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 27,
                  "endLine": 24,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n",
                    "rendered": {
                      "text": "\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n",
                      "markdown": "`\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testldap.c"
                },
                "region": {
                  "startLine": 356,
                  "startColumn": 52,
                  "endLine": 356,
                  "endColumn": 60,
                  "snippet": {
                    "text": "        break;\n    }\n    case APR_LDAP_INTERACT_PASS: {\n        apr_buffer_str_set(&interact->result, \"wrongpassword\", APR_BUFFER_STRING);\n        break;\n    }\n    default:\n",
                    "rendered": {
                      "text": "        break;\n    }\n    case APR_LDAP_INTERACT_PASS: {\n        apr_buffer_str_set(&interact->result, \"wrongpassword\", APR_BUFFER_STRING);\n        break;\n    }\n    default:\n",
                      "markdown": "`        break;\n    }\n    case APR_LDAP_INTERACT_PASS: {\n        apr_buffer_str_set(&interact->result, \"wrongpassword\", APR_BUFFER_STRING);\n        break;\n    }\n    default:\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testdbd.c"
                },
                "region": {
                  "startLine": 220,
                  "startColumn": 35,
                  "endLine": 220,
                  "endColumn": 44,
                  "snippet": {
                    "text": "    ABTS_STR_EQUAL(tc, \"sqlite3\", apr_dbd_name(driver));\n\n    rv = apr_dbd_open(driver, pool, \"data/sqlite3.db\", &handle);\n    ABTS_ASSERT(tc, \"failed to open sqlite3 database\", rv == APR_SUCCESS);\n    ABTS_PTR_NOTNULL(tc, handle);\n    if (!handle) {\n    \treturn;\n",
                    "rendered": {
                      "text": "    ABTS_STR_EQUAL(tc, \"sqlite3\", apr_dbd_name(driver));\n\n    rv = apr_dbd_open(driver, pool, \"data/sqlite3.db\", &handle);\n    ABTS_ASSERT(tc, \"failed to open sqlite3 database\", rv == APR_SUCCESS);\n    ABTS_PTR_NOTNULL(tc, handle);\n    if (!handle) {\n    \treturn;\n",
                      "markdown": "`    ABTS_STR_EQUAL(tc, \"sqlite3\", apr_dbd_name(driver));\n\n    rv = apr_dbd_open(driver, pool, \"data/sqlite3.db\", &handle);\n    ABTS_ASSERT(tc, \"failed to open sqlite3 database\", rv == APR_SUCCESS);\n    ABTS_PTR_NOTNULL(tc, handle);\n    if (!handle) {\n    \treturn;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testdbd.c"
                },
                "region": {
                  "startLine": 211,
                  "startColumn": 36,
                  "endLine": 211,
                  "endColumn": 45,
                  "snippet": {
                    "text": "    apr_dbd_t* handle = NULL;\n\n    rv = apr_dbd_get_driver(pool, \"sqlite3\", &driver);\n    ABTS_ASSERT(tc, \"failed to fetch sqlite3 driver\", rv == APR_SUCCESS);\n    ABTS_PTR_NOTNULL(tc, driver);\n    if (!driver) {\n    \treturn;\n",
                    "rendered": {
                      "text": "    apr_dbd_t* handle = NULL;\n\n    rv = apr_dbd_get_driver(pool, \"sqlite3\", &driver);\n    ABTS_ASSERT(tc, \"failed to fetch sqlite3 driver\", rv == APR_SUCCESS);\n    ABTS_PTR_NOTNULL(tc, driver);\n    if (!driver) {\n    \treturn;\n",
                      "markdown": "`    apr_dbd_t* handle = NULL;\n\n    rv = apr_dbd_get_driver(pool, \"sqlite3\", &driver);\n    ABTS_ASSERT(tc, \"failed to fetch sqlite3 driver\", rv == APR_SUCCESS);\n    ABTS_PTR_NOTNULL(tc, driver);\n    if (!driver) {\n    \treturn;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testredis.c"
                },
                "region": {
                  "startLine": 437,
                  "startColumn": 3,
                  "endLine": 437,
                  "endColumn": 11,
                  "snippet": {
                    "text": "    rv = apr_redis_getp(redis, pool, prefix, &result, &len, NULL);\n    ABTS_ASSERT(tc, \"get failed\", rv == APR_SUCCESS);\n\n    expect = i + atoi(result);\n\n    rv = apr_redis_incr(redis, prefix, i, &new);\n    ABTS_ASSERT(tc, \"incr failed\", rv == APR_SUCCESS);\n",
                    "rendered": {
                      "text": "    rv = apr_redis_getp(redis, pool, prefix, &result, &len, NULL);\n    ABTS_ASSERT(tc, \"get failed\", rv == APR_SUCCESS);\n\n    expect = i + atoi(result);\n\n    rv = apr_redis_incr(redis, prefix, i, &new);\n    ABTS_ASSERT(tc, \"incr failed\", rv == APR_SUCCESS);\n",
                      "markdown": "`    rv = apr_redis_getp(redis, pool, prefix, &result, &len, NULL);\n    ABTS_ASSERT(tc, \"get failed\", rv == APR_SUCCESS);\n\n    expect = i + atoi(result);\n\n    rv = apr_redis_incr(redis, prefix, i, &new);\n    ABTS_ASSERT(tc, \"incr failed\", rv == APR_SUCCESS);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 195,
                  "startColumn": 27,
                  "endLine": 195,
                  "endColumn": 35,
                  "snippet": {
                    "text": "    APR_ASSERT_FAILURE(tc, \"wrong bcrypt password should not validate\",\n                       apr_password_validate(pass2, hash));\n    apr_assert_success(tc, \"bcrypt password validated\",\n                       apr_password_validate(pass3, hash2));\n}\n\n\n",
                    "rendered": {
                      "text": "    APR_ASSERT_FAILURE(tc, \"wrong bcrypt password should not validate\",\n                       apr_password_validate(pass2, hash));\n    apr_assert_success(tc, \"bcrypt password validated\",\n                       apr_password_validate(pass3, hash2));\n}\n\n\n",
                      "markdown": "`    APR_ASSERT_FAILURE(tc, \"wrong bcrypt password should not validate\",\n                       apr_password_validate(pass2, hash));\n    apr_assert_success(tc, \"bcrypt password validated\",\n                       apr_password_validate(pass3, hash2));\n}\n\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 194,
                  "startColumn": 35,
                  "endLine": 194,
                  "endColumn": 43,
                  "snippet": {
                    "text": "                       apr_password_validate(pass, hash));\n    APR_ASSERT_FAILURE(tc, \"wrong bcrypt password should not validate\",\n                       apr_password_validate(pass2, hash));\n    apr_assert_success(tc, \"bcrypt password validated\",\n                       apr_password_validate(pass3, hash2));\n}\n\n",
                    "rendered": {
                      "text": "                       apr_password_validate(pass, hash));\n    APR_ASSERT_FAILURE(tc, \"wrong bcrypt password should not validate\",\n                       apr_password_validate(pass2, hash));\n    apr_assert_success(tc, \"bcrypt password validated\",\n                       apr_password_validate(pass3, hash2));\n}\n\n",
                      "markdown": "`                       apr_password_validate(pass, hash));\n    APR_ASSERT_FAILURE(tc, \"wrong bcrypt password should not validate\",\n                       apr_password_validate(pass2, hash));\n    apr_assert_success(tc, \"bcrypt password validated\",\n                       apr_password_validate(pass3, hash2));\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 193,
                  "startColumn": 27,
                  "endLine": 193,
                  "endColumn": 35,
                  "snippet": {
                    "text": "    apr_assert_success(tc, \"bcrypt password validated\",\n                       apr_password_validate(pass, hash));\n    APR_ASSERT_FAILURE(tc, \"wrong bcrypt password should not validate\",\n                       apr_password_validate(pass2, hash));\n    apr_assert_success(tc, \"bcrypt password validated\",\n                       apr_password_validate(pass3, hash2));\n}\n",
                    "rendered": {
                      "text": "    apr_assert_success(tc, \"bcrypt password validated\",\n                       apr_password_validate(pass, hash));\n    APR_ASSERT_FAILURE(tc, \"wrong bcrypt password should not validate\",\n                       apr_password_validate(pass2, hash));\n    apr_assert_success(tc, \"bcrypt password validated\",\n                       apr_password_validate(pass3, hash2));\n}\n",
                      "markdown": "`    apr_assert_success(tc, \"bcrypt password validated\",\n                       apr_password_validate(pass, hash));\n    APR_ASSERT_FAILURE(tc, \"wrong bcrypt password should not validate\",\n                       apr_password_validate(pass2, hash));\n    apr_assert_success(tc, \"bcrypt password validated\",\n                       apr_password_validate(pass3, hash2));\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 192,
                  "startColumn": 41,
                  "endLine": 192,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\n    apr_assert_success(tc, \"bcrypt password validated\",\n                       apr_password_validate(pass, hash));\n    APR_ASSERT_FAILURE(tc, \"wrong bcrypt password should not validate\",\n                       apr_password_validate(pass2, hash));\n    apr_assert_success(tc, \"bcrypt password validated\",\n                       apr_password_validate(pass3, hash2));\n",
                    "rendered": {
                      "text": "\n    apr_assert_success(tc, \"bcrypt password validated\",\n                       apr_password_validate(pass, hash));\n    APR_ASSERT_FAILURE(tc, \"wrong bcrypt password should not validate\",\n                       apr_password_validate(pass2, hash));\n    apr_assert_success(tc, \"bcrypt password validated\",\n                       apr_password_validate(pass3, hash2));\n",
                      "markdown": "`\n    apr_assert_success(tc, \"bcrypt password validated\",\n                       apr_password_validate(pass, hash));\n    APR_ASSERT_FAILURE(tc, \"wrong bcrypt password should not validate\",\n                       apr_password_validate(pass2, hash));\n    apr_assert_success(tc, \"bcrypt password validated\",\n                       apr_password_validate(pass3, hash2));\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 191,
                  "startColumn": 27,
                  "endLine": 191,
                  "endColumn": 35,
                  "snippet": {
                    "text": "                                         sizeof(hash)));\n\n    apr_assert_success(tc, \"bcrypt password validated\",\n                       apr_password_validate(pass, hash));\n    APR_ASSERT_FAILURE(tc, \"wrong bcrypt password should not validate\",\n                       apr_password_validate(pass2, hash));\n    apr_assert_success(tc, \"bcrypt password validated\",\n",
                    "rendered": {
                      "text": "                                         sizeof(hash)));\n\n    apr_assert_success(tc, \"bcrypt password validated\",\n                       apr_password_validate(pass, hash));\n    APR_ASSERT_FAILURE(tc, \"wrong bcrypt password should not validate\",\n                       apr_password_validate(pass2, hash));\n    apr_assert_success(tc, \"bcrypt password validated\",\n",
                      "markdown": "`                                         sizeof(hash)));\n\n    apr_assert_success(tc, \"bcrypt password validated\",\n                       apr_password_validate(pass, hash));\n    APR_ASSERT_FAILURE(tc, \"wrong bcrypt password should not validate\",\n                       apr_password_validate(pass2, hash));\n    apr_assert_success(tc, \"bcrypt password validated\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 190,
                  "startColumn": 35,
                  "endLine": 190,
                  "endColumn": 43,
                  "snippet": {
                    "text": "                       apr_bcrypt_encode(pass, 5, salt, sizeof(salt), hash,\n                                         sizeof(hash)));\n\n    apr_assert_success(tc, \"bcrypt password validated\",\n                       apr_password_validate(pass, hash));\n    APR_ASSERT_FAILURE(tc, \"wrong bcrypt password should not validate\",\n                       apr_password_validate(pass2, hash));\n",
                    "rendered": {
                      "text": "                       apr_bcrypt_encode(pass, 5, salt, sizeof(salt), hash,\n                                         sizeof(hash)));\n\n    apr_assert_success(tc, \"bcrypt password validated\",\n                       apr_password_validate(pass, hash));\n    APR_ASSERT_FAILURE(tc, \"wrong bcrypt password should not validate\",\n                       apr_password_validate(pass2, hash));\n",
                      "markdown": "`                       apr_bcrypt_encode(pass, 5, salt, sizeof(salt), hash,\n                                         sizeof(hash)));\n\n    apr_assert_success(tc, \"bcrypt password validated\",\n                       apr_password_validate(pass, hash));\n    APR_ASSERT_FAILURE(tc, \"wrong bcrypt password should not validate\",\n                       apr_password_validate(pass2, hash));\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 186,
                  "startColumn": 42,
                  "endLine": 186,
                  "endColumn": 50,
                  "snippet": {
                    "text": "    const char *hash2 = \"$2a$08$qipUJiI9fySUN38hcbz.lucXvAmtgowKOWYtB9y3CXyl6lTknruou\";\n    const char *pass3 = \"foobar\";\n\n    apr_assert_success(tc, \"bcrypt encode password\", \n                       apr_bcrypt_encode(pass, 5, salt, sizeof(salt), hash,\n                                         sizeof(hash)));\n\n",
                    "rendered": {
                      "text": "    const char *hash2 = \"$2a$08$qipUJiI9fySUN38hcbz.lucXvAmtgowKOWYtB9y3CXyl6lTknruou\";\n    const char *pass3 = \"foobar\";\n\n    apr_assert_success(tc, \"bcrypt encode password\", \n                       apr_bcrypt_encode(pass, 5, salt, sizeof(salt), hash,\n                                         sizeof(hash)));\n\n",
                      "markdown": "`    const char *hash2 = \"$2a$08$qipUJiI9fySUN38hcbz.lucXvAmtgowKOWYtB9y3CXyl6lTknruou\";\n    const char *pass3 = \"foobar\";\n\n    apr_assert_success(tc, \"bcrypt encode password\", \n                       apr_bcrypt_encode(pass, 5, salt, sizeof(salt), hash,\n                                         sizeof(hash)));\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 170,
                  "startColumn": 66,
                  "endLine": 170,
                  "endColumn": 74,
                  "snippet": {
                    "text": "    int i = 0;\n    while (glibc_sha_pws[i].password) {\n        apr_assert_success(tc, \"check for valid glibc crypt-sha password\",\n                           apr_password_validate(glibc_sha_pws[i].password,\n                                                 glibc_sha_pws[i].hash));\n        i++;\n    }\n",
                    "rendered": {
                      "text": "    int i = 0;\n    while (glibc_sha_pws[i].password) {\n        apr_assert_success(tc, \"check for valid glibc crypt-sha password\",\n                           apr_password_validate(glibc_sha_pws[i].password,\n                                                 glibc_sha_pws[i].hash));\n        i++;\n    }\n",
                      "markdown": "`    int i = 0;\n    while (glibc_sha_pws[i].password) {\n        apr_assert_success(tc, \"check for valid glibc crypt-sha password\",\n                           apr_password_validate(glibc_sha_pws[i].password,\n                                                 glibc_sha_pws[i].hash));\n        i++;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 170,
                  "startColumn": 31,
                  "endLine": 170,
                  "endColumn": 39,
                  "snippet": {
                    "text": "    int i = 0;\n    while (glibc_sha_pws[i].password) {\n        apr_assert_success(tc, \"check for valid glibc crypt-sha password\",\n                           apr_password_validate(glibc_sha_pws[i].password,\n                                                 glibc_sha_pws[i].hash));\n        i++;\n    }\n",
                    "rendered": {
                      "text": "    int i = 0;\n    while (glibc_sha_pws[i].password) {\n        apr_assert_success(tc, \"check for valid glibc crypt-sha password\",\n                           apr_password_validate(glibc_sha_pws[i].password,\n                                                 glibc_sha_pws[i].hash));\n        i++;\n    }\n",
                      "markdown": "`    int i = 0;\n    while (glibc_sha_pws[i].password) {\n        apr_assert_success(tc, \"check for valid glibc crypt-sha password\",\n                           apr_password_validate(glibc_sha_pws[i].password,\n                                                 glibc_sha_pws[i].hash));\n        i++;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 169,
                  "startColumn": 64,
                  "endLine": 169,
                  "endColumn": 72,
                  "snippet": {
                    "text": "{\n    int i = 0;\n    while (glibc_sha_pws[i].password) {\n        apr_assert_success(tc, \"check for valid glibc crypt-sha password\",\n                           apr_password_validate(glibc_sha_pws[i].password,\n                                                 glibc_sha_pws[i].hash));\n        i++;\n",
                    "rendered": {
                      "text": "{\n    int i = 0;\n    while (glibc_sha_pws[i].password) {\n        apr_assert_success(tc, \"check for valid glibc crypt-sha password\",\n                           apr_password_validate(glibc_sha_pws[i].password,\n                                                 glibc_sha_pws[i].hash));\n        i++;\n",
                      "markdown": "`{\n    int i = 0;\n    while (glibc_sha_pws[i].password) {\n        apr_assert_success(tc, \"check for valid glibc crypt-sha password\",\n                           apr_password_validate(glibc_sha_pws[i].password,\n                                                 glibc_sha_pws[i].hash));\n        i++;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 168,
                  "startColumn": 28,
                  "endLine": 168,
                  "endColumn": 36,
                  "snippet": {
                    "text": "static void test_glibc_shapass(abts_case *tc, void *data)\n{\n    int i = 0;\n    while (glibc_sha_pws[i].password) {\n        apr_assert_success(tc, \"check for valid glibc crypt-sha password\",\n                           apr_password_validate(glibc_sha_pws[i].password,\n                                                 glibc_sha_pws[i].hash));\n",
                    "rendered": {
                      "text": "static void test_glibc_shapass(abts_case *tc, void *data)\n{\n    int i = 0;\n    while (glibc_sha_pws[i].password) {\n        apr_assert_success(tc, \"check for valid glibc crypt-sha password\",\n                           apr_password_validate(glibc_sha_pws[i].password,\n                                                 glibc_sha_pws[i].hash));\n",
                      "markdown": "`static void test_glibc_shapass(abts_case *tc, void *data)\n{\n    int i = 0;\n    while (glibc_sha_pws[i].password) {\n        apr_assert_success(tc, \"check for valid glibc crypt-sha password\",\n                           apr_password_validate(glibc_sha_pws[i].password,\n                                                 glibc_sha_pws[i].hash));\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 153,
                  "startColumn": 16,
                  "endLine": 153,
                  "endColumn": 24,
                  "snippet": {
                    "text": "#ifdef GLIBCSHA_ALGO_SUPPORTED\n\nstatic struct {\n    const char *password;\n    const char *hash;\n} glibc_sha_pws[] = {\n    /* SHA256 */\n",
                    "rendered": {
                      "text": "#ifdef GLIBCSHA_ALGO_SUPPORTED\n\nstatic struct {\n    const char *password;\n    const char *hash;\n} glibc_sha_pws[] = {\n    /* SHA256 */\n",
                      "markdown": "`#ifdef GLIBCSHA_ALGO_SUPPORTED\n\nstatic struct {\n    const char *password;\n    const char *hash;\n} glibc_sha_pws[] = {\n    /* SHA256 */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 27,
                  "endLine": 147,
                  "endColumn": 35,
                  "snippet": {
                    "text": "    apr_assert_success(tc, \"MD5 password validated\",\n                       apr_password_validate(pass, hash));\n    APR_ASSERT_FAILURE(tc, \"wrong MD5 password should not validate\",\n                       apr_password_validate(pass2, hash));\n}\n\n#ifdef GLIBCSHA_ALGO_SUPPORTED\n",
                    "rendered": {
                      "text": "    apr_assert_success(tc, \"MD5 password validated\",\n                       apr_password_validate(pass, hash));\n    APR_ASSERT_FAILURE(tc, \"wrong MD5 password should not validate\",\n                       apr_password_validate(pass2, hash));\n}\n\n#ifdef GLIBCSHA_ALGO_SUPPORTED\n",
                      "markdown": "`    apr_assert_success(tc, \"MD5 password validated\",\n                       apr_password_validate(pass, hash));\n    APR_ASSERT_FAILURE(tc, \"wrong MD5 password should not validate\",\n                       apr_password_validate(pass2, hash));\n}\n\n#ifdef GLIBCSHA_ALGO_SUPPORTED\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 146,
                  "startColumn": 38,
                  "endLine": 146,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\n    apr_assert_success(tc, \"MD5 password validated\",\n                       apr_password_validate(pass, hash));\n    APR_ASSERT_FAILURE(tc, \"wrong MD5 password should not validate\",\n                       apr_password_validate(pass2, hash));\n}\n\n",
                    "rendered": {
                      "text": "\n    apr_assert_success(tc, \"MD5 password validated\",\n                       apr_password_validate(pass, hash));\n    APR_ASSERT_FAILURE(tc, \"wrong MD5 password should not validate\",\n                       apr_password_validate(pass2, hash));\n}\n\n",
                      "markdown": "`\n    apr_assert_success(tc, \"MD5 password validated\",\n                       apr_password_validate(pass, hash));\n    APR_ASSERT_FAILURE(tc, \"wrong MD5 password should not validate\",\n                       apr_password_validate(pass2, hash));\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 27,
                  "endLine": 145,
                  "endColumn": 35,
                  "snippet": {
                    "text": "    apr_md5_encode(pass, salt, hash, sizeof hash);\n\n    apr_assert_success(tc, \"MD5 password validated\",\n                       apr_password_validate(pass, hash));\n    APR_ASSERT_FAILURE(tc, \"wrong MD5 password should not validate\",\n                       apr_password_validate(pass2, hash));\n}\n",
                    "rendered": {
                      "text": "    apr_md5_encode(pass, salt, hash, sizeof hash);\n\n    apr_assert_success(tc, \"MD5 password validated\",\n                       apr_password_validate(pass, hash));\n    APR_ASSERT_FAILURE(tc, \"wrong MD5 password should not validate\",\n                       apr_password_validate(pass2, hash));\n}\n",
                      "markdown": "`    apr_md5_encode(pass, salt, hash, sizeof hash);\n\n    apr_assert_success(tc, \"MD5 password validated\",\n                       apr_password_validate(pass, hash));\n    APR_ASSERT_FAILURE(tc, \"wrong MD5 password should not validate\",\n                       apr_password_validate(pass2, hash));\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 32,
                  "endLine": 144,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\n    apr_md5_encode(pass, salt, hash, sizeof hash);\n\n    apr_assert_success(tc, \"MD5 password validated\",\n                       apr_password_validate(pass, hash));\n    APR_ASSERT_FAILURE(tc, \"wrong MD5 password should not validate\",\n                       apr_password_validate(pass2, hash));\n",
                    "rendered": {
                      "text": "\n    apr_md5_encode(pass, salt, hash, sizeof hash);\n\n    apr_assert_success(tc, \"MD5 password validated\",\n                       apr_password_validate(pass, hash));\n    APR_ASSERT_FAILURE(tc, \"wrong MD5 password should not validate\",\n                       apr_password_validate(pass2, hash));\n",
                      "markdown": "`\n    apr_md5_encode(pass, salt, hash, sizeof hash);\n\n    apr_assert_success(tc, \"MD5 password validated\",\n                       apr_password_validate(pass, hash));\n    APR_ASSERT_FAILURE(tc, \"wrong MD5 password should not validate\",\n                       apr_password_validate(pass2, hash));\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 27,
                  "endLine": 133,
                  "endColumn": 35,
                  "snippet": {
                    "text": "    apr_assert_success(tc, \"SHA1 password validated\",\n                       apr_password_validate(pass, hash));\n    APR_ASSERT_FAILURE(tc, \"wrong SHA1 password should not validate\",\n                       apr_password_validate(pass2, hash));\n}\n\nstatic void test_md5pass(abts_case *tc, void *data)\n",
                    "rendered": {
                      "text": "    apr_assert_success(tc, \"SHA1 password validated\",\n                       apr_password_validate(pass, hash));\n    APR_ASSERT_FAILURE(tc, \"wrong SHA1 password should not validate\",\n                       apr_password_validate(pass2, hash));\n}\n\nstatic void test_md5pass(abts_case *tc, void *data)\n",
                      "markdown": "`    apr_assert_success(tc, \"SHA1 password validated\",\n                       apr_password_validate(pass, hash));\n    APR_ASSERT_FAILURE(tc, \"wrong SHA1 password should not validate\",\n                       apr_password_validate(pass2, hash));\n}\n\nstatic void test_md5pass(abts_case *tc, void *data)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 132,
                  "startColumn": 39,
                  "endLine": 132,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\n    apr_assert_success(tc, \"SHA1 password validated\",\n                       apr_password_validate(pass, hash));\n    APR_ASSERT_FAILURE(tc, \"wrong SHA1 password should not validate\",\n                       apr_password_validate(pass2, hash));\n}\n\n",
                    "rendered": {
                      "text": "\n    apr_assert_success(tc, \"SHA1 password validated\",\n                       apr_password_validate(pass, hash));\n    APR_ASSERT_FAILURE(tc, \"wrong SHA1 password should not validate\",\n                       apr_password_validate(pass2, hash));\n}\n\n",
                      "markdown": "`\n    apr_assert_success(tc, \"SHA1 password validated\",\n                       apr_password_validate(pass, hash));\n    APR_ASSERT_FAILURE(tc, \"wrong SHA1 password should not validate\",\n                       apr_password_validate(pass2, hash));\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 27,
                  "endLine": 131,
                  "endColumn": 35,
                  "snippet": {
                    "text": "    apr_sha1_base64(pass, strlen(pass), hash);\n\n    apr_assert_success(tc, \"SHA1 password validated\",\n                       apr_password_validate(pass, hash));\n    APR_ASSERT_FAILURE(tc, \"wrong SHA1 password should not validate\",\n                       apr_password_validate(pass2, hash));\n}\n",
                    "rendered": {
                      "text": "    apr_sha1_base64(pass, strlen(pass), hash);\n\n    apr_assert_success(tc, \"SHA1 password validated\",\n                       apr_password_validate(pass, hash));\n    APR_ASSERT_FAILURE(tc, \"wrong SHA1 password should not validate\",\n                       apr_password_validate(pass2, hash));\n}\n",
                      "markdown": "`    apr_sha1_base64(pass, strlen(pass), hash);\n\n    apr_assert_success(tc, \"SHA1 password validated\",\n                       apr_password_validate(pass, hash));\n    APR_ASSERT_FAILURE(tc, \"wrong SHA1 password should not validate\",\n                       apr_password_validate(pass2, hash));\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 33,
                  "endLine": 130,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\n    apr_sha1_base64(pass, strlen(pass), hash);\n\n    apr_assert_success(tc, \"SHA1 password validated\",\n                       apr_password_validate(pass, hash));\n    APR_ASSERT_FAILURE(tc, \"wrong SHA1 password should not validate\",\n                       apr_password_validate(pass2, hash));\n",
                    "rendered": {
                      "text": "\n    apr_sha1_base64(pass, strlen(pass), hash);\n\n    apr_assert_success(tc, \"SHA1 password validated\",\n                       apr_password_validate(pass, hash));\n    APR_ASSERT_FAILURE(tc, \"wrong SHA1 password should not validate\",\n                       apr_password_validate(pass2, hash));\n",
                      "markdown": "`\n    apr_sha1_base64(pass, strlen(pass), hash);\n\n    apr_assert_success(tc, \"SHA1 password validated\",\n                       apr_password_validate(pass, hash));\n    APR_ASSERT_FAILURE(tc, \"wrong SHA1 password should not validate\",\n                       apr_password_validate(pass2, hash));\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 49,
                  "endLine": 80,
                  "endColumn": 57,
                  "snippet": {
                    "text": "    for (i = 0; i < num_passwords; i++) {\n        apr_assert_success(tc, \"check for valid password\",\n                           apr_password_validate(passwords[i].password,\n                                                 passwords[i].hash));\n    }\n}\n\n",
                    "rendered": {
                      "text": "    for (i = 0; i < num_passwords; i++) {\n        apr_assert_success(tc, \"check for valid password\",\n                           apr_password_validate(passwords[i].password,\n                                                 passwords[i].hash));\n    }\n}\n\n",
                      "markdown": "`    for (i = 0; i < num_passwords; i++) {\n        apr_assert_success(tc, \"check for valid password\",\n                           apr_password_validate(passwords[i].password,\n                                                 passwords[i].hash));\n    }\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 62,
                  "endLine": 79,
                  "endColumn": 70,
                  "snippet": {
                    "text": "\n    for (i = 0; i < num_passwords; i++) {\n        apr_assert_success(tc, \"check for valid password\",\n                           apr_password_validate(passwords[i].password,\n                                                 passwords[i].hash));\n    }\n}\n",
                    "rendered": {
                      "text": "\n    for (i = 0; i < num_passwords; i++) {\n        apr_assert_success(tc, \"check for valid password\",\n                           apr_password_validate(passwords[i].password,\n                                                 passwords[i].hash));\n    }\n}\n",
                      "markdown": "`\n    for (i = 0; i < num_passwords; i++) {\n        apr_assert_success(tc, \"check for valid password\",\n                           apr_password_validate(passwords[i].password,\n                                                 passwords[i].hash));\n    }\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 49,
                  "endLine": 79,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\n    for (i = 0; i < num_passwords; i++) {\n        apr_assert_success(tc, \"check for valid password\",\n                           apr_password_validate(passwords[i].password,\n                                                 passwords[i].hash));\n    }\n}\n",
                    "rendered": {
                      "text": "\n    for (i = 0; i < num_passwords; i++) {\n        apr_assert_success(tc, \"check for valid password\",\n                           apr_password_validate(passwords[i].password,\n                                                 passwords[i].hash));\n    }\n}\n",
                      "markdown": "`\n    for (i = 0; i < num_passwords; i++) {\n        apr_assert_success(tc, \"check for valid password\",\n                           apr_password_validate(passwords[i].password,\n                                                 passwords[i].hash));\n    }\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 31,
                  "endLine": 79,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\n    for (i = 0; i < num_passwords; i++) {\n        apr_assert_success(tc, \"check for valid password\",\n                           apr_password_validate(passwords[i].password,\n                                                 passwords[i].hash));\n    }\n}\n",
                    "rendered": {
                      "text": "\n    for (i = 0; i < num_passwords; i++) {\n        apr_assert_success(tc, \"check for valid password\",\n                           apr_password_validate(passwords[i].password,\n                                                 passwords[i].hash));\n    }\n}\n",
                      "markdown": "`\n    for (i = 0; i < num_passwords; i++) {\n        apr_assert_success(tc, \"check for valid password\",\n                           apr_password_validate(passwords[i].password,\n                                                 passwords[i].hash));\n    }\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 48,
                  "endLine": 78,
                  "endColumn": 56,
                  "snippet": {
                    "text": "    int i;\n\n    for (i = 0; i < num_passwords; i++) {\n        apr_assert_success(tc, \"check for valid password\",\n                           apr_password_validate(passwords[i].password,\n                                                 passwords[i].hash));\n    }\n",
                    "rendered": {
                      "text": "    int i;\n\n    for (i = 0; i < num_passwords; i++) {\n        apr_assert_success(tc, \"check for valid password\",\n                           apr_password_validate(passwords[i].password,\n                                                 passwords[i].hash));\n    }\n",
                      "markdown": "`    int i;\n\n    for (i = 0; i < num_passwords; i++) {\n        apr_assert_success(tc, \"check for valid password\",\n                           apr_password_validate(passwords[i].password,\n                                                 passwords[i].hash));\n    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 24,
                  "endLine": 77,
                  "endColumn": 32,
                  "snippet": {
                    "text": "{\n    int i;\n\n    for (i = 0; i < num_passwords; i++) {\n        apr_assert_success(tc, \"check for valid password\",\n                           apr_password_validate(passwords[i].password,\n                                                 passwords[i].hash));\n",
                    "rendered": {
                      "text": "{\n    int i;\n\n    for (i = 0; i < num_passwords; i++) {\n        apr_assert_success(tc, \"check for valid password\",\n                           apr_password_validate(passwords[i].password,\n                                                 passwords[i].hash));\n",
                      "markdown": "`{\n    int i;\n\n    for (i = 0; i < num_passwords; i++) {\n        apr_assert_success(tc, \"check for valid password\",\n                           apr_password_validate(passwords[i].password,\n                                                 passwords[i].hash));\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 54,
                  "endLine": 71,
                  "endColumn": 62,
                  "snippet": {
                    "text": "    {\"pass7\", \"nHQ3BbF0Y9vpI\"},\n    {\"pass8\", \"nHZA1rViSldQk\"}\n};\nstatic int num_passwords = sizeof(passwords) / sizeof(passwords[0]);\n\nstatic void test_crypt(abts_case *tc, void *data)\n{\n",
                    "rendered": {
                      "text": "    {\"pass7\", \"nHQ3BbF0Y9vpI\"},\n    {\"pass8\", \"nHZA1rViSldQk\"}\n};\nstatic int num_passwords = sizeof(passwords) / sizeof(passwords[0]);\n\nstatic void test_crypt(abts_case *tc, void *data)\n{\n",
                      "markdown": "`    {\"pass7\", \"nHQ3BbF0Y9vpI\"},\n    {\"pass8\", \"nHZA1rViSldQk\"}\n};\nstatic int num_passwords = sizeof(passwords) / sizeof(passwords[0]);\n\nstatic void test_crypt(abts_case *tc, void *data)\n{\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 34,
                  "endLine": 71,
                  "endColumn": 42,
                  "snippet": {
                    "text": "    {\"pass7\", \"nHQ3BbF0Y9vpI\"},\n    {\"pass8\", \"nHZA1rViSldQk\"}\n};\nstatic int num_passwords = sizeof(passwords) / sizeof(passwords[0]);\n\nstatic void test_crypt(abts_case *tc, void *data)\n{\n",
                    "rendered": {
                      "text": "    {\"pass7\", \"nHQ3BbF0Y9vpI\"},\n    {\"pass8\", \"nHZA1rViSldQk\"}\n};\nstatic int num_passwords = sizeof(passwords) / sizeof(passwords[0]);\n\nstatic void test_crypt(abts_case *tc, void *data)\n{\n",
                      "markdown": "`    {\"pass7\", \"nHQ3BbF0Y9vpI\"},\n    {\"pass8\", \"nHZA1rViSldQk\"}\n};\nstatic int num_passwords = sizeof(passwords) / sizeof(passwords[0]);\n\nstatic void test_crypt(abts_case *tc, void *data)\n{\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 15,
                  "endLine": 71,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    {\"pass7\", \"nHQ3BbF0Y9vpI\"},\n    {\"pass8\", \"nHZA1rViSldQk\"}\n};\nstatic int num_passwords = sizeof(passwords) / sizeof(passwords[0]);\n\nstatic void test_crypt(abts_case *tc, void *data)\n{\n",
                    "rendered": {
                      "text": "    {\"pass7\", \"nHQ3BbF0Y9vpI\"},\n    {\"pass8\", \"nHZA1rViSldQk\"}\n};\nstatic int num_passwords = sizeof(passwords) / sizeof(passwords[0]);\n\nstatic void test_crypt(abts_case *tc, void *data)\n{\n",
                      "markdown": "`    {\"pass7\", \"nHQ3BbF0Y9vpI\"},\n    {\"pass8\", \"nHZA1rViSldQk\"}\n};\nstatic int num_passwords = sizeof(passwords) / sizeof(passwords[0]);\n\nstatic void test_crypt(abts_case *tc, void *data)\n{\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 14,
                  "endLine": 59,
                  "endColumn": 22,
                  "snippet": {
                    "text": "  htpasswd -b passwords pass5 pass5\n  htpasswd -b passwords pass6 pass6\n  htpasswd -b passwords pass7 pass7\n  htpasswd -b passwords pass8 pass8\n  (insert Perl one-liner to convert to initializer :) )\n */\n    {\"pass1\", \"1fWDc9QWYCWrQ\"},\n",
                    "rendered": {
                      "text": "  htpasswd -b passwords pass5 pass5\n  htpasswd -b passwords pass6 pass6\n  htpasswd -b passwords pass7 pass7\n  htpasswd -b passwords pass8 pass8\n  (insert Perl one-liner to convert to initializer :) )\n */\n    {\"pass1\", \"1fWDc9QWYCWrQ\"},\n",
                      "markdown": "`  htpasswd -b passwords pass5 pass5\n  htpasswd -b passwords pass6 pass6\n  htpasswd -b passwords pass7 pass7\n  htpasswd -b passwords pass8 pass8\n  (insert Perl one-liner to convert to initializer :) )\n */\n    {\"pass1\", \"1fWDc9QWYCWrQ\"},\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 2,
                  "endLine": 59,
                  "endColumn": 10,
                  "snippet": {
                    "text": "  htpasswd -b passwords pass5 pass5\n  htpasswd -b passwords pass6 pass6\n  htpasswd -b passwords pass7 pass7\n  htpasswd -b passwords pass8 pass8\n  (insert Perl one-liner to convert to initializer :) )\n */\n    {\"pass1\", \"1fWDc9QWYCWrQ\"},\n",
                    "rendered": {
                      "text": "  htpasswd -b passwords pass5 pass5\n  htpasswd -b passwords pass6 pass6\n  htpasswd -b passwords pass7 pass7\n  htpasswd -b passwords pass8 pass8\n  (insert Perl one-liner to convert to initializer :) )\n */\n    {\"pass1\", \"1fWDc9QWYCWrQ\"},\n",
                      "markdown": "`  htpasswd -b passwords pass5 pass5\n  htpasswd -b passwords pass6 pass6\n  htpasswd -b passwords pass7 pass7\n  htpasswd -b passwords pass8 pass8\n  (insert Perl one-liner to convert to initializer :) )\n */\n    {\"pass1\", \"1fWDc9QWYCWrQ\"},\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 14,
                  "endLine": 58,
                  "endColumn": 22,
                  "snippet": {
                    "text": "  htpasswd -b passwords pass4 pass4\n  htpasswd -b passwords pass5 pass5\n  htpasswd -b passwords pass6 pass6\n  htpasswd -b passwords pass7 pass7\n  htpasswd -b passwords pass8 pass8\n  (insert Perl one-liner to convert to initializer :) )\n */\n",
                    "rendered": {
                      "text": "  htpasswd -b passwords pass4 pass4\n  htpasswd -b passwords pass5 pass5\n  htpasswd -b passwords pass6 pass6\n  htpasswd -b passwords pass7 pass7\n  htpasswd -b passwords pass8 pass8\n  (insert Perl one-liner to convert to initializer :) )\n */\n",
                      "markdown": "`  htpasswd -b passwords pass4 pass4\n  htpasswd -b passwords pass5 pass5\n  htpasswd -b passwords pass6 pass6\n  htpasswd -b passwords pass7 pass7\n  htpasswd -b passwords pass8 pass8\n  (insert Perl one-liner to convert to initializer :) )\n */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 2,
                  "endLine": 58,
                  "endColumn": 10,
                  "snippet": {
                    "text": "  htpasswd -b passwords pass4 pass4\n  htpasswd -b passwords pass5 pass5\n  htpasswd -b passwords pass6 pass6\n  htpasswd -b passwords pass7 pass7\n  htpasswd -b passwords pass8 pass8\n  (insert Perl one-liner to convert to initializer :) )\n */\n",
                    "rendered": {
                      "text": "  htpasswd -b passwords pass4 pass4\n  htpasswd -b passwords pass5 pass5\n  htpasswd -b passwords pass6 pass6\n  htpasswd -b passwords pass7 pass7\n  htpasswd -b passwords pass8 pass8\n  (insert Perl one-liner to convert to initializer :) )\n */\n",
                      "markdown": "`  htpasswd -b passwords pass4 pass4\n  htpasswd -b passwords pass5 pass5\n  htpasswd -b passwords pass6 pass6\n  htpasswd -b passwords pass7 pass7\n  htpasswd -b passwords pass8 pass8\n  (insert Perl one-liner to convert to initializer :) )\n */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 14,
                  "endLine": 57,
                  "endColumn": 22,
                  "snippet": {
                    "text": "  htpasswd -b passwords pass3 pass3\n  htpasswd -b passwords pass4 pass4\n  htpasswd -b passwords pass5 pass5\n  htpasswd -b passwords pass6 pass6\n  htpasswd -b passwords pass7 pass7\n  htpasswd -b passwords pass8 pass8\n  (insert Perl one-liner to convert to initializer :) )\n",
                    "rendered": {
                      "text": "  htpasswd -b passwords pass3 pass3\n  htpasswd -b passwords pass4 pass4\n  htpasswd -b passwords pass5 pass5\n  htpasswd -b passwords pass6 pass6\n  htpasswd -b passwords pass7 pass7\n  htpasswd -b passwords pass8 pass8\n  (insert Perl one-liner to convert to initializer :) )\n",
                      "markdown": "`  htpasswd -b passwords pass3 pass3\n  htpasswd -b passwords pass4 pass4\n  htpasswd -b passwords pass5 pass5\n  htpasswd -b passwords pass6 pass6\n  htpasswd -b passwords pass7 pass7\n  htpasswd -b passwords pass8 pass8\n  (insert Perl one-liner to convert to initializer :) )\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 2,
                  "endLine": 57,
                  "endColumn": 10,
                  "snippet": {
                    "text": "  htpasswd -b passwords pass3 pass3\n  htpasswd -b passwords pass4 pass4\n  htpasswd -b passwords pass5 pass5\n  htpasswd -b passwords pass6 pass6\n  htpasswd -b passwords pass7 pass7\n  htpasswd -b passwords pass8 pass8\n  (insert Perl one-liner to convert to initializer :) )\n",
                    "rendered": {
                      "text": "  htpasswd -b passwords pass3 pass3\n  htpasswd -b passwords pass4 pass4\n  htpasswd -b passwords pass5 pass5\n  htpasswd -b passwords pass6 pass6\n  htpasswd -b passwords pass7 pass7\n  htpasswd -b passwords pass8 pass8\n  (insert Perl one-liner to convert to initializer :) )\n",
                      "markdown": "`  htpasswd -b passwords pass3 pass3\n  htpasswd -b passwords pass4 pass4\n  htpasswd -b passwords pass5 pass5\n  htpasswd -b passwords pass6 pass6\n  htpasswd -b passwords pass7 pass7\n  htpasswd -b passwords pass8 pass8\n  (insert Perl one-liner to convert to initializer :) )\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 14,
                  "endLine": 56,
                  "endColumn": 22,
                  "snippet": {
                    "text": "  htpasswd -b passwords pass2 pass2\n  htpasswd -b passwords pass3 pass3\n  htpasswd -b passwords pass4 pass4\n  htpasswd -b passwords pass5 pass5\n  htpasswd -b passwords pass6 pass6\n  htpasswd -b passwords pass7 pass7\n  htpasswd -b passwords pass8 pass8\n",
                    "rendered": {
                      "text": "  htpasswd -b passwords pass2 pass2\n  htpasswd -b passwords pass3 pass3\n  htpasswd -b passwords pass4 pass4\n  htpasswd -b passwords pass5 pass5\n  htpasswd -b passwords pass6 pass6\n  htpasswd -b passwords pass7 pass7\n  htpasswd -b passwords pass8 pass8\n",
                      "markdown": "`  htpasswd -b passwords pass2 pass2\n  htpasswd -b passwords pass3 pass3\n  htpasswd -b passwords pass4 pass4\n  htpasswd -b passwords pass5 pass5\n  htpasswd -b passwords pass6 pass6\n  htpasswd -b passwords pass7 pass7\n  htpasswd -b passwords pass8 pass8\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 2,
                  "endLine": 56,
                  "endColumn": 10,
                  "snippet": {
                    "text": "  htpasswd -b passwords pass2 pass2\n  htpasswd -b passwords pass3 pass3\n  htpasswd -b passwords pass4 pass4\n  htpasswd -b passwords pass5 pass5\n  htpasswd -b passwords pass6 pass6\n  htpasswd -b passwords pass7 pass7\n  htpasswd -b passwords pass8 pass8\n",
                    "rendered": {
                      "text": "  htpasswd -b passwords pass2 pass2\n  htpasswd -b passwords pass3 pass3\n  htpasswd -b passwords pass4 pass4\n  htpasswd -b passwords pass5 pass5\n  htpasswd -b passwords pass6 pass6\n  htpasswd -b passwords pass7 pass7\n  htpasswd -b passwords pass8 pass8\n",
                      "markdown": "`  htpasswd -b passwords pass2 pass2\n  htpasswd -b passwords pass3 pass3\n  htpasswd -b passwords pass4 pass4\n  htpasswd -b passwords pass5 pass5\n  htpasswd -b passwords pass6 pass6\n  htpasswd -b passwords pass7 pass7\n  htpasswd -b passwords pass8 pass8\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 14,
                  "endLine": 55,
                  "endColumn": 22,
                  "snippet": {
                    "text": "  htpasswd -c -b passwords pass1 pass1\n  htpasswd -b passwords pass2 pass2\n  htpasswd -b passwords pass3 pass3\n  htpasswd -b passwords pass4 pass4\n  htpasswd -b passwords pass5 pass5\n  htpasswd -b passwords pass6 pass6\n  htpasswd -b passwords pass7 pass7\n",
                    "rendered": {
                      "text": "  htpasswd -c -b passwords pass1 pass1\n  htpasswd -b passwords pass2 pass2\n  htpasswd -b passwords pass3 pass3\n  htpasswd -b passwords pass4 pass4\n  htpasswd -b passwords pass5 pass5\n  htpasswd -b passwords pass6 pass6\n  htpasswd -b passwords pass7 pass7\n",
                      "markdown": "`  htpasswd -c -b passwords pass1 pass1\n  htpasswd -b passwords pass2 pass2\n  htpasswd -b passwords pass3 pass3\n  htpasswd -b passwords pass4 pass4\n  htpasswd -b passwords pass5 pass5\n  htpasswd -b passwords pass6 pass6\n  htpasswd -b passwords pass7 pass7\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 2,
                  "endLine": 55,
                  "endColumn": 10,
                  "snippet": {
                    "text": "  htpasswd -c -b passwords pass1 pass1\n  htpasswd -b passwords pass2 pass2\n  htpasswd -b passwords pass3 pass3\n  htpasswd -b passwords pass4 pass4\n  htpasswd -b passwords pass5 pass5\n  htpasswd -b passwords pass6 pass6\n  htpasswd -b passwords pass7 pass7\n",
                    "rendered": {
                      "text": "  htpasswd -c -b passwords pass1 pass1\n  htpasswd -b passwords pass2 pass2\n  htpasswd -b passwords pass3 pass3\n  htpasswd -b passwords pass4 pass4\n  htpasswd -b passwords pass5 pass5\n  htpasswd -b passwords pass6 pass6\n  htpasswd -b passwords pass7 pass7\n",
                      "markdown": "`  htpasswd -c -b passwords pass1 pass1\n  htpasswd -b passwords pass2 pass2\n  htpasswd -b passwords pass3 pass3\n  htpasswd -b passwords pass4 pass4\n  htpasswd -b passwords pass5 pass5\n  htpasswd -b passwords pass6 pass6\n  htpasswd -b passwords pass7 pass7\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 14,
                  "endLine": 54,
                  "endColumn": 22,
                  "snippet": {
                    "text": "  \n  htpasswd -c -b passwords pass1 pass1\n  htpasswd -b passwords pass2 pass2\n  htpasswd -b passwords pass3 pass3\n  htpasswd -b passwords pass4 pass4\n  htpasswd -b passwords pass5 pass5\n  htpasswd -b passwords pass6 pass6\n",
                    "rendered": {
                      "text": "  \n  htpasswd -c -b passwords pass1 pass1\n  htpasswd -b passwords pass2 pass2\n  htpasswd -b passwords pass3 pass3\n  htpasswd -b passwords pass4 pass4\n  htpasswd -b passwords pass5 pass5\n  htpasswd -b passwords pass6 pass6\n",
                      "markdown": "`  \n  htpasswd -c -b passwords pass1 pass1\n  htpasswd -b passwords pass2 pass2\n  htpasswd -b passwords pass3 pass3\n  htpasswd -b passwords pass4 pass4\n  htpasswd -b passwords pass5 pass5\n  htpasswd -b passwords pass6 pass6\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 2,
                  "endLine": 54,
                  "endColumn": 10,
                  "snippet": {
                    "text": "  \n  htpasswd -c -b passwords pass1 pass1\n  htpasswd -b passwords pass2 pass2\n  htpasswd -b passwords pass3 pass3\n  htpasswd -b passwords pass4 pass4\n  htpasswd -b passwords pass5 pass5\n  htpasswd -b passwords pass6 pass6\n",
                    "rendered": {
                      "text": "  \n  htpasswd -c -b passwords pass1 pass1\n  htpasswd -b passwords pass2 pass2\n  htpasswd -b passwords pass3 pass3\n  htpasswd -b passwords pass4 pass4\n  htpasswd -b passwords pass5 pass5\n  htpasswd -b passwords pass6 pass6\n",
                      "markdown": "`  \n  htpasswd -c -b passwords pass1 pass1\n  htpasswd -b passwords pass2 pass2\n  htpasswd -b passwords pass3 pass3\n  htpasswd -b passwords pass4 pass4\n  htpasswd -b passwords pass5 pass5\n  htpasswd -b passwords pass6 pass6\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 14,
                  "endLine": 53,
                  "endColumn": 22,
                  "snippet": {
                    "text": "  passwords and hashes created with Apache's htpasswd utility like this:\n  \n  htpasswd -c -b passwords pass1 pass1\n  htpasswd -b passwords pass2 pass2\n  htpasswd -b passwords pass3 pass3\n  htpasswd -b passwords pass4 pass4\n  htpasswd -b passwords pass5 pass5\n",
                    "rendered": {
                      "text": "  passwords and hashes created with Apache's htpasswd utility like this:\n  \n  htpasswd -c -b passwords pass1 pass1\n  htpasswd -b passwords pass2 pass2\n  htpasswd -b passwords pass3 pass3\n  htpasswd -b passwords pass4 pass4\n  htpasswd -b passwords pass5 pass5\n",
                      "markdown": "`  passwords and hashes created with Apache's htpasswd utility like this:\n  \n  htpasswd -c -b passwords pass1 pass1\n  htpasswd -b passwords pass2 pass2\n  htpasswd -b passwords pass3 pass3\n  htpasswd -b passwords pass4 pass4\n  htpasswd -b passwords pass5 pass5\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 2,
                  "endLine": 53,
                  "endColumn": 10,
                  "snippet": {
                    "text": "  passwords and hashes created with Apache's htpasswd utility like this:\n  \n  htpasswd -c -b passwords pass1 pass1\n  htpasswd -b passwords pass2 pass2\n  htpasswd -b passwords pass3 pass3\n  htpasswd -b passwords pass4 pass4\n  htpasswd -b passwords pass5 pass5\n",
                    "rendered": {
                      "text": "  passwords and hashes created with Apache's htpasswd utility like this:\n  \n  htpasswd -c -b passwords pass1 pass1\n  htpasswd -b passwords pass2 pass2\n  htpasswd -b passwords pass3 pass3\n  htpasswd -b passwords pass4 pass4\n  htpasswd -b passwords pass5 pass5\n",
                      "markdown": "`  passwords and hashes created with Apache's htpasswd utility like this:\n  \n  htpasswd -c -b passwords pass1 pass1\n  htpasswd -b passwords pass2 pass2\n  htpasswd -b passwords pass3 pass3\n  htpasswd -b passwords pass4 pass4\n  htpasswd -b passwords pass5 pass5\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 17,
                  "endLine": 52,
                  "endColumn": 25,
                  "snippet": {
                    "text": "/*\n  passwords and hashes created with Apache's htpasswd utility like this:\n  \n  htpasswd -c -b passwords pass1 pass1\n  htpasswd -b passwords pass2 pass2\n  htpasswd -b passwords pass3 pass3\n  htpasswd -b passwords pass4 pass4\n",
                    "rendered": {
                      "text": "/*\n  passwords and hashes created with Apache's htpasswd utility like this:\n  \n  htpasswd -c -b passwords pass1 pass1\n  htpasswd -b passwords pass2 pass2\n  htpasswd -b passwords pass3 pass3\n  htpasswd -b passwords pass4 pass4\n",
                      "markdown": "`/*\n  passwords and hashes created with Apache's htpasswd utility like this:\n  \n  htpasswd -c -b passwords pass1 pass1\n  htpasswd -b passwords pass2 pass2\n  htpasswd -b passwords pass3 pass3\n  htpasswd -b passwords pass4 pass4\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 2,
                  "endLine": 52,
                  "endColumn": 10,
                  "snippet": {
                    "text": "/*\n  passwords and hashes created with Apache's htpasswd utility like this:\n  \n  htpasswd -c -b passwords pass1 pass1\n  htpasswd -b passwords pass2 pass2\n  htpasswd -b passwords pass3 pass3\n  htpasswd -b passwords pass4 pass4\n",
                    "rendered": {
                      "text": "/*\n  passwords and hashes created with Apache's htpasswd utility like this:\n  \n  htpasswd -c -b passwords pass1 pass1\n  htpasswd -b passwords pass2 pass2\n  htpasswd -b passwords pass3 pass3\n  htpasswd -b passwords pass4 pass4\n",
                      "markdown": "`/*\n  passwords and hashes created with Apache's htpasswd utility like this:\n  \n  htpasswd -c -b passwords pass1 pass1\n  htpasswd -b passwords pass2 pass2\n  htpasswd -b passwords pass3 pass3\n  htpasswd -b passwords pass4 pass4\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 45,
                  "endLine": 50,
                  "endColumn": 53,
                  "snippet": {
                    "text": "} passwords[] =\n{\n/*\n  passwords and hashes created with Apache's htpasswd utility like this:\n  \n  htpasswd -c -b passwords pass1 pass1\n  htpasswd -b passwords pass2 pass2\n",
                    "rendered": {
                      "text": "} passwords[] =\n{\n/*\n  passwords and hashes created with Apache's htpasswd utility like this:\n  \n  htpasswd -c -b passwords pass1 pass1\n  htpasswd -b passwords pass2 pass2\n",
                      "markdown": "`} passwords[] =\n{\n/*\n  passwords and hashes created with Apache's htpasswd utility like this:\n  \n  htpasswd -c -b passwords pass1 pass1\n  htpasswd -b passwords pass2 pass2\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 2,
                  "endLine": 50,
                  "endColumn": 10,
                  "snippet": {
                    "text": "} passwords[] =\n{\n/*\n  passwords and hashes created with Apache's htpasswd utility like this:\n  \n  htpasswd -c -b passwords pass1 pass1\n  htpasswd -b passwords pass2 pass2\n",
                    "rendered": {
                      "text": "} passwords[] =\n{\n/*\n  passwords and hashes created with Apache's htpasswd utility like this:\n  \n  htpasswd -c -b passwords pass1 pass1\n  htpasswd -b passwords pass2 pass2\n",
                      "markdown": "`} passwords[] =\n{\n/*\n  passwords and hashes created with Apache's htpasswd utility like this:\n  \n  htpasswd -c -b passwords pass1 pass1\n  htpasswd -b passwords pass2 pass2\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 2,
                  "endLine": 47,
                  "endColumn": 10,
                  "snippet": {
                    "text": "static struct {\n    const char *password;\n    const char *hash;\n} passwords[] =\n{\n/*\n  passwords and hashes created with Apache's htpasswd utility like this:\n",
                    "rendered": {
                      "text": "static struct {\n    const char *password;\n    const char *hash;\n} passwords[] =\n{\n/*\n  passwords and hashes created with Apache's htpasswd utility like this:\n",
                      "markdown": "`static struct {\n    const char *password;\n    const char *hash;\n} passwords[] =\n{\n/*\n  passwords and hashes created with Apache's htpasswd utility like this:\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testpass.c"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 16,
                  "endLine": 45,
                  "endColumn": 24,
                  "snippet": {
                    "text": "#if CRYPT_ALGO_SUPPORTED\n\nstatic struct {\n    const char *password;\n    const char *hash;\n} passwords[] =\n{\n",
                    "rendered": {
                      "text": "#if CRYPT_ALGO_SUPPORTED\n\nstatic struct {\n    const char *password;\n    const char *hash;\n} passwords[] =\n{\n",
                      "markdown": "`#if CRYPT_ALGO_SUPPORTED\n\nstatic struct {\n    const char *password;\n    const char *hash;\n} passwords[] =\n{\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/teststrmatch.c"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 33,
                  "endLine": 39,
                  "endColumn": 37,
                  "snippet": {
                    "text": "    const char *match = NULL;\n    const char *input1 = \"string that contains a patterN...\";\n    const char *input2 = \"string that contains a pattern...\";\n    const char *input3 = \"pattern at the start of a string\";\n    const char *input4 = \"string that ends with a pattern\";\n    const char *input5 = \"patter\\200n not found, negative chars in input\";\n    const char *input6 = \"patter\\200n, negative chars, contains pattern...\";\n",
                    "rendered": {
                      "text": "    const char *match = NULL;\n    const char *input1 = \"string that contains a patterN...\";\n    const char *input2 = \"string that contains a pattern...\";\n    const char *input3 = \"pattern at the start of a string\";\n    const char *input4 = \"string that ends with a pattern\";\n    const char *input5 = \"patter\\200n not found, negative chars in input\";\n    const char *input6 = \"patter\\200n, negative chars, contains pattern...\";\n",
                      "markdown": "`    const char *match = NULL;\n    const char *input1 = \"string that contains a patterN...\";\n    const char *input2 = \"string that contains a pattern...\";\n    const char *input3 = \"pattern at the start of a string\";\n    const char *input4 = \"string that ends with a pattern\";\n    const char *input5 = \"patter\\200n not found, negative chars in input\";\n    const char *input6 = \"patter\\200n, negative chars, contains pattern...\";\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testrmm.c"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 18,
                  "endLine": 75,
                  "endColumn": 22,
                  "snippet": {
                    "text": "    /* Checking each fragment for address alignment */\n    for (i = 0; i < FRAG_COUNT; i++) {\n        char *c = apr_rmm_addr_get(rmm, off[i]);\n        apr_size_t sc = (apr_size_t)c;\n\n        ABTS_TRUE(tc, !!off[i]);\n        ABTS_TRUE(tc, !(sc & 7));\n",
                    "rendered": {
                      "text": "    /* Checking each fragment for address alignment */\n    for (i = 0; i < FRAG_COUNT; i++) {\n        char *c = apr_rmm_addr_get(rmm, off[i]);\n        apr_size_t sc = (apr_size_t)c;\n\n        ABTS_TRUE(tc, !!off[i]);\n        ABTS_TRUE(tc, !(sc & 7));\n",
                      "markdown": "`    /* Checking each fragment for address alignment */\n    for (i = 0; i < FRAG_COUNT; i++) {\n        char *c = apr_rmm_addr_get(rmm, off[i]);\n        apr_size_t sc = (apr_size_t)c;\n\n        ABTS_TRUE(tc, !!off[i]);\n        ABTS_TRUE(tc, !(sc & 7));\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbm/NWGNUmakefile"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 24,
                  "endLine": 114,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\n#\n# If this is specified, it will override VERSION value in\n# $(AP_WORK)\\build\\NWGNUenvironment.inc\n#\nNLM_VERSION\t=\n\n",
                    "rendered": {
                      "text": "\n#\n# If this is specified, it will override VERSION value in\n# $(AP_WORK)\\build\\NWGNUenvironment.inc\n#\nNLM_VERSION\t=\n\n",
                      "markdown": "`\n#\n# If this is specified, it will override VERSION value in\n# $(AP_WORK)\\build\\NWGNUenvironment.inc\n#\nNLM_VERSION\t=\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbm/NWGNUmakefile"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 30,
                  "endLine": 9,
                  "endColumn": 72,
                  "snippet": {
                    "text": "\t$(EOLIST)\n\n#\n# Get the 'head' of the build environment.  This includes default targets and\n# paths to tools\n#\n\n",
                    "rendered": {
                      "text": "\t$(EOLIST)\n\n#\n# Get the 'head' of the build environment.  This includes default targets and\n# paths to tools\n#\n\n",
                      "markdown": "`\t$(EOLIST)\n\n#\n# Get the 'head' of the build environment.  This includes default targets and\n# paths to tools\n#\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbm/NWGNUmakefile"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 27,
                  "endLine": 23,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n",
                    "rendered": {
                      "text": "#\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n",
                      "markdown": "`#\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_ldap.hw"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": " * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "` * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apu.hwc"
                },
                "region": {
                  "startLine": 94,
                  "startColumn": 46,
                  "endLine": 94,
                  "endColumn": 50,
                  "snippet": {
                    "text": "/**\n * Declare a dso module's exported module structure as APU_MODULE_DECLARE_DATA.\n *\n * Unless APU_MODULE_DECLARE_STATIC is defined at compile time, symbols \n * declared with APU_MODULE_DECLARE_DATA are always exported.\n * @code\n * module APU_MODULE_DECLARE_DATA mod_tag\n",
                    "rendered": {
                      "text": "/**\n * Declare a dso module's exported module structure as APU_MODULE_DECLARE_DATA.\n *\n * Unless APU_MODULE_DECLARE_STATIC is defined at compile time, symbols \n * declared with APU_MODULE_DECLARE_DATA are always exported.\n * @code\n * module APU_MODULE_DECLARE_DATA mod_tag\n",
                      "markdown": "`/**\n * Declare a dso module's exported module structure as APU_MODULE_DECLARE_DATA.\n *\n * Unless APU_MODULE_DECLARE_STATIC is defined at compile time, symbols \n * declared with APU_MODULE_DECLARE_DATA are always exported.\n * @code\n * module APU_MODULE_DECLARE_DATA mod_tag\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apu.hwc"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 54,
                  "endLine": 69,
                  "endColumn": 58,
                  "snippet": {
                    "text": "#define APU_DECLARE_NONSTD(type)     type\n/**\n * The public APR-UTIL variables are declared with APU_DECLARE_DATA.\n * This assures the appropriate indirection is invoked at compile time.\n *\n * @fn APU_DECLARE_DATA type apr_variable;\n * @note extern APU_DECLARE_DATA type apr_variable; syntax is required for\n",
                    "rendered": {
                      "text": "#define APU_DECLARE_NONSTD(type)     type\n/**\n * The public APR-UTIL variables are declared with APU_DECLARE_DATA.\n * This assures the appropriate indirection is invoked at compile time.\n *\n * @fn APU_DECLARE_DATA type apr_variable;\n * @note extern APU_DECLARE_DATA type apr_variable; syntax is required for\n",
                      "markdown": "`#define APU_DECLARE_NONSTD(type)     type\n/**\n * The public APR-UTIL variables are declared with APU_DECLARE_DATA.\n * This assures the appropriate indirection is invoked at compile time.\n *\n * @fn APU_DECLARE_DATA type apr_variable;\n * @note extern APU_DECLARE_DATA type apr_variable; syntax is required for\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apu.hwc"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 14,
                  "endLine": 42,
                  "endColumn": 18,
                  "snippet": {
                    "text": " * APU_DECLARE_STATIC and APU_DECLARE_EXPORT are left undefined when\n * including the APR-UTIL public headers, to import and link the symbols from \n * the dynamic APR-UTIL library and assure appropriate indirection and calling\n * conventions at compile time.\n */\n\n/* Make sure we have our platform identifier macro defined we ask for later.\n",
                    "rendered": {
                      "text": " * APU_DECLARE_STATIC and APU_DECLARE_EXPORT are left undefined when\n * including the APR-UTIL public headers, to import and link the symbols from \n * the dynamic APR-UTIL library and assure appropriate indirection and calling\n * conventions at compile time.\n */\n\n/* Make sure we have our platform identifier macro defined we ask for later.\n",
                      "markdown": "` * APU_DECLARE_STATIC and APU_DECLARE_EXPORT are left undefined when\n * including the APR-UTIL public headers, to import and link the symbols from \n * the dynamic APR-UTIL library and assure appropriate indirection and calling\n * conventions at compile time.\n */\n\n/* Make sure we have our platform identifier macro defined we ask for later.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apu.hwc"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 35,
                  "endLine": 18,
                  "endColumn": 39,
                  "snippet": {
                    "text": " */\n\n/* \n * apu.h is duplicated from apu.hwc at build time -- do not edit apu.h\n */\n/* @file apu.h\n * @brief APR-Utility main file\n",
                    "rendered": {
                      "text": " */\n\n/* \n * apu.h is duplicated from apu.hwc at build time -- do not edit apu.h\n */\n/* @file apu.h\n * @brief APR-Utility main file\n",
                      "markdown": "` */\n\n/* \n * apu.h is duplicated from apu.hwc at build time -- do not edit apu.h\n */\n/* @file apu.h\n * @brief APR-Utility main file\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apu.hwc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": " * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "` * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apu.hwc"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 44,
                  "endLine": 18,
                  "endColumn": 50,
                  "snippet": {
                    "text": " */\n\n/* \n * apu.h is duplicated from apu.hwc at build time -- do not edit apu.h\n */\n/* @file apu.h\n * @brief APR-Utility main file\n",
                    "rendered": {
                      "text": " */\n\n/* \n * apu.h is duplicated from apu.hwc at build time -- do not edit apu.h\n */\n/* @file apu.h\n * @brief APR-Utility main file\n",
                      "markdown": "` */\n\n/* \n * apu.h is duplicated from apu.hwc at build time -- do not edit apu.h\n */\n/* @file apu.h\n * @brief APR-Utility main file\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_ldap_rebind.h"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 26,
                  "endLine": 72,
                  "endColumn": 34,
                  "snippet": {
                    "text": " * @param ld The LDAP connectionhandle\n * @param bindDN The bind DN to be used for any binds while chasing \n *               referrals on this ldap connection.\n * @param bindPW The bind Password to be used for any binds while \n *               chasing referrals on this ldap connection.\n */\nAPU_DECLARE_LDAP(apr_status_t) apr_ldap_rebind_add(apr_pool_t *pool,\n",
                    "rendered": {
                      "text": " * @param ld The LDAP connectionhandle\n * @param bindDN The bind DN to be used for any binds while chasing \n *               referrals on this ldap connection.\n * @param bindPW The bind Password to be used for any binds while \n *               chasing referrals on this ldap connection.\n */\nAPU_DECLARE_LDAP(apr_status_t) apr_ldap_rebind_add(apr_pool_t *pool,\n",
                      "markdown": "` * @param ld The LDAP connectionhandle\n * @param bindDN The bind DN to be used for any binds while chasing \n *               referrals on this ldap connection.\n * @param bindPW The bind Password to be used for any binds while \n *               chasing referrals on this ldap connection.\n */\nAPU_DECLARE_LDAP(apr_status_t) apr_ldap_rebind_add(apr_pool_t *pool,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apu_want.h.in"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": " * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "` * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_ldap_common.h"
                },
                "region": {
                  "startLine": 760,
                  "startColumn": 104,
                  "endLine": 760,
                  "endColumn": 112,
                  "snippet": {
                    "text": "t */\n    APR_LDAP_INTERACT_AUTHNAME = 0x4002,          /**< SASL username to authenticate */\n    APR_LDAP_INTERACT_USER = 0x4001,              /**< SASL username to use for proxy authorization */\n    APR_LDAP_INTERACT_PASS = 0x4004,              /**< SASL password for the provided username / Simple password for a simple bind */\n    APR_LDAP_INTERACT_NOECHOPROMPT = 0x4006,      /**< SASL generic prompt for input with input echoing disabled */\n    APR_LDAP_INTERACT_ECHOPROMPT = 0x4005,        /**< SASL generic prompt for input with input echoing enabled */\n} apr_ldap_bind_interact_e;\n\n\n/**\n * During apr",
                    "rendered": {
                      "text": "t */\n    APR_LDAP_INTERACT_AUTHNAME = 0x4002,          /**< SASL username to authenticate */\n    APR_LDAP_INTERACT_USER = 0x4001,              /**< SASL username to use for proxy authorization */\n    APR_LDAP_INTERACT_PASS = 0x4004,              /**< SASL password for the provided username / Simple password for a simple bind */\n    APR_LDAP_INTERACT_NOECHOPROMPT = 0x4006,      /**< SASL generic prompt for input with input echoing disabled */\n    APR_LDAP_INTERACT_ECHOPROMPT = 0x4005,        /**< SASL generic prompt for input with input echoing enabled */\n} apr_ldap_bind_interact_e;\n\n\n/**\n * During apr",
                      "markdown": "`t */\n    APR_LDAP_INTERACT_AUTHNAME = 0x4002,          /**< SASL username to authenticate */\n    APR_LDAP_INTERACT_USER = 0x4001,              /**< SASL username to use for proxy authorization */\n    APR_LDAP_INTERACT_PASS = 0x4004,              /**< SASL password for the provided username / Simple password for a simple bind */\n    APR_LDAP_INTERACT_NOECHOPROMPT = 0x4006,      /**< SASL generic prompt for input with input echoing disabled */\n    APR_LDAP_INTERACT_ECHOPROMPT = 0x4005,        /**< SASL generic prompt for input with input echoing enabled */\n} apr_ldap_bind_interact_e;\n\n\n/**\n * During apr`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_ldap_common.h"
                },
                "region": {
                  "startLine": 760,
                  "startColumn": 60,
                  "endLine": 760,
                  "endColumn": 68,
                  "snippet": {
                    "text": "**< SASL realm for the authentication attempt */\n    APR_LDAP_INTERACT_AUTHNAME = 0x4002,          /**< SASL username to authenticate */\n    APR_LDAP_INTERACT_USER = 0x4001,              /**< SASL username to use for proxy authorization */\n    APR_LDAP_INTERACT_PASS = 0x4004,              /**< SASL password for the provided username / Simple password for a simple bind */\n    APR_LDAP_INTERACT_NOECHOPROMPT = 0x4006,      /**< SASL generic prompt for input with input echoing disabled */\n    APR_LDAP_INTERACT_ECHOPROMPT = 0x4005,        /**< SASL generic prompt for input with input echoing enabled */\n} a",
                    "rendered": {
                      "text": "**< SASL realm for the authentication attempt */\n    APR_LDAP_INTERACT_AUTHNAME = 0x4002,          /**< SASL username to authenticate */\n    APR_LDAP_INTERACT_USER = 0x4001,              /**< SASL username to use for proxy authorization */\n    APR_LDAP_INTERACT_PASS = 0x4004,              /**< SASL password for the provided username / Simple password for a simple bind */\n    APR_LDAP_INTERACT_NOECHOPROMPT = 0x4006,      /**< SASL generic prompt for input with input echoing disabled */\n    APR_LDAP_INTERACT_ECHOPROMPT = 0x4005,        /**< SASL generic prompt for input with input echoing enabled */\n} a",
                      "markdown": "`**< SASL realm for the authentication attempt */\n    APR_LDAP_INTERACT_AUTHNAME = 0x4002,          /**< SASL username to authenticate */\n    APR_LDAP_INTERACT_USER = 0x4001,              /**< SASL username to use for proxy authorization */\n    APR_LDAP_INTERACT_PASS = 0x4004,              /**< SASL password for the provided username / Simple password for a simple bind */\n    APR_LDAP_INTERACT_NOECHOPROMPT = 0x4006,      /**< SASL generic prompt for input with input echoing disabled */\n    APR_LDAP_INTERACT_ECHOPROMPT = 0x4005,        /**< SASL generic prompt for input with input echoing enabled */\n} a`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_ldap_option.h"
                },
                "region": {
                  "startLine": 169,
                  "startColumn": 16,
                  "endLine": 169,
                  "endColumn": 24,
                  "snippet": {
                    "text": "struct apr_ldap_opt_tls_cert_t {\n    int type;\n    const char *path;\n    const char *password;\n};\n\n/**\n",
                    "rendered": {
                      "text": "struct apr_ldap_opt_tls_cert_t {\n    int type;\n    const char *path;\n    const char *password;\n};\n\n/**\n",
                      "markdown": "`struct apr_ldap_opt_tls_cert_t {\n    int type;\n    const char *path;\n    const char *password;\n};\n\n/**\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_ldap_option.h"
                },
                "region": {
                  "startLine": 163,
                  "startColumn": 28,
                  "endLine": 163,
                  "endColumn": 36,
                  "snippet": {
                    "text": " * and client certificates.\n * @param type Type of certificate APR_LDAP_*_TYPE_*\n * @param path Path, file or nickname of the certificate\n * @param password Optional password, can be NULL\n */\ntypedef struct apr_ldap_opt_tls_cert_t apr_ldap_opt_tls_cert_t;\nstruct apr_ldap_opt_tls_cert_t {\n",
                    "rendered": {
                      "text": " * and client certificates.\n * @param type Type of certificate APR_LDAP_*_TYPE_*\n * @param path Path, file or nickname of the certificate\n * @param password Optional password, can be NULL\n */\ntypedef struct apr_ldap_opt_tls_cert_t apr_ldap_opt_tls_cert_t;\nstruct apr_ldap_opt_tls_cert_t {\n",
                      "markdown": "` * and client certificates.\n * @param type Type of certificate APR_LDAP_*_TYPE_*\n * @param path Path, file or nickname of the certificate\n * @param password Optional password, can be NULL\n */\ntypedef struct apr_ldap_opt_tls_cert_t apr_ldap_opt_tls_cert_t;\nstruct apr_ldap_opt_tls_cert_t {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_ldap_option.h"
                },
                "region": {
                  "startLine": 163,
                  "startColumn": 10,
                  "endLine": 163,
                  "endColumn": 18,
                  "snippet": {
                    "text": " * and client certificates.\n * @param type Type of certificate APR_LDAP_*_TYPE_*\n * @param path Path, file or nickname of the certificate\n * @param password Optional password, can be NULL\n */\ntypedef struct apr_ldap_opt_tls_cert_t apr_ldap_opt_tls_cert_t;\nstruct apr_ldap_opt_tls_cert_t {\n",
                    "rendered": {
                      "text": " * and client certificates.\n * @param type Type of certificate APR_LDAP_*_TYPE_*\n * @param path Path, file or nickname of the certificate\n * @param password Optional password, can be NULL\n */\ntypedef struct apr_ldap_opt_tls_cert_t apr_ldap_opt_tls_cert_t;\nstruct apr_ldap_opt_tls_cert_t {\n",
                      "markdown": "` * and client certificates.\n * @param type Type of certificate APR_LDAP_*_TYPE_*\n * @param path Path, file or nickname of the certificate\n * @param password Optional password, can be NULL\n */\ntypedef struct apr_ldap_opt_tls_cert_t apr_ldap_opt_tls_cert_t;\nstruct apr_ldap_opt_tls_cert_t {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_ldap_option.h"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 51,
                  "endLine": 110,
                  "endColumn": 59,
                  "snippet": {
                    "text": " * type can be LDAPSSL_CERT_FILETYPE_B64 or LDAPSSL_CERT_FILETYPE_DER\n *  ldapssl_set_client_private_key(clientPrivateKey,\n *                                 clientPrivateKeyEncoding,\n *                                 clientPrivateKeyPassword);\n *\n * OpenSSL:\n * Needs one or more CA certificates to be set at system initialisation time\n",
                    "rendered": {
                      "text": " * type can be LDAPSSL_CERT_FILETYPE_B64 or LDAPSSL_CERT_FILETYPE_DER\n *  ldapssl_set_client_private_key(clientPrivateKey,\n *                                 clientPrivateKeyEncoding,\n *                                 clientPrivateKeyPassword);\n *\n * OpenSSL:\n * Needs one or more CA certificates to be set at system initialisation time\n",
                      "markdown": "` * type can be LDAPSSL_CERT_FILETYPE_B64 or LDAPSSL_CERT_FILETYPE_DER\n *  ldapssl_set_client_private_key(clientPrivateKey,\n *                                 clientPrivateKeyEncoding,\n *                                 clientPrivateKeyPassword);\n *\n * OpenSSL:\n * Needs one or more CA certificates to be set at system initialisation time\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_ldap_option.h"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 41,
                  "endLine": 110,
                  "endColumn": 51,
                  "snippet": {
                    "text": " * type can be LDAPSSL_CERT_FILETYPE_B64 or LDAPSSL_CERT_FILETYPE_DER\n *  ldapssl_set_client_private_key(clientPrivateKey,\n *                                 clientPrivateKeyEncoding,\n *                                 clientPrivateKeyPassword);\n *\n * OpenSSL:\n * Needs one or more CA certificates to be set at system initialisation time\n",
                    "rendered": {
                      "text": " * type can be LDAPSSL_CERT_FILETYPE_B64 or LDAPSSL_CERT_FILETYPE_DER\n *  ldapssl_set_client_private_key(clientPrivateKey,\n *                                 clientPrivateKeyEncoding,\n *                                 clientPrivateKeyPassword);\n *\n * OpenSSL:\n * Needs one or more CA certificates to be set at system initialisation time\n",
                      "markdown": "` * type can be LDAPSSL_CERT_FILETYPE_B64 or LDAPSSL_CERT_FILETYPE_DER\n *  ldapssl_set_client_private_key(clientPrivateKey,\n *                                 clientPrivateKeyEncoding,\n *                                 clientPrivateKeyPassword);\n *\n * OpenSSL:\n * Needs one or more CA certificates to be set at system initialisation time\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_ldap_option.h"
                },
                "region": {
                  "startLine": 109,
                  "startColumn": 41,
                  "endLine": 109,
                  "endColumn": 51,
                  "snippet": {
                    "text": " *  void   *password); \n * type can be LDAPSSL_CERT_FILETYPE_B64 or LDAPSSL_CERT_FILETYPE_DER\n *  ldapssl_set_client_private_key(clientPrivateKey,\n *                                 clientPrivateKeyEncoding,\n *                                 clientPrivateKeyPassword);\n *\n * OpenSSL:\n",
                    "rendered": {
                      "text": " *  void   *password); \n * type can be LDAPSSL_CERT_FILETYPE_B64 or LDAPSSL_CERT_FILETYPE_DER\n *  ldapssl_set_client_private_key(clientPrivateKey,\n *                                 clientPrivateKeyEncoding,\n *                                 clientPrivateKeyPassword);\n *\n * OpenSSL:\n",
                      "markdown": "` *  void   *password); \n * type can be LDAPSSL_CERT_FILETYPE_B64 or LDAPSSL_CERT_FILETYPE_DER\n *  ldapssl_set_client_private_key(clientPrivateKey,\n *                                 clientPrivateKeyEncoding,\n *                                 clientPrivateKeyPassword);\n *\n * OpenSSL:\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_ldap_option.h"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 41,
                  "endLine": 108,
                  "endColumn": 51,
                  "snippet": {
                    "text": " *  int     type\n *  void   *password); \n * type can be LDAPSSL_CERT_FILETYPE_B64 or LDAPSSL_CERT_FILETYPE_DER\n *  ldapssl_set_client_private_key(clientPrivateKey,\n *                                 clientPrivateKeyEncoding,\n *                                 clientPrivateKeyPassword);\n *\n",
                    "rendered": {
                      "text": " *  int     type\n *  void   *password); \n * type can be LDAPSSL_CERT_FILETYPE_B64 or LDAPSSL_CERT_FILETYPE_DER\n *  ldapssl_set_client_private_key(clientPrivateKey,\n *                                 clientPrivateKeyEncoding,\n *                                 clientPrivateKeyPassword);\n *\n",
                      "markdown": "` *  int     type\n *  void   *password); \n * type can be LDAPSSL_CERT_FILETYPE_B64 or LDAPSSL_CERT_FILETYPE_DER\n *  ldapssl_set_client_private_key(clientPrivateKey,\n *                                 clientPrivateKeyEncoding,\n *                                 clientPrivateKeyPassword);\n *\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_ldap_option.h"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 23,
                  "endLine": 108,
                  "endColumn": 34,
                  "snippet": {
                    "text": " *  int     type\n *  void   *password); \n * type can be LDAPSSL_CERT_FILETYPE_B64 or LDAPSSL_CERT_FILETYPE_DER\n *  ldapssl_set_client_private_key(clientPrivateKey,\n *                                 clientPrivateKeyEncoding,\n *                                 clientPrivateKeyPassword);\n *\n",
                    "rendered": {
                      "text": " *  int     type\n *  void   *password); \n * type can be LDAPSSL_CERT_FILETYPE_B64 or LDAPSSL_CERT_FILETYPE_DER\n *  ldapssl_set_client_private_key(clientPrivateKey,\n *                                 clientPrivateKeyEncoding,\n *                                 clientPrivateKeyPassword);\n *\n",
                      "markdown": "` *  int     type\n *  void   *password); \n * type can be LDAPSSL_CERT_FILETYPE_B64 or LDAPSSL_CERT_FILETYPE_DER\n *  ldapssl_set_client_private_key(clientPrivateKey,\n *                                 clientPrivateKeyEncoding,\n *                                 clientPrivateKeyPassword);\n *\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_ldap_option.h"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 12,
                  "endLine": 106,
                  "endColumn": 20,
                  "snippet": {
                    "text": " * int ldapssl_set_client_cert (\n *  void   *cert,\n *  int     type\n *  void   *password); \n * type can be LDAPSSL_CERT_FILETYPE_B64 or LDAPSSL_CERT_FILETYPE_DER\n *  ldapssl_set_client_private_key(clientPrivateKey,\n *                                 clientPrivateKeyEncoding,\n",
                    "rendered": {
                      "text": " * int ldapssl_set_client_cert (\n *  void   *cert,\n *  int     type\n *  void   *password); \n * type can be LDAPSSL_CERT_FILETYPE_B64 or LDAPSSL_CERT_FILETYPE_DER\n *  ldapssl_set_client_private_key(clientPrivateKey,\n *                                 clientPrivateKeyEncoding,\n",
                      "markdown": "` * int ldapssl_set_client_cert (\n *  void   *cert,\n *  int     type\n *  void   *password); \n * type can be LDAPSSL_CERT_FILETYPE_B64 or LDAPSSL_CERT_FILETYPE_DER\n *  ldapssl_set_client_private_key(clientPrivateKey,\n *                                 clientPrivateKeyEncoding,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_sha1.h"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 51,
                  "endLine": 78,
                  "endColumn": 59,
                  "snippet": {
                    "text": " *     secure than Apache's password format, since Apache's (MD5)\n *     password format uses a random eight character salt to generate\n *     one of many possible hashes for the same password.  Netscape\n *     uses plain SHA1 without a salt, so the same password\n *     will always generate the same hash, making it easier\n *     to break since the search space is smaller.\n */\n",
                    "rendered": {
                      "text": " *     secure than Apache's password format, since Apache's (MD5)\n *     password format uses a random eight character salt to generate\n *     one of many possible hashes for the same password.  Netscape\n *     uses plain SHA1 without a salt, so the same password\n *     will always generate the same hash, making it easier\n *     to break since the search space is smaller.\n */\n",
                      "markdown": "` *     secure than Apache's password format, since Apache's (MD5)\n *     password format uses a random eight character salt to generate\n *     one of many possible hashes for the same password.  Netscape\n *     uses plain SHA1 without a salt, so the same password\n *     will always generate the same hash, making it easier\n *     to break since the search space is smaller.\n */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_sha1.h"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 48,
                  "endLine": 77,
                  "endColumn": 56,
                  "snippet": {
                    "text": " * @note SHA1 support is useful for migration purposes, but is less\n *     secure than Apache's password format, since Apache's (MD5)\n *     password format uses a random eight character salt to generate\n *     one of many possible hashes for the same password.  Netscape\n *     uses plain SHA1 without a salt, so the same password\n *     will always generate the same hash, making it easier\n *     to break since the search space is smaller.\n",
                    "rendered": {
                      "text": " * @note SHA1 support is useful for migration purposes, but is less\n *     secure than Apache's password format, since Apache's (MD5)\n *     password format uses a random eight character salt to generate\n *     one of many possible hashes for the same password.  Netscape\n *     uses plain SHA1 without a salt, so the same password\n *     will always generate the same hash, making it easier\n *     to break since the search space is smaller.\n",
                      "markdown": "` * @note SHA1 support is useful for migration purposes, but is less\n *     secure than Apache's password format, since Apache's (MD5)\n *     password format uses a random eight character salt to generate\n *     one of many possible hashes for the same password.  Netscape\n *     uses plain SHA1 without a salt, so the same password\n *     will always generate the same hash, making it easier\n *     to break since the search space is smaller.\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_sha1.h"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 7,
                  "endLine": 76,
                  "endColumn": 15,
                  "snippet": {
                    "text": " * @param out The encrypted/encoded password\n * @note SHA1 support is useful for migration purposes, but is less\n *     secure than Apache's password format, since Apache's (MD5)\n *     password format uses a random eight character salt to generate\n *     one of many possible hashes for the same password.  Netscape\n *     uses plain SHA1 without a salt, so the same password\n *     will always generate the same hash, making it easier\n",
                    "rendered": {
                      "text": " * @param out The encrypted/encoded password\n * @note SHA1 support is useful for migration purposes, but is less\n *     secure than Apache's password format, since Apache's (MD5)\n *     password format uses a random eight character salt to generate\n *     one of many possible hashes for the same password.  Netscape\n *     uses plain SHA1 without a salt, so the same password\n *     will always generate the same hash, making it easier\n",
                      "markdown": "` * @param out The encrypted/encoded password\n * @note SHA1 support is useful for migration purposes, but is less\n *     secure than Apache's password format, since Apache's (MD5)\n *     password format uses a random eight character salt to generate\n *     one of many possible hashes for the same password.  Netscape\n *     uses plain SHA1 without a salt, so the same password\n *     will always generate the same hash, making it easier\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_sha1.h"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 28,
                  "endLine": 75,
                  "endColumn": 36,
                  "snippet": {
                    "text": " * @param len The length of the plaintext password\n * @param out The encrypted/encoded password\n * @note SHA1 support is useful for migration purposes, but is less\n *     secure than Apache's password format, since Apache's (MD5)\n *     password format uses a random eight character salt to generate\n *     one of many possible hashes for the same password.  Netscape\n *     uses plain SHA1 without a salt, so the same password\n",
                    "rendered": {
                      "text": " * @param len The length of the plaintext password\n * @param out The encrypted/encoded password\n * @note SHA1 support is useful for migration purposes, but is less\n *     secure than Apache's password format, since Apache's (MD5)\n *     password format uses a random eight character salt to generate\n *     one of many possible hashes for the same password.  Netscape\n *     uses plain SHA1 without a salt, so the same password\n",
                      "markdown": "` * @param len The length of the plaintext password\n * @param out The encrypted/encoded password\n * @note SHA1 support is useful for migration purposes, but is less\n *     secure than Apache's password format, since Apache's (MD5)\n *     password format uses a random eight character salt to generate\n *     one of many possible hashes for the same password.  Netscape\n *     uses plain SHA1 without a salt, so the same password\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_sha1.h"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 36,
                  "endLine": 73,
                  "endColumn": 44,
                  "snippet": {
                    "text": " * and ldap installations.\n * @param clear The plaintext password\n * @param len The length of the plaintext password\n * @param out The encrypted/encoded password\n * @note SHA1 support is useful for migration purposes, but is less\n *     secure than Apache's password format, since Apache's (MD5)\n *     password format uses a random eight character salt to generate\n",
                    "rendered": {
                      "text": " * and ldap installations.\n * @param clear The plaintext password\n * @param len The length of the plaintext password\n * @param out The encrypted/encoded password\n * @note SHA1 support is useful for migration purposes, but is less\n *     secure than Apache's password format, since Apache's (MD5)\n *     password format uses a random eight character salt to generate\n",
                      "markdown": "` * and ldap installations.\n * @param clear The plaintext password\n * @param len The length of the plaintext password\n * @param out The encrypted/encoded password\n * @note SHA1 support is useful for migration purposes, but is less\n *     secure than Apache's password format, since Apache's (MD5)\n *     password format uses a random eight character salt to generate\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_sha1.h"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 42,
                  "endLine": 72,
                  "endColumn": 50,
                  "snippet": {
                    "text": " * makes password file compatible with those commonly use in netscape web\n * and ldap installations.\n * @param clear The plaintext password\n * @param len The length of the plaintext password\n * @param out The encrypted/encoded password\n * @note SHA1 support is useful for migration purposes, but is less\n *     secure than Apache's password format, since Apache's (MD5)\n",
                    "rendered": {
                      "text": " * makes password file compatible with those commonly use in netscape web\n * and ldap installations.\n * @param clear The plaintext password\n * @param len The length of the plaintext password\n * @param out The encrypted/encoded password\n * @note SHA1 support is useful for migration purposes, but is less\n *     secure than Apache's password format, since Apache's (MD5)\n",
                      "markdown": "` * makes password file compatible with those commonly use in netscape web\n * and ldap installations.\n * @param clear The plaintext password\n * @param len The length of the plaintext password\n * @param out The encrypted/encoded password\n * @note SHA1 support is useful for migration purposes, but is less\n *     secure than Apache's password format, since Apache's (MD5)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_sha1.h"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 30,
                  "endLine": 71,
                  "endColumn": 38,
                  "snippet": {
                    "text": " * Provide a means to SHA1 crypt/encode a plaintext password in a way which\n * makes password file compatible with those commonly use in netscape web\n * and ldap installations.\n * @param clear The plaintext password\n * @param len The length of the plaintext password\n * @param out The encrypted/encoded password\n * @note SHA1 support is useful for migration purposes, but is less\n",
                    "rendered": {
                      "text": " * Provide a means to SHA1 crypt/encode a plaintext password in a way which\n * makes password file compatible with those commonly use in netscape web\n * and ldap installations.\n * @param clear The plaintext password\n * @param len The length of the plaintext password\n * @param out The encrypted/encoded password\n * @note SHA1 support is useful for migration purposes, but is less\n",
                      "markdown": "` * Provide a means to SHA1 crypt/encode a plaintext password in a way which\n * makes password file compatible with those commonly use in netscape web\n * and ldap installations.\n * @param clear The plaintext password\n * @param len The length of the plaintext password\n * @param out The encrypted/encoded password\n * @note SHA1 support is useful for migration purposes, but is less\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_sha1.h"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 9,
                  "endLine": 69,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n/**\n * Provide a means to SHA1 crypt/encode a plaintext password in a way which\n * makes password file compatible with those commonly use in netscape web\n * and ldap installations.\n * @param clear The plaintext password\n * @param len The length of the plaintext password\n",
                    "rendered": {
                      "text": "\n/**\n * Provide a means to SHA1 crypt/encode a plaintext password in a way which\n * makes password file compatible with those commonly use in netscape web\n * and ldap installations.\n * @param clear The plaintext password\n * @param len The length of the plaintext password\n",
                      "markdown": "`\n/**\n * Provide a means to SHA1 crypt/encode a plaintext password in a way which\n * makes password file compatible with those commonly use in netscape web\n * and ldap installations.\n * @param clear The plaintext password\n * @param len The length of the plaintext password\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_sha1.h"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 52,
                  "endLine": 68,
                  "endColumn": 60,
                  "snippet": {
                    "text": "};\n\n/**\n * Provide a means to SHA1 crypt/encode a plaintext password in a way which\n * makes password file compatible with those commonly use in netscape web\n * and ldap installations.\n * @param clear The plaintext password\n",
                    "rendered": {
                      "text": "};\n\n/**\n * Provide a means to SHA1 crypt/encode a plaintext password in a way which\n * makes password file compatible with those commonly use in netscape web\n * and ldap installations.\n * @param clear The plaintext password\n",
                      "markdown": "`};\n\n/**\n * Provide a means to SHA1 crypt/encode a plaintext password in a way which\n * makes password file compatible with those commonly use in netscape web\n * and ldap installations.\n * @param clear The plaintext password\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_sha1.h"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 22,
                  "endLine": 47,
                  "endColumn": 30,
                  "snippet": {
                    "text": " */\n#define APR_SHA1PW_ID \"{SHA}\"\n\n/** length of the SHA Password */\n#define APR_SHA1PW_IDLEN 5\n\n/** @see apr_sha1_ctx_t */\n",
                    "rendered": {
                      "text": " */\n#define APR_SHA1PW_ID \"{SHA}\"\n\n/** length of the SHA Password */\n#define APR_SHA1PW_IDLEN 5\n\n/** @see apr_sha1_ctx_t */\n",
                      "markdown": "` */\n#define APR_SHA1PW_ID \"{SHA}\"\n\n/** length of the SHA Password */\n#define APR_SHA1PW_IDLEN 5\n\n/** @see apr_sha1_ctx_t */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_sha1.h"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 52,
                  "endLine": 42,
                  "endColumn": 60,
                  "snippet": {
                    "text": "#define APR_SHA1_DIGESTSIZE 20\n\n/**\n * Define the Magic String prefix that identifies a password as being\n * hashed using our algorithm.\n */\n#define APR_SHA1PW_ID \"{SHA}\"\n",
                    "rendered": {
                      "text": "#define APR_SHA1_DIGESTSIZE 20\n\n/**\n * Define the Magic String prefix that identifies a password as being\n * hashed using our algorithm.\n */\n#define APR_SHA1PW_ID \"{SHA}\"\n",
                      "markdown": "`#define APR_SHA1_DIGESTSIZE 20\n\n/**\n * Define the Magic String prefix that identifies a password as being\n * hashed using our algorithm.\n */\n#define APR_SHA1PW_ID \"{SHA}\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apu_want.hw"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": " * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "` * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apu.hw"
                },
                "region": {
                  "startLine": 94,
                  "startColumn": 46,
                  "endLine": 94,
                  "endColumn": 50,
                  "snippet": {
                    "text": "/**\n * Declare a dso module's exported module structure as APU_MODULE_DECLARE_DATA.\n *\n * Unless APU_MODULE_DECLARE_STATIC is defined at compile time, symbols \n * declared with APU_MODULE_DECLARE_DATA are always exported.\n * @code\n * module APU_MODULE_DECLARE_DATA mod_tag\n",
                    "rendered": {
                      "text": "/**\n * Declare a dso module's exported module structure as APU_MODULE_DECLARE_DATA.\n *\n * Unless APU_MODULE_DECLARE_STATIC is defined at compile time, symbols \n * declared with APU_MODULE_DECLARE_DATA are always exported.\n * @code\n * module APU_MODULE_DECLARE_DATA mod_tag\n",
                      "markdown": "`/**\n * Declare a dso module's exported module structure as APU_MODULE_DECLARE_DATA.\n *\n * Unless APU_MODULE_DECLARE_STATIC is defined at compile time, symbols \n * declared with APU_MODULE_DECLARE_DATA are always exported.\n * @code\n * module APU_MODULE_DECLARE_DATA mod_tag\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apu.hw"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 54,
                  "endLine": 69,
                  "endColumn": 58,
                  "snippet": {
                    "text": "#define APU_DECLARE_NONSTD(type)     type\n/**\n * The public APR-UTIL variables are declared with APU_DECLARE_DATA.\n * This assures the appropriate indirection is invoked at compile time.\n *\n * @fn APU_DECLARE_DATA type apr_variable;\n * @note extern APU_DECLARE_DATA type apr_variable; syntax is required for\n",
                    "rendered": {
                      "text": "#define APU_DECLARE_NONSTD(type)     type\n/**\n * The public APR-UTIL variables are declared with APU_DECLARE_DATA.\n * This assures the appropriate indirection is invoked at compile time.\n *\n * @fn APU_DECLARE_DATA type apr_variable;\n * @note extern APU_DECLARE_DATA type apr_variable; syntax is required for\n",
                      "markdown": "`#define APU_DECLARE_NONSTD(type)     type\n/**\n * The public APR-UTIL variables are declared with APU_DECLARE_DATA.\n * This assures the appropriate indirection is invoked at compile time.\n *\n * @fn APU_DECLARE_DATA type apr_variable;\n * @note extern APU_DECLARE_DATA type apr_variable; syntax is required for\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apu.hw"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 14,
                  "endLine": 42,
                  "endColumn": 18,
                  "snippet": {
                    "text": " * APU_DECLARE_STATIC and APU_DECLARE_EXPORT are left undefined when\n * including the APR-UTIL public headers, to import and link the symbols from \n * the dynamic APR-UTIL library and assure appropriate indirection and calling\n * conventions at compile time.\n */\n\n/* Make sure we have our platform identifier macro defined we ask for later.\n",
                    "rendered": {
                      "text": " * APU_DECLARE_STATIC and APU_DECLARE_EXPORT are left undefined when\n * including the APR-UTIL public headers, to import and link the symbols from \n * the dynamic APR-UTIL library and assure appropriate indirection and calling\n * conventions at compile time.\n */\n\n/* Make sure we have our platform identifier macro defined we ask for later.\n",
                      "markdown": "` * APU_DECLARE_STATIC and APU_DECLARE_EXPORT are left undefined when\n * including the APR-UTIL public headers, to import and link the symbols from \n * the dynamic APR-UTIL library and assure appropriate indirection and calling\n * conventions at compile time.\n */\n\n/* Make sure we have our platform identifier macro defined we ask for later.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apu.hw"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 34,
                  "endLine": 18,
                  "endColumn": 38,
                  "snippet": {
                    "text": " */\n\n/* \n * apu.h is duplicated from apu.hw at build time -- do not edit apu.h\n */\n/* @file apu.h\n * @brief APR-Utility main file\n",
                    "rendered": {
                      "text": " */\n\n/* \n * apu.h is duplicated from apu.hw at build time -- do not edit apu.h\n */\n/* @file apu.h\n * @brief APR-Utility main file\n",
                      "markdown": "` */\n\n/* \n * apu.h is duplicated from apu.hw at build time -- do not edit apu.h\n */\n/* @file apu.h\n * @brief APR-Utility main file\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apu.hw"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": " * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "` * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apu.hw"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 43,
                  "endLine": 18,
                  "endColumn": 49,
                  "snippet": {
                    "text": " */\n\n/* \n * apu.h is duplicated from apu.hw at build time -- do not edit apu.h\n */\n/* @file apu.h\n * @brief APR-Utility main file\n",
                    "rendered": {
                      "text": " */\n\n/* \n * apu.h is duplicated from apu.hw at build time -- do not edit apu.h\n */\n/* @file apu.h\n * @brief APR-Utility main file\n",
                      "markdown": "` */\n\n/* \n * apu.h is duplicated from apu.hw at build time -- do not edit apu.h\n */\n/* @file apu.h\n * @brief APR-Utility main file\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_ldap.h.in"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": " * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "` * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.github/workflows/windows.yml"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 59,
                  "endLine": 121,
                  "endColumn": 70,
                  "snippet": {
                    "text": "      with:\r\n          script: |\r\n              core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');\r\n              core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');\r\n\r\n    - name: Install dependencies\r\n      run: vcpkg install --triplet ${{ matrix.triplet }} ${{ matrix.packages }}\r\n",
                    "rendered": {
                      "text": "      with:\r\n          script: |\r\n              core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');\r\n              core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');\r\n\r\n    - name: Install dependencies\r\n      run: vcpkg install --triplet ${{ matrix.triplet }} ${{ matrix.packages }}\r\n",
                      "markdown": "`      with:\r\n          script: |\r\n              core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');\r\n              core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');\r\n\r\n    - name: Install dependencies\r\n      run: vcpkg install --triplet ${{ matrix.triplet }} ${{ matrix.packages }}\r\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.github/workflows/windows.yml"
                },
                "region": {
                  "startLine": 120,
                  "startColumn": 55,
                  "endLine": 120,
                  "endColumn": 66,
                  "snippet": {
                    "text": "      uses: actions/github-script@v7\r\n      with:\r\n          script: |\r\n              core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');\r\n              core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');\r\n\r\n    - name: Install dependencies\r\n",
                    "rendered": {
                      "text": "      uses: actions/github-script@v7\r\n      with:\r\n          script: |\r\n              core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');\r\n              core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');\r\n\r\n    - name: Install dependencies\r\n",
                      "markdown": "`      uses: actions/github-script@v7\r\n      with:\r\n          script: |\r\n              core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');\r\n              core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');\r\n\r\n    - name: Install dependencies\r\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.github/workflows/windows.yml"
                },
                "region": {
                  "startLine": 178,
                  "startColumn": 12,
                  "endLine": 178,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\r\n    - name: Build\r\n      # Build your program with the given configuration\r\n      shell: cmd\r\n      run: |\r\n        call \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\Common7\\Tools\\VsDevCmd.bat\" -arch=${{ matrix.arch }}\r\n        cmake --build ${{github.workspace}}/apu/build --config ${{ matrix.build-type }}\r\n",
                    "rendered": {
                      "text": "\r\n    - name: Build\r\n      # Build your program with the given configuration\r\n      shell: cmd\r\n      run: |\r\n        call \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\Common7\\Tools\\VsDevCmd.bat\" -arch=${{ matrix.arch }}\r\n        cmake --build ${{github.workspace}}/apu/build --config ${{ matrix.build-type }}\r\n",
                      "markdown": "`\r\n    - name: Build\r\n      # Build your program with the given configuration\r\n      shell: cmd\r\n      run: |\r\n        call \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\Common7\\Tools\\VsDevCmd.bat\" -arch=${{ matrix.arch }}\r\n        cmake --build ${{github.workspace}}/apu/build --config ${{ matrix.build-type }}\r\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.github/workflows/windows.yml"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 12,
                  "endLine": 161,
                  "endColumn": 17,
                  "snippet": {
                    "text": "        path: apu\r\n\r\n    - name: Configure CMake\r\n      shell: cmd\r\n      run: |\r\n        call \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\Common7\\Tools\\VsDevCmd.bat\" -arch=${{ matrix.arch }}\r\n        cmake -G \"${{ matrix.generator }}\" ^\r\n",
                    "rendered": {
                      "text": "        path: apu\r\n\r\n    - name: Configure CMake\r\n      shell: cmd\r\n      run: |\r\n        call \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\Common7\\Tools\\VsDevCmd.bat\" -arch=${{ matrix.arch }}\r\n        cmake -G \"${{ matrix.generator }}\" ^\r\n",
                      "markdown": "`        path: apu\r\n\r\n    - name: Configure CMake\r\n      shell: cmd\r\n      run: |\r\n        call \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\Common7\\Tools\\VsDevCmd.bat\" -arch=${{ matrix.arch }}\r\n        cmake -G \"${{ matrix.generator }}\" ^\r\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.github/workflows/windows.yml"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 12,
                  "endLine": 151,
                  "endColumn": 17,
                  "snippet": {
                    "text": "        cmake --build ${{github.workspace}}/apr/out/build --config ${{ matrix.build-type }}\r\n\r\n    - name: Install APR\r\n      shell: cmd\r\n      run: |\r\n        call \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\Common7\\Tools\\VsDevCmd.bat\" -arch=${{ matrix.arch }}\r\n        cmake --install ${{github.workspace}}/apr/out/build --config ${{ matrix.build-type }}\r\n",
                    "rendered": {
                      "text": "        cmake --build ${{github.workspace}}/apr/out/build --config ${{ matrix.build-type }}\r\n\r\n    - name: Install APR\r\n      shell: cmd\r\n      run: |\r\n        call \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\Common7\\Tools\\VsDevCmd.bat\" -arch=${{ matrix.arch }}\r\n        cmake --install ${{github.workspace}}/apr/out/build --config ${{ matrix.build-type }}\r\n",
                      "markdown": "`        cmake --build ${{github.workspace}}/apr/out/build --config ${{ matrix.build-type }}\r\n\r\n    - name: Install APR\r\n      shell: cmd\r\n      run: |\r\n        call \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\Common7\\Tools\\VsDevCmd.bat\" -arch=${{ matrix.arch }}\r\n        cmake --install ${{github.workspace}}/apr/out/build --config ${{ matrix.build-type }}\r\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.github/workflows/windows.yml"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 12,
                  "endLine": 145,
                  "endColumn": 17,
                  "snippet": {
                    "text": "          -DVCPKG_TARGET_TRIPLET=${{ matrix.triplet }}\r\n\r\n    - name: Build APR\r\n      shell: cmd\r\n      run: |\r\n        call \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\Common7\\Tools\\VsDevCmd.bat\" -arch=${{ matrix.arch }}\r\n        cmake --build ${{github.workspace}}/apr/out/build --config ${{ matrix.build-type }}\r\n",
                    "rendered": {
                      "text": "          -DVCPKG_TARGET_TRIPLET=${{ matrix.triplet }}\r\n\r\n    - name: Build APR\r\n      shell: cmd\r\n      run: |\r\n        call \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\Common7\\Tools\\VsDevCmd.bat\" -arch=${{ matrix.arch }}\r\n        cmake --build ${{github.workspace}}/apr/out/build --config ${{ matrix.build-type }}\r\n",
                      "markdown": "`          -DVCPKG_TARGET_TRIPLET=${{ matrix.triplet }}\r\n\r\n    - name: Build APR\r\n      shell: cmd\r\n      run: |\r\n        call \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\Common7\\Tools\\VsDevCmd.bat\" -arch=${{ matrix.arch }}\r\n        cmake --build ${{github.workspace}}/apr/out/build --config ${{ matrix.build-type }}\r\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.github/workflows/windows.yml"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 12,
                  "endLine": 133,
                  "endColumn": 17,
                  "snippet": {
                    "text": "        path: apr\r\n\r\n    - name: Configure APR\r\n      shell: cmd\r\n      run: |\r\n        call \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\Common7\\Tools\\VsDevCmd.bat\" -arch=${{ matrix.arch }}\r\n        cmake -G \"${{ matrix.generator }}\" ^\r\n",
                    "rendered": {
                      "text": "        path: apr\r\n\r\n    - name: Configure APR\r\n      shell: cmd\r\n      run: |\r\n        call \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\Common7\\Tools\\VsDevCmd.bat\" -arch=${{ matrix.arch }}\r\n        cmake -G \"${{ matrix.generator }}\" ^\r\n",
                      "markdown": "`        path: apr\r\n\r\n    - name: Configure APR\r\n      shell: cmd\r\n      run: |\r\n        call \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\Common7\\Tools\\VsDevCmd.bat\" -arch=${{ matrix.arch }}\r\n        cmake -G \"${{ matrix.generator }}\" ^\r\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.github/workflows/windows.yml"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 27,
                  "endLine": 75,
                  "endColumn": 36,
                  "snippet": {
                    "text": "            generator: Ninja\r\n            build-shared: ON\r\n            dso-build: OFF\r\n            packages: expat sqlite3 openssl libpq libiconv\r\n            config: >-\r\n              -DAPU_HAVE_ODBC=ON\r\n              -DAPU_HAVE_SQLITE3=ON\r\n",
                    "rendered": {
                      "text": "            generator: Ninja\r\n            build-shared: ON\r\n            dso-build: OFF\r\n            packages: expat sqlite3 openssl libpq libiconv\r\n            config: >-\r\n              -DAPU_HAVE_ODBC=ON\r\n              -DAPU_HAVE_SQLITE3=ON\r\n",
                      "markdown": "`            generator: Ninja\r\n            build-shared: ON\r\n            dso-build: OFF\r\n            packages: expat sqlite3 openssl libpq libiconv\r\n            config: >-\r\n              -DAPU_HAVE_ODBC=ON\r\n              -DAPU_HAVE_SQLITE3=ON\r\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.github/workflows/windows.yml"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 24,
                  "endLine": 67,
                  "endColumn": 33,
                  "snippet": {
                    "text": "              -DAPU_HAVE_ODBC=OFF\r\n              -DAPU_HAVE_SQLITE3=OFF\r\n              -DAPU_HAVE_CRYPTO=OFF\r\n          - name: ODBC + SQLITE3 + PGSQL + CRYPTO + ICONV\r\n            os: windows-latest\r\n            triplet: x64-windows\r\n            arch: x64\r\n",
                    "rendered": {
                      "text": "              -DAPU_HAVE_ODBC=OFF\r\n              -DAPU_HAVE_SQLITE3=OFF\r\n              -DAPU_HAVE_CRYPTO=OFF\r\n          - name: ODBC + SQLITE3 + PGSQL + CRYPTO + ICONV\r\n            os: windows-latest\r\n            triplet: x64-windows\r\n            arch: x64\r\n",
                      "markdown": "`              -DAPU_HAVE_ODBC=OFF\r\n              -DAPU_HAVE_SQLITE3=OFF\r\n              -DAPU_HAVE_CRYPTO=OFF\r\n          - name: ODBC + SQLITE3 + PGSQL + CRYPTO + ICONV\r\n            os: windows-latest\r\n            triplet: x64-windows\r\n            arch: x64\r\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.github/workflows/linux.yml"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 53,
                  "endLine": 90,
                  "endColumn": 59,
                  "snippet": {
                    "text": "      run: ./configure --prefix=/tmp/apr-util --with-apr=/tmp/apr-root ${{ matrix.config }}\n    - if: ${{ matrix.config-output != '' }}\n      name: check for expected configure output ${{ matrix.config-output }}\n      run: for var in ${{ matrix.config-output }}; do grep \"^#define *${var} *1\" include/apu.h; done\n    - name: make\n      run: make $MARGS\n    - name: install\n",
                    "rendered": {
                      "text": "      run: ./configure --prefix=/tmp/apr-util --with-apr=/tmp/apr-root ${{ matrix.config }}\n    - if: ${{ matrix.config-output != '' }}\n      name: check for expected configure output ${{ matrix.config-output }}\n      run: for var in ${{ matrix.config-output }}; do grep \"^#define *${var} *1\" include/apu.h; done\n    - name: make\n      run: make $MARGS\n    - name: install\n",
                      "markdown": "`      run: ./configure --prefix=/tmp/apr-util --with-apr=/tmp/apr-root ${{ matrix.config }}\n    - if: ${{ matrix.config-output != '' }}\n      name: check for expected configure output ${{ matrix.config-output }}\n      run: for var in ${{ matrix.config-output }}; do grep \"^#define *${var} *1\" include/apu.h; done\n    - name: make\n      run: make $MARGS\n    - name: install\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.github/workflows/linux.yml"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 15,
                  "endLine": 67,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    name: ${{ matrix.name }}\n    steps:\n    - name: Install prerequisites\n      run: sudo apt-get install libtool libtool-bin ${{ matrix.packages }}\n    - name: Workaround ASAN issue in Ubuntu 22.04 runners\n      run: sudo sysctl vm.mmap_rnd_bits=28\n    - uses: actions/checkout@v4\n",
                    "rendered": {
                      "text": "    name: ${{ matrix.name }}\n    steps:\n    - name: Install prerequisites\n      run: sudo apt-get install libtool libtool-bin ${{ matrix.packages }}\n    - name: Workaround ASAN issue in Ubuntu 22.04 runners\n      run: sudo sysctl vm.mmap_rnd_bits=28\n    - uses: actions/checkout@v4\n",
                      "markdown": "`    name: ${{ matrix.name }}\n    steps:\n    - name: Install prerequisites\n      run: sudo apt-get install libtool libtool-bin ${{ matrix.packages }}\n    - name: Workaround ASAN issue in Ubuntu 22.04 runners\n      run: sudo sysctl vm.mmap_rnd_bits=28\n    - uses: actions/checkout@v4\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.github/workflows/linux.yml"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 27,
                  "endLine": 44,
                  "endColumn": 36,
                  "snippet": {
                    "text": "            notest-cflags: -Werror\n            packages: libdb5.3-dev\n            os: ubuntu-latest\n          - name: APR 1.7.x OpenSSL + maintainer-mode\n            apr-version: 1.7.x\n            apr-config: --enable-maintainer-mode\n            config: --with-crypto=yes --with-openssl=yes\n",
                    "rendered": {
                      "text": "            notest-cflags: -Werror\n            packages: libdb5.3-dev\n            os: ubuntu-latest\n          - name: APR 1.7.x OpenSSL + maintainer-mode\n            apr-version: 1.7.x\n            apr-config: --enable-maintainer-mode\n            config: --with-crypto=yes --with-openssl=yes\n",
                      "markdown": "`            notest-cflags: -Werror\n            packages: libdb5.3-dev\n            os: ubuntu-latest\n          - name: APR 1.7.x OpenSSL + maintainer-mode\n            apr-version: 1.7.x\n            apr-config: --enable-maintainer-mode\n            config: --with-crypto=yes --with-openssl=yes\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/memcache/apr_memcache.c"
                },
                "region": {
                  "startLine": 1574,
                  "startColumn": 27,
                  "endLine": 1574,
                  "endColumn": 33,
                  "snippet": {
                    "text": "#define STAT_uptime MS_STAT \" uptime \"\n#define STAT_uptime_LEN (sizeof(STAT_uptime)-1)\n\n#define STAT_time MS_STAT \" time \"\n#define STAT_time_LEN (sizeof(STAT_time)-1)\n\n#define STAT_version MS_STAT \" version \"\n",
                    "rendered": {
                      "text": "#define STAT_uptime MS_STAT \" uptime \"\n#define STAT_uptime_LEN (sizeof(STAT_uptime)-1)\n\n#define STAT_time MS_STAT \" time \"\n#define STAT_time_LEN (sizeof(STAT_time)-1)\n\n#define STAT_version MS_STAT \" version \"\n",
                      "markdown": "`#define STAT_uptime MS_STAT \" uptime \"\n#define STAT_uptime_LEN (sizeof(STAT_uptime)-1)\n\n#define STAT_time MS_STAT \" time \"\n#define STAT_time_LEN (sizeof(STAT_time)-1)\n\n#define STAT_version MS_STAT \" version \"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/uri/apr_uri.c"
                },
                "region": {
                  "startLine": 902,
                  "startColumn": 14,
                  "endLine": 902,
                  "endColumn": 22,
                  "snippet": {
                    "text": "    if (s1) {\n        uptr->user = apr_pstrmemdup(p, hostinfo, s1 - hostinfo);\n        ++s1;\n        uptr->password = apr_pstrmemdup(p, s1, s - s1);\n    }\n    else {\n        uptr->user = apr_pstrmemdup(p, hostinfo, s - hostinfo);\n",
                    "rendered": {
                      "text": "    if (s1) {\n        uptr->user = apr_pstrmemdup(p, hostinfo, s1 - hostinfo);\n        ++s1;\n        uptr->password = apr_pstrmemdup(p, s1, s - s1);\n    }\n    else {\n        uptr->user = apr_pstrmemdup(p, hostinfo, s - hostinfo);\n",
                      "markdown": "`    if (s1) {\n        uptr->user = apr_pstrmemdup(p, hostinfo, s1 - hostinfo);\n        ++s1;\n        uptr->password = apr_pstrmemdup(p, s1, s - s1);\n    }\n    else {\n        uptr->user = apr_pstrmemdup(p, hostinfo, s - hostinfo);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/uri/apr_uri.c"
                },
                "region": {
                  "startLine": 897,
                  "startColumn": 37,
                  "endLine": 897,
                  "endColumn": 45,
                  "snippet": {
                    "text": "        goto deal_with_path;\n    }\n\n    /* first colon delimits username:password */\n    s1 = memchr(hostinfo, ':', s - hostinfo);\n    if (s1) {\n        uptr->user = apr_pstrmemdup(p, hostinfo, s1 - hostinfo);\n",
                    "rendered": {
                      "text": "        goto deal_with_path;\n    }\n\n    /* first colon delimits username:password */\n    s1 = memchr(hostinfo, ':', s - hostinfo);\n    if (s1) {\n        uptr->user = apr_pstrmemdup(p, hostinfo, s1 - hostinfo);\n",
                      "markdown": "`        goto deal_with_path;\n    }\n\n    /* first colon delimits username:password */\n    s1 = memchr(hostinfo, ':', s - hostinfo);\n    if (s1) {\n        uptr->user = apr_pstrmemdup(p, hostinfo, s1 - hostinfo);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/uri/apr_uri.c"
                },
                "region": {
                  "startLine": 843,
                  "startColumn": 29,
                  "endLine": 843,
                  "endColumn": 37,
                  "snippet": {
                    "text": "    uri = s;        /* whatever follows hostinfo is start of uri */\n    uptr->hostinfo = apr_pstrmemdup(p, hostinfo, uri - hostinfo);\n\n    /* If there's a username:password@host:port, the @ we want is the last @...\n     * too bad there's no memrchr()... For the C purists, note that hostinfo\n     * is definitely not the first character of the original uri so therefore\n     * &hostinfo[-1] < &hostinfo[0] ... and this loop is valid C.\n",
                    "rendered": {
                      "text": "    uri = s;        /* whatever follows hostinfo is start of uri */\n    uptr->hostinfo = apr_pstrmemdup(p, hostinfo, uri - hostinfo);\n\n    /* If there's a username:password@host:port, the @ we want is the last @...\n     * too bad there's no memrchr()... For the C purists, note that hostinfo\n     * is definitely not the first character of the original uri so therefore\n     * &hostinfo[-1] < &hostinfo[0] ... and this loop is valid C.\n",
                      "markdown": "`    uri = s;        /* whatever follows hostinfo is start of uri */\n    uptr->hostinfo = apr_pstrmemdup(p, hostinfo, uri - hostinfo);\n\n    /* If there's a username:password@host:port, the @ we want is the last @...\n     * too bad there's no memrchr()... For the C purists, note that hostinfo\n     * is definitely not the first character of the original uri so therefore\n     * &hostinfo[-1] < &hostinfo[0] ... and this loop is valid C.\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/uri/apr_uri.c"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 68,
                  "endLine": 112,
                  "endColumn": 76,
                  "snippet": {
                    "text": "                              ? uptr->password : \"XXXXXXXX\")\n                          : \"\",\n                      ((uptr->user     && !(flags & APR_URI_UNP_OMITUSER)) ||\n                       (uptr->password && !(flags & APR_URI_UNP_OMITPASSWORD)))\n                          ? \"@\" : \"\", \n                      NULL);\n        }\n",
                    "rendered": {
                      "text": "                              ? uptr->password : \"XXXXXXXX\")\n                          : \"\",\n                      ((uptr->user     && !(flags & APR_URI_UNP_OMITUSER)) ||\n                       (uptr->password && !(flags & APR_URI_UNP_OMITPASSWORD)))\n                          ? \"@\" : \"\", \n                      NULL);\n        }\n",
                      "markdown": "`                              ? uptr->password : \"XXXXXXXX\")\n                          : \"\",\n                      ((uptr->user     && !(flags & APR_URI_UNP_OMITUSER)) ||\n                       (uptr->password && !(flags & APR_URI_UNP_OMITPASSWORD)))\n                          ? \"@\" : \"\", \n                      NULL);\n        }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/uri/apr_uri.c"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 30,
                  "endLine": 112,
                  "endColumn": 38,
                  "snippet": {
                    "text": "                              ? uptr->password : \"XXXXXXXX\")\n                          : \"\",\n                      ((uptr->user     && !(flags & APR_URI_UNP_OMITUSER)) ||\n                       (uptr->password && !(flags & APR_URI_UNP_OMITPASSWORD)))\n                          ? \"@\" : \"\", \n                      NULL);\n        }\n",
                    "rendered": {
                      "text": "                              ? uptr->password : \"XXXXXXXX\")\n                          : \"\",\n                      ((uptr->user     && !(flags & APR_URI_UNP_OMITUSER)) ||\n                       (uptr->password && !(flags & APR_URI_UNP_OMITPASSWORD)))\n                          ? \"@\" : \"\", \n                      NULL);\n        }\n",
                      "markdown": "`                              ? uptr->password : \"XXXXXXXX\")\n                          : \"\",\n                      ((uptr->user     && !(flags & APR_URI_UNP_OMITUSER)) ||\n                       (uptr->password && !(flags & APR_URI_UNP_OMITPASSWORD)))\n                          ? \"@\" : \"\", \n                      NULL);\n        }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/uri/apr_uri.c"
                },
                "region": {
                  "startLine": 109,
                  "startColumn": 38,
                  "endLine": 109,
                  "endColumn": 46,
                  "snippet": {
                    "text": "                          ? \":\" : \"\",\n                      (uptr->password && !(flags & APR_URI_UNP_OMITPASSWORD))\n                          ? ((flags & APR_URI_UNP_REVEALPASSWORD)\n                              ? uptr->password : \"XXXXXXXX\")\n                          : \"\",\n                      ((uptr->user     && !(flags & APR_URI_UNP_OMITUSER)) ||\n                       (uptr->password && !(flags & APR_URI_UNP_OMITPASSWORD)))\n",
                    "rendered": {
                      "text": "                          ? \":\" : \"\",\n                      (uptr->password && !(flags & APR_URI_UNP_OMITPASSWORD))\n                          ? ((flags & APR_URI_UNP_REVEALPASSWORD)\n                              ? uptr->password : \"XXXXXXXX\")\n                          : \"\",\n                      ((uptr->user     && !(flags & APR_URI_UNP_OMITUSER)) ||\n                       (uptr->password && !(flags & APR_URI_UNP_OMITPASSWORD)))\n",
                      "markdown": "`                          ? \":\" : \"\",\n                      (uptr->password && !(flags & APR_URI_UNP_OMITPASSWORD))\n                          ? ((flags & APR_URI_UNP_REVEALPASSWORD)\n                              ? uptr->password : \"XXXXXXXX\")\n                          : \"\",\n                      ((uptr->user     && !(flags & APR_URI_UNP_OMITUSER)) ||\n                       (uptr->password && !(flags & APR_URI_UNP_OMITPASSWORD)))\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/uri/apr_uri.c"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 56,
                  "endLine": 108,
                  "endColumn": 64,
                  "snippet": {
                    "text": "                      (uptr->password && !(flags & APR_URI_UNP_OMITPASSWORD))\n                          ? \":\" : \"\",\n                      (uptr->password && !(flags & APR_URI_UNP_OMITPASSWORD))\n                          ? ((flags & APR_URI_UNP_REVEALPASSWORD)\n                              ? uptr->password : \"XXXXXXXX\")\n                          : \"\",\n                      ((uptr->user     && !(flags & APR_URI_UNP_OMITUSER)) ||\n",
                    "rendered": {
                      "text": "                      (uptr->password && !(flags & APR_URI_UNP_OMITPASSWORD))\n                          ? \":\" : \"\",\n                      (uptr->password && !(flags & APR_URI_UNP_OMITPASSWORD))\n                          ? ((flags & APR_URI_UNP_REVEALPASSWORD)\n                              ? uptr->password : \"XXXXXXXX\")\n                          : \"\",\n                      ((uptr->user     && !(flags & APR_URI_UNP_OMITUSER)) ||\n",
                      "markdown": "`                      (uptr->password && !(flags & APR_URI_UNP_OMITPASSWORD))\n                          ? \":\" : \"\",\n                      (uptr->password && !(flags & APR_URI_UNP_OMITPASSWORD))\n                          ? ((flags & APR_URI_UNP_REVEALPASSWORD)\n                              ? uptr->password : \"XXXXXXXX\")\n                          : \"\",\n                      ((uptr->user     && !(flags & APR_URI_UNP_OMITUSER)) ||\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/uri/apr_uri.c"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 67,
                  "endLine": 107,
                  "endColumn": 75,
                  "snippet": {
                    "text": "                          ? uptr->user : \"\",\n                      (uptr->password && !(flags & APR_URI_UNP_OMITPASSWORD))\n                          ? \":\" : \"\",\n                      (uptr->password && !(flags & APR_URI_UNP_OMITPASSWORD))\n                          ? ((flags & APR_URI_UNP_REVEALPASSWORD)\n                              ? uptr->password : \"XXXXXXXX\")\n                          : \"\",\n",
                    "rendered": {
                      "text": "                          ? uptr->user : \"\",\n                      (uptr->password && !(flags & APR_URI_UNP_OMITPASSWORD))\n                          ? \":\" : \"\",\n                      (uptr->password && !(flags & APR_URI_UNP_OMITPASSWORD))\n                          ? ((flags & APR_URI_UNP_REVEALPASSWORD)\n                              ? uptr->password : \"XXXXXXXX\")\n                          : \"\",\n",
                      "markdown": "`                          ? uptr->user : \"\",\n                      (uptr->password && !(flags & APR_URI_UNP_OMITPASSWORD))\n                          ? \":\" : \"\",\n                      (uptr->password && !(flags & APR_URI_UNP_OMITPASSWORD))\n                          ? ((flags & APR_URI_UNP_REVEALPASSWORD)\n                              ? uptr->password : \"XXXXXXXX\")\n                          : \"\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/uri/apr_uri.c"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 29,
                  "endLine": 107,
                  "endColumn": 37,
                  "snippet": {
                    "text": "                          ? uptr->user : \"\",\n                      (uptr->password && !(flags & APR_URI_UNP_OMITPASSWORD))\n                          ? \":\" : \"\",\n                      (uptr->password && !(flags & APR_URI_UNP_OMITPASSWORD))\n                          ? ((flags & APR_URI_UNP_REVEALPASSWORD)\n                              ? uptr->password : \"XXXXXXXX\")\n                          : \"\",\n",
                    "rendered": {
                      "text": "                          ? uptr->user : \"\",\n                      (uptr->password && !(flags & APR_URI_UNP_OMITPASSWORD))\n                          ? \":\" : \"\",\n                      (uptr->password && !(flags & APR_URI_UNP_OMITPASSWORD))\n                          ? ((flags & APR_URI_UNP_REVEALPASSWORD)\n                              ? uptr->password : \"XXXXXXXX\")\n                          : \"\",\n",
                      "markdown": "`                          ? uptr->user : \"\",\n                      (uptr->password && !(flags & APR_URI_UNP_OMITPASSWORD))\n                          ? \":\" : \"\",\n                      (uptr->password && !(flags & APR_URI_UNP_OMITPASSWORD))\n                          ? ((flags & APR_URI_UNP_REVEALPASSWORD)\n                              ? uptr->password : \"XXXXXXXX\")\n                          : \"\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/uri/apr_uri.c"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 67,
                  "endLine": 105,
                  "endColumn": 75,
                  "snippet": {
                    "text": "            ret = apr_pstrcat(p,\n                      (uptr->user     && !(flags & APR_URI_UNP_OMITUSER))\n                          ? uptr->user : \"\",\n                      (uptr->password && !(flags & APR_URI_UNP_OMITPASSWORD))\n                          ? \":\" : \"\",\n                      (uptr->password && !(flags & APR_URI_UNP_OMITPASSWORD))\n                          ? ((flags & APR_URI_UNP_REVEALPASSWORD)\n",
                    "rendered": {
                      "text": "            ret = apr_pstrcat(p,\n                      (uptr->user     && !(flags & APR_URI_UNP_OMITUSER))\n                          ? uptr->user : \"\",\n                      (uptr->password && !(flags & APR_URI_UNP_OMITPASSWORD))\n                          ? \":\" : \"\",\n                      (uptr->password && !(flags & APR_URI_UNP_OMITPASSWORD))\n                          ? ((flags & APR_URI_UNP_REVEALPASSWORD)\n",
                      "markdown": "`            ret = apr_pstrcat(p,\n                      (uptr->user     && !(flags & APR_URI_UNP_OMITUSER))\n                          ? uptr->user : \"\",\n                      (uptr->password && !(flags & APR_URI_UNP_OMITPASSWORD))\n                          ? \":\" : \"\",\n                      (uptr->password && !(flags & APR_URI_UNP_OMITPASSWORD))\n                          ? ((flags & APR_URI_UNP_REVEALPASSWORD)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/uri/apr_uri.c"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 29,
                  "endLine": 105,
                  "endColumn": 37,
                  "snippet": {
                    "text": "            ret = apr_pstrcat(p,\n                      (uptr->user     && !(flags & APR_URI_UNP_OMITUSER))\n                          ? uptr->user : \"\",\n                      (uptr->password && !(flags & APR_URI_UNP_OMITPASSWORD))\n                          ? \":\" : \"\",\n                      (uptr->password && !(flags & APR_URI_UNP_OMITPASSWORD))\n                          ? ((flags & APR_URI_UNP_REVEALPASSWORD)\n",
                    "rendered": {
                      "text": "            ret = apr_pstrcat(p,\n                      (uptr->user     && !(flags & APR_URI_UNP_OMITUSER))\n                          ? uptr->user : \"\",\n                      (uptr->password && !(flags & APR_URI_UNP_OMITPASSWORD))\n                          ? \":\" : \"\",\n                      (uptr->password && !(flags & APR_URI_UNP_OMITPASSWORD))\n                          ? ((flags & APR_URI_UNP_REVEALPASSWORD)\n",
                      "markdown": "`            ret = apr_pstrcat(p,\n                      (uptr->user     && !(flags & APR_URI_UNP_OMITUSER))\n                          ? uptr->user : \"\",\n                      (uptr->password && !(flags & APR_URI_UNP_OMITPASSWORD))\n                          ? \":\" : \"\",\n                      (uptr->password && !(flags & APR_URI_UNP_OMITPASSWORD))\n                          ? ((flags & APR_URI_UNP_REVEALPASSWORD)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/uri/apr_uri.c"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 32,
                  "endLine": 101,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\n        /* Construct a \"user:password@\" string, honoring the passed\n         * APR_URI_UNP_ flags: */\n        if (uptr->user || uptr->password) {\n            ret = apr_pstrcat(p,\n                      (uptr->user     && !(flags & APR_URI_UNP_OMITUSER))\n                          ? uptr->user : \"\",\n",
                    "rendered": {
                      "text": "\n        /* Construct a \"user:password@\" string, honoring the passed\n         * APR_URI_UNP_ flags: */\n        if (uptr->user || uptr->password) {\n            ret = apr_pstrcat(p,\n                      (uptr->user     && !(flags & APR_URI_UNP_OMITUSER))\n                          ? uptr->user : \"\",\n",
                      "markdown": "`\n        /* Construct a \"user:password@\" string, honoring the passed\n         * APR_URI_UNP_ flags: */\n        if (uptr->user || uptr->password) {\n            ret = apr_pstrcat(p,\n                      (uptr->user     && !(flags & APR_URI_UNP_OMITUSER))\n                          ? uptr->user : \"\",\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/uri/apr_uri.c"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 29,
                  "endLine": 99,
                  "endColumn": 37,
                  "snippet": {
                    "text": "    /* If suppressing the site part, omit both user name & scheme://hostname */\n    if (!(flags & APR_URI_UNP_OMITSITEPART)) {\n\n        /* Construct a \"user:password@\" string, honoring the passed\n         * APR_URI_UNP_ flags: */\n        if (uptr->user || uptr->password) {\n            ret = apr_pstrcat(p,\n",
                    "rendered": {
                      "text": "    /* If suppressing the site part, omit both user name & scheme://hostname */\n    if (!(flags & APR_URI_UNP_OMITSITEPART)) {\n\n        /* Construct a \"user:password@\" string, honoring the passed\n         * APR_URI_UNP_ flags: */\n        if (uptr->user || uptr->password) {\n            ret = apr_pstrcat(p,\n",
                      "markdown": "`    /* If suppressing the site part, omit both user name & scheme://hostname */\n    if (!(flags & APR_URI_UNP_OMITSITEPART)) {\n\n        /* Construct a \"user:password@\" string, honoring the passed\n         * APR_URI_UNP_ flags: */\n        if (uptr->user || uptr->password) {\n            ret = apr_pstrcat(p,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/uri/apr_uri.c"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 27,
                  "endLine": 88,
                  "endColumn": 35,
                  "snippet": {
                    "text": "}\n\n/* Unparse a apr_uri_t structure to an URI string.\n * Optionally suppress the password for security reasons.\n */\nAPU_DECLARE(char *) apr_uri_unparse(apr_pool_t *p, \n                                    const apr_uri_t *uptr, \n",
                    "rendered": {
                      "text": "}\n\n/* Unparse a apr_uri_t structure to an URI string.\n * Optionally suppress the password for security reasons.\n */\nAPU_DECLARE(char *) apr_uri_unparse(apr_pool_t *p, \n                                    const apr_uri_t *uptr, \n",
                      "markdown": "`}\n\n/* Unparse a apr_uri_t structure to an URI string.\n * Optionally suppress the password for security reasons.\n */\nAPU_DECLARE(char *) apr_uri_unparse(apr_pool_t *p, \n                                    const apr_uri_t *uptr, \n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/uri/apr_uri.c"
                },
                "region": {
                  "startLine": 951,
                  "startColumn": 10,
                  "endLine": 951,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    if (s == NULL) {\n        return APR_EGENERAL;\n    }\n    uptr->hostname = apr_pstrndup(p, hostinfo, s - hostinfo - v6_offset1);\n    ++s;\n    uptr->port_str = apr_pstrdup(p, s);\n    if (*s != '\\0') {\n",
                    "rendered": {
                      "text": "    if (s == NULL) {\n        return APR_EGENERAL;\n    }\n    uptr->hostname = apr_pstrndup(p, hostinfo, s - hostinfo - v6_offset1);\n    ++s;\n    uptr->port_str = apr_pstrdup(p, s);\n    if (*s != '\\0') {\n",
                      "markdown": "`    if (s == NULL) {\n        return APR_EGENERAL;\n    }\n    uptr->hostname = apr_pstrndup(p, hostinfo, s - hostinfo - v6_offset1);\n    ++s;\n    uptr->port_str = apr_pstrdup(p, s);\n    if (*s != '\\0') {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/uri/apr_uri.c"
                },
                "region": {
                  "startLine": 879,
                  "startColumn": 14,
                  "endLine": 879,
                  "endColumn": 22,
                  "snippet": {
                    "text": "                                            uri - hostinfo - v6_offset2);\n            goto deal_with_path;\n        }\n        uptr->hostname = apr_pstrmemdup(p,\n                                        hostinfo + v6_offset1,\n                                        s - hostinfo - v6_offset2);\n        ++s;\n",
                    "rendered": {
                      "text": "                                            uri - hostinfo - v6_offset2);\n            goto deal_with_path;\n        }\n        uptr->hostname = apr_pstrmemdup(p,\n                                        hostinfo + v6_offset1,\n                                        s - hostinfo - v6_offset2);\n        ++s;\n",
                      "markdown": "`                                            uri - hostinfo - v6_offset2);\n            goto deal_with_path;\n        }\n        uptr->hostname = apr_pstrmemdup(p,\n                                        hostinfo + v6_offset1,\n                                        s - hostinfo - v6_offset2);\n        ++s;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/uri/apr_uri.c"
                },
                "region": {
                  "startLine": 874,
                  "startColumn": 18,
                  "endLine": 874,
                  "endColumn": 26,
                  "snippet": {
                    "text": "        }\n        if (s == NULL) {\n            /* we expect the common case to have no port */\n            uptr->hostname = apr_pstrmemdup(p,\n                                            hostinfo + v6_offset1,\n                                            uri - hostinfo - v6_offset2);\n            goto deal_with_path;\n",
                    "rendered": {
                      "text": "        }\n        if (s == NULL) {\n            /* we expect the common case to have no port */\n            uptr->hostname = apr_pstrmemdup(p,\n                                            hostinfo + v6_offset1,\n                                            uri - hostinfo - v6_offset2);\n            goto deal_with_path;\n",
                      "markdown": "`        }\n        if (s == NULL) {\n            /* we expect the common case to have no port */\n            uptr->hostname = apr_pstrmemdup(p,\n                                            hostinfo + v6_offset1,\n                                            uri - hostinfo - v6_offset2);\n            goto deal_with_path;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/uri/apr_uri.c"
                },
                "region": {
                  "startLine": 132,
                  "startColumn": 56,
                  "endLine": 132,
                  "endColumn": 64,
                  "snippet": {
                    "text": "                 uptr->port == 0 ||\n                 uptr->port == apr_uri_port_of_scheme(uptr->scheme));\n\n            ret = apr_pstrcat(p, \"//\", ret, lbrk, uptr->hostname, rbrk,\n                        is_default_port ? \"\" : \":\",\n                        is_default_port ? \"\" : uptr->port_str,\n                        NULL);\n",
                    "rendered": {
                      "text": "                 uptr->port == 0 ||\n                 uptr->port == apr_uri_port_of_scheme(uptr->scheme));\n\n            ret = apr_pstrcat(p, \"//\", ret, lbrk, uptr->hostname, rbrk,\n                        is_default_port ? \"\" : \":\",\n                        is_default_port ? \"\" : uptr->port_str,\n                        NULL);\n",
                      "markdown": "`                 uptr->port == 0 ||\n                 uptr->port == apr_uri_port_of_scheme(uptr->scheme));\n\n            ret = apr_pstrcat(p, \"//\", ret, lbrk, uptr->hostname, rbrk,\n                        is_default_port ? \"\" : \":\",\n                        is_default_port ? \"\" : uptr->port_str,\n                        NULL);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/uri/apr_uri.c"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 29,
                  "endLine": 122,
                  "endColumn": 37,
                  "snippet": {
                    "text": "            int is_default_port;\n            const char *lbrk = \"\", *rbrk = \"\";\n\n            if (strchr(uptr->hostname, ':')) { /* v6 literal */\n                lbrk = \"[\";\n                rbrk = \"]\";\n            }\n",
                    "rendered": {
                      "text": "            int is_default_port;\n            const char *lbrk = \"\", *rbrk = \"\";\n\n            if (strchr(uptr->hostname, ':')) { /* v6 literal */\n                lbrk = \"[\";\n                rbrk = \"]\";\n            }\n",
                      "markdown": "`            int is_default_port;\n            const char *lbrk = \"\", *rbrk = \"\";\n\n            if (strchr(uptr->hostname, ':')) { /* v6 literal */\n                lbrk = \"[\";\n                rbrk = \"]\";\n            }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/uri/apr_uri.c"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 18,
                  "endLine": 118,
                  "endColumn": 26,
                  "snippet": {
                    "text": "        }\n\n        /* Construct scheme://site string */\n        if (uptr->hostname) {\n            int is_default_port;\n            const char *lbrk = \"\", *rbrk = \"\";\n\n",
                    "rendered": {
                      "text": "        }\n\n        /* Construct scheme://site string */\n        if (uptr->hostname) {\n            int is_default_port;\n            const char *lbrk = \"\", *rbrk = \"\";\n\n",
                      "markdown": "`        }\n\n        /* Construct scheme://site string */\n        if (uptr->hostname) {\n            int is_default_port;\n            const char *lbrk = \"\", *rbrk = \"\";\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/buildconf"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 52,
                  "endLine": 9,
                  "snippet": {
                    "text": "# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/buildconf"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 1,
                  "endLine": 106,
                  "endColumn": 6,
                  "snippet": {
                    "text": "      VERSION=$REVISION\n      RELEASE=1\n  fi\n  sed -e \"s/APU_VERSION/$VERSION/\" -e \"s/APU_RELEASE/$RELEASE/\" \\\n    ./build/rpm/apr-util.spec.in > apr-util.spec\nfi\n\n",
                    "rendered": {
                      "text": "      VERSION=$REVISION\n      RELEASE=1\n  fi\n  sed -e \"s/APU_VERSION/$VERSION/\" -e \"s/APU_RELEASE/$RELEASE/\" \\\n    ./build/rpm/apr-util.spec.in > apr-util.spec\nfi\n\n",
                      "markdown": "`      VERSION=$REVISION\n      RELEASE=1\n  fi\n  sed -e \"s/APU_VERSION/$VERSION/\" -e \"s/APU_RELEASE/$RELEASE/\" \\\n    ./build/rpm/apr-util.spec.in > apr-util.spec\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/buildconf"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 27,
                  "endLine": 101,
                  "endColumn": 32,
                  "snippet": {
                    "text": "  echo rebuilding rpm spec file\n  REVISION=`build/get-version.sh all include/apu_version.h APU`\n  VERSION=`echo $REVISION | cut -d- -s -f1`\n  RELEASE=`echo $REVISION | cut -d- -s -f2`\n  if [ \"x$VERSION\" = \"x\" ]; then\n      VERSION=$REVISION\n      RELEASE=1\n",
                    "rendered": {
                      "text": "  echo rebuilding rpm spec file\n  REVISION=`build/get-version.sh all include/apu_version.h APU`\n  VERSION=`echo $REVISION | cut -d- -s -f1`\n  RELEASE=`echo $REVISION | cut -d- -s -f2`\n  if [ \"x$VERSION\" = \"x\" ]; then\n      VERSION=$REVISION\n      RELEASE=1\n",
                      "markdown": "`  echo rebuilding rpm spec file\n  REVISION=`build/get-version.sh all include/apu_version.h APU`\n  VERSION=`echo $REVISION | cut -d- -s -f1`\n  RELEASE=`echo $REVISION | cut -d- -s -f2`\n  if [ \"x$VERSION\" = \"x\" ]; then\n      VERSION=$REVISION\n      RELEASE=1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/buildconf"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 27,
                  "endLine": 100,
                  "endColumn": 32,
                  "snippet": {
                    "text": "if [ -f `which cut` ]; then\n  echo rebuilding rpm spec file\n  REVISION=`build/get-version.sh all include/apu_version.h APU`\n  VERSION=`echo $REVISION | cut -d- -s -f1`\n  RELEASE=`echo $REVISION | cut -d- -s -f2`\n  if [ \"x$VERSION\" = \"x\" ]; then\n      VERSION=$REVISION\n",
                    "rendered": {
                      "text": "if [ -f `which cut` ]; then\n  echo rebuilding rpm spec file\n  REVISION=`build/get-version.sh all include/apu_version.h APU`\n  VERSION=`echo $REVISION | cut -d- -s -f1`\n  RELEASE=`echo $REVISION | cut -d- -s -f2`\n  if [ \"x$VERSION\" = \"x\" ]; then\n      VERSION=$REVISION\n",
                      "markdown": "`if [ -f `which cut` ]; then\n  echo rebuilding rpm spec file\n  REVISION=`build/get-version.sh all include/apu_version.h APU`\n  VERSION=`echo $REVISION | cut -d- -s -f1`\n  RELEASE=`echo $REVISION | cut -d- -s -f2`\n  if [ \"x$VERSION\" = \"x\" ]; then\n      VERSION=$REVISION\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/buildconf"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 17,
                  "endLine": 98,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\n# Create RPM Spec file\nif [ -f `which cut` ]; then\n  echo rebuilding rpm spec file\n  REVISION=`build/get-version.sh all include/apu_version.h APU`\n  VERSION=`echo $REVISION | cut -d- -s -f1`\n  RELEASE=`echo $REVISION | cut -d- -s -f2`\n",
                    "rendered": {
                      "text": "\n# Create RPM Spec file\nif [ -f `which cut` ]; then\n  echo rebuilding rpm spec file\n  REVISION=`build/get-version.sh all include/apu_version.h APU`\n  VERSION=`echo $REVISION | cut -d- -s -f1`\n  RELEASE=`echo $REVISION | cut -d- -s -f2`\n",
                      "markdown": "`\n# Create RPM Spec file\nif [ -f `which cut` ]; then\n  echo rebuilding rpm spec file\n  REVISION=`build/get-version.sh all include/apu_version.h APU`\n  VERSION=`echo $REVISION | cut -d- -s -f1`\n  RELEASE=`echo $REVISION | cut -d- -s -f2`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/buildconf"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 8,
                  "endLine": 96,
                  "endColumn": 13,
                  "snippet": {
                    "text": "# Remove autoconf cache again\nrm -rf autom4te*.cache\n\n# Create RPM Spec file\nif [ -f `which cut` ]; then\n  echo rebuilding rpm spec file\n  REVISION=`build/get-version.sh all include/apu_version.h APU`\n",
                    "rendered": {
                      "text": "# Remove autoconf cache again\nrm -rf autom4te*.cache\n\n# Create RPM Spec file\nif [ -f `which cut` ]; then\n  echo rebuilding rpm spec file\n  REVISION=`build/get-version.sh all include/apu_version.h APU`\n",
                      "markdown": "`# Remove autoconf cache again\nrm -rf autom4te*.cache\n\n# Create RPM Spec file\nif [ -f `which cut` ]; then\n  echo rebuilding rpm spec file\n  REVISION=`build/get-version.sh all include/apu_version.h APU`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/buildconf"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 62,
                  "endLine": 63,
                  "endColumn": 3,
                  "snippet": {
                    "text": "\n# Remove some files, then copy them from apr source tree\nrm -f build/apr_common.m4 build/find_apr.m4 build/install.sh \\\n      build/config.guess build/config.sub build/get-version.sh\ncp -p $apr_src_dir/build/apr_common.m4 $apr_src_dir/build/find_apr.m4 \\\n      $apr_src_dir/build/install.sh $apr_src_dir/build/config.guess \\\n      $apr_src_dir/build/config.sub $apr_src_dir/build/get-version.sh \\\n      build/\n",
                    "rendered": {
                      "text": "\n# Remove some files, then copy them from apr source tree\nrm -f build/apr_common.m4 build/find_apr.m4 build/install.sh \\\n      build/config.guess build/config.sub build/get-version.sh\ncp -p $apr_src_dir/build/apr_common.m4 $apr_src_dir/build/find_apr.m4 \\\n      $apr_src_dir/build/install.sh $apr_src_dir/build/config.guess \\\n      $apr_src_dir/build/config.sub $apr_src_dir/build/get-version.sh \\\n      build/\n",
                      "markdown": "`\n# Remove some files, then copy them from apr source tree\nrm -f build/apr_common.m4 build/find_apr.m4 build/install.sh \\\n      build/config.guess build/config.sub build/get-version.sh\ncp -p $apr_src_dir/build/apr_common.m4 $apr_src_dir/build/find_apr.m4 \\\n      $apr_src_dir/build/install.sh $apr_src_dir/build/config.guess \\\n      $apr_src_dir/build/config.sub $apr_src_dir/build/get-version.sh \\\n      build/\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/buildconf"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 27,
                  "endLine": 33,
                  "endColumn": 32,
                  "snippet": {
                    "text": "do\n  # Normalize\n  case \"$1\" in\n  -*=*) optarg=`echo \"$1\" | sed 's/[-_a-zA-Z0-9]*=//'` ;;\n  *) optarg= ;;\n  esac\n\n",
                    "rendered": {
                      "text": "do\n  # Normalize\n  case \"$1\" in\n  -*=*) optarg=`echo \"$1\" | sed 's/[-_a-zA-Z0-9]*=//'` ;;\n  *) optarg= ;;\n  esac\n\n",
                      "markdown": "`do\n  # Normalize\n  case \"$1\" in\n  -*=*) optarg=`echo \"$1\" | sed 's/[-_a-zA-Z0-9]*=//'` ;;\n  *) optarg= ;;\n  esac\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/STATUS"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 5,
                  "endLine": 73,
                  "endColumn": 9,
                  "snippet": {
                    "text": "RELEASE NON-SHOWSTOPPERS BUT WOULD BE REAL NICE TO WRAP THESE UP:\n\n    * OpenSSL detection in crypto configure is broken.\n      At least on Solaris you need to add -lsocket -lnsl -ldl\n      when you link against OpenSSL.\n      We could use pkgconfig where available.\n      HTTPD uses a macro APACHE_CHECK_SSL_TOOLKIT whih itself\n",
                    "rendered": {
                      "text": "RELEASE NON-SHOWSTOPPERS BUT WOULD BE REAL NICE TO WRAP THESE UP:\n\n    * OpenSSL detection in crypto configure is broken.\n      At least on Solaris you need to add -lsocket -lnsl -ldl\n      when you link against OpenSSL.\n      We could use pkgconfig where available.\n      HTTPD uses a macro APACHE_CHECK_SSL_TOOLKIT whih itself\n",
                      "markdown": "`RELEASE NON-SHOWSTOPPERS BUT WOULD BE REAL NICE TO WRAP THESE UP:\n\n    * OpenSSL detection in crypto configure is broken.\n      At least on Solaris you need to add -lsocket -lnsl -ldl\n      when you link against OpenSSL.\n      We could use pkgconfig where available.\n      HTTPD uses a macro APACHE_CHECK_SSL_TOOLKIT whih itself\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/STATUS"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 13,
                  "endLine": 2,
                  "endColumn": 17,
                  "snippet": {
                    "text": "APACHE PORTABLE RUNTIME APR-UTIL LIBRARY STATUS:     -*- coding: utf-8 -*-\nLast modified at [$Date$]\n\nReleases:\n    2.0.0     : None/EOL - merged into ../apr/trunk/\n",
                    "rendered": {
                      "text": "APACHE PORTABLE RUNTIME APR-UTIL LIBRARY STATUS:     -*- coding: utf-8 -*-\nLast modified at [$Date$]\n\nReleases:\n    2.0.0     : None/EOL - merged into ../apr/trunk/\n",
                      "markdown": "`APACHE PORTABLE RUNTIME APR-UTIL LIBRARY STATUS:     -*- coding: utf-8 -*-\nLast modified at [$Date$]\n\nReleases:\n    2.0.0     : None/EOL - merged into ../apr/trunk/\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/STATUS"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 5,
                  "endLine": 72,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\nRELEASE NON-SHOWSTOPPERS BUT WOULD BE REAL NICE TO WRAP THESE UP:\n\n    * OpenSSL detection in crypto configure is broken.\n      At least on Solaris you need to add -lsocket -lnsl -ldl\n      when you link against OpenSSL.\n      We could use pkgconfig where available.\n",
                    "rendered": {
                      "text": "\nRELEASE NON-SHOWSTOPPERS BUT WOULD BE REAL NICE TO WRAP THESE UP:\n\n    * OpenSSL detection in crypto configure is broken.\n      At least on Solaris you need to add -lsocket -lnsl -ldl\n      when you link against OpenSSL.\n      We could use pkgconfig where available.\n",
                      "markdown": "`\nRELEASE NON-SHOWSTOPPERS BUT WOULD BE REAL NICE TO WRAP THESE UP:\n\n    * OpenSSL detection in crypto configure is broken.\n      At least on Solaris you need to add -lsocket -lnsl -ldl\n      when you link against OpenSSL.\n      We could use pkgconfig where available.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/STATUS"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 42,
                  "endLine": 70,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\nRELEASE SHOWSTOPPERS:\n\nRELEASE NON-SHOWSTOPPERS BUT WOULD BE REAL NICE TO WRAP THESE UP:\n\n    * OpenSSL detection in crypto configure is broken.\n      At least on Solaris you need to add -lsocket -lnsl -ldl\n",
                    "rendered": {
                      "text": "\nRELEASE SHOWSTOPPERS:\n\nRELEASE NON-SHOWSTOPPERS BUT WOULD BE REAL NICE TO WRAP THESE UP:\n\n    * OpenSSL detection in crypto configure is broken.\n      At least on Solaris you need to add -lsocket -lnsl -ldl\n",
                      "markdown": "`\nRELEASE SHOWSTOPPERS:\n\nRELEASE NON-SHOWSTOPPERS BUT WOULD BE REAL NICE TO WRAP THESE UP:\n\n    * OpenSSL detection in crypto configure is broken.\n      At least on Solaris you need to add -lsocket -lnsl -ldl\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/pkg/buildpkg.sh"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 52,
                  "endLine": 8,
                  "snippet": {
                    "text": "# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/pkg/buildpkg.sh"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 68,
                  "endLine": 90,
                  "endColumn": 73,
                  "snippet": {
                    "text": "current=`pwd`\ncd $TEMPDIR$PREFIX\necho \"i pkginfo=./pkginfo\" > prototype\nfind . -print | grep -v ./prototype | grep -v ./pkginfo | pkgproto | awk '{print $1\" \"$2\" \"$3\" \"$4\" root bin\"}' >> prototype\nmkdir $TEMPDIR/pkg\npkgmk -r $TEMPDIR$PREFIX -d $TEMPDIR/pkg\n\n",
                    "rendered": {
                      "text": "current=`pwd`\ncd $TEMPDIR$PREFIX\necho \"i pkginfo=./pkginfo\" > prototype\nfind . -print | grep -v ./prototype | grep -v ./pkginfo | pkgproto | awk '{print $1\" \"$2\" \"$3\" \"$4\" root bin\"}' >> prototype\nmkdir $TEMPDIR/pkg\npkgmk -r $TEMPDIR$PREFIX -d $TEMPDIR/pkg\n\n",
                      "markdown": "`current=`pwd`\ncd $TEMPDIR$PREFIX\necho \"i pkginfo=./pkginfo\" > prototype\nfind . -print | grep -v ./prototype | grep -v ./pkginfo | pkgproto | awk '{print $1\" \"$2\" \"$3\" \"$4\" root bin\"}' >> prototype\nmkdir $TEMPDIR/pkg\npkgmk -r $TEMPDIR$PREFIX -d $TEMPDIR/pkg\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/pkg/buildpkg.sh"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 37,
                  "endLine": 90,
                  "endColumn": 43,
                  "snippet": {
                    "text": "current=`pwd`\ncd $TEMPDIR$PREFIX\necho \"i pkginfo=./pkginfo\" > prototype\nfind . -print | grep -v ./prototype | grep -v ./pkginfo | pkgproto | awk '{print $1\" \"$2\" \"$3\" \"$4\" root bin\"}' >> prototype\nmkdir $TEMPDIR/pkg\npkgmk -r $TEMPDIR$PREFIX -d $TEMPDIR/pkg\n\n",
                    "rendered": {
                      "text": "current=`pwd`\ncd $TEMPDIR$PREFIX\necho \"i pkginfo=./pkginfo\" > prototype\nfind . -print | grep -v ./prototype | grep -v ./pkginfo | pkgproto | awk '{print $1\" \"$2\" \"$3\" \"$4\" root bin\"}' >> prototype\nmkdir $TEMPDIR/pkg\npkgmk -r $TEMPDIR$PREFIX -d $TEMPDIR/pkg\n\n",
                      "markdown": "`current=`pwd`\ncd $TEMPDIR$PREFIX\necho \"i pkginfo=./pkginfo\" > prototype\nfind . -print | grep -v ./prototype | grep -v ./pkginfo | pkgproto | awk '{print $1\" \"$2\" \"$3\" \"$4\" root bin\"}' >> prototype\nmkdir $TEMPDIR/pkg\npkgmk -r $TEMPDIR$PREFIX -d $TEMPDIR/pkg\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/pkg/buildpkg.sh"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 15,
                  "endLine": 90,
                  "endColumn": 21,
                  "snippet": {
                    "text": "current=`pwd`\ncd $TEMPDIR$PREFIX\necho \"i pkginfo=./pkginfo\" > prototype\nfind . -print | grep -v ./prototype | grep -v ./pkginfo | pkgproto | awk '{print $1\" \"$2\" \"$3\" \"$4\" root bin\"}' >> prototype\nmkdir $TEMPDIR/pkg\npkgmk -r $TEMPDIR$PREFIX -d $TEMPDIR/pkg\n\n",
                    "rendered": {
                      "text": "current=`pwd`\ncd $TEMPDIR$PREFIX\necho \"i pkginfo=./pkginfo\" > prototype\nfind . -print | grep -v ./prototype | grep -v ./pkginfo | pkgproto | awk '{print $1\" \"$2\" \"$3\" \"$4\" root bin\"}' >> prototype\nmkdir $TEMPDIR/pkg\npkgmk -r $TEMPDIR$PREFIX -d $TEMPDIR/pkg\n\n",
                      "markdown": "`current=`pwd`\ncd $TEMPDIR$PREFIX\necho \"i pkginfo=./pkginfo\" > prototype\nfind . -print | grep -v ./prototype | grep -v ./pkginfo | pkgproto | awk '{print $1\" \"$2\" \"$3\" \"$4\" root bin\"}' >> prototype\nmkdir $TEMPDIR/pkg\npkgmk -r $TEMPDIR$PREFIX -d $TEMPDIR/pkg\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/pkg/buildpkg.sh"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 38,
                  "endLine": 90,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ncurrent=`pwd`\ncd $TEMPDIR$PREFIX\necho \"i pkginfo=./pkginfo\" > prototype\nfind . -print | grep -v ./prototype | grep -v ./pkginfo | pkgproto | awk '{print $1\" \"$2\" \"$3\" \"$4\" root bin\"}' >> prototype\nmkdir $TEMPDIR/pkg\npkgmk -r $TEMPDIR$PREFIX -d $TEMPDIR/pkg\n\n",
                    "rendered": {
                      "text": "\ncurrent=`pwd`\ncd $TEMPDIR$PREFIX\necho \"i pkginfo=./pkginfo\" > prototype\nfind . -print | grep -v ./prototype | grep -v ./pkginfo | pkgproto | awk '{print $1\" \"$2\" \"$3\" \"$4\" root bin\"}' >> prototype\nmkdir $TEMPDIR/pkg\npkgmk -r $TEMPDIR$PREFIX -d $TEMPDIR/pkg\n\n",
                      "markdown": "`\ncurrent=`pwd`\ncd $TEMPDIR$PREFIX\necho \"i pkginfo=./pkginfo\" > prototype\nfind . -print | grep -v ./prototype | grep -v ./pkginfo | pkgproto | awk '{print $1\" \"$2\" \"$3\" \"$4\" root bin\"}' >> prototype\nmkdir $TEMPDIR/pkg\npkgmk -r $TEMPDIR$PREFIX -d $TEMPDIR/pkg\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/pkg/buildpkg.sh"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 19,
                  "endLine": 85,
                  "endColumn": 3,
                  "snippet": {
                    "text": "make\nmake install DESTDIR=$TEMPDIR\nrm $TEMPDIR$PREFIX/lib/aprutil.exp\n. build/pkg/pkginfo\ncp build/pkg/pkginfo $TEMPDIR$PREFIX\n\ncurrent=`pwd`\ncd $TEMPDIR$PREFIX\n",
                    "rendered": {
                      "text": "make\nmake install DESTDIR=$TEMPDIR\nrm $TEMPDIR$PREFIX/lib/aprutil.exp\n. build/pkg/pkginfo\ncp build/pkg/pkginfo $TEMPDIR$PREFIX\n\ncurrent=`pwd`\ncd $TEMPDIR$PREFIX\n",
                      "markdown": "`make\nmake install DESTDIR=$TEMPDIR\nrm $TEMPDIR$PREFIX/lib/aprutil.exp\n. build/pkg/pkginfo\ncp build/pkg/pkginfo $TEMPDIR$PREFIX\n\ncurrent=`pwd`\ncd $TEMPDIR$PREFIX\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/pkg/buildpkg.sh"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 27,
                  "endLine": 34,
                  "endColumn": 32,
                  "snippet": {
                    "text": "do\n  # Normalize\n  case \"$1\" in\n  -*=*) optarg=`echo \"$1\" | sed 's/[-_a-zA-Z0-9]*=//'` ;;\n  *) optarg= ;;\n  esac\n\n",
                    "rendered": {
                      "text": "do\n  # Normalize\n  case \"$1\" in\n  -*=*) optarg=`echo \"$1\" | sed 's/[-_a-zA-Z0-9]*=//'` ;;\n  *) optarg= ;;\n  esac\n\n",
                      "markdown": "`do\n  # Normalize\n  case \"$1\" in\n  -*=*) optarg=`echo \"$1\" | sed 's/[-_a-zA-Z0-9]*=//'` ;;\n  *) optarg= ;;\n  esac\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/pkg/buildpkg.sh"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 19,
                  "endLine": 19,
                  "endColumn": 27,
                  "snippet": {
                    "text": "#\n#\n\n# buildpkg.sh: This script builds a Solaris PKG from the source tree\n#              provided.\n\nPREFIX=/usr/local\n",
                    "rendered": {
                      "text": "#\n#\n\n# buildpkg.sh: This script builds a Solaris PKG from the source tree\n#              provided.\n\nPREFIX=/usr/local\n",
                      "markdown": "`#\n#\n\n# buildpkg.sh: This script builds a Solaris PKG from the source tree\n#              provided.\n\nPREFIX=/usr/local\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/Makefile.in"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 37,
                  "endLine": 111,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\naprutil.exp: exports.c export_vars.c\n\t@echo \"#! lib@APRUTIL_LIBNAME@.so\" > $@\n\t@echo \"* This file was AUTOGENERATED at build time.\" >> $@\n\t@echo \"* Please do not edit by hand.\" >> $@\n\t$(CPP) $(ALL_CPPFLAGS) $(ALL_INCLUDES) exports.c | grep \"ap_hack_\" | sed -e 's/^.*[)]\\(.*\\);$$/\\1/' >> $@\n\t$(CPP) $(ALL_CPPFLAGS) $(ALL_INCLUDES) export_vars.c | sed -e 's/^\\#[^!]*//' | sed -e '/^$$/d' >> $@\n",
                    "rendered": {
                      "text": "\naprutil.exp: exports.c export_vars.c\n\t@echo \"#! lib@APRUTIL_LIBNAME@.so\" > $@\n\t@echo \"* This file was AUTOGENERATED at build time.\" >> $@\n\t@echo \"* Please do not edit by hand.\" >> $@\n\t$(CPP) $(ALL_CPPFLAGS) $(ALL_INCLUDES) exports.c | grep \"ap_hack_\" | sed -e 's/^.*[)]\\(.*\\);$$/\\1/' >> $@\n\t$(CPP) $(ALL_CPPFLAGS) $(ALL_INCLUDES) export_vars.c | sed -e 's/^\\#[^!]*//' | sed -e '/^$$/d' >> $@\n",
                      "markdown": "`\naprutil.exp: exports.c export_vars.c\n\t@echo \"#! lib@APRUTIL_LIBNAME@.so\" > $@\n\t@echo \"* This file was AUTOGENERATED at build time.\" >> $@\n\t@echo \"* Please do not edit by hand.\" >> $@\n\t$(CPP) $(ALL_CPPFLAGS) $(ALL_INCLUDES) exports.c | grep \"ap_hack_\" | sed -e 's/^.*[)]\\(.*\\);$$/\\1/' >> $@\n\t$(CPP) $(ALL_CPPFLAGS) $(ALL_INCLUDES) export_vars.c | sed -e 's/^\\#[^!]*//' | sed -e '/^$$/d' >> $@\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/Makefile.in"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 79,
                  "endLine": 114,
                  "endColumn": 84,
                  "snippet": {
                    "text": "\t@echo \"* This file was AUTOGENERATED at build time.\" >> $@\n\t@echo \"* Please do not edit by hand.\" >> $@\n\t$(CPP) $(ALL_CPPFLAGS) $(ALL_INCLUDES) exports.c | grep \"ap_hack_\" | sed -e 's/^.*[)]\\(.*\\);$$/\\1/' >> $@\n\t$(CPP) $(ALL_CPPFLAGS) $(ALL_INCLUDES) export_vars.c | sed -e 's/^\\#[^!]*//' | sed -e '/^$$/d' >> $@\n\ndox:\n\tdoxygen $(top_srcdir)/docs/doxygen.conf\n",
                    "rendered": {
                      "text": "\t@echo \"* This file was AUTOGENERATED at build time.\" >> $@\n\t@echo \"* Please do not edit by hand.\" >> $@\n\t$(CPP) $(ALL_CPPFLAGS) $(ALL_INCLUDES) exports.c | grep \"ap_hack_\" | sed -e 's/^.*[)]\\(.*\\);$$/\\1/' >> $@\n\t$(CPP) $(ALL_CPPFLAGS) $(ALL_INCLUDES) export_vars.c | sed -e 's/^\\#[^!]*//' | sed -e '/^$$/d' >> $@\n\ndox:\n\tdoxygen $(top_srcdir)/docs/doxygen.conf\n",
                      "markdown": "`\t@echo \"* This file was AUTOGENERATED at build time.\" >> $@\n\t@echo \"* Please do not edit by hand.\" >> $@\n\t$(CPP) $(ALL_CPPFLAGS) $(ALL_INCLUDES) exports.c | grep \"ap_hack_\" | sed -e 's/^.*[)]\\(.*\\);$$/\\1/' >> $@\n\t$(CPP) $(ALL_CPPFLAGS) $(ALL_INCLUDES) export_vars.c | sed -e 's/^\\#[^!]*//' | sed -e '/^$$/d' >> $@\n\ndox:\n\tdoxygen $(top_srcdir)/docs/doxygen.conf\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/Makefile.in"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 55,
                  "endLine": 114,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\t@echo \"* This file was AUTOGENERATED at build time.\" >> $@\n\t@echo \"* Please do not edit by hand.\" >> $@\n\t$(CPP) $(ALL_CPPFLAGS) $(ALL_INCLUDES) exports.c | grep \"ap_hack_\" | sed -e 's/^.*[)]\\(.*\\);$$/\\1/' >> $@\n\t$(CPP) $(ALL_CPPFLAGS) $(ALL_INCLUDES) export_vars.c | sed -e 's/^\\#[^!]*//' | sed -e '/^$$/d' >> $@\n\ndox:\n\tdoxygen $(top_srcdir)/docs/doxygen.conf\n",
                    "rendered": {
                      "text": "\t@echo \"* This file was AUTOGENERATED at build time.\" >> $@\n\t@echo \"* Please do not edit by hand.\" >> $@\n\t$(CPP) $(ALL_CPPFLAGS) $(ALL_INCLUDES) exports.c | grep \"ap_hack_\" | sed -e 's/^.*[)]\\(.*\\);$$/\\1/' >> $@\n\t$(CPP) $(ALL_CPPFLAGS) $(ALL_INCLUDES) export_vars.c | sed -e 's/^\\#[^!]*//' | sed -e '/^$$/d' >> $@\n\ndox:\n\tdoxygen $(top_srcdir)/docs/doxygen.conf\n",
                      "markdown": "`\t@echo \"* This file was AUTOGENERATED at build time.\" >> $@\n\t@echo \"* Please do not edit by hand.\" >> $@\n\t$(CPP) $(ALL_CPPFLAGS) $(ALL_INCLUDES) exports.c | grep \"ap_hack_\" | sed -e 's/^.*[)]\\(.*\\);$$/\\1/' >> $@\n\t$(CPP) $(ALL_CPPFLAGS) $(ALL_INCLUDES) export_vars.c | sed -e 's/^\\#[^!]*//' | sed -e '/^$$/d' >> $@\n\ndox:\n\tdoxygen $(top_srcdir)/docs/doxygen.conf\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/Makefile.in"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 69,
                  "endLine": 113,
                  "endColumn": 74,
                  "snippet": {
                    "text": "\t@echo \"#! lib@APRUTIL_LIBNAME@.so\" > $@\n\t@echo \"* This file was AUTOGENERATED at build time.\" >> $@\n\t@echo \"* Please do not edit by hand.\" >> $@\n\t$(CPP) $(ALL_CPPFLAGS) $(ALL_INCLUDES) exports.c | grep \"ap_hack_\" | sed -e 's/^.*[)]\\(.*\\);$$/\\1/' >> $@\n\t$(CPP) $(ALL_CPPFLAGS) $(ALL_INCLUDES) export_vars.c | sed -e 's/^\\#[^!]*//' | sed -e '/^$$/d' >> $@\n\ndox:\n",
                    "rendered": {
                      "text": "\t@echo \"#! lib@APRUTIL_LIBNAME@.so\" > $@\n\t@echo \"* This file was AUTOGENERATED at build time.\" >> $@\n\t@echo \"* Please do not edit by hand.\" >> $@\n\t$(CPP) $(ALL_CPPFLAGS) $(ALL_INCLUDES) exports.c | grep \"ap_hack_\" | sed -e 's/^.*[)]\\(.*\\);$$/\\1/' >> $@\n\t$(CPP) $(ALL_CPPFLAGS) $(ALL_INCLUDES) export_vars.c | sed -e 's/^\\#[^!]*//' | sed -e '/^$$/d' >> $@\n\ndox:\n",
                      "markdown": "`\t@echo \"#! lib@APRUTIL_LIBNAME@.so\" > $@\n\t@echo \"* This file was AUTOGENERATED at build time.\" >> $@\n\t@echo \"* Please do not edit by hand.\" >> $@\n\t$(CPP) $(ALL_CPPFLAGS) $(ALL_INCLUDES) exports.c | grep \"ap_hack_\" | sed -e 's/^.*[)]\\(.*\\);$$/\\1/' >> $@\n\t$(CPP) $(ALL_CPPFLAGS) $(ALL_INCLUDES) export_vars.c | sed -e 's/^\\#[^!]*//' | sed -e '/^$$/d' >> $@\n\ndox:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/Makefile.in"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 51,
                  "endLine": 113,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\t@echo \"#! lib@APRUTIL_LIBNAME@.so\" > $@\n\t@echo \"* This file was AUTOGENERATED at build time.\" >> $@\n\t@echo \"* Please do not edit by hand.\" >> $@\n\t$(CPP) $(ALL_CPPFLAGS) $(ALL_INCLUDES) exports.c | grep \"ap_hack_\" | sed -e 's/^.*[)]\\(.*\\);$$/\\1/' >> $@\n\t$(CPP) $(ALL_CPPFLAGS) $(ALL_INCLUDES) export_vars.c | sed -e 's/^\\#[^!]*//' | sed -e '/^$$/d' >> $@\n\ndox:\n",
                    "rendered": {
                      "text": "\t@echo \"#! lib@APRUTIL_LIBNAME@.so\" > $@\n\t@echo \"* This file was AUTOGENERATED at build time.\" >> $@\n\t@echo \"* Please do not edit by hand.\" >> $@\n\t$(CPP) $(ALL_CPPFLAGS) $(ALL_INCLUDES) exports.c | grep \"ap_hack_\" | sed -e 's/^.*[)]\\(.*\\);$$/\\1/' >> $@\n\t$(CPP) $(ALL_CPPFLAGS) $(ALL_INCLUDES) export_vars.c | sed -e 's/^\\#[^!]*//' | sed -e '/^$$/d' >> $@\n\ndox:\n",
                      "markdown": "`\t@echo \"#! lib@APRUTIL_LIBNAME@.so\" > $@\n\t@echo \"* This file was AUTOGENERATED at build time.\" >> $@\n\t@echo \"* Please do not edit by hand.\" >> $@\n\t$(CPP) $(ALL_CPPFLAGS) $(ALL_INCLUDES) exports.c | grep \"ap_hack_\" | sed -e 's/^.*[)]\\(.*\\);$$/\\1/' >> $@\n\t$(CPP) $(ALL_CPPFLAGS) $(ALL_INCLUDES) export_vars.c | sed -e 's/^\\#[^!]*//' | sed -e '/^$$/d' >> $@\n\ndox:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/Makefile.in"
                },
                "region": {
                  "startLine": 76,
                  "endLine": 76,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\n# Create apu-config script suitable for the install tree\napu-config.out: $(APU_CONFIG)\n\tsed 's,^\\(location=\\).*$$,\\1installed,' < $(APU_CONFIG) > $@\n\ninstall: $(TARGETS) install-modules\n\t$(APR_MKDIR) $(DESTDIR)$(includedir) $(DESTDIR)$(libdir)/pkgconfig \\\n",
                    "rendered": {
                      "text": "\n# Create apu-config script suitable for the install tree\napu-config.out: $(APU_CONFIG)\n\tsed 's,^\\(location=\\).*$$,\\1installed,' < $(APU_CONFIG) > $@\n\ninstall: $(TARGETS) install-modules\n\t$(APR_MKDIR) $(DESTDIR)$(includedir) $(DESTDIR)$(libdir)/pkgconfig \\\n",
                      "markdown": "`\n# Create apu-config script suitable for the install tree\napu-config.out: $(APU_CONFIG)\n\tsed 's,^\\(location=\\).*$$,\\1installed,' < $(APU_CONFIG) > $@\n\ninstall: $(TARGETS) install-modules\n\t$(APR_MKDIR) $(DESTDIR)$(includedir) $(DESTDIR)$(libdir)/pkgconfig \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/Makefile.in"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 19,
                  "endLine": 74,
                  "endColumn": 27,
                  "snippet": {
                    "text": "top_srcdir=@abs_srcdir@\ntop_blddir=@abs_builddir@\n\n# Create apu-config script suitable for the install tree\napu-config.out: $(APU_CONFIG)\n\tsed 's,^\\(location=\\).*$$,\\1installed,' < $(APU_CONFIG) > $@\n\n",
                    "rendered": {
                      "text": "top_srcdir=@abs_srcdir@\ntop_blddir=@abs_builddir@\n\n# Create apu-config script suitable for the install tree\napu-config.out: $(APU_CONFIG)\n\tsed 's,^\\(location=\\).*$$,\\1installed,' < $(APU_CONFIG) > $@\n\n",
                      "markdown": "`top_srcdir=@abs_srcdir@\ntop_blddir=@abs_builddir@\n\n# Create apu-config script suitable for the install tree\napu-config.out: $(APU_CONFIG)\n\tsed 's,^\\(location=\\).*$$,\\1installed,' < $(APU_CONFIG) > $@\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/NOTICE"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 8,
                  "endLine": 9,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\nPortions of this software were developed at the National Center\nfor Supercomputing Applications (NCSA) at the University of\nIllinois at Urbana-Champaign.\n\nThis software contains code derived from the RSA Data Security\nInc. MD5 Message-Digest Algorithm, including various\n",
                    "rendered": {
                      "text": "\nPortions of this software were developed at the National Center\nfor Supercomputing Applications (NCSA) at the University of\nIllinois at Urbana-Champaign.\n\nThis software contains code derived from the RSA Data Security\nInc. MD5 Message-Digest Algorithm, including various\n",
                      "markdown": "`\nPortions of this software were developed at the National Center\nfor Supercomputing Applications (NCSA) at the University of\nIllinois at Urbana-Champaign.\n\nThis software contains code derived from the RSA Data Security\nInc. MD5 Message-Digest Algorithm, including various\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/NOTICE"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 38,
                  "endLine": 8,
                  "endColumn": 42,
                  "snippet": {
                    "text": "The Apache Software Foundation (http://www.apache.org/).\n\nPortions of this software were developed at the National Center\nfor Supercomputing Applications (NCSA) at the University of\nIllinois at Urbana-Champaign.\n\nThis software contains code derived from the RSA Data Security\n",
                    "rendered": {
                      "text": "The Apache Software Foundation (http://www.apache.org/).\n\nPortions of this software were developed at the National Center\nfor Supercomputing Applications (NCSA) at the University of\nIllinois at Urbana-Champaign.\n\nThis software contains code derived from the RSA Data Security\n",
                      "markdown": "`The Apache Software Foundation (http://www.apache.org/).\n\nPortions of this software were developed at the National Center\nfor Supercomputing Applications (NCSA) at the University of\nIllinois at Urbana-Champaign.\n\nThis software contains code derived from the RSA Data Security\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/NOTICE"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 40,
                  "endLine": 7,
                  "endColumn": 44,
                  "snippet": {
                    "text": "This product includes software developed at\nThe Apache Software Foundation (http://www.apache.org/).\n\nPortions of this software were developed at the National Center\nfor Supercomputing Applications (NCSA) at the University of\nIllinois at Urbana-Champaign.\n\n",
                    "rendered": {
                      "text": "This product includes software developed at\nThe Apache Software Foundation (http://www.apache.org/).\n\nPortions of this software were developed at the National Center\nfor Supercomputing Applications (NCSA) at the University of\nIllinois at Urbana-Champaign.\n\n",
                      "markdown": "`This product includes software developed at\nThe Apache Software Foundation (http://www.apache.org/).\n\nPortions of this software were developed at the National Center\nfor Supercomputing Applications (NCSA) at the University of\nIllinois at Urbana-Champaign.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/NOTICE"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 40,
                  "endLine": 5,
                  "snippet": {
                    "text": "Apache Portable Runtime Utility Library\nCopyright 2024 The Apache Software Foundation.\n\nThis product includes software developed at\nThe Apache Software Foundation (http://www.apache.org/).\n\nPortions of this software were developed at the National Center\nfor Supercomputing Applications (NCSA) at the University of\n",
                    "rendered": {
                      "text": "Apache Portable Runtime Utility Library\nCopyright 2024 The Apache Software Foundation.\n\nThis product includes software developed at\nThe Apache Software Foundation (http://www.apache.org/).\n\nPortions of this software were developed at the National Center\nfor Supercomputing Applications (NCSA) at the University of\n",
                      "markdown": "`Apache Portable Runtime Utility Library\nCopyright 2024 The Apache Software Foundation.\n\nThis product includes software developed at\nThe Apache Software Foundation (http://www.apache.org/).\n\nPortions of this software were developed at the National Center\nfor Supercomputing Applications (NCSA) at the University of\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/apr_md4.c"
                },
                "region": {
                  "startLine": 354,
                  "startColumn": 3,
                  "endLine": 354,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    HH (a, b, c, d, x[ 3], S31); /* 45 */\n    HH (d, a, b, c, x[11], S32); /* 46 */\n    HH (c, d, a, b, x[ 7], S33); /* 47 */\n    HH (b, c, d, a, x[15], S34); /* 48 */\n\n    state[0] += a;\n    state[1] += b;\n",
                    "rendered": {
                      "text": "    HH (a, b, c, d, x[ 3], S31); /* 45 */\n    HH (d, a, b, c, x[11], S32); /* 46 */\n    HH (c, d, a, b, x[ 7], S33); /* 47 */\n    HH (b, c, d, a, x[15], S34); /* 48 */\n\n    state[0] += a;\n    state[1] += b;\n",
                      "markdown": "`    HH (a, b, c, d, x[ 3], S31); /* 45 */\n    HH (d, a, b, c, x[11], S32); /* 46 */\n    HH (c, d, a, b, x[ 7], S33); /* 47 */\n    HH (b, c, d, a, x[15], S34); /* 48 */\n\n    state[0] += a;\n    state[1] += b;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/apr_md4.c"
                },
                "region": {
                  "startLine": 353,
                  "startColumn": 3,
                  "endLine": 353,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    HH (b, c, d, a, x[13], S34); /* 44 */\n    HH (a, b, c, d, x[ 3], S31); /* 45 */\n    HH (d, a, b, c, x[11], S32); /* 46 */\n    HH (c, d, a, b, x[ 7], S33); /* 47 */\n    HH (b, c, d, a, x[15], S34); /* 48 */\n\n    state[0] += a;\n",
                    "rendered": {
                      "text": "    HH (b, c, d, a, x[13], S34); /* 44 */\n    HH (a, b, c, d, x[ 3], S31); /* 45 */\n    HH (d, a, b, c, x[11], S32); /* 46 */\n    HH (c, d, a, b, x[ 7], S33); /* 47 */\n    HH (b, c, d, a, x[15], S34); /* 48 */\n\n    state[0] += a;\n",
                      "markdown": "`    HH (b, c, d, a, x[13], S34); /* 44 */\n    HH (a, b, c, d, x[ 3], S31); /* 45 */\n    HH (d, a, b, c, x[11], S32); /* 46 */\n    HH (c, d, a, b, x[ 7], S33); /* 47 */\n    HH (b, c, d, a, x[15], S34); /* 48 */\n\n    state[0] += a;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/apr_md4.c"
                },
                "region": {
                  "startLine": 352,
                  "startColumn": 3,
                  "endLine": 352,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    HH (c, d, a, b, x[ 5], S33); /* 43 */\n    HH (b, c, d, a, x[13], S34); /* 44 */\n    HH (a, b, c, d, x[ 3], S31); /* 45 */\n    HH (d, a, b, c, x[11], S32); /* 46 */\n    HH (c, d, a, b, x[ 7], S33); /* 47 */\n    HH (b, c, d, a, x[15], S34); /* 48 */\n\n",
                    "rendered": {
                      "text": "    HH (c, d, a, b, x[ 5], S33); /* 43 */\n    HH (b, c, d, a, x[13], S34); /* 44 */\n    HH (a, b, c, d, x[ 3], S31); /* 45 */\n    HH (d, a, b, c, x[11], S32); /* 46 */\n    HH (c, d, a, b, x[ 7], S33); /* 47 */\n    HH (b, c, d, a, x[15], S34); /* 48 */\n\n",
                      "markdown": "`    HH (c, d, a, b, x[ 5], S33); /* 43 */\n    HH (b, c, d, a, x[13], S34); /* 44 */\n    HH (a, b, c, d, x[ 3], S31); /* 45 */\n    HH (d, a, b, c, x[11], S32); /* 46 */\n    HH (c, d, a, b, x[ 7], S33); /* 47 */\n    HH (b, c, d, a, x[15], S34); /* 48 */\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/apr_md4.c"
                },
                "region": {
                  "startLine": 351,
                  "startColumn": 3,
                  "endLine": 351,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    HH (d, a, b, c, x[ 9], S32); /* 42 */\n    HH (c, d, a, b, x[ 5], S33); /* 43 */\n    HH (b, c, d, a, x[13], S34); /* 44 */\n    HH (a, b, c, d, x[ 3], S31); /* 45 */\n    HH (d, a, b, c, x[11], S32); /* 46 */\n    HH (c, d, a, b, x[ 7], S33); /* 47 */\n    HH (b, c, d, a, x[15], S34); /* 48 */\n",
                    "rendered": {
                      "text": "    HH (d, a, b, c, x[ 9], S32); /* 42 */\n    HH (c, d, a, b, x[ 5], S33); /* 43 */\n    HH (b, c, d, a, x[13], S34); /* 44 */\n    HH (a, b, c, d, x[ 3], S31); /* 45 */\n    HH (d, a, b, c, x[11], S32); /* 46 */\n    HH (c, d, a, b, x[ 7], S33); /* 47 */\n    HH (b, c, d, a, x[15], S34); /* 48 */\n",
                      "markdown": "`    HH (d, a, b, c, x[ 9], S32); /* 42 */\n    HH (c, d, a, b, x[ 5], S33); /* 43 */\n    HH (b, c, d, a, x[13], S34); /* 44 */\n    HH (a, b, c, d, x[ 3], S31); /* 45 */\n    HH (d, a, b, c, x[11], S32); /* 46 */\n    HH (c, d, a, b, x[ 7], S33); /* 47 */\n    HH (b, c, d, a, x[15], S34); /* 48 */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/apr_md4.c"
                },
                "region": {
                  "startLine": 350,
                  "startColumn": 3,
                  "endLine": 350,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    HH (a, b, c, d, x[ 1], S31); /* 41 */\n    HH (d, a, b, c, x[ 9], S32); /* 42 */\n    HH (c, d, a, b, x[ 5], S33); /* 43 */\n    HH (b, c, d, a, x[13], S34); /* 44 */\n    HH (a, b, c, d, x[ 3], S31); /* 45 */\n    HH (d, a, b, c, x[11], S32); /* 46 */\n    HH (c, d, a, b, x[ 7], S33); /* 47 */\n",
                    "rendered": {
                      "text": "    HH (a, b, c, d, x[ 1], S31); /* 41 */\n    HH (d, a, b, c, x[ 9], S32); /* 42 */\n    HH (c, d, a, b, x[ 5], S33); /* 43 */\n    HH (b, c, d, a, x[13], S34); /* 44 */\n    HH (a, b, c, d, x[ 3], S31); /* 45 */\n    HH (d, a, b, c, x[11], S32); /* 46 */\n    HH (c, d, a, b, x[ 7], S33); /* 47 */\n",
                      "markdown": "`    HH (a, b, c, d, x[ 1], S31); /* 41 */\n    HH (d, a, b, c, x[ 9], S32); /* 42 */\n    HH (c, d, a, b, x[ 5], S33); /* 43 */\n    HH (b, c, d, a, x[13], S34); /* 44 */\n    HH (a, b, c, d, x[ 3], S31); /* 45 */\n    HH (d, a, b, c, x[11], S32); /* 46 */\n    HH (c, d, a, b, x[ 7], S33); /* 47 */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/apr_md4.c"
                },
                "region": {
                  "startLine": 349,
                  "startColumn": 3,
                  "endLine": 349,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    HH (b, c, d, a, x[14], S34); /* 40 */\n    HH (a, b, c, d, x[ 1], S31); /* 41 */\n    HH (d, a, b, c, x[ 9], S32); /* 42 */\n    HH (c, d, a, b, x[ 5], S33); /* 43 */\n    HH (b, c, d, a, x[13], S34); /* 44 */\n    HH (a, b, c, d, x[ 3], S31); /* 45 */\n    HH (d, a, b, c, x[11], S32); /* 46 */\n",
                    "rendered": {
                      "text": "    HH (b, c, d, a, x[14], S34); /* 40 */\n    HH (a, b, c, d, x[ 1], S31); /* 41 */\n    HH (d, a, b, c, x[ 9], S32); /* 42 */\n    HH (c, d, a, b, x[ 5], S33); /* 43 */\n    HH (b, c, d, a, x[13], S34); /* 44 */\n    HH (a, b, c, d, x[ 3], S31); /* 45 */\n    HH (d, a, b, c, x[11], S32); /* 46 */\n",
                      "markdown": "`    HH (b, c, d, a, x[14], S34); /* 40 */\n    HH (a, b, c, d, x[ 1], S31); /* 41 */\n    HH (d, a, b, c, x[ 9], S32); /* 42 */\n    HH (c, d, a, b, x[ 5], S33); /* 43 */\n    HH (b, c, d, a, x[13], S34); /* 44 */\n    HH (a, b, c, d, x[ 3], S31); /* 45 */\n    HH (d, a, b, c, x[11], S32); /* 46 */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/apr_md4.c"
                },
                "region": {
                  "startLine": 348,
                  "startColumn": 3,
                  "endLine": 348,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    HH (c, d, a, b, x[ 6], S33); /* 39 */\n    HH (b, c, d, a, x[14], S34); /* 40 */\n    HH (a, b, c, d, x[ 1], S31); /* 41 */\n    HH (d, a, b, c, x[ 9], S32); /* 42 */\n    HH (c, d, a, b, x[ 5], S33); /* 43 */\n    HH (b, c, d, a, x[13], S34); /* 44 */\n    HH (a, b, c, d, x[ 3], S31); /* 45 */\n",
                    "rendered": {
                      "text": "    HH (c, d, a, b, x[ 6], S33); /* 39 */\n    HH (b, c, d, a, x[14], S34); /* 40 */\n    HH (a, b, c, d, x[ 1], S31); /* 41 */\n    HH (d, a, b, c, x[ 9], S32); /* 42 */\n    HH (c, d, a, b, x[ 5], S33); /* 43 */\n    HH (b, c, d, a, x[13], S34); /* 44 */\n    HH (a, b, c, d, x[ 3], S31); /* 45 */\n",
                      "markdown": "`    HH (c, d, a, b, x[ 6], S33); /* 39 */\n    HH (b, c, d, a, x[14], S34); /* 40 */\n    HH (a, b, c, d, x[ 1], S31); /* 41 */\n    HH (d, a, b, c, x[ 9], S32); /* 42 */\n    HH (c, d, a, b, x[ 5], S33); /* 43 */\n    HH (b, c, d, a, x[13], S34); /* 44 */\n    HH (a, b, c, d, x[ 3], S31); /* 45 */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/apr_md4.c"
                },
                "region": {
                  "startLine": 347,
                  "startColumn": 3,
                  "endLine": 347,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    HH (d, a, b, c, x[10], S32); /* 38 */\n    HH (c, d, a, b, x[ 6], S33); /* 39 */\n    HH (b, c, d, a, x[14], S34); /* 40 */\n    HH (a, b, c, d, x[ 1], S31); /* 41 */\n    HH (d, a, b, c, x[ 9], S32); /* 42 */\n    HH (c, d, a, b, x[ 5], S33); /* 43 */\n    HH (b, c, d, a, x[13], S34); /* 44 */\n",
                    "rendered": {
                      "text": "    HH (d, a, b, c, x[10], S32); /* 38 */\n    HH (c, d, a, b, x[ 6], S33); /* 39 */\n    HH (b, c, d, a, x[14], S34); /* 40 */\n    HH (a, b, c, d, x[ 1], S31); /* 41 */\n    HH (d, a, b, c, x[ 9], S32); /* 42 */\n    HH (c, d, a, b, x[ 5], S33); /* 43 */\n    HH (b, c, d, a, x[13], S34); /* 44 */\n",
                      "markdown": "`    HH (d, a, b, c, x[10], S32); /* 38 */\n    HH (c, d, a, b, x[ 6], S33); /* 39 */\n    HH (b, c, d, a, x[14], S34); /* 40 */\n    HH (a, b, c, d, x[ 1], S31); /* 41 */\n    HH (d, a, b, c, x[ 9], S32); /* 42 */\n    HH (c, d, a, b, x[ 5], S33); /* 43 */\n    HH (b, c, d, a, x[13], S34); /* 44 */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/apr_md4.c"
                },
                "region": {
                  "startLine": 346,
                  "startColumn": 3,
                  "endLine": 346,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    HH (a, b, c, d, x[ 2], S31); /* 37 */\n    HH (d, a, b, c, x[10], S32); /* 38 */\n    HH (c, d, a, b, x[ 6], S33); /* 39 */\n    HH (b, c, d, a, x[14], S34); /* 40 */\n    HH (a, b, c, d, x[ 1], S31); /* 41 */\n    HH (d, a, b, c, x[ 9], S32); /* 42 */\n    HH (c, d, a, b, x[ 5], S33); /* 43 */\n",
                    "rendered": {
                      "text": "    HH (a, b, c, d, x[ 2], S31); /* 37 */\n    HH (d, a, b, c, x[10], S32); /* 38 */\n    HH (c, d, a, b, x[ 6], S33); /* 39 */\n    HH (b, c, d, a, x[14], S34); /* 40 */\n    HH (a, b, c, d, x[ 1], S31); /* 41 */\n    HH (d, a, b, c, x[ 9], S32); /* 42 */\n    HH (c, d, a, b, x[ 5], S33); /* 43 */\n",
                      "markdown": "`    HH (a, b, c, d, x[ 2], S31); /* 37 */\n    HH (d, a, b, c, x[10], S32); /* 38 */\n    HH (c, d, a, b, x[ 6], S33); /* 39 */\n    HH (b, c, d, a, x[14], S34); /* 40 */\n    HH (a, b, c, d, x[ 1], S31); /* 41 */\n    HH (d, a, b, c, x[ 9], S32); /* 42 */\n    HH (c, d, a, b, x[ 5], S33); /* 43 */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/apr_md4.c"
                },
                "region": {
                  "startLine": 345,
                  "startColumn": 3,
                  "endLine": 345,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    HH (b, c, d, a, x[12], S34); /* 36 */\n    HH (a, b, c, d, x[ 2], S31); /* 37 */\n    HH (d, a, b, c, x[10], S32); /* 38 */\n    HH (c, d, a, b, x[ 6], S33); /* 39 */\n    HH (b, c, d, a, x[14], S34); /* 40 */\n    HH (a, b, c, d, x[ 1], S31); /* 41 */\n    HH (d, a, b, c, x[ 9], S32); /* 42 */\n",
                    "rendered": {
                      "text": "    HH (b, c, d, a, x[12], S34); /* 36 */\n    HH (a, b, c, d, x[ 2], S31); /* 37 */\n    HH (d, a, b, c, x[10], S32); /* 38 */\n    HH (c, d, a, b, x[ 6], S33); /* 39 */\n    HH (b, c, d, a, x[14], S34); /* 40 */\n    HH (a, b, c, d, x[ 1], S31); /* 41 */\n    HH (d, a, b, c, x[ 9], S32); /* 42 */\n",
                      "markdown": "`    HH (b, c, d, a, x[12], S34); /* 36 */\n    HH (a, b, c, d, x[ 2], S31); /* 37 */\n    HH (d, a, b, c, x[10], S32); /* 38 */\n    HH (c, d, a, b, x[ 6], S33); /* 39 */\n    HH (b, c, d, a, x[14], S34); /* 40 */\n    HH (a, b, c, d, x[ 1], S31); /* 41 */\n    HH (d, a, b, c, x[ 9], S32); /* 42 */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/apr_md4.c"
                },
                "region": {
                  "startLine": 344,
                  "startColumn": 3,
                  "endLine": 344,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    HH (c, d, a, b, x[ 4], S33); /* 35 */\n    HH (b, c, d, a, x[12], S34); /* 36 */\n    HH (a, b, c, d, x[ 2], S31); /* 37 */\n    HH (d, a, b, c, x[10], S32); /* 38 */\n    HH (c, d, a, b, x[ 6], S33); /* 39 */\n    HH (b, c, d, a, x[14], S34); /* 40 */\n    HH (a, b, c, d, x[ 1], S31); /* 41 */\n",
                    "rendered": {
                      "text": "    HH (c, d, a, b, x[ 4], S33); /* 35 */\n    HH (b, c, d, a, x[12], S34); /* 36 */\n    HH (a, b, c, d, x[ 2], S31); /* 37 */\n    HH (d, a, b, c, x[10], S32); /* 38 */\n    HH (c, d, a, b, x[ 6], S33); /* 39 */\n    HH (b, c, d, a, x[14], S34); /* 40 */\n    HH (a, b, c, d, x[ 1], S31); /* 41 */\n",
                      "markdown": "`    HH (c, d, a, b, x[ 4], S33); /* 35 */\n    HH (b, c, d, a, x[12], S34); /* 36 */\n    HH (a, b, c, d, x[ 2], S31); /* 37 */\n    HH (d, a, b, c, x[10], S32); /* 38 */\n    HH (c, d, a, b, x[ 6], S33); /* 39 */\n    HH (b, c, d, a, x[14], S34); /* 40 */\n    HH (a, b, c, d, x[ 1], S31); /* 41 */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/apr_md4.c"
                },
                "region": {
                  "startLine": 343,
                  "startColumn": 3,
                  "endLine": 343,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    HH (d, a, b, c, x[ 8], S32); /* 34 */\n    HH (c, d, a, b, x[ 4], S33); /* 35 */\n    HH (b, c, d, a, x[12], S34); /* 36 */\n    HH (a, b, c, d, x[ 2], S31); /* 37 */\n    HH (d, a, b, c, x[10], S32); /* 38 */\n    HH (c, d, a, b, x[ 6], S33); /* 39 */\n    HH (b, c, d, a, x[14], S34); /* 40 */\n",
                    "rendered": {
                      "text": "    HH (d, a, b, c, x[ 8], S32); /* 34 */\n    HH (c, d, a, b, x[ 4], S33); /* 35 */\n    HH (b, c, d, a, x[12], S34); /* 36 */\n    HH (a, b, c, d, x[ 2], S31); /* 37 */\n    HH (d, a, b, c, x[10], S32); /* 38 */\n    HH (c, d, a, b, x[ 6], S33); /* 39 */\n    HH (b, c, d, a, x[14], S34); /* 40 */\n",
                      "markdown": "`    HH (d, a, b, c, x[ 8], S32); /* 34 */\n    HH (c, d, a, b, x[ 4], S33); /* 35 */\n    HH (b, c, d, a, x[12], S34); /* 36 */\n    HH (a, b, c, d, x[ 2], S31); /* 37 */\n    HH (d, a, b, c, x[10], S32); /* 38 */\n    HH (c, d, a, b, x[ 6], S33); /* 39 */\n    HH (b, c, d, a, x[14], S34); /* 40 */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/apr_md4.c"
                },
                "region": {
                  "startLine": 342,
                  "startColumn": 3,
                  "endLine": 342,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    HH (a, b, c, d, x[ 0], S31); /* 33 */\n    HH (d, a, b, c, x[ 8], S32); /* 34 */\n    HH (c, d, a, b, x[ 4], S33); /* 35 */\n    HH (b, c, d, a, x[12], S34); /* 36 */\n    HH (a, b, c, d, x[ 2], S31); /* 37 */\n    HH (d, a, b, c, x[10], S32); /* 38 */\n    HH (c, d, a, b, x[ 6], S33); /* 39 */\n",
                    "rendered": {
                      "text": "    HH (a, b, c, d, x[ 0], S31); /* 33 */\n    HH (d, a, b, c, x[ 8], S32); /* 34 */\n    HH (c, d, a, b, x[ 4], S33); /* 35 */\n    HH (b, c, d, a, x[12], S34); /* 36 */\n    HH (a, b, c, d, x[ 2], S31); /* 37 */\n    HH (d, a, b, c, x[10], S32); /* 38 */\n    HH (c, d, a, b, x[ 6], S33); /* 39 */\n",
                      "markdown": "`    HH (a, b, c, d, x[ 0], S31); /* 33 */\n    HH (d, a, b, c, x[ 8], S32); /* 34 */\n    HH (c, d, a, b, x[ 4], S33); /* 35 */\n    HH (b, c, d, a, x[12], S34); /* 36 */\n    HH (a, b, c, d, x[ 2], S31); /* 37 */\n    HH (d, a, b, c, x[10], S32); /* 38 */\n    HH (c, d, a, b, x[ 6], S33); /* 39 */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/apr_md4.c"
                },
                "region": {
                  "startLine": 341,
                  "startColumn": 3,
                  "endLine": 341,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    /* Round 3 */\n    HH (a, b, c, d, x[ 0], S31); /* 33 */\n    HH (d, a, b, c, x[ 8], S32); /* 34 */\n    HH (c, d, a, b, x[ 4], S33); /* 35 */\n    HH (b, c, d, a, x[12], S34); /* 36 */\n    HH (a, b, c, d, x[ 2], S31); /* 37 */\n    HH (d, a, b, c, x[10], S32); /* 38 */\n",
                    "rendered": {
                      "text": "    /* Round 3 */\n    HH (a, b, c, d, x[ 0], S31); /* 33 */\n    HH (d, a, b, c, x[ 8], S32); /* 34 */\n    HH (c, d, a, b, x[ 4], S33); /* 35 */\n    HH (b, c, d, a, x[12], S34); /* 36 */\n    HH (a, b, c, d, x[ 2], S31); /* 37 */\n    HH (d, a, b, c, x[10], S32); /* 38 */\n",
                      "markdown": "`    /* Round 3 */\n    HH (a, b, c, d, x[ 0], S31); /* 33 */\n    HH (d, a, b, c, x[ 8], S32); /* 34 */\n    HH (c, d, a, b, x[ 4], S33); /* 35 */\n    HH (b, c, d, a, x[12], S34); /* 36 */\n    HH (a, b, c, d, x[ 2], S31); /* 37 */\n    HH (d, a, b, c, x[10], S32); /* 38 */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/apr_md4.c"
                },
                "region": {
                  "startLine": 340,
                  "startColumn": 3,
                  "endLine": 340,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n    /* Round 3 */\n    HH (a, b, c, d, x[ 0], S31); /* 33 */\n    HH (d, a, b, c, x[ 8], S32); /* 34 */\n    HH (c, d, a, b, x[ 4], S33); /* 35 */\n    HH (b, c, d, a, x[12], S34); /* 36 */\n    HH (a, b, c, d, x[ 2], S31); /* 37 */\n",
                    "rendered": {
                      "text": "\n    /* Round 3 */\n    HH (a, b, c, d, x[ 0], S31); /* 33 */\n    HH (d, a, b, c, x[ 8], S32); /* 34 */\n    HH (c, d, a, b, x[ 4], S33); /* 35 */\n    HH (b, c, d, a, x[12], S34); /* 36 */\n    HH (a, b, c, d, x[ 2], S31); /* 37 */\n",
                      "markdown": "`\n    /* Round 3 */\n    HH (a, b, c, d, x[ 0], S31); /* 33 */\n    HH (d, a, b, c, x[ 8], S32); /* 34 */\n    HH (c, d, a, b, x[ 4], S33); /* 35 */\n    HH (b, c, d, a, x[12], S34); /* 36 */\n    HH (a, b, c, d, x[ 2], S31); /* 37 */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/apr_md4.c"
                },
                "region": {
                  "startLine": 339,
                  "startColumn": 3,
                  "endLine": 339,
                  "endColumn": 7,
                  "snippet": {
                    "text": "    GG (b, c, d, a, x[15], S24); /* 32 */\n\n    /* Round 3 */\n    HH (a, b, c, d, x[ 0], S31); /* 33 */\n    HH (d, a, b, c, x[ 8], S32); /* 34 */\n    HH (c, d, a, b, x[ 4], S33); /* 35 */\n    HH (b, c, d, a, x[12], S34); /* 36 */\n",
                    "rendered": {
                      "text": "    GG (b, c, d, a, x[15], S24); /* 32 */\n\n    /* Round 3 */\n    HH (a, b, c, d, x[ 0], S31); /* 33 */\n    HH (d, a, b, c, x[ 8], S32); /* 34 */\n    HH (c, d, a, b, x[ 4], S33); /* 35 */\n    HH (b, c, d, a, x[12], S34); /* 36 */\n",
                      "markdown": "`    GG (b, c, d, a, x[15], S24); /* 32 */\n\n    /* Round 3 */\n    HH (a, b, c, d, x[ 0], S31); /* 33 */\n    HH (d, a, b, c, x[ 8], S32); /* 34 */\n    HH (c, d, a, b, x[ 4], S33); /* 35 */\n    HH (b, c, d, a, x[12], S34); /* 36 */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/apr_sha1.c"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 51,
                  "endLine": 31,
                  "endColumn": 59,
                  "snippet": {
                    "text": " *     secure than Apache's password format, since Apache's (MD5)\n *     password format uses a random eight character salt to generate\n *     one of many possible hashes for the same password.  Netscape\n *     uses plain SHA1 without a salt, so the same password\n *     will always generate the same hash, making it easier\n *     to break since the search space is smaller.\n *\n",
                    "rendered": {
                      "text": " *     secure than Apache's password format, since Apache's (MD5)\n *     password format uses a random eight character salt to generate\n *     one of many possible hashes for the same password.  Netscape\n *     uses plain SHA1 without a salt, so the same password\n *     will always generate the same hash, making it easier\n *     to break since the search space is smaller.\n *\n",
                      "markdown": "` *     secure than Apache's password format, since Apache's (MD5)\n *     password format uses a random eight character salt to generate\n *     one of many possible hashes for the same password.  Netscape\n *     uses plain SHA1 without a salt, so the same password\n *     will always generate the same hash, making it easier\n *     to break since the search space is smaller.\n *\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/apr_sha1.c"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 48,
                  "endLine": 30,
                  "endColumn": 56,
                  "snippet": {
                    "text": " * Note: SHA1 support is useful for migration purposes, but is less\n *     secure than Apache's password format, since Apache's (MD5)\n *     password format uses a random eight character salt to generate\n *     one of many possible hashes for the same password.  Netscape\n *     uses plain SHA1 without a salt, so the same password\n *     will always generate the same hash, making it easier\n *     to break since the search space is smaller.\n",
                    "rendered": {
                      "text": " * Note: SHA1 support is useful for migration purposes, but is less\n *     secure than Apache's password format, since Apache's (MD5)\n *     password format uses a random eight character salt to generate\n *     one of many possible hashes for the same password.  Netscape\n *     uses plain SHA1 without a salt, so the same password\n *     will always generate the same hash, making it easier\n *     to break since the search space is smaller.\n",
                      "markdown": "` * Note: SHA1 support is useful for migration purposes, but is less\n *     secure than Apache's password format, since Apache's (MD5)\n *     password format uses a random eight character salt to generate\n *     one of many possible hashes for the same password.  Netscape\n *     uses plain SHA1 without a salt, so the same password\n *     will always generate the same hash, making it easier\n *     to break since the search space is smaller.\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/apr_sha1.c"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 7,
                  "endLine": 29,
                  "endColumn": 15,
                  "snippet": {
                    "text": " *\n * Note: SHA1 support is useful for migration purposes, but is less\n *     secure than Apache's password format, since Apache's (MD5)\n *     password format uses a random eight character salt to generate\n *     one of many possible hashes for the same password.  Netscape\n *     uses plain SHA1 without a salt, so the same password\n *     will always generate the same hash, making it easier\n",
                    "rendered": {
                      "text": " *\n * Note: SHA1 support is useful for migration purposes, but is less\n *     secure than Apache's password format, since Apache's (MD5)\n *     password format uses a random eight character salt to generate\n *     one of many possible hashes for the same password.  Netscape\n *     uses plain SHA1 without a salt, so the same password\n *     will always generate the same hash, making it easier\n",
                      "markdown": "` *\n * Note: SHA1 support is useful for migration purposes, but is less\n *     secure than Apache's password format, since Apache's (MD5)\n *     password format uses a random eight character salt to generate\n *     one of many possible hashes for the same password.  Netscape\n *     uses plain SHA1 without a salt, so the same password\n *     will always generate the same hash, making it easier\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/apr_sha1.c"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 28,
                  "endLine": 28,
                  "endColumn": 36,
                  "snippet": {
                    "text": " * by Clinton Wong <clintdw@netcom.com>, who also notes that:\n *\n * Note: SHA1 support is useful for migration purposes, but is less\n *     secure than Apache's password format, since Apache's (MD5)\n *     password format uses a random eight character salt to generate\n *     one of many possible hashes for the same password.  Netscape\n *     uses plain SHA1 without a salt, so the same password\n",
                    "rendered": {
                      "text": " * by Clinton Wong <clintdw@netcom.com>, who also notes that:\n *\n * Note: SHA1 support is useful for migration purposes, but is less\n *     secure than Apache's password format, since Apache's (MD5)\n *     password format uses a random eight character salt to generate\n *     one of many possible hashes for the same password.  Netscape\n *     uses plain SHA1 without a salt, so the same password\n",
                      "markdown": "` * by Clinton Wong <clintdw@netcom.com>, who also notes that:\n *\n * Note: SHA1 support is useful for migration purposes, but is less\n *     secure than Apache's password format, since Apache's (MD5)\n *     password format uses a random eight character salt to generate\n *     one of many possible hashes for the same password.  Netscape\n *     uses plain SHA1 without a salt, so the same password\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/apr_sha1.c"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 21,
                  "endLine": 23,
                  "endColumn": 29,
                  "snippet": {
                    "text": " * \t apr_sha1_base64(const char *clear, int len, char *out);\n *\n * provides a means to SHA1 crypt/encode a plaintext password in\n * a way which makes password files compatible with those commonly\n * used in netscape web and ldap installations. It was put together\n * by Clinton Wong <clintdw@netcom.com>, who also notes that:\n *\n",
                    "rendered": {
                      "text": " * \t apr_sha1_base64(const char *clear, int len, char *out);\n *\n * provides a means to SHA1 crypt/encode a plaintext password in\n * a way which makes password files compatible with those commonly\n * used in netscape web and ldap installations. It was put together\n * by Clinton Wong <clintdw@netcom.com>, who also notes that:\n *\n",
                      "markdown": "` * \t apr_sha1_base64(const char *clear, int len, char *out);\n *\n * provides a means to SHA1 crypt/encode a plaintext password in\n * a way which makes password files compatible with those commonly\n * used in netscape web and ldap installations. It was put together\n * by Clinton Wong <clintdw@netcom.com>, who also notes that:\n *\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/apr_sha1.c"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 53,
                  "endLine": 22,
                  "endColumn": 61,
                  "snippet": {
                    "text": " *\n * \t apr_sha1_base64(const char *clear, int len, char *out);\n *\n * provides a means to SHA1 crypt/encode a plaintext password in\n * a way which makes password files compatible with those commonly\n * used in netscape web and ldap installations. It was put together\n * by Clinton Wong <clintdw@netcom.com>, who also notes that:\n",
                    "rendered": {
                      "text": " *\n * \t apr_sha1_base64(const char *clear, int len, char *out);\n *\n * provides a means to SHA1 crypt/encode a plaintext password in\n * a way which makes password files compatible with those commonly\n * used in netscape web and ldap installations. It was put together\n * by Clinton Wong <clintdw@netcom.com>, who also notes that:\n",
                      "markdown": "` *\n * \t apr_sha1_base64(const char *clear, int len, char *out);\n *\n * provides a means to SHA1 crypt/encode a plaintext password in\n * a way which makes password files compatible with those commonly\n * used in netscape web and ldap installations. It was put together\n * by Clinton Wong <clintdw@netcom.com>, who also notes that:\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/apr_sha1.c"
                },
                "region": {
                  "startLine": 199,
                  "startColumn": 4,
                  "endLine": 199,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t    cp[1] = ct[2];\n\t    cp[2] = ct[1];\n\t    cp[3] = ct[0];\n\t    cp += sizeof(apr_uint32_t);\n\t}\n    }\n}\n",
                    "rendered": {
                      "text": "\t    cp[1] = ct[2];\n\t    cp[2] = ct[1];\n\t    cp[3] = ct[0];\n\t    cp += sizeof(apr_uint32_t);\n\t}\n    }\n}\n",
                      "markdown": "`\t    cp[1] = ct[2];\n\t    cp[2] = ct[1];\n\t    cp[3] = ct[0];\n\t    cp += sizeof(apr_uint32_t);\n\t}\n    }\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/apr_sha1.c"
                },
                "region": {
                  "startLine": 189,
                  "endLine": 189,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\n    if (isLittleEndian()) {\t/* do the swap only if it is little endian */\n\tcount /= sizeof(apr_uint32_t);\n\tcp = (apr_byte_t *) buffer;\n\tfor (i = 0; i < count; ++i) {\n\t    ct[0] = cp[0];\n\t    ct[1] = cp[1];\n",
                    "rendered": {
                      "text": "\n    if (isLittleEndian()) {\t/* do the swap only if it is little endian */\n\tcount /= sizeof(apr_uint32_t);\n\tcp = (apr_byte_t *) buffer;\n\tfor (i = 0; i < count; ++i) {\n\t    ct[0] = cp[0];\n\t    ct[1] = cp[1];\n",
                      "markdown": "`\n    if (isLittleEndian()) {\t/* do the swap only if it is little endian */\n\tcount /= sizeof(apr_uint32_t);\n\tcp = (apr_byte_t *) buffer;\n\tfor (i = 0; i < count; ++i) {\n\t    ct[0] = cp[0];\n\t    ct[1] = cp[1];\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/unsupported/NWGNUdbdfreetds"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 24,
                  "endLine": 140,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\n#\n# If this is specified, it will override VERSION value in\n# $(AP_WORK)\\build\\NWGNUenvironment.inc\n#\nNLM_VERSION\t=\n\n",
                    "rendered": {
                      "text": "\n#\n# If this is specified, it will override VERSION value in\n# $(AP_WORK)\\build\\NWGNUenvironment.inc\n#\nNLM_VERSION\t=\n\n",
                      "markdown": "`\n#\n# If this is specified, it will override VERSION value in\n# $(AP_WORK)\\build\\NWGNUenvironment.inc\n#\nNLM_VERSION\t=\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/unsupported/NWGNUdbdfreetds"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 59,
                  "endLine": 28,
                  "endColumn": 74,
                  "snippet": {
                    "text": "\n# LINK_STATIC = 1\n\n# for now defined here - should finally go into build/NWGNUenvironment.inc\nFREETDS_INC = $(FREETDSSDK)/include\nFREETDS_IMP = $(FREETDSSDK)/lib/libfreetds.imp\nFREETDS_LIB = $(FREETDSSDK)/lib/libfreetds.lib\n",
                    "rendered": {
                      "text": "\n# LINK_STATIC = 1\n\n# for now defined here - should finally go into build/NWGNUenvironment.inc\nFREETDS_INC = $(FREETDSSDK)/include\nFREETDS_IMP = $(FREETDSSDK)/lib/libfreetds.imp\nFREETDS_LIB = $(FREETDSSDK)/lib/libfreetds.lib\n",
                      "markdown": "`\n# LINK_STATIC = 1\n\n# for now defined here - should finally go into build/NWGNUenvironment.inc\nFREETDS_INC = $(FREETDSSDK)/include\nFREETDS_IMP = $(FREETDSSDK)/lib/libfreetds.imp\nFREETDS_LIB = $(FREETDSSDK)/lib/libfreetds.lib\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/unsupported/NWGNUdbdfreetds"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 30,
                  "endLine": 9,
                  "endColumn": 72,
                  "snippet": {
                    "text": "\t$(EOLIST)\n\n#\n# Get the 'head' of the build environment.  This includes default targets and\n# paths to tools\n#\n\n",
                    "rendered": {
                      "text": "\t$(EOLIST)\n\n#\n# Get the 'head' of the build environment.  This includes default targets and\n# paths to tools\n#\n\n",
                      "markdown": "`\t$(EOLIST)\n\n#\n# Get the 'head' of the build environment.  This includes default targets and\n# paths to tools\n#\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/unsupported/NWGNUdbdfreetds"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 27,
                  "endLine": 35,
                  "endColumn": 31,
                  "snippet": {
                    "text": "FREETDS_NLM = libfreetds\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n",
                    "rendered": {
                      "text": "FREETDS_NLM = libfreetds\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n",
                      "markdown": "`FREETDS_NLM = libfreetds\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/unsupported/apr_dbd_freetds.mak"
                },
                "region": {
                  "startLine": 449,
                  "startColumn": 24,
                  "endLine": 449,
                  "endColumn": 30,
                  "snippet": {
                    "text": "!IF EXISTS(\"apr_dbd_freetds.dep\")\r\n!INCLUDE \"apr_dbd_freetds.dep\"\r\n!ELSE \r\n!MESSAGE Warning: cannot find \"apr_dbd_freetds.dep\"\r\n!ENDIF \r\n!ENDIF \r\n\r\n",
                    "rendered": {
                      "text": "!IF EXISTS(\"apr_dbd_freetds.dep\")\r\n!INCLUDE \"apr_dbd_freetds.dep\"\r\n!ELSE \r\n!MESSAGE Warning: cannot find \"apr_dbd_freetds.dep\"\r\n!ENDIF \r\n!ENDIF \r\n\r\n",
                      "markdown": "`!IF EXISTS(\"apr_dbd_freetds.dep\")\r\n!INCLUDE \"apr_dbd_freetds.dep\"\r\n!ELSE \r\n!MESSAGE Warning: cannot find \"apr_dbd_freetds.dep\"\r\n!ENDIF \r\n!ENDIF \r\n\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/NWGNUmakefile"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 24,
                  "endLine": 114,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\n#\n# If this is specified, it will override VERSION value in\n# $(AP_WORK)\\build\\NWGNUenvironment.inc\n#\nNLM_VERSION\t=\n\n",
                    "rendered": {
                      "text": "\n#\n# If this is specified, it will override VERSION value in\n# $(AP_WORK)\\build\\NWGNUenvironment.inc\n#\nNLM_VERSION\t=\n\n",
                      "markdown": "`\n#\n# If this is specified, it will override VERSION value in\n# $(AP_WORK)\\build\\NWGNUenvironment.inc\n#\nNLM_VERSION\t=\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/NWGNUmakefile"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 30,
                  "endLine": 9,
                  "endColumn": 72,
                  "snippet": {
                    "text": "\t$(EOLIST)\n\n#\n# Get the 'head' of the build environment.  This includes default targets and\n# paths to tools\n#\n\n",
                    "rendered": {
                      "text": "\t$(EOLIST)\n\n#\n# Get the 'head' of the build environment.  This includes default targets and\n# paths to tools\n#\n\n",
                      "markdown": "`\t$(EOLIST)\n\n#\n# Get the 'head' of the build environment.  This includes default targets and\n# paths to tools\n#\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/NWGNUmakefile"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 27,
                  "endLine": 23,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n",
                    "rendered": {
                      "text": "#\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n",
                      "markdown": "`#\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/apr_crypto.c"
                },
                "region": {
                  "startLine": 191,
                  "startColumn": 7,
                  "endLine": 191,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    apr_size_t i;\n\n    for (i = 0; i < size; ++i) {\n        diff |= p1[i] ^ p2[i];\n    }\n\n    return 1 & ((diff - 1) >> 8);\n",
                    "rendered": {
                      "text": "    apr_size_t i;\n\n    for (i = 0; i < size; ++i) {\n        diff |= p1[i] ^ p2[i];\n    }\n\n    return 1 & ((diff - 1) >> 8);\n",
                      "markdown": "`    apr_size_t i;\n\n    for (i = 0; i < size; ++i) {\n        diff |= p1[i] ^ p2[i];\n    }\n\n    return 1 & ((diff - 1) >> 8);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/apr_crypto.c"
                },
                "region": {
                  "startLine": 187,
                  "startColumn": 17,
                  "endLine": 187,
                  "endColumn": 23,
                  "snippet": {
                    "text": "{\n    const unsigned char *p1 = buf1;\n    const unsigned char *p2 = buf2;\n    unsigned char diff = 0;\n    apr_size_t i;\n\n    for (i = 0; i < size; ++i) {\n",
                    "rendered": {
                      "text": "{\n    const unsigned char *p1 = buf1;\n    const unsigned char *p2 = buf2;\n    unsigned char diff = 0;\n    apr_size_t i;\n\n    for (i = 0; i < size; ++i) {\n",
                      "markdown": "`{\n    const unsigned char *p1 = buf1;\n    const unsigned char *p2 = buf2;\n    unsigned char diff = 0;\n    apr_size_t i;\n\n    for (i = 0; i < size; ++i) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/apr_crypto_nss.mak"
                },
                "region": {
                  "startLine": 449,
                  "startColumn": 24,
                  "endLine": 449,
                  "endColumn": 30,
                  "snippet": {
                    "text": "!IF EXISTS(\"apr_crypto_nss.dep\")\r\n!INCLUDE \"apr_crypto_nss.dep\"\r\n!ELSE \r\n!MESSAGE Warning: cannot find \"apr_crypto_nss.dep\"\r\n!ENDIF \r\n!ENDIF \r\n\r\n",
                    "rendered": {
                      "text": "!IF EXISTS(\"apr_crypto_nss.dep\")\r\n!INCLUDE \"apr_crypto_nss.dep\"\r\n!ELSE \r\n!MESSAGE Warning: cannot find \"apr_crypto_nss.dep\"\r\n!ENDIF \r\n!ENDIF \r\n\r\n",
                      "markdown": "`!IF EXISTS(\"apr_crypto_nss.dep\")\r\n!INCLUDE \"apr_crypto_nss.dep\"\r\n!ELSE \r\n!MESSAGE Warning: cannot find \"apr_crypto_nss.dep\"\r\n!ENDIF \r\n!ENDIF \r\n\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/crypt_blowfish.c"
                },
                "region": {
                  "startLine": 830,
                  "startColumn": 21,
                  "endLine": 830,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\tchar o[7 + 22 + 31 + 1 + 1 + 1];\n\t} buf;\n\n/* Hash the supplied password */\n\t_crypt_output_magic(setting, output, size);\n\tretval = BF_crypt(key, setting, output, size, 16);\n\tsave_errno = errno;\n",
                    "rendered": {
                      "text": "\t\tchar o[7 + 22 + 31 + 1 + 1 + 1];\n\t} buf;\n\n/* Hash the supplied password */\n\t_crypt_output_magic(setting, output, size);\n\tretval = BF_crypt(key, setting, output, size, 16);\n\tsave_errno = errno;\n",
                      "markdown": "`\t\tchar o[7 + 22 + 31 + 1 + 1 + 1];\n\t} buf;\n\n/* Hash the supplied password */\n\t_crypt_output_magic(setting, output, size);\n\tretval = BF_crypt(key, setting, output, size, 16);\n\tsave_errno = errno;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/crypt_blowfish.c"
                },
                "region": {
                  "startLine": 806,
                  "startColumn": 60,
                  "endLine": 806,
                  "endColumn": 68,
                  "snippet": {
                    "text": " * from incorrectly-computed hashes - merely fixing whatever broke is not\n * enough.  Thus, a proactive measure like this self-test is needed.\n *\n * 2. We don't want to leave sensitive data from our actual password hash\n * computation on the stack or in registers.  Previous revisions of the code\n * would do explicit cleanups, but simply running the self-test after hash\n * computation is more reliable.\n",
                    "rendered": {
                      "text": " * from incorrectly-computed hashes - merely fixing whatever broke is not\n * enough.  Thus, a proactive measure like this self-test is needed.\n *\n * 2. We don't want to leave sensitive data from our actual password hash\n * computation on the stack or in registers.  Previous revisions of the code\n * would do explicit cleanups, but simply running the self-test after hash\n * computation is more reliable.\n",
                      "markdown": "` * from incorrectly-computed hashes - merely fixing whatever broke is not\n * enough.  Thus, a proactive measure like this self-test is needed.\n *\n * 2. We don't want to leave sensitive data from our actual password hash\n * computation on the stack or in registers.  Previous revisions of the code\n * would do explicit cleanups, but simply running the self-test after hash\n * computation is more reliable.\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/crypt_blowfish.c"
                },
                "region": {
                  "startLine": 638,
                  "startColumn": 47,
                  "endLine": 638,
                  "endColumn": 55,
                  "snippet": {
                    "text": " *\n * It is crucial that we don't do the same to the expanded key used in the main\n * Eksblowfish loop.  By doing it to only one of these two, we deviate from a\n * state that could be directly specified by a password to the buggy algorithm\n * (and to the fully correct one as well, but that's a side-effect).\n */\n\tinitial[0] ^= sign;\n",
                    "rendered": {
                      "text": " *\n * It is crucial that we don't do the same to the expanded key used in the main\n * Eksblowfish loop.  By doing it to only one of these two, we deviate from a\n * state that could be directly specified by a password to the buggy algorithm\n * (and to the fully correct one as well, but that's a side-effect).\n */\n\tinitial[0] ^= sign;\n",
                      "markdown": "` *\n * It is crucial that we don't do the same to the expanded key used in the main\n * Eksblowfish loop.  By doing it to only one of these two, we deviate from a\n * state that could be directly specified by a password to the buggy algorithm\n * (and to the fully correct one as well, but that's a side-effect).\n */\n\tinitial[0] ^= sign;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/crypt_blowfish.c"
                },
                "region": {
                  "startLine": 620,
                  "startColumn": 3,
                  "endLine": 620,
                  "endColumn": 11,
                  "snippet": {
                    "text": " * exactly the same result.  If so and if \"sign\" is non-zero, which indicates\n * that there was a non-benign sign extension, this means that we have a\n * collision between the correctly computed hash for this password and a set of\n * passwords that could be supplied to the buggy algorithm.  Our safety measure\n * is meant to protect from such many-buggy to one-correct collisions, by\n * deviating from the correct algorithm in such cases.  Let's check for this.\n */\n",
                    "rendered": {
                      "text": " * exactly the same result.  If so and if \"sign\" is non-zero, which indicates\n * that there was a non-benign sign extension, this means that we have a\n * collision between the correctly computed hash for this password and a set of\n * passwords that could be supplied to the buggy algorithm.  Our safety measure\n * is meant to protect from such many-buggy to one-correct collisions, by\n * deviating from the correct algorithm in such cases.  Let's check for this.\n */\n",
                      "markdown": "` * exactly the same result.  If so and if \"sign\" is non-zero, which indicates\n * that there was a non-benign sign extension, this means that we have a\n * collision between the correctly computed hash for this password and a set of\n * passwords that could be supplied to the buggy algorithm.  Our safety measure\n * is meant to protect from such many-buggy to one-correct collisions, by\n * deviating from the correct algorithm in such cases.  Let's check for this.\n */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/crypt_blowfish.c"
                },
                "region": {
                  "startLine": 619,
                  "startColumn": 58,
                  "endLine": 619,
                  "endColumn": 66,
                  "snippet": {
                    "text": " * At this point, \"diff\" is zero iff the correct and buggy algorithms produced\n * exactly the same result.  If so and if \"sign\" is non-zero, which indicates\n * that there was a non-benign sign extension, this means that we have a\n * collision between the correctly computed hash for this password and a set of\n * passwords that could be supplied to the buggy algorithm.  Our safety measure\n * is meant to protect from such many-buggy to one-correct collisions, by\n * deviating from the correct algorithm in such cases.  Let's check for this.\n",
                    "rendered": {
                      "text": " * At this point, \"diff\" is zero iff the correct and buggy algorithms produced\n * exactly the same result.  If so and if \"sign\" is non-zero, which indicates\n * that there was a non-benign sign extension, this means that we have a\n * collision between the correctly computed hash for this password and a set of\n * passwords that could be supplied to the buggy algorithm.  Our safety measure\n * is meant to protect from such many-buggy to one-correct collisions, by\n * deviating from the correct algorithm in such cases.  Let's check for this.\n",
                      "markdown": "` * At this point, \"diff\" is zero iff the correct and buggy algorithms produced\n * exactly the same result.  If so and if \"sign\" is non-zero, which indicates\n * that there was a non-benign sign extension, this means that we have a\n * collision between the correctly computed hash for this password and a set of\n * passwords that could be supplied to the buggy algorithm.  Our safety measure\n * is meant to protect from such many-buggy to one-correct collisions, by\n * deviating from the correct algorithm in such cases.  Let's check for this.\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/crypt_blowfish.c"
                },
                "region": {
                  "startLine": 570,
                  "startColumn": 67,
                  "endLine": 570,
                  "endColumn": 75,
                  "snippet": {
                    "text": " *\n * We use an approach that tries to minimize side-channel leaks of password\n * information - that is, we mostly use fixed-cost bitwise operations instead\n * of branches or table lookups.  (One conditional branch based on password\n * length remains.  It is not part of the bug aftermath, though, and is\n * difficult and possibly unreasonable to avoid given the use of C strings by\n * the caller, which results in similar timing leaks anyway.)\n",
                    "rendered": {
                      "text": " *\n * We use an approach that tries to minimize side-channel leaks of password\n * information - that is, we mostly use fixed-cost bitwise operations instead\n * of branches or table lookups.  (One conditional branch based on password\n * length remains.  It is not part of the bug aftermath, though, and is\n * difficult and possibly unreasonable to avoid given the use of C strings by\n * the caller, which results in similar timing leaks anyway.)\n",
                      "markdown": "` *\n * We use an approach that tries to minimize side-channel leaks of password\n * information - that is, we mostly use fixed-cost bitwise operations instead\n * of branches or table lookups.  (One conditional branch based on password\n * length remains.  It is not part of the bug aftermath, though, and is\n * difficult and possibly unreasonable to avoid given the use of C strings by\n * the caller, which results in similar timing leaks anyway.)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/crypt_blowfish.c"
                },
                "region": {
                  "startLine": 568,
                  "startColumn": 67,
                  "endLine": 568,
                  "endColumn": 75,
                  "snippet": {
                    "text": " * reasonable tradeoff to use when authenticating against existing hashes that\n * are not reliably known to have been computed with the correct algorithm.\n *\n * We use an approach that tries to minimize side-channel leaks of password\n * information - that is, we mostly use fixed-cost bitwise operations instead\n * of branches or table lookups.  (One conditional branch based on password\n * length remains.  It is not part of the bug aftermath, though, and is\n",
                    "rendered": {
                      "text": " * reasonable tradeoff to use when authenticating against existing hashes that\n * are not reliably known to have been computed with the correct algorithm.\n *\n * We use an approach that tries to minimize side-channel leaks of password\n * information - that is, we mostly use fixed-cost bitwise operations instead\n * of branches or table lookups.  (One conditional branch based on password\n * length remains.  It is not part of the bug aftermath, though, and is\n",
                      "markdown": "` * reasonable tradeoff to use when authenticating against existing hashes that\n * are not reliably known to have been computed with the correct algorithm.\n *\n * We use an approach that tries to minimize side-channel leaks of password\n * information - that is, we mostly use fixed-cost bitwise operations instead\n * of branches or table lookups.  (One conditional branch based on password\n * length remains.  It is not part of the bug aftermath, though, and is\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/crypt_blowfish.c"
                },
                "region": {
                  "startLine": 562,
                  "startColumn": 9,
                  "endLine": 562,
                  "endColumn": 17,
                  "snippet": {
                    "text": " * characters with the 8th bit set (although only a percentage of those in a\n * collision-producing way), the anti-collision safety measure affects\n * only a subset of passwords containing the '\\xff' character (not even all of\n * those passwords, just some of them).  This character is not found in valid\n * UTF-8 sequences and is rarely used in popular 8-bit character encodings.\n * Thus, the safety measure is unlikely to cause much annoyance, and is a\n * reasonable tradeoff to use when authenticating against existing hashes that\n",
                    "rendered": {
                      "text": " * characters with the 8th bit set (although only a percentage of those in a\n * collision-producing way), the anti-collision safety measure affects\n * only a subset of passwords containing the '\\xff' character (not even all of\n * those passwords, just some of them).  This character is not found in valid\n * UTF-8 sequences and is rarely used in popular 8-bit character encodings.\n * Thus, the safety measure is unlikely to cause much annoyance, and is a\n * reasonable tradeoff to use when authenticating against existing hashes that\n",
                      "markdown": "` * characters with the 8th bit set (although only a percentage of those in a\n * collision-producing way), the anti-collision safety measure affects\n * only a subset of passwords containing the '\\xff' character (not even all of\n * those passwords, just some of them).  This character is not found in valid\n * UTF-8 sequences and is rarely used in popular 8-bit character encodings.\n * Thus, the safety measure is unlikely to cause much annoyance, and is a\n * reasonable tradeoff to use when authenticating against existing hashes that\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/crypt_blowfish.c"
                },
                "region": {
                  "startLine": 561,
                  "startColumn": 20,
                  "endLine": 561,
                  "endColumn": 28,
                  "snippet": {
                    "text": " * While the bug itself affected the majority of passwords containing\n * characters with the 8th bit set (although only a percentage of those in a\n * collision-producing way), the anti-collision safety measure affects\n * only a subset of passwords containing the '\\xff' character (not even all of\n * those passwords, just some of them).  This character is not found in valid\n * UTF-8 sequences and is rarely used in popular 8-bit character encodings.\n * Thus, the safety measure is unlikely to cause much annoyance, and is a\n",
                    "rendered": {
                      "text": " * While the bug itself affected the majority of passwords containing\n * characters with the 8th bit set (although only a percentage of those in a\n * collision-producing way), the anti-collision safety measure affects\n * only a subset of passwords containing the '\\xff' character (not even all of\n * those passwords, just some of them).  This character is not found in valid\n * UTF-8 sequences and is rarely used in popular 8-bit character encodings.\n * Thus, the safety measure is unlikely to cause much annoyance, and is a\n",
                      "markdown": "` * While the bug itself affected the majority of passwords containing\n * characters with the 8th bit set (although only a percentage of those in a\n * collision-producing way), the anti-collision safety measure affects\n * only a subset of passwords containing the '\\xff' character (not even all of\n * those passwords, just some of them).  This character is not found in valid\n * UTF-8 sequences and is rarely used in popular 8-bit character encodings.\n * Thus, the safety measure is unlikely to cause much annoyance, and is a\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/crypt_blowfish.c"
                },
                "region": {
                  "startLine": 558,
                  "startColumn": 49,
                  "endLine": 558,
                  "endColumn": 57,
                  "snippet": {
                    "text": " * multiple inputs to the buggy algorithm there exist easily found inputs to\n * the correct algorithm that produce the same hash.  Thus, we optionally\n * deviate from the correct algorithm just enough to avoid such collisions.\n * While the bug itself affected the majority of passwords containing\n * characters with the 8th bit set (although only a percentage of those in a\n * collision-producing way), the anti-collision safety measure affects\n * only a subset of passwords containing the '\\xff' character (not even all of\n",
                    "rendered": {
                      "text": " * multiple inputs to the buggy algorithm there exist easily found inputs to\n * the correct algorithm that produce the same hash.  Thus, we optionally\n * deviate from the correct algorithm just enough to avoid such collisions.\n * While the bug itself affected the majority of passwords containing\n * characters with the 8th bit set (although only a percentage of those in a\n * collision-producing way), the anti-collision safety measure affects\n * only a subset of passwords containing the '\\xff' character (not even all of\n",
                      "markdown": "` * multiple inputs to the buggy algorithm there exist easily found inputs to\n * the correct algorithm that produce the same hash.  Thus, we optionally\n * deviate from the correct algorithm just enough to avoid such collisions.\n * While the bug itself affected the majority of passwords containing\n * characters with the 8th bit set (although only a percentage of those in a\n * collision-producing way), the anti-collision safety measure affects\n * only a subset of passwords containing the '\\xff' character (not even all of\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/crypt_blowfish.c"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 15,
                  "endLine": 32,
                  "endColumn": 23,
                  "snippet": {
                    "text": " *\n * This implementation is mostly compatible with OpenBSD's bcrypt.c (prefix\n * \"$2a$\") by Niels Provos <provos at citi.umich.edu>, and uses some of his\n * ideas.  The password hashing algorithm was designed by David Mazieres\n * <dm at lcs.mit.edu>.  For more information on the level of compatibility,\n * prefer refer to the comments in BF_set_key() below and to the included\n * crypt(3) man page.\n",
                    "rendered": {
                      "text": " *\n * This implementation is mostly compatible with OpenBSD's bcrypt.c (prefix\n * \"$2a$\") by Niels Provos <provos at citi.umich.edu>, and uses some of his\n * ideas.  The password hashing algorithm was designed by David Mazieres\n * <dm at lcs.mit.edu>.  For more information on the level of compatibility,\n * prefer refer to the comments in BF_set_key() below and to the included\n * crypt(3) man page.\n",
                      "markdown": "` *\n * This implementation is mostly compatible with OpenBSD's bcrypt.c (prefix\n * \"$2a$\") by Niels Provos <provos at citi.umich.edu>, and uses some of his\n * ideas.  The password hashing algorithm was designed by David Mazieres\n * <dm at lcs.mit.edu>.  For more information on the level of compatibility,\n * prefer refer to the comments in BF_set_key() below and to the included\n * crypt(3) man page.\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/crypt_blowfish.c"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 64,
                  "endLine": 7,
                  "endColumn": 72,
                  "snippet": {
                    "text": " *\thttp://www.openwall.com/crypt/\n *\n * This code comes from John the Ripper password cracker, with reentrant\n * and crypt(3) interfaces added, but optimizations specific to password\n * cracking removed.\n *\n * Written by Solar Designer <solar at openwall.com> in 1998-2011.\n",
                    "rendered": {
                      "text": " *\thttp://www.openwall.com/crypt/\n *\n * This code comes from John the Ripper password cracker, with reentrant\n * and crypt(3) interfaces added, but optimizations specific to password\n * cracking removed.\n *\n * Written by Solar Designer <solar at openwall.com> in 1998-2011.\n",
                      "markdown": "` *\thttp://www.openwall.com/crypt/\n *\n * This code comes from John the Ripper password cracker, with reentrant\n * and crypt(3) interfaces added, but optimizations specific to password\n * cracking removed.\n *\n * Written by Solar Designer <solar at openwall.com> in 1998-2011.\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/crypt_blowfish.c"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 40,
                  "endLine": 6,
                  "endColumn": 48,
                  "snippet": {
                    "text": " *\n *\thttp://www.openwall.com/crypt/\n *\n * This code comes from John the Ripper password cracker, with reentrant\n * and crypt(3) interfaces added, but optimizations specific to password\n * cracking removed.\n *\n",
                    "rendered": {
                      "text": " *\n *\thttp://www.openwall.com/crypt/\n *\n * This code comes from John the Ripper password cracker, with reentrant\n * and crypt(3) interfaces added, but optimizations specific to password\n * cracking removed.\n *\n",
                      "markdown": "` *\n *\thttp://www.openwall.com/crypt/\n *\n * This code comes from John the Ripper password cracker, with reentrant\n * and crypt(3) interfaces added, but optimizations specific to password\n * cracking removed.\n *\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/crypt_blowfish.c"
                },
                "region": {
                  "startLine": 817,
                  "startColumn": 28,
                  "endLine": 817,
                  "endColumn": 52,
                  "snippet": {
                    "text": "char *_crypt_blowfish_rn(const char *key, const char *setting,\n\tchar *output, int size)\n{\n\tconst char *test_key = \"8b \\xd0\\xc1\\xd2\\xcf\\xcc\\xd8\";\n\tconst char *test_setting = \"$2a$00$abcdefghijklmnopqrstuu\";\n\tstatic const char * const test_hash[2] =\n\t\t{\"VUrPmXD6q/nVSSp7pNDhCR9071IfIRe\\0\\x55\", /* $2x$ */\n",
                    "rendered": {
                      "text": "char *_crypt_blowfish_rn(const char *key, const char *setting,\n\tchar *output, int size)\n{\n\tconst char *test_key = \"8b \\xd0\\xc1\\xd2\\xcf\\xcc\\xd8\";\n\tconst char *test_setting = \"$2a$00$abcdefghijklmnopqrstuu\";\n\tstatic const char * const test_hash[2] =\n\t\t{\"VUrPmXD6q/nVSSp7pNDhCR9071IfIRe\\0\\x55\", /* $2x$ */\n",
                      "markdown": "`char *_crypt_blowfish_rn(const char *key, const char *setting,\n\tchar *output, int size)\n{\n\tconst char *test_key = \"8b \\xd0\\xc1\\xd2\\xcf\\xcc\\xd8\";\n\tconst char *test_setting = \"$2a$00$abcdefghijklmnopqrstuu\";\n\tstatic const char * const test_hash[2] =\n\t\t{\"VUrPmXD6q/nVSSp7pNDhCR9071IfIRe\\0\\x55\", /* $2x$ */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/crypt_blowfish.c"
                },
                "region": {
                  "startLine": 626,
                  "endLine": 626,
                  "endColumn": 6,
                  "snippet": {
                    "text": " */\n\tdiff |= diff >> 16; /* still zero iff exact match */\n\tdiff &= 0xffff; /* ditto */\n\tdiff += 0xffff; /* bit 16 set iff \"diff\" was non-zero (on non-match) */\n\tsign <<= 9; /* move the non-benign sign extension flag to bit 16 */\n\tsign &= ~diff & safety; /* action needed? */\n\n",
                    "rendered": {
                      "text": " */\n\tdiff |= diff >> 16; /* still zero iff exact match */\n\tdiff &= 0xffff; /* ditto */\n\tdiff += 0xffff; /* bit 16 set iff \"diff\" was non-zero (on non-match) */\n\tsign <<= 9; /* move the non-benign sign extension flag to bit 16 */\n\tsign &= ~diff & safety; /* action needed? */\n\n",
                      "markdown": "` */\n\tdiff |= diff >> 16; /* still zero iff exact match */\n\tdiff &= 0xffff; /* ditto */\n\tdiff += 0xffff; /* bit 16 set iff \"diff\" was non-zero (on non-match) */\n\tsign <<= 9; /* move the non-benign sign extension flag to bit 16 */\n\tsign &= ~diff & safety; /* action needed? */\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/crypt_blowfish.c"
                },
                "region": {
                  "startLine": 625,
                  "endLine": 625,
                  "endColumn": 6,
                  "snippet": {
                    "text": " * deviating from the correct algorithm in such cases.  Let's check for this.\n */\n\tdiff |= diff >> 16; /* still zero iff exact match */\n\tdiff &= 0xffff; /* ditto */\n\tdiff += 0xffff; /* bit 16 set iff \"diff\" was non-zero (on non-match) */\n\tsign <<= 9; /* move the non-benign sign extension flag to bit 16 */\n\tsign &= ~diff & safety; /* action needed? */\n",
                    "rendered": {
                      "text": " * deviating from the correct algorithm in such cases.  Let's check for this.\n */\n\tdiff |= diff >> 16; /* still zero iff exact match */\n\tdiff &= 0xffff; /* ditto */\n\tdiff += 0xffff; /* bit 16 set iff \"diff\" was non-zero (on non-match) */\n\tsign <<= 9; /* move the non-benign sign extension flag to bit 16 */\n\tsign &= ~diff & safety; /* action needed? */\n",
                      "markdown": "` * deviating from the correct algorithm in such cases.  Let's check for this.\n */\n\tdiff |= diff >> 16; /* still zero iff exact match */\n\tdiff &= 0xffff; /* ditto */\n\tdiff += 0xffff; /* bit 16 set iff \"diff\" was non-zero (on non-match) */\n\tsign <<= 9; /* move the non-benign sign extension flag to bit 16 */\n\tsign &= ~diff & safety; /* action needed? */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/crypt_blowfish.c"
                },
                "region": {
                  "startLine": 624,
                  "startColumn": 8,
                  "endLine": 624,
                  "endColumn": 14,
                  "snippet": {
                    "text": " * is meant to protect from such many-buggy to one-correct collisions, by\n * deviating from the correct algorithm in such cases.  Let's check for this.\n */\n\tdiff |= diff >> 16; /* still zero iff exact match */\n\tdiff &= 0xffff; /* ditto */\n\tdiff += 0xffff; /* bit 16 set iff \"diff\" was non-zero (on non-match) */\n\tsign <<= 9; /* move the non-benign sign extension flag to bit 16 */\n",
                    "rendered": {
                      "text": " * is meant to protect from such many-buggy to one-correct collisions, by\n * deviating from the correct algorithm in such cases.  Let's check for this.\n */\n\tdiff |= diff >> 16; /* still zero iff exact match */\n\tdiff &= 0xffff; /* ditto */\n\tdiff += 0xffff; /* bit 16 set iff \"diff\" was non-zero (on non-match) */\n\tsign <<= 9; /* move the non-benign sign extension flag to bit 16 */\n",
                      "markdown": "` * is meant to protect from such many-buggy to one-correct collisions, by\n * deviating from the correct algorithm in such cases.  Let's check for this.\n */\n\tdiff |= diff >> 16; /* still zero iff exact match */\n\tdiff &= 0xffff; /* ditto */\n\tdiff += 0xffff; /* bit 16 set iff \"diff\" was non-zero (on non-match) */\n\tsign <<= 9; /* move the non-benign sign extension flag to bit 16 */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/crypt_blowfish.c"
                },
                "region": {
                  "startLine": 624,
                  "endLine": 624,
                  "endColumn": 6,
                  "snippet": {
                    "text": " * is meant to protect from such many-buggy to one-correct collisions, by\n * deviating from the correct algorithm in such cases.  Let's check for this.\n */\n\tdiff |= diff >> 16; /* still zero iff exact match */\n\tdiff &= 0xffff; /* ditto */\n\tdiff += 0xffff; /* bit 16 set iff \"diff\" was non-zero (on non-match) */\n\tsign <<= 9; /* move the non-benign sign extension flag to bit 16 */\n",
                    "rendered": {
                      "text": " * is meant to protect from such many-buggy to one-correct collisions, by\n * deviating from the correct algorithm in such cases.  Let's check for this.\n */\n\tdiff |= diff >> 16; /* still zero iff exact match */\n\tdiff &= 0xffff; /* ditto */\n\tdiff += 0xffff; /* bit 16 set iff \"diff\" was non-zero (on non-match) */\n\tsign <<= 9; /* move the non-benign sign extension flag to bit 16 */\n",
                      "markdown": "` * is meant to protect from such many-buggy to one-correct collisions, by\n * deviating from the correct algorithm in such cases.  Let's check for this.\n */\n\tdiff |= diff >> 16; /* still zero iff exact match */\n\tdiff &= 0xffff; /* ditto */\n\tdiff += 0xffff; /* bit 16 set iff \"diff\" was non-zero (on non-match) */\n\tsign <<= 9; /* move the non-benign sign extension flag to bit 16 */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/crypt_blowfish.c"
                },
                "region": {
                  "startLine": 609,
                  "startColumn": 1,
                  "endLine": 609,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t\telse\n\t\t\t\tptr++;\n\t\t}\n\t\tdiff |= tmp[0] ^ tmp[1]; /* Non-zero on any differences */\n\n\t\texpanded[i] = tmp[bug];\n\t\tinitial[i] = BF_init_state.P[i] ^ tmp[bug];\n",
                    "rendered": {
                      "text": "\t\t\telse\n\t\t\t\tptr++;\n\t\t}\n\t\tdiff |= tmp[0] ^ tmp[1]; /* Non-zero on any differences */\n\n\t\texpanded[i] = tmp[bug];\n\t\tinitial[i] = BF_init_state.P[i] ^ tmp[bug];\n",
                      "markdown": "`\t\t\telse\n\t\t\t\tptr++;\n\t\t}\n\t\tdiff |= tmp[0] ^ tmp[1]; /* Non-zero on any differences */\n\n\t\texpanded[i] = tmp[bug];\n\t\tinitial[i] = BF_init_state.P[i] ^ tmp[bug];\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/crypt_blowfish.c"
                },
                "region": {
                  "startLine": 587,
                  "startColumn": 7,
                  "endLine": 587,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\tbug = (unsigned int)flags & 1;\n\tsafety = ((BF_word)flags & 2) << 15;\n\n\tsign = diff = 0;\n\n\tfor (i = 0; i < BF_N + 2; i++) {\n\t\ttmp[0] = tmp[1] = 0;\n",
                    "rendered": {
                      "text": "\tbug = (unsigned int)flags & 1;\n\tsafety = ((BF_word)flags & 2) << 15;\n\n\tsign = diff = 0;\n\n\tfor (i = 0; i < BF_N + 2; i++) {\n\t\ttmp[0] = tmp[1] = 0;\n",
                      "markdown": "`\tbug = (unsigned int)flags & 1;\n\tsafety = ((BF_word)flags & 2) << 15;\n\n\tsign = diff = 0;\n\n\tfor (i = 0; i < BF_N + 2; i++) {\n\t\ttmp[0] = tmp[1] = 0;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/apr_crypto_openssl.mak"
                },
                "region": {
                  "startLine": 461,
                  "startColumn": 24,
                  "endLine": 461,
                  "endColumn": 30,
                  "snippet": {
                    "text": "!IF EXISTS(\"apr_crypto_openssl.dep\")\r\n!INCLUDE \"apr_crypto_openssl.dep\"\r\n!ELSE \r\n!MESSAGE Warning: cannot find \"apr_crypto_openssl.dep\"\r\n!ENDIF \r\n!ENDIF \r\n\r\n",
                    "rendered": {
                      "text": "!IF EXISTS(\"apr_crypto_openssl.dep\")\r\n!INCLUDE \"apr_crypto_openssl.dep\"\r\n!ELSE \r\n!MESSAGE Warning: cannot find \"apr_crypto_openssl.dep\"\r\n!ENDIF \r\n!ENDIF \r\n\r\n",
                      "markdown": "`!IF EXISTS(\"apr_crypto_openssl.dep\")\r\n!INCLUDE \"apr_crypto_openssl.dep\"\r\n!ELSE \r\n!MESSAGE Warning: cannot find \"apr_crypto_openssl.dep\"\r\n!ENDIF \r\n!ENDIF \r\n\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/apr_md5.c"
                },
                "region": {
                  "startLine": 555,
                  "startColumn": 11,
                  "endLine": 555,
                  "endColumn": 19,
                  "snippet": {
                    "text": "#endif\n    \n    /*\n     * The password first, since that is what is most unknown\n     */\n    apr_md5_update(&ctx, pw, strlen(pw));\n\n",
                    "rendered": {
                      "text": "#endif\n    \n    /*\n     * The password first, since that is what is most unknown\n     */\n    apr_md5_update(&ctx, pw, strlen(pw));\n\n",
                      "markdown": "`#endif\n    \n    /*\n     * The password first, since that is what is most unknown\n     */\n    apr_md5_update(&ctx, pw, strlen(pw));\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/apr_md5.c"
                },
                "region": {
                  "startLine": 509,
                  "startColumn": 47,
                  "endLine": 509,
                  "endColumn": 55,
                  "snippet": {
                    "text": "{\n    /*\n     * Minimum size is 8 bytes for salt, plus 1 for the trailing NUL,\n     * plus 4 for the '$' separators, plus the password hash itself.\n     * Let's leave a goodly amount of leeway.\n     */\n\n",
                    "rendered": {
                      "text": "{\n    /*\n     * Minimum size is 8 bytes for salt, plus 1 for the trailing NUL,\n     * plus 4 for the '$' separators, plus the password hash itself.\n     * Let's leave a goodly amount of leeway.\n     */\n\n",
                      "markdown": "`{\n    /*\n     * Minimum size is 8 bytes for salt, plus 1 for the trailing NUL,\n     * plus 4 for the '$' separators, plus the password hash itself.\n     * Let's leave a goodly amount of leeway.\n     */\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/apr_md5.c"
                },
                "region": {
                  "startLine": 488,
                  "startColumn": 21,
                  "endLine": 488,
                  "endColumn": 29,
                  "snippet": {
                    "text": "static const char * const apr1_id = \"$apr1$\";\n\n/*\n * The following MD5 password encryption code was largely borrowed from\n * the FreeBSD 3.0 /usr/src/lib/libcrypt/crypt.c file, which is\n * licenced as stated at the top of this file.\n */\n",
                    "rendered": {
                      "text": "static const char * const apr1_id = \"$apr1$\";\n\n/*\n * The following MD5 password encryption code was largely borrowed from\n * the FreeBSD 3.0 /usr/src/lib/libcrypt/crypt.c file, which is\n * licenced as stated at the top of this file.\n */\n",
                      "markdown": "`static const char * const apr1_id = \"$apr1$\";\n\n/*\n * The following MD5 password encryption code was largely borrowed from\n * the FreeBSD 3.0 /usr/src/lib/libcrypt/crypt.c file, which is\n * licenced as stated at the top of this file.\n */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/apr_md5.c"
                },
                "region": {
                  "startLine": 482,
                  "startColumn": 52,
                  "endLine": 482,
                  "endColumn": 60,
                  "snippet": {
                    "text": "#endif\n\n/*\n * Define the Magic String prefix that identifies a password as being\n * hashed using our algorithm.\n */\nstatic const char * const apr1_id = \"$apr1$\";\n",
                    "rendered": {
                      "text": "#endif\n\n/*\n * Define the Magic String prefix that identifies a password as being\n * hashed using our algorithm.\n */\nstatic const char * const apr1_id = \"$apr1$\";\n",
                      "markdown": "`#endif\n\n/*\n * Define the Magic String prefix that identifies a password as being\n * hashed using our algorithm.\n */\nstatic const char * const apr1_id = \"$apr1$\";\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/Makefile.in"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 111,
                  "endLine": 84,
                  "endColumn": 116,
                  "snippet": {
                    "text": "\t\t\t\tfi; \\\n\t\t\tdone; \\\n\t        else \\\n\t\t\t@apr_shlibpath_var@=\"`echo \"../crypto/.libs:../dbm/.libs:../dbd/.libs:../ldap/.libs:$$@apr_shlibpath_var@\" | sed -e 's/::*$$//'`\" \\\n\t\t\t./$$prog; \\\n\t\t\tstatus=$$?; \\\n\t\t\tif test $$status != 0; then \\\n",
                    "rendered": {
                      "text": "\t\t\t\tfi; \\\n\t\t\tdone; \\\n\t        else \\\n\t\t\t@apr_shlibpath_var@=\"`echo \"../crypto/.libs:../dbm/.libs:../dbd/.libs:../ldap/.libs:$$@apr_shlibpath_var@\" | sed -e 's/::*$$//'`\" \\\n\t\t\t./$$prog; \\\n\t\t\tstatus=$$?; \\\n\t\t\tif test $$status != 0; then \\\n",
                      "markdown": "`\t\t\t\tfi; \\\n\t\t\tdone; \\\n\t        else \\\n\t\t\t@apr_shlibpath_var@=\"`echo \"../crypto/.libs:../dbm/.libs:../dbd/.libs:../ldap/.libs:$$@apr_shlibpath_var@\" | sed -e 's/::*$$//'`\" \\\n\t\t\t./$$prog; \\\n\t\t\tstatus=$$?; \\\n\t\t\tif test $$status != 0; then \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/Makefile.in"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 113,
                  "endLine": 74,
                  "endColumn": 118,
                  "snippet": {
                    "text": "\t        if test \"$$prog\" = 'dbd'; then \\\n\t\t\tfor driver in none @apu_dbd_tests@; do \\\n\t\t\t\tif test \"$$driver\" != 'none'; then \\\n\t\t\t\t\t@apr_shlibpath_var@=\"`echo \"../crypto/.libs:../dbm/.libs:../dbd/.libs:../ldap/.libs:$$@apr_shlibpath_var@\" | sed -e 's/::*$$//'`\" \\\n\t\t\t\t\t./$$prog $$driver; \\\n\t\t\t\t\tstatus=$$?; \\\n\t\t\t\t\tif test $$status != 0; then \\\n",
                    "rendered": {
                      "text": "\t        if test \"$$prog\" = 'dbd'; then \\\n\t\t\tfor driver in none @apu_dbd_tests@; do \\\n\t\t\t\tif test \"$$driver\" != 'none'; then \\\n\t\t\t\t\t@apr_shlibpath_var@=\"`echo \"../crypto/.libs:../dbm/.libs:../dbd/.libs:../ldap/.libs:$$@apr_shlibpath_var@\" | sed -e 's/::*$$//'`\" \\\n\t\t\t\t\t./$$prog $$driver; \\\n\t\t\t\t\tstatus=$$?; \\\n\t\t\t\t\tif test $$status != 0; then \\\n",
                      "markdown": "`\t        if test \"$$prog\" = 'dbd'; then \\\n\t\t\tfor driver in none @apu_dbd_tests@; do \\\n\t\t\t\tif test \"$$driver\" != 'none'; then \\\n\t\t\t\t\t@apr_shlibpath_var@=\"`echo \"../crypto/.libs:../dbm/.libs:../dbd/.libs:../ldap/.libs:$$@apr_shlibpath_var@\" | sed -e 's/::*$$//'`\" \\\n\t\t\t\t\t./$$prog $$driver; \\\n\t\t\t\t\tstatus=$$?; \\\n\t\t\t\t\tif test $$status != 0; then \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/Makefile.in"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 28,
                  "endLine": 57,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t$(LINK_PROG) $(OBJECTS_testall) $(APRUTIL_LIBS) @LDADD_ldap@\n# For VPATH builds; where we have no ./data, copy us some data\n# if we wait until 'make check', then 'make; ./testall' fails;\n\tif test ! -d \"./data\"; then cp -r $(srcdir)/data data; fi\n\nOBJECTS_dbd = dbd.lo $(LOCAL_LIBS)\ndbd: $(OBJECTS_dbd)\n",
                    "rendered": {
                      "text": "\t$(LINK_PROG) $(OBJECTS_testall) $(APRUTIL_LIBS) @LDADD_ldap@\n# For VPATH builds; where we have no ./data, copy us some data\n# if we wait until 'make check', then 'make; ./testall' fails;\n\tif test ! -d \"./data\"; then cp -r $(srcdir)/data data; fi\n\nOBJECTS_dbd = dbd.lo $(LOCAL_LIBS)\ndbd: $(OBJECTS_dbd)\n",
                      "markdown": "`\t$(LINK_PROG) $(OBJECTS_testall) $(APRUTIL_LIBS) @LDADD_ldap@\n# For VPATH builds; where we have no ./data, copy us some data\n# if we wait until 'make check', then 'make; ./testall' fails;\n\tif test ! -d \"./data\"; then cp -r $(srcdir)/data data; fi\n\nOBJECTS_dbd = dbd.lo $(LOCAL_LIBS)\ndbd: $(OBJECTS_dbd)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testuri.c"
                },
                "region": {
                  "startLine": 291,
                  "startColumn": 36,
                  "endLine": 291,
                  "endColumn": 44,
                  "snippet": {
                    "text": "            ABTS_STR_EQUAL(tc, info.scheme, NULL);\n            ABTS_STR_EQUAL(tc, info.hostinfo, NULL);\n            ABTS_STR_EQUAL(tc, info.user, NULL);\n            ABTS_STR_EQUAL(tc, info.password, NULL);\n            ABTS_STR_EQUAL(tc, info.hostname, NULL);\n            ABTS_STR_EQUAL(tc, info.port_str, NULL);\n            ABTS_STR_EQUAL(tc, info.path, t->path);\n",
                    "rendered": {
                      "text": "            ABTS_STR_EQUAL(tc, info.scheme, NULL);\n            ABTS_STR_EQUAL(tc, info.hostinfo, NULL);\n            ABTS_STR_EQUAL(tc, info.user, NULL);\n            ABTS_STR_EQUAL(tc, info.password, NULL);\n            ABTS_STR_EQUAL(tc, info.hostname, NULL);\n            ABTS_STR_EQUAL(tc, info.port_str, NULL);\n            ABTS_STR_EQUAL(tc, info.path, t->path);\n",
                      "markdown": "`            ABTS_STR_EQUAL(tc, info.scheme, NULL);\n            ABTS_STR_EQUAL(tc, info.hostinfo, NULL);\n            ABTS_STR_EQUAL(tc, info.user, NULL);\n            ABTS_STR_EQUAL(tc, info.password, NULL);\n            ABTS_STR_EQUAL(tc, info.hostname, NULL);\n            ABTS_STR_EQUAL(tc, info.port_str, NULL);\n            ABTS_STR_EQUAL(tc, info.path, t->path);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testuri.c"
                },
                "region": {
                  "startLine": 283,
                  "startColumn": 60,
                  "endLine": 283,
                  "endColumn": 68,
                  "snippet": {
                    "text": "            ABTS_STR_EQUAL(tc, t->user, info.user);\n            ABTS_INT_EQUAL(tc, t->port, info.port);\n\n            s = apr_uri_unparse(p, &info, APR_URI_UNP_REVEALPASSWORD);\n            ABTS_STR_EQUAL(tc, t->uri, s);\n\n            s = apr_uri_unparse(p, &info, APR_URI_UNP_OMITSITEPART);\n",
                    "rendered": {
                      "text": "            ABTS_STR_EQUAL(tc, t->user, info.user);\n            ABTS_INT_EQUAL(tc, t->port, info.port);\n\n            s = apr_uri_unparse(p, &info, APR_URI_UNP_REVEALPASSWORD);\n            ABTS_STR_EQUAL(tc, t->uri, s);\n\n            s = apr_uri_unparse(p, &info, APR_URI_UNP_OMITSITEPART);\n",
                      "markdown": "`            ABTS_STR_EQUAL(tc, t->user, info.user);\n            ABTS_INT_EQUAL(tc, t->port, info.port);\n\n            s = apr_uri_unparse(p, &info, APR_URI_UNP_REVEALPASSWORD);\n            ABTS_STR_EQUAL(tc, t->uri, s);\n\n            s = apr_uri_unparse(p, &info, APR_URI_UNP_OMITSITEPART);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testuri.c"
                },
                "region": {
                  "startLine": 275,
                  "startColumn": 49,
                  "endLine": 275,
                  "endColumn": 57,
                  "snippet": {
                    "text": "            ABTS_STR_EQUAL(tc, t->scheme, info.scheme);\n            ABTS_STR_EQUAL(tc, t->hostinfo, info.hostinfo);\n            ABTS_STR_EQUAL(tc, t->user, info.user);\n            ABTS_STR_EQUAL(tc, t->password, info.password);\n            ABTS_STR_EQUAL(tc, t->hostname, info.hostname);\n            ABTS_STR_EQUAL(tc, t->port_str, info.port_str);\n            ABTS_STR_EQUAL(tc, t->path, info.path);\n",
                    "rendered": {
                      "text": "            ABTS_STR_EQUAL(tc, t->scheme, info.scheme);\n            ABTS_STR_EQUAL(tc, t->hostinfo, info.hostinfo);\n            ABTS_STR_EQUAL(tc, t->user, info.user);\n            ABTS_STR_EQUAL(tc, t->password, info.password);\n            ABTS_STR_EQUAL(tc, t->hostname, info.hostname);\n            ABTS_STR_EQUAL(tc, t->port_str, info.port_str);\n            ABTS_STR_EQUAL(tc, t->path, info.path);\n",
                      "markdown": "`            ABTS_STR_EQUAL(tc, t->scheme, info.scheme);\n            ABTS_STR_EQUAL(tc, t->hostinfo, info.hostinfo);\n            ABTS_STR_EQUAL(tc, t->user, info.user);\n            ABTS_STR_EQUAL(tc, t->password, info.password);\n            ABTS_STR_EQUAL(tc, t->hostname, info.hostname);\n            ABTS_STR_EQUAL(tc, t->port_str, info.port_str);\n            ABTS_STR_EQUAL(tc, t->path, info.path);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testuri.c"
                },
                "region": {
                  "startLine": 275,
                  "startColumn": 34,
                  "endLine": 275,
                  "endColumn": 42,
                  "snippet": {
                    "text": "            ABTS_STR_EQUAL(tc, t->scheme, info.scheme);\n            ABTS_STR_EQUAL(tc, t->hostinfo, info.hostinfo);\n            ABTS_STR_EQUAL(tc, t->user, info.user);\n            ABTS_STR_EQUAL(tc, t->password, info.password);\n            ABTS_STR_EQUAL(tc, t->hostname, info.hostname);\n            ABTS_STR_EQUAL(tc, t->port_str, info.port_str);\n            ABTS_STR_EQUAL(tc, t->path, info.path);\n",
                    "rendered": {
                      "text": "            ABTS_STR_EQUAL(tc, t->scheme, info.scheme);\n            ABTS_STR_EQUAL(tc, t->hostinfo, info.hostinfo);\n            ABTS_STR_EQUAL(tc, t->user, info.user);\n            ABTS_STR_EQUAL(tc, t->password, info.password);\n            ABTS_STR_EQUAL(tc, t->hostname, info.hostname);\n            ABTS_STR_EQUAL(tc, t->port_str, info.port_str);\n            ABTS_STR_EQUAL(tc, t->path, info.path);\n",
                      "markdown": "`            ABTS_STR_EQUAL(tc, t->scheme, info.scheme);\n            ABTS_STR_EQUAL(tc, t->hostinfo, info.hostinfo);\n            ABTS_STR_EQUAL(tc, t->user, info.user);\n            ABTS_STR_EQUAL(tc, t->password, info.password);\n            ABTS_STR_EQUAL(tc, t->hostname, info.hostname);\n            ABTS_STR_EQUAL(tc, t->port_str, info.port_str);\n            ABTS_STR_EQUAL(tc, t->path, info.path);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testuri.c"
                },
                "region": {
                  "startLine": 246,
                  "startColumn": 64,
                  "endLine": 246,
                  "endColumn": 72,
                  "snippet": {
                    "text": "                \"  is_initialized:   %u\\n\"\n                \"  dns_looked_up:    %u\\n\"\n                \"  dns_resolved:     %u\\n\",\n                info->scheme, info->hostinfo, info->user, info->password,\n                info->hostname, info->port_str, info->path, info->query,\n                info->fragment, info->hostent, info->port, info->is_initialized,\n                info->dns_looked_up, info->dns_resolved);\n",
                    "rendered": {
                      "text": "                \"  is_initialized:   %u\\n\"\n                \"  dns_looked_up:    %u\\n\"\n                \"  dns_resolved:     %u\\n\",\n                info->scheme, info->hostinfo, info->user, info->password,\n                info->hostname, info->port_str, info->path, info->query,\n                info->fragment, info->hostent, info->port, info->is_initialized,\n                info->dns_looked_up, info->dns_resolved);\n",
                      "markdown": "`                \"  is_initialized:   %u\\n\"\n                \"  dns_looked_up:    %u\\n\"\n                \"  dns_resolved:     %u\\n\",\n                info->scheme, info->hostinfo, info->user, info->password,\n                info->hostname, info->port_str, info->path, info->query,\n                info->fragment, info->hostent, info->port, info->is_initialized,\n                info->dns_looked_up, info->dns_resolved);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testuri.c"
                },
                "region": {
                  "startLine": 235,
                  "startColumn": 19,
                  "endLine": 235,
                  "endColumn": 27,
                  "snippet": {
                    "text": "                \"  scheme:           %s\\n\"\n                \"  hostinfo:         %s\\n\"\n                \"  user:             %s\\n\"\n                \"  password:         %s\\n\"\n                \"  hostname:         %s\\n\"\n                \"  port_str:         %s\\n\"\n                \"  path:             %s\\n\"\n",
                    "rendered": {
                      "text": "                \"  scheme:           %s\\n\"\n                \"  hostinfo:         %s\\n\"\n                \"  user:             %s\\n\"\n                \"  password:         %s\\n\"\n                \"  hostname:         %s\\n\"\n                \"  port_str:         %s\\n\"\n                \"  path:             %s\\n\"\n",
                      "markdown": "`                \"  scheme:           %s\\n\"\n                \"  hostinfo:         %s\\n\"\n                \"  user:             %s\\n\"\n                \"  password:         %s\\n\"\n                \"  hostname:         %s\\n\"\n                \"  port_str:         %s\\n\"\n                \"  path:             %s\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testuri.c"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 16,
                  "endLine": 31,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    const char *scheme;\n    const char *hostinfo;\n    const char *user;\n    const char *password;\n    const char *hostname;\n    const char *port_str;\n    const char *path;\n",
                    "rendered": {
                      "text": "    const char *scheme;\n    const char *hostinfo;\n    const char *user;\n    const char *password;\n    const char *hostname;\n    const char *port_str;\n    const char *path;\n",
                      "markdown": "`    const char *scheme;\n    const char *hostinfo;\n    const char *user;\n    const char *password;\n    const char *hostname;\n    const char *port_str;\n    const char *path;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testuri.c"
                },
                "region": {
                  "startLine": 315,
                  "startColumn": 49,
                  "endLine": 315,
                  "endColumn": 57,
                  "snippet": {
                    "text": "        rv = apr_uri_parse_hostinfo(p, t->hostinfo, &info);\n        ABTS_INT_EQUAL(tc, t->rv, rv);\n        if (t->rv == APR_SUCCESS) {\n            ABTS_STR_EQUAL(tc, t->hostname, info.hostname);\n            ABTS_STR_EQUAL(tc, t->port_str, info.port_str);\n            ABTS_INT_EQUAL(tc, t->port, info.port);\n        }\n",
                    "rendered": {
                      "text": "        rv = apr_uri_parse_hostinfo(p, t->hostinfo, &info);\n        ABTS_INT_EQUAL(tc, t->rv, rv);\n        if (t->rv == APR_SUCCESS) {\n            ABTS_STR_EQUAL(tc, t->hostname, info.hostname);\n            ABTS_STR_EQUAL(tc, t->port_str, info.port_str);\n            ABTS_INT_EQUAL(tc, t->port, info.port);\n        }\n",
                      "markdown": "`        rv = apr_uri_parse_hostinfo(p, t->hostinfo, &info);\n        ABTS_INT_EQUAL(tc, t->rv, rv);\n        if (t->rv == APR_SUCCESS) {\n            ABTS_STR_EQUAL(tc, t->hostname, info.hostname);\n            ABTS_STR_EQUAL(tc, t->port_str, info.port_str);\n            ABTS_INT_EQUAL(tc, t->port, info.port);\n        }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testuri.c"
                },
                "region": {
                  "startLine": 315,
                  "startColumn": 34,
                  "endLine": 315,
                  "endColumn": 42,
                  "snippet": {
                    "text": "        rv = apr_uri_parse_hostinfo(p, t->hostinfo, &info);\n        ABTS_INT_EQUAL(tc, t->rv, rv);\n        if (t->rv == APR_SUCCESS) {\n            ABTS_STR_EQUAL(tc, t->hostname, info.hostname);\n            ABTS_STR_EQUAL(tc, t->port_str, info.port_str);\n            ABTS_INT_EQUAL(tc, t->port, info.port);\n        }\n",
                    "rendered": {
                      "text": "        rv = apr_uri_parse_hostinfo(p, t->hostinfo, &info);\n        ABTS_INT_EQUAL(tc, t->rv, rv);\n        if (t->rv == APR_SUCCESS) {\n            ABTS_STR_EQUAL(tc, t->hostname, info.hostname);\n            ABTS_STR_EQUAL(tc, t->port_str, info.port_str);\n            ABTS_INT_EQUAL(tc, t->port, info.port);\n        }\n",
                      "markdown": "`        rv = apr_uri_parse_hostinfo(p, t->hostinfo, &info);\n        ABTS_INT_EQUAL(tc, t->rv, rv);\n        if (t->rv == APR_SUCCESS) {\n            ABTS_STR_EQUAL(tc, t->hostname, info.hostname);\n            ABTS_STR_EQUAL(tc, t->port_str, info.port_str);\n            ABTS_INT_EQUAL(tc, t->port, info.port);\n        }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testuri.c"
                },
                "region": {
                  "startLine": 292,
                  "startColumn": 36,
                  "endLine": 292,
                  "endColumn": 44,
                  "snippet": {
                    "text": "            ABTS_STR_EQUAL(tc, info.hostinfo, NULL);\n            ABTS_STR_EQUAL(tc, info.user, NULL);\n            ABTS_STR_EQUAL(tc, info.password, NULL);\n            ABTS_STR_EQUAL(tc, info.hostname, NULL);\n            ABTS_STR_EQUAL(tc, info.port_str, NULL);\n            ABTS_STR_EQUAL(tc, info.path, t->path);\n            ABTS_STR_EQUAL(tc, info.query, t->query);\n",
                    "rendered": {
                      "text": "            ABTS_STR_EQUAL(tc, info.hostinfo, NULL);\n            ABTS_STR_EQUAL(tc, info.user, NULL);\n            ABTS_STR_EQUAL(tc, info.password, NULL);\n            ABTS_STR_EQUAL(tc, info.hostname, NULL);\n            ABTS_STR_EQUAL(tc, info.port_str, NULL);\n            ABTS_STR_EQUAL(tc, info.path, t->path);\n            ABTS_STR_EQUAL(tc, info.query, t->query);\n",
                      "markdown": "`            ABTS_STR_EQUAL(tc, info.hostinfo, NULL);\n            ABTS_STR_EQUAL(tc, info.user, NULL);\n            ABTS_STR_EQUAL(tc, info.password, NULL);\n            ABTS_STR_EQUAL(tc, info.hostname, NULL);\n            ABTS_STR_EQUAL(tc, info.port_str, NULL);\n            ABTS_STR_EQUAL(tc, info.path, t->path);\n            ABTS_STR_EQUAL(tc, info.query, t->query);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testuri.c"
                },
                "region": {
                  "startLine": 276,
                  "startColumn": 49,
                  "endLine": 276,
                  "endColumn": 57,
                  "snippet": {
                    "text": "            ABTS_STR_EQUAL(tc, t->hostinfo, info.hostinfo);\n            ABTS_STR_EQUAL(tc, t->user, info.user);\n            ABTS_STR_EQUAL(tc, t->password, info.password);\n            ABTS_STR_EQUAL(tc, t->hostname, info.hostname);\n            ABTS_STR_EQUAL(tc, t->port_str, info.port_str);\n            ABTS_STR_EQUAL(tc, t->path, info.path);\n            ABTS_STR_EQUAL(tc, t->query, info.query);\n",
                    "rendered": {
                      "text": "            ABTS_STR_EQUAL(tc, t->hostinfo, info.hostinfo);\n            ABTS_STR_EQUAL(tc, t->user, info.user);\n            ABTS_STR_EQUAL(tc, t->password, info.password);\n            ABTS_STR_EQUAL(tc, t->hostname, info.hostname);\n            ABTS_STR_EQUAL(tc, t->port_str, info.port_str);\n            ABTS_STR_EQUAL(tc, t->path, info.path);\n            ABTS_STR_EQUAL(tc, t->query, info.query);\n",
                      "markdown": "`            ABTS_STR_EQUAL(tc, t->hostinfo, info.hostinfo);\n            ABTS_STR_EQUAL(tc, t->user, info.user);\n            ABTS_STR_EQUAL(tc, t->password, info.password);\n            ABTS_STR_EQUAL(tc, t->hostname, info.hostname);\n            ABTS_STR_EQUAL(tc, t->port_str, info.port_str);\n            ABTS_STR_EQUAL(tc, t->path, info.path);\n            ABTS_STR_EQUAL(tc, t->query, info.query);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testuri.c"
                },
                "region": {
                  "startLine": 276,
                  "startColumn": 34,
                  "endLine": 276,
                  "endColumn": 42,
                  "snippet": {
                    "text": "            ABTS_STR_EQUAL(tc, t->hostinfo, info.hostinfo);\n            ABTS_STR_EQUAL(tc, t->user, info.user);\n            ABTS_STR_EQUAL(tc, t->password, info.password);\n            ABTS_STR_EQUAL(tc, t->hostname, info.hostname);\n            ABTS_STR_EQUAL(tc, t->port_str, info.port_str);\n            ABTS_STR_EQUAL(tc, t->path, info.path);\n            ABTS_STR_EQUAL(tc, t->query, info.query);\n",
                    "rendered": {
                      "text": "            ABTS_STR_EQUAL(tc, t->hostinfo, info.hostinfo);\n            ABTS_STR_EQUAL(tc, t->user, info.user);\n            ABTS_STR_EQUAL(tc, t->password, info.password);\n            ABTS_STR_EQUAL(tc, t->hostname, info.hostname);\n            ABTS_STR_EQUAL(tc, t->port_str, info.port_str);\n            ABTS_STR_EQUAL(tc, t->path, info.path);\n            ABTS_STR_EQUAL(tc, t->query, info.query);\n",
                      "markdown": "`            ABTS_STR_EQUAL(tc, t->hostinfo, info.hostinfo);\n            ABTS_STR_EQUAL(tc, t->user, info.user);\n            ABTS_STR_EQUAL(tc, t->password, info.password);\n            ABTS_STR_EQUAL(tc, t->hostname, info.hostname);\n            ABTS_STR_EQUAL(tc, t->port_str, info.port_str);\n            ABTS_STR_EQUAL(tc, t->path, info.path);\n            ABTS_STR_EQUAL(tc, t->query, info.query);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testuri.c"
                },
                "region": {
                  "startLine": 247,
                  "startColumn": 22,
                  "endLine": 247,
                  "endColumn": 30,
                  "snippet": {
                    "text": "                \"  dns_looked_up:    %u\\n\"\n                \"  dns_resolved:     %u\\n\",\n                info->scheme, info->hostinfo, info->user, info->password,\n                info->hostname, info->port_str, info->path, info->query,\n                info->fragment, info->hostent, info->port, info->is_initialized,\n                info->dns_looked_up, info->dns_resolved);\n    }\n",
                    "rendered": {
                      "text": "                \"  dns_looked_up:    %u\\n\"\n                \"  dns_resolved:     %u\\n\",\n                info->scheme, info->hostinfo, info->user, info->password,\n                info->hostname, info->port_str, info->path, info->query,\n                info->fragment, info->hostent, info->port, info->is_initialized,\n                info->dns_looked_up, info->dns_resolved);\n    }\n",
                      "markdown": "`                \"  dns_looked_up:    %u\\n\"\n                \"  dns_resolved:     %u\\n\",\n                info->scheme, info->hostinfo, info->user, info->password,\n                info->hostname, info->port_str, info->path, info->query,\n                info->fragment, info->hostent, info->port, info->is_initialized,\n                info->dns_looked_up, info->dns_resolved);\n    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testuri.c"
                },
                "region": {
                  "startLine": 236,
                  "startColumn": 19,
                  "endLine": 236,
                  "endColumn": 27,
                  "snippet": {
                    "text": "                \"  hostinfo:         %s\\n\"\n                \"  user:             %s\\n\"\n                \"  password:         %s\\n\"\n                \"  hostname:         %s\\n\"\n                \"  port_str:         %s\\n\"\n                \"  path:             %s\\n\"\n                \"  query:            %s\\n\"\n",
                    "rendered": {
                      "text": "                \"  hostinfo:         %s\\n\"\n                \"  user:             %s\\n\"\n                \"  password:         %s\\n\"\n                \"  hostname:         %s\\n\"\n                \"  port_str:         %s\\n\"\n                \"  path:             %s\\n\"\n                \"  query:            %s\\n\"\n",
                      "markdown": "`                \"  hostinfo:         %s\\n\"\n                \"  user:             %s\\n\"\n                \"  password:         %s\\n\"\n                \"  hostname:         %s\\n\"\n                \"  port_str:         %s\\n\"\n                \"  path:             %s\\n\"\n                \"  query:            %s\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testuri.c"
                },
                "region": {
                  "startLine": 191,
                  "startColumn": 16,
                  "endLine": 191,
                  "endColumn": 24,
                  "snippet": {
                    "text": "struct uph_test {\n    const char *hostinfo;\n    apr_status_t rv;\n    const char *hostname;\n    const char *port_str;\n    apr_port_t port;\n};\n",
                    "rendered": {
                      "text": "struct uph_test {\n    const char *hostinfo;\n    apr_status_t rv;\n    const char *hostname;\n    const char *port_str;\n    apr_port_t port;\n};\n",
                      "markdown": "`struct uph_test {\n    const char *hostinfo;\n    apr_status_t rv;\n    const char *hostname;\n    const char *port_str;\n    apr_port_t port;\n};\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testuri.c"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 16,
                  "endLine": 32,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    const char *hostinfo;\n    const char *user;\n    const char *password;\n    const char *hostname;\n    const char *port_str;\n    const char *path;\n    const char *query;\n",
                    "rendered": {
                      "text": "    const char *hostinfo;\n    const char *user;\n    const char *password;\n    const char *hostname;\n    const char *port_str;\n    const char *path;\n    const char *query;\n",
                      "markdown": "`    const char *hostinfo;\n    const char *user;\n    const char *password;\n    const char *hostname;\n    const char *port_str;\n    const char *path;\n    const char *query;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/Makefile.win"
                },
                "region": {
                  "startLine": 168,
                  "startColumn": 46,
                  "endLine": 168,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\ncheck: $(PROGRAMS) $(OTHER_PROGRAMS)\n\techo Testing dbd sqlite2 && $(OUTDIR)\\dbd.exe sqlite2 || echo Failed\n\techo Testing dbd sqlite3 && $(OUTDIR)\\dbd.exe sqlite3 || echo Failed\n\t@for %p in ($(PROGRAMS)) do @( \\\n\t    echo Testing %p && %p -v || echo %p failed \\\n\t)\n",
                    "rendered": {
                      "text": "\ncheck: $(PROGRAMS) $(OTHER_PROGRAMS)\n\techo Testing dbd sqlite2 && $(OUTDIR)\\dbd.exe sqlite2 || echo Failed\n\techo Testing dbd sqlite3 && $(OUTDIR)\\dbd.exe sqlite3 || echo Failed\n\t@for %p in ($(PROGRAMS)) do @( \\\n\t    echo Testing %p && %p -v || echo %p failed \\\n\t)\n",
                      "markdown": "`\ncheck: $(PROGRAMS) $(OTHER_PROGRAMS)\n\techo Testing dbd sqlite2 && $(OUTDIR)\\dbd.exe sqlite2 || echo Failed\n\techo Testing dbd sqlite3 && $(OUTDIR)\\dbd.exe sqlite3 || echo Failed\n\t@for %p in ($(PROGRAMS)) do @( \\\n\t    echo Testing %p && %p -v || echo %p failed \\\n\t)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/Makefile.win"
                },
                "region": {
                  "startLine": 168,
                  "startColumn": 17,
                  "endLine": 168,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\ncheck: $(PROGRAMS) $(OTHER_PROGRAMS)\n\techo Testing dbd sqlite2 && $(OUTDIR)\\dbd.exe sqlite2 || echo Failed\n\techo Testing dbd sqlite3 && $(OUTDIR)\\dbd.exe sqlite3 || echo Failed\n\t@for %p in ($(PROGRAMS)) do @( \\\n\t    echo Testing %p && %p -v || echo %p failed \\\n\t)\n",
                    "rendered": {
                      "text": "\ncheck: $(PROGRAMS) $(OTHER_PROGRAMS)\n\techo Testing dbd sqlite2 && $(OUTDIR)\\dbd.exe sqlite2 || echo Failed\n\techo Testing dbd sqlite3 && $(OUTDIR)\\dbd.exe sqlite3 || echo Failed\n\t@for %p in ($(PROGRAMS)) do @( \\\n\t    echo Testing %p && %p -v || echo %p failed \\\n\t)\n",
                      "markdown": "`\ncheck: $(PROGRAMS) $(OTHER_PROGRAMS)\n\techo Testing dbd sqlite2 && $(OUTDIR)\\dbd.exe sqlite2 || echo Failed\n\techo Testing dbd sqlite3 && $(OUTDIR)\\dbd.exe sqlite3 || echo Failed\n\t@for %p in ($(PROGRAMS)) do @( \\\n\t    echo Testing %p && %p -v || echo %p failed \\\n\t)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testbuckets.c"
                },
                "region": {
                  "startLine": 449,
                  "startColumn": 42,
                  "endLine": 449,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\n    e = apr_brigade_insert_file(bb, f, 0, bignum, p);\n    \n    ABTS_ASSERT(tc, \"inserted file was not at end of brigade\",\n                e == APR_BRIGADE_LAST(bb));\n\n    /* check that the total size of inserted buckets is equal to the\n",
                    "rendered": {
                      "text": "\n    e = apr_brigade_insert_file(bb, f, 0, bignum, p);\n    \n    ABTS_ASSERT(tc, \"inserted file was not at end of brigade\",\n                e == APR_BRIGADE_LAST(bb));\n\n    /* check that the total size of inserted buckets is equal to the\n",
                      "markdown": "`\n    e = apr_brigade_insert_file(bb, f, 0, bignum, p);\n    \n    ABTS_ASSERT(tc, \"inserted file was not at end of brigade\",\n                e == APR_BRIGADE_LAST(bb));\n\n    /* check that the total size of inserted buckets is equal to the\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testmd5.c"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 13,
                  "endLine": 77,
                  "endColumn": 77,
                  "snippet": {
                    "text": "                             \"abcdefghijklmnopqrstuvwxyz01234\"\n                             \"abcdefghijklmnopqrstuvwxyz01234_\";\n        const char *sum =\n            \"\\x93\\x17\\x22\\x78\\xee\\x30\\x82\\xb3\\xeb\\x95\\x33\\xec\\xea\\x78\\xb7\\x89\";\n        unsigned char digest[APR_MD5_DIGESTSIZE];\n        unsigned int i;\n\n",
                    "rendered": {
                      "text": "                             \"abcdefghijklmnopqrstuvwxyz01234\"\n                             \"abcdefghijklmnopqrstuvwxyz01234_\";\n        const char *sum =\n            \"\\x93\\x17\\x22\\x78\\xee\\x30\\x82\\xb3\\xeb\\x95\\x33\\xec\\xea\\x78\\xb7\\x89\";\n        unsigned char digest[APR_MD5_DIGESTSIZE];\n        unsigned int i;\n\n",
                      "markdown": "`                             \"abcdefghijklmnopqrstuvwxyz01234\"\n                             \"abcdefghijklmnopqrstuvwxyz01234_\";\n        const char *sum =\n            \"\\x93\\x17\\x22\\x78\\xee\\x30\\x82\\xb3\\xeb\\x95\\x33\\xec\\xea\\x78\\xb7\\x89\";\n        unsigned char digest[APR_MD5_DIGESTSIZE];\n        unsigned int i;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testmd5.c"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 6,
                  "endLine": 46,
                  "endColumn": 70,
                  "snippet": {
                    "text": "     \"01234567890aBcDeFASDFGHJKLPOIUYTR\"\n     \"POIUYTREWQZXCVBN  LLLLLLLLLLLLLLL\"\n     \"1\",\n     \"\\xd1\\xa1\\xc0\\x97\\x8a\\x60\\xbb\\xfb\\x2a\\x25\\x46\\x9d\\xa5\\xae\\xd0\\xb0\"}\n};\n\nstatic int num_sums = sizeof(md5sums) / sizeof(md5sums[0]);\n",
                    "rendered": {
                      "text": "     \"01234567890aBcDeFASDFGHJKLPOIUYTR\"\n     \"POIUYTREWQZXCVBN  LLLLLLLLLLLLLLL\"\n     \"1\",\n     \"\\xd1\\xa1\\xc0\\x97\\x8a\\x60\\xbb\\xfb\\x2a\\x25\\x46\\x9d\\xa5\\xae\\xd0\\xb0\"}\n};\n\nstatic int num_sums = sizeof(md5sums) / sizeof(md5sums[0]);\n",
                      "markdown": "`     \"01234567890aBcDeFASDFGHJKLPOIUYTR\"\n     \"POIUYTREWQZXCVBN  LLLLLLLLLLLLLLL\"\n     \"1\",\n     \"\\xd1\\xa1\\xc0\\x97\\x8a\\x60\\xbb\\xfb\\x2a\\x25\\x46\\x9d\\xa5\\xae\\xd0\\xb0\"}\n};\n\nstatic int num_sums = sizeof(md5sums) / sizeof(md5sums[0]);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testmd5.c"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 6,
                  "endLine": 40,
                  "endColumn": 70,
                  "snippet": {
                    "text": "     \"\\xd4\\x1a\\x06\\x2c\\xc5\\xfd\\x6f\\x24\\x67\\x68\\x56\\x7c\\x40\\x8a\\xd5\\x69\"},\n    {\"111111118888888888888888*******%%%%%%%%%%#####\"\n     \"142134u8097289720432098409289nkjlfkjlmn,m..   \",\n     \"\\xb6\\xea\\x5b\\xe8\\xca\\x45\\x8a\\x33\\xf0\\xf1\\x84\\x6f\\xf9\\x65\\xa8\\xe1\"},\n    {\"01234567890aBcDeFASDFGHJKLPOIUYTR\"\n     \"POIUYTREWQZXCVBN  LLLLLLLLLLLLLLL\"\n     \"01234567890aBcDeFASDFGHJKLPOIUYTR\"\n",
                    "rendered": {
                      "text": "     \"\\xd4\\x1a\\x06\\x2c\\xc5\\xfd\\x6f\\x24\\x67\\x68\\x56\\x7c\\x40\\x8a\\xd5\\x69\"},\n    {\"111111118888888888888888*******%%%%%%%%%%#####\"\n     \"142134u8097289720432098409289nkjlfkjlmn,m..   \",\n     \"\\xb6\\xea\\x5b\\xe8\\xca\\x45\\x8a\\x33\\xf0\\xf1\\x84\\x6f\\xf9\\x65\\xa8\\xe1\"},\n    {\"01234567890aBcDeFASDFGHJKLPOIUYTR\"\n     \"POIUYTREWQZXCVBN  LLLLLLLLLLLLLLL\"\n     \"01234567890aBcDeFASDFGHJKLPOIUYTR\"\n",
                      "markdown": "`     \"\\xd4\\x1a\\x06\\x2c\\xc5\\xfd\\x6f\\x24\\x67\\x68\\x56\\x7c\\x40\\x8a\\xd5\\x69\"},\n    {\"111111118888888888888888*******%%%%%%%%%%#####\"\n     \"142134u8097289720432098409289nkjlfkjlmn,m..   \",\n     \"\\xb6\\xea\\x5b\\xe8\\xca\\x45\\x8a\\x33\\xf0\\xf1\\x84\\x6f\\xf9\\x65\\xa8\\xe1\"},\n    {\"01234567890aBcDeFASDFGHJKLPOIUYTR\"\n     \"POIUYTREWQZXCVBN  LLLLLLLLLLLLLLL\"\n     \"01234567890aBcDeFASDFGHJKLPOIUYTR\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testmd5.c"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 6,
                  "endLine": 37,
                  "endColumn": 70,
                  "snippet": {
                    "text": "     \"\\xa5\\x25\\x8a\\x89\\x11\\xb2\\x9d\\x1f\\x81\\x75\\x96\\x3b\\x60\\x94\\x49\\xc0\"},\n    {\"01234567890aBcDeFASDFGHJKLPOIUYTR\"\n     \"POIUYTREWQZXCVBN  LLLLLLLLLLLLLLL\",\n     \"\\xd4\\x1a\\x06\\x2c\\xc5\\xfd\\x6f\\x24\\x67\\x68\\x56\\x7c\\x40\\x8a\\xd5\\x69\"},\n    {\"111111118888888888888888*******%%%%%%%%%%#####\"\n     \"142134u8097289720432098409289nkjlfkjlmn,m..   \",\n     \"\\xb6\\xea\\x5b\\xe8\\xca\\x45\\x8a\\x33\\xf0\\xf1\\x84\\x6f\\xf9\\x65\\xa8\\xe1\"},\n",
                    "rendered": {
                      "text": "     \"\\xa5\\x25\\x8a\\x89\\x11\\xb2\\x9d\\x1f\\x81\\x75\\x96\\x3b\\x60\\x94\\x49\\xc0\"},\n    {\"01234567890aBcDeFASDFGHJKLPOIUYTR\"\n     \"POIUYTREWQZXCVBN  LLLLLLLLLLLLLLL\",\n     \"\\xd4\\x1a\\x06\\x2c\\xc5\\xfd\\x6f\\x24\\x67\\x68\\x56\\x7c\\x40\\x8a\\xd5\\x69\"},\n    {\"111111118888888888888888*******%%%%%%%%%%#####\"\n     \"142134u8097289720432098409289nkjlfkjlmn,m..   \",\n     \"\\xb6\\xea\\x5b\\xe8\\xca\\x45\\x8a\\x33\\xf0\\xf1\\x84\\x6f\\xf9\\x65\\xa8\\xe1\"},\n",
                      "markdown": "`     \"\\xa5\\x25\\x8a\\x89\\x11\\xb2\\x9d\\x1f\\x81\\x75\\x96\\x3b\\x60\\x94\\x49\\xc0\"},\n    {\"01234567890aBcDeFASDFGHJKLPOIUYTR\"\n     \"POIUYTREWQZXCVBN  LLLLLLLLLLLLLLL\",\n     \"\\xd4\\x1a\\x06\\x2c\\xc5\\xfd\\x6f\\x24\\x67\\x68\\x56\\x7c\\x40\\x8a\\xd5\\x69\"},\n    {\"111111118888888888888888*******%%%%%%%%%%#####\"\n     \"142134u8097289720432098409289nkjlfkjlmn,m..   \",\n     \"\\xb6\\xea\\x5b\\xe8\\xca\\x45\\x8a\\x33\\xf0\\xf1\\x84\\x6f\\xf9\\x65\\xa8\\xe1\"},\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testmd5.c"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 6,
                  "endLine": 34,
                  "endColumn": 70,
                  "snippet": {
                    "text": "} md5sums[] = \n{\n    {\"Jeff was here!\",\n     \"\\xa5\\x25\\x8a\\x89\\x11\\xb2\\x9d\\x1f\\x81\\x75\\x96\\x3b\\x60\\x94\\x49\\xc0\"},\n    {\"01234567890aBcDeFASDFGHJKLPOIUYTR\"\n     \"POIUYTREWQZXCVBN  LLLLLLLLLLLLLLL\",\n     \"\\xd4\\x1a\\x06\\x2c\\xc5\\xfd\\x6f\\x24\\x67\\x68\\x56\\x7c\\x40\\x8a\\xd5\\x69\"},\n",
                    "rendered": {
                      "text": "} md5sums[] = \n{\n    {\"Jeff was here!\",\n     \"\\xa5\\x25\\x8a\\x89\\x11\\xb2\\x9d\\x1f\\x81\\x75\\x96\\x3b\\x60\\x94\\x49\\xc0\"},\n    {\"01234567890aBcDeFASDFGHJKLPOIUYTR\"\n     \"POIUYTREWQZXCVBN  LLLLLLLLLLLLLLL\",\n     \"\\xd4\\x1a\\x06\\x2c\\xc5\\xfd\\x6f\\x24\\x67\\x68\\x56\\x7c\\x40\\x8a\\xd5\\x69\"},\n",
                      "markdown": "`} md5sums[] = \n{\n    {\"Jeff was here!\",\n     \"\\xa5\\x25\\x8a\\x89\\x11\\xb2\\x9d\\x1f\\x81\\x75\\x96\\x3b\\x60\\x94\\x49\\xc0\"},\n    {\"01234567890aBcDeFASDFGHJKLPOIUYTR\"\n     \"POIUYTREWQZXCVBN  LLLLLLLLLLLLLLL\",\n     \"\\xd4\\x1a\\x06\\x2c\\xc5\\xfd\\x6f\\x24\\x67\\x68\\x56\\x7c\\x40\\x8a\\xd5\\x69\"},\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000805"
          },
          "message": {
            "text": "Backdoor: Long Binary Strings",
            "id": "BD000805"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testmd5.c"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 13,
                  "endLine": 77,
                  "endColumn": 77,
                  "snippet": {
                    "text": "                             \"abcdefghijklmnopqrstuvwxyz01234\"\n                             \"abcdefghijklmnopqrstuvwxyz01234_\";\n        const char *sum =\n            \"\\x93\\x17\\x22\\x78\\xee\\x30\\x82\\xb3\\xeb\\x95\\x33\\xec\\xea\\x78\\xb7\\x89\";\n        unsigned char digest[APR_MD5_DIGESTSIZE];\n        unsigned int i;\n\n",
                    "rendered": {
                      "text": "                             \"abcdefghijklmnopqrstuvwxyz01234\"\n                             \"abcdefghijklmnopqrstuvwxyz01234_\";\n        const char *sum =\n            \"\\x93\\x17\\x22\\x78\\xee\\x30\\x82\\xb3\\xeb\\x95\\x33\\xec\\xea\\x78\\xb7\\x89\";\n        unsigned char digest[APR_MD5_DIGESTSIZE];\n        unsigned int i;\n\n",
                      "markdown": "`                             \"abcdefghijklmnopqrstuvwxyz01234\"\n                             \"abcdefghijklmnopqrstuvwxyz01234_\";\n        const char *sum =\n            \"\\x93\\x17\\x22\\x78\\xee\\x30\\x82\\xb3\\xeb\\x95\\x33\\xec\\xea\\x78\\xb7\\x89\";\n        unsigned char digest[APR_MD5_DIGESTSIZE];\n        unsigned int i;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000805"
          },
          "message": {
            "text": "Backdoor: Long Binary Strings",
            "id": "BD000805"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testmd5.c"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 6,
                  "endLine": 46,
                  "endColumn": 70,
                  "snippet": {
                    "text": "     \"01234567890aBcDeFASDFGHJKLPOIUYTR\"\n     \"POIUYTREWQZXCVBN  LLLLLLLLLLLLLLL\"\n     \"1\",\n     \"\\xd1\\xa1\\xc0\\x97\\x8a\\x60\\xbb\\xfb\\x2a\\x25\\x46\\x9d\\xa5\\xae\\xd0\\xb0\"}\n};\n\nstatic int num_sums = sizeof(md5sums) / sizeof(md5sums[0]);\n",
                    "rendered": {
                      "text": "     \"01234567890aBcDeFASDFGHJKLPOIUYTR\"\n     \"POIUYTREWQZXCVBN  LLLLLLLLLLLLLLL\"\n     \"1\",\n     \"\\xd1\\xa1\\xc0\\x97\\x8a\\x60\\xbb\\xfb\\x2a\\x25\\x46\\x9d\\xa5\\xae\\xd0\\xb0\"}\n};\n\nstatic int num_sums = sizeof(md5sums) / sizeof(md5sums[0]);\n",
                      "markdown": "`     \"01234567890aBcDeFASDFGHJKLPOIUYTR\"\n     \"POIUYTREWQZXCVBN  LLLLLLLLLLLLLLL\"\n     \"1\",\n     \"\\xd1\\xa1\\xc0\\x97\\x8a\\x60\\xbb\\xfb\\x2a\\x25\\x46\\x9d\\xa5\\xae\\xd0\\xb0\"}\n};\n\nstatic int num_sums = sizeof(md5sums) / sizeof(md5sums[0]);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000805"
          },
          "message": {
            "text": "Backdoor: Long Binary Strings",
            "id": "BD000805"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testmd5.c"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 6,
                  "endLine": 40,
                  "endColumn": 70,
                  "snippet": {
                    "text": "     \"\\xd4\\x1a\\x06\\x2c\\xc5\\xfd\\x6f\\x24\\x67\\x68\\x56\\x7c\\x40\\x8a\\xd5\\x69\"},\n    {\"111111118888888888888888*******%%%%%%%%%%#####\"\n     \"142134u8097289720432098409289nkjlfkjlmn,m..   \",\n     \"\\xb6\\xea\\x5b\\xe8\\xca\\x45\\x8a\\x33\\xf0\\xf1\\x84\\x6f\\xf9\\x65\\xa8\\xe1\"},\n    {\"01234567890aBcDeFASDFGHJKLPOIUYTR\"\n     \"POIUYTREWQZXCVBN  LLLLLLLLLLLLLLL\"\n     \"01234567890aBcDeFASDFGHJKLPOIUYTR\"\n",
                    "rendered": {
                      "text": "     \"\\xd4\\x1a\\x06\\x2c\\xc5\\xfd\\x6f\\x24\\x67\\x68\\x56\\x7c\\x40\\x8a\\xd5\\x69\"},\n    {\"111111118888888888888888*******%%%%%%%%%%#####\"\n     \"142134u8097289720432098409289nkjlfkjlmn,m..   \",\n     \"\\xb6\\xea\\x5b\\xe8\\xca\\x45\\x8a\\x33\\xf0\\xf1\\x84\\x6f\\xf9\\x65\\xa8\\xe1\"},\n    {\"01234567890aBcDeFASDFGHJKLPOIUYTR\"\n     \"POIUYTREWQZXCVBN  LLLLLLLLLLLLLLL\"\n     \"01234567890aBcDeFASDFGHJKLPOIUYTR\"\n",
                      "markdown": "`     \"\\xd4\\x1a\\x06\\x2c\\xc5\\xfd\\x6f\\x24\\x67\\x68\\x56\\x7c\\x40\\x8a\\xd5\\x69\"},\n    {\"111111118888888888888888*******%%%%%%%%%%#####\"\n     \"142134u8097289720432098409289nkjlfkjlmn,m..   \",\n     \"\\xb6\\xea\\x5b\\xe8\\xca\\x45\\x8a\\x33\\xf0\\xf1\\x84\\x6f\\xf9\\x65\\xa8\\xe1\"},\n    {\"01234567890aBcDeFASDFGHJKLPOIUYTR\"\n     \"POIUYTREWQZXCVBN  LLLLLLLLLLLLLLL\"\n     \"01234567890aBcDeFASDFGHJKLPOIUYTR\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000805"
          },
          "message": {
            "text": "Backdoor: Long Binary Strings",
            "id": "BD000805"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testmd5.c"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 6,
                  "endLine": 37,
                  "endColumn": 70,
                  "snippet": {
                    "text": "     \"\\xa5\\x25\\x8a\\x89\\x11\\xb2\\x9d\\x1f\\x81\\x75\\x96\\x3b\\x60\\x94\\x49\\xc0\"},\n    {\"01234567890aBcDeFASDFGHJKLPOIUYTR\"\n     \"POIUYTREWQZXCVBN  LLLLLLLLLLLLLLL\",\n     \"\\xd4\\x1a\\x06\\x2c\\xc5\\xfd\\x6f\\x24\\x67\\x68\\x56\\x7c\\x40\\x8a\\xd5\\x69\"},\n    {\"111111118888888888888888*******%%%%%%%%%%#####\"\n     \"142134u8097289720432098409289nkjlfkjlmn,m..   \",\n     \"\\xb6\\xea\\x5b\\xe8\\xca\\x45\\x8a\\x33\\xf0\\xf1\\x84\\x6f\\xf9\\x65\\xa8\\xe1\"},\n",
                    "rendered": {
                      "text": "     \"\\xa5\\x25\\x8a\\x89\\x11\\xb2\\x9d\\x1f\\x81\\x75\\x96\\x3b\\x60\\x94\\x49\\xc0\"},\n    {\"01234567890aBcDeFASDFGHJKLPOIUYTR\"\n     \"POIUYTREWQZXCVBN  LLLLLLLLLLLLLLL\",\n     \"\\xd4\\x1a\\x06\\x2c\\xc5\\xfd\\x6f\\x24\\x67\\x68\\x56\\x7c\\x40\\x8a\\xd5\\x69\"},\n    {\"111111118888888888888888*******%%%%%%%%%%#####\"\n     \"142134u8097289720432098409289nkjlfkjlmn,m..   \",\n     \"\\xb6\\xea\\x5b\\xe8\\xca\\x45\\x8a\\x33\\xf0\\xf1\\x84\\x6f\\xf9\\x65\\xa8\\xe1\"},\n",
                      "markdown": "`     \"\\xa5\\x25\\x8a\\x89\\x11\\xb2\\x9d\\x1f\\x81\\x75\\x96\\x3b\\x60\\x94\\x49\\xc0\"},\n    {\"01234567890aBcDeFASDFGHJKLPOIUYTR\"\n     \"POIUYTREWQZXCVBN  LLLLLLLLLLLLLLL\",\n     \"\\xd4\\x1a\\x06\\x2c\\xc5\\xfd\\x6f\\x24\\x67\\x68\\x56\\x7c\\x40\\x8a\\xd5\\x69\"},\n    {\"111111118888888888888888*******%%%%%%%%%%#####\"\n     \"142134u8097289720432098409289nkjlfkjlmn,m..   \",\n     \"\\xb6\\xea\\x5b\\xe8\\xca\\x45\\x8a\\x33\\xf0\\xf1\\x84\\x6f\\xf9\\x65\\xa8\\xe1\"},\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000805"
          },
          "message": {
            "text": "Backdoor: Long Binary Strings",
            "id": "BD000805"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testmd5.c"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 6,
                  "endLine": 34,
                  "endColumn": 70,
                  "snippet": {
                    "text": "} md5sums[] = \n{\n    {\"Jeff was here!\",\n     \"\\xa5\\x25\\x8a\\x89\\x11\\xb2\\x9d\\x1f\\x81\\x75\\x96\\x3b\\x60\\x94\\x49\\xc0\"},\n    {\"01234567890aBcDeFASDFGHJKLPOIUYTR\"\n     \"POIUYTREWQZXCVBN  LLLLLLLLLLLLLLL\",\n     \"\\xd4\\x1a\\x06\\x2c\\xc5\\xfd\\x6f\\x24\\x67\\x68\\x56\\x7c\\x40\\x8a\\xd5\\x69\"},\n",
                    "rendered": {
                      "text": "} md5sums[] = \n{\n    {\"Jeff was here!\",\n     \"\\xa5\\x25\\x8a\\x89\\x11\\xb2\\x9d\\x1f\\x81\\x75\\x96\\x3b\\x60\\x94\\x49\\xc0\"},\n    {\"01234567890aBcDeFASDFGHJKLPOIUYTR\"\n     \"POIUYTREWQZXCVBN  LLLLLLLLLLLLLLL\",\n     \"\\xd4\\x1a\\x06\\x2c\\xc5\\xfd\\x6f\\x24\\x67\\x68\\x56\\x7c\\x40\\x8a\\xd5\\x69\"},\n",
                      "markdown": "`} md5sums[] = \n{\n    {\"Jeff was here!\",\n     \"\\xa5\\x25\\x8a\\x89\\x11\\xb2\\x9d\\x1f\\x81\\x75\\x96\\x3b\\x60\\x94\\x49\\xc0\"},\n    {\"01234567890aBcDeFASDFGHJKLPOIUYTR\"\n     \"POIUYTREWQZXCVBN  LLLLLLLLLLLLLLL\",\n     \"\\xd4\\x1a\\x06\\x2c\\xc5\\xfd\\x6f\\x24\\x67\\x68\\x56\\x7c\\x40\\x8a\\xd5\\x69\"},\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testmd4.c"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 10,
                  "endLine": 71,
                  "endColumn": 74,
                  "snippet": {
                    "text": "        {\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", \n         \"\\x04\\x3f\\x85\\x82\\xf2\\x41\\xdb\\x35\\x1c\\xe6\\x27\\xe1\\x53\\xe7\\xf0\\xe4\"},\n        {\"12345678901234567890123456789012345678901234567890123456789012345678901234567890\", \n         \"\\xe3\\x3b\\x4d\\xdc\\x9c\\x38\\xf2\\x19\\x9c\\x3e\\x7b\\x16\\x4f\\xcc\\x05\\x36\"}\n};\n\nstatic int num_sums = sizeof(md4sums) / sizeof(md4sums[0]); \n",
                    "rendered": {
                      "text": "        {\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", \n         \"\\x04\\x3f\\x85\\x82\\xf2\\x41\\xdb\\x35\\x1c\\xe6\\x27\\xe1\\x53\\xe7\\xf0\\xe4\"},\n        {\"12345678901234567890123456789012345678901234567890123456789012345678901234567890\", \n         \"\\xe3\\x3b\\x4d\\xdc\\x9c\\x38\\xf2\\x19\\x9c\\x3e\\x7b\\x16\\x4f\\xcc\\x05\\x36\"}\n};\n\nstatic int num_sums = sizeof(md4sums) / sizeof(md4sums[0]); \n",
                      "markdown": "`        {\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", \n         \"\\x04\\x3f\\x85\\x82\\xf2\\x41\\xdb\\x35\\x1c\\xe6\\x27\\xe1\\x53\\xe7\\xf0\\xe4\"},\n        {\"12345678901234567890123456789012345678901234567890123456789012345678901234567890\", \n         \"\\xe3\\x3b\\x4d\\xdc\\x9c\\x38\\xf2\\x19\\x9c\\x3e\\x7b\\x16\\x4f\\xcc\\x05\\x36\"}\n};\n\nstatic int num_sums = sizeof(md4sums) / sizeof(md4sums[0]); \n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testmd4.c"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 10,
                  "endLine": 69,
                  "endColumn": 74,
                  "snippet": {
                    "text": "        {\"abcdefghijklmnopqrstuvwxyz\", \n         \"\\xd7\\x9e\\x1c\\x30\\x8a\\xa5\\xbb\\xcd\\xee\\xa8\\xed\\x63\\xdf\\x41\\x2d\\xa9\"},\n        {\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", \n         \"\\x04\\x3f\\x85\\x82\\xf2\\x41\\xdb\\x35\\x1c\\xe6\\x27\\xe1\\x53\\xe7\\xf0\\xe4\"},\n        {\"12345678901234567890123456789012345678901234567890123456789012345678901234567890\", \n         \"\\xe3\\x3b\\x4d\\xdc\\x9c\\x38\\xf2\\x19\\x9c\\x3e\\x7b\\x16\\x4f\\xcc\\x05\\x36\"}\n};\n",
                    "rendered": {
                      "text": "        {\"abcdefghijklmnopqrstuvwxyz\", \n         \"\\xd7\\x9e\\x1c\\x30\\x8a\\xa5\\xbb\\xcd\\xee\\xa8\\xed\\x63\\xdf\\x41\\x2d\\xa9\"},\n        {\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", \n         \"\\x04\\x3f\\x85\\x82\\xf2\\x41\\xdb\\x35\\x1c\\xe6\\x27\\xe1\\x53\\xe7\\xf0\\xe4\"},\n        {\"12345678901234567890123456789012345678901234567890123456789012345678901234567890\", \n         \"\\xe3\\x3b\\x4d\\xdc\\x9c\\x38\\xf2\\x19\\x9c\\x3e\\x7b\\x16\\x4f\\xcc\\x05\\x36\"}\n};\n",
                      "markdown": "`        {\"abcdefghijklmnopqrstuvwxyz\", \n         \"\\xd7\\x9e\\x1c\\x30\\x8a\\xa5\\xbb\\xcd\\xee\\xa8\\xed\\x63\\xdf\\x41\\x2d\\xa9\"},\n        {\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", \n         \"\\x04\\x3f\\x85\\x82\\xf2\\x41\\xdb\\x35\\x1c\\xe6\\x27\\xe1\\x53\\xe7\\xf0\\xe4\"},\n        {\"12345678901234567890123456789012345678901234567890123456789012345678901234567890\", \n         \"\\xe3\\x3b\\x4d\\xdc\\x9c\\x38\\xf2\\x19\\x9c\\x3e\\x7b\\x16\\x4f\\xcc\\x05\\x36\"}\n};\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testmd4.c"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 10,
                  "endLine": 67,
                  "endColumn": 74,
                  "snippet": {
                    "text": "        {\"message digest\", \n         \"\\xd9\\x13\\x0a\\x81\\x64\\x54\\x9f\\xe8\\x18\\x87\\x48\\x06\\xe1\\xc7\\x01\\x4b\"},\n        {\"abcdefghijklmnopqrstuvwxyz\", \n         \"\\xd7\\x9e\\x1c\\x30\\x8a\\xa5\\xbb\\xcd\\xee\\xa8\\xed\\x63\\xdf\\x41\\x2d\\xa9\"},\n        {\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", \n         \"\\x04\\x3f\\x85\\x82\\xf2\\x41\\xdb\\x35\\x1c\\xe6\\x27\\xe1\\x53\\xe7\\xf0\\xe4\"},\n        {\"12345678901234567890123456789012345678901234567890123456789012345678901234567890\", \n",
                    "rendered": {
                      "text": "        {\"message digest\", \n         \"\\xd9\\x13\\x0a\\x81\\x64\\x54\\x9f\\xe8\\x18\\x87\\x48\\x06\\xe1\\xc7\\x01\\x4b\"},\n        {\"abcdefghijklmnopqrstuvwxyz\", \n         \"\\xd7\\x9e\\x1c\\x30\\x8a\\xa5\\xbb\\xcd\\xee\\xa8\\xed\\x63\\xdf\\x41\\x2d\\xa9\"},\n        {\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", \n         \"\\x04\\x3f\\x85\\x82\\xf2\\x41\\xdb\\x35\\x1c\\xe6\\x27\\xe1\\x53\\xe7\\xf0\\xe4\"},\n        {\"12345678901234567890123456789012345678901234567890123456789012345678901234567890\", \n",
                      "markdown": "`        {\"message digest\", \n         \"\\xd9\\x13\\x0a\\x81\\x64\\x54\\x9f\\xe8\\x18\\x87\\x48\\x06\\xe1\\xc7\\x01\\x4b\"},\n        {\"abcdefghijklmnopqrstuvwxyz\", \n         \"\\xd7\\x9e\\x1c\\x30\\x8a\\xa5\\xbb\\xcd\\xee\\xa8\\xed\\x63\\xdf\\x41\\x2d\\xa9\"},\n        {\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", \n         \"\\x04\\x3f\\x85\\x82\\xf2\\x41\\xdb\\x35\\x1c\\xe6\\x27\\xe1\\x53\\xe7\\xf0\\xe4\"},\n        {\"12345678901234567890123456789012345678901234567890123456789012345678901234567890\", \n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testmd4.c"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 10,
                  "endLine": 65,
                  "endColumn": 74,
                  "snippet": {
                    "text": "        {\"abc\", \n         \"\\xa4\\x48\\x01\\x7a\\xaf\\x21\\xd8\\x52\\x5f\\xc1\\x0a\\xe8\\x7a\\xa6\\x72\\x9d\"},\n        {\"message digest\", \n         \"\\xd9\\x13\\x0a\\x81\\x64\\x54\\x9f\\xe8\\x18\\x87\\x48\\x06\\xe1\\xc7\\x01\\x4b\"},\n        {\"abcdefghijklmnopqrstuvwxyz\", \n         \"\\xd7\\x9e\\x1c\\x30\\x8a\\xa5\\xbb\\xcd\\xee\\xa8\\xed\\x63\\xdf\\x41\\x2d\\xa9\"},\n        {\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", \n",
                    "rendered": {
                      "text": "        {\"abc\", \n         \"\\xa4\\x48\\x01\\x7a\\xaf\\x21\\xd8\\x52\\x5f\\xc1\\x0a\\xe8\\x7a\\xa6\\x72\\x9d\"},\n        {\"message digest\", \n         \"\\xd9\\x13\\x0a\\x81\\x64\\x54\\x9f\\xe8\\x18\\x87\\x48\\x06\\xe1\\xc7\\x01\\x4b\"},\n        {\"abcdefghijklmnopqrstuvwxyz\", \n         \"\\xd7\\x9e\\x1c\\x30\\x8a\\xa5\\xbb\\xcd\\xee\\xa8\\xed\\x63\\xdf\\x41\\x2d\\xa9\"},\n        {\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", \n",
                      "markdown": "`        {\"abc\", \n         \"\\xa4\\x48\\x01\\x7a\\xaf\\x21\\xd8\\x52\\x5f\\xc1\\x0a\\xe8\\x7a\\xa6\\x72\\x9d\"},\n        {\"message digest\", \n         \"\\xd9\\x13\\x0a\\x81\\x64\\x54\\x9f\\xe8\\x18\\x87\\x48\\x06\\xe1\\xc7\\x01\\x4b\"},\n        {\"abcdefghijklmnopqrstuvwxyz\", \n         \"\\xd7\\x9e\\x1c\\x30\\x8a\\xa5\\xbb\\xcd\\xee\\xa8\\xed\\x63\\xdf\\x41\\x2d\\xa9\"},\n        {\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", \n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testmd4.c"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 10,
                  "endLine": 63,
                  "endColumn": 74,
                  "snippet": {
                    "text": "        {\"a\", \n         \"\\xbd\\xe5\\x2c\\xb3\\x1d\\xe3\\x3e\\x46\\x24\\x5e\\x05\\xfb\\xdb\\xd6\\xfb\\x24\"},\n        {\"abc\", \n         \"\\xa4\\x48\\x01\\x7a\\xaf\\x21\\xd8\\x52\\x5f\\xc1\\x0a\\xe8\\x7a\\xa6\\x72\\x9d\"},\n        {\"message digest\", \n         \"\\xd9\\x13\\x0a\\x81\\x64\\x54\\x9f\\xe8\\x18\\x87\\x48\\x06\\xe1\\xc7\\x01\\x4b\"},\n        {\"abcdefghijklmnopqrstuvwxyz\", \n",
                    "rendered": {
                      "text": "        {\"a\", \n         \"\\xbd\\xe5\\x2c\\xb3\\x1d\\xe3\\x3e\\x46\\x24\\x5e\\x05\\xfb\\xdb\\xd6\\xfb\\x24\"},\n        {\"abc\", \n         \"\\xa4\\x48\\x01\\x7a\\xaf\\x21\\xd8\\x52\\x5f\\xc1\\x0a\\xe8\\x7a\\xa6\\x72\\x9d\"},\n        {\"message digest\", \n         \"\\xd9\\x13\\x0a\\x81\\x64\\x54\\x9f\\xe8\\x18\\x87\\x48\\x06\\xe1\\xc7\\x01\\x4b\"},\n        {\"abcdefghijklmnopqrstuvwxyz\", \n",
                      "markdown": "`        {\"a\", \n         \"\\xbd\\xe5\\x2c\\xb3\\x1d\\xe3\\x3e\\x46\\x24\\x5e\\x05\\xfb\\xdb\\xd6\\xfb\\x24\"},\n        {\"abc\", \n         \"\\xa4\\x48\\x01\\x7a\\xaf\\x21\\xd8\\x52\\x5f\\xc1\\x0a\\xe8\\x7a\\xa6\\x72\\x9d\"},\n        {\"message digest\", \n         \"\\xd9\\x13\\x0a\\x81\\x64\\x54\\x9f\\xe8\\x18\\x87\\x48\\x06\\xe1\\xc7\\x01\\x4b\"},\n        {\"abcdefghijklmnopqrstuvwxyz\", \n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testmd4.c"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 10,
                  "endLine": 61,
                  "endColumn": 74,
                  "snippet": {
                    "text": "        {\"\", \n         \"\\x31\\xd6\\xcf\\xe0\\xd1\\x6a\\xe9\\x31\\xb7\\x3c\\x59\\xd7\\xe0\\xc0\\x89\\xc0\"},\n        {\"a\", \n         \"\\xbd\\xe5\\x2c\\xb3\\x1d\\xe3\\x3e\\x46\\x24\\x5e\\x05\\xfb\\xdb\\xd6\\xfb\\x24\"},\n        {\"abc\", \n         \"\\xa4\\x48\\x01\\x7a\\xaf\\x21\\xd8\\x52\\x5f\\xc1\\x0a\\xe8\\x7a\\xa6\\x72\\x9d\"},\n        {\"message digest\", \n",
                    "rendered": {
                      "text": "        {\"\", \n         \"\\x31\\xd6\\xcf\\xe0\\xd1\\x6a\\xe9\\x31\\xb7\\x3c\\x59\\xd7\\xe0\\xc0\\x89\\xc0\"},\n        {\"a\", \n         \"\\xbd\\xe5\\x2c\\xb3\\x1d\\xe3\\x3e\\x46\\x24\\x5e\\x05\\xfb\\xdb\\xd6\\xfb\\x24\"},\n        {\"abc\", \n         \"\\xa4\\x48\\x01\\x7a\\xaf\\x21\\xd8\\x52\\x5f\\xc1\\x0a\\xe8\\x7a\\xa6\\x72\\x9d\"},\n        {\"message digest\", \n",
                      "markdown": "`        {\"\", \n         \"\\x31\\xd6\\xcf\\xe0\\xd1\\x6a\\xe9\\x31\\xb7\\x3c\\x59\\xd7\\xe0\\xc0\\x89\\xc0\"},\n        {\"a\", \n         \"\\xbd\\xe5\\x2c\\xb3\\x1d\\xe3\\x3e\\x46\\x24\\x5e\\x05\\xfb\\xdb\\xd6\\xfb\\x24\"},\n        {\"abc\", \n         \"\\xa4\\x48\\x01\\x7a\\xaf\\x21\\xd8\\x52\\x5f\\xc1\\x0a\\xe8\\x7a\\xa6\\x72\\x9d\"},\n        {\"message digest\", \n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000801"
          },
          "message": {
            "text": "Backdoor: Executing Obfuscated Code",
            "id": "BD000801"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testmd4.c"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 10,
                  "endLine": 59,
                  "endColumn": 74,
                  "snippet": {
                    "text": "* \n*/\n        {\"\", \n         \"\\x31\\xd6\\xcf\\xe0\\xd1\\x6a\\xe9\\x31\\xb7\\x3c\\x59\\xd7\\xe0\\xc0\\x89\\xc0\"},\n        {\"a\", \n         \"\\xbd\\xe5\\x2c\\xb3\\x1d\\xe3\\x3e\\x46\\x24\\x5e\\x05\\xfb\\xdb\\xd6\\xfb\\x24\"},\n        {\"abc\", \n",
                    "rendered": {
                      "text": "* \n*/\n        {\"\", \n         \"\\x31\\xd6\\xcf\\xe0\\xd1\\x6a\\xe9\\x31\\xb7\\x3c\\x59\\xd7\\xe0\\xc0\\x89\\xc0\"},\n        {\"a\", \n         \"\\xbd\\xe5\\x2c\\xb3\\x1d\\xe3\\x3e\\x46\\x24\\x5e\\x05\\xfb\\xdb\\xd6\\xfb\\x24\"},\n        {\"abc\", \n",
                      "markdown": "`* \n*/\n        {\"\", \n         \"\\x31\\xd6\\xcf\\xe0\\xd1\\x6a\\xe9\\x31\\xb7\\x3c\\x59\\xd7\\xe0\\xc0\\x89\\xc0\"},\n        {\"a\", \n         \"\\xbd\\xe5\\x2c\\xb3\\x1d\\xe3\\x3e\\x46\\x24\\x5e\\x05\\xfb\\xdb\\xd6\\xfb\\x24\"},\n        {\"abc\", \n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testmd4.c"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 9,
                  "endLine": 70,
                  "endColumn": 91,
                  "snippet": {
                    "text": "         \"\\xd7\\x9e\\x1c\\x30\\x8a\\xa5\\xbb\\xcd\\xee\\xa8\\xed\\x63\\xdf\\x41\\x2d\\xa9\"},\n        {\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", \n         \"\\x04\\x3f\\x85\\x82\\xf2\\x41\\xdb\\x35\\x1c\\xe6\\x27\\xe1\\x53\\xe7\\xf0\\xe4\"},\n        {\"12345678901234567890123456789012345678901234567890123456789012345678901234567890\", \n         \"\\xe3\\x3b\\x4d\\xdc\\x9c\\x38\\xf2\\x19\\x9c\\x3e\\x7b\\x16\\x4f\\xcc\\x05\\x36\"}\n};\n\n",
                    "rendered": {
                      "text": "         \"\\xd7\\x9e\\x1c\\x30\\x8a\\xa5\\xbb\\xcd\\xee\\xa8\\xed\\x63\\xdf\\x41\\x2d\\xa9\"},\n        {\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", \n         \"\\x04\\x3f\\x85\\x82\\xf2\\x41\\xdb\\x35\\x1c\\xe6\\x27\\xe1\\x53\\xe7\\xf0\\xe4\"},\n        {\"12345678901234567890123456789012345678901234567890123456789012345678901234567890\", \n         \"\\xe3\\x3b\\x4d\\xdc\\x9c\\x38\\xf2\\x19\\x9c\\x3e\\x7b\\x16\\x4f\\xcc\\x05\\x36\"}\n};\n\n",
                      "markdown": "`         \"\\xd7\\x9e\\x1c\\x30\\x8a\\xa5\\xbb\\xcd\\xee\\xa8\\xed\\x63\\xdf\\x41\\x2d\\xa9\"},\n        {\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", \n         \"\\x04\\x3f\\x85\\x82\\xf2\\x41\\xdb\\x35\\x1c\\xe6\\x27\\xe1\\x53\\xe7\\xf0\\xe4\"},\n        {\"12345678901234567890123456789012345678901234567890123456789012345678901234567890\", \n         \"\\xe3\\x3b\\x4d\\xdc\\x9c\\x38\\xf2\\x19\\x9c\\x3e\\x7b\\x16\\x4f\\xcc\\x05\\x36\"}\n};\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testmd4.c"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 9,
                  "endLine": 68,
                  "endColumn": 73,
                  "snippet": {
                    "text": "         \"\\xd9\\x13\\x0a\\x81\\x64\\x54\\x9f\\xe8\\x18\\x87\\x48\\x06\\xe1\\xc7\\x01\\x4b\"},\n        {\"abcdefghijklmnopqrstuvwxyz\", \n         \"\\xd7\\x9e\\x1c\\x30\\x8a\\xa5\\xbb\\xcd\\xee\\xa8\\xed\\x63\\xdf\\x41\\x2d\\xa9\"},\n        {\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", \n         \"\\x04\\x3f\\x85\\x82\\xf2\\x41\\xdb\\x35\\x1c\\xe6\\x27\\xe1\\x53\\xe7\\xf0\\xe4\"},\n        {\"12345678901234567890123456789012345678901234567890123456789012345678901234567890\", \n         \"\\xe3\\x3b\\x4d\\xdc\\x9c\\x38\\xf2\\x19\\x9c\\x3e\\x7b\\x16\\x4f\\xcc\\x05\\x36\"}\n",
                    "rendered": {
                      "text": "         \"\\xd9\\x13\\x0a\\x81\\x64\\x54\\x9f\\xe8\\x18\\x87\\x48\\x06\\xe1\\xc7\\x01\\x4b\"},\n        {\"abcdefghijklmnopqrstuvwxyz\", \n         \"\\xd7\\x9e\\x1c\\x30\\x8a\\xa5\\xbb\\xcd\\xee\\xa8\\xed\\x63\\xdf\\x41\\x2d\\xa9\"},\n        {\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", \n         \"\\x04\\x3f\\x85\\x82\\xf2\\x41\\xdb\\x35\\x1c\\xe6\\x27\\xe1\\x53\\xe7\\xf0\\xe4\"},\n        {\"12345678901234567890123456789012345678901234567890123456789012345678901234567890\", \n         \"\\xe3\\x3b\\x4d\\xdc\\x9c\\x38\\xf2\\x19\\x9c\\x3e\\x7b\\x16\\x4f\\xcc\\x05\\x36\"}\n",
                      "markdown": "`         \"\\xd9\\x13\\x0a\\x81\\x64\\x54\\x9f\\xe8\\x18\\x87\\x48\\x06\\xe1\\xc7\\x01\\x4b\"},\n        {\"abcdefghijklmnopqrstuvwxyz\", \n         \"\\xd7\\x9e\\x1c\\x30\\x8a\\xa5\\xbb\\xcd\\xee\\xa8\\xed\\x63\\xdf\\x41\\x2d\\xa9\"},\n        {\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", \n         \"\\x04\\x3f\\x85\\x82\\xf2\\x41\\xdb\\x35\\x1c\\xe6\\x27\\xe1\\x53\\xe7\\xf0\\xe4\"},\n        {\"12345678901234567890123456789012345678901234567890123456789012345678901234567890\", \n         \"\\xe3\\x3b\\x4d\\xdc\\x9c\\x38\\xf2\\x19\\x9c\\x3e\\x7b\\x16\\x4f\\xcc\\x05\\x36\"}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000805"
          },
          "message": {
            "text": "Backdoor: Long Binary Strings",
            "id": "BD000805"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testmd4.c"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 10,
                  "endLine": 71,
                  "endColumn": 74,
                  "snippet": {
                    "text": "        {\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", \n         \"\\x04\\x3f\\x85\\x82\\xf2\\x41\\xdb\\x35\\x1c\\xe6\\x27\\xe1\\x53\\xe7\\xf0\\xe4\"},\n        {\"12345678901234567890123456789012345678901234567890123456789012345678901234567890\", \n         \"\\xe3\\x3b\\x4d\\xdc\\x9c\\x38\\xf2\\x19\\x9c\\x3e\\x7b\\x16\\x4f\\xcc\\x05\\x36\"}\n};\n\nstatic int num_sums = sizeof(md4sums) / sizeof(md4sums[0]); \n",
                    "rendered": {
                      "text": "        {\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", \n         \"\\x04\\x3f\\x85\\x82\\xf2\\x41\\xdb\\x35\\x1c\\xe6\\x27\\xe1\\x53\\xe7\\xf0\\xe4\"},\n        {\"12345678901234567890123456789012345678901234567890123456789012345678901234567890\", \n         \"\\xe3\\x3b\\x4d\\xdc\\x9c\\x38\\xf2\\x19\\x9c\\x3e\\x7b\\x16\\x4f\\xcc\\x05\\x36\"}\n};\n\nstatic int num_sums = sizeof(md4sums) / sizeof(md4sums[0]); \n",
                      "markdown": "`        {\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", \n         \"\\x04\\x3f\\x85\\x82\\xf2\\x41\\xdb\\x35\\x1c\\xe6\\x27\\xe1\\x53\\xe7\\xf0\\xe4\"},\n        {\"12345678901234567890123456789012345678901234567890123456789012345678901234567890\", \n         \"\\xe3\\x3b\\x4d\\xdc\\x9c\\x38\\xf2\\x19\\x9c\\x3e\\x7b\\x16\\x4f\\xcc\\x05\\x36\"}\n};\n\nstatic int num_sums = sizeof(md4sums) / sizeof(md4sums[0]); \n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000805"
          },
          "message": {
            "text": "Backdoor: Long Binary Strings",
            "id": "BD000805"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testmd4.c"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 10,
                  "endLine": 69,
                  "endColumn": 74,
                  "snippet": {
                    "text": "        {\"abcdefghijklmnopqrstuvwxyz\", \n         \"\\xd7\\x9e\\x1c\\x30\\x8a\\xa5\\xbb\\xcd\\xee\\xa8\\xed\\x63\\xdf\\x41\\x2d\\xa9\"},\n        {\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", \n         \"\\x04\\x3f\\x85\\x82\\xf2\\x41\\xdb\\x35\\x1c\\xe6\\x27\\xe1\\x53\\xe7\\xf0\\xe4\"},\n        {\"12345678901234567890123456789012345678901234567890123456789012345678901234567890\", \n         \"\\xe3\\x3b\\x4d\\xdc\\x9c\\x38\\xf2\\x19\\x9c\\x3e\\x7b\\x16\\x4f\\xcc\\x05\\x36\"}\n};\n",
                    "rendered": {
                      "text": "        {\"abcdefghijklmnopqrstuvwxyz\", \n         \"\\xd7\\x9e\\x1c\\x30\\x8a\\xa5\\xbb\\xcd\\xee\\xa8\\xed\\x63\\xdf\\x41\\x2d\\xa9\"},\n        {\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", \n         \"\\x04\\x3f\\x85\\x82\\xf2\\x41\\xdb\\x35\\x1c\\xe6\\x27\\xe1\\x53\\xe7\\xf0\\xe4\"},\n        {\"12345678901234567890123456789012345678901234567890123456789012345678901234567890\", \n         \"\\xe3\\x3b\\x4d\\xdc\\x9c\\x38\\xf2\\x19\\x9c\\x3e\\x7b\\x16\\x4f\\xcc\\x05\\x36\"}\n};\n",
                      "markdown": "`        {\"abcdefghijklmnopqrstuvwxyz\", \n         \"\\xd7\\x9e\\x1c\\x30\\x8a\\xa5\\xbb\\xcd\\xee\\xa8\\xed\\x63\\xdf\\x41\\x2d\\xa9\"},\n        {\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", \n         \"\\x04\\x3f\\x85\\x82\\xf2\\x41\\xdb\\x35\\x1c\\xe6\\x27\\xe1\\x53\\xe7\\xf0\\xe4\"},\n        {\"12345678901234567890123456789012345678901234567890123456789012345678901234567890\", \n         \"\\xe3\\x3b\\x4d\\xdc\\x9c\\x38\\xf2\\x19\\x9c\\x3e\\x7b\\x16\\x4f\\xcc\\x05\\x36\"}\n};\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000805"
          },
          "message": {
            "text": "Backdoor: Long Binary Strings",
            "id": "BD000805"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testmd4.c"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 10,
                  "endLine": 67,
                  "endColumn": 74,
                  "snippet": {
                    "text": "        {\"message digest\", \n         \"\\xd9\\x13\\x0a\\x81\\x64\\x54\\x9f\\xe8\\x18\\x87\\x48\\x06\\xe1\\xc7\\x01\\x4b\"},\n        {\"abcdefghijklmnopqrstuvwxyz\", \n         \"\\xd7\\x9e\\x1c\\x30\\x8a\\xa5\\xbb\\xcd\\xee\\xa8\\xed\\x63\\xdf\\x41\\x2d\\xa9\"},\n        {\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", \n         \"\\x04\\x3f\\x85\\x82\\xf2\\x41\\xdb\\x35\\x1c\\xe6\\x27\\xe1\\x53\\xe7\\xf0\\xe4\"},\n        {\"12345678901234567890123456789012345678901234567890123456789012345678901234567890\", \n",
                    "rendered": {
                      "text": "        {\"message digest\", \n         \"\\xd9\\x13\\x0a\\x81\\x64\\x54\\x9f\\xe8\\x18\\x87\\x48\\x06\\xe1\\xc7\\x01\\x4b\"},\n        {\"abcdefghijklmnopqrstuvwxyz\", \n         \"\\xd7\\x9e\\x1c\\x30\\x8a\\xa5\\xbb\\xcd\\xee\\xa8\\xed\\x63\\xdf\\x41\\x2d\\xa9\"},\n        {\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", \n         \"\\x04\\x3f\\x85\\x82\\xf2\\x41\\xdb\\x35\\x1c\\xe6\\x27\\xe1\\x53\\xe7\\xf0\\xe4\"},\n        {\"12345678901234567890123456789012345678901234567890123456789012345678901234567890\", \n",
                      "markdown": "`        {\"message digest\", \n         \"\\xd9\\x13\\x0a\\x81\\x64\\x54\\x9f\\xe8\\x18\\x87\\x48\\x06\\xe1\\xc7\\x01\\x4b\"},\n        {\"abcdefghijklmnopqrstuvwxyz\", \n         \"\\xd7\\x9e\\x1c\\x30\\x8a\\xa5\\xbb\\xcd\\xee\\xa8\\xed\\x63\\xdf\\x41\\x2d\\xa9\"},\n        {\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", \n         \"\\x04\\x3f\\x85\\x82\\xf2\\x41\\xdb\\x35\\x1c\\xe6\\x27\\xe1\\x53\\xe7\\xf0\\xe4\"},\n        {\"12345678901234567890123456789012345678901234567890123456789012345678901234567890\", \n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000805"
          },
          "message": {
            "text": "Backdoor: Long Binary Strings",
            "id": "BD000805"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testmd4.c"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 10,
                  "endLine": 65,
                  "endColumn": 74,
                  "snippet": {
                    "text": "        {\"abc\", \n         \"\\xa4\\x48\\x01\\x7a\\xaf\\x21\\xd8\\x52\\x5f\\xc1\\x0a\\xe8\\x7a\\xa6\\x72\\x9d\"},\n        {\"message digest\", \n         \"\\xd9\\x13\\x0a\\x81\\x64\\x54\\x9f\\xe8\\x18\\x87\\x48\\x06\\xe1\\xc7\\x01\\x4b\"},\n        {\"abcdefghijklmnopqrstuvwxyz\", \n         \"\\xd7\\x9e\\x1c\\x30\\x8a\\xa5\\xbb\\xcd\\xee\\xa8\\xed\\x63\\xdf\\x41\\x2d\\xa9\"},\n        {\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", \n",
                    "rendered": {
                      "text": "        {\"abc\", \n         \"\\xa4\\x48\\x01\\x7a\\xaf\\x21\\xd8\\x52\\x5f\\xc1\\x0a\\xe8\\x7a\\xa6\\x72\\x9d\"},\n        {\"message digest\", \n         \"\\xd9\\x13\\x0a\\x81\\x64\\x54\\x9f\\xe8\\x18\\x87\\x48\\x06\\xe1\\xc7\\x01\\x4b\"},\n        {\"abcdefghijklmnopqrstuvwxyz\", \n         \"\\xd7\\x9e\\x1c\\x30\\x8a\\xa5\\xbb\\xcd\\xee\\xa8\\xed\\x63\\xdf\\x41\\x2d\\xa9\"},\n        {\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", \n",
                      "markdown": "`        {\"abc\", \n         \"\\xa4\\x48\\x01\\x7a\\xaf\\x21\\xd8\\x52\\x5f\\xc1\\x0a\\xe8\\x7a\\xa6\\x72\\x9d\"},\n        {\"message digest\", \n         \"\\xd9\\x13\\x0a\\x81\\x64\\x54\\x9f\\xe8\\x18\\x87\\x48\\x06\\xe1\\xc7\\x01\\x4b\"},\n        {\"abcdefghijklmnopqrstuvwxyz\", \n         \"\\xd7\\x9e\\x1c\\x30\\x8a\\xa5\\xbb\\xcd\\xee\\xa8\\xed\\x63\\xdf\\x41\\x2d\\xa9\"},\n        {\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\", \n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000805"
          },
          "message": {
            "text": "Backdoor: Long Binary Strings",
            "id": "BD000805"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testmd4.c"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 10,
                  "endLine": 63,
                  "endColumn": 74,
                  "snippet": {
                    "text": "        {\"a\", \n         \"\\xbd\\xe5\\x2c\\xb3\\x1d\\xe3\\x3e\\x46\\x24\\x5e\\x05\\xfb\\xdb\\xd6\\xfb\\x24\"},\n        {\"abc\", \n         \"\\xa4\\x48\\x01\\x7a\\xaf\\x21\\xd8\\x52\\x5f\\xc1\\x0a\\xe8\\x7a\\xa6\\x72\\x9d\"},\n        {\"message digest\", \n         \"\\xd9\\x13\\x0a\\x81\\x64\\x54\\x9f\\xe8\\x18\\x87\\x48\\x06\\xe1\\xc7\\x01\\x4b\"},\n        {\"abcdefghijklmnopqrstuvwxyz\", \n",
                    "rendered": {
                      "text": "        {\"a\", \n         \"\\xbd\\xe5\\x2c\\xb3\\x1d\\xe3\\x3e\\x46\\x24\\x5e\\x05\\xfb\\xdb\\xd6\\xfb\\x24\"},\n        {\"abc\", \n         \"\\xa4\\x48\\x01\\x7a\\xaf\\x21\\xd8\\x52\\x5f\\xc1\\x0a\\xe8\\x7a\\xa6\\x72\\x9d\"},\n        {\"message digest\", \n         \"\\xd9\\x13\\x0a\\x81\\x64\\x54\\x9f\\xe8\\x18\\x87\\x48\\x06\\xe1\\xc7\\x01\\x4b\"},\n        {\"abcdefghijklmnopqrstuvwxyz\", \n",
                      "markdown": "`        {\"a\", \n         \"\\xbd\\xe5\\x2c\\xb3\\x1d\\xe3\\x3e\\x46\\x24\\x5e\\x05\\xfb\\xdb\\xd6\\xfb\\x24\"},\n        {\"abc\", \n         \"\\xa4\\x48\\x01\\x7a\\xaf\\x21\\xd8\\x52\\x5f\\xc1\\x0a\\xe8\\x7a\\xa6\\x72\\x9d\"},\n        {\"message digest\", \n         \"\\xd9\\x13\\x0a\\x81\\x64\\x54\\x9f\\xe8\\x18\\x87\\x48\\x06\\xe1\\xc7\\x01\\x4b\"},\n        {\"abcdefghijklmnopqrstuvwxyz\", \n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000805"
          },
          "message": {
            "text": "Backdoor: Long Binary Strings",
            "id": "BD000805"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testmd4.c"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 10,
                  "endLine": 61,
                  "endColumn": 74,
                  "snippet": {
                    "text": "        {\"\", \n         \"\\x31\\xd6\\xcf\\xe0\\xd1\\x6a\\xe9\\x31\\xb7\\x3c\\x59\\xd7\\xe0\\xc0\\x89\\xc0\"},\n        {\"a\", \n         \"\\xbd\\xe5\\x2c\\xb3\\x1d\\xe3\\x3e\\x46\\x24\\x5e\\x05\\xfb\\xdb\\xd6\\xfb\\x24\"},\n        {\"abc\", \n         \"\\xa4\\x48\\x01\\x7a\\xaf\\x21\\xd8\\x52\\x5f\\xc1\\x0a\\xe8\\x7a\\xa6\\x72\\x9d\"},\n        {\"message digest\", \n",
                    "rendered": {
                      "text": "        {\"\", \n         \"\\x31\\xd6\\xcf\\xe0\\xd1\\x6a\\xe9\\x31\\xb7\\x3c\\x59\\xd7\\xe0\\xc0\\x89\\xc0\"},\n        {\"a\", \n         \"\\xbd\\xe5\\x2c\\xb3\\x1d\\xe3\\x3e\\x46\\x24\\x5e\\x05\\xfb\\xdb\\xd6\\xfb\\x24\"},\n        {\"abc\", \n         \"\\xa4\\x48\\x01\\x7a\\xaf\\x21\\xd8\\x52\\x5f\\xc1\\x0a\\xe8\\x7a\\xa6\\x72\\x9d\"},\n        {\"message digest\", \n",
                      "markdown": "`        {\"\", \n         \"\\x31\\xd6\\xcf\\xe0\\xd1\\x6a\\xe9\\x31\\xb7\\x3c\\x59\\xd7\\xe0\\xc0\\x89\\xc0\"},\n        {\"a\", \n         \"\\xbd\\xe5\\x2c\\xb3\\x1d\\xe3\\x3e\\x46\\x24\\x5e\\x05\\xfb\\xdb\\xd6\\xfb\\x24\"},\n        {\"abc\", \n         \"\\xa4\\x48\\x01\\x7a\\xaf\\x21\\xd8\\x52\\x5f\\xc1\\x0a\\xe8\\x7a\\xa6\\x72\\x9d\"},\n        {\"message digest\", \n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000805"
          },
          "message": {
            "text": "Backdoor: Long Binary Strings",
            "id": "BD000805"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/testmd4.c"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 10,
                  "endLine": 59,
                  "endColumn": 74,
                  "snippet": {
                    "text": "* \n*/\n        {\"\", \n         \"\\x31\\xd6\\xcf\\xe0\\xd1\\x6a\\xe9\\x31\\xb7\\x3c\\x59\\xd7\\xe0\\xc0\\x89\\xc0\"},\n        {\"a\", \n         \"\\xbd\\xe5\\x2c\\xb3\\x1d\\xe3\\x3e\\x46\\x24\\x5e\\x05\\xfb\\xdb\\xd6\\xfb\\x24\"},\n        {\"abc\", \n",
                    "rendered": {
                      "text": "* \n*/\n        {\"\", \n         \"\\x31\\xd6\\xcf\\xe0\\xd1\\x6a\\xe9\\x31\\xb7\\x3c\\x59\\xd7\\xe0\\xc0\\x89\\xc0\"},\n        {\"a\", \n         \"\\xbd\\xe5\\x2c\\xb3\\x1d\\xe3\\x3e\\x46\\x24\\x5e\\x05\\xfb\\xdb\\xd6\\xfb\\x24\"},\n        {\"abc\", \n",
                      "markdown": "`* \n*/\n        {\"\", \n         \"\\x31\\xd6\\xcf\\xe0\\xd1\\x6a\\xe9\\x31\\xb7\\x3c\\x59\\xd7\\xe0\\xc0\\x89\\xc0\"},\n        {\"a\", \n         \"\\xbd\\xe5\\x2c\\xb3\\x1d\\xe3\\x3e\\x46\\x24\\x5e\\x05\\xfb\\xdb\\xd6\\xfb\\x24\"},\n        {\"abc\", \n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/NWGNUaputest"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 25,
                  "endLine": 115,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\n#\n# If this is specified, it will override VERSION value in \n# $(APR_WORK)/build/NWGNUenvironment.inc\n#\nNLM_VERSION\t=\n\n",
                    "rendered": {
                      "text": "\n#\n# If this is specified, it will override VERSION value in \n# $(APR_WORK)/build/NWGNUenvironment.inc\n#\nNLM_VERSION\t=\n\n",
                      "markdown": "`\n#\n# If this is specified, it will override VERSION value in \n# $(APR_WORK)/build/NWGNUenvironment.inc\n#\nNLM_VERSION\t=\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/NWGNUaputest"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 30,
                  "endLine": 6,
                  "endColumn": 65,
                  "snippet": {
                    "text": "#\n\n#\n# Get the 'head' of the build environment if necessary.  This includes default\n# targets and paths to tools\n#\n\n",
                    "rendered": {
                      "text": "#\n\n#\n# Get the 'head' of the build environment if necessary.  This includes default\n# targets and paths to tools\n#\n\n",
                      "markdown": "`#\n\n#\n# Get the 'head' of the build environment if necessary.  This includes default\n# targets and paths to tools\n#\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/NWGNUaputest"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 27,
                  "endLine": 15,
                  "endColumn": 31,
                  "snippet": {
                    "text": "endif\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n",
                    "rendered": {
                      "text": "endif\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n",
                      "markdown": "`endif\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/abts.c"
                },
                "region": {
                  "startLine": 304,
                  "startColumn": 28,
                  "endLine": 304,
                  "endColumn": 33,
                  "snippet": {
                    "text": "    tc->failed = TRUE; \\\n    if (verbose) { \\\n        fprintf(stderr, \"Line %d: expected something other than <%\" FMT \">, \" \\\n                \"but saw <%\" FMT \">\\n\", \\\n                lineno, CAST expected, CAST actual); \\\n        fflush(stderr); \\\n    } \\\n",
                    "rendered": {
                      "text": "    tc->failed = TRUE; \\\n    if (verbose) { \\\n        fprintf(stderr, \"Line %d: expected something other than <%\" FMT \">, \" \\\n                \"but saw <%\" FMT \">\\n\", \\\n                lineno, CAST expected, CAST actual); \\\n        fflush(stderr); \\\n    } \\\n",
                      "markdown": "`    tc->failed = TRUE; \\\n    if (verbose) { \\\n        fprintf(stderr, \"Line %d: expected something other than <%\" FMT \">, \" \\\n                \"but saw <%\" FMT \">\\n\", \\\n                lineno, CAST expected, CAST actual); \\\n        fflush(stderr); \\\n    } \\\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/abts.c"
                },
                "region": {
                  "startLine": 303,
                  "startColumn": 67,
                  "endLine": 303,
                  "endColumn": 72,
                  "snippet": {
                    "text": "    \\\n    tc->failed = TRUE; \\\n    if (verbose) { \\\n        fprintf(stderr, \"Line %d: expected something other than <%\" FMT \">, \" \\\n                \"but saw <%\" FMT \">\\n\", \\\n                lineno, CAST expected, CAST actual); \\\n        fflush(stderr); \\\n",
                    "rendered": {
                      "text": "    \\\n    tc->failed = TRUE; \\\n    if (verbose) { \\\n        fprintf(stderr, \"Line %d: expected something other than <%\" FMT \">, \" \\\n                \"but saw <%\" FMT \">\\n\", \\\n                lineno, CAST expected, CAST actual); \\\n        fflush(stderr); \\\n",
                      "markdown": "`    \\\n    tc->failed = TRUE; \\\n    if (verbose) { \\\n        fprintf(stderr, \"Line %d: expected something other than <%\" FMT \">, \" \\\n                \"but saw <%\" FMT \">\\n\", \\\n                lineno, CAST expected, CAST actual); \\\n        fflush(stderr); \\\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/abts.c"
                },
                "region": {
                  "startLine": 280,
                  "startColumn": 66,
                  "endLine": 280,
                  "endColumn": 71,
                  "snippet": {
                    "text": "    \\\n    tc->failed = TRUE; \\\n    if (verbose) { \\\n        fprintf(stderr, \"Line %d: expected <%\" FMT \">, but saw <%\" FMT \">\\n\", \\\n                lineno, CAST expected, CAST actual); \\\n        fflush(stderr); \\\n    } \\\n",
                    "rendered": {
                      "text": "    \\\n    tc->failed = TRUE; \\\n    if (verbose) { \\\n        fprintf(stderr, \"Line %d: expected <%\" FMT \">, but saw <%\" FMT \">\\n\", \\\n                lineno, CAST expected, CAST actual); \\\n        fflush(stderr); \\\n    } \\\n",
                      "markdown": "`    \\\n    tc->failed = TRUE; \\\n    if (verbose) { \\\n        fprintf(stderr, \"Line %d: expected <%\" FMT \">, but saw <%\" FMT \">\\n\", \\\n                lineno, CAST expected, CAST actual); \\\n        fflush(stderr); \\\n    } \\\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/abts.c"
                },
                "region": {
                  "startLine": 280,
                  "startColumn": 46,
                  "endLine": 280,
                  "endColumn": 51,
                  "snippet": {
                    "text": "    \\\n    tc->failed = TRUE; \\\n    if (verbose) { \\\n        fprintf(stderr, \"Line %d: expected <%\" FMT \">, but saw <%\" FMT \">\\n\", \\\n                lineno, CAST expected, CAST actual); \\\n        fflush(stderr); \\\n    } \\\n",
                    "rendered": {
                      "text": "    \\\n    tc->failed = TRUE; \\\n    if (verbose) { \\\n        fprintf(stderr, \"Line %d: expected <%\" FMT \">, but saw <%\" FMT \">\\n\", \\\n                lineno, CAST expected, CAST actual); \\\n        fflush(stderr); \\\n    } \\\n",
                      "markdown": "`    \\\n    tc->failed = TRUE; \\\n    if (verbose) { \\\n        fprintf(stderr, \"Line %d: expected <%\" FMT \">, but saw <%\" FMT \">\\n\", \\\n                lineno, CAST expected, CAST actual); \\\n        fflush(stderr); \\\n    } \\\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/test/test_apu.h"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 7,
                  "endLine": 96,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    { \\\n        apr_time_t tt = apr_time_now(); \\\n        function; \\\n        time = apr_time_now() - tt; \\\n    }\n    \n    \n",
                    "rendered": {
                      "text": "    { \\\n        apr_time_t tt = apr_time_now(); \\\n        function; \\\n        time = apr_time_now() - tt; \\\n    }\n    \n    \n",
                      "markdown": "`    { \\\n        apr_time_t tt = apr_time_now(); \\\n        function; \\\n        time = apr_time_now() - tt; \\\n    }\n    \n    \n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/xml/NWGNUmakefile"
                },
                "region": {
                  "startLine": 158,
                  "startColumn": 25,
                  "endLine": 158,
                  "endColumn": 40,
                  "snippet": {
                    "text": "NLM_THREAD_NAME\t= \n#\n# If this is specified, it will override VERSION value in \n# $(APR_WORK)/build/NWGNUenvironment.inc\n#\nNLM_VERSION\t=\n\n",
                    "rendered": {
                      "text": "NLM_THREAD_NAME\t= \n#\n# If this is specified, it will override VERSION value in \n# $(APR_WORK)/build/NWGNUenvironment.inc\n#\nNLM_VERSION\t=\n\n",
                      "markdown": "`NLM_THREAD_NAME\t= \n#\n# If this is specified, it will override VERSION value in \n# $(APR_WORK)/build/NWGNUenvironment.inc\n#\nNLM_VERSION\t=\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/xml/NWGNUmakefile"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 30,
                  "endLine": 9,
                  "endColumn": 72,
                  "snippet": {
                    "text": "\t$(EOLIST) \n\n#\n# Get the 'head' of the build environment.  This includes default targets and\n# paths to tools\n#\n\n",
                    "rendered": {
                      "text": "\t$(EOLIST) \n\n#\n# Get the 'head' of the build environment.  This includes default targets and\n# paths to tools\n#\n\n",
                      "markdown": "`\t$(EOLIST) \n\n#\n# Get the 'head' of the build environment.  This includes default targets and\n# paths to tools\n#\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/xml/NWGNUmakefile"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 27,
                  "endLine": 62,
                  "endColumn": 31,
                  "snippet": {
                    "text": "endif\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n",
                    "rendered": {
                      "text": "endif\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n",
                      "markdown": "`endif\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbm/NWGNUdbmgdbm"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 24,
                  "endLine": 142,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\n#\n# If this is specified, it will override VERSION value in\n# $(AP_WORK)\\build\\NWGNUenvironment.inc\n#\nNLM_VERSION\t=\n\n",
                    "rendered": {
                      "text": "\n#\n# If this is specified, it will override VERSION value in\n# $(AP_WORK)\\build\\NWGNUenvironment.inc\n#\nNLM_VERSION\t=\n\n",
                      "markdown": "`\n#\n# If this is specified, it will override VERSION value in\n# $(AP_WORK)\\build\\NWGNUenvironment.inc\n#\nNLM_VERSION\t=\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbm/NWGNUdbmgdbm"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 59,
                  "endLine": 26,
                  "endColumn": 74,
                  "snippet": {
                    "text": "\n# LINK_STATIC = 1\n\n# for now defined here - should finally go into build/NWGNUenvironment.inc\nGDBM_INC = $(GDBMSDK)/inc\nGDBM_IMP = libgdbm.imp\nGDBM_LIB = libgdbm.lib\n",
                    "rendered": {
                      "text": "\n# LINK_STATIC = 1\n\n# for now defined here - should finally go into build/NWGNUenvironment.inc\nGDBM_INC = $(GDBMSDK)/inc\nGDBM_IMP = libgdbm.imp\nGDBM_LIB = libgdbm.lib\n",
                      "markdown": "`\n# LINK_STATIC = 1\n\n# for now defined here - should finally go into build/NWGNUenvironment.inc\nGDBM_INC = $(GDBMSDK)/inc\nGDBM_IMP = libgdbm.imp\nGDBM_LIB = libgdbm.lib\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbm/NWGNUdbmgdbm"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 30,
                  "endLine": 9,
                  "endColumn": 72,
                  "snippet": {
                    "text": "\t$(EOLIST)\n\n#\n# Get the 'head' of the build environment.  This includes default targets and\n# paths to tools\n#\n\n",
                    "rendered": {
                      "text": "\t$(EOLIST)\n\n#\n# Get the 'head' of the build environment.  This includes default targets and\n# paths to tools\n#\n\n",
                      "markdown": "`\t$(EOLIST)\n\n#\n# Get the 'head' of the build environment.  This includes default targets and\n# paths to tools\n#\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbm/NWGNUdbmgdbm"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 27,
                  "endLine": 33,
                  "endColumn": 31,
                  "snippet": {
                    "text": "GDBM_NLM = libgdbm\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n",
                    "rendered": {
                      "text": "GDBM_NLM = libgdbm\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n",
                      "markdown": "`GDBM_NLM = libgdbm\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbm/NWGNUdbmdb"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 24,
                  "endLine": 143,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\n#\n# If this is specified, it will override VERSION value in\n# $(AP_WORK)\\build\\NWGNUenvironment.inc\n#\nNLM_VERSION\t=\n\n",
                    "rendered": {
                      "text": "\n#\n# If this is specified, it will override VERSION value in\n# $(AP_WORK)\\build\\NWGNUenvironment.inc\n#\nNLM_VERSION\t=\n\n",
                      "markdown": "`\n#\n# If this is specified, it will override VERSION value in\n# $(AP_WORK)\\build\\NWGNUenvironment.inc\n#\nNLM_VERSION\t=\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbm/NWGNUdbmdb"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 59,
                  "endLine": 26,
                  "endColumn": 74,
                  "snippet": {
                    "text": "\n# LINK_STATIC = 1\n\n# for now defined here - should finally go into build/NWGNUenvironment.inc\nDB_INC = $(DBSDK)/inc\nDB_IMP = libdb47.imp\nDB_LIB = libdb47.lib\n",
                    "rendered": {
                      "text": "\n# LINK_STATIC = 1\n\n# for now defined here - should finally go into build/NWGNUenvironment.inc\nDB_INC = $(DBSDK)/inc\nDB_IMP = libdb47.imp\nDB_LIB = libdb47.lib\n",
                      "markdown": "`\n# LINK_STATIC = 1\n\n# for now defined here - should finally go into build/NWGNUenvironment.inc\nDB_INC = $(DBSDK)/inc\nDB_IMP = libdb47.imp\nDB_LIB = libdb47.lib\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbm/NWGNUdbmdb"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 30,
                  "endLine": 9,
                  "endColumn": 72,
                  "snippet": {
                    "text": "\t$(EOLIST)\n\n#\n# Get the 'head' of the build environment.  This includes default targets and\n# paths to tools\n#\n\n",
                    "rendered": {
                      "text": "\t$(EOLIST)\n\n#\n# Get the 'head' of the build environment.  This includes default targets and\n# paths to tools\n#\n\n",
                      "markdown": "`\t$(EOLIST)\n\n#\n# Get the 'head' of the build environment.  This includes default targets and\n# paths to tools\n#\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbm/NWGNUdbmdb"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 27,
                  "endLine": 33,
                  "endColumn": 31,
                  "snippet": {
                    "text": "DB_NLM = libdb47\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n",
                    "rendered": {
                      "text": "DB_NLM = libdb47\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n",
                      "markdown": "`DB_NLM = libdb47\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbm/apr_dbm_db.mak"
                },
                "region": {
                  "startLine": 449,
                  "startColumn": 24,
                  "endLine": 449,
                  "endColumn": 30,
                  "snippet": {
                    "text": "!IF EXISTS(\"apr_dbm_db.dep\")\r\n!INCLUDE \"apr_dbm_db.dep\"\r\n!ELSE \r\n!MESSAGE Warning: cannot find \"apr_dbm_db.dep\"\r\n!ENDIF \r\n!ENDIF \r\n\r\n",
                    "rendered": {
                      "text": "!IF EXISTS(\"apr_dbm_db.dep\")\r\n!INCLUDE \"apr_dbm_db.dep\"\r\n!ELSE \r\n!MESSAGE Warning: cannot find \"apr_dbm_db.dep\"\r\n!ENDIF \r\n!ENDIF \r\n\r\n",
                      "markdown": "`!IF EXISTS(\"apr_dbm_db.dep\")\r\n!INCLUDE \"apr_dbm_db.dep\"\r\n!ELSE \r\n!MESSAGE Warning: cannot find \"apr_dbm_db.dep\"\r\n!ENDIF \r\n!ENDIF \r\n\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbm/apr_dbm_gdbm.mak"
                },
                "region": {
                  "startLine": 449,
                  "startColumn": 24,
                  "endLine": 449,
                  "endColumn": 30,
                  "snippet": {
                    "text": "!IF EXISTS(\"apr_dbm_gdbm.dep\")\r\n!INCLUDE \"apr_dbm_gdbm.dep\"\r\n!ELSE \r\n!MESSAGE Warning: cannot find \"apr_dbm_gdbm.dep\"\r\n!ENDIF \r\n!ENDIF \r\n\r\n",
                    "rendered": {
                      "text": "!IF EXISTS(\"apr_dbm_gdbm.dep\")\r\n!INCLUDE \"apr_dbm_gdbm.dep\"\r\n!ELSE \r\n!MESSAGE Warning: cannot find \"apr_dbm_gdbm.dep\"\r\n!ENDIF \r\n!ENDIF \r\n\r\n",
                      "markdown": "`!IF EXISTS(\"apr_dbm_gdbm.dep\")\r\n!INCLUDE \"apr_dbm_gdbm.dep\"\r\n!ELSE \r\n!MESSAGE Warning: cannot find \"apr_dbm_gdbm.dep\"\r\n!ENDIF \r\n!ENDIF \r\n\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/unsupported/apr_dbd_freetds.c"
                },
                "region": {
                  "startLine": 582,
                  "startColumn": 36,
                  "endLine": 582,
                  "endColumn": 44,
                  "snippet": {
                    "text": "        if (!strncasecmp(key, \"username\", klen)) {\n            DBSETLUSER(login, buf);\n        }\n        else if (!strncasecmp(key, \"password\", klen)) {\n            DBSETLPWD(login, buf);\n        }\n        else if (!strncasecmp(key, \"appname\", klen)) {\n",
                    "rendered": {
                      "text": "        if (!strncasecmp(key, \"username\", klen)) {\n            DBSETLUSER(login, buf);\n        }\n        else if (!strncasecmp(key, \"password\", klen)) {\n            DBSETLPWD(login, buf);\n        }\n        else if (!strncasecmp(key, \"appname\", klen)) {\n",
                      "markdown": "`        if (!strncasecmp(key, \"username\", klen)) {\n            DBSETLUSER(login, buf);\n        }\n        else if (!strncasecmp(key, \"password\", klen)) {\n            DBSETLPWD(login, buf);\n        }\n        else if (!strncasecmp(key, \"appname\", klen)) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/apr_dbd_sqlite3.c"
                },
                "region": {
                  "startLine": 819,
                  "startColumn": 3,
                  "endLine": 819,
                  "endColumn": 12,
                  "snippet": {
                    "text": "                                   const char **error)\n{\n    apr_dbd_t *sql = NULL;\n    sqlite3 *conn = NULL;\n    int sqlres;\n    if (!params)\n        return NULL;\n",
                    "rendered": {
                      "text": "                                   const char **error)\n{\n    apr_dbd_t *sql = NULL;\n    sqlite3 *conn = NULL;\n    int sqlres;\n    if (!params)\n        return NULL;\n",
                      "markdown": "`                                   const char **error)\n{\n    apr_dbd_t *sql = NULL;\n    sqlite3 *conn = NULL;\n    int sqlres;\n    if (!params)\n        return NULL;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/apr_dbd_sqlite3.c"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 3,
                  "endLine": 65,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\nstruct apr_dbd_results_t {\n    int random;\n    sqlite3 *handle;\n    sqlite3_stmt *stmt;\n    apr_dbd_row_t *next_row;\n    size_t sz;\n",
                    "rendered": {
                      "text": "\nstruct apr_dbd_results_t {\n    int random;\n    sqlite3 *handle;\n    sqlite3_stmt *stmt;\n    apr_dbd_row_t *next_row;\n    size_t sz;\n",
                      "markdown": "`\nstruct apr_dbd_results_t {\n    int random;\n    sqlite3 *handle;\n    sqlite3_stmt *stmt;\n    apr_dbd_row_t *next_row;\n    size_t sz;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/apr_dbd_sqlite3.c"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 3,
                  "endLine": 42,
                  "endColumn": 12,
                  "snippet": {
                    "text": "};\n\nstruct apr_dbd_t {\n    sqlite3 *conn;\n    apr_dbd_transaction_t *trans;\n    apr_pool_t *pool;\n    apr_dbd_prepared_t *prep;\n",
                    "rendered": {
                      "text": "};\n\nstruct apr_dbd_t {\n    sqlite3 *conn;\n    apr_dbd_transaction_t *trans;\n    apr_pool_t *pool;\n    apr_dbd_prepared_t *prep;\n",
                      "markdown": "`};\n\nstruct apr_dbd_t {\n    sqlite3 *conn;\n    apr_dbd_transaction_t *trans;\n    apr_pool_t *pool;\n    apr_dbd_prepared_t *prep;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/apr_dbd_oracle.mak"
                },
                "region": {
                  "startLine": 449,
                  "startColumn": 24,
                  "endLine": 449,
                  "endColumn": 30,
                  "snippet": {
                    "text": "!IF EXISTS(\"apr_dbd_oracle.dep\")\r\n!INCLUDE \"apr_dbd_oracle.dep\"\r\n!ELSE \r\n!MESSAGE Warning: cannot find \"apr_dbd_oracle.dep\"\r\n!ENDIF \r\n!ENDIF \r\n\r\n",
                    "rendered": {
                      "text": "!IF EXISTS(\"apr_dbd_oracle.dep\")\r\n!INCLUDE \"apr_dbd_oracle.dep\"\r\n!ELSE \r\n!MESSAGE Warning: cannot find \"apr_dbd_oracle.dep\"\r\n!ENDIF \r\n!ENDIF \r\n\r\n",
                      "markdown": "`!IF EXISTS(\"apr_dbd_oracle.dep\")\r\n!INCLUDE \"apr_dbd_oracle.dep\"\r\n!ELSE \r\n!MESSAGE Warning: cannot find \"apr_dbd_oracle.dep\"\r\n!ENDIF \r\n!ENDIF \r\n\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/NWGNUdbdmysql"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 24,
                  "endLine": 139,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\n#\n# If this is specified, it will override VERSION value in\n# $(AP_WORK)\\build\\NWGNUenvironment.inc\n#\nNLM_VERSION\t=\n\n",
                    "rendered": {
                      "text": "\n#\n# If this is specified, it will override VERSION value in\n# $(AP_WORK)\\build\\NWGNUenvironment.inc\n#\nNLM_VERSION\t=\n\n",
                      "markdown": "`\n#\n# If this is specified, it will override VERSION value in\n# $(AP_WORK)\\build\\NWGNUenvironment.inc\n#\nNLM_VERSION\t=\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/NWGNUdbdmysql"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 59,
                  "endLine": 28,
                  "endColumn": 74,
                  "snippet": {
                    "text": "\n# LINK_STATIC = 1\n\n# for now defined here - should finally go into build/NWGNUenvironment.inc\nMYSQL_INC = $(MYSQLSDK)/include\nMYSQL_IMP = libmysql.imp\nMYSQL_LIB = libmysqlclient_r.lib libz.lib\n",
                    "rendered": {
                      "text": "\n# LINK_STATIC = 1\n\n# for now defined here - should finally go into build/NWGNUenvironment.inc\nMYSQL_INC = $(MYSQLSDK)/include\nMYSQL_IMP = libmysql.imp\nMYSQL_LIB = libmysqlclient_r.lib libz.lib\n",
                      "markdown": "`\n# LINK_STATIC = 1\n\n# for now defined here - should finally go into build/NWGNUenvironment.inc\nMYSQL_INC = $(MYSQLSDK)/include\nMYSQL_IMP = libmysql.imp\nMYSQL_LIB = libmysqlclient_r.lib libz.lib\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/NWGNUdbdmysql"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 30,
                  "endLine": 9,
                  "endColumn": 72,
                  "snippet": {
                    "text": "\t$(EOLIST)\n\n#\n# Get the 'head' of the build environment.  This includes default targets and\n# paths to tools\n#\n\n",
                    "rendered": {
                      "text": "\t$(EOLIST)\n\n#\n# Get the 'head' of the build environment.  This includes default targets and\n# paths to tools\n#\n\n",
                      "markdown": "`\t$(EOLIST)\n\n#\n# Get the 'head' of the build environment.  This includes default targets and\n# paths to tools\n#\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/NWGNUdbdmysql"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 27,
                  "endLine": 38,
                  "endColumn": 31,
                  "snippet": {
                    "text": "endif\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n",
                    "rendered": {
                      "text": "endif\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n",
                      "markdown": "`endif\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/NWGNUdbdmysql"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 71,
                  "endLine": 129,
                  "endColumn": 78,
                  "snippet": {
                    "text": "# This is used by the link '-desc ' directive.\n# If left blank, NLM_NAME will be used.\n#\nNLM_DESCRIPTION\t= Apache Portability Runtime Library $(VERSION_STR) DBD MySQL Driver Module\n\n#\n# This is used by the '-threadname' directive.  If left blank,\n",
                    "rendered": {
                      "text": "# This is used by the link '-desc ' directive.\n# If left blank, NLM_NAME will be used.\n#\nNLM_DESCRIPTION\t= Apache Portability Runtime Library $(VERSION_STR) DBD MySQL Driver Module\n\n#\n# This is used by the '-threadname' directive.  If left blank,\n",
                      "markdown": "`# This is used by the link '-desc ' directive.\n# If left blank, NLM_NAME will be used.\n#\nNLM_DESCRIPTION\t= Apache Portability Runtime Library $(VERSION_STR) DBD MySQL Driver Module\n\n#\n# This is used by the '-threadname' directive.  If left blank,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/NWGNUdbdmysql"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 42,
                  "endLine": 34,
                  "endColumn": 49,
                  "snippet": {
                    "text": "MYSQL_LIB = libmysqlclient_r.lib libz.lib\nMYSQL_NLM = libmysql\nifneq \"$(wildcard $(MYSQL_INC)/mysql.h)\" \"$(MYSQL_INC)/mysql.h\"\n$(error MYSQLSDK does not point to a valid MySQL SDK) \nendif\n\n#\n",
                    "rendered": {
                      "text": "MYSQL_LIB = libmysqlclient_r.lib libz.lib\nMYSQL_NLM = libmysql\nifneq \"$(wildcard $(MYSQL_INC)/mysql.h)\" \"$(MYSQL_INC)/mysql.h\"\n$(error MYSQLSDK does not point to a valid MySQL SDK) \nendif\n\n#\n",
                      "markdown": "`MYSQL_LIB = libmysqlclient_r.lib libz.lib\nMYSQL_NLM = libmysql\nifneq \"$(wildcard $(MYSQL_INC)/mysql.h)\" \"$(MYSQL_INC)/mysql.h\"\n$(error MYSQLSDK does not point to a valid MySQL SDK) \nendif\n\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/apr_dbd_mysql.c"
                },
                "region": {
                  "startLine": 1109,
                  "startColumn": 3,
                  "endLine": 1109,
                  "endColumn": 10,
                  "snippet": {
                    "text": "#if MYSQL_VERSION_ID >= 50013\n    my_bool do_reconnect = 1;\n#endif\n    MYSQL *real_conn;\n    unsigned long flags = 0;\n\n    struct {\n",
                    "rendered": {
                      "text": "#if MYSQL_VERSION_ID >= 50013\n    my_bool do_reconnect = 1;\n#endif\n    MYSQL *real_conn;\n    unsigned long flags = 0;\n\n    struct {\n",
                      "markdown": "`#if MYSQL_VERSION_ID >= 50013\n    my_bool do_reconnect = 1;\n#endif\n    MYSQL *real_conn;\n    unsigned long flags = 0;\n\n    struct {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/apr_dbd_pgsql.c"
                },
                "region": {
                  "startLine": 1098,
                  "startColumn": 3,
                  "endLine": 1098,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n    val = apr_palloc(pool, sizeof(*val) * statement->nargs);\n    len = apr_pcalloc(pool, sizeof(*len) * statement->nargs);\n    fmt = apr_pcalloc(pool, sizeof(*fmt) * statement->nargs);\n\n    dbd_pgsql_bbind(pool, statement, values, val, len, fmt);\n\n",
                    "rendered": {
                      "text": "\n    val = apr_palloc(pool, sizeof(*val) * statement->nargs);\n    len = apr_pcalloc(pool, sizeof(*len) * statement->nargs);\n    fmt = apr_pcalloc(pool, sizeof(*fmt) * statement->nargs);\n\n    dbd_pgsql_bbind(pool, statement, values, val, len, fmt);\n\n",
                      "markdown": "`\n    val = apr_palloc(pool, sizeof(*val) * statement->nargs);\n    len = apr_pcalloc(pool, sizeof(*len) * statement->nargs);\n    fmt = apr_pcalloc(pool, sizeof(*fmt) * statement->nargs);\n\n    dbd_pgsql_bbind(pool, statement, values, val, len, fmt);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/apr_dbd_pgsql.c"
                },
                "region": {
                  "startLine": 1056,
                  "startColumn": 3,
                  "endLine": 1056,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n    val = apr_palloc(pool, sizeof(*val) * statement->nargs);\n    len = apr_pcalloc(pool, sizeof(*len) * statement->nargs);\n    fmt = apr_pcalloc(pool, sizeof(*fmt) * statement->nargs);\n\n    dbd_pgsql_bbind(pool, statement, values, val, len, fmt);\n\n",
                    "rendered": {
                      "text": "\n    val = apr_palloc(pool, sizeof(*val) * statement->nargs);\n    len = apr_pcalloc(pool, sizeof(*len) * statement->nargs);\n    fmt = apr_pcalloc(pool, sizeof(*fmt) * statement->nargs);\n\n    dbd_pgsql_bbind(pool, statement, values, val, len, fmt);\n\n",
                      "markdown": "`\n    val = apr_palloc(pool, sizeof(*val) * statement->nargs);\n    len = apr_pcalloc(pool, sizeof(*len) * statement->nargs);\n    fmt = apr_pcalloc(pool, sizeof(*fmt) * statement->nargs);\n\n    dbd_pgsql_bbind(pool, statement, values, val, len, fmt);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/apr_dbd_pgsql.c"
                },
                "region": {
                  "startLine": 937,
                  "startColumn": 3,
                  "endLine": 937,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n    val = apr_palloc(pool, sizeof(*val) * statement->nargs);\n    len = apr_pcalloc(pool, sizeof(*len) * statement->nargs);\n    fmt = apr_pcalloc(pool, sizeof(*fmt) * statement->nargs);\n\n    dbd_pgsql_bind(statement, values, val, len, fmt);\n\n",
                    "rendered": {
                      "text": "\n    val = apr_palloc(pool, sizeof(*val) * statement->nargs);\n    len = apr_pcalloc(pool, sizeof(*len) * statement->nargs);\n    fmt = apr_pcalloc(pool, sizeof(*fmt) * statement->nargs);\n\n    dbd_pgsql_bind(statement, values, val, len, fmt);\n\n",
                      "markdown": "`\n    val = apr_palloc(pool, sizeof(*val) * statement->nargs);\n    len = apr_pcalloc(pool, sizeof(*len) * statement->nargs);\n    fmt = apr_pcalloc(pool, sizeof(*fmt) * statement->nargs);\n\n    dbd_pgsql_bind(statement, values, val, len, fmt);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/apr_dbd_pgsql.c"
                },
                "region": {
                  "startLine": 733,
                  "startColumn": 3,
                  "endLine": 733,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n    val = apr_palloc(pool, sizeof(*val) * statement->nargs);\n    len = apr_pcalloc(pool, sizeof(*len) * statement->nargs);\n    fmt = apr_pcalloc(pool, sizeof(*fmt) * statement->nargs);\n\n    dbd_pgsql_bind(statement, values, val, len, fmt);\n\n",
                    "rendered": {
                      "text": "\n    val = apr_palloc(pool, sizeof(*val) * statement->nargs);\n    len = apr_pcalloc(pool, sizeof(*len) * statement->nargs);\n    fmt = apr_pcalloc(pool, sizeof(*fmt) * statement->nargs);\n\n    dbd_pgsql_bind(statement, values, val, len, fmt);\n\n",
                      "markdown": "`\n    val = apr_palloc(pool, sizeof(*val) * statement->nargs);\n    len = apr_pcalloc(pool, sizeof(*len) * statement->nargs);\n    fmt = apr_pcalloc(pool, sizeof(*fmt) * statement->nargs);\n\n    dbd_pgsql_bind(statement, values, val, len, fmt);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/apr_dbd_pgsql.c"
                },
                "region": {
                  "startLine": 541,
                  "startColumn": 37,
                  "endLine": 541,
                  "endColumn": 43,
                  "snippet": {
                    "text": "            args[i] = \"timestamp\";\n            break;\n        case APR_DBD_TYPE_ZTIMESTAMP:\n            args[i] = \"timestamp with time zone\";\n            break;\n        case APR_DBD_TYPE_BLOB:\n        case APR_DBD_TYPE_CLOB:\n",
                    "rendered": {
                      "text": "            args[i] = \"timestamp\";\n            break;\n        case APR_DBD_TYPE_ZTIMESTAMP:\n            args[i] = \"timestamp with time zone\";\n            break;\n        case APR_DBD_TYPE_BLOB:\n        case APR_DBD_TYPE_CLOB:\n",
                      "markdown": "`            args[i] = \"timestamp\";\n            break;\n        case APR_DBD_TYPE_ZTIMESTAMP:\n            args[i] = \"timestamp with time zone\";\n            break;\n        case APR_DBD_TYPE_BLOB:\n        case APR_DBD_TYPE_CLOB:\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/private/apu_config.hwc"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 18,
                  "endLine": 19,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\r\n/* \r\n * Note: This is a Windows specific version of apu_config.hw. It is copied\r\n * as apu_config.h at the start of a Windows build.\r\n */\r\n\r\n#ifdef WIN32\r\n",
                    "rendered": {
                      "text": "\r\n/* \r\n * Note: This is a Windows specific version of apu_config.hw. It is copied\r\n * as apu_config.h at the start of a Windows build.\r\n */\r\n\r\n#ifdef WIN32\r\n",
                      "markdown": "`\r\n/* \r\n * Note: This is a Windows specific version of apu_config.hw. It is copied\r\n * as apu_config.h at the start of a Windows build.\r\n */\r\n\r\n#ifdef WIN32\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/private/apu_config.hwc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 6,
                  "endColumn": 57,
                  "snippet": {
                    "text": " * this work for additional information regarding copyright ownership.\r\n * The ASF licenses this file to You under the Apache License, Version 2.0\r\n * (the \"License\"); you may not use this file except in compliance with\r\n * the License.  You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n",
                    "rendered": {
                      "text": " * this work for additional information regarding copyright ownership.\r\n * The ASF licenses this file to You under the Apache License, Version 2.0\r\n * (the \"License\"); you may not use this file except in compliance with\r\n * the License.  You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n",
                      "markdown": "` * this work for additional information regarding copyright ownership.\r\n * The ASF licenses this file to You under the Apache License, Version 2.0\r\n * (the \"License\"); you may not use this file except in compliance with\r\n * the License.  You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/private/apu_config.hwc"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 35,
                  "endLine": 29,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\r\n#cmakedefine01 APU_DSO_BUILD\r\n\r\n/* Presume a standard, modern (5.x) mysql sdk/\r\n#define HAVE_MY_GLOBAL_H        1\r\n\r\n/* Assume that sql.h is always available on Windows */\r\n",
                    "rendered": {
                      "text": "\r\n#cmakedefine01 APU_DSO_BUILD\r\n\r\n/* Presume a standard, modern (5.x) mysql sdk/\r\n#define HAVE_MY_GLOBAL_H        1\r\n\r\n/* Assume that sql.h is always available on Windows */\r\n",
                      "markdown": "`\r\n#cmakedefine01 APU_DSO_BUILD\r\n\r\n/* Presume a standard, modern (5.x) mysql sdk/\r\n#define HAVE_MY_GLOBAL_H        1\r\n\r\n/* Assume that sql.h is always available on Windows */\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/private/apu_select_dbm.h.in"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 23,
                  "endLine": 21,
                  "endColumn": 32,
                  "snippet": {
                    "text": "#define APU_SELECT_DBM_H\n\n/*\n** The following macros control what features APRUTIL will use\n*/\n#define APU_USE_SDBM    @apu_use_sdbm@\n#define APU_USE_NDBM    @apu_use_ndbm@\n",
                    "rendered": {
                      "text": "#define APU_SELECT_DBM_H\n\n/*\n** The following macros control what features APRUTIL will use\n*/\n#define APU_USE_SDBM    @apu_use_sdbm@\n#define APU_USE_NDBM    @apu_use_ndbm@\n",
                      "markdown": "`#define APU_SELECT_DBM_H\n\n/*\n** The following macros control what features APRUTIL will use\n*/\n#define APU_USE_SDBM    @apu_use_sdbm@\n#define APU_USE_NDBM    @apu_use_ndbm@\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/private/apu_select_dbm.h.in"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": " * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "` * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/private/apu_config.hnw"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 18,
                  "endLine": 19,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\n/* \n * Note: This is a NetWare specific version of apu_config.hnw. It is copied\n * as apu_config.h at the start of a NetWare build.\n */\n\n#ifdef NETWARE\n",
                    "rendered": {
                      "text": "\n/* \n * Note: This is a NetWare specific version of apu_config.hnw. It is copied\n * as apu_config.h at the start of a NetWare build.\n */\n\n#ifdef NETWARE\n",
                      "markdown": "`\n/* \n * Note: This is a NetWare specific version of apu_config.hnw. It is copied\n * as apu_config.h at the start of a NetWare build.\n */\n\n#ifdef NETWARE\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/private/apu_config.hnw"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": " * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "` * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apu.hnw"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 46,
                  "endLine": 75,
                  "endColumn": 50,
                  "snippet": {
                    "text": "/**\n * Declare a dso module's exported module structure as APU_MODULE_DECLARE_DATA.\n *\n * Unless APU_MODULE_DECLARE_STATIC is defined at compile time, symbols \n * declared with APU_MODULE_DECLARE_DATA are always exported.\n * @code\n * module APU_MODULE_DECLARE_DATA mod_tag\n",
                    "rendered": {
                      "text": "/**\n * Declare a dso module's exported module structure as APU_MODULE_DECLARE_DATA.\n *\n * Unless APU_MODULE_DECLARE_STATIC is defined at compile time, symbols \n * declared with APU_MODULE_DECLARE_DATA are always exported.\n * @code\n * module APU_MODULE_DECLARE_DATA mod_tag\n",
                      "markdown": "`/**\n * Declare a dso module's exported module structure as APU_MODULE_DECLARE_DATA.\n *\n * Unless APU_MODULE_DECLARE_STATIC is defined at compile time, symbols \n * declared with APU_MODULE_DECLARE_DATA are always exported.\n * @code\n * module APU_MODULE_DECLARE_DATA mod_tag\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apu.hnw"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 54,
                  "endLine": 64,
                  "endColumn": 58,
                  "snippet": {
                    "text": "#define APU_DECLARE_NONSTD(type)     type\n/**\n * The public APR-UTIL variables are declared with APU_DECLARE_DATA.\n * This assures the appropriate indirection is invoked at compile time.\n *\n * @fn APU_DECLARE_DATA type apr_variable;\n * @note APU_DECLARE_DATA extern type apr_variable; syntax is required for\n",
                    "rendered": {
                      "text": "#define APU_DECLARE_NONSTD(type)     type\n/**\n * The public APR-UTIL variables are declared with APU_DECLARE_DATA.\n * This assures the appropriate indirection is invoked at compile time.\n *\n * @fn APU_DECLARE_DATA type apr_variable;\n * @note APU_DECLARE_DATA extern type apr_variable; syntax is required for\n",
                      "markdown": "`#define APU_DECLARE_NONSTD(type)     type\n/**\n * The public APR-UTIL variables are declared with APU_DECLARE_DATA.\n * This assures the appropriate indirection is invoked at compile time.\n *\n * @fn APU_DECLARE_DATA type apr_variable;\n * @note APU_DECLARE_DATA extern type apr_variable; syntax is required for\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apu.hnw"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 14,
                  "endLine": 44,
                  "endColumn": 18,
                  "snippet": {
                    "text": " * APU_DECLARE_STATIC and APU_DECLARE_EXPORT are left undefined when\n * including the APR-UTIL public headers, to import and link the symbols from \n * the dynamic APR-UTIL library and assure appropriate indirection and calling\n * conventions at compile time.\n */\n\n/**\n",
                    "rendered": {
                      "text": " * APU_DECLARE_STATIC and APU_DECLARE_EXPORT are left undefined when\n * including the APR-UTIL public headers, to import and link the symbols from \n * the dynamic APR-UTIL library and assure appropriate indirection and calling\n * conventions at compile time.\n */\n\n/**\n",
                      "markdown": "` * APU_DECLARE_STATIC and APU_DECLARE_EXPORT are left undefined when\n * including the APR-UTIL public headers, to import and link the symbols from \n * the dynamic APR-UTIL library and assure appropriate indirection and calling\n * conventions at compile time.\n */\n\n/**\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apu.hnw"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 8,
                  "endLine": 19,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\n/* \n * Note: This is a NetWare specific version of apu.h. It is renamed to\n * apu.h at the start of a NetWare build.\n */\n/* @file apu.h\n * @brief APR-Utility main file\n",
                    "rendered": {
                      "text": "\n/* \n * Note: This is a NetWare specific version of apu.h. It is renamed to\n * apu.h at the start of a NetWare build.\n */\n/* @file apu.h\n * @brief APR-Utility main file\n",
                      "markdown": "`\n/* \n * Note: This is a NetWare specific version of apu.h. It is renamed to\n * apu.h at the start of a NetWare build.\n */\n/* @file apu.h\n * @brief APR-Utility main file\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apu.hnw"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": " * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "` * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_ldap.hnw"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": " * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "` * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_ldap_init.h"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 48,
                  "endLine": 141,
                  "endColumn": 56,
                  "snippet": {
                    "text": " */\nAPU_DECLARE_LDAP(int) apr_ldap_init(apr_pool_t *pool,\n                                    LDAP **ldap,\n                                    const char *hostname,\n                                    int portno,\n                                    int secure,\n                                    apr_ldap_err_t **result_err);\n",
                    "rendered": {
                      "text": " */\nAPU_DECLARE_LDAP(int) apr_ldap_init(apr_pool_t *pool,\n                                    LDAP **ldap,\n                                    const char *hostname,\n                                    int portno,\n                                    int secure,\n                                    apr_ldap_err_t **result_err);\n",
                      "markdown": "` */\nAPU_DECLARE_LDAP(int) apr_ldap_init(apr_pool_t *pool,\n                                    LDAP **ldap,\n                                    const char *hostname,\n                                    int portno,\n                                    int secure,\n                                    apr_ldap_err_t **result_err);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_ldap.hwc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": " * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "` * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apu_want.hnw"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": " * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "` * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_uri.h"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 54,
                  "endLine": 140,
                  "endColumn": 62,
                  "snippet": {
                    "text": " *    APR_URI_UNP_OMITUSER            Just omit user \n *    APR_URI_UNP_OMITPASSWORD        Just omit password \n *    APR_URI_UNP_OMITUSERINFO        Omit \"user:password\\@\" part\n *    APR_URI_UNP_REVEALPASSWORD      Show plain text password (default: show XXXXXXXX)\n *    APR_URI_UNP_OMITPATHINFO        Show \"scheme://user\\@site:port\" only \n *    APR_URI_UNP_OMITQUERY           Omit \"?queryarg\" or \"#fragment\" \n * </PRE>\n",
                    "rendered": {
                      "text": " *    APR_URI_UNP_OMITUSER            Just omit user \n *    APR_URI_UNP_OMITPASSWORD        Just omit password \n *    APR_URI_UNP_OMITUSERINFO        Omit \"user:password\\@\" part\n *    APR_URI_UNP_REVEALPASSWORD      Show plain text password (default: show XXXXXXXX)\n *    APR_URI_UNP_OMITPATHINFO        Show \"scheme://user\\@site:port\" only \n *    APR_URI_UNP_OMITQUERY           Omit \"?queryarg\" or \"#fragment\" \n * </PRE>\n",
                      "markdown": "` *    APR_URI_UNP_OMITUSER            Just omit user \n *    APR_URI_UNP_OMITPASSWORD        Just omit password \n *    APR_URI_UNP_OMITUSERINFO        Omit \"user:password\\@\" part\n *    APR_URI_UNP_REVEALPASSWORD      Show plain text password (default: show XXXXXXXX)\n *    APR_URI_UNP_OMITPATHINFO        Show \"scheme://user\\@site:port\" only \n *    APR_URI_UNP_OMITQUERY           Omit \"?queryarg\" or \"#fragment\" \n * </PRE>\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_uri.h"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 24,
                  "endLine": 140,
                  "endColumn": 32,
                  "snippet": {
                    "text": " *    APR_URI_UNP_OMITUSER            Just omit user \n *    APR_URI_UNP_OMITPASSWORD        Just omit password \n *    APR_URI_UNP_OMITUSERINFO        Omit \"user:password\\@\" part\n *    APR_URI_UNP_REVEALPASSWORD      Show plain text password (default: show XXXXXXXX)\n *    APR_URI_UNP_OMITPATHINFO        Show \"scheme://user\\@site:port\" only \n *    APR_URI_UNP_OMITQUERY           Omit \"?queryarg\" or \"#fragment\" \n * </PRE>\n",
                    "rendered": {
                      "text": " *    APR_URI_UNP_OMITUSER            Just omit user \n *    APR_URI_UNP_OMITPASSWORD        Just omit password \n *    APR_URI_UNP_OMITUSERINFO        Omit \"user:password\\@\" part\n *    APR_URI_UNP_REVEALPASSWORD      Show plain text password (default: show XXXXXXXX)\n *    APR_URI_UNP_OMITPATHINFO        Show \"scheme://user\\@site:port\" only \n *    APR_URI_UNP_OMITQUERY           Omit \"?queryarg\" or \"#fragment\" \n * </PRE>\n",
                      "markdown": "` *    APR_URI_UNP_OMITUSER            Just omit user \n *    APR_URI_UNP_OMITPASSWORD        Just omit password \n *    APR_URI_UNP_OMITUSERINFO        Omit \"user:password\\@\" part\n *    APR_URI_UNP_REVEALPASSWORD      Show plain text password (default: show XXXXXXXX)\n *    APR_URI_UNP_OMITPATHINFO        Show \"scheme://user\\@site:port\" only \n *    APR_URI_UNP_OMITQUERY           Omit \"?queryarg\" or \"#fragment\" \n * </PRE>\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_uri.h"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 49,
                  "endLine": 139,
                  "endColumn": 57,
                  "snippet": {
                    "text": " *    APR_URI_UNP_OMITSITEPART        Suppress \"scheme://user\\@site:port\" \n *    APR_URI_UNP_OMITUSER            Just omit user \n *    APR_URI_UNP_OMITPASSWORD        Just omit password \n *    APR_URI_UNP_OMITUSERINFO        Omit \"user:password\\@\" part\n *    APR_URI_UNP_REVEALPASSWORD      Show plain text password (default: show XXXXXXXX)\n *    APR_URI_UNP_OMITPATHINFO        Show \"scheme://user\\@site:port\" only \n *    APR_URI_UNP_OMITQUERY           Omit \"?queryarg\" or \"#fragment\" \n",
                    "rendered": {
                      "text": " *    APR_URI_UNP_OMITSITEPART        Suppress \"scheme://user\\@site:port\" \n *    APR_URI_UNP_OMITUSER            Just omit user \n *    APR_URI_UNP_OMITPASSWORD        Just omit password \n *    APR_URI_UNP_OMITUSERINFO        Omit \"user:password\\@\" part\n *    APR_URI_UNP_REVEALPASSWORD      Show plain text password (default: show XXXXXXXX)\n *    APR_URI_UNP_OMITPATHINFO        Show \"scheme://user\\@site:port\" only \n *    APR_URI_UNP_OMITQUERY           Omit \"?queryarg\" or \"#fragment\" \n",
                      "markdown": "` *    APR_URI_UNP_OMITSITEPART        Suppress \"scheme://user\\@site:port\" \n *    APR_URI_UNP_OMITUSER            Just omit user \n *    APR_URI_UNP_OMITPASSWORD        Just omit password \n *    APR_URI_UNP_OMITUSERINFO        Omit \"user:password\\@\" part\n *    APR_URI_UNP_REVEALPASSWORD      Show plain text password (default: show XXXXXXXX)\n *    APR_URI_UNP_OMITPATHINFO        Show \"scheme://user\\@site:port\" only \n *    APR_URI_UNP_OMITQUERY           Omit \"?queryarg\" or \"#fragment\" \n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_uri.h"
                },
                "region": {
                  "startLine": 138,
                  "startColumn": 48,
                  "endLine": 138,
                  "endColumn": 56,
                  "snippet": {
                    "text": " * <PRE>\n *    APR_URI_UNP_OMITSITEPART        Suppress \"scheme://user\\@site:port\" \n *    APR_URI_UNP_OMITUSER            Just omit user \n *    APR_URI_UNP_OMITPASSWORD        Just omit password \n *    APR_URI_UNP_OMITUSERINFO        Omit \"user:password\\@\" part\n *    APR_URI_UNP_REVEALPASSWORD      Show plain text password (default: show XXXXXXXX)\n *    APR_URI_UNP_OMITPATHINFO        Show \"scheme://user\\@site:port\" only \n",
                    "rendered": {
                      "text": " * <PRE>\n *    APR_URI_UNP_OMITSITEPART        Suppress \"scheme://user\\@site:port\" \n *    APR_URI_UNP_OMITUSER            Just omit user \n *    APR_URI_UNP_OMITPASSWORD        Just omit password \n *    APR_URI_UNP_OMITUSERINFO        Omit \"user:password\\@\" part\n *    APR_URI_UNP_REVEALPASSWORD      Show plain text password (default: show XXXXXXXX)\n *    APR_URI_UNP_OMITPATHINFO        Show \"scheme://user\\@site:port\" only \n",
                      "markdown": "` * <PRE>\n *    APR_URI_UNP_OMITSITEPART        Suppress \"scheme://user\\@site:port\" \n *    APR_URI_UNP_OMITUSER            Just omit user \n *    APR_URI_UNP_OMITPASSWORD        Just omit password \n *    APR_URI_UNP_OMITUSERINFO        Omit \"user:password\\@\" part\n *    APR_URI_UNP_REVEALPASSWORD      Show plain text password (default: show XXXXXXXX)\n *    APR_URI_UNP_OMITPATHINFO        Show \"scheme://user\\@site:port\" only \n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_uri.h"
                },
                "region": {
                  "startLine": 138,
                  "startColumn": 22,
                  "endLine": 138,
                  "endColumn": 30,
                  "snippet": {
                    "text": " * <PRE>\n *    APR_URI_UNP_OMITSITEPART        Suppress \"scheme://user\\@site:port\" \n *    APR_URI_UNP_OMITUSER            Just omit user \n *    APR_URI_UNP_OMITPASSWORD        Just omit password \n *    APR_URI_UNP_OMITUSERINFO        Omit \"user:password\\@\" part\n *    APR_URI_UNP_REVEALPASSWORD      Show plain text password (default: show XXXXXXXX)\n *    APR_URI_UNP_OMITPATHINFO        Show \"scheme://user\\@site:port\" only \n",
                    "rendered": {
                      "text": " * <PRE>\n *    APR_URI_UNP_OMITSITEPART        Suppress \"scheme://user\\@site:port\" \n *    APR_URI_UNP_OMITUSER            Just omit user \n *    APR_URI_UNP_OMITPASSWORD        Just omit password \n *    APR_URI_UNP_OMITUSERINFO        Omit \"user:password\\@\" part\n *    APR_URI_UNP_REVEALPASSWORD      Show plain text password (default: show XXXXXXXX)\n *    APR_URI_UNP_OMITPATHINFO        Show \"scheme://user\\@site:port\" only \n",
                      "markdown": "` * <PRE>\n *    APR_URI_UNP_OMITSITEPART        Suppress \"scheme://user\\@site:port\" \n *    APR_URI_UNP_OMITUSER            Just omit user \n *    APR_URI_UNP_OMITPASSWORD        Just omit password \n *    APR_URI_UNP_OMITUSERINFO        Omit \"user:password\\@\" part\n *    APR_URI_UNP_REVEALPASSWORD      Show plain text password (default: show XXXXXXXX)\n *    APR_URI_UNP_OMITPATHINFO        Show \"scheme://user\\@site:port\" only \n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_uri.h"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 16,
                  "endLine": 131,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\n/**\n * Unparse a apr_uri_t structure to an URI string.  Optionally \n * suppress the password for security reasons.\n * @param p The pool to allocate out of\n * @param uptr All of the parts of the uri\n * @param flags How to unparse the uri.  One of:\n",
                    "rendered": {
                      "text": "\n/**\n * Unparse a apr_uri_t structure to an URI string.  Optionally \n * suppress the password for security reasons.\n * @param p The pool to allocate out of\n * @param uptr All of the parts of the uri\n * @param flags How to unparse the uri.  One of:\n",
                      "markdown": "`\n/**\n * Unparse a apr_uri_t structure to an URI string.  Optionally \n * suppress the password for security reasons.\n * @param p The pool to allocate out of\n * @param uptr All of the parts of the uri\n * @param flags How to unparse the uri.  One of:\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_uri.h"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 10,
                  "endLine": 93,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    /** user name, as in http://user:passwd\\@host:port/ */\n    char *user;\n    /** password, as in http://user:passwd\\@host:port/ */\n    char *password;\n    /** hostname from URI (or from Host: header) */\n    char *hostname;\n    /** port string (integer representation is in \"port\") */\n",
                    "rendered": {
                      "text": "    /** user name, as in http://user:passwd\\@host:port/ */\n    char *user;\n    /** password, as in http://user:passwd\\@host:port/ */\n    char *password;\n    /** hostname from URI (or from Host: header) */\n    char *hostname;\n    /** port string (integer representation is in \"port\") */\n",
                      "markdown": "`    /** user name, as in http://user:passwd\\@host:port/ */\n    char *user;\n    /** password, as in http://user:passwd\\@host:port/ */\n    char *password;\n    /** hostname from URI (or from Host: header) */\n    char *hostname;\n    /** port string (integer representation is in \"port\") */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_uri.h"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 8,
                  "endLine": 92,
                  "endColumn": 16,
                  "snippet": {
                    "text": "    char *hostinfo;\n    /** user name, as in http://user:passwd\\@host:port/ */\n    char *user;\n    /** password, as in http://user:passwd\\@host:port/ */\n    char *password;\n    /** hostname from URI (or from Host: header) */\n    char *hostname;\n",
                    "rendered": {
                      "text": "    char *hostinfo;\n    /** user name, as in http://user:passwd\\@host:port/ */\n    char *user;\n    /** password, as in http://user:passwd\\@host:port/ */\n    char *password;\n    /** hostname from URI (or from Host: header) */\n    char *hostname;\n",
                      "markdown": "`    char *hostinfo;\n    /** user name, as in http://user:passwd\\@host:port/ */\n    char *user;\n    /** password, as in http://user:passwd\\@host:port/ */\n    char *password;\n    /** hostname from URI (or from Host: header) */\n    char *hostname;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_uri.h"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 24,
                  "endLine": 88,
                  "endColumn": 32,
                  "snippet": {
                    "text": "struct apr_uri_t {\n    /** scheme (\"http\"/\"ftp\"/...) */\n    char *scheme;\n    /** combined [user[:password]\\@]host[:port] */\n    char *hostinfo;\n    /** user name, as in http://user:passwd\\@host:port/ */\n    char *user;\n",
                    "rendered": {
                      "text": "struct apr_uri_t {\n    /** scheme (\"http\"/\"ftp\"/...) */\n    char *scheme;\n    /** combined [user[:password]\\@]host[:port] */\n    char *hostinfo;\n    /** user name, as in http://user:passwd\\@host:port/ */\n    char *user;\n",
                      "markdown": "`struct apr_uri_t {\n    /** scheme (\"http\"/\"ftp\"/...) */\n    char *scheme;\n    /** combined [user[:password]\\@]host[:port] */\n    char *hostinfo;\n    /** user name, as in http://user:passwd\\@host:port/ */\n    char *user;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_uri.h"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 26,
                  "endLine": 73,
                  "endColumn": 34,
                  "snippet": {
                    "text": "#define APR_URI_UNP_OMITUSERINFO    (APR_URI_UNP_OMITUSER | \\\n                                     APR_URI_UNP_OMITPASSWORD)\n/** Show plain text password (default: show XXXXXXXX) */\n#define APR_URI_UNP_REVEALPASSWORD  (1U<<3)\n/** Show \"scheme://user\\@site:port\" only */\n#define APR_URI_UNP_OMITPATHINFO    (1U<<4)\n/** Omit the \"?queryarg\" from the path */\n",
                    "rendered": {
                      "text": "#define APR_URI_UNP_OMITUSERINFO    (APR_URI_UNP_OMITUSER | \\\n                                     APR_URI_UNP_OMITPASSWORD)\n/** Show plain text password (default: show XXXXXXXX) */\n#define APR_URI_UNP_REVEALPASSWORD  (1U<<3)\n/** Show \"scheme://user\\@site:port\" only */\n#define APR_URI_UNP_OMITPATHINFO    (1U<<4)\n/** Omit the \"?queryarg\" from the path */\n",
                      "markdown": "`#define APR_URI_UNP_OMITUSERINFO    (APR_URI_UNP_OMITUSER | \\\n                                     APR_URI_UNP_OMITPASSWORD)\n/** Show plain text password (default: show XXXXXXXX) */\n#define APR_URI_UNP_REVEALPASSWORD  (1U<<3)\n/** Show \"scheme://user\\@site:port\" only */\n#define APR_URI_UNP_OMITPATHINFO    (1U<<4)\n/** Omit the \"?queryarg\" from the path */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_uri.h"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 20,
                  "endLine": 72,
                  "endColumn": 28,
                  "snippet": {
                    "text": "/** omit \"user:password\\@\" part */\n#define APR_URI_UNP_OMITUSERINFO    (APR_URI_UNP_OMITUSER | \\\n                                     APR_URI_UNP_OMITPASSWORD)\n/** Show plain text password (default: show XXXXXXXX) */\n#define APR_URI_UNP_REVEALPASSWORD  (1U<<3)\n/** Show \"scheme://user\\@site:port\" only */\n#define APR_URI_UNP_OMITPATHINFO    (1U<<4)\n",
                    "rendered": {
                      "text": "/** omit \"user:password\\@\" part */\n#define APR_URI_UNP_OMITUSERINFO    (APR_URI_UNP_OMITUSER | \\\n                                     APR_URI_UNP_OMITPASSWORD)\n/** Show plain text password (default: show XXXXXXXX) */\n#define APR_URI_UNP_REVEALPASSWORD  (1U<<3)\n/** Show \"scheme://user\\@site:port\" only */\n#define APR_URI_UNP_OMITPATHINFO    (1U<<4)\n",
                      "markdown": "`/** omit \"user:password\\@\" part */\n#define APR_URI_UNP_OMITUSERINFO    (APR_URI_UNP_OMITUSER | \\\n                                     APR_URI_UNP_OMITPASSWORD)\n/** Show plain text password (default: show XXXXXXXX) */\n#define APR_URI_UNP_REVEALPASSWORD  (1U<<3)\n/** Show \"scheme://user\\@site:port\" only */\n#define APR_URI_UNP_OMITPATHINFO    (1U<<4)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_uri.h"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 53,
                  "endLine": 71,
                  "endColumn": 61,
                  "snippet": {
                    "text": "#define APR_URI_UNP_OMITPASSWORD    (1U<<2)\n/** omit \"user:password\\@\" part */\n#define APR_URI_UNP_OMITUSERINFO    (APR_URI_UNP_OMITUSER | \\\n                                     APR_URI_UNP_OMITPASSWORD)\n/** Show plain text password (default: show XXXXXXXX) */\n#define APR_URI_UNP_REVEALPASSWORD  (1U<<3)\n/** Show \"scheme://user\\@site:port\" only */\n",
                    "rendered": {
                      "text": "#define APR_URI_UNP_OMITPASSWORD    (1U<<2)\n/** omit \"user:password\\@\" part */\n#define APR_URI_UNP_OMITUSERINFO    (APR_URI_UNP_OMITUSER | \\\n                                     APR_URI_UNP_OMITPASSWORD)\n/** Show plain text password (default: show XXXXXXXX) */\n#define APR_URI_UNP_REVEALPASSWORD  (1U<<3)\n/** Show \"scheme://user\\@site:port\" only */\n",
                      "markdown": "`#define APR_URI_UNP_OMITPASSWORD    (1U<<2)\n/** omit \"user:password\\@\" part */\n#define APR_URI_UNP_OMITUSERINFO    (APR_URI_UNP_OMITUSER | \\\n                                     APR_URI_UNP_OMITPASSWORD)\n/** Show plain text password (default: show XXXXXXXX) */\n#define APR_URI_UNP_REVEALPASSWORD  (1U<<3)\n/** Show \"scheme://user\\@site:port\" only */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_uri.h"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 15,
                  "endLine": 69,
                  "endColumn": 23,
                  "snippet": {
                    "text": "#define APR_URI_UNP_OMITUSER        (1U<<1)\n/** Just omit password */\n#define APR_URI_UNP_OMITPASSWORD    (1U<<2)\n/** omit \"user:password\\@\" part */\n#define APR_URI_UNP_OMITUSERINFO    (APR_URI_UNP_OMITUSER | \\\n                                     APR_URI_UNP_OMITPASSWORD)\n/** Show plain text password (default: show XXXXXXXX) */\n",
                    "rendered": {
                      "text": "#define APR_URI_UNP_OMITUSER        (1U<<1)\n/** Just omit password */\n#define APR_URI_UNP_OMITPASSWORD    (1U<<2)\n/** omit \"user:password\\@\" part */\n#define APR_URI_UNP_OMITUSERINFO    (APR_URI_UNP_OMITUSER | \\\n                                     APR_URI_UNP_OMITPASSWORD)\n/** Show plain text password (default: show XXXXXXXX) */\n",
                      "markdown": "`#define APR_URI_UNP_OMITUSER        (1U<<1)\n/** Just omit password */\n#define APR_URI_UNP_OMITPASSWORD    (1U<<2)\n/** omit \"user:password\\@\" part */\n#define APR_URI_UNP_OMITUSERINFO    (APR_URI_UNP_OMITUSER | \\\n                                     APR_URI_UNP_OMITPASSWORD)\n/** Show plain text password (default: show XXXXXXXX) */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_uri.h"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 24,
                  "endLine": 68,
                  "endColumn": 32,
                  "snippet": {
                    "text": "/** Just omit user */\n#define APR_URI_UNP_OMITUSER        (1U<<1)\n/** Just omit password */\n#define APR_URI_UNP_OMITPASSWORD    (1U<<2)\n/** omit \"user:password\\@\" part */\n#define APR_URI_UNP_OMITUSERINFO    (APR_URI_UNP_OMITUSER | \\\n                                     APR_URI_UNP_OMITPASSWORD)\n",
                    "rendered": {
                      "text": "/** Just omit user */\n#define APR_URI_UNP_OMITUSER        (1U<<1)\n/** Just omit password */\n#define APR_URI_UNP_OMITPASSWORD    (1U<<2)\n/** omit \"user:password\\@\" part */\n#define APR_URI_UNP_OMITUSERINFO    (APR_URI_UNP_OMITUSER | \\\n                                     APR_URI_UNP_OMITPASSWORD)\n",
                      "markdown": "`/** Just omit user */\n#define APR_URI_UNP_OMITUSER        (1U<<1)\n/** Just omit password */\n#define APR_URI_UNP_OMITPASSWORD    (1U<<2)\n/** omit \"user:password\\@\" part */\n#define APR_URI_UNP_OMITUSERINFO    (APR_URI_UNP_OMITUSER | \\\n                                     APR_URI_UNP_OMITPASSWORD)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_uri.h"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 14,
                  "endLine": 67,
                  "endColumn": 22,
                  "snippet": {
                    "text": "#define APR_URI_UNP_OMITSITEPART    (1U<<0)\n/** Just omit user */\n#define APR_URI_UNP_OMITUSER        (1U<<1)\n/** Just omit password */\n#define APR_URI_UNP_OMITPASSWORD    (1U<<2)\n/** omit \"user:password\\@\" part */\n#define APR_URI_UNP_OMITUSERINFO    (APR_URI_UNP_OMITUSER | \\\n",
                    "rendered": {
                      "text": "#define APR_URI_UNP_OMITSITEPART    (1U<<0)\n/** Just omit user */\n#define APR_URI_UNP_OMITUSER        (1U<<1)\n/** Just omit password */\n#define APR_URI_UNP_OMITPASSWORD    (1U<<2)\n/** omit \"user:password\\@\" part */\n#define APR_URI_UNP_OMITUSERINFO    (APR_URI_UNP_OMITUSER | \\\n",
                      "markdown": "`#define APR_URI_UNP_OMITSITEPART    (1U<<0)\n/** Just omit user */\n#define APR_URI_UNP_OMITUSER        (1U<<1)\n/** Just omit password */\n#define APR_URI_UNP_OMITPASSWORD    (1U<<2)\n/** omit \"user:password\\@\" part */\n#define APR_URI_UNP_OMITUSERINFO    (APR_URI_UNP_OMITUSER | \\\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_uri.h"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 10,
                  "endLine": 95,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    /** password, as in http://user:passwd\\@host:port/ */\n    char *password;\n    /** hostname from URI (or from Host: header) */\n    char *hostname;\n    /** port string (integer representation is in \"port\") */\n    char *port_str;\n    /** the request path (or NULL if only scheme://host was given) */\n",
                    "rendered": {
                      "text": "    /** password, as in http://user:passwd\\@host:port/ */\n    char *password;\n    /** hostname from URI (or from Host: header) */\n    char *hostname;\n    /** port string (integer representation is in \"port\") */\n    char *port_str;\n    /** the request path (or NULL if only scheme://host was given) */\n",
                      "markdown": "`    /** password, as in http://user:passwd\\@host:port/ */\n    char *password;\n    /** hostname from URI (or from Host: header) */\n    char *hostname;\n    /** port string (integer representation is in \"port\") */\n    char *port_str;\n    /** the request path (or NULL if only scheme://host was given) */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/README"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 65,
                  "endLine": 90,
                  "endColumn": 8,
                  "snippet": {
                    "text": "information.\n\nThe U.S. Government Department of Commerce, Bureau of Industry and\nSecurity (BIS), has classified this software as Export Commodity \nControl Number (ECCN) 5D002.C.1, which includes information security\nsoftware using or performing cryptographic functions with asymmetric\nalgorithms.  The form and manner of this Apache Software Foundation\ndistribution makes it eligible for export under the License Exception\n",
                    "rendered": {
                      "text": "information.\n\nThe U.S. Government Department of Commerce, Bureau of Industry and\nSecurity (BIS), has classified this software as Export Commodity \nControl Number (ECCN) 5D002.C.1, which includes information security\nsoftware using or performing cryptographic functions with asymmetric\nalgorithms.  The form and manner of this Apache Software Foundation\ndistribution makes it eligible for export under the License Exception\n",
                      "markdown": "`information.\n\nThe U.S. Government Department of Commerce, Bureau of Industry and\nSecurity (BIS), has classified this software as Export Commodity \nControl Number (ECCN) 5D002.C.1, which includes information security\nsoftware using or performing cryptographic functions with asymmetric\nalgorithms.  The form and manner of this Apache Software Foundation\ndistribution makes it eligible for export under the License Exception\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/README"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 56,
                  "endLine": 55,
                  "snippet": {
                    "text": "\n   APR is already used extensively by the Apache HTTP Server\n   version 2 and the Subversion revision control system, to\n   name but a few.  We list all known projects using APR at\n   http://apr.apache.org/projects.html -- so please let us know\n   if you find our libraries useful in your own projects!\n\n\n",
                    "rendered": {
                      "text": "\n   APR is already used extensively by the Apache HTTP Server\n   version 2 and the Subversion revision control system, to\n   name but a few.  We list all known projects using APR at\n   http://apr.apache.org/projects.html -- so please let us know\n   if you find our libraries useful in your own projects!\n\n\n",
                      "markdown": "`\n   APR is already used extensively by the Apache HTTP Server\n   version 2 and the Subversion revision control system, to\n   name but a few.  We list all known projects using APR at\n   http://apr.apache.org/projects.html -- so please let us know\n   if you find our libraries useful in your own projects!\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/README"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 40,
                  "endLine": 53,
                  "endColumn": 49,
                  "snippet": {
                    "text": "     http://apr.apache.org/versioning.html\n\n   APR is already used extensively by the Apache HTTP Server\n   version 2 and the Subversion revision control system, to\n   name but a few.  We list all known projects using APR at\n   http://apr.apache.org/projects.html -- so please let us know\n   if you find our libraries useful in your own projects!\n",
                    "rendered": {
                      "text": "     http://apr.apache.org/versioning.html\n\n   APR is already used extensively by the Apache HTTP Server\n   version 2 and the Subversion revision control system, to\n   name but a few.  We list all known projects using APR at\n   http://apr.apache.org/projects.html -- so please let us know\n   if you find our libraries useful in your own projects!\n",
                      "markdown": "`     http://apr.apache.org/versioning.html\n\n   APR is already used extensively by the Apache HTTP Server\n   version 2 and the Subversion revision control system, to\n   name but a few.  We list all known projects using APR at\n   http://apr.apache.org/projects.html -- so please let us know\n   if you find our libraries useful in your own projects!\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/README"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 21,
                  "endLine": 64,
                  "endColumn": 28,
                  "snippet": {
                    "text": "As of apr-util version 1.2.11, MySQL DBD driver is shipped as part of the\ndistribution.  However, to avoid licensing incompatibilities, it is not\nbuilt by default.  To enable MySQL support, use the --with-mysql option,\nbut be aware that the MySQL license may introduce licensing implications\nfor your compiled code.  Similarly, the bindings for propritary drivers\nsuch as Oracle (--with-oracle option) must also be explicitly enabled.\n\n",
                    "rendered": {
                      "text": "As of apr-util version 1.2.11, MySQL DBD driver is shipped as part of the\ndistribution.  However, to avoid licensing incompatibilities, it is not\nbuilt by default.  To enable MySQL support, use the --with-mysql option,\nbut be aware that the MySQL license may introduce licensing implications\nfor your compiled code.  Similarly, the bindings for propritary drivers\nsuch as Oracle (--with-oracle option) must also be explicitly enabled.\n\n",
                      "markdown": "`As of apr-util version 1.2.11, MySQL DBD driver is shipped as part of the\ndistribution.  However, to avoid licensing incompatibilities, it is not\nbuilt by default.  To enable MySQL support, use the --with-mysql option,\nbut be aware that the MySQL license may introduce licensing implications\nfor your compiled code.  Similarly, the bindings for propritary drivers\nsuch as Oracle (--with-oracle option) must also be explicitly enabled.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/README"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 28,
                  "endLine": 63,
                  "endColumn": 35,
                  "snippet": {
                    "text": "------------------\nAs of apr-util version 1.2.11, MySQL DBD driver is shipped as part of the\ndistribution.  However, to avoid licensing incompatibilities, it is not\nbuilt by default.  To enable MySQL support, use the --with-mysql option,\nbut be aware that the MySQL license may introduce licensing implications\nfor your compiled code.  Similarly, the bindings for propritary drivers\nsuch as Oracle (--with-oracle option) must also be explicitly enabled.\n",
                    "rendered": {
                      "text": "------------------\nAs of apr-util version 1.2.11, MySQL DBD driver is shipped as part of the\ndistribution.  However, to avoid licensing incompatibilities, it is not\nbuilt by default.  To enable MySQL support, use the --with-mysql option,\nbut be aware that the MySQL license may introduce licensing implications\nfor your compiled code.  Similarly, the bindings for propritary drivers\nsuch as Oracle (--with-oracle option) must also be explicitly enabled.\n",
                      "markdown": "`------------------\nAs of apr-util version 1.2.11, MySQL DBD driver is shipped as part of the\ndistribution.  However, to avoid licensing incompatibilities, it is not\nbuilt by default.  To enable MySQL support, use the --with-mysql option,\nbut be aware that the MySQL license may introduce licensing implications\nfor your compiled code.  Similarly, the bindings for propritary drivers\nsuch as Oracle (--with-oracle option) must also be explicitly enabled.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/README"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 30,
                  "endLine": 61,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\nDatabase Providers\n------------------\nAs of apr-util version 1.2.11, MySQL DBD driver is shipped as part of the\ndistribution.  However, to avoid licensing incompatibilities, it is not\nbuilt by default.  To enable MySQL support, use the --with-mysql option,\nbut be aware that the MySQL license may introduce licensing implications\n",
                    "rendered": {
                      "text": "\nDatabase Providers\n------------------\nAs of apr-util version 1.2.11, MySQL DBD driver is shipped as part of the\ndistribution.  However, to avoid licensing incompatibilities, it is not\nbuilt by default.  To enable MySQL support, use the --with-mysql option,\nbut be aware that the MySQL license may introduce licensing implications\n",
                      "markdown": "`\nDatabase Providers\n------------------\nAs of apr-util version 1.2.11, MySQL DBD driver is shipped as part of the\ndistribution.  However, to avoid licensing incompatibilities, it is not\nbuilt by default.  To enable MySQL support, use the --with-mysql option,\nbut be aware that the MySQL license may introduce licensing implications\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/README"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 9,
                  "endLine": 56,
                  "endColumn": 15,
                  "snippet": {
                    "text": "   version 2 and the Subversion revision control system, to\n   name but a few.  We list all known projects using APR at\n   http://apr.apache.org/projects.html -- so please let us know\n   if you find our libraries useful in your own projects!\n\n\nDatabase Providers\n",
                    "rendered": {
                      "text": "   version 2 and the Subversion revision control system, to\n   name but a few.  We list all known projects using APR at\n   http://apr.apache.org/projects.html -- so please let us know\n   if you find our libraries useful in your own projects!\n\n\nDatabase Providers\n",
                      "markdown": "`   version 2 and the Subversion revision control system, to\n   name but a few.  We list all known projects using APR at\n   http://apr.apache.org/projects.html -- so please let us know\n   if you find our libraries useful in your own projects!\n\n\nDatabase Providers\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/README"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 23,
                  "endLine": 46,
                  "endColumn": 31,
                  "snippet": {
                    "text": "   Users of APR 0.9 should be aware that migrating to the APR 1.x\n   programming interfaces may require some adjustments; APR 1.x is\n   neither source nor binary compatible with earlier APR 0.9 releases.\n   Users of APR 1.x can expect consistent interfaces and binary backwards\n   compatibility throughout the entire APR 1.x release cycle, as defined\n   in our versioning rules:\n\n",
                    "rendered": {
                      "text": "   Users of APR 0.9 should be aware that migrating to the APR 1.x\n   programming interfaces may require some adjustments; APR 1.x is\n   neither source nor binary compatible with earlier APR 0.9 releases.\n   Users of APR 1.x can expect consistent interfaces and binary backwards\n   compatibility throughout the entire APR 1.x release cycle, as defined\n   in our versioning rules:\n\n",
                      "markdown": "`   Users of APR 0.9 should be aware that migrating to the APR 1.x\n   programming interfaces may require some adjustments; APR 1.x is\n   neither source nor binary compatible with earlier APR 0.9 releases.\n   Users of APR 1.x can expect consistent interfaces and binary backwards\n   compatibility throughout the entire APR 1.x release cycle, as defined\n   in our versioning rules:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/aprutil.mak"
                },
                "region": {
                  "startLine": 826,
                  "startColumn": 24,
                  "endLine": 826,
                  "endColumn": 30,
                  "snippet": {
                    "text": "!IF EXISTS(\"aprutil.dep\")\r\n!INCLUDE \"aprutil.dep\"\r\n!ELSE \r\n!MESSAGE Warning: cannot find \"aprutil.dep\"\r\n!ENDIF \r\n!ENDIF \r\n\r\n",
                    "rendered": {
                      "text": "!IF EXISTS(\"aprutil.dep\")\r\n!INCLUDE \"aprutil.dep\"\r\n!ELSE \r\n!MESSAGE Warning: cannot find \"aprutil.dep\"\r\n!ENDIF \r\n!ENDIF \r\n\r\n",
                      "markdown": "`!IF EXISTS(\"aprutil.dep\")\r\n!INCLUDE \"aprutil.dep\"\r\n!ELSE \r\n!MESSAGE Warning: cannot find \"aprutil.dep\"\r\n!ENDIF \r\n!ENDIF \r\n\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/README.FREETDS"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 2,
                  "endLine": 8,
                  "endColumn": 10,
                  "snippet": {
                    "text": "to manage maintenance for yourself, you can patch the build and\nwork through issues that affect you, but you're on your own.\n\nWe expect that for most users, the ODBC driver will serve as\nan alternative.\n\nSorry.\n",
                    "rendered": {
                      "text": "to manage maintenance for yourself, you can patch the build and\nwork through issues that affect you, but you're on your own.\n\nWe expect that for most users, the ODBC driver will serve as\nan alternative.\n\nSorry.\n",
                      "markdown": "`to manage maintenance for yourself, you can patch the build and\nwork through issues that affect you, but you're on your own.\n\nWe expect that for most users, the ODBC driver will serve as\nan alternative.\n\nSorry.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/libaprutil.mak"
                },
                "region": {
                  "startLine": 831,
                  "startColumn": 24,
                  "endLine": 831,
                  "endColumn": 30,
                  "snippet": {
                    "text": "!IF EXISTS(\"libaprutil.dep\")\r\n!INCLUDE \"libaprutil.dep\"\r\n!ELSE \r\n!MESSAGE Warning: cannot find \"libaprutil.dep\"\r\n!ENDIF \r\n!ENDIF \r\n\r\n",
                    "rendered": {
                      "text": "!IF EXISTS(\"libaprutil.dep\")\r\n!INCLUDE \"libaprutil.dep\"\r\n!ELSE \r\n!MESSAGE Warning: cannot find \"libaprutil.dep\"\r\n!ENDIF \r\n!ENDIF \r\n\r\n",
                      "markdown": "`!IF EXISTS(\"libaprutil.dep\")\r\n!INCLUDE \"libaprutil.dep\"\r\n!ELSE \r\n!MESSAGE Warning: cannot find \"libaprutil.dep\"\r\n!ENDIF \r\n!ENDIF \r\n\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/configure.in"
                },
                "region": {
                  "startLine": 349,
                  "startColumn": 31,
                  "endLine": 350,
                  "endColumn": 6,
                  "snippet": {
                    "text": "                 include/apr_ldap.h\n                 include/apu.h include/apu_want.h])\n\nAC_CONFIG_COMMANDS([default], [\nchmod +x apu-$APRUTIL_MAJOR_VERSION-config\n],[\nAPRUTIL_MAJOR_VERSION=$APRUTIL_MAJOR_VERSION\n])\n",
                    "rendered": {
                      "text": "                 include/apr_ldap.h\n                 include/apu.h include/apu_want.h])\n\nAC_CONFIG_COMMANDS([default], [\nchmod +x apu-$APRUTIL_MAJOR_VERSION-config\n],[\nAPRUTIL_MAJOR_VERSION=$APRUTIL_MAJOR_VERSION\n])\n",
                      "markdown": "`                 include/apr_ldap.h\n                 include/apu.h include/apu_want.h])\n\nAC_CONFIG_COMMANDS([default], [\nchmod +x apu-$APRUTIL_MAJOR_VERSION-config\n],[\nAPRUTIL_MAJOR_VERSION=$APRUTIL_MAJOR_VERSION\n])\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/configure.in"
                },
                "region": {
                  "startLine": 312,
                  "startColumn": 7,
                  "endLine": 312,
                  "endColumn": 11,
                  "snippet": {
                    "text": "            < $APR_BUILD_DIR/apr_rules.mk > $abs_builddir/build/rules.mk\n        ;;\n    *)\n        cp $APR_BUILD_DIR/apr_rules.mk $abs_builddir/build/rules.mk\n        ;;\nesac\n\n",
                    "rendered": {
                      "text": "            < $APR_BUILD_DIR/apr_rules.mk > $abs_builddir/build/rules.mk\n        ;;\n    *)\n        cp $APR_BUILD_DIR/apr_rules.mk $abs_builddir/build/rules.mk\n        ;;\nesac\n\n",
                      "markdown": "`            < $APR_BUILD_DIR/apr_rules.mk > $abs_builddir/build/rules.mk\n        ;;\n    *)\n        cp $APR_BUILD_DIR/apr_rules.mk $abs_builddir/build/rules.mk\n        ;;\nesac\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/configure.in"
                },
                "region": {
                  "startLine": 307,
                  "startColumn": 7,
                  "endLine": 307,
                  "endColumn": 12,
                  "snippet": {
                    "text": "dnl\ncase $host in\n    *-mingw*)\n        sed -e 's/-DAPR_DECLARE_EXPORT/-DAPU_DECLARE_EXPORT/' \\\n            -e 's/-DAPR_DECLARE_STATIC/-DAPU_DECLARE_STATIC -DAPR_DECLARE_STATIC/' \\\n            < $APR_BUILD_DIR/apr_rules.mk > $abs_builddir/build/rules.mk\n        ;;\n",
                    "rendered": {
                      "text": "dnl\ncase $host in\n    *-mingw*)\n        sed -e 's/-DAPR_DECLARE_EXPORT/-DAPU_DECLARE_EXPORT/' \\\n            -e 's/-DAPR_DECLARE_STATIC/-DAPU_DECLARE_STATIC -DAPR_DECLARE_STATIC/' \\\n            < $APR_BUILD_DIR/apr_rules.mk > $abs_builddir/build/rules.mk\n        ;;\n",
                      "markdown": "`dnl\ncase $host in\n    *-mingw*)\n        sed -e 's/-DAPR_DECLARE_EXPORT/-DAPU_DECLARE_EXPORT/' \\\n            -e 's/-DAPR_DECLARE_STATIC/-DAPU_DECLARE_STATIC -DAPR_DECLARE_STATIC/' \\\n            < $APR_BUILD_DIR/apr_rules.mk > $abs_builddir/build/rules.mk\n        ;;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/configure.in"
                },
                "region": {
                  "startLine": 163,
                  "startColumn": 3,
                  "endLine": 163,
                  "endColumn": 9,
                  "snippet": {
                    "text": "dnl Find LDAP library\ndnl Determine what DBM backend type to use.\ndnl Find Expat\ndnl Find an iconv library\nAPU_CHECK_CRYPTO\nAPU_FIND_LDAP\nAPU_CHECK_DBM\n",
                    "rendered": {
                      "text": "dnl Find LDAP library\ndnl Determine what DBM backend type to use.\ndnl Find Expat\ndnl Find an iconv library\nAPU_CHECK_CRYPTO\nAPU_FIND_LDAP\nAPU_CHECK_DBM\n",
                      "markdown": "`dnl Find LDAP library\ndnl Determine what DBM backend type to use.\ndnl Find Expat\ndnl Find an iconv library\nAPU_CHECK_CRYPTO\nAPU_FIND_LDAP\nAPU_CHECK_DBM\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/configure.in"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 3,
                  "endLine": 162,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\ndnl Find LDAP library\ndnl Determine what DBM backend type to use.\ndnl Find Expat\ndnl Find an iconv library\nAPU_CHECK_CRYPTO\nAPU_FIND_LDAP\n",
                    "rendered": {
                      "text": "\ndnl Find LDAP library\ndnl Determine what DBM backend type to use.\ndnl Find Expat\ndnl Find an iconv library\nAPU_CHECK_CRYPTO\nAPU_FIND_LDAP\n",
                      "markdown": "`\ndnl Find LDAP library\ndnl Determine what DBM backend type to use.\ndnl Find Expat\ndnl Find an iconv library\nAPU_CHECK_CRYPTO\nAPU_FIND_LDAP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/configure.in"
                },
                "region": {
                  "startLine": 160,
                  "startColumn": 3,
                  "endLine": 160,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  ])\nAC_SUBST(APR_ICONV_DIR)\n\ndnl Find LDAP library\ndnl Determine what DBM backend type to use.\ndnl Find Expat\ndnl Find an iconv library\n",
                    "rendered": {
                      "text": "  ])\nAC_SUBST(APR_ICONV_DIR)\n\ndnl Find LDAP library\ndnl Determine what DBM backend type to use.\ndnl Find Expat\ndnl Find an iconv library\n",
                      "markdown": "`  ])\nAC_SUBST(APR_ICONV_DIR)\n\ndnl Find LDAP library\ndnl Determine what DBM backend type to use.\ndnl Find Expat\ndnl Find an iconv library\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/configure.in"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 4,
                  "endLine": 129,
                  "endColumn": 10,
                  "snippet": {
                    "text": "AC_SUBST(apr_shlibpath_var)\n\ndnl\ndnl  Find the APR-ICONV directory.\ndnl\nAC_ARG_WITH(apr-iconv,\n            [  --with-apr-iconv=DIR    relative path to apr-iconv source],\n",
                    "rendered": {
                      "text": "AC_SUBST(apr_shlibpath_var)\n\ndnl\ndnl  Find the APR-ICONV directory.\ndnl\nAC_ARG_WITH(apr-iconv,\n            [  --with-apr-iconv=DIR    relative path to apr-iconv source],\n",
                      "markdown": "`AC_SUBST(apr_shlibpath_var)\n\ndnl\ndnl  Find the APR-ICONV directory.\ndnl\nAC_ARG_WITH(apr-iconv,\n            [  --with-apr-iconv=DIR    relative path to apr-iconv source],\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/configure.in"
                },
                "region": {
                  "startLine": 117,
                  "startColumn": 31,
                  "endLine": 117,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\ndnl\ndnl even though we use apr_rules.mk for building apr-util, we need\ndnl to grab CC and CPP ahead of time so that apr-util config tests\ndnl use the same compiler as APR; we need the same compiler options\ndnl and feature test macros as well\ndnl\n",
                    "rendered": {
                      "text": "\ndnl\ndnl even though we use apr_rules.mk for building apr-util, we need\ndnl to grab CC and CPP ahead of time so that apr-util config tests\ndnl use the same compiler as APR; we need the same compiler options\ndnl and feature test macros as well\ndnl\n",
                      "markdown": "`\ndnl\ndnl even though we use apr_rules.mk for building apr-util, we need\ndnl to grab CC and CPP ahead of time so that apr-util config tests\ndnl use the same compiler as APR; we need the same compiler options\ndnl and feature test macros as well\ndnl\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/configure.in"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 3,
                  "endLine": 111,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\ndnl\ndnl Find the APR includes directory and (possibly) the source (base) dir.\ndnl\nAPU_FIND_APR\n\n",
                    "rendered": {
                      "text": "fi\n\ndnl\ndnl Find the APR includes directory and (possibly) the source (base) dir.\ndnl\nAPU_FIND_APR\n\n",
                      "markdown": "`fi\n\ndnl\ndnl Find the APR includes directory and (possibly) the source (base) dir.\ndnl\nAPU_FIND_APR\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/configure.in"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 15,
                  "endLine": 64,
                  "endColumn": 20,
                  "snippet": {
                    "text": "AC_SUBST(LT_NO_INSTALL)\n\ndnl\ndnl compute the top directory of the build\ndnl note: this is needed for LIBTOOL and exporting the bundled Expat\ndnl\ntop_builddir=\"$abs_builddir\"\n",
                    "rendered": {
                      "text": "AC_SUBST(LT_NO_INSTALL)\n\ndnl\ndnl compute the top directory of the build\ndnl note: this is needed for LIBTOOL and exporting the bundled Expat\ndnl\ntop_builddir=\"$abs_builddir\"\n",
                      "markdown": "`AC_SUBST(LT_NO_INSTALL)\n\ndnl\ndnl compute the top directory of the build\ndnl note: this is needed for LIBTOOL and exporting the bundled Expat\ndnl\ntop_builddir=\"$abs_builddir\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/configure.in"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 58,
                  "endLine": 3,
                  "snippet": {
                    "text": "dnl\ndnl Process this file with autoconf to produce a configure script\ndnl\n\nAC_PREREQ(2.59)\nAC_INIT(export_vars.sh.in)\n",
                    "rendered": {
                      "text": "dnl\ndnl Process this file with autoconf to produce a configure script\ndnl\n\nAC_PREREQ(2.59)\nAC_INIT(export_vars.sh.in)\n",
                      "markdown": "`dnl\ndnl Process this file with autoconf to produce a configure script\ndnl\n\nAC_PREREQ(2.59)\nAC_INIT(export_vars.sh.in)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/apr_passwd.c"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 30,
                  "endLine": 82,
                  "endColumn": 38,
                  "snippet": {
                    "text": " * they match, or APR_EMISMATCH if they don't.  If the platform doesn't\n * support crypt, then the default check is against a clear text string.\n */\nAPU_DECLARE(apr_status_t) apr_password_validate(const char *passwd, \n                                                const char *hash)\n{\n    char sample[200];\n",
                    "rendered": {
                      "text": " * they match, or APR_EMISMATCH if they don't.  If the platform doesn't\n * support crypt, then the default check is against a clear text string.\n */\nAPU_DECLARE(apr_status_t) apr_password_validate(const char *passwd, \n                                                const char *hash)\n{\n    char sample[200];\n",
                      "markdown": "` * they match, or APR_EMISMATCH if they don't.  If the platform doesn't\n * support crypt, then the default check is against a clear text string.\n */\nAPU_DECLARE(apr_status_t) apr_password_validate(const char *passwd, \n                                                const char *hash)\n{\n    char sample[200];\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/apr_passwd.c"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 40,
                  "endLine": 78,
                  "endColumn": 48,
                  "snippet": {
                    "text": "/*\n * Validate a plaintext password against a smashed one.  Uses either\n * crypt() (if available) or apr_md5_encode() or apr_sha1_base64(), depending\n * upon the format of the smashed input password.  Returns APR_SUCCESS if\n * they match, or APR_EMISMATCH if they don't.  If the platform doesn't\n * support crypt, then the default check is against a clear text string.\n */\n",
                    "rendered": {
                      "text": "/*\n * Validate a plaintext password against a smashed one.  Uses either\n * crypt() (if available) or apr_md5_encode() or apr_sha1_base64(), depending\n * upon the format of the smashed input password.  Returns APR_SUCCESS if\n * they match, or APR_EMISMATCH if they don't.  If the platform doesn't\n * support crypt, then the default check is against a clear text string.\n */\n",
                      "markdown": "`/*\n * Validate a plaintext password against a smashed one.  Uses either\n * crypt() (if available) or apr_md5_encode() or apr_sha1_base64(), depending\n * upon the format of the smashed input password.  Returns APR_SUCCESS if\n * they match, or APR_EMISMATCH if they don't.  If the platform doesn't\n * support crypt, then the default check is against a clear text string.\n */\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/apr_passwd.c"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 24,
                  "endLine": 76,
                  "endColumn": 32,
                  "snippet": {
                    "text": "#endif\n\n/*\n * Validate a plaintext password against a smashed one.  Uses either\n * crypt() (if available) or apr_md5_encode() or apr_sha1_base64(), depending\n * upon the format of the smashed input password.  Returns APR_SUCCESS if\n * they match, or APR_EMISMATCH if they don't.  If the platform doesn't\n",
                    "rendered": {
                      "text": "#endif\n\n/*\n * Validate a plaintext password against a smashed one.  Uses either\n * crypt() (if available) or apr_md5_encode() or apr_sha1_base64(), depending\n * upon the format of the smashed input password.  Returns APR_SUCCESS if\n * they match, or APR_EMISMATCH if they don't.  If the platform doesn't\n",
                      "markdown": "`#endif\n\n/*\n * Validate a plaintext password against a smashed one.  Uses either\n * crypt() (if available) or apr_md5_encode() or apr_sha1_base64(), depending\n * upon the format of the smashed input password.  Returns APR_SUCCESS if\n * they match, or APR_EMISMATCH if they don't.  If the platform doesn't\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/apr_passwd.c"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 11,
                  "endLine": 64,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\n#else\n\n#error apr_password_validate() is not threadsafe.  rebuild APR without thread support.\n\n#endif\n#endif\n",
                    "rendered": {
                      "text": "\n#else\n\n#error apr_password_validate() is not threadsafe.  rebuild APR without thread support.\n\n#endif\n#endif\n",
                      "markdown": "`\n#else\n\n#error apr_password_validate() is not threadsafe.  rebuild APR without thread support.\n\n#endif\n#endif\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/rpm/apr-util.spec.in"
                },
                "region": {
                  "startLine": 196,
                  "startColumn": 1,
                  "endLine": 196,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n%changelog\n* Tue Jun 22 2004 Graham Leggett <minfrin@sharp.fm> 1.0.0-1\n- update to support v1.0.0 of APR\n                                                                                \n* Tue Jun 22 2004 Graham Leggett <minfrin@sharp.fm> 1.0.0-1\n- derived from Fedora Core apr.spec\n",
                    "rendered": {
                      "text": "\n%changelog\n* Tue Jun 22 2004 Graham Leggett <minfrin@sharp.fm> 1.0.0-1\n- update to support v1.0.0 of APR\n                                                                                \n* Tue Jun 22 2004 Graham Leggett <minfrin@sharp.fm> 1.0.0-1\n- derived from Fedora Core apr.spec\n",
                      "markdown": "`\n%changelog\n* Tue Jun 22 2004 Graham Leggett <minfrin@sharp.fm> 1.0.0-1\n- update to support v1.0.0 of APR\n                                                                                \n* Tue Jun 22 2004 Graham Leggett <minfrin@sharp.fm> 1.0.0-1\n- derived from Fedora Core apr.spec\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/rpm/apr-util.spec.in"
                },
                "region": {
                  "startLine": 177,
                  "startColumn": 6,
                  "endLine": 178,
                  "snippet": {
                    "text": "%defattr(-,root,root,-)\n%{_libdir}/apr-util-%{apuver}/apr_ldap*\n\n%files openssl\n%defattr(-,root,root,-)\n%{_libdir}/apr-util-%{apuver}/apr_crypto_openssl*\n\n%files nss\n",
                    "rendered": {
                      "text": "%defattr(-,root,root,-)\n%{_libdir}/apr-util-%{apuver}/apr_ldap*\n\n%files openssl\n%defattr(-,root,root,-)\n%{_libdir}/apr-util-%{apuver}/apr_crypto_openssl*\n\n%files nss\n",
                      "markdown": "`%defattr(-,root,root,-)\n%{_libdir}/apr-util-%{apuver}/apr_ldap*\n\n%files openssl\n%defattr(-,root,root,-)\n%{_libdir}/apr-util-%{apuver}/apr_crypto_openssl*\n\n%files nss\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/rpm/apr-util.spec.in"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 6,
                  "endLine": 162,
                  "snippet": {
                    "text": "%defattr(-,root,root,-)\n%{_libdir}/apr-util-%{apuver}/apr_dbd_pgsql*\n\n%files mysql\n%defattr(-,root,root,-)\n%{_libdir}/apr-util-%{apuver}/apr_dbd_mysql*\n\n%files sqlite\n",
                    "rendered": {
                      "text": "%defattr(-,root,root,-)\n%{_libdir}/apr-util-%{apuver}/apr_dbd_pgsql*\n\n%files mysql\n%defattr(-,root,root,-)\n%{_libdir}/apr-util-%{apuver}/apr_dbd_mysql*\n\n%files sqlite\n",
                      "markdown": "`%defattr(-,root,root,-)\n%{_libdir}/apr-util-%{apuver}/apr_dbd_pgsql*\n\n%files mysql\n%defattr(-,root,root,-)\n%{_libdir}/apr-util-%{apuver}/apr_dbd_mysql*\n\n%files sqlite\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/rpm/apr-util.spec.in"
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 15,
                  "endLine": 135,
                  "endColumn": 3,
                  "snippet": {
                    "text": "rm -rf $RPM_BUILD_ROOT\nmake install DESTDIR=$RPM_BUILD_ROOT\n\n# Documentation\nmv docs/dox/html html\n\n# Unpackaged files\nrm -f $RPM_BUILD_ROOT%{_libdir}/aprutil.exp\n",
                    "rendered": {
                      "text": "rm -rf $RPM_BUILD_ROOT\nmake install DESTDIR=$RPM_BUILD_ROOT\n\n# Documentation\nmv docs/dox/html html\n\n# Unpackaged files\nrm -f $RPM_BUILD_ROOT%{_libdir}/aprutil.exp\n",
                      "markdown": "`rm -rf $RPM_BUILD_ROOT\nmake install DESTDIR=$RPM_BUILD_ROOT\n\n# Documentation\nmv docs/dox/html html\n\n# Unpackaged files\nrm -f $RPM_BUILD_ROOT%{_libdir}/aprutil.exp\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/rpm/apr-util.spec.in"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 12,
                  "endLine": 99,
                  "snippet": {
                    "text": "BuildRequires: openssl-devel\nRequires: apr-util = %{version}-%{release}\n\n%description openssl\nThis package provides crypto support for apr-util based on OpenSSL.\n\n%package nss\nGroup: Development/Libraries\n",
                    "rendered": {
                      "text": "BuildRequires: openssl-devel\nRequires: apr-util = %{version}-%{release}\n\n%description openssl\nThis package provides crypto support for apr-util based on OpenSSL.\n\n%package nss\nGroup: Development/Libraries\n",
                      "markdown": "`BuildRequires: openssl-devel\nRequires: apr-util = %{version}-%{release}\n\n%description openssl\nThis package provides crypto support for apr-util based on OpenSSL.\n\n%package nss\nGroup: Development/Libraries\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/rpm/apr-util.spec.in"
                },
                "region": {
                  "startLine": 94,
                  "startColumn": 28,
                  "endLine": 94,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\n%package openssl\nGroup: Development/Libraries\nSummary: APR utility library OpenSSL crypto support\nBuildRequires: openssl-devel\nRequires: apr-util = %{version}-%{release}\n\n",
                    "rendered": {
                      "text": "\n%package openssl\nGroup: Development/Libraries\nSummary: APR utility library OpenSSL crypto support\nBuildRequires: openssl-devel\nRequires: apr-util = %{version}-%{release}\n\n",
                      "markdown": "`\n%package openssl\nGroup: Development/Libraries\nSummary: APR utility library OpenSSL crypto support\nBuildRequires: openssl-devel\nRequires: apr-util = %{version}-%{release}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/rpm/apr-util.spec.in"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 8,
                  "endLine": 93,
                  "snippet": {
                    "text": "%description ldap\nThis package provides the LDAP support for the apr-util.\n\n%package openssl\nGroup: Development/Libraries\nSummary: APR utility library OpenSSL crypto support\nBuildRequires: openssl-devel\nRequires: apr-util = %{version}-%{release}\n",
                    "rendered": {
                      "text": "%description ldap\nThis package provides the LDAP support for the apr-util.\n\n%package openssl\nGroup: Development/Libraries\nSummary: APR utility library OpenSSL crypto support\nBuildRequires: openssl-devel\nRequires: apr-util = %{version}-%{release}\n",
                      "markdown": "`%description ldap\nThis package provides the LDAP support for the apr-util.\n\n%package openssl\nGroup: Development/Libraries\nSummary: APR utility library OpenSSL crypto support\nBuildRequires: openssl-devel\nRequires: apr-util = %{version}-%{release}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/rpm/apr-util.spec.in"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 25,
                  "endLine": 60,
                  "endColumn": 32,
                  "snippet": {
                    "text": "Requires: apr-util = %{version}-%{release}\n\n%description mysql\nThis package provides the MySQL driver for the apr-util DBD\n(database abstraction) interface.\n\n%package sqlite\n",
                    "rendered": {
                      "text": "Requires: apr-util = %{version}-%{release}\n\n%description mysql\nThis package provides the MySQL driver for the apr-util DBD\n(database abstraction) interface.\n\n%package sqlite\n",
                      "markdown": "`Requires: apr-util = %{version}-%{release}\n\n%description mysql\nThis package provides the MySQL driver for the apr-util DBD\n(database abstraction) interface.\n\n%package sqlite\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/rpm/apr-util.spec.in"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 12,
                  "endLine": 60,
                  "snippet": {
                    "text": "BuildRequires: mysql-devel\nRequires: apr-util = %{version}-%{release}\n\n%description mysql\nThis package provides the MySQL driver for the apr-util DBD\n(database abstraction) interface.\n\n%package sqlite\n",
                    "rendered": {
                      "text": "BuildRequires: mysql-devel\nRequires: apr-util = %{version}-%{release}\n\n%description mysql\nThis package provides the MySQL driver for the apr-util DBD\n(database abstraction) interface.\n\n%package sqlite\n",
                      "markdown": "`BuildRequires: mysql-devel\nRequires: apr-util = %{version}-%{release}\n\n%description mysql\nThis package provides the MySQL driver for the apr-util DBD\n(database abstraction) interface.\n\n%package sqlite\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/rpm/apr-util.spec.in"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 28,
                  "endLine": 55,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\n%package mysql\nGroup: Development/Libraries\nSummary: APR utility library MySQL DBD driver\nBuildRequires: mysql-devel\nRequires: apr-util = %{version}-%{release}\n\n",
                    "rendered": {
                      "text": "\n%package mysql\nGroup: Development/Libraries\nSummary: APR utility library MySQL DBD driver\nBuildRequires: mysql-devel\nRequires: apr-util = %{version}-%{release}\n\n",
                      "markdown": "`\n%package mysql\nGroup: Development/Libraries\nSummary: APR utility library MySQL DBD driver\nBuildRequires: mysql-devel\nRequires: apr-util = %{version}-%{release}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/rpm/apr-util.spec.in"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 8,
                  "endLine": 54,
                  "snippet": {
                    "text": "This package provides the PostgreSQL driver for the apr-util\nDBD (database abstraction) interface.\n\n%package mysql\nGroup: Development/Libraries\nSummary: APR utility library MySQL DBD driver\nBuildRequires: mysql-devel\nRequires: apr-util = %{version}-%{release}\n",
                    "rendered": {
                      "text": "This package provides the PostgreSQL driver for the apr-util\nDBD (database abstraction) interface.\n\n%package mysql\nGroup: Development/Libraries\nSummary: APR utility library MySQL DBD driver\nBuildRequires: mysql-devel\nRequires: apr-util = %{version}-%{release}\n",
                      "markdown": "`This package provides the PostgreSQL driver for the apr-util\nDBD (database abstraction) interface.\n\n%package mysql\nGroup: Development/Libraries\nSummary: APR utility library MySQL DBD driver\nBuildRequires: mysql-devel\nRequires: apr-util = %{version}-%{release}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/pkg/README"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 3,
                  "endLine": 1,
                  "endColumn": 11,
                  "snippet": {
                    "text": "The script in this directory will attempt to build a Solaris package\nout of a source tree for APR-util.\n\nTo build a package, make sure you are in the root of the source tree,\n",
                    "rendered": {
                      "text": "The script in this directory will attempt to build a Solaris package\nout of a source tree for APR-util.\n\nTo build a package, make sure you are in the root of the source tree,\n",
                      "markdown": "`The script in this directory will attempt to build a Solaris package\nout of a source tree for APR-util.\n\nTo build a package, make sure you are in the root of the source tree,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/find_apu.m4"
                },
                "region": {
                  "startLine": 176,
                  "startColumn": 45,
                  "endLine": 176,
                  "endColumn": 49,
                  "snippet": {
                    "text": "              apu_acceptable=\"yes\"\n              $5\n              if test \"$apu_acceptable\" != \"yes\"; then\n                AC_MSG_WARN([skipped APR-util at $apu_config, version not acceptable])\n                continue\n              fi])\n              apu_found=\"yes\"\n",
                    "rendered": {
                      "text": "              apu_acceptable=\"yes\"\n              $5\n              if test \"$apu_acceptable\" != \"yes\"; then\n                AC_MSG_WARN([skipped APR-util at $apu_config, version not acceptable])\n                continue\n              fi])\n              apu_found=\"yes\"\n",
                      "markdown": "`              apu_acceptable=\"yes\"\n              $5\n              if test \"$apu_acceptable\" != \"yes\"; then\n                AC_MSG_WARN([skipped APR-util at $apu_config, version not acceptable])\n                continue\n              fi])\n              apu_found=\"yes\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/find_apu.m4"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 41,
                  "endLine": 162,
                  "endColumn": 45,
                  "snippet": {
                    "text": "          apu_acceptable=\"yes\"\n          $5\n          if test \"$apu_acceptable\" != \"yes\"; then\n            AC_MSG_WARN([skipped APR-util at $apu_config, version not acceptable])\n            continue\n          fi])\n          apu_found=\"yes\"\n",
                    "rendered": {
                      "text": "          apu_acceptable=\"yes\"\n          $5\n          if test \"$apu_acceptable\" != \"yes\"; then\n            AC_MSG_WARN([skipped APR-util at $apu_config, version not acceptable])\n            continue\n          fi])\n          apu_found=\"yes\"\n",
                      "markdown": "`          apu_acceptable=\"yes\"\n          $5\n          if test \"$apu_acceptable\" != \"yes\"; then\n            AC_MSG_WARN([skipped APR-util at $apu_config, version not acceptable])\n            continue\n          fi])\n          apu_found=\"yes\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/find_apu.m4"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 9,
                  "endLine": 62,
                  "endColumn": 13,
                  "snippet": {
                    "text": "dnl Note: this macro file assumes that apr-config has been installed; it\ndnl       is normally considered a required part of an APR installation.\ndnl\ndnl Note: At this time, we cannot find *both* a source dir and a build dir.\ndnl       If both are available, the build directory should be passed to\ndnl       the --with-apr-util switch.\ndnl\n",
                    "rendered": {
                      "text": "dnl Note: this macro file assumes that apr-config has been installed; it\ndnl       is normally considered a required part of an APR installation.\ndnl\ndnl Note: At this time, we cannot find *both* a source dir and a build dir.\ndnl       If both are available, the build directory should be passed to\ndnl       the --with-apr-util switch.\ndnl\n",
                      "markdown": "`dnl Note: this macro file assumes that apr-config has been installed; it\ndnl       is normally considered a required part of an APR installation.\ndnl\ndnl Note: At this time, we cannot find *both* a source dir and a build dir.\ndnl       If both are available, the build directory should be passed to\ndnl       the --with-apr-util switch.\ndnl\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/find_apu.m4"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 54,
                  "endLine": 8,
                  "snippet": {
                    "text": "dnl this work for additional information regarding copyright ownership.\ndnl The ASF licenses this file to You under the Apache License, Version 2.0\ndnl (the \"License\"); you may not use this file except in compliance with\ndnl the License.  You may obtain a copy of the License at\ndnl\ndnl     http://www.apache.org/licenses/LICENSE-2.0\ndnl\ndnl Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "dnl this work for additional information regarding copyright ownership.\ndnl The ASF licenses this file to You under the Apache License, Version 2.0\ndnl (the \"License\"); you may not use this file except in compliance with\ndnl the License.  You may obtain a copy of the License at\ndnl\ndnl     http://www.apache.org/licenses/LICENSE-2.0\ndnl\ndnl Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`dnl this work for additional information regarding copyright ownership.\ndnl The ASF licenses this file to You under the Apache License, Version 2.0\ndnl (the \"License\"); you may not use this file except in compliance with\ndnl the License.  You may obtain a copy of the License at\ndnl\ndnl     http://www.apache.org/licenses/LICENSE-2.0\ndnl\ndnl Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/find_apu.m4"
                },
                "region": {
                  "startLine": 193,
                  "startColumn": 33,
                  "endLine": 193,
                  "endColumn": 39,
                  "snippet": {
                    "text": "      apu_bundled_major=\"`sed -n '/#define.*APU_MAJOR_VERSION/s/^[^0-9]*\\([0-9]*\\).*$/\\1/p' \\\"$1/include/apu_version.h\\\"`\"\n      case $apu_bundled_major in\n        \"\")\n          AC_MSG_ERROR([failed to find major version of bundled APU])\n        ;;\n        0)\n          apu_temp_apu_config_file=\"apu-config\"\n",
                    "rendered": {
                      "text": "      apu_bundled_major=\"`sed -n '/#define.*APU_MAJOR_VERSION/s/^[^0-9]*\\([0-9]*\\).*$/\\1/p' \\\"$1/include/apu_version.h\\\"`\"\n      case $apu_bundled_major in\n        \"\")\n          AC_MSG_ERROR([failed to find major version of bundled APU])\n        ;;\n        0)\n          apu_temp_apu_config_file=\"apu-config\"\n",
                      "markdown": "`      apu_bundled_major=\"`sed -n '/#define.*APU_MAJOR_VERSION/s/^[^0-9]*\\([0-9]*\\).*$/\\1/p' \\\"$1/include/apu_version.h\\\"`\"\n      case $apu_bundled_major in\n        \"\")\n          AC_MSG_ERROR([failed to find major version of bundled APU])\n        ;;\n        0)\n          apu_temp_apu_config_file=\"apu-config\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/find_apu.m4"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 33,
                  "endLine": 62,
                  "endColumn": 39,
                  "snippet": {
                    "text": "dnl Note: this macro file assumes that apr-config has been installed; it\ndnl       is normally considered a required part of an APR installation.\ndnl\ndnl Note: At this time, we cannot find *both* a source dir and a build dir.\ndnl       If both are available, the build directory should be passed to\ndnl       the --with-apr-util switch.\ndnl\n",
                    "rendered": {
                      "text": "dnl Note: this macro file assumes that apr-config has been installed; it\ndnl       is normally considered a required part of an APR installation.\ndnl\ndnl Note: At this time, we cannot find *both* a source dir and a build dir.\ndnl       If both are available, the build directory should be passed to\ndnl       the --with-apr-util switch.\ndnl\n",
                      "markdown": "`dnl Note: this macro file assumes that apr-config has been installed; it\ndnl       is normally considered a required part of an APR installation.\ndnl\ndnl Note: At this time, we cannot find *both* a source dir and a build dir.\ndnl       If both are available, the build directory should be passed to\ndnl       the --with-apr-util switch.\ndnl\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/find_apu.m4"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 50,
                  "endLine": 20,
                  "endColumn": 56,
                  "snippet": {
                    "text": "dnl\ndnl find_apu.m4 : locate the APR-util (APU) include files and libraries\ndnl\ndnl This macro file can be used by applications to find and use the APU\ndnl library. It provides a standardized mechanism for using APU. It supports\ndnl embedding APU into the application source, or locating an installed\ndnl copy of APU.\n",
                    "rendered": {
                      "text": "dnl\ndnl find_apu.m4 : locate the APR-util (APU) include files and libraries\ndnl\ndnl This macro file can be used by applications to find and use the APU\ndnl library. It provides a standardized mechanism for using APU. It supports\ndnl embedding APU into the application source, or locating an installed\ndnl copy of APU.\n",
                      "markdown": "`dnl\ndnl find_apu.m4 : locate the APR-util (APU) include files and libraries\ndnl\ndnl This macro file can be used by applications to find and use the APU\ndnl library. It provides a standardized mechanism for using APU. It supports\ndnl embedding APU into the application source, or locating an installed\ndnl copy of APU.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/mkdir.sh"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 14,
                  "endLine": 19,
                  "endColumn": 19,
                  "snippet": {
                    "text": "errstatus=0\nfor file in ${1+\"$@\"} ; do \n    set fnord `echo \":$file\" |\\\n               sed -e 's/^:\\//%/' -e 's/^://' -e 's/\\// /g' -e 's/^%/\\//'`\n    shift\n    pathcomp=\n    for d in ${1+\"$@\"}; do\n",
                    "rendered": {
                      "text": "errstatus=0\nfor file in ${1+\"$@\"} ; do \n    set fnord `echo \":$file\" |\\\n               sed -e 's/^:\\//%/' -e 's/^://' -e 's/\\// /g' -e 's/^%/\\//'`\n    shift\n    pathcomp=\n    for d in ${1+\"$@\"}; do\n",
                      "markdown": "`errstatus=0\nfor file in ${1+\"$@\"} ; do \n    set fnord `echo \":$file\" |\\\n               sed -e 's/^:\\//%/' -e 's/^://' -e 's/\\// /g' -e 's/^%/\\//'`\n    shift\n    pathcomp=\n    for d in ${1+\"$@\"}; do\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/mkdir.sh"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 6,
                  "endLine": 11,
                  "endColumn": 14,
                  "snippet": {
                    "text": "##  by Ralf S. Engelschall <rse@apache.org>\n##\n#\n# This script falls under the Apache License.\n# See http://www.apache.org/docs/LICENSE\n\n\n",
                    "rendered": {
                      "text": "##  by Ralf S. Engelschall <rse@apache.org>\n##\n#\n# This script falls under the Apache License.\n# See http://www.apache.org/docs/LICENSE\n\n\n",
                      "markdown": "`##  by Ralf S. Engelschall <rse@apache.org>\n##\n#\n# This script falls under the Apache License.\n# See http://www.apache.org/docs/LICENSE\n\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/apu-iconv.m4"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 54,
                  "endLine": 8,
                  "snippet": {
                    "text": "dnl this work for additional information regarding copyright ownership.\ndnl The ASF licenses this file to You under the Apache License, Version 2.0\ndnl (the \"License\"); you may not use this file except in compliance with\ndnl the License.  You may obtain a copy of the License at\ndnl\ndnl     http://www.apache.org/licenses/LICENSE-2.0\ndnl\ndnl Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "dnl this work for additional information regarding copyright ownership.\ndnl The ASF licenses this file to You under the Apache License, Version 2.0\ndnl (the \"License\"); you may not use this file except in compliance with\ndnl the License.  You may obtain a copy of the License at\ndnl\ndnl     http://www.apache.org/licenses/LICENSE-2.0\ndnl\ndnl Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`dnl this work for additional information regarding copyright ownership.\ndnl The ASF licenses this file to You under the Apache License, Version 2.0\ndnl (the \"License\"); you may not use this file except in compliance with\ndnl the License.  You may obtain a copy of the License at\ndnl\ndnl     http://www.apache.org/licenses/LICENSE-2.0\ndnl\ndnl Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/apu-iconv.m4"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 19,
                  "endLine": 32,
                  "endColumn": 25,
                  "snippet": {
                    "text": "])\n\ndnl\ndnl APU_FIND_ICONV: find an iconv library\ndnl\nAC_DEFUN([APU_FIND_ICONV], [\n\n",
                    "rendered": {
                      "text": "])\n\ndnl\ndnl APU_FIND_ICONV: find an iconv library\ndnl\nAC_DEFUN([APU_FIND_ICONV], [\n\n",
                      "markdown": "`])\n\ndnl\ndnl APU_FIND_ICONV: find an iconv library\ndnl\nAC_DEFUN([APU_FIND_ICONV], [\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/dbd.m4"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 54,
                  "endLine": 8,
                  "snippet": {
                    "text": "dnl this work for additional information regarding copyright ownership.\ndnl The ASF licenses this file to You under the Apache License, Version 2.0\ndnl (the \"License\"); you may not use this file except in compliance with\ndnl the License.  You may obtain a copy of the License at\ndnl\ndnl     http://www.apache.org/licenses/LICENSE-2.0\ndnl\ndnl Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "dnl this work for additional information regarding copyright ownership.\ndnl The ASF licenses this file to You under the Apache License, Version 2.0\ndnl (the \"License\"); you may not use this file except in compliance with\ndnl the License.  You may obtain a copy of the License at\ndnl\ndnl     http://www.apache.org/licenses/LICENSE-2.0\ndnl\ndnl Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`dnl this work for additional information regarding copyright ownership.\ndnl The ASF licenses this file to You under the Apache License, Version 2.0\ndnl (the \"License\"); you may not use this file except in compliance with\ndnl the License.  You may obtain a copy of the License at\ndnl\ndnl     http://www.apache.org/licenses/LICENSE-2.0\ndnl\ndnl Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/dbd.m4"
                },
                "region": {
                  "startLine": 271,
                  "startColumn": 32,
                  "endLine": 271,
                  "endColumn": 41,
                  "snippet": {
                    "text": "      APR_ADDTO(CPPFLAGS, [$sqlite3_CPPFLAGS])\n      APR_ADDTO(LDFLAGS, [$sqlite3_LDFLAGS])\n\n      AC_MSG_NOTICE(checking for sqlite3 in $withval)\n      AC_CHECK_HEADERS(sqlite3.h, AC_CHECK_LIB(sqlite3, sqlite3_open, [apu_have_sqlite3=1]))\n      if test \"$apu_have_sqlite3\" != \"0\"; then\n        APR_ADDTO(APRUTIL_PRIV_INCLUDES, [-I$withval/include])\n",
                    "rendered": {
                      "text": "      APR_ADDTO(CPPFLAGS, [$sqlite3_CPPFLAGS])\n      APR_ADDTO(LDFLAGS, [$sqlite3_LDFLAGS])\n\n      AC_MSG_NOTICE(checking for sqlite3 in $withval)\n      AC_CHECK_HEADERS(sqlite3.h, AC_CHECK_LIB(sqlite3, sqlite3_open, [apu_have_sqlite3=1]))\n      if test \"$apu_have_sqlite3\" != \"0\"; then\n        APR_ADDTO(APRUTIL_PRIV_INCLUDES, [-I$withval/include])\n",
                      "markdown": "`      APR_ADDTO(CPPFLAGS, [$sqlite3_CPPFLAGS])\n      APR_ADDTO(LDFLAGS, [$sqlite3_LDFLAGS])\n\n      AC_MSG_NOTICE(checking for sqlite3 in $withval)\n      AC_CHECK_HEADERS(sqlite3.h, AC_CHECK_LIB(sqlite3, sqlite3_open, [apu_have_sqlite3=1]))\n      if test \"$apu_have_sqlite3\" != \"0\"; then\n        APR_ADDTO(APRUTIL_PRIV_INCLUDES, [-I$withval/include])\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/dbd.m4"
                },
                "region": {
                  "startLine": 258,
                  "startColumn": 70,
                  "endLine": 258,
                  "endColumn": 79,
                  "snippet": {
                    "text": "  old_cppflags=\"$CPPFLAGS\"\n  old_ldflags=\"$LDFLAGS\"\n\n  AC_ARG_WITH([sqlite3], APR_HELP_STRING([--with-sqlite3=DIR], [enable sqlite3 DBD driver]),\n  [\n    if test \"$withval\" = \"yes\"; then\n      AC_CHECK_HEADERS(sqlite3.h, AC_CHECK_LIB(sqlite3, sqlite3_open, [apu_have_sqlite3=1]))\n",
                    "rendered": {
                      "text": "  old_cppflags=\"$CPPFLAGS\"\n  old_ldflags=\"$LDFLAGS\"\n\n  AC_ARG_WITH([sqlite3], APR_HELP_STRING([--with-sqlite3=DIR], [enable sqlite3 DBD driver]),\n  [\n    if test \"$withval\" = \"yes\"; then\n      AC_CHECK_HEADERS(sqlite3.h, AC_CHECK_LIB(sqlite3, sqlite3_open, [apu_have_sqlite3=1]))\n",
                      "markdown": "`  old_cppflags=\"$CPPFLAGS\"\n  old_ldflags=\"$LDFLAGS\"\n\n  AC_ARG_WITH([sqlite3], APR_HELP_STRING([--with-sqlite3=DIR], [enable sqlite3 DBD driver]),\n  [\n    if test \"$withval\" = \"yes\"; then\n      AC_CHECK_HEADERS(sqlite3.h, AC_CHECK_LIB(sqlite3, sqlite3_open, [apu_have_sqlite3=1]))\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/dbd.m4"
                },
                "region": {
                  "startLine": 222,
                  "startColumn": 32,
                  "endLine": 222,
                  "endColumn": 39,
                  "snippet": {
                    "text": "      APR_ADDTO(LDFLAGS, [$mysql_LDFLAGS])\n      APR_ADDTO(LIBS, [$mysql_LIBS])\n\n      AC_MSG_NOTICE(checking for mysql in $withval)\n      AC_CHECK_HEADERS([mysql.h errmsg.h], [apu_have_mysql=1], [apu_have_mysql=0; break])\n      if test \"$apr_have_mysql\" = \"0\"; then\n        AC_CHECK_HEADERS([mysql/mysql.h mysql/errmsg.h], [apu_have_mysql=1], [apu_have_mysql=0; break])\n",
                    "rendered": {
                      "text": "      APR_ADDTO(LDFLAGS, [$mysql_LDFLAGS])\n      APR_ADDTO(LIBS, [$mysql_LIBS])\n\n      AC_MSG_NOTICE(checking for mysql in $withval)\n      AC_CHECK_HEADERS([mysql.h errmsg.h], [apu_have_mysql=1], [apu_have_mysql=0; break])\n      if test \"$apr_have_mysql\" = \"0\"; then\n        AC_CHECK_HEADERS([mysql/mysql.h mysql/errmsg.h], [apu_have_mysql=1], [apu_have_mysql=0; break])\n",
                      "markdown": "`      APR_ADDTO(LDFLAGS, [$mysql_LDFLAGS])\n      APR_ADDTO(LIBS, [$mysql_LIBS])\n\n      AC_MSG_NOTICE(checking for mysql in $withval)\n      AC_CHECK_HEADERS([mysql.h errmsg.h], [apu_have_mysql=1], [apu_have_mysql=0; break])\n      if test \"$apr_have_mysql\" = \"0\"; then\n        AC_CHECK_HEADERS([mysql/mysql.h mysql/errmsg.h], [apu_have_mysql=1], [apu_have_mysql=0; break])\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/dbd.m4"
                },
                "region": {
                  "startLine": 210,
                  "startColumn": 35,
                  "endLine": 210,
                  "endColumn": 41,
                  "snippet": {
                    "text": "        mysql_CPPFLAGS=\"`$MYSQL_CONFIG --include`\"\n        mysql_LDFLAGS=\"`$MYSQL_CONFIG --libs_r | sed -e 's/-l[[^ ]]\\+//g'`\"\n        mysql_LIBS=\"`$MYSQL_CONFIG --libs_r`\"\n        if $MYSQL_CONFIG --libs_r | grep -q mariadb; then\n          my_library=\"mariadb\"\n        fi\n      else\n",
                    "rendered": {
                      "text": "        mysql_CPPFLAGS=\"`$MYSQL_CONFIG --include`\"\n        mysql_LDFLAGS=\"`$MYSQL_CONFIG --libs_r | sed -e 's/-l[[^ ]]\\+//g'`\"\n        mysql_LIBS=\"`$MYSQL_CONFIG --libs_r`\"\n        if $MYSQL_CONFIG --libs_r | grep -q mariadb; then\n          my_library=\"mariadb\"\n        fi\n      else\n",
                      "markdown": "`        mysql_CPPFLAGS=\"`$MYSQL_CONFIG --include`\"\n        mysql_LDFLAGS=\"`$MYSQL_CONFIG --libs_r | sed -e 's/-l[[^ ]]\\+//g'`\"\n        mysql_LIBS=\"`$MYSQL_CONFIG --libs_r`\"\n        if $MYSQL_CONFIG --libs_r | grep -q mariadb; then\n          my_library=\"mariadb\"\n        fi\n      else\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/dbd.m4"
                },
                "region": {
                  "startLine": 208,
                  "startColumn": 48,
                  "endLine": 208,
                  "endColumn": 53,
                  "snippet": {
                    "text": "      fi\n      if test \"x$MYSQL_CONFIG\" != 'x'; then\n        mysql_CPPFLAGS=\"`$MYSQL_CONFIG --include`\"\n        mysql_LDFLAGS=\"`$MYSQL_CONFIG --libs_r | sed -e 's/-l[[^ ]]\\+//g'`\"\n        mysql_LIBS=\"`$MYSQL_CONFIG --libs_r`\"\n        if $MYSQL_CONFIG --libs_r | grep -q mariadb; then\n          my_library=\"mariadb\"\n",
                    "rendered": {
                      "text": "      fi\n      if test \"x$MYSQL_CONFIG\" != 'x'; then\n        mysql_CPPFLAGS=\"`$MYSQL_CONFIG --include`\"\n        mysql_LDFLAGS=\"`$MYSQL_CONFIG --libs_r | sed -e 's/-l[[^ ]]\\+//g'`\"\n        mysql_LIBS=\"`$MYSQL_CONFIG --libs_r`\"\n        if $MYSQL_CONFIG --libs_r | grep -q mariadb; then\n          my_library=\"mariadb\"\n",
                      "markdown": "`      fi\n      if test \"x$MYSQL_CONFIG\" != 'x'; then\n        mysql_CPPFLAGS=\"`$MYSQL_CONFIG --include`\"\n        mysql_LDFLAGS=\"`$MYSQL_CONFIG --libs_r | sed -e 's/-l[[^ ]]\\+//g'`\"\n        mysql_LIBS=\"`$MYSQL_CONFIG --libs_r`\"\n        if $MYSQL_CONFIG --libs_r | grep -q mariadb; then\n          my_library=\"mariadb\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/dbd.m4"
                },
                "region": {
                  "startLine": 183,
                  "startColumn": 35,
                  "endLine": 183,
                  "endColumn": 41,
                  "snippet": {
                    "text": "        APR_ADDTO(CPPFLAGS, [$mysql_CPPFLAGS])\n        APR_ADDTO(LIBS, [$mysql_LIBS])\n\n        if $MYSQL_CONFIG --libs_r | grep -q mariadb; then\n          my_library=\"mariadb\"\n        fi\n      fi\n",
                    "rendered": {
                      "text": "        APR_ADDTO(CPPFLAGS, [$mysql_CPPFLAGS])\n        APR_ADDTO(LIBS, [$mysql_LIBS])\n\n        if $MYSQL_CONFIG --libs_r | grep -q mariadb; then\n          my_library=\"mariadb\"\n        fi\n      fi\n",
                      "markdown": "`        APR_ADDTO(CPPFLAGS, [$mysql_CPPFLAGS])\n        APR_ADDTO(LIBS, [$mysql_LIBS])\n\n        if $MYSQL_CONFIG --libs_r | grep -q mariadb; then\n          my_library=\"mariadb\"\n        fi\n      fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/dbd.m4"
                },
                "region": {
                  "startLine": 177,
                  "startColumn": 48,
                  "endLine": 177,
                  "endColumn": 53,
                  "snippet": {
                    "text": "      fi\n      if test \"x$MYSQL_CONFIG\" != 'x'; then\n        mysql_CPPFLAGS=\"`$MYSQL_CONFIG --include`\"\n        mysql_LDFLAGS=\"`$MYSQL_CONFIG --libs_r | sed -e 's/-l[[^ ]]\\+//g'`\"\n        mysql_LIBS=\"`$MYSQL_CONFIG --libs_r`\"\n\n        APR_ADDTO(CPPFLAGS, [$mysql_CPPFLAGS])\n",
                    "rendered": {
                      "text": "      fi\n      if test \"x$MYSQL_CONFIG\" != 'x'; then\n        mysql_CPPFLAGS=\"`$MYSQL_CONFIG --include`\"\n        mysql_LDFLAGS=\"`$MYSQL_CONFIG --libs_r | sed -e 's/-l[[^ ]]\\+//g'`\"\n        mysql_LIBS=\"`$MYSQL_CONFIG --libs_r`\"\n\n        APR_ADDTO(CPPFLAGS, [$mysql_CPPFLAGS])\n",
                      "markdown": "`      fi\n      if test \"x$MYSQL_CONFIG\" != 'x'; then\n        mysql_CPPFLAGS=\"`$MYSQL_CONFIG --include`\"\n        mysql_LDFLAGS=\"`$MYSQL_CONFIG --libs_r | sed -e 's/-l[[^ ]]\\+//g'`\"\n        mysql_LIBS=\"`$MYSQL_CONFIG --libs_r`\"\n\n        APR_ADDTO(CPPFLAGS, [$mysql_CPPFLAGS])\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/dbd.m4"
                },
                "region": {
                  "startLine": 168,
                  "startColumn": 66,
                  "endLine": 168,
                  "endColumn": 73,
                  "snippet": {
                    "text": "\n  my_library=\"mysqlclient\"\n\n  AC_ARG_WITH([mysql], APR_HELP_STRING([--with-mysql=DIR], [enable MySQL DBD driver]),\n  [\n    if test \"$withval\" = \"yes\"; then\n      AC_PATH_PROG([MYSQL_CONFIG],[mysql_config])\n",
                    "rendered": {
                      "text": "\n  my_library=\"mysqlclient\"\n\n  AC_ARG_WITH([mysql], APR_HELP_STRING([--with-mysql=DIR], [enable MySQL DBD driver]),\n  [\n    if test \"$withval\" = \"yes\"; then\n      AC_PATH_PROG([MYSQL_CONFIG],[mysql_config])\n",
                      "markdown": "`\n  my_library=\"mysqlclient\"\n\n  AC_ARG_WITH([mysql], APR_HELP_STRING([--with-mysql=DIR], [enable MySQL DBD driver]),\n  [\n    if test \"$withval\" = \"yes\"; then\n      AC_PATH_PROG([MYSQL_CONFIG],[mysql_config])\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/dbm.m4"
                },
                "region": {
                  "startLine": 463,
                  "startColumn": 24,
                  "endLine": 463,
                  "endColumn": 28,
                  "snippet": {
                    "text": "AC_DEFUN([APU_CHECK_DB_ALL], [\n  all_places=$1\n\n  # Start version search at version 6.9\n  db_version=69\n  while [[ $db_version -ge 40 ]]\n  do\n",
                    "rendered": {
                      "text": "AC_DEFUN([APU_CHECK_DB_ALL], [\n  all_places=$1\n\n  # Start version search at version 6.9\n  db_version=69\n  while [[ $db_version -ge 40 ]]\n  do\n",
                      "markdown": "`AC_DEFUN([APU_CHECK_DB_ALL], [\n  all_places=$1\n\n  # Start version search at version 6.9\n  db_version=69\n  while [[ $db_version -ge 40 ]]\n  do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/dbm.m4"
                },
                "region": {
                  "startLine": 437,
                  "startColumn": 26,
                  "endLine": 437,
                  "endColumn": 30,
                  "snippet": {
                    "text": "    ;;\n  db[[456]])\n    db_major=`echo \"$requested\" | sed -e 's/db//'`\n    # Start version search at version x.9\n    db_minor=9\n    while [[ $db_minor -ge 0 ]]\n    do\n",
                    "rendered": {
                      "text": "    ;;\n  db[[456]])\n    db_major=`echo \"$requested\" | sed -e 's/db//'`\n    # Start version search at version x.9\n    db_minor=9\n    while [[ $db_minor -ge 0 ]]\n    do\n",
                      "markdown": "`    ;;\n  db[[456]])\n    db_major=`echo \"$requested\" | sed -e 's/db//'`\n    # Start version search at version x.9\n    db_minor=9\n    while [[ $db_minor -ge 0 ]]\n    do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/dbm.m4"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 54,
                  "endLine": 8,
                  "snippet": {
                    "text": "dnl this work for additional information regarding copyright ownership.\ndnl The ASF licenses this file to You under the Apache License, Version 2.0\ndnl (the \"License\"); you may not use this file except in compliance with\ndnl the License.  You may obtain a copy of the License at\ndnl\ndnl     http://www.apache.org/licenses/LICENSE-2.0\ndnl\ndnl Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "dnl this work for additional information regarding copyright ownership.\ndnl The ASF licenses this file to You under the Apache License, Version 2.0\ndnl (the \"License\"); you may not use this file except in compliance with\ndnl the License.  You may obtain a copy of the License at\ndnl\ndnl     http://www.apache.org/licenses/LICENSE-2.0\ndnl\ndnl Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`dnl this work for additional information regarding copyright ownership.\ndnl The ASF licenses this file to You under the Apache License, Version 2.0\ndnl (the \"License\"); you may not use this file except in compliance with\ndnl the License.  You may obtain a copy of the License at\ndnl\ndnl     http://www.apache.org/licenses/LICENSE-2.0\ndnl\ndnl Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/dbm.m4"
                },
                "region": {
                  "startLine": 706,
                  "startColumn": 18,
                  "endLine": 706,
                  "endColumn": 24,
                  "snippet": {
                    "text": "      ;;\n  esac\n\n  dnl Yes, it'd be nice if we could collate the output in an order\n  dnl so that the AC_MSG_CHECKING would be output before the actual\n  dnl checks, but it isn't happening now.\n  AC_MSG_CHECKING(for default DBM)\n",
                    "rendered": {
                      "text": "      ;;\n  esac\n\n  dnl Yes, it'd be nice if we could collate the output in an order\n  dnl so that the AC_MSG_CHECKING would be output before the actual\n  dnl checks, but it isn't happening now.\n  AC_MSG_CHECKING(for default DBM)\n",
                      "markdown": "`      ;;\n  esac\n\n  dnl Yes, it'd be nice if we could collate the output in an order\n  dnl so that the AC_MSG_CHECKING would be output before the actual\n  dnl checks, but it isn't happening now.\n  AC_MSG_CHECKING(for default DBM)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/dbm.m4"
                },
                "region": {
                  "startLine": 693,
                  "startColumn": 40,
                  "endLine": 693,
                  "endColumn": 45,
                  "snippet": {
                    "text": "      ;;\n    db[[456]][[0-9]])\n      apu_use_db=1\n      apu_default_dbm=`echo $requested | sed -e 's/.$//'`\n      ;;\n    default)\n      dnl ### use more sophisticated DBMs for the default?\n",
                    "rendered": {
                      "text": "      ;;\n    db[[456]][[0-9]])\n      apu_use_db=1\n      apu_default_dbm=`echo $requested | sed -e 's/.$//'`\n      ;;\n    default)\n      dnl ### use more sophisticated DBMs for the default?\n",
                      "markdown": "`      ;;\n    db[[456]][[0-9]])\n      apu_use_db=1\n      apu_default_dbm=`echo $requested | sed -e 's/.$//'`\n      ;;\n    default)\n      dnl ### use more sophisticated DBMs for the default?\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/dbm.m4"
                },
                "region": {
                  "startLine": 657,
                  "startColumn": 48,
                  "endLine": 657,
                  "endColumn": 56,
                  "snippet": {
                    "text": "      [Find the Berkeley DB header and library in `PATH/include' and\n      `PATH/lib'.  If PATH is of the form `HEADER:LIB', then search\n      for header files in HEADER, and the library in LIB.  If you omit\n      the `=PATH' part completely, the configure script will search\n      for Berkeley DB in a number of standard places.])],\n  [\n    if test \"$withval\" = \"yes\"; then\n",
                    "rendered": {
                      "text": "      [Find the Berkeley DB header and library in `PATH/include' and\n      `PATH/lib'.  If PATH is of the form `HEADER:LIB', then search\n      for header files in HEADER, and the library in LIB.  If you omit\n      the `=PATH' part completely, the configure script will search\n      for Berkeley DB in a number of standard places.])],\n  [\n    if test \"$withval\" = \"yes\"; then\n",
                      "markdown": "`      [Find the Berkeley DB header and library in `PATH/include' and\n      `PATH/lib'.  If PATH is of the form `HEADER:LIB', then search\n      for header files in HEADER, and the library in LIB.  If you omit\n      the `=PATH' part completely, the configure script will search\n      for Berkeley DB in a number of standard places.])],\n  [\n    if test \"$withval\" = \"yes\"; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/dbm.m4"
                },
                "region": {
                  "startLine": 648,
                  "startColumn": 27,
                  "endLine": 648,
                  "endColumn": 33,
                  "snippet": {
                    "text": "    LIBS=\"$apu_db_xtra_libs $LIBS\"\n  fi\n\n  dnl We're going to try to find the highest version of Berkeley DB supported.\n  dnl\n  dnl Note that we only do this if the user requested it, since the Sleepycat\n  dnl license is viral and requires distribution of source along with programs\n",
                    "rendered": {
                      "text": "    LIBS=\"$apu_db_xtra_libs $LIBS\"\n  fi\n\n  dnl We're going to try to find the highest version of Berkeley DB supported.\n  dnl\n  dnl Note that we only do this if the user requested it, since the Sleepycat\n  dnl license is viral and requires distribution of source along with programs\n",
                      "markdown": "`    LIBS=\"$apu_db_xtra_libs $LIBS\"\n  fi\n\n  dnl We're going to try to find the highest version of Berkeley DB supported.\n  dnl\n  dnl Note that we only do this if the user requested it, since the Sleepycat\n  dnl license is viral and requires distribution of source along with programs\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/dbm.m4"
                },
                "region": {
                  "startLine": 584,
                  "startColumn": 48,
                  "endLine": 584,
                  "endColumn": 56,
                  "snippet": {
                    "text": "      Find the NDBM header and library in `PATH/include' and \n      `PATH/lib'.  If PATH is of the form `HEADER:LIB', then search \n      for header files in HEADER, and the library in LIB.  If you omit\n      the `=PATH' part completely, the configure script will search\n      for NDBM in a number of standard places.])],\n  [\n    apu_have_ndbm=0\n",
                    "rendered": {
                      "text": "      Find the NDBM header and library in `PATH/include' and \n      `PATH/lib'.  If PATH is of the form `HEADER:LIB', then search \n      for header files in HEADER, and the library in LIB.  If you omit\n      the `=PATH' part completely, the configure script will search\n      for NDBM in a number of standard places.])],\n  [\n    apu_have_ndbm=0\n",
                      "markdown": "`      Find the NDBM header and library in `PATH/include' and \n      `PATH/lib'.  If PATH is of the form `HEADER:LIB', then search \n      for header files in HEADER, and the library in LIB.  If you omit\n      the `=PATH' part completely, the configure script will search\n      for NDBM in a number of standard places.])],\n  [\n    apu_have_ndbm=0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/dbm.m4"
                },
                "region": {
                  "startLine": 581,
                  "startColumn": 5,
                  "endLine": 581,
                  "endColumn": 11,
                  "snippet": {
                    "text": "  ])\n\n  AC_ARG_WITH([ndbm], [APR_HELP_STRING([--with-ndbm=PATH], [\n      Find the NDBM header and library in `PATH/include' and \n      `PATH/lib'.  If PATH is of the form `HEADER:LIB', then search \n      for header files in HEADER, and the library in LIB.  If you omit\n      the `=PATH' part completely, the configure script will search\n",
                    "rendered": {
                      "text": "  ])\n\n  AC_ARG_WITH([ndbm], [APR_HELP_STRING([--with-ndbm=PATH], [\n      Find the NDBM header and library in `PATH/include' and \n      `PATH/lib'.  If PATH is of the form `HEADER:LIB', then search \n      for header files in HEADER, and the library in LIB.  If you omit\n      the `=PATH' part completely, the configure script will search\n",
                      "markdown": "`  ])\n\n  AC_ARG_WITH([ndbm], [APR_HELP_STRING([--with-ndbm=PATH], [\n      Find the NDBM header and library in `PATH/include' and \n      `PATH/lib'.  If PATH is of the form `HEADER:LIB', then search \n      for header files in HEADER, and the library in LIB.  If you omit\n      the `=PATH' part completely, the configure script will search\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/dbm.m4"
                },
                "region": {
                  "startLine": 468,
                  "startColumn": 32,
                  "endLine": 468,
                  "endColumn": 37,
                  "snippet": {
                    "text": "  while [[ $db_version -ge 40 ]]\n  do\n    db_major=`echo $db_version | sed -e 's/.$//'`\n    db_minor=`echo $db_version | sed -e 's/.//'`\n    APU_CHECK_DBXY(\"$all_places\", \"$db_major\", \"$db_minor\")\n    if test \"$apu_have_db\" = \"1\"; then\n      break\n",
                    "rendered": {
                      "text": "  while [[ $db_version -ge 40 ]]\n  do\n    db_major=`echo $db_version | sed -e 's/.$//'`\n    db_minor=`echo $db_version | sed -e 's/.//'`\n    APU_CHECK_DBXY(\"$all_places\", \"$db_major\", \"$db_minor\")\n    if test \"$apu_have_db\" = \"1\"; then\n      break\n",
                      "markdown": "`  while [[ $db_version -ge 40 ]]\n  do\n    db_major=`echo $db_version | sed -e 's/.$//'`\n    db_minor=`echo $db_version | sed -e 's/.//'`\n    APU_CHECK_DBXY(\"$all_places\", \"$db_major\", \"$db_minor\")\n    if test \"$apu_have_db\" = \"1\"; then\n      break\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/dbm.m4"
                },
                "region": {
                  "startLine": 467,
                  "startColumn": 32,
                  "endLine": 467,
                  "endColumn": 37,
                  "snippet": {
                    "text": "  db_version=69\n  while [[ $db_version -ge 40 ]]\n  do\n    db_major=`echo $db_version | sed -e 's/.$//'`\n    db_minor=`echo $db_version | sed -e 's/.//'`\n    APU_CHECK_DBXY(\"$all_places\", \"$db_major\", \"$db_minor\")\n    if test \"$apu_have_db\" = \"1\"; then\n",
                    "rendered": {
                      "text": "  db_version=69\n  while [[ $db_version -ge 40 ]]\n  do\n    db_major=`echo $db_version | sed -e 's/.$//'`\n    db_minor=`echo $db_version | sed -e 's/.//'`\n    APU_CHECK_DBXY(\"$all_places\", \"$db_major\", \"$db_minor\")\n    if test \"$apu_have_db\" = \"1\"; then\n",
                      "markdown": "`  db_version=69\n  while [[ $db_version -ge 40 ]]\n  do\n    db_major=`echo $db_version | sed -e 's/.$//'`\n    db_minor=`echo $db_version | sed -e 's/.//'`\n    APU_CHECK_DBXY(\"$all_places\", \"$db_major\", \"$db_minor\")\n    if test \"$apu_have_db\" = \"1\"; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/dbm.m4"
                },
                "region": {
                  "startLine": 436,
                  "startColumn": 33,
                  "endLine": 436,
                  "endColumn": 38,
                  "snippet": {
                    "text": "    fi\n    ;;\n  db[[456]])\n    db_major=`echo \"$requested\" | sed -e 's/db//'`\n    # Start version search at version x.9\n    db_minor=9\n    while [[ $db_minor -ge 0 ]]\n",
                    "rendered": {
                      "text": "    fi\n    ;;\n  db[[456]])\n    db_major=`echo \"$requested\" | sed -e 's/db//'`\n    # Start version search at version x.9\n    db_minor=9\n    while [[ $db_minor -ge 0 ]]\n",
                      "markdown": "`    fi\n    ;;\n  db[[456]])\n    db_major=`echo \"$requested\" | sed -e 's/db//'`\n    # Start version search at version x.9\n    db_minor=9\n    while [[ $db_minor -ge 0 ]]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/dbm.m4"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 33,
                  "endLine": 429,
                  "endColumn": 38,
                  "snippet": {
                    "text": "    ;;\n  db[[456]][[0-9]])\n    db_major=`echo \"$requested\" | sed -e 's/db//' -e 's/.$//'`\n    db_minor=`echo \"$requested\" | sed -e 's/db//' -e 's/.//'`\n    APU_CHECK_DBXY(\"$check_places\", \"$db_major\", \"$db_minor\")\n    if test \"$apu_db_version\" != \"$db_major\"; then\n      AC_MSG_ERROR(Berkeley db$db_major not found)\n",
                    "rendered": {
                      "text": "    ;;\n  db[[456]][[0-9]])\n    db_major=`echo \"$requested\" | sed -e 's/db//' -e 's/.$//'`\n    db_minor=`echo \"$requested\" | sed -e 's/db//' -e 's/.//'`\n    APU_CHECK_DBXY(\"$check_places\", \"$db_major\", \"$db_minor\")\n    if test \"$apu_db_version\" != \"$db_major\"; then\n      AC_MSG_ERROR(Berkeley db$db_major not found)\n",
                      "markdown": "`    ;;\n  db[[456]][[0-9]])\n    db_major=`echo \"$requested\" | sed -e 's/db//' -e 's/.$//'`\n    db_minor=`echo \"$requested\" | sed -e 's/db//' -e 's/.//'`\n    APU_CHECK_DBXY(\"$check_places\", \"$db_major\", \"$db_minor\")\n    if test \"$apu_db_version\" != \"$db_major\"; then\n      AC_MSG_ERROR(Berkeley db$db_major not found)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/dbm.m4"
                },
                "region": {
                  "startLine": 428,
                  "startColumn": 33,
                  "endLine": 428,
                  "endColumn": 38,
                  "snippet": {
                    "text": "    fi\n    ;;\n  db[[456]][[0-9]])\n    db_major=`echo \"$requested\" | sed -e 's/db//' -e 's/.$//'`\n    db_minor=`echo \"$requested\" | sed -e 's/db//' -e 's/.//'`\n    APU_CHECK_DBXY(\"$check_places\", \"$db_major\", \"$db_minor\")\n    if test \"$apu_db_version\" != \"$db_major\"; then\n",
                    "rendered": {
                      "text": "    fi\n    ;;\n  db[[456]][[0-9]])\n    db_major=`echo \"$requested\" | sed -e 's/db//' -e 's/.$//'`\n    db_minor=`echo \"$requested\" | sed -e 's/db//' -e 's/.//'`\n    APU_CHECK_DBXY(\"$check_places\", \"$db_major\", \"$db_minor\")\n    if test \"$apu_db_version\" != \"$db_major\"; then\n",
                      "markdown": "`    fi\n    ;;\n  db[[456]][[0-9]])\n    db_major=`echo \"$requested\" | sed -e 's/db//' -e 's/.$//'`\n    db_minor=`echo \"$requested\" | sed -e 's/db//' -e 's/.//'`\n    APU_CHECK_DBXY(\"$check_places\", \"$db_major\", \"$db_minor\")\n    if test \"$apu_db_version\" != \"$db_major\"; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/dbm.m4"
                },
                "region": {
                  "startLine": 210,
                  "startColumn": 5,
                  "endLine": 210,
                  "endColumn": 11,
                  "snippet": {
                    "text": "dnl   an appropriate version installed, or `no' otherwise.\ndnl\ndnl   This macro uses the Berkeley DB library function `db_version' to\ndnl   find the version.  If the library installed doesn't have this\ndnl   function, then this macro assumes it is too old.\n\ndnl   NOTE: This is pretty messed up.  It seems that the FreeBSD port of\n",
                    "rendered": {
                      "text": "dnl   an appropriate version installed, or `no' otherwise.\ndnl\ndnl   This macro uses the Berkeley DB library function `db_version' to\ndnl   find the version.  If the library installed doesn't have this\ndnl   function, then this macro assumes it is too old.\n\ndnl   NOTE: This is pretty messed up.  It seems that the FreeBSD port of\n",
                      "markdown": "`dnl   an appropriate version installed, or `no' otherwise.\ndnl\ndnl   This macro uses the Berkeley DB library function `db_version' to\ndnl   find the version.  If the library installed doesn't have this\ndnl   function, then this macro assumes it is too old.\n\ndnl   NOTE: This is pretty messed up.  It seems that the FreeBSD port of\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/dbm.m4"
                },
                "region": {
                  "startLine": 176,
                  "startColumn": 23,
                  "endLine": 176,
                  "endColumn": 28,
                  "snippet": {
                    "text": "    ;;\n  *\":\"*)\n    header=\"`echo $found | sed -e 's/:.*$//'`\"\n    lib=\"`echo $found | sed -e 's/^.*://'`\"\n\n    APR_ADDTO(APRUTIL_INCLUDES, [-I$header])\n    APR_ADDTO(APRUTIL_LDFLAGS, [-L$lib])\n",
                    "rendered": {
                      "text": "    ;;\n  *\":\"*)\n    header=\"`echo $found | sed -e 's/:.*$//'`\"\n    lib=\"`echo $found | sed -e 's/^.*://'`\"\n\n    APR_ADDTO(APRUTIL_INCLUDES, [-I$header])\n    APR_ADDTO(APRUTIL_LDFLAGS, [-L$lib])\n",
                      "markdown": "`    ;;\n  *\":\"*)\n    header=\"`echo $found | sed -e 's/:.*$//'`\"\n    lib=\"`echo $found | sed -e 's/^.*://'`\"\n\n    APR_ADDTO(APRUTIL_INCLUDES, [-I$header])\n    APR_ADDTO(APRUTIL_LDFLAGS, [-L$lib])\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/dbm.m4"
                },
                "region": {
                  "startLine": 175,
                  "startColumn": 26,
                  "endLine": 175,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    apu_have_db=1\n    ;;\n  *\":\"*)\n    header=\"`echo $found | sed -e 's/:.*$//'`\"\n    lib=\"`echo $found | sed -e 's/^.*://'`\"\n\n    APR_ADDTO(APRUTIL_INCLUDES, [-I$header])\n",
                    "rendered": {
                      "text": "    apu_have_db=1\n    ;;\n  *\":\"*)\n    header=\"`echo $found | sed -e 's/:.*$//'`\"\n    lib=\"`echo $found | sed -e 's/^.*://'`\"\n\n    APR_ADDTO(APRUTIL_INCLUDES, [-I$header])\n",
                      "markdown": "`    apu_have_db=1\n    ;;\n  *\":\"*)\n    header=\"`echo $found | sed -e 's/:.*$//'`\"\n    lib=\"`echo $found | sed -e 's/^.*://'`\"\n\n    APR_ADDTO(APRUTIL_INCLUDES, [-I$header])\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/dbm.m4"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 22,
                  "endLine": 122,
                  "endColumn": 27,
                  "snippet": {
                    "text": "            # switches.\n            changequote(,)\n            cache_id=\"`echo apu_cv_check_berkeley_db_$1_$2_$3_${bdb_header}_${bdb_libname}_in_${bdb_place} \\\n                     | sed -e 's/[^a-zA-Z0-9_]/_/g'`\"\n            changequote([,])\n\n            AC_MSG_CHECKING([for -l$bdb_libname])\n",
                    "rendered": {
                      "text": "            # switches.\n            changequote(,)\n            cache_id=\"`echo apu_cv_check_berkeley_db_$1_$2_$3_${bdb_header}_${bdb_libname}_in_${bdb_place} \\\n                     | sed -e 's/[^a-zA-Z0-9_]/_/g'`\"\n            changequote([,])\n\n            AC_MSG_CHECKING([for -l$bdb_libname])\n",
                      "markdown": "`            # switches.\n            changequote(,)\n            cache_id=\"`echo apu_cv_check_berkeley_db_$1_$2_$3_${bdb_header}_${bdb_libname}_in_${bdb_place} \\\n                     | sed -e 's/[^a-zA-Z0-9_]/_/g'`\"\n            changequote([,])\n\n            AC_MSG_CHECKING([for -l$bdb_libname])\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/dbm.m4"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 18,
                  "endLine": 111,
                  "endColumn": 23,
                  "snippet": {
                    "text": "        # Clear the header cache variable for each location\n        changequote(,)\n        cache_id=\"`echo ac_cv_header_${bdb_header} \\\n                 | sed -e 's/[^a-zA-Z0-9_]/_/g'`\"\n        changequote([,])\n        unset $cache_id\n        AC_CHECK_HEADER([$bdb_header], [\n",
                    "rendered": {
                      "text": "        # Clear the header cache variable for each location\n        changequote(,)\n        cache_id=\"`echo ac_cv_header_${bdb_header} \\\n                 | sed -e 's/[^a-zA-Z0-9_]/_/g'`\"\n        changequote([,])\n        unset $cache_id\n        AC_CHECK_HEADER([$bdb_header], [\n",
                      "markdown": "`        # Clear the header cache variable for each location\n        changequote(,)\n        cache_id=\"`echo ac_cv_header_${bdb_header} \\\n                 | sed -e 's/[^a-zA-Z0-9_]/_/g'`\"\n        changequote([,])\n        unset $cache_id\n        AC_CHECK_HEADER([$bdb_header], [\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/dbm.m4"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 31,
                  "endLine": 83,
                  "endColumn": 36,
                  "snippet": {
                    "text": "      ;;\n      *\":\"* )\n        header=\"`echo $bdb_place | sed -e 's/:.*$//'`\"\n        lib=\"`echo $bdb_place | sed -e 's/^.*://'`\"\n        CPPFLAGS=\"$CPPFLAGS -I$header\"\n        LDFLAGS=\"$LDFLAGS -L$lib\"\n        description=\"$header and $lib\"\n",
                    "rendered": {
                      "text": "      ;;\n      *\":\"* )\n        header=\"`echo $bdb_place | sed -e 's/:.*$//'`\"\n        lib=\"`echo $bdb_place | sed -e 's/^.*://'`\"\n        CPPFLAGS=\"$CPPFLAGS -I$header\"\n        LDFLAGS=\"$LDFLAGS -L$lib\"\n        description=\"$header and $lib\"\n",
                      "markdown": "`      ;;\n      *\":\"* )\n        header=\"`echo $bdb_place | sed -e 's/:.*$//'`\"\n        lib=\"`echo $bdb_place | sed -e 's/^.*://'`\"\n        CPPFLAGS=\"$CPPFLAGS -I$header\"\n        LDFLAGS=\"$LDFLAGS -L$lib\"\n        description=\"$header and $lib\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/dbm.m4"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 34,
                  "endLine": 82,
                  "endColumn": 39,
                  "snippet": {
                    "text": "        description=\"the standard places\"\n      ;;\n      *\":\"* )\n        header=\"`echo $bdb_place | sed -e 's/:.*$//'`\"\n        lib=\"`echo $bdb_place | sed -e 's/^.*://'`\"\n        CPPFLAGS=\"$CPPFLAGS -I$header\"\n        LDFLAGS=\"$LDFLAGS -L$lib\"\n",
                    "rendered": {
                      "text": "        description=\"the standard places\"\n      ;;\n      *\":\"* )\n        header=\"`echo $bdb_place | sed -e 's/:.*$//'`\"\n        lib=\"`echo $bdb_place | sed -e 's/^.*://'`\"\n        CPPFLAGS=\"$CPPFLAGS -I$header\"\n        LDFLAGS=\"$LDFLAGS -L$lib\"\n",
                      "markdown": "`        description=\"the standard places\"\n      ;;\n      *\":\"* )\n        header=\"`echo $bdb_place | sed -e 's/:.*$//'`\"\n        lib=\"`echo $bdb_place | sed -e 's/^.*://'`\"\n        CPPFLAGS=\"$CPPFLAGS -I$header\"\n        LDFLAGS=\"$LDFLAGS -L$lib\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/dbm.m4"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 54,
                  "endLine": 46,
                  "endColumn": 62,
                  "snippet": {
                    "text": "dnl\ndnl   We cache the results of individual searches under particular\ndnl   prefixes, not the overall result of whether we found Berkeley\ndnl   DB.  That way, the user can re-run the configure script with\ndnl   different --with-berkeley-db switch values, without interference\ndnl   from the cache.\n\n",
                    "rendered": {
                      "text": "dnl\ndnl   We cache the results of individual searches under particular\ndnl   prefixes, not the overall result of whether we found Berkeley\ndnl   DB.  That way, the user can re-run the configure script with\ndnl   different --with-berkeley-db switch values, without interference\ndnl   from the cache.\n\n",
                      "markdown": "`dnl\ndnl   We cache the results of individual searches under particular\ndnl   prefixes, not the overall result of whether we found Berkeley\ndnl   DB.  That way, the user can re-run the configure script with\ndnl   different --with-berkeley-db switch values, without interference\ndnl   from the cache.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/dbm.m4"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 47,
                  "endLine": 40,
                  "endColumn": 53,
                  "snippet": {
                    "text": "dnl\ndnl   This macro also checks for the `--with-berkeley-db=PATH' flag;\ndnl   if given, the macro will use the PATH specified, and the\ndnl   configuration script will die if it can't find the library.  If\ndnl   the user gives the `--without-berkeley-db' flag, the entire\ndnl   search is skipped.\ndnl\n",
                    "rendered": {
                      "text": "dnl\ndnl   This macro also checks for the `--with-berkeley-db=PATH' flag;\ndnl   if given, the macro will use the PATH specified, and the\ndnl   configuration script will die if it can't find the library.  If\ndnl   the user gives the `--without-berkeley-db' flag, the entire\ndnl   search is skipped.\ndnl\n",
                      "markdown": "`dnl\ndnl   This macro also checks for the `--with-berkeley-db=PATH' flag;\ndnl   if given, the macro will use the PATH specified, and the\ndnl   configuration script will die if it can't find the library.  If\ndnl   the user gives the `--without-berkeley-db' flag, the entire\ndnl   search is skipped.\ndnl\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/dbm.m4"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 19,
                  "endLine": 40,
                  "endColumn": 27,
                  "snippet": {
                    "text": "dnl\ndnl   This macro also checks for the `--with-berkeley-db=PATH' flag;\ndnl   if given, the macro will use the PATH specified, and the\ndnl   configuration script will die if it can't find the library.  If\ndnl   the user gives the `--without-berkeley-db' flag, the entire\ndnl   search is skipped.\ndnl\n",
                    "rendered": {
                      "text": "dnl\ndnl   This macro also checks for the `--with-berkeley-db=PATH' flag;\ndnl   if given, the macro will use the PATH specified, and the\ndnl   configuration script will die if it can't find the library.  If\ndnl   the user gives the `--without-berkeley-db' flag, the entire\ndnl   search is skipped.\ndnl\n",
                      "markdown": "`dnl\ndnl   This macro also checks for the `--with-berkeley-db=PATH' flag;\ndnl   if given, the macro will use the PATH specified, and the\ndnl   configuration script will die if it can't find the library.  If\ndnl   the user gives the `--without-berkeley-db' flag, the entire\ndnl   search is skipped.\ndnl\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/dbm.m4"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 11,
                  "endLine": 33,
                  "endColumn": 17,
                  "snippet": {
                    "text": "dnl   is a list of names of the library to attempt to link against,\ndnl   typically 'db' and 'db4'.\ndnl\ndnl   If we find a useable version, set CPPFLAGS and LIBS as\ndnl   appropriate, and set the shell variable `apu_have_db' to\ndnl   `1', and apu_db_lib to the matching lib name, and apu_db_header\ndnl   to the header to use.  Otherwise, set `apu_have_db' to `0'.\n",
                    "rendered": {
                      "text": "dnl   is a list of names of the library to attempt to link against,\ndnl   typically 'db' and 'db4'.\ndnl\ndnl   If we find a useable version, set CPPFLAGS and LIBS as\ndnl   appropriate, and set the shell variable `apu_have_db' to\ndnl   `1', and apu_db_lib to the matching lib name, and apu_db_header\ndnl   to the header to use.  Otherwise, set `apu_have_db' to `0'.\n",
                      "markdown": "`dnl   is a list of names of the library to attempt to link against,\ndnl   typically 'db' and 'db4'.\ndnl\ndnl   If we find a useable version, set CPPFLAGS and LIBS as\ndnl   appropriate, and set the shell variable `apu_have_db' to\ndnl   `1', and apu_db_lib to the matching lib name, and apu_db_header\ndnl   to the header to use.  Otherwise, set `apu_have_db' to `0'.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/apu-conf.m4"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 54,
                  "endLine": 8,
                  "snippet": {
                    "text": "dnl this work for additional information regarding copyright ownership.\ndnl The ASF licenses this file to You under the Apache License, Version 2.0\ndnl (the \"License\"); you may not use this file except in compliance with\ndnl the License.  You may obtain a copy of the License at\ndnl\ndnl     http://www.apache.org/licenses/LICENSE-2.0\ndnl\ndnl Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "dnl this work for additional information regarding copyright ownership.\ndnl The ASF licenses this file to You under the Apache License, Version 2.0\ndnl (the \"License\"); you may not use this file except in compliance with\ndnl the License.  You may obtain a copy of the License at\ndnl\ndnl     http://www.apache.org/licenses/LICENSE-2.0\ndnl\ndnl Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`dnl this work for additional information regarding copyright ownership.\ndnl The ASF licenses this file to You under the Apache License, Version 2.0\ndnl (the \"License\"); you may not use this file except in compliance with\ndnl the License.  You may obtain a copy of the License at\ndnl\ndnl     http://www.apache.org/licenses/LICENSE-2.0\ndnl\ndnl Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/apu-conf.m4"
                },
                "region": {
                  "startLine": 158,
                  "startColumn": 30,
                  "endLine": 158,
                  "endColumn": 36,
                  "snippet": {
                    "text": "      fi\n\n      if test ${apu_has_ldap} != \"1\"; then\n        AC_MSG_ERROR(could not find an LDAP library)\n      else\n        APR_ADDTO(LDADD_ldap, [$LDADD_ldap_found])\n      fi\n",
                    "rendered": {
                      "text": "      fi\n\n      if test ${apu_has_ldap} != \"1\"; then\n        AC_MSG_ERROR(could not find an LDAP library)\n      else\n        APR_ADDTO(LDADD_ldap, [$LDADD_ldap_found])\n      fi\n",
                      "markdown": "`      fi\n\n      if test ${apu_has_ldap} != \"1\"; then\n        AC_MSG_ERROR(could not find an LDAP library)\n      else\n        APR_ADDTO(LDADD_ldap, [$LDADD_ldap_found])\n      fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/apu-conf.m4"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 38,
                  "endLine": 59,
                  "endColumn": 43,
                  "snippet": {
                    "text": "    extralib=$2\n    # Clear the cache entry for subsequent APU_FIND_LDAPLIB invocations.\n    changequote(,)\n    ldaplib_cache_id=\"`echo $ldaplib | sed -e 's/[^a-zA-Z0-9_]/_/g'`\"\n    changequote([,])\n    unset ac_cv_lib_${ldaplib_cache_id}_ldap_init\n    unset ac_cv_lib_${ldaplib_cache_id}___ldap_init\n",
                    "rendered": {
                      "text": "    extralib=$2\n    # Clear the cache entry for subsequent APU_FIND_LDAPLIB invocations.\n    changequote(,)\n    ldaplib_cache_id=\"`echo $ldaplib | sed -e 's/[^a-zA-Z0-9_]/_/g'`\"\n    changequote([,])\n    unset ac_cv_lib_${ldaplib_cache_id}_ldap_init\n    unset ac_cv_lib_${ldaplib_cache_id}___ldap_init\n",
                      "markdown": "`    extralib=$2\n    # Clear the cache entry for subsequent APU_FIND_LDAPLIB invocations.\n    changequote(,)\n    ldaplib_cache_id=\"`echo $ldaplib | sed -e 's/[^a-zA-Z0-9_]/_/g'`\"\n    changequote([,])\n    unset ac_cv_lib_${ldaplib_cache_id}_ldap_init\n    unset ac_cv_lib_${ldaplib_cache_id}___ldap_init\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/apu-conf.m4"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 3,
                  "endLine": 51,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n\ndnl \ndnl Find a particular LDAP library\ndnl\nAC_DEFUN([APU_FIND_LDAPLIB], [\n  if test ${apu_has_ldap} != \"1\"; then\n",
                    "rendered": {
                      "text": "\n\ndnl \ndnl Find a particular LDAP library\ndnl\nAC_DEFUN([APU_FIND_LDAPLIB], [\n  if test ${apu_has_ldap} != \"1\"; then\n",
                      "markdown": "`\n\ndnl \ndnl Find a particular LDAP library\ndnl\nAC_DEFUN([APU_FIND_LDAPLIB], [\n  if test ${apu_has_ldap} != \"1\"; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/apu-conf.m4"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 25,
                  "endLine": 27,
                  "endColumn": 33,
                  "snippet": {
                    "text": "dnl\nAC_DEFUN([APU_FIND_APR], [\n\n  dnl use the find_apr.m4 script to locate APR. sets apr_found and apr_config\n  APR_FIND_APR(,,,[1])\n  if test \"$apr_found\" = \"no\"; then\n    AC_MSG_ERROR(APR could not be located. Please use the --with-apr option.)\n",
                    "rendered": {
                      "text": "dnl\nAC_DEFUN([APU_FIND_APR], [\n\n  dnl use the find_apr.m4 script to locate APR. sets apr_found and apr_config\n  APR_FIND_APR(,,,[1])\n  if test \"$apr_found\" = \"no\"; then\n    AC_MSG_ERROR(APR could not be located. Please use the --with-apr option.)\n",
                      "markdown": "`dnl\nAC_DEFUN([APU_FIND_APR], [\n\n  dnl use the find_apr.m4 script to locate APR. sets apr_found and apr_config\n  APR_FIND_APR(,,,[1])\n  if test \"$apr_found\" = \"no\"; then\n    AC_MSG_ERROR(APR could not be located. Please use the --with-apr option.)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/dso.m4"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 54,
                  "endLine": 8,
                  "snippet": {
                    "text": "dnl this work for additional information regarding copyright ownership.\ndnl The ASF licenses this file to You under the Apache License, Version 2.0\ndnl (the \"License\"); you may not use this file except in compliance with\ndnl the License.  You may obtain a copy of the License at\ndnl\ndnl     http://www.apache.org/licenses/LICENSE-2.0\ndnl\ndnl Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "dnl this work for additional information regarding copyright ownership.\ndnl The ASF licenses this file to You under the Apache License, Version 2.0\ndnl (the \"License\"); you may not use this file except in compliance with\ndnl the License.  You may obtain a copy of the License at\ndnl\ndnl     http://www.apache.org/licenses/LICENSE-2.0\ndnl\ndnl Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`dnl this work for additional information regarding copyright ownership.\ndnl The ASF licenses this file to You under the Apache License, Version 2.0\ndnl (the \"License\"); you may not use this file except in compliance with\ndnl the License.  You may obtain a copy of the License at\ndnl\ndnl     http://www.apache.org/licenses/LICENSE-2.0\ndnl\ndnl Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/dso.m4"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 39,
                  "endLine": 72,
                  "endColumn": 44,
                  "snippet": {
                    "text": "     if test $apu_have_mysql = 1; then\n       for flag in $LDADD_dbd_mysql\n       do\n         dir=`echo $flag | grep \"^-L\" | sed s:-L::`\n         if test \"x$dir\" != 'x'; then\n           if test -f \"$dir/libmysqlclient_r.la\"; then\n             LDADD_dbd_mysql=$dir/libmysqlclient_r.la\n",
                    "rendered": {
                      "text": "     if test $apu_have_mysql = 1; then\n       for flag in $LDADD_dbd_mysql\n       do\n         dir=`echo $flag | grep \"^-L\" | sed s:-L::`\n         if test \"x$dir\" != 'x'; then\n           if test -f \"$dir/libmysqlclient_r.la\"; then\n             LDADD_dbd_mysql=$dir/libmysqlclient_r.la\n",
                      "markdown": "`     if test $apu_have_mysql = 1; then\n       for flag in $LDADD_dbd_mysql\n       do\n         dir=`echo $flag | grep \"^-L\" | sed s:-L::`\n         if test \"x$dir\" != 'x'; then\n           if test -f \"$dir/libmysqlclient_r.la\"; then\n             LDADD_dbd_mysql=$dir/libmysqlclient_r.la\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/dso.m4"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 26,
                  "endLine": 72,
                  "endColumn": 32,
                  "snippet": {
                    "text": "     if test $apu_have_mysql = 1; then\n       for flag in $LDADD_dbd_mysql\n       do\n         dir=`echo $flag | grep \"^-L\" | sed s:-L::`\n         if test \"x$dir\" != 'x'; then\n           if test -f \"$dir/libmysqlclient_r.la\"; then\n             LDADD_dbd_mysql=$dir/libmysqlclient_r.la\n",
                    "rendered": {
                      "text": "     if test $apu_have_mysql = 1; then\n       for flag in $LDADD_dbd_mysql\n       do\n         dir=`echo $flag | grep \"^-L\" | sed s:-L::`\n         if test \"x$dir\" != 'x'; then\n           if test -f \"$dir/libmysqlclient_r.la\"; then\n             LDADD_dbd_mysql=$dir/libmysqlclient_r.la\n",
                      "markdown": "`     if test $apu_have_mysql = 1; then\n       for flag in $LDADD_dbd_mysql\n       do\n         dir=`echo $flag | grep \"^-L\" | sed s:-L::`\n         if test \"x$dir\" != 'x'; then\n           if test -f \"$dir/libmysqlclient_r.la\"; then\n             LDADD_dbd_mysql=$dir/libmysqlclient_r.la\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/dso.m4"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 27,
                  "endLine": 68,
                  "endColumn": 34,
                  "snippet": {
                    "text": "     test $apu_has_ldap = 1 && objs=\"$objs ldap/apr_ldap_rebind.lo\"\n     EXTRA_OBJECTS=\"$EXTRA_OBJECTS $objs\"\n\n     # Use libtool *.la for mysql if available\n     if test $apu_have_mysql = 1; then\n       for flag in $LDADD_dbd_mysql\n       do\n",
                    "rendered": {
                      "text": "     test $apu_has_ldap = 1 && objs=\"$objs ldap/apr_ldap_rebind.lo\"\n     EXTRA_OBJECTS=\"$EXTRA_OBJECTS $objs\"\n\n     # Use libtool *.la for mysql if available\n     if test $apu_have_mysql = 1; then\n       for flag in $LDADD_dbd_mysql\n       do\n",
                      "markdown": "`     test $apu_has_ldap = 1 && objs=\"$objs ldap/apr_ldap_rebind.lo\"\n     EXTRA_OBJECTS=\"$EXTRA_OBJECTS $objs\"\n\n     # Use libtool *.la for mysql if available\n     if test $apu_have_mysql = 1; then\n       for flag in $LDADD_dbd_mysql\n       do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/apu-hints.m4"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 54,
                  "endLine": 8,
                  "snippet": {
                    "text": "dnl this work for additional information regarding copyright ownership.\ndnl The ASF licenses this file to You under the Apache License, Version 2.0\ndnl (the \"License\"); you may not use this file except in compliance with\ndnl the License.  You may obtain a copy of the License at\ndnl\ndnl     http://www.apache.org/licenses/LICENSE-2.0\ndnl\ndnl Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "dnl this work for additional information regarding copyright ownership.\ndnl The ASF licenses this file to You under the Apache License, Version 2.0\ndnl (the \"License\"); you may not use this file except in compliance with\ndnl the License.  You may obtain a copy of the License at\ndnl\ndnl     http://www.apache.org/licenses/LICENSE-2.0\ndnl\ndnl Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`dnl this work for additional information regarding copyright ownership.\ndnl The ASF licenses this file to You under the Apache License, Version 2.0\ndnl (the \"License\"); you may not use this file except in compliance with\ndnl the License.  You may obtain a copy of the License at\ndnl\ndnl     http://www.apache.org/licenses/LICENSE-2.0\ndnl\ndnl Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/xml.m4"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 54,
                  "endLine": 8,
                  "snippet": {
                    "text": "dnl this work for additional information regarding copyright ownership.\ndnl The ASF licenses this file to You under the Apache License, Version 2.0\ndnl (the \"License\"); you may not use this file except in compliance with\ndnl the License.  You may obtain a copy of the License at\ndnl\ndnl     http://www.apache.org/licenses/LICENSE-2.0\ndnl\ndnl Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "dnl this work for additional information regarding copyright ownership.\ndnl The ASF licenses this file to You under the Apache License, Version 2.0\ndnl (the \"License\"); you may not use this file except in compliance with\ndnl the License.  You may obtain a copy of the License at\ndnl\ndnl     http://www.apache.org/licenses/LICENSE-2.0\ndnl\ndnl Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`dnl this work for additional information regarding copyright ownership.\ndnl The ASF licenses this file to You under the Apache License, Version 2.0\ndnl (the \"License\"); you may not use this file except in compliance with\ndnl the License.  You may obtain a copy of the License at\ndnl\ndnl     http://www.apache.org/licenses/LICENSE-2.0\ndnl\ndnl Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/xml.m4"
                },
                "region": {
                  "startLine": 208,
                  "startColumn": 17,
                  "endLine": 208,
                  "endColumn": 23,
                  "snippet": {
                    "text": "])\n\ndnl\ndnl APU_FIND_XML: Find an XML library\ndnl\ndnl Logic: we need exactly one but not both XML libraries\ndnl        Make expat the default for back-compatibility.\n",
                    "rendered": {
                      "text": "])\n\ndnl\ndnl APU_FIND_XML: Find an XML library\ndnl\ndnl Logic: we need exactly one but not both XML libraries\ndnl        Make expat the default for back-compatibility.\n",
                      "markdown": "`])\n\ndnl\ndnl APU_FIND_XML: Find an XML library\ndnl\ndnl Logic: we need exactly one but not both XML libraries\ndnl        Make expat the default for back-compatibility.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/crypto.m4"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 40,
                  "endLine": 8,
                  "snippet": {
                    "text": "dnl\ndnl Licensed under the Apache License, Version 2.0 (the \"License\");\ndnl you may not use this file except in compliance with the License.\ndnl You may obtain a copy of the License at\ndnl\ndnl     http://www.apache.org/licenses/LICENSE-2.0\ndnl\ndnl Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "dnl\ndnl Licensed under the Apache License, Version 2.0 (the \"License\");\ndnl you may not use this file except in compliance with the License.\ndnl You may obtain a copy of the License at\ndnl\ndnl     http://www.apache.org/licenses/LICENSE-2.0\ndnl\ndnl Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`dnl\ndnl Licensed under the Apache License, Version 2.0 (the \"License\");\ndnl you may not use this file except in compliance with the License.\ndnl You may obtain a copy of the License at\ndnl\ndnl     http://www.apache.org/licenses/LICENSE-2.0\ndnl\ndnl Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/crypto.m4"
                },
                "region": {
                  "startLine": 146,
                  "startColumn": 66,
                  "endLine": 146,
                  "endColumn": 75,
                  "snippet": {
                    "text": "          EVP_EncryptInit_ex(ctx, EVP_aes_128_cbc(), NULL, key, iv);\n          EVP_CIPHER_CTX_free(ctx); ],\n        [AC_MSG_RESULT([yes])]\n        [AC_DEFINE([CRYPTO_OPENSSL_CONST_BUFFERS], 1, [Define that OpenSSL uses const buffers])],\n        [AC_MSG_RESULT([no])])\n\n  fi  \n",
                    "rendered": {
                      "text": "          EVP_EncryptInit_ex(ctx, EVP_aes_128_cbc(), NULL, key, iv);\n          EVP_CIPHER_CTX_free(ctx); ],\n        [AC_MSG_RESULT([yes])]\n        [AC_DEFINE([CRYPTO_OPENSSL_CONST_BUFFERS], 1, [Define that OpenSSL uses const buffers])],\n        [AC_MSG_RESULT([no])])\n\n  fi  \n",
                      "markdown": "`          EVP_EncryptInit_ex(ctx, EVP_aes_128_cbc(), NULL, key, iv);\n          EVP_CIPHER_CTX_free(ctx); ],\n        [AC_MSG_RESULT([yes])]\n        [AC_DEFINE([CRYPTO_OPENSSL_CONST_BUFFERS], 1, [Define that OpenSSL uses const buffers])],\n        [AC_MSG_RESULT([no])])\n\n  fi  \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/crypto.m4"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 32,
                  "endLine": 112,
                  "endColumn": 41,
                  "snippet": {
                    "text": "      APR_ADDTO(CPPFLAGS, [$openssl_CPPFLAGS])\n      APR_ADDTO(LDFLAGS, [$openssl_LDFLAGS])\n\n      AC_MSG_NOTICE(checking for openssl in $withval)\n      AC_CHECK_HEADERS(openssl/x509.h, [openssl_have_headers=1])\n      AC_CHECK_LIB(crypto, EVP_CIPHER_CTX_new, openssl_have_libs=1)\n      if test \"$openssl_have_headers\" = \"1\" && test \"$openssl_have_libs\" = \"1\"; then\n",
                    "rendered": {
                      "text": "      APR_ADDTO(CPPFLAGS, [$openssl_CPPFLAGS])\n      APR_ADDTO(LDFLAGS, [$openssl_LDFLAGS])\n\n      AC_MSG_NOTICE(checking for openssl in $withval)\n      AC_CHECK_HEADERS(openssl/x509.h, [openssl_have_headers=1])\n      AC_CHECK_LIB(crypto, EVP_CIPHER_CTX_new, openssl_have_libs=1)\n      if test \"$openssl_have_headers\" = \"1\" && test \"$openssl_have_libs\" = \"1\"; then\n",
                      "markdown": "`      APR_ADDTO(CPPFLAGS, [$openssl_CPPFLAGS])\n      APR_ADDTO(LDFLAGS, [$openssl_LDFLAGS])\n\n      AC_MSG_NOTICE(checking for openssl in $withval)\n      AC_CHECK_HEADERS(openssl/x509.h, [openssl_have_headers=1])\n      AC_CHECK_LIB(crypto, EVP_CIPHER_CTX_new, openssl_have_libs=1)\n      if test \"$openssl_have_headers\" = \"1\" && test \"$openssl_have_libs\" = \"1\"; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/crypto.m4"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 38,
                  "endLine": 71,
                  "endColumn": 47,
                  "snippet": {
                    "text": "      if test \"$apu_have_crypto\" = \"0\"; then\n        AC_ERROR([Crypto was requested but no crypto library could be enabled; specify the location of a crypto library using --with-openssl, --with-nss, and/or --with-commoncrypto.])\n      elif test \"$apu_have_openssl\" = \"1\"; then\n        dnl PRNG only implemented with openssl for now\n        apu_have_crypto_prng=1\n      fi\n    fi\n",
                    "rendered": {
                      "text": "      if test \"$apu_have_crypto\" = \"0\"; then\n        AC_ERROR([Crypto was requested but no crypto library could be enabled; specify the location of a crypto library using --with-openssl, --with-nss, and/or --with-commoncrypto.])\n      elif test \"$apu_have_openssl\" = \"1\"; then\n        dnl PRNG only implemented with openssl for now\n        apu_have_crypto_prng=1\n      fi\n    fi\n",
                      "markdown": "`      if test \"$apu_have_crypto\" = \"0\"; then\n        AC_ERROR([Crypto was requested but no crypto library could be enabled; specify the location of a crypto library using --with-openssl, --with-nss, and/or --with-commoncrypto.])\n      elif test \"$apu_have_openssl\" = \"1\"; then\n        dnl PRNG only implemented with openssl for now\n        apu_have_crypto_prng=1\n      fi\n    fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/w32locatedb.pl"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 47,
                  "endLine": 91,
                  "endColumn": 52,
                  "snippet": {
                    "text": "}\n\n########\n# Calculate the (possibly relative) path to the top of the apr-util\n# source dir.\nsub find_srcdir()\n{\n",
                    "rendered": {
                      "text": "}\n\n########\n# Calculate the (possibly relative) path to the top of the apr-util\n# source dir.\nsub find_srcdir()\n{\n",
                      "markdown": "`}\n\n########\n# Calculate the (possibly relative) path to the top of the apr-util\n# source dir.\nsub find_srcdir()\n{\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/w32locatedb.pl"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 19,
                  "endLine": 84,
                  "endColumn": 25,
                  "snippet": {
                    "text": "# Print usage\nsub usage()\n{\n    return (\"Usage: perl w32locatedb.pl <type> <incdir> <libdir>\\n\"\n            . \"    type:   Library type to link with ('lib' or 'dll')\\n\"\n            . \"    incdir: BDB includes directory (for db.h)\\n\"\n            . \"    libdir: Library directory (for libdbXY[s][d].lib)\\n\");\n",
                    "rendered": {
                      "text": "# Print usage\nsub usage()\n{\n    return (\"Usage: perl w32locatedb.pl <type> <incdir> <libdir>\\n\"\n            . \"    type:   Library type to link with ('lib' or 'dll')\\n\"\n            . \"    incdir: BDB includes directory (for db.h)\\n\"\n            . \"    libdir: Library directory (for libdbXY[s][d].lib)\\n\");\n",
                      "markdown": "`# Print usage\nsub usage()\n{\n    return (\"Usage: perl w32locatedb.pl <type> <incdir> <libdir>\\n\"\n            . \"    type:   Library type to link with ('lib' or 'dll')\\n\"\n            . \"    incdir: BDB includes directory (for db.h)\\n\"\n            . \"    libdir: Library directory (for libdbXY[s][d].lib)\\n\");\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/w32locatedb.pl"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 10,
                  "endLine": 54,
                  "endColumn": 16,
                  "snippet": {
                    "text": "die \"Can't find $apu_want_hw\" unless -f $apu_want_hw;\ndie \"Can't find $apu_select_dbm_hw\" unless -f $apu_select_dbm_hw;\ndie \"Can't find $aprutil_dsp\" unless -f $aprutil_dsp;\ndie \"Can't find $libaprutil_dsp\" unless -f $libaprutil_dsp;\n\n\n########\n",
                    "rendered": {
                      "text": "die \"Can't find $apu_want_hw\" unless -f $apu_want_hw;\ndie \"Can't find $apu_select_dbm_hw\" unless -f $apu_select_dbm_hw;\ndie \"Can't find $aprutil_dsp\" unless -f $aprutil_dsp;\ndie \"Can't find $libaprutil_dsp\" unless -f $libaprutil_dsp;\n\n\n########\n",
                      "markdown": "`die \"Can't find $apu_want_hw\" unless -f $apu_want_hw;\ndie \"Can't find $apu_select_dbm_hw\" unless -f $apu_select_dbm_hw;\ndie \"Can't find $aprutil_dsp\" unless -f $aprutil_dsp;\ndie \"Can't find $libaprutil_dsp\" unless -f $libaprutil_dsp;\n\n\n########\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/w32locatedb.pl"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 10,
                  "endLine": 53,
                  "endColumn": 16,
                  "snippet": {
                    "text": "die \"Can't find $apu_hw\" unless -f $apu_hw;\ndie \"Can't find $apu_want_hw\" unless -f $apu_want_hw;\ndie \"Can't find $apu_select_dbm_hw\" unless -f $apu_select_dbm_hw;\ndie \"Can't find $aprutil_dsp\" unless -f $aprutil_dsp;\ndie \"Can't find $libaprutil_dsp\" unless -f $libaprutil_dsp;\n\n\n",
                    "rendered": {
                      "text": "die \"Can't find $apu_hw\" unless -f $apu_hw;\ndie \"Can't find $apu_want_hw\" unless -f $apu_want_hw;\ndie \"Can't find $apu_select_dbm_hw\" unless -f $apu_select_dbm_hw;\ndie \"Can't find $aprutil_dsp\" unless -f $aprutil_dsp;\ndie \"Can't find $libaprutil_dsp\" unless -f $libaprutil_dsp;\n\n\n",
                      "markdown": "`die \"Can't find $apu_hw\" unless -f $apu_hw;\ndie \"Can't find $apu_want_hw\" unless -f $apu_want_hw;\ndie \"Can't find $apu_select_dbm_hw\" unless -f $apu_select_dbm_hw;\ndie \"Can't find $aprutil_dsp\" unless -f $aprutil_dsp;\ndie \"Can't find $libaprutil_dsp\" unless -f $libaprutil_dsp;\n\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/w32locatedb.pl"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 10,
                  "endLine": 52,
                  "endColumn": 16,
                  "snippet": {
                    "text": "my $libaprutil_dsp = canonpath(\"$srcdir/libaprutil.dsp\");\ndie \"Can't find $apu_hw\" unless -f $apu_hw;\ndie \"Can't find $apu_want_hw\" unless -f $apu_want_hw;\ndie \"Can't find $apu_select_dbm_hw\" unless -f $apu_select_dbm_hw;\ndie \"Can't find $aprutil_dsp\" unless -f $aprutil_dsp;\ndie \"Can't find $libaprutil_dsp\" unless -f $libaprutil_dsp;\n\n",
                    "rendered": {
                      "text": "my $libaprutil_dsp = canonpath(\"$srcdir/libaprutil.dsp\");\ndie \"Can't find $apu_hw\" unless -f $apu_hw;\ndie \"Can't find $apu_want_hw\" unless -f $apu_want_hw;\ndie \"Can't find $apu_select_dbm_hw\" unless -f $apu_select_dbm_hw;\ndie \"Can't find $aprutil_dsp\" unless -f $aprutil_dsp;\ndie \"Can't find $libaprutil_dsp\" unless -f $libaprutil_dsp;\n\n",
                      "markdown": "`my $libaprutil_dsp = canonpath(\"$srcdir/libaprutil.dsp\");\ndie \"Can't find $apu_hw\" unless -f $apu_hw;\ndie \"Can't find $apu_want_hw\" unless -f $apu_want_hw;\ndie \"Can't find $apu_select_dbm_hw\" unless -f $apu_select_dbm_hw;\ndie \"Can't find $aprutil_dsp\" unless -f $aprutil_dsp;\ndie \"Can't find $libaprutil_dsp\" unless -f $libaprutil_dsp;\n\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/w32locatedb.pl"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 10,
                  "endLine": 51,
                  "endColumn": 16,
                  "snippet": {
                    "text": "my $aprutil_dsp = canonpath(\"$srcdir/aprutil.dsp\");\nmy $libaprutil_dsp = canonpath(\"$srcdir/libaprutil.dsp\");\ndie \"Can't find $apu_hw\" unless -f $apu_hw;\ndie \"Can't find $apu_want_hw\" unless -f $apu_want_hw;\ndie \"Can't find $apu_select_dbm_hw\" unless -f $apu_select_dbm_hw;\ndie \"Can't find $aprutil_dsp\" unless -f $aprutil_dsp;\ndie \"Can't find $libaprutil_dsp\" unless -f $libaprutil_dsp;\n",
                    "rendered": {
                      "text": "my $aprutil_dsp = canonpath(\"$srcdir/aprutil.dsp\");\nmy $libaprutil_dsp = canonpath(\"$srcdir/libaprutil.dsp\");\ndie \"Can't find $apu_hw\" unless -f $apu_hw;\ndie \"Can't find $apu_want_hw\" unless -f $apu_want_hw;\ndie \"Can't find $apu_select_dbm_hw\" unless -f $apu_select_dbm_hw;\ndie \"Can't find $aprutil_dsp\" unless -f $aprutil_dsp;\ndie \"Can't find $libaprutil_dsp\" unless -f $libaprutil_dsp;\n",
                      "markdown": "`my $aprutil_dsp = canonpath(\"$srcdir/aprutil.dsp\");\nmy $libaprutil_dsp = canonpath(\"$srcdir/libaprutil.dsp\");\ndie \"Can't find $apu_hw\" unless -f $apu_hw;\ndie \"Can't find $apu_want_hw\" unless -f $apu_want_hw;\ndie \"Can't find $apu_select_dbm_hw\" unless -f $apu_select_dbm_hw;\ndie \"Can't find $aprutil_dsp\" unless -f $aprutil_dsp;\ndie \"Can't find $libaprutil_dsp\" unless -f $libaprutil_dsp;\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/w32locatedb.pl"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 10,
                  "endLine": 50,
                  "endColumn": 16,
                  "snippet": {
                    "text": "my $apu_select_dbm_hw = canonpath(\"$srcdir/include/private/apu_select_dbm.hw\");\nmy $aprutil_dsp = canonpath(\"$srcdir/aprutil.dsp\");\nmy $libaprutil_dsp = canonpath(\"$srcdir/libaprutil.dsp\");\ndie \"Can't find $apu_hw\" unless -f $apu_hw;\ndie \"Can't find $apu_want_hw\" unless -f $apu_want_hw;\ndie \"Can't find $apu_select_dbm_hw\" unless -f $apu_select_dbm_hw;\ndie \"Can't find $aprutil_dsp\" unless -f $aprutil_dsp;\n",
                    "rendered": {
                      "text": "my $apu_select_dbm_hw = canonpath(\"$srcdir/include/private/apu_select_dbm.hw\");\nmy $aprutil_dsp = canonpath(\"$srcdir/aprutil.dsp\");\nmy $libaprutil_dsp = canonpath(\"$srcdir/libaprutil.dsp\");\ndie \"Can't find $apu_hw\" unless -f $apu_hw;\ndie \"Can't find $apu_want_hw\" unless -f $apu_want_hw;\ndie \"Can't find $apu_select_dbm_hw\" unless -f $apu_select_dbm_hw;\ndie \"Can't find $aprutil_dsp\" unless -f $aprutil_dsp;\n",
                      "markdown": "`my $apu_select_dbm_hw = canonpath(\"$srcdir/include/private/apu_select_dbm.hw\");\nmy $aprutil_dsp = canonpath(\"$srcdir/aprutil.dsp\");\nmy $libaprutil_dsp = canonpath(\"$srcdir/libaprutil.dsp\");\ndie \"Can't find $apu_hw\" unless -f $apu_hw;\ndie \"Can't find $apu_want_hw\" unless -f $apu_want_hw;\ndie \"Can't find $apu_select_dbm_hw\" unless -f $apu_select_dbm_hw;\ndie \"Can't find $aprutil_dsp\" unless -f $aprutil_dsp;\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/w32locatedb.pl"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 6,
                  "endLine": 10,
                  "endColumn": 14,
                  "snippet": {
                    "text": "#    incdir: BDB includes directory (for db.h)\n#    libdir: Library directory (for libdbXY[s][d].lib)\n#\n# This script falls under the Apache License.\n# See http://www.apache.org/docs/LICENSE\n\nrequire 5.008;\n",
                    "rendered": {
                      "text": "#    incdir: BDB includes directory (for db.h)\n#    libdir: Library directory (for libdbXY[s][d].lib)\n#\n# This script falls under the Apache License.\n# See http://www.apache.org/docs/LICENSE\n\nrequire 5.008;\n",
                      "markdown": "`#    incdir: BDB includes directory (for db.h)\n#    libdir: Library directory (for libdbXY[s][d].lib)\n#\n# This script falls under the Apache License.\n# See http://www.apache.org/docs/LICENSE\n\nrequire 5.008;\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/w32locatedb.pl"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 8,
                  "endLine": 5,
                  "endColumn": 14,
                  "snippet": {
                    "text": "#\n# w32locatedb.pl -- Build apr-util with Berkeley DB on Win32\n#\n# Usage: perl w32locatedb.pl <type> <incdir> <libdir>\n#    type:   Library type to link with ('lib' or 'dll')\n#    incdir: BDB includes directory (for db.h)\n#    libdir: Library directory (for libdbXY[s][d].lib)\n",
                    "rendered": {
                      "text": "#\n# w32locatedb.pl -- Build apr-util with Berkeley DB on Win32\n#\n# Usage: perl w32locatedb.pl <type> <incdir> <libdir>\n#    type:   Library type to link with ('lib' or 'dll')\n#    incdir: BDB includes directory (for db.h)\n#    libdir: Library directory (for libdbXY[s][d].lib)\n",
                      "markdown": "`#\n# w32locatedb.pl -- Build apr-util with Berkeley DB on Win32\n#\n# Usage: perl w32locatedb.pl <type> <incdir> <libdir>\n#    type:   Library type to link with ('lib' or 'dll')\n#    incdir: BDB includes directory (for db.h)\n#    libdir: Library directory (for libdbXY[s][d].lib)\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/build/w32locatedb.pl"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 2,
                  "endLine": 1,
                  "endColumn": 8,
                  "snippet": {
                    "text": "#! perl -w\n#\n# w32locatedb.pl -- Build apr-util with Berkeley DB on Win32\n#\n",
                    "rendered": {
                      "text": "#! perl -w\n#\n# w32locatedb.pl -- Build apr-util with Berkeley DB on Win32\n#\n",
                      "markdown": "`#! perl -w\n#\n# w32locatedb.pl -- Build apr-util with Berkeley DB on Win32\n#\n`"
                    }
                  },
                  "sourceLanguage": "perl"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/buckets/apr_buckets_alloc.c"
                },
                "region": {
                  "startLine": 193,
                  "startColumn": 7,
                  "endLine": 193,
                  "endColumn": 13,
                  "snippet": {
                    "text": "        if (!memnode) {\n            return NULL;\n        }\n        node = (node_header_t *)memnode->first_avail;\n        node->alloc = list;\n        node->memnode = memnode;\n        node->size = size;\n",
                    "rendered": {
                      "text": "        if (!memnode) {\n            return NULL;\n        }\n        node = (node_header_t *)memnode->first_avail;\n        node->alloc = list;\n        node->memnode = memnode;\n        node->size = size;\n",
                      "markdown": "`        if (!memnode) {\n            return NULL;\n        }\n        node = (node_header_t *)memnode->first_avail;\n        node->alloc = list;\n        node->memnode = memnode;\n        node->size = size;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/buckets/apr_buckets_alloc.c"
                },
                "region": {
                  "startLine": 181,
                  "startColumn": 11,
                  "endLine": 181,
                  "endColumn": 17,
                  "snippet": {
                    "text": "                active = list->blocks;\n                endp = active->first_avail + SMALL_NODE_SIZE;\n            }\n            node = (node_header_t *)active->first_avail;\n            node->alloc = list;\n            node->memnode = active;\n            node->size = SMALL_NODE_SIZE;\n",
                    "rendered": {
                      "text": "                active = list->blocks;\n                endp = active->first_avail + SMALL_NODE_SIZE;\n            }\n            node = (node_header_t *)active->first_avail;\n            node->alloc = list;\n            node->memnode = active;\n            node->size = SMALL_NODE_SIZE;\n",
                      "markdown": "`                active = list->blocks;\n                endp = active->first_avail + SMALL_NODE_SIZE;\n            }\n            node = (node_header_t *)active->first_avail;\n            node->alloc = list;\n            node->memnode = active;\n            node->size = SMALL_NODE_SIZE;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/buckets/apr_buckets_alloc.c"
                },
                "region": {
                  "startLine": 166,
                  "startColumn": 11,
                  "endLine": 166,
                  "endColumn": 17,
                  "snippet": {
                    "text": "    size += SIZEOF_NODE_HEADER_T;\n    if (size <= SMALL_NODE_SIZE) {\n        if (list->freelist) {\n            node = list->freelist;\n            list->freelist = node->next;\n        }\n        else {\n",
                    "rendered": {
                      "text": "    size += SIZEOF_NODE_HEADER_T;\n    if (size <= SMALL_NODE_SIZE) {\n        if (list->freelist) {\n            node = list->freelist;\n            list->freelist = node->next;\n        }\n        else {\n",
                      "markdown": "`    size += SIZEOF_NODE_HEADER_T;\n    if (size <= SMALL_NODE_SIZE) {\n        if (list->freelist) {\n            node = list->freelist;\n            list->freelist = node->next;\n        }\n        else {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/getuuid.c"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 18,
                  "endLine": 90,
                  "endColumn": 26,
                  "snippet": {
                    "text": "    r.pid = getpid();\n    gettimeofday(&r.t, (struct timezone *)0);\n#endif\n    gethostname(r.hostname, 256);\n    apr_md5_update(&c, (const unsigned char *)&r, sizeof(r));\n    apr_md5_final(seed, &c);\n\n",
                    "rendered": {
                      "text": "    r.pid = getpid();\n    gettimeofday(&r.t, (struct timezone *)0);\n#endif\n    gethostname(r.hostname, 256);\n    apr_md5_update(&c, (const unsigned char *)&r, sizeof(r));\n    apr_md5_final(seed, &c);\n\n",
                      "markdown": "`    r.pid = getpid();\n    gettimeofday(&r.t, (struct timezone *)0);\n#endif\n    gethostname(r.hostname, 256);\n    apr_md5_update(&c, (const unsigned char *)&r, sizeof(r));\n    apr_md5_final(seed, &c);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/crypto/getuuid.c"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 13,
                  "endLine": 78,
                  "endColumn": 21,
                  "snippet": {
                    "text": "#else\n        struct timeval t;\n#endif\n        char hostname[257];\n\n    } r;\n\n",
                    "rendered": {
                      "text": "#else\n        struct timeval t;\n#endif\n        char hostname[257];\n\n    } r;\n\n",
                      "markdown": "`#else\n        struct timeval t;\n#endif\n        char hostname[257];\n\n    } r;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/NWGNUdbdsqli2"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 24,
                  "endLine": 140,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\n#\n# If this is specified, it will override VERSION value in\n# $(AP_WORK)\\build\\NWGNUenvironment.inc\n#\nNLM_VERSION\t=\n\n",
                    "rendered": {
                      "text": "\n#\n# If this is specified, it will override VERSION value in\n# $(AP_WORK)\\build\\NWGNUenvironment.inc\n#\nNLM_VERSION\t=\n\n",
                      "markdown": "`\n#\n# If this is specified, it will override VERSION value in\n# $(AP_WORK)\\build\\NWGNUenvironment.inc\n#\nNLM_VERSION\t=\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/NWGNUdbdsqli2"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 59,
                  "endLine": 28,
                  "endColumn": 74,
                  "snippet": {
                    "text": "\n# LINK_STATIC = 1\n\n# for now defined here - should finally go into build/NWGNUenvironment.inc\nSQLITE2_INC = $(SQLITE2SDK)/src\nSQLITE2_IMP = $(SQLITE2SDK)/lsqlite2.imp\nSQLITE2_LIB = $(SQLITE2SDK)/lsqlite2.lib\n",
                    "rendered": {
                      "text": "\n# LINK_STATIC = 1\n\n# for now defined here - should finally go into build/NWGNUenvironment.inc\nSQLITE2_INC = $(SQLITE2SDK)/src\nSQLITE2_IMP = $(SQLITE2SDK)/lsqlite2.imp\nSQLITE2_LIB = $(SQLITE2SDK)/lsqlite2.lib\n",
                      "markdown": "`\n# LINK_STATIC = 1\n\n# for now defined here - should finally go into build/NWGNUenvironment.inc\nSQLITE2_INC = $(SQLITE2SDK)/src\nSQLITE2_IMP = $(SQLITE2SDK)/lsqlite2.imp\nSQLITE2_LIB = $(SQLITE2SDK)/lsqlite2.lib\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/NWGNUdbdsqli2"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 30,
                  "endLine": 9,
                  "endColumn": 72,
                  "snippet": {
                    "text": "\t$(EOLIST)\n\n#\n# Get the 'head' of the build environment.  This includes default targets and\n# paths to tools\n#\n\n",
                    "rendered": {
                      "text": "\t$(EOLIST)\n\n#\n# Get the 'head' of the build environment.  This includes default targets and\n# paths to tools\n#\n\n",
                      "markdown": "`\t$(EOLIST)\n\n#\n# Get the 'head' of the build environment.  This includes default targets and\n# paths to tools\n#\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/NWGNUdbdsqli2"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 27,
                  "endLine": 35,
                  "endColumn": 31,
                  "snippet": {
                    "text": "SQLITE2_NLM = lsqlite2\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n",
                    "rendered": {
                      "text": "SQLITE2_NLM = lsqlite2\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n",
                      "markdown": "`SQLITE2_NLM = lsqlite2\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/apr_dbd_pgsql.mak"
                },
                "region": {
                  "startLine": 449,
                  "startColumn": 24,
                  "endLine": 449,
                  "endColumn": 30,
                  "snippet": {
                    "text": "!IF EXISTS(\"apr_dbd_pgsql.dep\")\r\n!INCLUDE \"apr_dbd_pgsql.dep\"\r\n!ELSE \r\n!MESSAGE Warning: cannot find \"apr_dbd_pgsql.dep\"\r\n!ENDIF \r\n!ENDIF \r\n\r\n",
                    "rendered": {
                      "text": "!IF EXISTS(\"apr_dbd_pgsql.dep\")\r\n!INCLUDE \"apr_dbd_pgsql.dep\"\r\n!ELSE \r\n!MESSAGE Warning: cannot find \"apr_dbd_pgsql.dep\"\r\n!ENDIF \r\n!ENDIF \r\n\r\n",
                      "markdown": "`!IF EXISTS(\"apr_dbd_pgsql.dep\")\r\n!INCLUDE \"apr_dbd_pgsql.dep\"\r\n!ELSE \r\n!MESSAGE Warning: cannot find \"apr_dbd_pgsql.dep\"\r\n!ENDIF \r\n!ENDIF \r\n\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/apr_dbd_oracle.c"
                },
                "region": {
                  "startLine": 603,
                  "startColumn": 36,
                  "endLine": 603,
                  "endColumn": 44,
                  "snippet": {
                    "text": "#ifdef DEBUG\n        OCIErrorGet(ret->err, 1, NULL, &errorcode, ret->buf,\n                    sizeof(ret->buf), OCI_HTYPE_ERROR);\n        printf(\"OPEN ERROR %d (attr password): %s\\n\", ret->status, ret->buf);\n        break;\n#else\n        if (error) {\n",
                    "rendered": {
                      "text": "#ifdef DEBUG\n        OCIErrorGet(ret->err, 1, NULL, &errorcode, ret->buf,\n                    sizeof(ret->buf), OCI_HTYPE_ERROR);\n        printf(\"OPEN ERROR %d (attr password): %s\\n\", ret->status, ret->buf);\n        break;\n#else\n        if (error) {\n",
                      "markdown": "`#ifdef DEBUG\n        OCIErrorGet(ret->err, 1, NULL, &errorcode, ret->buf,\n                    sizeof(ret->buf), OCI_HTYPE_ERROR);\n        printf(\"OPEN ERROR %d (attr password): %s\\n\", ret->status, ret->buf);\n        break;\n#else\n        if (error) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/apr_dbd_oracle.c"
                },
                "region": {
                  "startLine": 597,
                  "startColumn": 58,
                  "endLine": 597,
                  "endColumn": 66,
                  "snippet": {
                    "text": "        break;\n    }\n    ret->status = OCIAttrSet(ret->auth, OCI_HTYPE_SESSION, fields[1].value,\n                        strlen(fields[1].value), OCI_ATTR_PASSWORD, ret->err);\n    switch (ret->status) {\n    default:\n#ifdef DEBUG\n",
                    "rendered": {
                      "text": "        break;\n    }\n    ret->status = OCIAttrSet(ret->auth, OCI_HTYPE_SESSION, fields[1].value,\n                        strlen(fields[1].value), OCI_ATTR_PASSWORD, ret->err);\n    switch (ret->status) {\n    default:\n#ifdef DEBUG\n",
                      "markdown": "`        break;\n    }\n    ret->status = OCIAttrSet(ret->auth, OCI_HTYPE_SESSION, fields[1].value,\n                        strlen(fields[1].value), OCI_ATTR_PASSWORD, ret->err);\n    switch (ret->status) {\n    default:\n#ifdef DEBUG\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/apr_dbd_oracle.c"
                },
                "region": {
                  "startLine": 183,
                  "startColumn": 32,
                  "endLine": 183,
                  "endColumn": 61,
                  "snippet": {
                    "text": "    ub2 type;\n};\n\n/* AFAICT from the docs, the OCIEnv thingey can be used async\n * across threads, so lets have a global one.\n *\n * We'll need shorter-lived envs to deal with requests and connections\n",
                    "rendered": {
                      "text": "    ub2 type;\n};\n\n/* AFAICT from the docs, the OCIEnv thingey can be used async\n * across threads, so lets have a global one.\n *\n * We'll need shorter-lived envs to deal with requests and connections\n",
                      "markdown": "`    ub2 type;\n};\n\n/* AFAICT from the docs, the OCIEnv thingey can be used async\n * across threads, so lets have a global one.\n *\n * We'll need shorter-lived envs to deal with requests and connections\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/apr_dbd_mysql.mak"
                },
                "region": {
                  "startLine": 449,
                  "startColumn": 24,
                  "endLine": 449,
                  "endColumn": 30,
                  "snippet": {
                    "text": "!IF EXISTS(\"apr_dbd_mysql.dep\")\r\n!INCLUDE \"apr_dbd_mysql.dep\"\r\n!ELSE \r\n!MESSAGE Warning: cannot find \"apr_dbd_mysql.dep\"\r\n!ENDIF \r\n!ENDIF \r\n\r\n",
                    "rendered": {
                      "text": "!IF EXISTS(\"apr_dbd_mysql.dep\")\r\n!INCLUDE \"apr_dbd_mysql.dep\"\r\n!ELSE \r\n!MESSAGE Warning: cannot find \"apr_dbd_mysql.dep\"\r\n!ENDIF \r\n!ENDIF \r\n\r\n",
                      "markdown": "`!IF EXISTS(\"apr_dbd_mysql.dep\")\r\n!INCLUDE \"apr_dbd_mysql.dep\"\r\n!ELSE \r\n!MESSAGE Warning: cannot find \"apr_dbd_mysql.dep\"\r\n!ENDIF \r\n!ENDIF \r\n\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/apr_dbd_odbc.c"
                },
                "region": {
                  "startLine": 1122,
                  "startColumn": 62,
                  "endLine": 1122,
                  "endColumn": 70,
                  "snippet": {
                    "text": "            rc = SQLConnect(hdbc, datasource,\n                        (SQLSMALLINT)strlen((char *)datasource),\n                        user, (SQLSMALLINT)strlen((char *)user),\n                        password, (SQLSMALLINT)strlen((char *)password));\n        }\n    }\n    if (SQL_SUCCEEDED(rc)) {\n",
                    "rendered": {
                      "text": "            rc = SQLConnect(hdbc, datasource,\n                        (SQLSMALLINT)strlen((char *)datasource),\n                        user, (SQLSMALLINT)strlen((char *)user),\n                        password, (SQLSMALLINT)strlen((char *)password));\n        }\n    }\n    if (SQL_SUCCEEDED(rc)) {\n",
                      "markdown": "`            rc = SQLConnect(hdbc, datasource,\n                        (SQLSMALLINT)strlen((char *)datasource),\n                        user, (SQLSMALLINT)strlen((char *)user),\n                        password, (SQLSMALLINT)strlen((char *)password));\n        }\n    }\n    if (SQL_SUCCEEDED(rc)) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/apr_dbd_odbc.c"
                },
                "region": {
                  "startLine": 1122,
                  "startColumn": 24,
                  "endLine": 1122,
                  "endColumn": 32,
                  "snippet": {
                    "text": "            rc = SQLConnect(hdbc, datasource,\n                        (SQLSMALLINT)strlen((char *)datasource),\n                        user, (SQLSMALLINT)strlen((char *)user),\n                        password, (SQLSMALLINT)strlen((char *)password));\n        }\n    }\n    if (SQL_SUCCEEDED(rc)) {\n",
                    "rendered": {
                      "text": "            rc = SQLConnect(hdbc, datasource,\n                        (SQLSMALLINT)strlen((char *)datasource),\n                        user, (SQLSMALLINT)strlen((char *)user),\n                        password, (SQLSMALLINT)strlen((char *)password));\n        }\n    }\n    if (SQL_SUCCEEDED(rc)) {\n",
                      "markdown": "`            rc = SQLConnect(hdbc, datasource,\n                        (SQLSMALLINT)strlen((char *)datasource),\n                        user, (SQLSMALLINT)strlen((char *)user),\n                        password, (SQLSMALLINT)strlen((char *)password));\n        }\n    }\n    if (SQL_SUCCEEDED(rc)) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/apr_dbd_odbc.c"
                },
                "region": {
                  "startLine": 1092,
                  "startColumn": 32,
                  "endLine": 1092,
                  "endColumn": 40,
                  "snippet": {
                    "text": "        err_htype = SQL_HANDLE_DBC;\n        err_h = hdbc;\n        rc = odbc_parse_params(pool, params, &connect, &datasource, &user,\n                               &password, &defaultBufferSize, &nattrs, &attrs,\n                               &attrvals);\n    }\n    if (SQL_SUCCEEDED(rc)) {\n",
                    "rendered": {
                      "text": "        err_htype = SQL_HANDLE_DBC;\n        err_h = hdbc;\n        rc = odbc_parse_params(pool, params, &connect, &datasource, &user,\n                               &password, &defaultBufferSize, &nattrs, &attrs,\n                               &attrvals);\n    }\n    if (SQL_SUCCEEDED(rc)) {\n",
                      "markdown": "`        err_htype = SQL_HANDLE_DBC;\n        err_h = hdbc;\n        rc = odbc_parse_params(pool, params, &connect, &datasource, &user,\n                               &password, &defaultBufferSize, &nattrs, &attrs,\n                               &attrvals);\n    }\n    if (SQL_SUCCEEDED(rc)) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/apr_dbd_odbc.c"
                },
                "region": {
                  "startLine": 1079,
                  "startColumn": 14,
                  "endLine": 1079,
                  "endColumn": 22,
                  "snippet": {
                    "text": "    int defaultBufferSize = DEFAULT_BUFFER_SIZE;\n    SQLHANDLE err_h = NULL;\n    SQLCHAR  *datasource = (SQLCHAR *)\"\", *user = (SQLCHAR *)\"\",\n             *password = (SQLCHAR *)\"\";\n    int nattrs = 0, *attrs = NULL,  connect = 0;\n    ODBC_INTPTR_T *attrvals = NULL;\n\n",
                    "rendered": {
                      "text": "    int defaultBufferSize = DEFAULT_BUFFER_SIZE;\n    SQLHANDLE err_h = NULL;\n    SQLCHAR  *datasource = (SQLCHAR *)\"\", *user = (SQLCHAR *)\"\",\n             *password = (SQLCHAR *)\"\";\n    int nattrs = 0, *attrs = NULL,  connect = 0;\n    ODBC_INTPTR_T *attrvals = NULL;\n\n",
                      "markdown": "`    int defaultBufferSize = DEFAULT_BUFFER_SIZE;\n    SQLHANDLE err_h = NULL;\n    SQLCHAR  *datasource = (SQLCHAR *)\"\", *user = (SQLCHAR *)\"\",\n             *password = (SQLCHAR *)\"\";\n    int nattrs = 0, *attrs = NULL,  connect = 0;\n    ODBC_INTPTR_T *attrvals = NULL;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/apr_dbd_odbc.c"
                },
                "region": {
                  "startLine": 883,
                  "startColumn": 13,
                  "endLine": 883,
                  "endColumn": 21,
                  "snippet": {
                    "text": "            *user = (SQLCHAR *)apr_pstrdup(pool, val[i]);\n        }\n        else if (!apr_strnatcasecmp(name[i], \"PASSWORD\")) {\n            *password = (SQLCHAR *)apr_pstrdup(pool, val[i]);\n        }\n        else if (!apr_strnatcasecmp(name[i], \"BUFSIZE\")) {\n            *defaultBufferSize = atoi(val[i]);\n",
                    "rendered": {
                      "text": "            *user = (SQLCHAR *)apr_pstrdup(pool, val[i]);\n        }\n        else if (!apr_strnatcasecmp(name[i], \"PASSWORD\")) {\n            *password = (SQLCHAR *)apr_pstrdup(pool, val[i]);\n        }\n        else if (!apr_strnatcasecmp(name[i], \"BUFSIZE\")) {\n            *defaultBufferSize = atoi(val[i]);\n",
                      "markdown": "`            *user = (SQLCHAR *)apr_pstrdup(pool, val[i]);\n        }\n        else if (!apr_strnatcasecmp(name[i], \"PASSWORD\")) {\n            *password = (SQLCHAR *)apr_pstrdup(pool, val[i]);\n        }\n        else if (!apr_strnatcasecmp(name[i], \"BUFSIZE\")) {\n            *defaultBufferSize = atoi(val[i]);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/apr_dbd_odbc.c"
                },
                "region": {
                  "startLine": 882,
                  "startColumn": 46,
                  "endLine": 882,
                  "endColumn": 54,
                  "snippet": {
                    "text": "        else if (!apr_strnatcasecmp(name[i], \"USER\")) {\n            *user = (SQLCHAR *)apr_pstrdup(pool, val[i]);\n        }\n        else if (!apr_strnatcasecmp(name[i], \"PASSWORD\")) {\n            *password = (SQLCHAR *)apr_pstrdup(pool, val[i]);\n        }\n        else if (!apr_strnatcasecmp(name[i], \"BUFSIZE\")) {\n",
                    "rendered": {
                      "text": "        else if (!apr_strnatcasecmp(name[i], \"USER\")) {\n            *user = (SQLCHAR *)apr_pstrdup(pool, val[i]);\n        }\n        else if (!apr_strnatcasecmp(name[i], \"PASSWORD\")) {\n            *password = (SQLCHAR *)apr_pstrdup(pool, val[i]);\n        }\n        else if (!apr_strnatcasecmp(name[i], \"BUFSIZE\")) {\n",
                      "markdown": "`        else if (!apr_strnatcasecmp(name[i], \"USER\")) {\n            *user = (SQLCHAR *)apr_pstrdup(pool, val[i]);\n        }\n        else if (!apr_strnatcasecmp(name[i], \"PASSWORD\")) {\n            *password = (SQLCHAR *)apr_pstrdup(pool, val[i]);\n        }\n        else if (!apr_strnatcasecmp(name[i], \"BUFSIZE\")) {\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/apr_dbd_odbc.c"
                },
                "region": {
                  "startLine": 833,
                  "startColumn": 57,
                  "endLine": 833,
                  "endColumn": 65,
                  "snippet": {
                    "text": "/* Parse the parameter string for open */\nstatic apr_status_t odbc_parse_params(apr_pool_t *pool, const char *params,\n                               int *connect, SQLCHAR **datasource, \n                               SQLCHAR **user, SQLCHAR **password, \n                               int *defaultBufferSize, int *nattrs,\n                               int **attrs, ODBC_INTPTR_T **attrvals)\n{\n",
                    "rendered": {
                      "text": "/* Parse the parameter string for open */\nstatic apr_status_t odbc_parse_params(apr_pool_t *pool, const char *params,\n                               int *connect, SQLCHAR **datasource, \n                               SQLCHAR **user, SQLCHAR **password, \n                               int *defaultBufferSize, int *nattrs,\n                               int **attrs, ODBC_INTPTR_T **attrvals)\n{\n",
                      "markdown": "`/* Parse the parameter string for open */\nstatic apr_status_t odbc_parse_params(apr_pool_t *pool, const char *params,\n                               int *connect, SQLCHAR **datasource, \n                               SQLCHAR **user, SQLCHAR **password, \n                               int *defaultBufferSize, int *nattrs,\n                               int **attrs, ODBC_INTPTR_T **attrvals)\n{\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/apr_dbd_odbc.c"
                },
                "region": {
                  "startLine": 987,
                  "startColumn": 8,
                  "endLine": 987,
                  "endColumn": 15,
                  "snippet": {
                    "text": "        if (SQL_SUCCEEDED(rc) && (p < (end - 280))) \n            p += sprintf(p, \"%.256s %.20s \", buffer, sqlstate);\n    }\n    apr_env_get(&logval, \"apr_dbd_odbc_log\", dbc->pool);\n    /* if env var was set or call was init/open (no dbname) - log to stderr */\n    if (logval || !dbc->dbname ) {\n        char timestamp[APR_CTIME_LEN];\n",
                    "rendered": {
                      "text": "        if (SQL_SUCCEEDED(rc) && (p < (end - 280))) \n            p += sprintf(p, \"%.256s %.20s \", buffer, sqlstate);\n    }\n    apr_env_get(&logval, \"apr_dbd_odbc_log\", dbc->pool);\n    /* if env var was set or call was init/open (no dbname) - log to stderr */\n    if (logval || !dbc->dbname ) {\n        char timestamp[APR_CTIME_LEN];\n",
                      "markdown": "`        if (SQL_SUCCEEDED(rc) && (p < (end - 280))) \n            p += sprintf(p, \"%.256s %.20s \", buffer, sqlstate);\n    }\n    apr_env_get(&logval, \"apr_dbd_odbc_log\", dbc->pool);\n    /* if env var was set or call was init/open (no dbname) - log to stderr */\n    if (logval || !dbc->dbname ) {\n        char timestamp[APR_CTIME_LEN];\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/apr_dbd_odbc.c"
                },
                "region": {
                  "startLine": 979,
                  "startColumn": 57,
                  "endLine": 979,
                  "endColumn": 61,
                  "snippet": {
                    "text": "    p = dbc->lastError;\n    end = p + sizeof(dbc->lastError);\n    dbc->lasterrorcode = rc;\n    p += sprintf(p, \"[dbd_odbc] %.64s returned %.30s (%d) at %.24s:%d \",\n                 step, res, rc, SOURCE_FILE, line - 1);\n    for (i = 1, rc = 0; rc == 0; i++) {\n        rc = SQLGetDiagRec(type, h, i, sqlstate, &native, buffer, \n",
                    "rendered": {
                      "text": "    p = dbc->lastError;\n    end = p + sizeof(dbc->lastError);\n    dbc->lasterrorcode = rc;\n    p += sprintf(p, \"[dbd_odbc] %.64s returned %.30s (%d) at %.24s:%d \",\n                 step, res, rc, SOURCE_FILE, line - 1);\n    for (i = 1, rc = 0; rc == 0; i++) {\n        rc = SQLGetDiagRec(type, h, i, sqlstate, &native, buffer, \n",
                      "markdown": "`    p = dbc->lastError;\n    end = p + sizeof(dbc->lastError);\n    dbc->lasterrorcode = rc;\n    p += sprintf(p, \"[dbd_odbc] %.64s returned %.30s (%d) at %.24s:%d \",\n                 step, res, rc, SOURCE_FILE, line - 1);\n    for (i = 1, rc = 0; rc == 0; i++) {\n        rc = SQLGetDiagRec(type, h, i, sqlstate, &native, buffer, \n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/apr_dbd_sqlite2.mak"
                },
                "region": {
                  "startLine": 449,
                  "startColumn": 24,
                  "endLine": 449,
                  "endColumn": 30,
                  "snippet": {
                    "text": "!IF EXISTS(\"apr_dbd_sqlite2.dep\")\r\n!INCLUDE \"apr_dbd_sqlite2.dep\"\r\n!ELSE \r\n!MESSAGE Warning: cannot find \"apr_dbd_sqlite2.dep\"\r\n!ENDIF \r\n!ENDIF \r\n\r\n",
                    "rendered": {
                      "text": "!IF EXISTS(\"apr_dbd_sqlite2.dep\")\r\n!INCLUDE \"apr_dbd_sqlite2.dep\"\r\n!ELSE \r\n!MESSAGE Warning: cannot find \"apr_dbd_sqlite2.dep\"\r\n!ENDIF \r\n!ENDIF \r\n\r\n",
                      "markdown": "`!IF EXISTS(\"apr_dbd_sqlite2.dep\")\r\n!INCLUDE \"apr_dbd_sqlite2.dep\"\r\n!ELSE \r\n!MESSAGE Warning: cannot find \"apr_dbd_sqlite2.dep\"\r\n!ENDIF \r\n!ENDIF \r\n\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/apr_dbd_odbc.mak"
                },
                "region": {
                  "startLine": 437,
                  "startColumn": 24,
                  "endLine": 437,
                  "endColumn": 30,
                  "snippet": {
                    "text": "!IF EXISTS(\"apr_dbd_odbc.dep\")\r\n!INCLUDE \"apr_dbd_odbc.dep\"\r\n!ELSE \r\n!MESSAGE Warning: cannot find \"apr_dbd_odbc.dep\"\r\n!ENDIF \r\n!ENDIF \r\n\r\n",
                    "rendered": {
                      "text": "!IF EXISTS(\"apr_dbd_odbc.dep\")\r\n!INCLUDE \"apr_dbd_odbc.dep\"\r\n!ELSE \r\n!MESSAGE Warning: cannot find \"apr_dbd_odbc.dep\"\r\n!ENDIF \r\n!ENDIF \r\n\r\n",
                      "markdown": "`!IF EXISTS(\"apr_dbd_odbc.dep\")\r\n!INCLUDE \"apr_dbd_odbc.dep\"\r\n!ELSE \r\n!MESSAGE Warning: cannot find \"apr_dbd_odbc.dep\"\r\n!ENDIF \r\n!ENDIF \r\n\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/NWGNUdbdpgsql"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 24,
                  "endLine": 145,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\n#\n# If this is specified, it will override VERSION value in\n# $(AP_WORK)\\build\\NWGNUenvironment.inc\n#\nNLM_VERSION\t=\n\n",
                    "rendered": {
                      "text": "\n#\n# If this is specified, it will override VERSION value in\n# $(AP_WORK)\\build\\NWGNUenvironment.inc\n#\nNLM_VERSION\t=\n\n",
                      "markdown": "`\n#\n# If this is specified, it will override VERSION value in\n# $(AP_WORK)\\build\\NWGNUenvironment.inc\n#\nNLM_VERSION\t=\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/NWGNUdbdpgsql"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 59,
                  "endLine": 28,
                  "endColumn": 74,
                  "snippet": {
                    "text": "\n# LINK_STATIC = 1\n\n# for now defined here - should finally go into build/NWGNUenvironment.inc\nPGSQL_INC = $(PGSQLSDK)/inc\nPGSQL_IMP = libpq.imp\nPGSQL_LIB = libpq.lib\n",
                    "rendered": {
                      "text": "\n# LINK_STATIC = 1\n\n# for now defined here - should finally go into build/NWGNUenvironment.inc\nPGSQL_INC = $(PGSQLSDK)/inc\nPGSQL_IMP = libpq.imp\nPGSQL_LIB = libpq.lib\n",
                      "markdown": "`\n# LINK_STATIC = 1\n\n# for now defined here - should finally go into build/NWGNUenvironment.inc\nPGSQL_INC = $(PGSQLSDK)/inc\nPGSQL_IMP = libpq.imp\nPGSQL_LIB = libpq.lib\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/NWGNUdbdpgsql"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 30,
                  "endLine": 9,
                  "endColumn": 72,
                  "snippet": {
                    "text": "\t$(EOLIST)\n\n#\n# Get the 'head' of the build environment.  This includes default targets and\n# paths to tools\n#\n\n",
                    "rendered": {
                      "text": "\t$(EOLIST)\n\n#\n# Get the 'head' of the build environment.  This includes default targets and\n# paths to tools\n#\n\n",
                      "markdown": "`\t$(EOLIST)\n\n#\n# Get the 'head' of the build environment.  This includes default targets and\n# paths to tools\n#\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/NWGNUdbdpgsql"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 27,
                  "endLine": 35,
                  "endColumn": 31,
                  "snippet": {
                    "text": "PGSQL_NLM = libpq\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n",
                    "rendered": {
                      "text": "PGSQL_NLM = libpq\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n",
                      "markdown": "`PGSQL_NLM = libpq\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/NWGNUdbdsqli3"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 24,
                  "endLine": 140,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\n#\n# If this is specified, it will override VERSION value in\n# $(AP_WORK)\\build\\NWGNUenvironment.inc\n#\nNLM_VERSION\t=\n\n",
                    "rendered": {
                      "text": "\n#\n# If this is specified, it will override VERSION value in\n# $(AP_WORK)\\build\\NWGNUenvironment.inc\n#\nNLM_VERSION\t=\n\n",
                      "markdown": "`\n#\n# If this is specified, it will override VERSION value in\n# $(AP_WORK)\\build\\NWGNUenvironment.inc\n#\nNLM_VERSION\t=\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/NWGNUdbdsqli3"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 59,
                  "endLine": 28,
                  "endColumn": 74,
                  "snippet": {
                    "text": "\n# LINK_STATIC = 1\n\n# for now defined here - should finally go into build/NWGNUenvironment.inc\nSQLITE3_INC = $(SQLITE3SDK)/src\nSQLITE3_IMP = $(SQLITE3SDK)/lsqlite3.imp\nSQLITE3_LIB = $(SQLITE3SDK)/lsqlite3.lib\n",
                    "rendered": {
                      "text": "\n# LINK_STATIC = 1\n\n# for now defined here - should finally go into build/NWGNUenvironment.inc\nSQLITE3_INC = $(SQLITE3SDK)/src\nSQLITE3_IMP = $(SQLITE3SDK)/lsqlite3.imp\nSQLITE3_LIB = $(SQLITE3SDK)/lsqlite3.lib\n",
                      "markdown": "`\n# LINK_STATIC = 1\n\n# for now defined here - should finally go into build/NWGNUenvironment.inc\nSQLITE3_INC = $(SQLITE3SDK)/src\nSQLITE3_IMP = $(SQLITE3SDK)/lsqlite3.imp\nSQLITE3_LIB = $(SQLITE3SDK)/lsqlite3.lib\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/NWGNUdbdsqli3"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 30,
                  "endLine": 9,
                  "endColumn": 72,
                  "snippet": {
                    "text": "\t$(EOLIST)\n\n#\n# Get the 'head' of the build environment.  This includes default targets and\n# paths to tools\n#\n\n",
                    "rendered": {
                      "text": "\t$(EOLIST)\n\n#\n# Get the 'head' of the build environment.  This includes default targets and\n# paths to tools\n#\n\n",
                      "markdown": "`\t$(EOLIST)\n\n#\n# Get the 'head' of the build environment.  This includes default targets and\n# paths to tools\n#\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/NWGNUdbdsqli3"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 27,
                  "endLine": 35,
                  "endColumn": 31,
                  "snippet": {
                    "text": "SQLITE3_NLM = lsqlite3\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n",
                    "rendered": {
                      "text": "SQLITE3_NLM = lsqlite3\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n",
                      "markdown": "`SQLITE3_NLM = lsqlite3\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/NWGNUdbdsqli3"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 71,
                  "endLine": 130,
                  "endColumn": 80,
                  "snippet": {
                    "text": "# This is used by the link '-desc ' directive.\n# If left blank, NLM_NAME will be used.\n#\nNLM_DESCRIPTION\t= Apache Portability Runtime Library $(VERSION_STR) DBD SQLite3 Driver Module\n\n#\n# This is used by the '-threadname' directive.  If left blank,\n",
                    "rendered": {
                      "text": "# This is used by the link '-desc ' directive.\n# If left blank, NLM_NAME will be used.\n#\nNLM_DESCRIPTION\t= Apache Portability Runtime Library $(VERSION_STR) DBD SQLite3 Driver Module\n\n#\n# This is used by the '-threadname' directive.  If left blank,\n",
                      "markdown": "`# This is used by the link '-desc ' directive.\n# If left blank, NLM_NAME will be used.\n#\nNLM_DESCRIPTION\t= Apache Portability Runtime Library $(VERSION_STR) DBD SQLite3 Driver Module\n\n#\n# This is used by the '-threadname' directive.  If left blank,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/dbd/apr_dbd_sqlite3.mak"
                },
                "region": {
                  "startLine": 449,
                  "startColumn": 24,
                  "endLine": 449,
                  "endColumn": 30,
                  "snippet": {
                    "text": "!IF EXISTS(\"apr_dbd_sqlite3.dep\")\r\n!INCLUDE \"apr_dbd_sqlite3.dep\"\r\n!ELSE \r\n!MESSAGE Warning: cannot find \"apr_dbd_sqlite3.dep\"\r\n!ENDIF \r\n!ENDIF \r\n\r\n",
                    "rendered": {
                      "text": "!IF EXISTS(\"apr_dbd_sqlite3.dep\")\r\n!INCLUDE \"apr_dbd_sqlite3.dep\"\r\n!ELSE \r\n!MESSAGE Warning: cannot find \"apr_dbd_sqlite3.dep\"\r\n!ENDIF \r\n!ENDIF \r\n\r\n",
                      "markdown": "`!IF EXISTS(\"apr_dbd_sqlite3.dep\")\r\n!INCLUDE \"apr_dbd_sqlite3.dep\"\r\n!ELSE \r\n!MESSAGE Warning: cannot find \"apr_dbd_sqlite3.dep\"\r\n!ENDIF \r\n!ENDIF \r\n\r\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/private/apu_config.hw"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 18,
                  "endLine": 19,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\n/* \n * Note: This is a Windows specific version of apu_config.hw. It is copied\n * as apu_config.h at the start of a Windows build.\n */\n\n#ifdef WIN32\n",
                    "rendered": {
                      "text": "\n/* \n * Note: This is a Windows specific version of apu_config.hw. It is copied\n * as apu_config.h at the start of a Windows build.\n */\n\n#ifdef WIN32\n",
                      "markdown": "`\n/* \n * Note: This is a Windows specific version of apu_config.hw. It is copied\n * as apu_config.h at the start of a Windows build.\n */\n\n#ifdef WIN32\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/private/apu_config.hw"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": " * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "` * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/private/apu_config.hw"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 35,
                  "endLine": 34,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#define APU_DSO_BUILD           1\n#endif\n\n/* Presume a standard, modern (5.x) mysql sdk/\n#define HAVE_MY_GLOBAL_H        1\n\n/* my_sys.h is broken on VC/Win32, and apparently not required */\n",
                    "rendered": {
                      "text": "#define APU_DSO_BUILD           1\n#endif\n\n/* Presume a standard, modern (5.x) mysql sdk/\n#define HAVE_MY_GLOBAL_H        1\n\n/* my_sys.h is broken on VC/Win32, and apparently not required */\n",
                      "markdown": "`#define APU_DSO_BUILD           1\n#endif\n\n/* Presume a standard, modern (5.x) mysql sdk/\n#define HAVE_MY_GLOBAL_H        1\n\n/* my_sys.h is broken on VC/Win32, and apparently not required */\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/private/apu_select_dbm.hw"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 23,
                  "endLine": 21,
                  "endColumn": 32,
                  "snippet": {
                    "text": "#define APU_SELECT_DBM_H\n\n/*\n** The following macros control what features APRUTIL will use\n*/\n#define APU_USE_SDBM    1\n#define APU_USE_GDBM    0\n",
                    "rendered": {
                      "text": "#define APU_SELECT_DBM_H\n\n/*\n** The following macros control what features APRUTIL will use\n*/\n#define APU_USE_SDBM    1\n#define APU_USE_GDBM    0\n",
                      "markdown": "`#define APU_SELECT_DBM_H\n\n/*\n** The following macros control what features APRUTIL will use\n*/\n#define APU_USE_SDBM    1\n#define APU_USE_GDBM    0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/private/apu_select_dbm.hw"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": " * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "` * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/private/apu_internal.h"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 59,
                  "endLine": 51,
                  "endColumn": 67,
                  "snippet": {
                    "text": "struct apr__ldap_dso_fntable {\n    /* legacy API */\n    int (*info)(apr_pool_t *pool, apr_ldap_err_t **result_err);\n    int (*init)(apr_pool_t *pool, LDAP **ldap, const char *hostname,\n                int portno, int secure, apr_ldap_err_t **result_err);\n    int (*ssl_init)(apr_pool_t *pool, const char *cert_auth_file,\n                    int cert_file_type, apr_ldap_err_t **result_err);\n",
                    "rendered": {
                      "text": "struct apr__ldap_dso_fntable {\n    /* legacy API */\n    int (*info)(apr_pool_t *pool, apr_ldap_err_t **result_err);\n    int (*init)(apr_pool_t *pool, LDAP **ldap, const char *hostname,\n                int portno, int secure, apr_ldap_err_t **result_err);\n    int (*ssl_init)(apr_pool_t *pool, const char *cert_auth_file,\n                    int cert_file_type, apr_ldap_err_t **result_err);\n",
                      "markdown": "`struct apr__ldap_dso_fntable {\n    /* legacy API */\n    int (*info)(apr_pool_t *pool, apr_ldap_err_t **result_err);\n    int (*init)(apr_pool_t *pool, LDAP **ldap, const char *hostname,\n                int portno, int secure, apr_ldap_err_t **result_err);\n    int (*ssl_init)(apr_pool_t *pool, const char *cert_auth_file,\n                    int cert_file_type, apr_ldap_err_t **result_err);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apu.h.in"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 46,
                  "endLine": 88,
                  "endColumn": 50,
                  "snippet": {
                    "text": "/**\n * Declare a dso module's exported module structure as APU_MODULE_DECLARE_DATA.\n *\n * Unless APU_MODULE_DECLARE_STATIC is defined at compile time, symbols \n * declared with APU_MODULE_DECLARE_DATA are always exported.\n * @code\n * module APU_MODULE_DECLARE_DATA mod_tag\n",
                    "rendered": {
                      "text": "/**\n * Declare a dso module's exported module structure as APU_MODULE_DECLARE_DATA.\n *\n * Unless APU_MODULE_DECLARE_STATIC is defined at compile time, symbols \n * declared with APU_MODULE_DECLARE_DATA are always exported.\n * @code\n * module APU_MODULE_DECLARE_DATA mod_tag\n",
                      "markdown": "`/**\n * Declare a dso module's exported module structure as APU_MODULE_DECLARE_DATA.\n *\n * Unless APU_MODULE_DECLARE_STATIC is defined at compile time, symbols \n * declared with APU_MODULE_DECLARE_DATA are always exported.\n * @code\n * module APU_MODULE_DECLARE_DATA mod_tag\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apu.h.in"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 54,
                  "endLine": 63,
                  "endColumn": 58,
                  "snippet": {
                    "text": "#define APU_DECLARE_NONSTD(type)     type\n/**\n * The public APR-UTIL variables are declared with APU_DECLARE_DATA.\n * This assures the appropriate indirection is invoked at compile time.\n *\n * @fn APU_DECLARE_DATA type apr_variable;\n * @note APU_DECLARE_DATA extern type apr_variable; syntax is required for\n",
                    "rendered": {
                      "text": "#define APU_DECLARE_NONSTD(type)     type\n/**\n * The public APR-UTIL variables are declared with APU_DECLARE_DATA.\n * This assures the appropriate indirection is invoked at compile time.\n *\n * @fn APU_DECLARE_DATA type apr_variable;\n * @note APU_DECLARE_DATA extern type apr_variable; syntax is required for\n",
                      "markdown": "`#define APU_DECLARE_NONSTD(type)     type\n/**\n * The public APR-UTIL variables are declared with APU_DECLARE_DATA.\n * This assures the appropriate indirection is invoked at compile time.\n *\n * @fn APU_DECLARE_DATA type apr_variable;\n * @note APU_DECLARE_DATA extern type apr_variable; syntax is required for\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apu.h.in"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 14,
                  "endLine": 42,
                  "endColumn": 18,
                  "snippet": {
                    "text": " * APU_DECLARE_STATIC and APU_DECLARE_EXPORT are left undefined when\n * including the APR-UTIL public headers, to import and link the symbols from \n * the dynamic APR-UTIL library and assure appropriate indirection and calling\n * conventions at compile time.\n */\n\n#if defined(DOXYGEN) || !defined(WIN32)\n",
                    "rendered": {
                      "text": " * APU_DECLARE_STATIC and APU_DECLARE_EXPORT are left undefined when\n * including the APR-UTIL public headers, to import and link the symbols from \n * the dynamic APR-UTIL library and assure appropriate indirection and calling\n * conventions at compile time.\n */\n\n#if defined(DOXYGEN) || !defined(WIN32)\n",
                      "markdown": "` * APU_DECLARE_STATIC and APU_DECLARE_EXPORT are left undefined when\n * including the APR-UTIL public headers, to import and link the symbols from \n * the dynamic APR-UTIL library and assure appropriate indirection and calling\n * conventions at compile time.\n */\n\n#if defined(DOXYGEN) || !defined(WIN32)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apu.h.in"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": " * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "` * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_md5.h"
                },
                "region": {
                  "startLine": 167,
                  "startColumn": 30,
                  "endLine": 167,
                  "endColumn": 38,
                  "snippet": {
                    "text": " * @param passwd The password to validate\n * @param hash The password to validate against\n */\nAPU_DECLARE(apr_status_t) apr_password_validate(const char *passwd, \n                                                const char *hash);\n\n\n",
                    "rendered": {
                      "text": " * @param passwd The password to validate\n * @param hash The password to validate against\n */\nAPU_DECLARE(apr_status_t) apr_password_validate(const char *passwd, \n                                                const char *hash);\n\n\n",
                      "markdown": "` * @param passwd The password to validate\n * @param hash The password to validate against\n */\nAPU_DECLARE(apr_status_t) apr_password_validate(const char *passwd, \n                                                const char *hash);\n\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_md5.h"
                },
                "region": {
                  "startLine": 165,
                  "startColumn": 19,
                  "endLine": 165,
                  "endColumn": 27,
                  "snippet": {
                    "text": " * that don't support crypt(3), this falls back to a clear text string\n * comparison.\n * @param passwd The password to validate\n * @param hash The password to validate against\n */\nAPU_DECLARE(apr_status_t) apr_password_validate(const char *passwd, \n                                                const char *hash);\n",
                    "rendered": {
                      "text": " * that don't support crypt(3), this falls back to a clear text string\n * comparison.\n * @param passwd The password to validate\n * @param hash The password to validate against\n */\nAPU_DECLARE(apr_status_t) apr_password_validate(const char *passwd, \n                                                const char *hash);\n",
                      "markdown": "` * that don't support crypt(3), this falls back to a clear text string\n * comparison.\n * @param passwd The password to validate\n * @param hash The password to validate against\n */\nAPU_DECLARE(apr_status_t) apr_password_validate(const char *passwd, \n                                                const char *hash);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_md5.h"
                },
                "region": {
                  "startLine": 164,
                  "startColumn": 21,
                  "endLine": 164,
                  "endColumn": 29,
                  "snippet": {
                    "text": " * application will be run only on platforms that support it.  On platforms\n * that don't support crypt(3), this falls back to a clear text string\n * comparison.\n * @param passwd The password to validate\n * @param hash The password to validate against\n */\nAPU_DECLARE(apr_status_t) apr_password_validate(const char *passwd, \n",
                    "rendered": {
                      "text": " * application will be run only on platforms that support it.  On platforms\n * that don't support crypt(3), this falls back to a clear text string\n * comparison.\n * @param passwd The password to validate\n * @param hash The password to validate against\n */\nAPU_DECLARE(apr_status_t) apr_password_validate(const char *passwd, \n",
                      "markdown": "` * application will be run only on platforms that support it.  On platforms\n * that don't support crypt(3), this falls back to a clear text string\n * comparison.\n * @param passwd The password to validate\n * @param hash The password to validate against\n */\nAPU_DECLARE(apr_status_t) apr_password_validate(const char *passwd, \n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_md5.h"
                },
                "region": {
                  "startLine": 148,
                  "startColumn": 46,
                  "endLine": 148,
                  "endColumn": 54,
                  "snippet": {
                    "text": " * @param count The cost of the encoding, possible values are 4 to 31\n * @param salt Pointer to binary data to be used as salt for the encoding\n * @param salt_len The size of the salt data (must be >= 16)\n * @param out The string to store the encoded password in\n * @param out_len The size of the result buffer (must be >= 61)\n */\nAPU_DECLARE(apr_status_t) apr_bcrypt_encode(const char *pw,\n",
                    "rendered": {
                      "text": " * @param count The cost of the encoding, possible values are 4 to 31\n * @param salt Pointer to binary data to be used as salt for the encoding\n * @param salt_len The size of the salt data (must be >= 16)\n * @param out The string to store the encoded password in\n * @param out_len The size of the result buffer (must be >= 61)\n */\nAPU_DECLARE(apr_status_t) apr_bcrypt_encode(const char *pw,\n",
                      "markdown": "` * @param count The cost of the encoding, possible values are 4 to 31\n * @param salt Pointer to binary data to be used as salt for the encoding\n * @param salt_len The size of the salt data (must be >= 16)\n * @param out The string to store the encoded password in\n * @param out_len The size of the result buffer (must be >= 61)\n */\nAPU_DECLARE(apr_status_t) apr_bcrypt_encode(const char *pw,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_md5.h"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 23,
                  "endLine": 144,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\n/**\n * Encode a password using the bcrypt algorithm\n * @param password The password to encode\n * @param count The cost of the encoding, possible values are 4 to 31\n * @param salt Pointer to binary data to be used as salt for the encoding\n * @param salt_len The size of the salt data (must be >= 16)\n",
                    "rendered": {
                      "text": "\n/**\n * Encode a password using the bcrypt algorithm\n * @param password The password to encode\n * @param count The cost of the encoding, possible values are 4 to 31\n * @param salt Pointer to binary data to be used as salt for the encoding\n * @param salt_len The size of the salt data (must be >= 16)\n",
                      "markdown": "`\n/**\n * Encode a password using the bcrypt algorithm\n * @param password The password to encode\n * @param count The cost of the encoding, possible values are 4 to 31\n * @param salt Pointer to binary data to be used as salt for the encoding\n * @param salt_len The size of the salt data (must be >= 16)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_md5.h"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 10,
                  "endLine": 144,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\n/**\n * Encode a password using the bcrypt algorithm\n * @param password The password to encode\n * @param count The cost of the encoding, possible values are 4 to 31\n * @param salt Pointer to binary data to be used as salt for the encoding\n * @param salt_len The size of the salt data (must be >= 16)\n",
                    "rendered": {
                      "text": "\n/**\n * Encode a password using the bcrypt algorithm\n * @param password The password to encode\n * @param count The cost of the encoding, possible values are 4 to 31\n * @param salt Pointer to binary data to be used as salt for the encoding\n * @param salt_len The size of the salt data (must be >= 16)\n",
                      "markdown": "`\n/**\n * Encode a password using the bcrypt algorithm\n * @param password The password to encode\n * @param count The cost of the encoding, possible values are 4 to 31\n * @param salt Pointer to binary data to be used as salt for the encoding\n * @param salt_len The size of the salt data (must be >= 16)\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_md5.h"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 12,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                                         char *result, apr_size_t nbytes);\n\n/**\n * Encode a password using the bcrypt algorithm\n * @param password The password to encode\n * @param count The cost of the encoding, possible values are 4 to 31\n * @param salt Pointer to binary data to be used as salt for the encoding\n",
                    "rendered": {
                      "text": "                                         char *result, apr_size_t nbytes);\n\n/**\n * Encode a password using the bcrypt algorithm\n * @param password The password to encode\n * @param count The cost of the encoding, possible values are 4 to 31\n * @param salt Pointer to binary data to be used as salt for the encoding\n",
                      "markdown": "`                                         char *result, apr_size_t nbytes);\n\n/**\n * Encode a password using the bcrypt algorithm\n * @param password The password to encode\n * @param count The cost of the encoding, possible values are 4 to 31\n * @param salt Pointer to binary data to be used as salt for the encoding\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_md5.h"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 53,
                  "endLine": 139,
                  "endColumn": 61,
                  "snippet": {
                    "text": " * @param result The string to store the encoded password in\n * @param nbytes The size of the result buffer\n */\nAPU_DECLARE(apr_status_t) apr_md5_encode(const char *password, const char *salt,\n                                         char *result, apr_size_t nbytes);\n\n/**\n",
                    "rendered": {
                      "text": " * @param result The string to store the encoded password in\n * @param nbytes The size of the result buffer\n */\nAPU_DECLARE(apr_status_t) apr_md5_encode(const char *password, const char *salt,\n                                         char *result, apr_size_t nbytes);\n\n/**\n",
                      "markdown": "` * @param result The string to store the encoded password in\n * @param nbytes The size of the result buffer\n */\nAPU_DECLARE(apr_status_t) apr_md5_encode(const char *password, const char *salt,\n                                         char *result, apr_size_t nbytes);\n\n/**\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_md5.h"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 49,
                  "endLine": 136,
                  "endColumn": 57,
                  "snippet": {
                    "text": " * Encode a password using an MD5 algorithm\n * @param password The password to encode\n * @param salt The salt string to use for the encoding\n * @param result The string to store the encoded password in\n * @param nbytes The size of the result buffer\n */\nAPU_DECLARE(apr_status_t) apr_md5_encode(const char *password, const char *salt,\n",
                    "rendered": {
                      "text": " * Encode a password using an MD5 algorithm\n * @param password The password to encode\n * @param salt The salt string to use for the encoding\n * @param result The string to store the encoded password in\n * @param nbytes The size of the result buffer\n */\nAPU_DECLARE(apr_status_t) apr_md5_encode(const char *password, const char *salt,\n",
                      "markdown": "` * Encode a password using an MD5 algorithm\n * @param password The password to encode\n * @param salt The salt string to use for the encoding\n * @param result The string to store the encoded password in\n * @param nbytes The size of the result buffer\n */\nAPU_DECLARE(apr_status_t) apr_md5_encode(const char *password, const char *salt,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_md5.h"
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 23,
                  "endLine": 134,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\n/**\n * Encode a password using an MD5 algorithm\n * @param password The password to encode\n * @param salt The salt string to use for the encoding\n * @param result The string to store the encoded password in\n * @param nbytes The size of the result buffer\n",
                    "rendered": {
                      "text": "\n/**\n * Encode a password using an MD5 algorithm\n * @param password The password to encode\n * @param salt The salt string to use for the encoding\n * @param result The string to store the encoded password in\n * @param nbytes The size of the result buffer\n",
                      "markdown": "`\n/**\n * Encode a password using an MD5 algorithm\n * @param password The password to encode\n * @param salt The salt string to use for the encoding\n * @param result The string to store the encoded password in\n * @param nbytes The size of the result buffer\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_md5.h"
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 10,
                  "endLine": 134,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\n/**\n * Encode a password using an MD5 algorithm\n * @param password The password to encode\n * @param salt The salt string to use for the encoding\n * @param result The string to store the encoded password in\n * @param nbytes The size of the result buffer\n",
                    "rendered": {
                      "text": "\n/**\n * Encode a password using an MD5 algorithm\n * @param password The password to encode\n * @param salt The salt string to use for the encoding\n * @param result The string to store the encoded password in\n * @param nbytes The size of the result buffer\n",
                      "markdown": "`\n/**\n * Encode a password using an MD5 algorithm\n * @param password The password to encode\n * @param salt The salt string to use for the encoding\n * @param result The string to store the encoded password in\n * @param nbytes The size of the result buffer\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apr_md5.h"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 12,
                  "endLine": 133,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                                  apr_size_t inputLen);\n\n/**\n * Encode a password using an MD5 algorithm\n * @param password The password to encode\n * @param salt The salt string to use for the encoding\n * @param result The string to store the encoded password in\n",
                    "rendered": {
                      "text": "                                  apr_size_t inputLen);\n\n/**\n * Encode a password using an MD5 algorithm\n * @param password The password to encode\n * @param salt The salt string to use for the encoding\n * @param result The string to store the encoded password in\n",
                      "markdown": "`                                  apr_size_t inputLen);\n\n/**\n * Encode a password using an MD5 algorithm\n * @param password The password to encode\n * @param salt The salt string to use for the encoding\n * @param result The string to store the encoded password in\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apu_errno.h"
                },
                "region": {
                  "startLine": 232,
                  "startColumn": 55,
                  "endLine": 232,
                  "endColumn": 63,
                  "snippet": {
                    "text": " */\n#define APR_STATUS_IS_INAPPROPRIATE_AUTH(s)        ((s) == APR_INAPPROPRIATE_AUTH)\n/**\n * Invalid credentials were presented (e.g., the wrong password).\n */\n#define APR_STATUS_IS_INVALID_CREDENTIALS(s)        ((s) == APR_INVALID_CREDENTIALS)\n/**\n",
                    "rendered": {
                      "text": " */\n#define APR_STATUS_IS_INAPPROPRIATE_AUTH(s)        ((s) == APR_INAPPROPRIATE_AUTH)\n/**\n * Invalid credentials were presented (e.g., the wrong password).\n */\n#define APR_STATUS_IS_INVALID_CREDENTIALS(s)        ((s) == APR_INVALID_CREDENTIALS)\n/**\n",
                      "markdown": "` */\n#define APR_STATUS_IS_INAPPROPRIATE_AUTH(s)        ((s) == APR_INAPPROPRIATE_AUTH)\n/**\n * Invalid credentials were presented (e.g., the wrong password).\n */\n#define APR_STATUS_IS_INVALID_CREDENTIALS(s)        ((s) == APR_INVALID_CREDENTIALS)\n/**\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/include/apu_errno.h"
                },
                "region": {
                  "startLine": 228,
                  "startColumn": 51,
                  "endLine": 228,
                  "endColumn": 59,
                  "snippet": {
                    "text": "#define APR_STATUS_IS_PROXY_AUTH(s)        ((s) == APR_PROXY_AUTH)\n/**\n * Inappropriate authentication was specified (e.g., simple auth\n * was specified but the entry does not have a userPassword attribute).\n */\n#define APR_STATUS_IS_INAPPROPRIATE_AUTH(s)        ((s) == APR_INAPPROPRIATE_AUTH)\n/**\n",
                    "rendered": {
                      "text": "#define APR_STATUS_IS_PROXY_AUTH(s)        ((s) == APR_PROXY_AUTH)\n/**\n * Inappropriate authentication was specified (e.g., simple auth\n * was specified but the entry does not have a userPassword attribute).\n */\n#define APR_STATUS_IS_INAPPROPRIATE_AUTH(s)        ((s) == APR_INAPPROPRIATE_AUTH)\n/**\n",
                      "markdown": "`#define APR_STATUS_IS_PROXY_AUTH(s)        ((s) == APR_PROXY_AUTH)\n/**\n * Inappropriate authentication was specified (e.g., simple auth\n * was specified but the entry does not have a userPassword attribute).\n */\n#define APR_STATUS_IS_INAPPROPRIATE_AUTH(s)        ((s) == APR_INAPPROPRIATE_AUTH)\n/**\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/misc/apu_dso.c"
                },
                "region": {
                  "startLine": 160,
                  "startColumn": 13,
                  "endLine": 160,
                  "endColumn": 20,
                  "snippet": {
                    "text": "    global = apr_hash_pool_get(dsos);\n\n    /* Retrieve our path search list or prepare for a single search */\n    if ((apr_env_get(&pathlist, APR_DSOPATH, pool) != APR_SUCCESS)\n          || (apr_filepath_list_split(&paths, pathlist, pool) != APR_SUCCESS))\n        paths = apr_array_make(pool, 1, sizeof(char*));\n\n",
                    "rendered": {
                      "text": "    global = apr_hash_pool_get(dsos);\n\n    /* Retrieve our path search list or prepare for a single search */\n    if ((apr_env_get(&pathlist, APR_DSOPATH, pool) != APR_SUCCESS)\n          || (apr_filepath_list_split(&paths, pathlist, pool) != APR_SUCCESS))\n        paths = apr_array_make(pool, 1, sizeof(char*));\n\n",
                      "markdown": "`    global = apr_hash_pool_get(dsos);\n\n    /* Retrieve our path search list or prepare for a single search */\n    if ((apr_env_get(&pathlist, APR_DSOPATH, pool) != APR_SUCCESS)\n          || (apr_filepath_list_split(&paths, pathlist, pool) != APR_SUCCESS))\n        paths = apr_array_make(pool, 1, sizeof(char*));\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/config.layout"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 47,
                  "endLine": 9,
                  "endColumn": 51,
                  "snippet": {
                    "text": "##  - when no --enable-layout option is given, the default layout is `apr'\n##  - a trailing plus character (`+') on paths is replaced with a \n##    `/<target>' suffix where <target> is currently hardcoded to 'apr'.\n##    (This may become a configurable parameter at some point.)\n##\n\n#   Classical APR-util path layout designed for parallel installs.\n",
                    "rendered": {
                      "text": "##  - when no --enable-layout option is given, the default layout is `apr'\n##  - a trailing plus character (`+') on paths is replaced with a \n##    `/<target>' suffix where <target> is currently hardcoded to 'apr'.\n##    (This may become a configurable parameter at some point.)\n##\n\n#   Classical APR-util path layout designed for parallel installs.\n",
                      "markdown": "`##  - when no --enable-layout option is given, the default layout is `apr'\n##  - a trailing plus character (`+') on paths is replaced with a \n##    `/<target>' suffix where <target> is currently hardcoded to 'apr'.\n##    (This may become a configurable parameter at some point.)\n##\n\n#   Classical APR-util path layout designed for parallel installs.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/config.layout"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 3,
                  "endLine": 97,
                  "endColumn": 8,
                  "snippet": {
                    "text": "    runtimedir:    ${localstatedir}/run\n</Layout>\n\n#   Red Hat Linux 7.x layout\n<Layout RedHat>\n    prefix:        /usr\n    exec_prefix:   ${prefix}\n",
                    "rendered": {
                      "text": "    runtimedir:    ${localstatedir}/run\n</Layout>\n\n#   Red Hat Linux 7.x layout\n<Layout RedHat>\n    prefix:        /usr\n    exec_prefix:   ${prefix}\n",
                      "markdown": "`    runtimedir:    ${localstatedir}/run\n</Layout>\n\n#   Red Hat Linux 7.x layout\n<Layout RedHat>\n    prefix:        /usr\n    exec_prefix:   ${prefix}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/NWGNUmakefile"
                },
                "region": {
                  "startLine": 132,
                  "startColumn": 25,
                  "endLine": 132,
                  "endColumn": 40,
                  "snippet": {
                    "text": "NLM_THREAD_NAME\t=\n#\n# If this is specified, it will override VERSION value in\n# $(APR_WORK)/build/NWGNUenvironment.inc\n#\nNLM_VERSION\t=\n\n",
                    "rendered": {
                      "text": "NLM_THREAD_NAME\t=\n#\n# If this is specified, it will override VERSION value in\n# $(APR_WORK)/build/NWGNUenvironment.inc\n#\nNLM_VERSION\t=\n\n",
                      "markdown": "`NLM_THREAD_NAME\t=\n#\n# If this is specified, it will override VERSION value in\n# $(APR_WORK)/build/NWGNUenvironment.inc\n#\nNLM_VERSION\t=\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/NWGNUmakefile"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 30,
                  "endLine": 23,
                  "endColumn": 72,
                  "snippet": {
                    "text": "endif\n\n#\n# Get the 'head' of the build environment.  This includes default targets and\n# paths to tools\n#\n\n",
                    "rendered": {
                      "text": "endif\n\n#\n# Get the 'head' of the build environment.  This includes default targets and\n# paths to tools\n#\n\n",
                      "markdown": "`endif\n\n#\n# Get the 'head' of the build environment.  This includes default targets and\n# paths to tools\n#\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/NWGNUmakefile"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 27,
                  "endLine": 34,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n",
                    "rendered": {
                      "text": "#\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n",
                      "markdown": "`#\n\n#\n# These directories will be at the beginning of the include list, followed by\n# INCDIRS\n#\nXINCDIRS\t+= \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/Makefile.win"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 11,
                  "endLine": 45,
                  "endColumn": 15,
                  "snippet": {
                    "text": "# Provide a DBM_LIST argument after configuring LIB and INCLUDE with\n# the SDK paths of the corresponding database support libraries.  Right\n# now only db has been configured, gdbm and ndbm require additional study.\n# Note that at this time, none of these are supported on win32, per say.\n#\n#     DBM_LIST=\"db gdbm\"\n#\n",
                    "rendered": {
                      "text": "# Provide a DBM_LIST argument after configuring LIB and INCLUDE with\n# the SDK paths of the corresponding database support libraries.  Right\n# now only db has been configured, gdbm and ndbm require additional study.\n# Note that at this time, none of these are supported on win32, per say.\n#\n#     DBM_LIST=\"db gdbm\"\n#\n",
                      "markdown": "`# Provide a DBM_LIST argument after configuring LIB and INCLUDE with\n# the SDK paths of the corresponding database support libraries.  Right\n# now only db has been configured, gdbm and ndbm require additional study.\n# Note that at this time, none of these are supported on win32, per say.\n#\n#     DBM_LIST=\"db gdbm\"\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/Makefile.win"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 11,
                  "endLine": 38,
                  "endColumn": 15,
                  "snippet": {
                    "text": "# Provide a DBD_LIST argument after configuring LIB and INCLUDE with\n# the SDK paths of the corresponding client support libraries.\n# ODBC is always built on Windows, so it does not get included in DBD_LIST\n# Note that at this time, none of these are supported on win32, per say.\n#\n#     DBD_LIST=\"sqlite3 pgsql oracle mysql freetds\"\n#\n",
                    "rendered": {
                      "text": "# Provide a DBD_LIST argument after configuring LIB and INCLUDE with\n# the SDK paths of the corresponding client support libraries.\n# ODBC is always built on Windows, so it does not get included in DBD_LIST\n# Note that at this time, none of these are supported on win32, per say.\n#\n#     DBD_LIST=\"sqlite3 pgsql oracle mysql freetds\"\n#\n",
                      "markdown": "`# Provide a DBD_LIST argument after configuring LIB and INCLUDE with\n# the SDK paths of the corresponding client support libraries.\n# ODBC is always built on Windows, so it does not get included in DBD_LIST\n# Note that at this time, none of these are supported on win32, per say.\n#\n#     DBD_LIST=\"sqlite3 pgsql oracle mysql freetds\"\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/Makefile.win"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 18,
                  "endLine": 27,
                  "endColumn": 22,
                  "snippet": {
                    "text": "#     ARCH=\"x64 Debug\"\n#\n# Provide the APR_PATH, API_PATH and APU_PATH entirely relative \n# to one another!  At this time, building the libraries themselves\n# is only expected to work if the defaults (../apr, ../apr-iconv \n# and ../apr-util) are used, or if they are built with USEMAK=1.\n#\n",
                    "rendered": {
                      "text": "#     ARCH=\"x64 Debug\"\n#\n# Provide the APR_PATH, API_PATH and APU_PATH entirely relative \n# to one another!  At this time, building the libraries themselves\n# is only expected to work if the defaults (../apr, ../apr-iconv \n# and ../apr-util) are used, or if they are built with USEMAK=1.\n#\n",
                      "markdown": "`#     ARCH=\"x64 Debug\"\n#\n# Provide the APR_PATH, API_PATH and APU_PATH entirely relative \n# to one another!  At this time, building the libraries themselves\n# is only expected to work if the defaults (../apr, ../apr-iconv \n# and ../apr-util) are used, or if they are built with USEMAK=1.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/Makefile.win"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 36,
                  "endLine": 40,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# ODBC is always built on Windows, so it does not get included in DBD_LIST\n# Note that at this time, none of these are supported on win32, per say.\n#\n#     DBD_LIST=\"sqlite3 pgsql oracle mysql freetds\"\n#\n# Provide a DBM_LIST argument after configuring LIB and INCLUDE with\n# the SDK paths of the corresponding database support libraries.  Right\n",
                    "rendered": {
                      "text": "# ODBC is always built on Windows, so it does not get included in DBD_LIST\n# Note that at this time, none of these are supported on win32, per say.\n#\n#     DBD_LIST=\"sqlite3 pgsql oracle mysql freetds\"\n#\n# Provide a DBM_LIST argument after configuring LIB and INCLUDE with\n# the SDK paths of the corresponding database support libraries.  Right\n",
                      "markdown": "`# ODBC is always built on Windows, so it does not get included in DBD_LIST\n# Note that at this time, none of these are supported on win32, per say.\n#\n#     DBD_LIST=\"sqlite3 pgsql oracle mysql freetds\"\n#\n# Provide a DBM_LIST argument after configuring LIB and INCLUDE with\n# the SDK paths of the corresponding database support libraries.  Right\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/export_vars.sh.in"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 23,
                  "endLine": 5,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# export_vars.sh\n#\n# This shell script is used to export vars to the application using the\n# APRUTIL library. This script should be \"sourced\" to ensure the variable\n# values are set within the calling script's context. For example:\n#\n#   $ . path/to/apr-util/export_vars.sh\n",
                    "rendered": {
                      "text": "# export_vars.sh\n#\n# This shell script is used to export vars to the application using the\n# APRUTIL library. This script should be \"sourced\" to ensure the variable\n# values are set within the calling script's context. For example:\n#\n#   $ . path/to/apr-util/export_vars.sh\n",
                      "markdown": "`# export_vars.sh\n#\n# This shell script is used to export vars to the application using the\n# APRUTIL library. This script should be \"sourced\" to ensure the variable\n# values are set within the calling script's context. For example:\n#\n#   $ . path/to/apr-util/export_vars.sh\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/export_vars.sh.in"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 12,
                  "endLine": 4,
                  "endColumn": 20,
                  "snippet": {
                    "text": "#\n# export_vars.sh\n#\n# This shell script is used to export vars to the application using the\n# APRUTIL library. This script should be \"sourced\" to ensure the variable\n# values are set within the calling script's context. For example:\n#\n",
                    "rendered": {
                      "text": "#\n# export_vars.sh\n#\n# This shell script is used to export vars to the application using the\n# APRUTIL library. This script should be \"sourced\" to ensure the variable\n# values are set within the calling script's context. For example:\n#\n",
                      "markdown": "`#\n# export_vars.sh\n#\n# This shell script is used to export vars to the application using the\n# APRUTIL library. This script should be \"sourced\" to ensure the variable\n# values are set within the calling script's context. For example:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/README.cmake"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\n   CMAKE_BUILD_TYPE\n\n       For NMake Makefiles the choices are at least DEBUG, RELEASE,\n       RELWITHDEBINFO, and MINSIZEREL\n       Other backends make have other selections.\n\n",
                    "rendered": {
                      "text": "\n   CMAKE_BUILD_TYPE\n\n       For NMake Makefiles the choices are at least DEBUG, RELEASE,\n       RELWITHDEBINFO, and MINSIZEREL\n       Other backends make have other selections.\n\n",
                      "markdown": "`\n   CMAKE_BUILD_TYPE\n\n       For NMake Makefiles the choices are at least DEBUG, RELEASE,\n       RELWITHDEBINFO, and MINSIZEREL\n       Other backends make have other selections.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/README.cmake"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 33,
                  "endLine": 73,
                  "endColumn": 41,
                  "snippet": {
                    "text": "     -DAPR_INCLUDE_DIR=d:/path/to/apr1inst/include\n     -DAPR_LIBRARIES=d:/path/to/apr1inst/lib/libapr-1.lib\n\n   Alternately, use cmake-gui and update settings in the GUI.\n\n   APR-Util feature flags:\n\n",
                    "rendered": {
                      "text": "     -DAPR_INCLUDE_DIR=d:/path/to/apr1inst/include\n     -DAPR_LIBRARIES=d:/path/to/apr1inst/lib/libapr-1.lib\n\n   Alternately, use cmake-gui and update settings in the GUI.\n\n   APR-Util feature flags:\n\n",
                      "markdown": "`     -DAPR_INCLUDE_DIR=d:/path/to/apr1inst/include\n     -DAPR_LIBRARIES=d:/path/to/apr1inst/lib/libapr-1.lib\n\n   Alternately, use cmake-gui and update settings in the GUI.\n\n   APR-Util feature flags:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/README.cmake"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 35,
                  "endLine": 82,
                  "endColumn": 44,
                  "snippet": {
                    "text": "                              Default: OFF\n       APU_HAVE_ODBC          Build ODBC DBD driver\n                              Default: ON\n       APU_HAVE_SQLITE3       Build SQLite3 DBD driver\n                              Default: OFF\n       APU_HAVE_PGSQL         Build PostgreSQL DBD driver\n                              Default: OFF\n",
                    "rendered": {
                      "text": "                              Default: OFF\n       APU_HAVE_ODBC          Build ODBC DBD driver\n                              Default: ON\n       APU_HAVE_SQLITE3       Build SQLite3 DBD driver\n                              Default: OFF\n       APU_HAVE_PGSQL         Build PostgreSQL DBD driver\n                              Default: OFF\n",
                      "markdown": "`                              Default: OFF\n       APU_HAVE_ODBC          Build ODBC DBD driver\n                              Default: ON\n       APU_HAVE_SQLITE3       Build SQLite3 DBD driver\n                              Default: OFF\n       APU_HAVE_PGSQL         Build PostgreSQL DBD driver\n                              Default: OFF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/README.cmake"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 59,
                  "endLine": 78,
                  "snippet": {
                    "text": "\n   APR-Util feature flags:\n\n       APU_HAVE_CRYPTO        Build crypt support (only the OpenSSL\n                              implementation is currently supported)\n                              Default: OFF\n       APU_HAVE_ODBC          Build ODBC DBD driver\n                              Default: ON\n",
                    "rendered": {
                      "text": "\n   APR-Util feature flags:\n\n       APU_HAVE_CRYPTO        Build crypt support (only the OpenSSL\n                              implementation is currently supported)\n                              Default: OFF\n       APU_HAVE_ODBC          Build ODBC DBD driver\n                              Default: ON\n",
                      "markdown": "`\n   APR-Util feature flags:\n\n       APU_HAVE_CRYPTO        Build crypt support (only the OpenSSL\n                              implementation is currently supported)\n                              Default: OFF\n       APU_HAVE_ODBC          Build ODBC DBD driver\n                              Default: ON\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/README.cmake"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 1,
                  "endLine": 46,
                  "snippet": {
                    "text": "\nOptional support libraries allow optional features of APR to be enabled:\n\n* OpenSSL\n* many others potentially, though the build support isn't currently\n  implemented\n\nHow to build\n",
                    "rendered": {
                      "text": "\nOptional support libraries allow optional features of APR to be enabled:\n\n* OpenSSL\n* many others potentially, though the build support isn't currently\n  implemented\n\nHow to build\n",
                      "markdown": "`\nOptional support libraries allow optional features of APR to be enabled:\n\n* OpenSSL\n* many others potentially, though the build support isn't currently\n  implemented\n\nHow to build\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/apu-config.in"
                },
                "region": {
                  "startLine": 190,
                  "startColumn": 23,
                  "endLine": 190,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    # If the LA_FILE exists where we think it should be, use it.  If we're\n    # installed and the LA_FILE does not exist, assume to use -L/-l\n    # (the LA_FILE may not have been installed).  If we're building ourselves,\n    # we'll assume that at some point the .la file be created.\n    if test -f \"$LA_FILE\"; then\n        flags=\"$flags $LA_FILE\"\n    elif test \"$location\" = \"installed\"; then\n",
                    "rendered": {
                      "text": "    # If the LA_FILE exists where we think it should be, use it.  If we're\n    # installed and the LA_FILE does not exist, assume to use -L/-l\n    # (the LA_FILE may not have been installed).  If we're building ourselves,\n    # we'll assume that at some point the .la file be created.\n    if test -f \"$LA_FILE\"; then\n        flags=\"$flags $LA_FILE\"\n    elif test \"$location\" = \"installed\"; then\n",
                      "markdown": "`    # If the LA_FILE exists where we think it should be, use it.  If we're\n    # installed and the LA_FILE does not exist, assume to use -L/-l\n    # (the LA_FILE may not have been installed).  If we're building ourselves,\n    # we'll assume that at some point the .la file be created.\n    if test -f \"$LA_FILE\"; then\n        flags=\"$flags $LA_FILE\"\n    elif test \"$location\" = \"installed\"; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/apu-config.in"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 52,
                  "endLine": 8,
                  "snippet": {
                    "text": "# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/apu-config.in"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 29,
                  "endLine": 107,
                  "endColumn": 34,
                  "snippet": {
                    "text": "while test $# -gt 0; do\n    # Normalize the prefix.\n    case \"$1\" in\n    -*=*) optarg=`echo \"$1\" | sed 's/[-_a-zA-Z0-9]*=//'` ;;\n    *) optarg= ;;\n    esac\n\n",
                    "rendered": {
                      "text": "while test $# -gt 0; do\n    # Normalize the prefix.\n    case \"$1\" in\n    -*=*) optarg=`echo \"$1\" | sed 's/[-_a-zA-Z0-9]*=//'` ;;\n    *) optarg= ;;\n    esac\n\n",
                      "markdown": "`while test $# -gt 0; do\n    # Normalize the prefix.\n    case \"$1\" in\n    -*=*) optarg=`echo \"$1\" | sed 's/[-_a-zA-Z0-9]*=//'` ;;\n    *) optarg= ;;\n    esac\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/apu-config.in"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 3,
                  "endLine": 56,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\nshow_usage()\n{\n    cat << EOF\nUsage: apu-$APRUTIL_MAJOR_VERSION-config [OPTION]\n\nKnown values for OPTION are:\n",
                    "rendered": {
                      "text": "\nshow_usage()\n{\n    cat << EOF\nUsage: apu-$APRUTIL_MAJOR_VERSION-config [OPTION]\n\nKnown values for OPTION are:\n",
                      "markdown": "`\nshow_usage()\n{\n    cat << EOF\nUsage: apu-$APRUTIL_MAJOR_VERSION-config [OPTION]\n\nKnown values for OPTION are:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/apu-config.in"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 10,
                  "endLine": 18,
                  "endColumn": 18,
                  "snippet": {
                    "text": "# limitations under the License.\n#\n\n# APR-util script designed to allow easy command line access to APR-util\n# configuration parameters.\n\nAPRUTIL_MAJOR_VERSION=\"@APRUTIL_MAJOR_VERSION@\"\n",
                    "rendered": {
                      "text": "# limitations under the License.\n#\n\n# APR-util script designed to allow easy command line access to APR-util\n# configuration parameters.\n\nAPRUTIL_MAJOR_VERSION=\"@APRUTIL_MAJOR_VERSION@\"\n",
                      "markdown": "`# limitations under the License.\n#\n\n# APR-util script designed to allow easy command line access to APR-util\n# configuration parameters.\n\nAPRUTIL_MAJOR_VERSION=\"@APRUTIL_MAJOR_VERSION@\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/CHANGES"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 64,
                  "endLine": 49,
                  "snippet": {
                    "text": "     modules) and from unrelated pools (usually seen in unit tests).\n     [Graham Leggett]\n\n  *) apr_crypto_openssl: use OPENSSL_init_crypto() to initialise OpenSSL\n     on versions 1.1+. [Graham Leggett]\n\n  *) apr_jose: Add support for encoding and decoding of JSON Object\n     Signing and Encryption messages as per RFC7515, RFC7516, RFC7517\n",
                    "rendered": {
                      "text": "     modules) and from unrelated pools (usually seen in unit tests).\n     [Graham Leggett]\n\n  *) apr_crypto_openssl: use OPENSSL_init_crypto() to initialise OpenSSL\n     on versions 1.1+. [Graham Leggett]\n\n  *) apr_jose: Add support for encoding and decoding of JSON Object\n     Signing and Encryption messages as per RFC7515, RFC7516, RFC7517\n",
                      "markdown": "`     modules) and from unrelated pools (usually seen in unit tests).\n     [Graham Leggett]\n\n  *) apr_crypto_openssl: use OPENSSL_init_crypto() to initialise OpenSSL\n     on versions 1.1+. [Graham Leggett]\n\n  *) apr_jose: Add support for encoding and decoding of JSON Object\n     Signing and Encryption messages as per RFC7515, RFC7516, RFC7517\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/CHANGES"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 27,
                  "endLine": 32,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n  *) Add the ability to cross compile APR-Util. [Graham Leggett]\n\n  *) Teach configure how to find and build against MariaDB 10.2. PR 61517\n     [Kris Karas <bugs-a17 moonlit-rail.com>]\n\n  *) apr_crypto_commoncrypto: Remove stray reference to -lcrypto that\n",
                    "rendered": {
                      "text": "\n  *) Add the ability to cross compile APR-Util. [Graham Leggett]\n\n  *) Teach configure how to find and build against MariaDB 10.2. PR 61517\n     [Kris Karas <bugs-a17 moonlit-rail.com>]\n\n  *) apr_crypto_commoncrypto: Remove stray reference to -lcrypto that\n",
                      "markdown": "`\n  *) Add the ability to cross compile APR-Util. [Graham Leggett]\n\n  *) Teach configure how to find and build against MariaDB 10.2. PR 61517\n     [Kris Karas <bugs-a17 moonlit-rail.com>]\n\n  *) apr_crypto_commoncrypto: Remove stray reference to -lcrypto that\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/apr-util.zip/CHANGES"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 43,
                  "endLine": 15,
                  "endColumn": 52,
                  "snippet": {
                    "text": "  *) apr_memcache: Check sockets from connection pool before using them and try\n     to reconnect them if they are not usable any longer.[Ruediger Pluem]\n\n  *) apr_crypto_openssl: Compatibility with OpenSSL 3.  [Yann Ylavic]\n\n  *) configure: Fix configure for compilers which don't accept implicit\n     \"int\".  PR 66396.  [Florian Weimer <fweimer redhat.com>]\n",
                    "rendered": {
                      "text": "  *) apr_memcache: Check sockets from connection pool before using them and try\n     to reconnect them if they are not usable any longer.[Ruediger Pluem]\n\n  *) apr_crypto_openssl: Compatibility with OpenSSL 3.  [Yann Ylavic]\n\n  *) configure: Fix configure for compilers which don't accept implicit\n     \"int\".  PR 66396.  [Florian Weimer <fweimer redhat.com>]\n",
                      "markdown": "`  *) apr_memcache: Check sockets from connection pool before using them and try\n     to reconnect them if they are not usable any longer.[Ruediger Pluem]\n\n  *) apr_crypto_openssl: Compatibility with OpenSSL 3.  [Yann Ylavic]\n\n  *) configure: Fix configure for compilers which don't accept implicit\n     \"int\".  PR 66396.  [Florian Weimer <fweimer redhat.com>]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}