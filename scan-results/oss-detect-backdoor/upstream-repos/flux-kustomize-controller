{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/tests/fuzz/oss_fuzz_run.sh"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 59,
                  "endLine": 20,
                  "endColumn": 65,
                  "snippet": {
                    "text": "set -euxo pipefail\n\n# run each fuzzer once to ensure they are working properly\nfind /out -type f -iname \"fuzz*\" -exec echo {} -runs=1 \\; | bash -e\n",
                    "rendered": {
                      "text": "set -euxo pipefail\n\n# run each fuzzer once to ensure they are working properly\nfind /out -type f -iname \"fuzz*\" -exec echo {} -runs=1 \\; | bash -e\n",
                      "markdown": "`set -euxo pipefail\n\n# run each fuzzer once to ensure they are working properly\nfind /out -type f -iname \"fuzz*\" -exec echo {} -runs=1 \\; | bash -e\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/tests/fuzz/oss_fuzz_run.sh"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 38,
                  "endLine": 8,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/tests/fuzz/oss_fuzz_run.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\n# Copyright 2022 The Flux authors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\n# Copyright 2022 The Flux authors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n",
                      "markdown": "`#!/usr/bin/env bash\n\n# Copyright 2022 The Flux authors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/tests/fuzz/oss_fuzz_run.sh"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 59,
                  "endLine": 20,
                  "endColumn": 65,
                  "snippet": {
                    "text": "set -euxo pipefail\n\n# run each fuzzer once to ensure they are working properly\nfind /out -type f -iname \"fuzz*\" -exec echo {} -runs=1 \\; | bash -e\n",
                    "rendered": {
                      "text": "set -euxo pipefail\n\n# run each fuzzer once to ensure they are working properly\nfind /out -type f -iname \"fuzz*\" -exec echo {} -runs=1 \\; | bash -e\n",
                      "markdown": "`set -euxo pipefail\n\n# run each fuzzer once to ensure they are working properly\nfind /out -type f -iname \"fuzz*\" -exec echo {} -runs=1 \\; | bash -e\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/tests/fuzz/oss_fuzz_run.sh"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 58,
                  "endLine": 20,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nset -euxo pipefail\n\n# run each fuzzer once to ensure they are working properly\nfind /out -type f -iname \"fuzz*\" -exec echo {} -runs=1 \\; | bash -e\n",
                    "rendered": {
                      "text": "\nset -euxo pipefail\n\n# run each fuzzer once to ensure they are working properly\nfind /out -type f -iname \"fuzz*\" -exec echo {} -runs=1 \\; | bash -e\n",
                      "markdown": "`\nset -euxo pipefail\n\n# run each fuzzer once to ensure they are working properly\nfind /out -type f -iname \"fuzz*\" -exec echo {} -runs=1 \\; | bash -e\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/tests/fuzz/oss_fuzz_run.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\n# Copyright 2022 The Flux authors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\n# Copyright 2022 The Flux authors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n",
                      "markdown": "`#!/usr/bin/env bash\n\n# Copyright 2022 The Flux authors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/config/rbac/kustomization_viewer_role.yaml"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 3,
                  "endLine": 15,
                  "snippet": {
                    "text": "  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - kustomize.toolkit.fluxcd.io\n  resources:\n  - kustomizations/status\n",
                    "rendered": {
                      "text": "  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - kustomize.toolkit.fluxcd.io\n  resources:\n  - kustomizations/status\n",
                      "markdown": "`  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - kustomize.toolkit.fluxcd.io\n  resources:\n  - kustomizations/status\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/tests/fuzz/Dockerfile.builder"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 3,
                  "endLine": 13,
                  "endColumn": 9,
                  "snippet": {
                    "text": "ENV FLUX_CI=true\n\nCOPY ./ $SRC\nRUN wget https://raw.githubusercontent.com/google/oss-fuzz/master/projects/fluxcd/build.sh -O $SRC/build.sh\n\nWORKDIR $SRC\n",
                    "rendered": {
                      "text": "ENV FLUX_CI=true\n\nCOPY ./ $SRC\nRUN wget https://raw.githubusercontent.com/google/oss-fuzz/master/projects/fluxcd/build.sh -O $SRC/build.sh\n\nWORKDIR $SRC\n",
                      "markdown": "`ENV FLUX_CI=true\n\nCOPY ./ $SRC\nRUN wget https://raw.githubusercontent.com/google/oss-fuzz/master/projects/fluxcd/build.sh -O $SRC/build.sh\n\nWORKDIR $SRC\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/tests/fuzz/Dockerfile.builder"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 58,
                  "endLine": 10,
                  "endColumn": 4,
                  "snippet": {
                    "text": "    && tar -C temp-go/ -xzf go1.23.0.linux-amd64.tar.gz \\\n    && mv temp-go/go/* /root/.go/\n\nENV SRC=$GOPATH/src/github.com/fluxcd/kustomize-controller\nENV FLUX_CI=true\n\nCOPY ./ $SRC\nRUN wget https://raw.githubusercontent.com/google/oss-fuzz/master/projects/fluxcd/build.sh -O $SRC/build.sh\n",
                    "rendered": {
                      "text": "    && tar -C temp-go/ -xzf go1.23.0.linux-amd64.tar.gz \\\n    && mv temp-go/go/* /root/.go/\n\nENV SRC=$GOPATH/src/github.com/fluxcd/kustomize-controller\nENV FLUX_CI=true\n\nCOPY ./ $SRC\nRUN wget https://raw.githubusercontent.com/google/oss-fuzz/master/projects/fluxcd/build.sh -O $SRC/build.sh\n",
                      "markdown": "`    && tar -C temp-go/ -xzf go1.23.0.linux-amd64.tar.gz \\\n    && mv temp-go/go/* /root/.go/\n\nENV SRC=$GOPATH/src/github.com/fluxcd/kustomize-controller\nENV FLUX_CI=true\n\nCOPY ./ $SRC\nRUN wget https://raw.githubusercontent.com/google/oss-fuzz/master/projects/fluxcd/build.sh -O $SRC/build.sh\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/tests/fuzz/Dockerfile.builder"
                },
                "region": {
                  "startLine": 8,
                  "endLine": 9,
                  "endColumn": 4,
                  "snippet": {
                    "text": "    && rm -rf /root/.go/* \\\n    && tar -C temp-go/ -xzf go1.23.0.linux-amd64.tar.gz \\\n    && mv temp-go/go/* /root/.go/\n\nENV SRC=$GOPATH/src/github.com/fluxcd/kustomize-controller\nENV FLUX_CI=true\n\nCOPY ./ $SRC\n",
                    "rendered": {
                      "text": "    && rm -rf /root/.go/* \\\n    && tar -C temp-go/ -xzf go1.23.0.linux-amd64.tar.gz \\\n    && mv temp-go/go/* /root/.go/\n\nENV SRC=$GOPATH/src/github.com/fluxcd/kustomize-controller\nENV FLUX_CI=true\n\nCOPY ./ $SRC\n",
                      "markdown": "`    && rm -rf /root/.go/* \\\n    && tar -C temp-go/ -xzf go1.23.0.linux-amd64.tar.gz \\\n    && mv temp-go/go/* /root/.go/\n\nENV SRC=$GOPATH/src/github.com/fluxcd/kustomize-controller\nENV FLUX_CI=true\n\nCOPY ./ $SRC\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/tests/fuzz/Dockerfile.builder"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 6,
                  "endLine": 7,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    && mkdir temp-go \\\n    && rm -rf /root/.go/* \\\n    && tar -C temp-go/ -xzf go1.23.0.linux-amd64.tar.gz \\\n    && mv temp-go/go/* /root/.go/\n\nENV SRC=$GOPATH/src/github.com/fluxcd/kustomize-controller\nENV FLUX_CI=true\n",
                    "rendered": {
                      "text": "    && mkdir temp-go \\\n    && rm -rf /root/.go/* \\\n    && tar -C temp-go/ -xzf go1.23.0.linux-amd64.tar.gz \\\n    && mv temp-go/go/* /root/.go/\n\nENV SRC=$GOPATH/src/github.com/fluxcd/kustomize-controller\nENV FLUX_CI=true\n",
                      "markdown": "`    && mkdir temp-go \\\n    && rm -rf /root/.go/* \\\n    && tar -C temp-go/ -xzf go1.23.0.linux-amd64.tar.gz \\\n    && mv temp-go/go/* /root/.go/\n\nENV SRC=$GOPATH/src/github.com/fluxcd/kustomize-controller\nENV FLUX_CI=true\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/tests/fuzz/Dockerfile.builder"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 6,
                  "endLine": 6,
                  "endColumn": 11,
                  "snippet": {
                    "text": "RUN wget https://go.dev/dl/go1.23.0.linux-amd64.tar.gz \\\n    && mkdir temp-go \\\n    && rm -rf /root/.go/* \\\n    && tar -C temp-go/ -xzf go1.23.0.linux-amd64.tar.gz \\\n    && mv temp-go/go/* /root/.go/\n\nENV SRC=$GOPATH/src/github.com/fluxcd/kustomize-controller\n",
                    "rendered": {
                      "text": "RUN wget https://go.dev/dl/go1.23.0.linux-amd64.tar.gz \\\n    && mkdir temp-go \\\n    && rm -rf /root/.go/* \\\n    && tar -C temp-go/ -xzf go1.23.0.linux-amd64.tar.gz \\\n    && mv temp-go/go/* /root/.go/\n\nENV SRC=$GOPATH/src/github.com/fluxcd/kustomize-controller\n",
                      "markdown": "`RUN wget https://go.dev/dl/go1.23.0.linux-amd64.tar.gz \\\n    && mkdir temp-go \\\n    && rm -rf /root/.go/* \\\n    && tar -C temp-go/ -xzf go1.23.0.linux-amd64.tar.gz \\\n    && mv temp-go/go/* /root/.go/\n\nENV SRC=$GOPATH/src/github.com/fluxcd/kustomize-controller\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/tests/fuzz/Dockerfile.builder"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 3,
                  "endLine": 3,
                  "endColumn": 9,
                  "snippet": {
                    "text": "FROM gcr.io/oss-fuzz-base/base-builder-go\n\nRUN wget https://go.dev/dl/go1.23.0.linux-amd64.tar.gz \\\n    && mkdir temp-go \\\n    && rm -rf /root/.go/* \\\n    && tar -C temp-go/ -xzf go1.23.0.linux-amd64.tar.gz \\\n",
                    "rendered": {
                      "text": "FROM gcr.io/oss-fuzz-base/base-builder-go\n\nRUN wget https://go.dev/dl/go1.23.0.linux-amd64.tar.gz \\\n    && mkdir temp-go \\\n    && rm -rf /root/.go/* \\\n    && tar -C temp-go/ -xzf go1.23.0.linux-amd64.tar.gz \\\n",
                      "markdown": "`FROM gcr.io/oss-fuzz-base/base-builder-go\n\nRUN wget https://go.dev/dl/go1.23.0.linux-amd64.tar.gz \\\n    && mkdir temp-go \\\n    && rm -rf /root/.go/* \\\n    && tar -C temp-go/ -xzf go1.23.0.linux-amd64.tar.gz \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/tests/fuzz/oss_fuzz_prebuild.sh"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 38,
                  "endLine": 8,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/tests/fuzz/oss_fuzz_prebuild.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\n# Copyright 2022 The Flux authors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\n# Copyright 2022 The Flux authors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n",
                      "markdown": "`#!/usr/bin/env bash\n\n# Copyright 2022 The Flux authors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/tests/fuzz/oss_fuzz_prebuild.sh"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 41,
                  "endLine": 25,
                  "endColumn": 3,
                  "snippet": {
                    "text": "\n# Some tests requires embedded resources. Embedding does not allow\n# for traversing into ascending dirs, therefore we copy those contents here:\nmkdir -p internal/controller/testdata/crd\ncp config/crd/bases/*.yaml internal/controller/testdata/crd\n",
                    "rendered": {
                      "text": "\n# Some tests requires embedded resources. Embedding does not allow\n# for traversing into ascending dirs, therefore we copy those contents here:\nmkdir -p internal/controller/testdata/crd\ncp config/crd/bases/*.yaml internal/controller/testdata/crd\n",
                      "markdown": "`\n# Some tests requires embedded resources. Embedding does not allow\n# for traversing into ascending dirs, therefore we copy those contents here:\nmkdir -p internal/controller/testdata/crd\ncp config/crd/bases/*.yaml internal/controller/testdata/crd\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/tests/fuzz/oss_fuzz_prebuild.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\n# Copyright 2022 The Flux authors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\n# Copyright 2022 The Flux authors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n",
                      "markdown": "`#!/usr/bin/env bash\n\n# Copyright 2022 The Flux authors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/tests/fuzz/README.md"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 50,
                  "endLine": 59,
                  "endColumn": 3,
                  "snippet": {
                    "text": "// +build gofuzz_libfuzzer\n```\n\nThe build tag above is set at [go-118-fuzz-build].\nAt this point in time we can't pass on specific tags from [compile_native_go_fuzzer].\n\n### Running oss-fuzz locally\n\n",
                    "rendered": {
                      "text": "// +build gofuzz_libfuzzer\n```\n\nThe build tag above is set at [go-118-fuzz-build].\nAt this point in time we can't pass on specific tags from [compile_native_go_fuzzer].\n\n### Running oss-fuzz locally\n\n",
                      "markdown": "`// +build gofuzz_libfuzzer\n```\n\nThe build tag above is set at [go-118-fuzz-build].\nAt this point in time we can't pass on specific tags from [compile_native_go_fuzzer].\n\n### Running oss-fuzz locally\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/tests/fuzz/README.md"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 26,
                  "endLine": 58,
                  "endColumn": 30,
                  "snippet": {
                    "text": "// +build gofuzz_libfuzzer\n```\n\nThe build tag above is set at [go-118-fuzz-build].\nAt this point in time we can't pass on specific tags from [compile_native_go_fuzzer].\n\n### Running oss-fuzz locally\n",
                    "rendered": {
                      "text": "// +build gofuzz_libfuzzer\n```\n\nThe build tag above is set at [go-118-fuzz-build].\nAt this point in time we can't pass on specific tags from [compile_native_go_fuzzer].\n\n### Running oss-fuzz locally\n",
                      "markdown": "`// +build gofuzz_libfuzzer\n```\n\nThe build tag above is set at [go-118-fuzz-build].\nAt this point in time we can't pass on specific tags from [compile_native_go_fuzzer].\n\n### Running oss-fuzz locally\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/tests/fuzz/README.md"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 9,
                  "endLine": 52,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\nDue to the issue above, code duplication will occur when creating fuzz tests that rely on\nhelper functions that are shared with other tests. To avoid build issues, add a conditional\nbuild tag at the top of the `*_fuzz_test.go` file:\n```go\n//go:build gofuzz_libfuzzer\n// +build gofuzz_libfuzzer\n",
                    "rendered": {
                      "text": "\nDue to the issue above, code duplication will occur when creating fuzz tests that rely on\nhelper functions that are shared with other tests. To avoid build issues, add a conditional\nbuild tag at the top of the `*_fuzz_test.go` file:\n```go\n//go:build gofuzz_libfuzzer\n// +build gofuzz_libfuzzer\n",
                      "markdown": "`\nDue to the issue above, code duplication will occur when creating fuzz tests that rely on\nhelper functions that are shared with other tests. To avoid build issues, add a conditional\nbuild tag at the top of the `*_fuzz_test.go` file:\n```go\n//go:build gofuzz_libfuzzer\n// +build gofuzz_libfuzzer\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/tests/fuzz/README.md"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 3,
                  "endLine": 68,
                  "endColumn": 4,
                  "snippet": {
                    "text": "upstream. If our checks ever run out of sync with upstream, the upstream tests can be\nexecuted locally with:\n\n```\ngit clone --depth 1 https://github.com/google/oss-fuzz\ncd oss-fuzz\npython infra/helper.py build_image fluxcd\npython infra/helper.py build_fuzzers --sanitizer address --architecture x86_64 fluxcd\n",
                    "rendered": {
                      "text": "upstream. If our checks ever run out of sync with upstream, the upstream tests can be\nexecuted locally with:\n\n```\ngit clone --depth 1 https://github.com/google/oss-fuzz\ncd oss-fuzz\npython infra/helper.py build_image fluxcd\npython infra/helper.py build_fuzzers --sanitizer address --architecture x86_64 fluxcd\n",
                      "markdown": "`upstream. If our checks ever run out of sync with upstream, the upstream tests can be\nexecuted locally with:\n\n```\ngit clone --depth 1 https://github.com/google/oss-fuzz\ncd oss-fuzz\npython infra/helper.py build_image fluxcd\npython infra/helper.py build_fuzzers --sanitizer address --architecture x86_64 fluxcd\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/tests/fuzz/README.md"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 16,
                  "endLine": 59,
                  "endColumn": 22,
                  "snippet": {
                    "text": "```\n\nThe build tag above is set at [go-118-fuzz-build].\nAt this point in time we can't pass on specific tags from [compile_native_go_fuzzer].\n\n### Running oss-fuzz locally\n\n",
                    "rendered": {
                      "text": "```\n\nThe build tag above is set at [go-118-fuzz-build].\nAt this point in time we can't pass on specific tags from [compile_native_go_fuzzer].\n\n### Running oss-fuzz locally\n\n",
                      "markdown": "````\n\nThe build tag above is set at [go-118-fuzz-build].\nAt this point in time we can't pass on specific tags from [compile_native_go_fuzzer].\n\n### Running oss-fuzz locally\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/tests/fuzz/README.md"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 16,
                  "endLine": 52,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\nDue to the issue above, code duplication will occur when creating fuzz tests that rely on\nhelper functions that are shared with other tests. To avoid build issues, add a conditional\nbuild tag at the top of the `*_fuzz_test.go` file:\n```go\n//go:build gofuzz_libfuzzer\n// +build gofuzz_libfuzzer\n",
                    "rendered": {
                      "text": "\nDue to the issue above, code duplication will occur when creating fuzz tests that rely on\nhelper functions that are shared with other tests. To avoid build issues, add a conditional\nbuild tag at the top of the `*_fuzz_test.go` file:\n```go\n//go:build gofuzz_libfuzzer\n// +build gofuzz_libfuzzer\n",
                      "markdown": "`\nDue to the issue above, code duplication will occur when creating fuzz tests that rely on\nhelper functions that are shared with other tests. To avoid build issues, add a conditional\nbuild tag at the top of the `*_fuzz_test.go` file:\n```go\n//go:build gofuzz_libfuzzer\n// +build gofuzz_libfuzzer\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/tests/fuzz/README.md"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 8,
                  "snippet": {
                    "text": "Run fuzzer inside a container:\n\n```bash\n\tdocker run --rm -ti \\\n\t\t-v \"$(pwd)/build/fuzz/out\":/out \\\n\t\tgcr.io/oss-fuzz/fluxcd \\\n\t\t/out/fuzz_conditions_match\n",
                    "rendered": {
                      "text": "Run fuzzer inside a container:\n\n```bash\n\tdocker run --rm -ti \\\n\t\t-v \"$(pwd)/build/fuzz/out\":/out \\\n\t\tgcr.io/oss-fuzz/fluxcd \\\n\t\t/out/fuzz_conditions_match\n",
                      "markdown": "`Run fuzzer inside a container:\n\n```bash\n\tdocker run --rm -ti \\\n\t\t-v \"$(pwd)/build/fuzz/out\":/out \\\n\t\tgcr.io/oss-fuzz/fluxcd \\\n\t\t/out/fuzz_conditions_match\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/tests/fuzz/native_go_run.sh"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 38,
                  "endLine": 8,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/tests/fuzz/native_go_run.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\n# Copyright 2022 The Flux authors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\n# Copyright 2022 The Flux authors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n",
                      "markdown": "`#!/usr/bin/env bash\n\n# Copyright 2022 The Flux authors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/tests/fuzz/native_go_run.sh"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 3,
                  "endLine": 27,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# kustomization_fuzzer_test is not fully compatible with Go native fuzz,\n# so it is ignored here.\ntest_files=$(grep -r --include='**_test.go' --files-with-matches 'func Fuzz' . | \\\n\t\t\t grep -v \"kustomization_fuzzer_test.go\")\n\nfor file in ${test_files}\ndo\n",
                    "rendered": {
                      "text": "# kustomization_fuzzer_test is not fully compatible with Go native fuzz,\n# so it is ignored here.\ntest_files=$(grep -r --include='**_test.go' --files-with-matches 'func Fuzz' . | \\\n\t\t\t grep -v \"kustomization_fuzzer_test.go\")\n\nfor file in ${test_files}\ndo\n",
                      "markdown": "`# kustomization_fuzzer_test is not fully compatible with Go native fuzz,\n# so it is ignored here.\ntest_files=$(grep -r --include='**_test.go' --files-with-matches 'func Fuzz' . | \\\n\t\t\t grep -v \"kustomization_fuzzer_test.go\")\n\nfor file in ${test_files}\ndo\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/tests/fuzz/native_go_run.sh"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 23,
                  "endLine": 20,
                  "endColumn": 29,
                  "snippet": {
                    "text": "set -euxo pipefail\n\n# This script iterates through all go fuzzing targets, running each one\n# through the period of time established by FUZZ_TIME.\n\nFUZZ_TIME=${FUZZ_TIME:-\"5s\"}\n\n",
                    "rendered": {
                      "text": "set -euxo pipefail\n\n# This script iterates through all go fuzzing targets, running each one\n# through the period of time established by FUZZ_TIME.\n\nFUZZ_TIME=${FUZZ_TIME:-\"5s\"}\n\n",
                      "markdown": "`set -euxo pipefail\n\n# This script iterates through all go fuzzing targets, running each one\n# through the period of time established by FUZZ_TIME.\n\nFUZZ_TIME=${FUZZ_TIME:-\"5s\"}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/tests/fuzz/native_go_run.sh"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 6,
                  "endLine": 19,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\nset -euxo pipefail\n\n# This script iterates through all go fuzzing targets, running each one\n# through the period of time established by FUZZ_TIME.\n\nFUZZ_TIME=${FUZZ_TIME:-\"5s\"}\n",
                    "rendered": {
                      "text": "\nset -euxo pipefail\n\n# This script iterates through all go fuzzing targets, running each one\n# through the period of time established by FUZZ_TIME.\n\nFUZZ_TIME=${FUZZ_TIME:-\"5s\"}\n",
                      "markdown": "`\nset -euxo pipefail\n\n# This script iterates through all go fuzzing targets, running each one\n# through the period of time established by FUZZ_TIME.\n\nFUZZ_TIME=${FUZZ_TIME:-\"5s\"}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/tests/fuzz/native_go_run.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\n# Copyright 2022 The Flux authors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\n# Copyright 2022 The Flux authors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n",
                      "markdown": "`#!/usr/bin/env bash\n\n# Copyright 2022 The Flux authors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/config/rbac/kustomization_editor_role.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 3,
                  "endLine": 18,
                  "snippet": {
                    "text": "  - get\n  - list\n  - patch\n  - update\n  - watch\n- apiGroups:\n  - kustomize.toolkit.fluxcd.io\n  resources:\n",
                    "rendered": {
                      "text": "  - get\n  - list\n  - patch\n  - update\n  - watch\n- apiGroups:\n  - kustomize.toolkit.fluxcd.io\n  resources:\n",
                      "markdown": "`  - get\n  - list\n  - patch\n  - update\n  - watch\n- apiGroups:\n  - kustomize.toolkit.fluxcd.io\n  resources:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/config/rbac/kustomization_editor_role.yaml"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 3,
                  "endLine": 19,
                  "snippet": {
                    "text": "  - list\n  - patch\n  - update\n  - watch\n- apiGroups:\n  - kustomize.toolkit.fluxcd.io\n  resources:\n  - kustomizations/status\n",
                    "rendered": {
                      "text": "  - list\n  - patch\n  - update\n  - watch\n- apiGroups:\n  - kustomize.toolkit.fluxcd.io\n  resources:\n  - kustomizations/status\n",
                      "markdown": "`  - list\n  - patch\n  - update\n  - watch\n- apiGroups:\n  - kustomize.toolkit.fluxcd.io\n  resources:\n  - kustomizations/status\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 160,
                  "startColumn": 15,
                  "endLine": 160,
                  "endColumn": 23,
                  "snippet": {
                    "text": "      digest: ${{ needs.release.outputs.image_digest }}\n      registry-username: fluxcdbot\n    secrets:\n      registry-password: ${{ secrets.GHCR_TOKEN }}\n",
                    "rendered": {
                      "text": "      digest: ${{ needs.release.outputs.image_digest }}\n      registry-username: fluxcdbot\n    secrets:\n      registry-password: ${{ secrets.GHCR_TOKEN }}\n",
                      "markdown": "`      digest: ${{ needs.release.outputs.image_digest }}\n      registry-username: fluxcdbot\n    secrets:\n      registry-password: ${{ secrets.GHCR_TOKEN }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 51,
                  "endLine": 145,
                  "endColumn": 59,
                  "snippet": {
                    "text": "      digest: ${{ needs.release.outputs.image_digest }}\n      registry-username: fluxcdbot\n    secrets:\n      registry-password: ${{ secrets.DOCKER_FLUXCD_PASSWORD }}\n\n  ghcr-provenance:\n    needs: [release]\n",
                    "rendered": {
                      "text": "      digest: ${{ needs.release.outputs.image_digest }}\n      registry-username: fluxcdbot\n    secrets:\n      registry-password: ${{ secrets.DOCKER_FLUXCD_PASSWORD }}\n\n  ghcr-provenance:\n    needs: [release]\n",
                      "markdown": "`      digest: ${{ needs.release.outputs.image_digest }}\n      registry-username: fluxcdbot\n    secrets:\n      registry-password: ${{ secrets.DOCKER_FLUXCD_PASSWORD }}\n\n  ghcr-provenance:\n    needs: [release]\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 15,
                  "endLine": 145,
                  "endColumn": 23,
                  "snippet": {
                    "text": "      digest: ${{ needs.release.outputs.image_digest }}\n      registry-username: fluxcdbot\n    secrets:\n      registry-password: ${{ secrets.DOCKER_FLUXCD_PASSWORD }}\n\n  ghcr-provenance:\n    needs: [release]\n",
                    "rendered": {
                      "text": "      digest: ${{ needs.release.outputs.image_digest }}\n      registry-username: fluxcdbot\n    secrets:\n      registry-password: ${{ secrets.DOCKER_FLUXCD_PASSWORD }}\n\n  ghcr-provenance:\n    needs: [release]\n",
                      "markdown": "`      digest: ${{ needs.release.outputs.image_digest }}\n      registry-username: fluxcdbot\n    secrets:\n      registry-password: ${{ secrets.DOCKER_FLUXCD_PASSWORD }}\n\n  ghcr-provenance:\n    needs: [release]\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 46,
                  "endLine": 59,
                  "endColumn": 54,
                  "snippet": {
                    "text": "        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0\n        with:\n          username: fluxcdbot\n          password: ${{ secrets.DOCKER_FLUXCD_PASSWORD }}\n      - name: Generate images meta\n        id: meta\n        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1\n",
                    "rendered": {
                      "text": "        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0\n        with:\n          username: fluxcdbot\n          password: ${{ secrets.DOCKER_FLUXCD_PASSWORD }}\n      - name: Generate images meta\n        id: meta\n        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1\n",
                      "markdown": "`        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0\n        with:\n          username: fluxcdbot\n          password: ${{ secrets.DOCKER_FLUXCD_PASSWORD }}\n      - name: Generate images meta\n        id: meta\n        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 10,
                  "endLine": 59,
                  "endColumn": 18,
                  "snippet": {
                    "text": "        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0\n        with:\n          username: fluxcdbot\n          password: ${{ secrets.DOCKER_FLUXCD_PASSWORD }}\n      - name: Generate images meta\n        id: meta\n        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1\n",
                    "rendered": {
                      "text": "        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0\n        with:\n          username: fluxcdbot\n          password: ${{ secrets.DOCKER_FLUXCD_PASSWORD }}\n      - name: Generate images meta\n        id: meta\n        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1\n",
                      "markdown": "`        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0\n        with:\n          username: fluxcdbot\n          password: ${{ secrets.DOCKER_FLUXCD_PASSWORD }}\n      - name: Generate images meta\n        id: meta\n        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 10,
                  "endLine": 54,
                  "endColumn": 18,
                  "snippet": {
                    "text": "        with:\n          registry: ghcr.io\n          username: fluxcdbot\n          password: ${{ secrets.GHCR_TOKEN }}\n      - name: Login to Docker Hub\n        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0\n        with:\n",
                    "rendered": {
                      "text": "        with:\n          registry: ghcr.io\n          username: fluxcdbot\n          password: ${{ secrets.GHCR_TOKEN }}\n      - name: Login to Docker Hub\n        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0\n        with:\n",
                      "markdown": "`        with:\n          registry: ghcr.io\n          username: fluxcdbot\n          password: ${{ secrets.GHCR_TOKEN }}\n      - name: Login to Docker Hub\n        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0\n        with:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 6,
                  "endLine": 129,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.0.0\n    with:\n      provenance-name: \"provenance.intoto.jsonl\"\n      base64-subjects: \"${{ needs.release.outputs.hashes }}\"\n      upload-assets: true\n\n  dockerhub-provenance:\n",
                    "rendered": {
                      "text": "    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.0.0\n    with:\n      provenance-name: \"provenance.intoto.jsonl\"\n      base64-subjects: \"${{ needs.release.outputs.hashes }}\"\n      upload-assets: true\n\n  dockerhub-provenance:\n",
                      "markdown": "`    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.0.0\n    with:\n      provenance-name: \"provenance.intoto.jsonl\"\n      base64-subjects: \"${{ needs.release.outputs.hashes }}\"\n      upload-assets: true\n\n  dockerhub-provenance:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 188,
                  "endLine": 110,
                  "endColumn": 194,
                  "snippet": {
                    "text": "        env:\n          ARTIFACTS: \"${{ steps.run-goreleaser.outputs.artifacts }}\"\n        run: |\n          hashes=$(echo $ARTIFACTS | jq --raw-output '.[] | {name, \"digest\": (.extra.Digest // .extra.Checksum)} | select(.digest) | {digest} + {name} | join(\"  \") | sub(\"^sha256:\";\"\")' | base64 -w0)\n          echo \"hashes=$hashes\" >> $GITHUB_OUTPUT\n          \n          image_url=fluxcd/${{ env.CONTROLLER }}:${{ steps.prep.outputs.version }}\n",
                    "rendered": {
                      "text": "        env:\n          ARTIFACTS: \"${{ steps.run-goreleaser.outputs.artifacts }}\"\n        run: |\n          hashes=$(echo $ARTIFACTS | jq --raw-output '.[] | {name, \"digest\": (.extra.Digest // .extra.Checksum)} | select(.digest) | {digest} + {name} | join(\"  \") | sub(\"^sha256:\";\"\")' | base64 -w0)\n          echo \"hashes=$hashes\" >> $GITHUB_OUTPUT\n          \n          image_url=fluxcd/${{ env.CONTROLLER }}:${{ steps.prep.outputs.version }}\n",
                      "markdown": "`        env:\n          ARTIFACTS: \"${{ steps.run-goreleaser.outputs.artifacts }}\"\n        run: |\n          hashes=$(echo $ARTIFACTS | jq --raw-output '.[] | {name, \"digest\": (.extra.Digest // .extra.Checksum)} | select(.digest) | {digest} + {name} | join(\"  \") | sub(\"^sha256:\";\"\")' | base64 -w0)\n          echo \"hashes=$hashes\" >> $GITHUB_OUTPUT\n          \n          image_url=fluxcd/${{ env.CONTROLLER }}:${{ steps.prep.outputs.version }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 187,
                  "endLine": 110,
                  "endColumn": 195,
                  "snippet": {
                    "text": "        env:\n          ARTIFACTS: \"${{ steps.run-goreleaser.outputs.artifacts }}\"\n        run: |\n          hashes=$(echo $ARTIFACTS | jq --raw-output '.[] | {name, \"digest\": (.extra.Digest // .extra.Checksum)} | select(.digest) | {digest} + {name} | join(\"  \") | sub(\"^sha256:\";\"\")' | base64 -w0)\n          echo \"hashes=$hashes\" >> $GITHUB_OUTPUT\n          \n          image_url=fluxcd/${{ env.CONTROLLER }}:${{ steps.prep.outputs.version }}\n",
                    "rendered": {
                      "text": "        env:\n          ARTIFACTS: \"${{ steps.run-goreleaser.outputs.artifacts }}\"\n        run: |\n          hashes=$(echo $ARTIFACTS | jq --raw-output '.[] | {name, \"digest\": (.extra.Digest // .extra.Checksum)} | select(.digest) | {digest} + {name} | join(\"  \") | sub(\"^sha256:\";\"\")' | base64 -w0)\n          echo \"hashes=$hashes\" >> $GITHUB_OUTPUT\n          \n          image_url=fluxcd/${{ env.CONTROLLER }}:${{ steps.prep.outputs.version }}\n",
                      "markdown": "`        env:\n          ARTIFACTS: \"${{ steps.run-goreleaser.outputs.artifacts }}\"\n        run: |\n          hashes=$(echo $ARTIFACTS | jq --raw-output '.[] | {name, \"digest\": (.extra.Digest // .extra.Checksum)} | select(.digest) | {digest} + {name} | join(\"  \") | sub(\"^sha256:\";\"\")' | base64 -w0)\n          echo \"hashes=$hashes\" >> $GITHUB_OUTPUT\n          \n          image_url=fluxcd/${{ env.CONTROLLER }}:${{ steps.prep.outputs.version }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 22,
                  "endLine": 55,
                  "endColumn": 30,
                  "snippet": {
                    "text": "          registry: ghcr.io\n          username: fluxcdbot\n          password: ${{ secrets.GHCR_TOKEN }}\n      - name: Login to Docker Hub\n        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0\n        with:\n          username: fluxcdbot\n",
                    "rendered": {
                      "text": "          registry: ghcr.io\n          username: fluxcdbot\n          password: ${{ secrets.GHCR_TOKEN }}\n      - name: Login to Docker Hub\n        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0\n        with:\n          username: fluxcdbot\n",
                      "markdown": "`          registry: ghcr.io\n          username: fluxcdbot\n          password: ${{ secrets.GHCR_TOKEN }}\n      - name: Login to Docker Hub\n        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0\n        with:\n          username: fluxcdbot\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 19,
                  "endLine": 46,
                  "endColumn": 27,
                  "snippet": {
                    "text": "          echo \"VERSION=${VERSION}\" >> $GITHUB_OUTPUT\n      - name: Setup QEMU\n        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0\n      - name: Setup Docker Buildx\n        id: buildx\n        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1\n      - name: Login to GitHub Container Registry\n",
                    "rendered": {
                      "text": "          echo \"VERSION=${VERSION}\" >> $GITHUB_OUTPUT\n      - name: Setup QEMU\n        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0\n      - name: Setup Docker Buildx\n        id: buildx\n        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1\n      - name: Login to GitHub Container Registry\n",
                      "markdown": "`          echo \"VERSION=${VERSION}\" >> $GITHUB_OUTPUT\n      - name: Setup QEMU\n        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0\n      - name: Setup Docker Buildx\n        id: buildx\n        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1\n      - name: Login to GitHub Container Registry\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.github/workflows/nightly.yml"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 19,
                  "endLine": 21,
                  "endColumn": 27,
                  "snippet": {
                    "text": "        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0\n      - name: Setup QEMU\n        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0\n      - name: Setup Docker Buildx\n        id: buildx\n        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1\n        with:\n",
                    "rendered": {
                      "text": "        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0\n      - name: Setup QEMU\n        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0\n      - name: Setup Docker Buildx\n        id: buildx\n        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1\n        with:\n",
                      "markdown": "`        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0\n      - name: Setup QEMU\n        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0\n      - name: Setup Docker Buildx\n        id: buildx\n        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1\n        with:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.github/workflows/e2e.yaml"
                },
                "region": {
                  "startLine": 138,
                  "startColumn": 66,
                  "endLine": 138,
                  "endColumn": 72,
                  "snippet": {
                    "text": "          kubectl -n impersonation apply -f ./config/testdata/impersonation\n          kubectl -n impersonation wait kustomizations/podinfo --for=condition=ready --timeout=4m\n          kubectl -n impersonation delete kustomizations/podinfo\n          until kubectl -n impersonation get deploy/podinfo 2>&1 | grep NotFound ; do sleep 2; done\n      - name: Run OCI tests\n        run: |\n          kubectl create ns oci\n",
                    "rendered": {
                      "text": "          kubectl -n impersonation apply -f ./config/testdata/impersonation\n          kubectl -n impersonation wait kustomizations/podinfo --for=condition=ready --timeout=4m\n          kubectl -n impersonation delete kustomizations/podinfo\n          until kubectl -n impersonation get deploy/podinfo 2>&1 | grep NotFound ; do sleep 2; done\n      - name: Run OCI tests\n        run: |\n          kubectl create ns oci\n",
                      "markdown": "`          kubectl -n impersonation apply -f ./config/testdata/impersonation\n          kubectl -n impersonation wait kustomizations/podinfo --for=condition=ready --timeout=4m\n          kubectl -n impersonation delete kustomizations/podinfo\n          until kubectl -n impersonation get deploy/podinfo 2>&1 | grep NotFound ; do sleep 2; done\n      - name: Run OCI tests\n        run: |\n          kubectl create ns oci\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.github/workflows/e2e.yaml"
                },
                "region": {
                  "startLine": 117,
                  "startColumn": 30,
                  "endLine": 117,
                  "endColumn": 36,
                  "snippet": {
                    "text": "          kubectl -n managed-fields annotate --overwrite kustomization/podinfo reconcile.fluxcd.io/requestedAt=\"$(date +%s)\"\n          kubectl -n managed-fields wait kustomization/podinfo --for=condition=ready --timeout=4m\n          OUTDATA=$(kubectl -n managed-fields get deploy podinfo --show-managed-fields -oyaml)\n          if echo \"$OUTDATA\" | grep -q \"kubectl\";then\n            echo \"kubectl server-side manager not removed\"\n            exit 1\n          fi\n",
                    "rendered": {
                      "text": "          kubectl -n managed-fields annotate --overwrite kustomization/podinfo reconcile.fluxcd.io/requestedAt=\"$(date +%s)\"\n          kubectl -n managed-fields wait kustomization/podinfo --for=condition=ready --timeout=4m\n          OUTDATA=$(kubectl -n managed-fields get deploy podinfo --show-managed-fields -oyaml)\n          if echo \"$OUTDATA\" | grep -q \"kubectl\";then\n            echo \"kubectl server-side manager not removed\"\n            exit 1\n          fi\n",
                      "markdown": "`          kubectl -n managed-fields annotate --overwrite kustomization/podinfo reconcile.fluxcd.io/requestedAt=\"$(date +%s)\"\n          kubectl -n managed-fields wait kustomization/podinfo --for=condition=ready --timeout=4m\n          OUTDATA=$(kubectl -n managed-fields get deploy podinfo --show-managed-fields -oyaml)\n          if echo \"$OUTDATA\" | grep -q \"kubectl\";then\n            echo \"kubectl server-side manager not removed\"\n            exit 1\n          fi\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.github/workflows/e2e.yaml"
                },
                "region": {
                  "startLine": 109,
                  "startColumn": 30,
                  "endLine": 109,
                  "endColumn": 36,
                  "snippet": {
                    "text": "          kubectl -n managed-fields apply -f ./config/testdata/managed-fields\n          kubectl -n managed-fields wait kustomization/podinfo --for=condition=ready --timeout=4m\n          OUTDATA=$(kubectl -n managed-fields get deploy podinfo --show-managed-fields -oyaml)\n          if echo \"$OUTDATA\" | grep -q \"kubectl\";then\n            echo \"kubectl client-side manager not removed\"\n            exit 1\n          fi\n",
                    "rendered": {
                      "text": "          kubectl -n managed-fields apply -f ./config/testdata/managed-fields\n          kubectl -n managed-fields wait kustomization/podinfo --for=condition=ready --timeout=4m\n          OUTDATA=$(kubectl -n managed-fields get deploy podinfo --show-managed-fields -oyaml)\n          if echo \"$OUTDATA\" | grep -q \"kubectl\";then\n            echo \"kubectl client-side manager not removed\"\n            exit 1\n          fi\n",
                      "markdown": "`          kubectl -n managed-fields apply -f ./config/testdata/managed-fields\n          kubectl -n managed-fields wait kustomization/podinfo --for=condition=ready --timeout=4m\n          OUTDATA=$(kubectl -n managed-fields get deploy podinfo --show-managed-fields -oyaml)\n          if echo \"$OUTDATA\" | grep -q \"kubectl\";then\n            echo \"kubectl client-side manager not removed\"\n            exit 1\n          fi\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.github/workflows/e2e.yaml"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 9,
                  "endLine": 81,
                  "endColumn": 13,
                  "snippet": {
                    "text": "        name: Move cache\n        run: |\n          rm -rf /tmp/.buildx-cache\n          mv /tmp/.buildx-cache-new /tmp/.buildx-cache\n      - name: Load test image\n        run: kind load docker-image test/kustomize-controller:latest\n      - name: Install CRDs\n",
                    "rendered": {
                      "text": "        name: Move cache\n        run: |\n          rm -rf /tmp/.buildx-cache\n          mv /tmp/.buildx-cache-new /tmp/.buildx-cache\n      - name: Load test image\n        run: kind load docker-image test/kustomize-controller:latest\n      - name: Install CRDs\n",
                      "markdown": "`        name: Move cache\n        run: |\n          rm -rf /tmp/.buildx-cache\n          mv /tmp/.buildx-cache-new /tmp/.buildx-cache\n      - name: Load test image\n        run: kind load docker-image test/kustomize-controller:latest\n      - name: Install CRDs\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.github/workflows/e2e.yaml"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 26,
                  "endLine": 65,
                  "snippet": {
                    "text": "      - name: Check if working tree is dirty\n        run: |\n          if [[ $(git diff --stat) != '' ]]; then\n            git --no-pager diff\n            echo 'run make test and commit changes'\n            exit 1\n          fi\n      - name: Build container image\n",
                    "rendered": {
                      "text": "      - name: Check if working tree is dirty\n        run: |\n          if [[ $(git diff --stat) != '' ]]; then\n            git --no-pager diff\n            echo 'run make test and commit changes'\n            exit 1\n          fi\n      - name: Build container image\n",
                      "markdown": "`      - name: Check if working tree is dirty\n        run: |\n          if [[ $(git diff --stat) != '' ]]; then\n            git --no-pager diff\n            echo 'run make test and commit changes'\n            exit 1\n          fi\n      - name: Build container image\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.github/workflows/e2e.yaml"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 11,
                  "endLine": 64,
                  "endColumn": 16,
                  "snippet": {
                    "text": "      - name: Check if working tree is dirty\n        run: |\n          if [[ $(git diff --stat) != '' ]]; then\n            git --no-pager diff\n            echo 'run make test and commit changes'\n            exit 1\n          fi\n",
                    "rendered": {
                      "text": "      - name: Check if working tree is dirty\n        run: |\n          if [[ $(git diff --stat) != '' ]]; then\n            git --no-pager diff\n            echo 'run make test and commit changes'\n            exit 1\n          fi\n",
                      "markdown": "`      - name: Check if working tree is dirty\n        run: |\n          if [[ $(git diff --stat) != '' ]]; then\n            git --no-pager diff\n            echo 'run make test and commit changes'\n            exit 1\n          fi\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.github/workflows/e2e.yaml"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 21,
                  "endLine": 63,
                  "endColumn": 27,
                  "snippet": {
                    "text": "        run: make test\n      - name: Check if working tree is dirty\n        run: |\n          if [[ $(git diff --stat) != '' ]]; then\n            git --no-pager diff\n            echo 'run make test and commit changes'\n            exit 1\n",
                    "rendered": {
                      "text": "        run: make test\n      - name: Check if working tree is dirty\n        run: |\n          if [[ $(git diff --stat) != '' ]]; then\n            git --no-pager diff\n            echo 'run make test and commit changes'\n            exit 1\n",
                      "markdown": "`        run: make test\n      - name: Check if working tree is dirty\n        run: |\n          if [[ $(git diff --stat) != '' ]]; then\n            git --no-pager diff\n            echo 'run make test and commit changes'\n            exit 1\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.github/workflows/e2e.yaml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 19,
                  "endLine": 24,
                  "endColumn": 27,
                  "snippet": {
                    "text": "      - name: Setup Docker Buildx\n        id: buildx\n        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1\n      - name: Cache Docker layers\n        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2\n        id: cache\n        with:\n",
                    "rendered": {
                      "text": "      - name: Setup Docker Buildx\n        id: buildx\n        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1\n      - name: Cache Docker layers\n        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2\n        id: cache\n        with:\n",
                      "markdown": "`      - name: Setup Docker Buildx\n        id: buildx\n        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1\n      - name: Cache Docker layers\n        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2\n        id: cache\n        with:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.github/workflows/e2e.yaml"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 19,
                  "endLine": 21,
                  "endColumn": 27,
                  "snippet": {
                    "text": "        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0\n      - name: Setup QEMU\n        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0\n      - name: Setup Docker Buildx\n        id: buildx\n        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1\n      - name: Cache Docker layers\n",
                    "rendered": {
                      "text": "        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0\n      - name: Setup QEMU\n        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0\n      - name: Setup Docker Buildx\n        id: buildx\n        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1\n      - name: Cache Docker layers\n",
                      "markdown": "`        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0\n      - name: Setup QEMU\n        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0\n      - name: Setup Docker Buildx\n        id: buildx\n        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1\n      - name: Cache Docker layers\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.github/dependabot.yaml"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 33,
                  "endLine": 23,
                  "endColumn": 37,
                  "snippet": {
                    "text": "      - dependency-name: \"github.com/Azure/*\"\n      - dependency-name: \"github.com/aws/*\"\n      - dependency-name: \"github.com/hashicorp/vault/*\"\n      # Flux APIs pkg are updated at release time\n      - dependency-name: \"github.com/fluxcd/kustomize-controller/api\"\n      - dependency-name: \"github.com/fluxcd/source-controller/api\"\n  - package-ecosystem: \"github-actions\"\n",
                    "rendered": {
                      "text": "      - dependency-name: \"github.com/Azure/*\"\n      - dependency-name: \"github.com/aws/*\"\n      - dependency-name: \"github.com/hashicorp/vault/*\"\n      # Flux APIs pkg are updated at release time\n      - dependency-name: \"github.com/fluxcd/kustomize-controller/api\"\n      - dependency-name: \"github.com/fluxcd/source-controller/api\"\n  - package-ecosystem: \"github-actions\"\n",
                      "markdown": "`      - dependency-name: \"github.com/Azure/*\"\n      - dependency-name: \"github.com/aws/*\"\n      - dependency-name: \"github.com/hashicorp/vault/*\"\n      # Flux APIs pkg are updated at release time\n      - dependency-name: \"github.com/fluxcd/kustomize-controller/api\"\n      - dependency-name: \"github.com/fluxcd/source-controller/api\"\n  - package-ecosystem: \"github-actions\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.github/dependabot.yaml"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 44,
                  "endLine": 24,
                  "snippet": {
                    "text": "      - dependency-name: \"github.com/Azure/*\"\n      - dependency-name: \"github.com/aws/*\"\n      - dependency-name: \"github.com/hashicorp/vault/*\"\n      # Flux APIs pkg are updated at release time\n      - dependency-name: \"github.com/fluxcd/kustomize-controller/api\"\n      - dependency-name: \"github.com/fluxcd/source-controller/api\"\n  - package-ecosystem: \"github-actions\"\n    directory: \"/\"\n",
                    "rendered": {
                      "text": "      - dependency-name: \"github.com/Azure/*\"\n      - dependency-name: \"github.com/aws/*\"\n      - dependency-name: \"github.com/hashicorp/vault/*\"\n      # Flux APIs pkg are updated at release time\n      - dependency-name: \"github.com/fluxcd/kustomize-controller/api\"\n      - dependency-name: \"github.com/fluxcd/source-controller/api\"\n  - package-ecosystem: \"github-actions\"\n    directory: \"/\"\n",
                      "markdown": "`      - dependency-name: \"github.com/Azure/*\"\n      - dependency-name: \"github.com/aws/*\"\n      - dependency-name: \"github.com/hashicorp/vault/*\"\n      # Flux APIs pkg are updated at release time\n      - dependency-name: \"github.com/fluxcd/kustomize-controller/api\"\n      - dependency-name: \"github.com/fluxcd/source-controller/api\"\n  - package-ecosystem: \"github-actions\"\n    directory: \"/\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/api/v1beta1/snapshot_types.go"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 7,
                  "endLine": 124,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\nfunc (s *Snapshot) NamespacedKinds() map[string][]schema.GroupVersionKind {\n\tnsk := make(map[string][]schema.GroupVersionKind)\n\tfor _, tracker := range s.Entries {\n\t\tif tracker.Namespace != \"\" {\n\t\t\tvar kinds []schema.GroupVersionKind\n\t\t\tfor gvk, kind := range tracker.Kinds {\n",
                    "rendered": {
                      "text": "\nfunc (s *Snapshot) NamespacedKinds() map[string][]schema.GroupVersionKind {\n\tnsk := make(map[string][]schema.GroupVersionKind)\n\tfor _, tracker := range s.Entries {\n\t\tif tracker.Namespace != \"\" {\n\t\t\tvar kinds []schema.GroupVersionKind\n\t\t\tfor gvk, kind := range tracker.Kinds {\n",
                      "markdown": "`\nfunc (s *Snapshot) NamespacedKinds() map[string][]schema.GroupVersionKind {\n\tnsk := make(map[string][]schema.GroupVersionKind)\n\tfor _, tracker := range s.Entries {\n\t\tif tracker.Namespace != \"\" {\n\t\t\tvar kinds []schema.GroupVersionKind\n\t\t\tfor gvk, kind := range tracker.Kinds {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/api/v1beta1/snapshot_types.go"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 7,
                  "endLine": 107,
                  "endColumn": 16,
                  "snippet": {
                    "text": "func (s *Snapshot) NonNamespacedKinds() []schema.GroupVersionKind {\n\tkinds := make([]schema.GroupVersionKind, 0)\n\n\tfor _, tracker := range s.Entries {\n\t\tif tracker.Namespace == \"\" {\n\t\t\tfor gvk, kind := range tracker.Kinds {\n\t\t\t\tif strings.Contains(gvk, \",\") {\n",
                    "rendered": {
                      "text": "func (s *Snapshot) NonNamespacedKinds() []schema.GroupVersionKind {\n\tkinds := make([]schema.GroupVersionKind, 0)\n\n\tfor _, tracker := range s.Entries {\n\t\tif tracker.Namespace == \"\" {\n\t\t\tfor gvk, kind := range tracker.Kinds {\n\t\t\t\tif strings.Contains(gvk, \",\") {\n",
                      "markdown": "`func (s *Snapshot) NonNamespacedKinds() []schema.GroupVersionKind {\n\tkinds := make([]schema.GroupVersionKind, 0)\n\n\tfor _, tracker := range s.Entries {\n\t\tif tracker.Namespace == \"\" {\n\t\t\tfor gvk, kind := range tracker.Kinds {\n\t\t\t\tif strings.Contains(gvk, \",\") {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/api/v1beta1/snapshot_types.go"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 7,
                  "endLine": 87,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\nfunc (s *Snapshot) addEntry(item *unstructured.Unstructured) {\n\tfound := false\n\tfor _, tracker := range s.Entries {\n\t\tif tracker.Namespace == item.GetNamespace() {\n\t\t\ttracker.Kinds[item.GroupVersionKind().String()] = item.GetKind()\n\t\t\tfound = true\n",
                    "rendered": {
                      "text": "\nfunc (s *Snapshot) addEntry(item *unstructured.Unstructured) {\n\tfound := false\n\tfor _, tracker := range s.Entries {\n\t\tif tracker.Namespace == item.GetNamespace() {\n\t\t\ttracker.Kinds[item.GroupVersionKind().String()] = item.GetKind()\n\t\t\tfound = true\n",
                      "markdown": "`\nfunc (s *Snapshot) addEntry(item *unstructured.Unstructured) {\n\tfound := false\n\tfor _, tracker := range s.Entries {\n\t\tif tracker.Namespace == item.GetNamespace() {\n\t\t\ttracker.Kinds[item.GroupVersionKind().String()] = item.GetKind()\n\t\t\tfound = true\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/api/v1beta1/kustomization_types.go"
                },
                "region": {
                  "startLine": 127,
                  "endLine": 127,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t// Timeout for validation, apply and health checking operations.\n\t// Defaults to 'Interval' duration.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// Validate the Kubernetes objects before applying them on the cluster.\n\t// The validation strategy can be 'client' (local dry-run), 'server'\n",
                    "rendered": {
                      "text": "\t// Timeout for validation, apply and health checking operations.\n\t// Defaults to 'Interval' duration.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// Validate the Kubernetes objects before applying them on the cluster.\n\t// The validation strategy can be 'client' (local dry-run), 'server'\n",
                      "markdown": "`\t// Timeout for validation, apply and health checking operations.\n\t// Defaults to 'Interval' duration.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// Validate the Kubernetes objects before applying them on the cluster.\n\t// The validation strategy can be 'client' (local dry-run), 'server'\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/api/v1beta2/kustomization_types.go"
                },
                "region": {
                  "startLine": 145,
                  "endLine": 145,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// Force instructs the controller to recreate resources\n\t// when patching fails due to an immutable field change.\n",
                    "rendered": {
                      "text": "\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// Force instructs the controller to recreate resources\n\t// when patching fails due to an immutable field change.\n",
                      "markdown": "`\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// Force instructs the controller to recreate resources\n\t// when patching fails due to an immutable field change.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/testdata/transformers/kustomization.yaml"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 17,
                  "endLine": 37,
                  "endColumn": 25,
                  "snippet": {
                    "text": "  - name: secret\n    literals:\n      - username=admin\n      - password=password\n\npatchesStrategicMerge:\n  - |-\n",
                    "rendered": {
                      "text": "  - name: secret\n    literals:\n      - username=admin\n      - password=password\n\npatchesStrategicMerge:\n  - |-\n",
                      "markdown": "`  - name: secret\n    literals:\n      - username=admin\n      - password=password\n\npatchesStrategicMerge:\n  - |-\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/testdata/transformers/kustomization.yaml"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 8,
                  "endLine": 37,
                  "endColumn": 16,
                  "snippet": {
                    "text": "  - name: secret\n    literals:\n      - username=admin\n      - password=password\n\npatchesStrategicMerge:\n  - |-\n",
                    "rendered": {
                      "text": "  - name: secret\n    literals:\n      - username=admin\n      - password=password\n\npatchesStrategicMerge:\n  - |-\n",
                      "markdown": "`  - name: secret\n    literals:\n      - username=admin\n      - password=password\n\npatchesStrategicMerge:\n  - |-\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_impersonation_test.go"
                },
                "region": {
                  "startLine": 312,
                  "startColumn": 16,
                  "endLine": 312,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treadyCondition = apimeta.FindStatusCondition(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t\treturn resultK.Status.LastAppliedRevision == revision\n\t\t}, timeout, time.Second).Should(BeTrue())\n",
                    "rendered": {
                      "text": "\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treadyCondition = apimeta.FindStatusCondition(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t\treturn resultK.Status.LastAppliedRevision == revision\n\t\t}, timeout, time.Second).Should(BeTrue())\n",
                      "markdown": "`\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treadyCondition = apimeta.FindStatusCondition(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t\treturn resultK.Status.LastAppliedRevision == revision\n\t\t}, timeout, time.Second).Should(BeTrue())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_impersonation_test.go"
                },
                "region": {
                  "startLine": 286,
                  "startColumn": 16,
                  "endLine": 286,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\n\tt.Run(\"fails to reconcile with missing kubeconfig secret\", func(t *testing.T) {\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treadyCondition = apimeta.FindStatusCondition(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t\treturn apimeta.IsStatusConditionFalse(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t}, timeout, time.Second).Should(BeTrue())\n",
                    "rendered": {
                      "text": "\n\tt.Run(\"fails to reconcile with missing kubeconfig secret\", func(t *testing.T) {\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treadyCondition = apimeta.FindStatusCondition(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t\treturn apimeta.IsStatusConditionFalse(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t}, timeout, time.Second).Should(BeTrue())\n",
                      "markdown": "`\n\tt.Run(\"fails to reconcile with missing kubeconfig secret\", func(t *testing.T) {\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treadyCondition = apimeta.FindStatusCondition(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t\treturn apimeta.IsStatusConditionFalse(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t}, timeout, time.Second).Should(BeTrue())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_impersonation_test.go"
                },
                "region": {
                  "startLine": 207,
                  "startColumn": 18,
                  "endLine": 207,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t\t}, timeout, time.Second).Should(BeTrue())\n\n\t\tresultConfig := &corev1.ConfigMap{}\n\t\terr := k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, resultConfig)\n\t\tg.Expect(apierrors.IsNotFound(err)).To(BeTrue())\n\t})\n}\n",
                    "rendered": {
                      "text": "\t\t}, timeout, time.Second).Should(BeTrue())\n\n\t\tresultConfig := &corev1.ConfigMap{}\n\t\terr := k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, resultConfig)\n\t\tg.Expect(apierrors.IsNotFound(err)).To(BeTrue())\n\t})\n}\n",
                      "markdown": "`\t\t}, timeout, time.Second).Should(BeTrue())\n\n\t\tresultConfig := &corev1.ConfigMap{}\n\t\terr := k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, resultConfig)\n\t\tg.Expect(apierrors.IsNotFound(err)).To(BeTrue())\n\t})\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_impersonation_test.go"
                },
                "region": {
                  "startLine": 202,
                  "startColumn": 19,
                  "endLine": 202,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\terr := k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn apierrors.IsNotFound(err)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\n",
                    "rendered": {
                      "text": "\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\terr := k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn apierrors.IsNotFound(err)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\n",
                      "markdown": "`\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\terr := k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn apierrors.IsNotFound(err)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_impersonation_test.go"
                },
                "region": {
                  "startLine": 195,
                  "startColumn": 17,
                  "endLine": 195,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\n\tt.Run(\"can finalize impersonating service account\", func(t *testing.T) {\n\t\tsaK := &kustomizev1.Kustomization{}\n\t\terr = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), saK)\n\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\terr = k8sClient.Delete(context.Background(), saK)\n",
                    "rendered": {
                      "text": "\n\tt.Run(\"can finalize impersonating service account\", func(t *testing.T) {\n\t\tsaK := &kustomizev1.Kustomization{}\n\t\terr = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), saK)\n\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\terr = k8sClient.Delete(context.Background(), saK)\n",
                      "markdown": "`\n\tt.Run(\"can finalize impersonating service account\", func(t *testing.T) {\n\t\tsaK := &kustomizev1.Kustomization{}\n\t\terr = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), saK)\n\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\terr = k8sClient.Delete(context.Background(), saK)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_impersonation_test.go"
                },
                "region": {
                  "startLine": 185,
                  "startColumn": 16,
                  "endLine": 185,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treadyCondition = apimeta.FindStatusCondition(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t\treturn resultK.Status.LastAppliedRevision == revision\n\t\t}, timeout, time.Second).Should(BeTrue())\n",
                    "rendered": {
                      "text": "\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treadyCondition = apimeta.FindStatusCondition(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t\treturn resultK.Status.LastAppliedRevision == revision\n\t\t}, timeout, time.Second).Should(BeTrue())\n",
                      "markdown": "`\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treadyCondition = apimeta.FindStatusCondition(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t\treturn resultK.Status.LastAppliedRevision == revision\n\t\t}, timeout, time.Second).Should(BeTrue())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_impersonation_test.go"
                },
                "region": {
                  "startLine": 174,
                  "startColumn": 17,
                  "endLine": 174,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t\tg.Expect(k8sClient.Create(context.Background(), &crb)).To(Succeed())\n\n\t\tsaK := &kustomizev1.Kustomization{}\n\t\terr = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), saK)\n\t\tg.Expect(err).NotTo(HaveOccurred())\n\t\tsaK.Spec.ServiceAccountName = \"test\"\n\t\terr = k8sClient.Update(context.Background(), saK)\n",
                    "rendered": {
                      "text": "\t\tg.Expect(k8sClient.Create(context.Background(), &crb)).To(Succeed())\n\n\t\tsaK := &kustomizev1.Kustomization{}\n\t\terr = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), saK)\n\t\tg.Expect(err).NotTo(HaveOccurred())\n\t\tsaK.Spec.ServiceAccountName = \"test\"\n\t\terr = k8sClient.Update(context.Background(), saK)\n",
                      "markdown": "`\t\tg.Expect(k8sClient.Create(context.Background(), &crb)).To(Succeed())\n\n\t\tsaK := &kustomizev1.Kustomization{}\n\t\terr = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), saK)\n\t\tg.Expect(err).NotTo(HaveOccurred())\n\t\tsaK.Spec.ServiceAccountName = \"test\"\n\t\terr = k8sClient.Update(context.Background(), saK)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_impersonation_test.go"
                },
                "region": {
                  "startLine": 132,
                  "startColumn": 16,
                  "endLine": 132,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treadyCondition = apimeta.FindStatusCondition(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t\treturn readyCondition.Reason == meta.ReconciliationFailedReason\n\t\t}, timeout, time.Second).Should(BeTrue())\n",
                    "rendered": {
                      "text": "\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treadyCondition = apimeta.FindStatusCondition(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t\treturn readyCondition.Reason == meta.ReconciliationFailedReason\n\t\t}, timeout, time.Second).Should(BeTrue())\n",
                      "markdown": "`\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treadyCondition = apimeta.FindStatusCondition(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t\treturn readyCondition.Reason == meta.ReconciliationFailedReason\n\t\t}, timeout, time.Second).Should(BeTrue())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_impersonation_test.go"
                },
                "region": {
                  "startLine": 117,
                  "startColumn": 16,
                  "endLine": 117,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\n\tt.Run(\"reconciles as cluster admin\", func(t *testing.T) {\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treadyCondition = apimeta.FindStatusCondition(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t\treturn resultK.Status.LastAppliedRevision == revision\n\t\t}, timeout, time.Second).Should(BeTrue())\n",
                    "rendered": {
                      "text": "\n\tt.Run(\"reconciles as cluster admin\", func(t *testing.T) {\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treadyCondition = apimeta.FindStatusCondition(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t\treturn resultK.Status.LastAppliedRevision == revision\n\t\t}, timeout, time.Second).Should(BeTrue())\n",
                      "markdown": "`\n\tt.Run(\"reconciles as cluster admin\", func(t *testing.T) {\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treadyCondition = apimeta.FindStatusCondition(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t\treturn resultK.Status.LastAppliedRevision == revision\n\t\t}, timeout, time.Second).Should(BeTrue())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_impersonation_test.go"
                },
                "region": {
                  "startLine": 301,
                  "startColumn": 3,
                  "endLine": 301,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\tNamespace: id,\n\t\t},\n\t\tData: map[string][]byte{\n\t\t\tsecretKey: kubeConfig,\n\t\t},\n\t}\n\tg.Expect(k8sClient.Create(context.Background(), secret)).NotTo(HaveOccurred(), \"failed to create kubeconfig secret\")\n",
                    "rendered": {
                      "text": "\t\t\tNamespace: id,\n\t\t},\n\t\tData: map[string][]byte{\n\t\t\tsecretKey: kubeConfig,\n\t\t},\n\t}\n\tg.Expect(k8sClient.Create(context.Background(), secret)).NotTo(HaveOccurred(), \"failed to create kubeconfig secret\")\n",
                      "markdown": "`\t\t\tNamespace: id,\n\t\t},\n\t\tData: map[string][]byte{\n\t\t\tsecretKey: kubeConfig,\n\t\t},\n\t}\n\tg.Expect(k8sClient.Create(context.Background(), secret)).NotTo(HaveOccurred(), \"failed to create kubeconfig secret\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_impersonation_test.go"
                },
                "region": {
                  "startLine": 266,
                  "startColumn": 11,
                  "endLine": 266,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: secretName,\n\t\t\t\t\tKey:  secretKey,\n\t\t\t\t},\n\t\t\t},\n\t\t\tSourceRef: kustomizev1.CrossNamespaceSourceReference{\n",
                    "rendered": {
                      "text": "\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: secretName,\n\t\t\t\t\tKey:  secretKey,\n\t\t\t\t},\n\t\t\t},\n\t\t\tSourceRef: kustomizev1.CrossNamespaceSourceReference{\n",
                      "markdown": "`\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: secretName,\n\t\t\t\t\tKey:  secretKey,\n\t\t\t\t},\n\t\t\t},\n\t\t\tSourceRef: kustomizev1.CrossNamespaceSourceReference{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_impersonation_test.go"
                },
                "region": {
                  "startLine": 264,
                  "startColumn": 20,
                  "endLine": 264,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\t\tInterval: metav1.Duration{Duration: time.Minute},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: secretName,\n\t\t\t\t\tKey:  secretKey,\n\t\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t\tInterval: metav1.Duration{Duration: time.Minute},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: secretName,\n\t\t\t\t\tKey:  secretKey,\n\t\t\t\t},\n",
                      "markdown": "`\t\t\tInterval: metav1.Duration{Duration: time.Minute},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: secretName,\n\t\t\t\t\tKey:  secretKey,\n\t\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_impersonation_test.go"
                },
                "region": {
                  "startLine": 249,
                  "startColumn": 2,
                  "endLine": 249,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\n\tconst (\n\t\tsecretName = \"user-defined-name\"\n\t\tsecretKey  = \"user-defined-key\"\n\t)\n\tkustomizationKey := types.NamespacedName{\n\t\tName:      randStringRunes(5),\n",
                    "rendered": {
                      "text": "\n\tconst (\n\t\tsecretName = \"user-defined-name\"\n\t\tsecretKey  = \"user-defined-key\"\n\t)\n\tkustomizationKey := types.NamespacedName{\n\t\tName:      randStringRunes(5),\n",
                      "markdown": "`\n\tconst (\n\t\tsecretName = \"user-defined-name\"\n\t\tsecretKey  = \"user-defined-key\"\n\t)\n\tkustomizationKey := types.NamespacedName{\n\t\tName:      randStringRunes(5),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_impersonation_test.go"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 20,
                  "endLine": 96,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\t\tInterval: metav1.Duration{Duration: time.Minute},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t\tInterval: metav1.Duration{Duration: time.Minute},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n",
                      "markdown": "`\t\t\tInterval: metav1.Duration{Duration: time.Minute},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_impersonation_test.go"
                },
                "region": {
                  "startLine": 193,
                  "startColumn": 34,
                  "endLine": 193,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\t\tg.Expect(readyCondition.Reason).To(Equal(meta.ReconciliationSucceededReason))\n\t})\n\n\tt.Run(\"can finalize impersonating service account\", func(t *testing.T) {\n\t\tsaK := &kustomizev1.Kustomization{}\n\t\terr = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), saK)\n\t\tg.Expect(err).NotTo(HaveOccurred())\n",
                    "rendered": {
                      "text": "\t\tg.Expect(readyCondition.Reason).To(Equal(meta.ReconciliationSucceededReason))\n\t})\n\n\tt.Run(\"can finalize impersonating service account\", func(t *testing.T) {\n\t\tsaK := &kustomizev1.Kustomization{}\n\t\terr = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), saK)\n\t\tg.Expect(err).NotTo(HaveOccurred())\n",
                      "markdown": "`\t\tg.Expect(readyCondition.Reason).To(Equal(meta.ReconciliationSucceededReason))\n\t})\n\n\tt.Run(\"can finalize impersonating service account\", func(t *testing.T) {\n\t\tsaK := &kustomizev1.Kustomization{}\n\t\terr = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), saK)\n\t\tg.Expect(err).NotTo(HaveOccurred())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_impersonation_test.go"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 32,
                  "endLine": 140,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\t\tg.Expect(readyCondition.Message).To(ContainSubstring(\"system:serviceaccount:%s:default\", id))\n\t})\n\n\tt.Run(\"reconciles impersonating service account\", func(t *testing.T) {\n\t\tsa := corev1.ServiceAccount{\n\t\t\tTypeMeta: metav1.TypeMeta{\n\t\t\t\tKind:       \"ServiceAccount\",\n",
                    "rendered": {
                      "text": "\t\tg.Expect(readyCondition.Message).To(ContainSubstring(\"system:serviceaccount:%s:default\", id))\n\t})\n\n\tt.Run(\"reconciles impersonating service account\", func(t *testing.T) {\n\t\tsa := corev1.ServiceAccount{\n\t\t\tTypeMeta: metav1.TypeMeta{\n\t\t\t\tKind:       \"ServiceAccount\",\n",
                      "markdown": "`\t\tg.Expect(readyCondition.Message).To(ContainSubstring(\"system:serviceaccount:%s:default\", id))\n\t})\n\n\tt.Run(\"reconciles impersonating service account\", func(t *testing.T) {\n\t\tsa := corev1.ServiceAccount{\n\t\t\tTypeMeta: metav1.TypeMeta{\n\t\t\t\tKind:       \"ServiceAccount\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_impersonation_test.go"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 52,
                  "endLine": 125,
                  "endColumn": 61,
                  "snippet": {
                    "text": "\t\tg.Expect(readyCondition.Reason).To(Equal(meta.ReconciliationSucceededReason))\n\t})\n\n\tt.Run(\"fails to reconcile impersonating the default service account\", func(t *testing.T) {\n\t\treconciler.DefaultServiceAccount = \"default\"\n\t\trevision = \"v2.0.0\"\n\t\terr = applyGitRepository(repositoryName, artifact, revision)\n",
                    "rendered": {
                      "text": "\t\tg.Expect(readyCondition.Reason).To(Equal(meta.ReconciliationSucceededReason))\n\t})\n\n\tt.Run(\"fails to reconcile impersonating the default service account\", func(t *testing.T) {\n\t\treconciler.DefaultServiceAccount = \"default\"\n\t\trevision = \"v2.0.0\"\n\t\terr = applyGitRepository(repositoryName, artifact, revision)\n",
                      "markdown": "`\t\tg.Expect(readyCondition.Reason).To(Equal(meta.ReconciliationSucceededReason))\n\t})\n\n\tt.Run(\"fails to reconcile impersonating the default service account\", func(t *testing.T) {\n\t\treconciler.DefaultServiceAccount = \"default\"\n\t\trevision = \"v2.0.0\"\n\t\terr = applyGitRepository(repositoryName, artifact, revision)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_controller.go"
                },
                "region": {
                  "startLine": 1066,
                  "startColumn": 18,
                  "endLine": 1066,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t// reconciliation has failed.\n\tif conditions.IsFalse(obj, meta.ReadyCondition) &&\n\t\tconditions.Has(obj, meta.ReconcilingCondition) {\n\t\trc := conditions.Get(obj, meta.ReconcilingCondition)\n\t\trc.Reason = meta.ProgressingWithRetryReason\n\t\tconditions.Set(obj, rc)\n\t}\n",
                    "rendered": {
                      "text": "\t// reconciliation has failed.\n\tif conditions.IsFalse(obj, meta.ReadyCondition) &&\n\t\tconditions.Has(obj, meta.ReconcilingCondition) {\n\t\trc := conditions.Get(obj, meta.ReconcilingCondition)\n\t\trc.Reason = meta.ProgressingWithRetryReason\n\t\tconditions.Set(obj, rc)\n\t}\n",
                      "markdown": "`\t// reconciliation has failed.\n\tif conditions.IsFalse(obj, meta.ReadyCondition) &&\n\t\tconditions.Has(obj, meta.ReconcilingCondition) {\n\t\trc := conditions.Get(obj, meta.ReconcilingCondition)\n\t\trc.Reason = meta.ProgressingWithRetryReason\n\t\tconditions.Set(obj, rc)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_controller.go"
                },
                "region": {
                  "startLine": 566,
                  "startColumn": 17,
                  "endLine": 566,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t\tsrc = &repository\n\tcase sourcev1.BucketKind:\n\t\tvar bucket sourcev1.Bucket\n\t\terr := r.Client.Get(ctx, namespacedName, &bucket)\n\t\tif err != nil {\n\t\t\tif apierrors.IsNotFound(err) {\n\t\t\t\treturn src, err\n",
                    "rendered": {
                      "text": "\t\tsrc = &repository\n\tcase sourcev1.BucketKind:\n\t\tvar bucket sourcev1.Bucket\n\t\terr := r.Client.Get(ctx, namespacedName, &bucket)\n\t\tif err != nil {\n\t\t\tif apierrors.IsNotFound(err) {\n\t\t\t\treturn src, err\n",
                      "markdown": "`\t\tsrc = &repository\n\tcase sourcev1.BucketKind:\n\t\tvar bucket sourcev1.Bucket\n\t\terr := r.Client.Get(ctx, namespacedName, &bucket)\n\t\tif err != nil {\n\t\t\tif apierrors.IsNotFound(err) {\n\t\t\t\treturn src, err\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_controller.go"
                },
                "region": {
                  "startLine": 556,
                  "startColumn": 17,
                  "endLine": 556,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t\tsrc = &repository\n\tcase sourcev1.GitRepositoryKind:\n\t\tvar repository sourcev1.GitRepository\n\t\terr := r.Client.Get(ctx, namespacedName, &repository)\n\t\tif err != nil {\n\t\t\tif apierrors.IsNotFound(err) {\n\t\t\t\treturn src, err\n",
                    "rendered": {
                      "text": "\t\tsrc = &repository\n\tcase sourcev1.GitRepositoryKind:\n\t\tvar repository sourcev1.GitRepository\n\t\terr := r.Client.Get(ctx, namespacedName, &repository)\n\t\tif err != nil {\n\t\t\tif apierrors.IsNotFound(err) {\n\t\t\t\treturn src, err\n",
                      "markdown": "`\t\tsrc = &repository\n\tcase sourcev1.GitRepositoryKind:\n\t\tvar repository sourcev1.GitRepository\n\t\terr := r.Client.Get(ctx, namespacedName, &repository)\n\t\tif err != nil {\n\t\t\tif apierrors.IsNotFound(err) {\n\t\t\t\treturn src, err\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_controller.go"
                },
                "region": {
                  "startLine": 546,
                  "startColumn": 17,
                  "endLine": 546,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\tswitch obj.Spec.SourceRef.Kind {\n\tcase sourcev1b2.OCIRepositoryKind:\n\t\tvar repository sourcev1b2.OCIRepository\n\t\terr := r.Client.Get(ctx, namespacedName, &repository)\n\t\tif err != nil {\n\t\t\tif apierrors.IsNotFound(err) {\n\t\t\t\treturn src, err\n",
                    "rendered": {
                      "text": "\tswitch obj.Spec.SourceRef.Kind {\n\tcase sourcev1b2.OCIRepositoryKind:\n\t\tvar repository sourcev1b2.OCIRepository\n\t\terr := r.Client.Get(ctx, namespacedName, &repository)\n\t\tif err != nil {\n\t\t\tif apierrors.IsNotFound(err) {\n\t\t\t\treturn src, err\n",
                      "markdown": "`\tswitch obj.Spec.SourceRef.Kind {\n\tcase sourcev1b2.OCIRepositoryKind:\n\t\tvar repository sourcev1b2.OCIRepository\n\t\terr := r.Client.Get(ctx, namespacedName, &repository)\n\t\tif err != nil {\n\t\t\tif apierrors.IsNotFound(err) {\n\t\t\t\treturn src, err\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_controller.go"
                },
                "region": {
                  "startLine": 492,
                  "startColumn": 20,
                  "endLine": 492,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\t\tName:      d.Name,\n\t\t}\n\t\tvar k kustomizev1.Kustomization\n\t\terr := r.APIReader.Get(ctx, dName, &k)\n\t\tif err != nil {\n\t\t\treturn fmt.Errorf(\"dependency '%s' not found: %w\", dName, err)\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t\tName:      d.Name,\n\t\t}\n\t\tvar k kustomizev1.Kustomization\n\t\terr := r.APIReader.Get(ctx, dName, &k)\n\t\tif err != nil {\n\t\t\treturn fmt.Errorf(\"dependency '%s' not found: %w\", dName, err)\n\t\t}\n",
                      "markdown": "`\t\t\tName:      d.Name,\n\t\t}\n\t\tvar k kustomizev1.Kustomization\n\t\terr := r.APIReader.Get(ctx, dName, &k)\n\t\tif err != nil {\n\t\t\treturn fmt.Errorf(\"dependency '%s' not found: %w\", dName, err)\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_controller.go"
                },
                "region": {
                  "startLine": 173,
                  "startColumn": 12,
                  "endLine": 173,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\treconcileStart := time.Now()\n\n\tobj := &kustomizev1.Kustomization{}\n\tif err := r.Get(ctx, req.NamespacedName, obj); err != nil {\n\t\treturn ctrl.Result{}, client.IgnoreNotFound(err)\n\t}\n\n",
                    "rendered": {
                      "text": "\treconcileStart := time.Now()\n\n\tobj := &kustomizev1.Kustomization{}\n\tif err := r.Get(ctx, req.NamespacedName, obj); err != nil {\n\t\treturn ctrl.Result{}, client.IgnoreNotFound(err)\n\t}\n\n",
                      "markdown": "`\treconcileStart := time.Now()\n\n\tobj := &kustomizev1.Kustomization{}\n\tif err := r.Get(ctx, req.NamespacedName, obj); err != nil {\n\t\treturn ctrl.Result{}, client.IgnoreNotFound(err)\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_controller.go"
                },
                "region": {
                  "startLine": 1055,
                  "startColumn": 40,
                  "endLine": 1055,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\tobj.Status.LastHandledReconcileAt = v\n\t}\n\n\t// Remove the Reconciling condition and update the observed generation\n\t// if the reconciliation was successful.\n\tif conditions.IsTrue(obj, meta.ReadyCondition) {\n\t\tconditions.Delete(obj, meta.ReconcilingCondition)\n",
                    "rendered": {
                      "text": "\t\tobj.Status.LastHandledReconcileAt = v\n\t}\n\n\t// Remove the Reconciling condition and update the observed generation\n\t// if the reconciliation was successful.\n\tif conditions.IsTrue(obj, meta.ReadyCondition) {\n\t\tconditions.Delete(obj, meta.ReconcilingCondition)\n",
                      "markdown": "`\t\tobj.Status.LastHandledReconcileAt = v\n\t}\n\n\t// Remove the Reconciling condition and update the observed generation\n\t// if the reconciliation was successful.\n\tif conditions.IsTrue(obj, meta.ReadyCondition) {\n\t\tconditions.Delete(obj, meta.ReconcilingCondition)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_controller.go"
                },
                "region": {
                  "startLine": 1018,
                  "startColumn": 42,
                  "endLine": 1018,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\t\t}\n\t}\n\n\t// Remove our finalizer from the list and update it\n\tcontrollerutil.RemoveFinalizer(obj, kustomizev1.KustomizationFinalizer)\n\t// Stop reconciliation as the object is being deleted\n\treturn ctrl.Result{}, nil\n",
                    "rendered": {
                      "text": "\t\t}\n\t}\n\n\t// Remove our finalizer from the list and update it\n\tcontrollerutil.RemoveFinalizer(obj, kustomizev1.KustomizationFinalizer)\n\t// Stop reconciliation as the object is being deleted\n\treturn ctrl.Result{}, nil\n",
                      "markdown": "`\t\t}\n\t}\n\n\t// Remove our finalizer from the list and update it\n\tcontrollerutil.RemoveFinalizer(obj, kustomizev1.KustomizationFinalizer)\n\t// Stop reconciliation as the object is being deleted\n\treturn ctrl.Result{}, nil\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_controller.go"
                },
                "region": {
                  "startLine": 920,
                  "startColumn": 30,
                  "endLine": 920,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\n\tconditions.MarkTrue(obj, meta.HealthyCondition, meta.SucceededReason, \"%s\", msg)\n\tif err := r.patch(ctx, obj, patcher); err != nil {\n\t\treturn fmt.Errorf(\"unable to update the healthy status to progressing: %w\", err)\n\t}\n\n\treturn nil\n",
                    "rendered": {
                      "text": "\n\tconditions.MarkTrue(obj, meta.HealthyCondition, meta.SucceededReason, \"%s\", msg)\n\tif err := r.patch(ctx, obj, patcher); err != nil {\n\t\treturn fmt.Errorf(\"unable to update the healthy status to progressing: %w\", err)\n\t}\n\n\treturn nil\n",
                      "markdown": "`\n\tconditions.MarkTrue(obj, meta.HealthyCondition, meta.SucceededReason, \"%s\", msg)\n\tif err := r.patch(ctx, obj, patcher); err != nil {\n\t\treturn fmt.Errorf(\"unable to update the healthy status to progressing: %w\", err)\n\t}\n\n\treturn nil\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_controller.go"
                },
                "region": {
                  "startLine": 898,
                  "startColumn": 30,
                  "endLine": 898,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\tconditions.MarkReconciling(obj, meta.ProgressingReason, \"%s\", message)\n\tconditions.MarkUnknown(obj, meta.HealthyCondition, meta.ProgressingReason, \"%s\", message)\n\tif err := r.patch(ctx, obj, patcher); err != nil {\n\t\treturn fmt.Errorf(\"unable to update the healthy status to progressing: %w\", err)\n\t}\n\n\t// Check the health with a default timeout of 30sec shorter than the reconciliation interval.\n",
                    "rendered": {
                      "text": "\tconditions.MarkReconciling(obj, meta.ProgressingReason, \"%s\", message)\n\tconditions.MarkUnknown(obj, meta.HealthyCondition, meta.ProgressingReason, \"%s\", message)\n\tif err := r.patch(ctx, obj, patcher); err != nil {\n\t\treturn fmt.Errorf(\"unable to update the healthy status to progressing: %w\", err)\n\t}\n\n\t// Check the health with a default timeout of 30sec shorter than the reconciliation interval.\n",
                      "markdown": "`\tconditions.MarkReconciling(obj, meta.ProgressingReason, \"%s\", message)\n\tconditions.MarkUnknown(obj, meta.HealthyCondition, meta.ProgressingReason, \"%s\", message)\n\tif err := r.patch(ctx, obj, patcher); err != nil {\n\t\treturn fmt.Errorf(\"unable to update the healthy status to progressing: %w\", err)\n\t}\n\n\t// Check the health with a default timeout of 30sec shorter than the reconciliation interval.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_controller.go"
                },
                "region": {
                  "startLine": 893,
                  "startColumn": 3,
                  "endLine": 893,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t// Find the previous health check result.\n\twasHealthy := apimeta.IsStatusConditionTrue(obj.Status.Conditions, meta.HealthyCondition)\n\n\t// Update status with the reconciliation progress.\n\tmessage := fmt.Sprintf(\"Running health checks for revision %s with a timeout of %s\", revision, obj.GetTimeout().String())\n\tconditions.MarkReconciling(obj, meta.ProgressingReason, \"%s\", message)\n\tconditions.MarkUnknown(obj, meta.HealthyCondition, meta.ProgressingReason, \"%s\", message)\n",
                    "rendered": {
                      "text": "\t// Find the previous health check result.\n\twasHealthy := apimeta.IsStatusConditionTrue(obj.Status.Conditions, meta.HealthyCondition)\n\n\t// Update status with the reconciliation progress.\n\tmessage := fmt.Sprintf(\"Running health checks for revision %s with a timeout of %s\", revision, obj.GetTimeout().String())\n\tconditions.MarkReconciling(obj, meta.ProgressingReason, \"%s\", message)\n\tconditions.MarkUnknown(obj, meta.HealthyCondition, meta.ProgressingReason, \"%s\", message)\n",
                      "markdown": "`\t// Find the previous health check result.\n\twasHealthy := apimeta.IsStatusConditionTrue(obj.Status.Conditions, meta.HealthyCondition)\n\n\t// Update status with the reconciliation progress.\n\tmessage := fmt.Sprintf(\"Running health checks for revision %s with a timeout of %s\", revision, obj.GetTimeout().String())\n\tconditions.MarkReconciling(obj, meta.ProgressingReason, \"%s\", message)\n\tconditions.MarkUnknown(obj, meta.HealthyCondition, meta.ProgressingReason, \"%s\", message)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_controller.go"
                },
                "region": {
                  "startLine": 420,
                  "startColumn": 30,
                  "endLine": 420,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\tprogressingMsg = fmt.Sprintf(\"Detecting drift for revision %s with a timeout of %s\", revision, obj.GetTimeout().String())\n\tconditions.MarkReconciling(obj, meta.ProgressingReason, \"%s\", progressingMsg)\n\tif err := r.patch(ctx, obj, patcher); err != nil {\n\t\treturn fmt.Errorf(\"failed to update status: %w\", err)\n\t}\n\n\t// Validate and apply resources in stages.\n",
                    "rendered": {
                      "text": "\tprogressingMsg = fmt.Sprintf(\"Detecting drift for revision %s with a timeout of %s\", revision, obj.GetTimeout().String())\n\tconditions.MarkReconciling(obj, meta.ProgressingReason, \"%s\", progressingMsg)\n\tif err := r.patch(ctx, obj, patcher); err != nil {\n\t\treturn fmt.Errorf(\"failed to update status: %w\", err)\n\t}\n\n\t// Validate and apply resources in stages.\n",
                      "markdown": "`\tprogressingMsg = fmt.Sprintf(\"Detecting drift for revision %s with a timeout of %s\", revision, obj.GetTimeout().String())\n\tconditions.MarkReconciling(obj, meta.ProgressingReason, \"%s\", progressingMsg)\n\tif err := r.patch(ctx, obj, patcher); err != nil {\n\t\treturn fmt.Errorf(\"failed to update status: %w\", err)\n\t}\n\n\t// Validate and apply resources in stages.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_controller.go"
                },
                "region": {
                  "startLine": 416,
                  "startColumn": 3,
                  "endLine": 416,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\tresourceManager.SetOwnerLabels(objects, obj.GetName(), obj.GetNamespace())\n\tresourceManager.SetConcurrency(r.ConcurrentSSA)\n\n\t// Update status with the reconciliation progress.\n\tprogressingMsg = fmt.Sprintf(\"Detecting drift for revision %s with a timeout of %s\", revision, obj.GetTimeout().String())\n\tconditions.MarkReconciling(obj, meta.ProgressingReason, \"%s\", progressingMsg)\n\tif err := r.patch(ctx, obj, patcher); err != nil {\n",
                    "rendered": {
                      "text": "\tresourceManager.SetOwnerLabels(objects, obj.GetName(), obj.GetNamespace())\n\tresourceManager.SetConcurrency(r.ConcurrentSSA)\n\n\t// Update status with the reconciliation progress.\n\tprogressingMsg = fmt.Sprintf(\"Detecting drift for revision %s with a timeout of %s\", revision, obj.GetTimeout().String())\n\tconditions.MarkReconciling(obj, meta.ProgressingReason, \"%s\", progressingMsg)\n\tif err := r.patch(ctx, obj, patcher); err != nil {\n",
                      "markdown": "`\tresourceManager.SetOwnerLabels(objects, obj.GetName(), obj.GetNamespace())\n\tresourceManager.SetConcurrency(r.ConcurrentSSA)\n\n\t// Update status with the reconciliation progress.\n\tprogressingMsg = fmt.Sprintf(\"Detecting drift for revision %s with a timeout of %s\", revision, obj.GetTimeout().String())\n\tconditions.MarkReconciling(obj, meta.ProgressingReason, \"%s\", progressingMsg)\n\tif err := r.patch(ctx, obj, patcher); err != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_controller.go"
                },
                "region": {
                  "startLine": 360,
                  "startColumn": 30,
                  "endLine": 360,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\tprogressingMsg = fmt.Sprintf(\"Building manifests for revision %s with a timeout of %s\", revision, obj.GetTimeout().String())\n\tconditions.MarkReconciling(obj, meta.ProgressingReason, \"%s\", progressingMsg)\n\tif err := r.patch(ctx, obj, patcher); err != nil {\n\t\treturn fmt.Errorf(\"failed to update status: %w\", err)\n\t}\n\n\t// Configure the Kubernetes client for impersonation.\n",
                    "rendered": {
                      "text": "\tprogressingMsg = fmt.Sprintf(\"Building manifests for revision %s with a timeout of %s\", revision, obj.GetTimeout().String())\n\tconditions.MarkReconciling(obj, meta.ProgressingReason, \"%s\", progressingMsg)\n\tif err := r.patch(ctx, obj, patcher); err != nil {\n\t\treturn fmt.Errorf(\"failed to update status: %w\", err)\n\t}\n\n\t// Configure the Kubernetes client for impersonation.\n",
                      "markdown": "`\tprogressingMsg = fmt.Sprintf(\"Building manifests for revision %s with a timeout of %s\", revision, obj.GetTimeout().String())\n\tconditions.MarkReconciling(obj, meta.ProgressingReason, \"%s\", progressingMsg)\n\tif err := r.patch(ctx, obj, patcher); err != nil {\n\t\treturn fmt.Errorf(\"failed to update status: %w\", err)\n\t}\n\n\t// Configure the Kubernetes client for impersonation.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_controller.go"
                },
                "region": {
                  "startLine": 307,
                  "startColumn": 30,
                  "endLine": 307,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\tconditions.MarkUnknown(obj, meta.ReadyCondition, meta.ProgressingReason, \"%s\", \"Reconciliation in progress\")\n\tconditions.MarkReconciling(obj, meta.ProgressingReason, \"%s\", progressingMsg)\n\tif err := r.patch(ctx, obj, patcher); err != nil {\n\t\treturn fmt.Errorf(\"failed to update status: %w\", err)\n\t}\n\n\t// Create a snapshot of the current inventory.\n",
                    "rendered": {
                      "text": "\tconditions.MarkUnknown(obj, meta.ReadyCondition, meta.ProgressingReason, \"%s\", \"Reconciliation in progress\")\n\tconditions.MarkReconciling(obj, meta.ProgressingReason, \"%s\", progressingMsg)\n\tif err := r.patch(ctx, obj, patcher); err != nil {\n\t\treturn fmt.Errorf(\"failed to update status: %w\", err)\n\t}\n\n\t// Create a snapshot of the current inventory.\n",
                      "markdown": "`\tconditions.MarkUnknown(obj, meta.ReadyCondition, meta.ProgressingReason, \"%s\", \"Reconciliation in progress\")\n\tconditions.MarkReconciling(obj, meta.ProgressingReason, \"%s\", progressingMsg)\n\tif err := r.patch(ctx, obj, patcher); err != nil {\n\t\treturn fmt.Errorf(\"failed to update status: %w\", err)\n\t}\n\n\t// Create a snapshot of the current inventory.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_controller.go"
                },
                "region": {
                  "startLine": 301,
                  "startColumn": 3,
                  "endLine": 301,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\tpatcher *patch.SerialPatcher) error {\n\tlog := ctrl.LoggerFrom(ctx)\n\n\t// Update status with the reconciliation progress.\n\trevision := src.GetArtifact().Revision\n\tprogressingMsg := fmt.Sprintf(\"Fetching manifests for revision %s with a timeout of %s\", revision, obj.GetTimeout().String())\n\tconditions.MarkUnknown(obj, meta.ReadyCondition, meta.ProgressingReason, \"%s\", \"Reconciliation in progress\")\n",
                    "rendered": {
                      "text": "\tpatcher *patch.SerialPatcher) error {\n\tlog := ctrl.LoggerFrom(ctx)\n\n\t// Update status with the reconciliation progress.\n\trevision := src.GetArtifact().Revision\n\tprogressingMsg := fmt.Sprintf(\"Fetching manifests for revision %s with a timeout of %s\", revision, obj.GetTimeout().String())\n\tconditions.MarkUnknown(obj, meta.ReadyCondition, meta.ProgressingReason, \"%s\", \"Reconciliation in progress\")\n",
                      "markdown": "`\tpatcher *patch.SerialPatcher) error {\n\tlog := ctrl.LoggerFrom(ctx)\n\n\t// Update status with the reconciliation progress.\n\trevision := src.GetArtifact().Revision\n\tprogressingMsg := fmt.Sprintf(\"Fetching manifests for revision %s with a timeout of %s\", revision, obj.GetTimeout().String())\n\tconditions.MarkUnknown(obj, meta.ReadyCondition, meta.ProgressingReason, \"%s\", \"Reconciliation in progress\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_controller.go"
                },
                "region": {
                  "startLine": 290,
                  "startColumn": 30,
                  "endLine": 290,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\t\treturn ctrl.Result{RequeueAfter: obj.GetRetryInterval()}, nil\n\t}\n\n\t// Requeue the reconciliation at the specified interval.\n\treturn ctrl.Result{RequeueAfter: jitter.JitteredIntervalDuration(obj.GetRequeueAfter())}, nil\n}\n\n",
                    "rendered": {
                      "text": "\t\treturn ctrl.Result{RequeueAfter: obj.GetRetryInterval()}, nil\n\t}\n\n\t// Requeue the reconciliation at the specified interval.\n\treturn ctrl.Result{RequeueAfter: jitter.JitteredIntervalDuration(obj.GetRequeueAfter())}, nil\n}\n\n",
                      "markdown": "`\t\treturn ctrl.Result{RequeueAfter: obj.GetRetryInterval()}, nil\n\t}\n\n\t// Requeue the reconciliation at the specified interval.\n\treturn ctrl.Result{RequeueAfter: jitter.JitteredIntervalDuration(obj.GetRequeueAfter())}, nil\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_controller.go"
                },
                "region": {
                  "startLine": 278,
                  "startColumn": 52,
                  "endLine": 278,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\t\treturn ctrl.Result{RequeueAfter: r.requeueDependency}, nil\n\t}\n\n\t// Broadcast the reconciliation failure and requeue at the specified retry interval.\n\tif reconcileErr != nil {\n\t\tlog.Error(reconcileErr, fmt.Sprintf(\"Reconciliation failed after %s, next try in %s\",\n\t\t\ttime.Since(reconcileStart).String(),\n",
                    "rendered": {
                      "text": "\t\treturn ctrl.Result{RequeueAfter: r.requeueDependency}, nil\n\t}\n\n\t// Broadcast the reconciliation failure and requeue at the specified retry interval.\n\tif reconcileErr != nil {\n\t\tlog.Error(reconcileErr, fmt.Sprintf(\"Reconciliation failed after %s, next try in %s\",\n\t\t\ttime.Since(reconcileStart).String(),\n",
                      "markdown": "`\t\treturn ctrl.Result{RequeueAfter: r.requeueDependency}, nil\n\t}\n\n\t// Broadcast the reconciliation failure and requeue at the specified retry interval.\n\tif reconcileErr != nil {\n\t\tlog.Error(reconcileErr, fmt.Sprintf(\"Reconciliation failed after %s, next try in %s\",\n\t\t\ttime.Since(reconcileStart).String(),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_controller.go"
                },
                "region": {
                  "startLine": 270,
                  "startColumn": 11,
                  "endLine": 270,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\t// Reconcile the latest revision.\n\treconcileErr := r.reconcile(ctx, obj, artifactSource, patcher)\n\n\t// Requeue at the specified retry interval if the artifact tarball is not found.\n\tif errors.Is(reconcileErr, fetch.ErrFileNotFound) {\n\t\tmsg := fmt.Sprintf(\"Source is not ready, artifact not found, retrying in %s\", r.requeueDependency.String())\n\t\tconditions.MarkFalse(obj, meta.ReadyCondition, meta.ArtifactFailedReason, \"%s\", msg)\n",
                    "rendered": {
                      "text": "\t// Reconcile the latest revision.\n\treconcileErr := r.reconcile(ctx, obj, artifactSource, patcher)\n\n\t// Requeue at the specified retry interval if the artifact tarball is not found.\n\tif errors.Is(reconcileErr, fetch.ErrFileNotFound) {\n\t\tmsg := fmt.Sprintf(\"Source is not ready, artifact not found, retrying in %s\", r.requeueDependency.String())\n\t\tconditions.MarkFalse(obj, meta.ReadyCondition, meta.ArtifactFailedReason, \"%s\", msg)\n",
                      "markdown": "`\t// Reconcile the latest revision.\n\treconcileErr := r.reconcile(ctx, obj, artifactSource, patcher)\n\n\t// Requeue at the specified retry interval if the artifact tarball is not found.\n\tif errors.Is(reconcileErr, fetch.ErrFileNotFound) {\n\t\tmsg := fmt.Sprintf(\"Source is not ready, artifact not found, retrying in %s\", r.requeueDependency.String())\n\t\tconditions.MarkFalse(obj, meta.ReadyCondition, meta.ArtifactFailedReason, \"%s\", msg)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_controller.go"
                },
                "region": {
                  "startLine": 1013,
                  "startColumn": 51,
                  "endLine": 1013,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\t\t} else {\n\t\t\t// when the account to impersonate is gone, log the stale objects and continue with the finalization\n\t\t\tmsg := fmt.Sprintf(\"unable to prune objects: \\n%s\", ssautil.FmtUnstructuredList(objects))\n\t\t\tlog.Error(fmt.Errorf(\"skiping pruning, failed to find account to impersonate\"), msg)\n\t\t\tr.event(obj, obj.Status.LastAppliedRevision, eventv1.EventSeverityError, msg, nil)\n\t\t}\n\t}\n",
                    "rendered": {
                      "text": "\t\t} else {\n\t\t\t// when the account to impersonate is gone, log the stale objects and continue with the finalization\n\t\t\tmsg := fmt.Sprintf(\"unable to prune objects: \\n%s\", ssautil.FmtUnstructuredList(objects))\n\t\t\tlog.Error(fmt.Errorf(\"skiping pruning, failed to find account to impersonate\"), msg)\n\t\t\tr.event(obj, obj.Status.LastAppliedRevision, eventv1.EventSeverityError, msg, nil)\n\t\t}\n\t}\n",
                      "markdown": "`\t\t} else {\n\t\t\t// when the account to impersonate is gone, log the stale objects and continue with the finalization\n\t\t\tmsg := fmt.Sprintf(\"unable to prune objects: \\n%s\", ssautil.FmtUnstructuredList(objects))\n\t\t\tlog.Error(fmt.Errorf(\"skiping pruning, failed to find account to impersonate\"), msg)\n\t\t\tr.event(obj, obj.Status.LastAppliedRevision, eventv1.EventSeverityError, msg, nil)\n\t\t}\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_controller.go"
                },
                "region": {
                  "startLine": 901,
                  "startColumn": 35,
                  "endLine": 901,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\treturn fmt.Errorf(\"unable to update the healthy status to progressing: %w\", err)\n\t}\n\n\t// Check the health with a default timeout of 30sec shorter than the reconciliation interval.\n\tif err := manager.WaitForSet(toCheck, ssa.WaitOptions{\n\t\tInterval: 5 * time.Second,\n\t\tTimeout:  obj.GetTimeout(),\n",
                    "rendered": {
                      "text": "\t\treturn fmt.Errorf(\"unable to update the healthy status to progressing: %w\", err)\n\t}\n\n\t// Check the health with a default timeout of 30sec shorter than the reconciliation interval.\n\tif err := manager.WaitForSet(toCheck, ssa.WaitOptions{\n\t\tInterval: 5 * time.Second,\n\t\tTimeout:  obj.GetTimeout(),\n",
                      "markdown": "`\t\treturn fmt.Errorf(\"unable to update the healthy status to progressing: %w\", err)\n\t}\n\n\t// Check the health with a default timeout of 30sec shorter than the reconciliation interval.\n\tif err := manager.WaitForSet(toCheck, ssa.WaitOptions{\n\t\tInterval: 5 * time.Second,\n\t\tTimeout:  obj.GetTimeout(),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_controller.go"
                },
                "region": {
                  "startLine": 894,
                  "startColumn": 69,
                  "endLine": 894,
                  "endColumn": 78,
                  "snippet": {
                    "text": "\twasHealthy := apimeta.IsStatusConditionTrue(obj.Status.Conditions, meta.HealthyCondition)\n\n\t// Update status with the reconciliation progress.\n\tmessage := fmt.Sprintf(\"Running health checks for revision %s with a timeout of %s\", revision, obj.GetTimeout().String())\n\tconditions.MarkReconciling(obj, meta.ProgressingReason, \"%s\", message)\n\tconditions.MarkUnknown(obj, meta.HealthyCondition, meta.ProgressingReason, \"%s\", message)\n\tif err := r.patch(ctx, obj, patcher); err != nil {\n",
                    "rendered": {
                      "text": "\twasHealthy := apimeta.IsStatusConditionTrue(obj.Status.Conditions, meta.HealthyCondition)\n\n\t// Update status with the reconciliation progress.\n\tmessage := fmt.Sprintf(\"Running health checks for revision %s with a timeout of %s\", revision, obj.GetTimeout().String())\n\tconditions.MarkReconciling(obj, meta.ProgressingReason, \"%s\", message)\n\tconditions.MarkUnknown(obj, meta.HealthyCondition, meta.ProgressingReason, \"%s\", message)\n\tif err := r.patch(ctx, obj, patcher); err != nil {\n",
                      "markdown": "`\twasHealthy := apimeta.IsStatusConditionTrue(obj.Status.Conditions, meta.HealthyCondition)\n\n\t// Update status with the reconciliation progress.\n\tmessage := fmt.Sprintf(\"Running health checks for revision %s with a timeout of %s\", revision, obj.GetTimeout().String())\n\tconditions.MarkReconciling(obj, meta.ProgressingReason, \"%s\", message)\n\tconditions.MarkUnknown(obj, meta.HealthyCondition, meta.ProgressingReason, \"%s\", message)\n\tif err := r.patch(ctx, obj, patcher); err != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_controller.go"
                },
                "region": {
                  "startLine": 890,
                  "startColumn": 3,
                  "endLine": 890,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\ttoCheck = append(toCheck, o)\n\t}\n\n\t// Find the previous health check result.\n\twasHealthy := apimeta.IsStatusConditionTrue(obj.Status.Conditions, meta.HealthyCondition)\n\n\t// Update status with the reconciliation progress.\n",
                    "rendered": {
                      "text": "\t\ttoCheck = append(toCheck, o)\n\t}\n\n\t// Find the previous health check result.\n\twasHealthy := apimeta.IsStatusConditionTrue(obj.Status.Conditions, meta.HealthyCondition)\n\n\t// Update status with the reconciliation progress.\n",
                      "markdown": "`\t\ttoCheck = append(toCheck, o)\n\t}\n\n\t// Find the previous health check result.\n\twasHealthy := apimeta.IsStatusConditionTrue(obj.Status.Conditions, meta.HealthyCondition)\n\n\t// Update status with the reconciliation progress.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_controller.go"
                },
                "region": {
                  "startLine": 823,
                  "startColumn": 3,
                  "endLine": 823,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\t}\n\t}\n\n\t// sort by kind, validate and apply all the others objects\n\tsort.Sort(ssa.SortableUnstructureds(resStage))\n\tif len(resStage) > 0 {\n\t\tchangeSet, err := manager.ApplyAll(ctx, resStage, applyOpts)\n",
                    "rendered": {
                      "text": "\t\t}\n\t}\n\n\t// sort by kind, validate and apply all the others objects\n\tsort.Sort(ssa.SortableUnstructureds(resStage))\n\tif len(resStage) > 0 {\n\t\tchangeSet, err := manager.ApplyAll(ctx, resStage, applyOpts)\n",
                      "markdown": "`\t\t}\n\t}\n\n\t// sort by kind, validate and apply all the others objects\n\tsort.Sort(ssa.SortableUnstructureds(resStage))\n\tif len(resStage) > 0 {\n\t\tchangeSet, err := manager.ApplyAll(ctx, resStage, applyOpts)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_controller.go"
                },
                "region": {
                  "startLine": 603,
                  "startColumn": 42,
                  "endLine": 603,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\n\t// Decrypt Kustomize EnvSources files before build\n\tif err = dec.DecryptEnvSources(dirPath); err != nil {\n\t\treturn nil, fmt.Errorf(\"error decrypting env sources: %w\", err)\n\t}\n\n\tm, err := generator.SecureBuild(workDir, dirPath, !r.NoRemoteBases)\n",
                    "rendered": {
                      "text": "\n\t// Decrypt Kustomize EnvSources files before build\n\tif err = dec.DecryptEnvSources(dirPath); err != nil {\n\t\treturn nil, fmt.Errorf(\"error decrypting env sources: %w\", err)\n\t}\n\n\tm, err := generator.SecureBuild(workDir, dirPath, !r.NoRemoteBases)\n",
                      "markdown": "`\n\t// Decrypt Kustomize EnvSources files before build\n\tif err = dec.DecryptEnvSources(dirPath); err != nil {\n\t\treturn nil, fmt.Errorf(\"error decrypting env sources: %w\", err)\n\t}\n\n\tm, err := generator.SecureBuild(workDir, dirPath, !r.NoRemoteBases)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_controller.go"
                },
                "region": {
                  "startLine": 417,
                  "startColumn": 69,
                  "endLine": 417,
                  "endColumn": 78,
                  "snippet": {
                    "text": "\tresourceManager.SetConcurrency(r.ConcurrentSSA)\n\n\t// Update status with the reconciliation progress.\n\tprogressingMsg = fmt.Sprintf(\"Detecting drift for revision %s with a timeout of %s\", revision, obj.GetTimeout().String())\n\tconditions.MarkReconciling(obj, meta.ProgressingReason, \"%s\", progressingMsg)\n\tif err := r.patch(ctx, obj, patcher); err != nil {\n\t\treturn fmt.Errorf(\"failed to update status: %w\", err)\n",
                    "rendered": {
                      "text": "\tresourceManager.SetConcurrency(r.ConcurrentSSA)\n\n\t// Update status with the reconciliation progress.\n\tprogressingMsg = fmt.Sprintf(\"Detecting drift for revision %s with a timeout of %s\", revision, obj.GetTimeout().String())\n\tconditions.MarkReconciling(obj, meta.ProgressingReason, \"%s\", progressingMsg)\n\tif err := r.patch(ctx, obj, patcher); err != nil {\n\t\treturn fmt.Errorf(\"failed to update status: %w\", err)\n",
                      "markdown": "`\tresourceManager.SetConcurrency(r.ConcurrentSSA)\n\n\t// Update status with the reconciliation progress.\n\tprogressingMsg = fmt.Sprintf(\"Detecting drift for revision %s with a timeout of %s\", revision, obj.GetTimeout().String())\n\tconditions.MarkReconciling(obj, meta.ProgressingReason, \"%s\", progressingMsg)\n\tif err := r.patch(ctx, obj, patcher); err != nil {\n\t\treturn fmt.Errorf(\"failed to update status: %w\", err)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_controller.go"
                },
                "region": {
                  "startLine": 357,
                  "startColumn": 72,
                  "endLine": 357,
                  "endColumn": 81,
                  "snippet": {
                    "text": "\n\t// Report progress and set last attempted revision in status.\n\tobj.Status.LastAttemptedRevision = revision\n\tprogressingMsg = fmt.Sprintf(\"Building manifests for revision %s with a timeout of %s\", revision, obj.GetTimeout().String())\n\tconditions.MarkReconciling(obj, meta.ProgressingReason, \"%s\", progressingMsg)\n\tif err := r.patch(ctx, obj, patcher); err != nil {\n\t\treturn fmt.Errorf(\"failed to update status: %w\", err)\n",
                    "rendered": {
                      "text": "\n\t// Report progress and set last attempted revision in status.\n\tobj.Status.LastAttemptedRevision = revision\n\tprogressingMsg = fmt.Sprintf(\"Building manifests for revision %s with a timeout of %s\", revision, obj.GetTimeout().String())\n\tconditions.MarkReconciling(obj, meta.ProgressingReason, \"%s\", progressingMsg)\n\tif err := r.patch(ctx, obj, patcher); err != nil {\n\t\treturn fmt.Errorf(\"failed to update status: %w\", err)\n",
                      "markdown": "`\n\t// Report progress and set last attempted revision in status.\n\tobj.Status.LastAttemptedRevision = revision\n\tprogressingMsg = fmt.Sprintf(\"Building manifests for revision %s with a timeout of %s\", revision, obj.GetTimeout().String())\n\tconditions.MarkReconciling(obj, meta.ProgressingReason, \"%s\", progressingMsg)\n\tif err := r.patch(ctx, obj, patcher); err != nil {\n\t\treturn fmt.Errorf(\"failed to update status: %w\", err)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_controller.go"
                },
                "region": {
                  "startLine": 303,
                  "startColumn": 73,
                  "endLine": 303,
                  "endColumn": 82,
                  "snippet": {
                    "text": "\n\t// Update status with the reconciliation progress.\n\trevision := src.GetArtifact().Revision\n\tprogressingMsg := fmt.Sprintf(\"Fetching manifests for revision %s with a timeout of %s\", revision, obj.GetTimeout().String())\n\tconditions.MarkUnknown(obj, meta.ReadyCondition, meta.ProgressingReason, \"%s\", \"Reconciliation in progress\")\n\tconditions.MarkReconciling(obj, meta.ProgressingReason, \"%s\", progressingMsg)\n\tif err := r.patch(ctx, obj, patcher); err != nil {\n",
                    "rendered": {
                      "text": "\n\t// Update status with the reconciliation progress.\n\trevision := src.GetArtifact().Revision\n\tprogressingMsg := fmt.Sprintf(\"Fetching manifests for revision %s with a timeout of %s\", revision, obj.GetTimeout().String())\n\tconditions.MarkUnknown(obj, meta.ReadyCondition, meta.ProgressingReason, \"%s\", \"Reconciliation in progress\")\n\tconditions.MarkReconciling(obj, meta.ProgressingReason, \"%s\", progressingMsg)\n\tif err := r.patch(ctx, obj, patcher); err != nil {\n",
                      "markdown": "`\n\t// Update status with the reconciliation progress.\n\trevision := src.GetArtifact().Revision\n\tprogressingMsg := fmt.Sprintf(\"Fetching manifests for revision %s with a timeout of %s\", revision, obj.GetTimeout().String())\n\tconditions.MarkUnknown(obj, meta.ReadyCondition, meta.ProgressingReason, \"%s\", \"Reconciliation in progress\")\n\tconditions.MarkReconciling(obj, meta.ProgressingReason, \"%s\", progressingMsg)\n\tif err := r.patch(ctx, obj, patcher); err != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_disallowed_managers_test.go"
                },
                "region": {
                  "startLine": 152,
                  "startColumn": 16,
                  "endLine": 152,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\t\tNamespacedName: kustomizationKey,\n\t\t})\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(initialConfigMap), fixedConfigMap)\n\t\t\treturn g.Expect(fixedConfigMap.Data).ShouldNot(HaveKey(\"bad-key\")) && g.Expect(fixedConfigMap.Data).Should(HaveKey(\"key2\"))\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t})\n",
                    "rendered": {
                      "text": "\t\t\tNamespacedName: kustomizationKey,\n\t\t})\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(initialConfigMap), fixedConfigMap)\n\t\t\treturn g.Expect(fixedConfigMap.Data).ShouldNot(HaveKey(\"bad-key\")) && g.Expect(fixedConfigMap.Data).Should(HaveKey(\"key2\"))\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t})\n",
                      "markdown": "`\t\t\tNamespacedName: kustomizationKey,\n\t\t})\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(initialConfigMap), fixedConfigMap)\n\t\t\treturn g.Expect(fixedConfigMap.Data).ShouldNot(HaveKey(\"bad-key\")) && g.Expect(fixedConfigMap.Data).Should(HaveKey(\"key2\"))\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_disallowed_managers_test.go"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 17,
                  "endLine": 141,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t\tg.Expect(err).NotTo(HaveOccurred())\n\t\terr = k8sClient.Patch(context.Background(), &configMap, client.RawPatch(types.MergePatchType, []byte(`{\"data\":{\"key2\":\"not overridden field manager\"}}`)), &client.PatchOptions{FieldManager: \"good-name\"})\n\t\tg.Expect(err).NotTo(HaveOccurred())\n\t\terr = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(initialConfigMap), badConfigMap)\n\t\tg.Expect(err).NotTo(HaveOccurred())\n\t\tg.Expect(badConfigMap.Data).Should(HaveKey(\"bad-key\"))\n\t\tg.Expect(badConfigMap.Data).Should(HaveKey(\"key2\"))\n",
                    "rendered": {
                      "text": "\t\tg.Expect(err).NotTo(HaveOccurred())\n\t\terr = k8sClient.Patch(context.Background(), &configMap, client.RawPatch(types.MergePatchType, []byte(`{\"data\":{\"key2\":\"not overridden field manager\"}}`)), &client.PatchOptions{FieldManager: \"good-name\"})\n\t\tg.Expect(err).NotTo(HaveOccurred())\n\t\terr = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(initialConfigMap), badConfigMap)\n\t\tg.Expect(err).NotTo(HaveOccurred())\n\t\tg.Expect(badConfigMap.Data).Should(HaveKey(\"bad-key\"))\n\t\tg.Expect(badConfigMap.Data).Should(HaveKey(\"key2\"))\n",
                      "markdown": "`\t\tg.Expect(err).NotTo(HaveOccurred())\n\t\terr = k8sClient.Patch(context.Background(), &configMap, client.RawPatch(types.MergePatchType, []byte(`{\"data\":{\"key2\":\"not overridden field manager\"}}`)), &client.PatchOptions{FieldManager: \"good-name\"})\n\t\tg.Expect(err).NotTo(HaveOccurred())\n\t\terr = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(initialConfigMap), badConfigMap)\n\t\tg.Expect(err).NotTo(HaveOccurred())\n\t\tg.Expect(badConfigMap.Data).Should(HaveKey(\"bad-key\"))\n\t\tg.Expect(badConfigMap.Data).Should(HaveKey(\"key2\"))\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_disallowed_managers_test.go"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 20,
                  "endLine": 126,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\tlogStatus(t, resultK)\n\n\t\tkstatusCheck.CheckErr(ctx, resultK)\n\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, initialConfigMap)).Should(Succeed())\n\t\tg.Expect(initialConfigMap.Data).Should(HaveKey(\"key\"))\n\t})\n\n",
                    "rendered": {
                      "text": "\t\tlogStatus(t, resultK)\n\n\t\tkstatusCheck.CheckErr(ctx, resultK)\n\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, initialConfigMap)).Should(Succeed())\n\t\tg.Expect(initialConfigMap.Data).Should(HaveKey(\"key\"))\n\t})\n\n",
                      "markdown": "`\t\tlogStatus(t, resultK)\n\n\t\tkstatusCheck.CheckErr(ctx, resultK)\n\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, initialConfigMap)).Should(Succeed())\n\t\tg.Expect(initialConfigMap.Data).Should(HaveKey(\"key\"))\n\t})\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_disallowed_managers_test.go"
                },
                "region": {
                  "startLine": 120,
                  "startColumn": 16,
                  "endLine": 120,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\n\tt.Run(\"creates configmap\", func(t *testing.T) {\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn resultK.Status.LastAppliedRevision == revision\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t\tlogStatus(t, resultK)\n",
                    "rendered": {
                      "text": "\n\tt.Run(\"creates configmap\", func(t *testing.T) {\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn resultK.Status.LastAppliedRevision == revision\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t\tlogStatus(t, resultK)\n",
                      "markdown": "`\n\tt.Run(\"creates configmap\", func(t *testing.T) {\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn resultK.Status.LastAppliedRevision == revision\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t\tlogStatus(t, resultK)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_disallowed_managers_test.go"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 20,
                  "endLine": 89,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\t\tInterval: metav1.Duration{Duration: reconciliationInterval},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t\tInterval: metav1.Duration{Duration: reconciliationInterval},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n",
                      "markdown": "`\t\t\tInterval: metav1.Duration{Duration: reconciliationInterval},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_fuzzer_test.go"
                },
                "region": {
                  "startLine": 246,
                  "startColumn": 17,
                  "endLine": 246,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t\t\t\t\tDecryption: &kustomizev1.Decryption{\n\t\t\t\t\t\tProvider: \"sops\",\n\t\t\t\t\t\tSecretRef: &meta.LocalObjectReference{\n\t\t\t\t\t\t\tName: sopsSecretKey.Name,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tTargetNamespace: namespaceName,\n",
                    "rendered": {
                      "text": "\t\t\t\t\tDecryption: &kustomizev1.Decryption{\n\t\t\t\t\t\tProvider: \"sops\",\n\t\t\t\t\t\tSecretRef: &meta.LocalObjectReference{\n\t\t\t\t\t\t\tName: sopsSecretKey.Name,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tTargetNamespace: namespaceName,\n",
                      "markdown": "`\t\t\t\t\tDecryption: &kustomizev1.Decryption{\n\t\t\t\t\t\tProvider: \"sops\",\n\t\t\t\t\t\tSecretRef: &meta.LocalObjectReference{\n\t\t\t\t\t\t\tName: sopsSecretKey.Name,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tTargetNamespace: namespaceName,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_fuzzer_test.go"
                },
                "region": {
                  "startLine": 234,
                  "startColumn": 22,
                  "endLine": 234,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\t\t\t\tSpec: kustomizev1.KustomizationSpec{\n\t\t\t\t\tPath: \"./\",\n\t\t\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t\t\tSpec: kustomizev1.KustomizationSpec{\n\t\t\t\t\tPath: \"./\",\n\t\t\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n",
                      "markdown": "`\t\t\t\tSpec: kustomizev1.KustomizationSpec{\n\t\t\t\t\tPath: \"./\",\n\t\t\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_fuzzer_test.go"
                },
                "region": {
                  "startLine": 205,
                  "startColumn": 20,
                  "endLine": 205,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\t\tsopsSecret := &corev1.Secret{\n\t\t\t\tObjectMeta: metav1.ObjectMeta{\n\t\t\t\t\tName:      sopsSecretKey.Name,\n\t\t\t\t\tNamespace: sopsSecretKey.Namespace,\n\t\t\t\t},\n\t\t\t\tStringData: map[string]string{\n\t\t\t\t\t\"pgp.asc\":    string(pgpKey),\n",
                    "rendered": {
                      "text": "\t\t\tsopsSecret := &corev1.Secret{\n\t\t\t\tObjectMeta: metav1.ObjectMeta{\n\t\t\t\t\tName:      sopsSecretKey.Name,\n\t\t\t\t\tNamespace: sopsSecretKey.Namespace,\n\t\t\t\t},\n\t\t\t\tStringData: map[string]string{\n\t\t\t\t\t\"pgp.asc\":    string(pgpKey),\n",
                      "markdown": "`\t\t\tsopsSecret := &corev1.Secret{\n\t\t\t\tObjectMeta: metav1.ObjectMeta{\n\t\t\t\t\tName:      sopsSecretKey.Name,\n\t\t\t\t\tNamespace: sopsSecretKey.Namespace,\n\t\t\t\t},\n\t\t\t\tStringData: map[string]string{\n\t\t\t\t\t\"pgp.asc\":    string(pgpKey),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_fuzzer_test.go"
                },
                "region": {
                  "startLine": 204,
                  "startColumn": 20,
                  "endLine": 204,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n\t\t\tsopsSecret := &corev1.Secret{\n\t\t\t\tObjectMeta: metav1.ObjectMeta{\n\t\t\t\t\tName:      sopsSecretKey.Name,\n\t\t\t\t\tNamespace: sopsSecretKey.Namespace,\n\t\t\t\t},\n\t\t\t\tStringData: map[string]string{\n",
                    "rendered": {
                      "text": "\n\t\t\tsopsSecret := &corev1.Secret{\n\t\t\t\tObjectMeta: metav1.ObjectMeta{\n\t\t\t\t\tName:      sopsSecretKey.Name,\n\t\t\t\t\tNamespace: sopsSecretKey.Namespace,\n\t\t\t\t},\n\t\t\t\tStringData: map[string]string{\n",
                      "markdown": "`\n\t\t\tsopsSecret := &corev1.Secret{\n\t\t\t\tObjectMeta: metav1.ObjectMeta{\n\t\t\t\t\tName:      sopsSecretKey.Name,\n\t\t\t\t\tNamespace: sopsSecretKey.Namespace,\n\t\t\t\t},\n\t\t\t\tStringData: map[string]string{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_fuzzer_test.go"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 7,
                  "endLine": 197,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\t\t\tif err != nil {\n\t\t\t\treturn err\n\t\t\t}\n\t\t\tsopsSecretKey := types.NamespacedName{\n\t\t\t\tName:      sskName,\n\t\t\t\tNamespace: namespaceName,\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\tif err != nil {\n\t\t\t\treturn err\n\t\t\t}\n\t\t\tsopsSecretKey := types.NamespacedName{\n\t\t\t\tName:      sskName,\n\t\t\t\tNamespace: namespaceName,\n\t\t\t}\n",
                      "markdown": "`\t\t\tif err != nil {\n\t\t\t\treturn err\n\t\t\t}\n\t\t\tsopsSecretKey := types.NamespacedName{\n\t\t\t\tName:      sskName,\n\t\t\t\tNamespace: namespaceName,\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_fuzzer_test.go"
                },
                "region": {
                  "startLine": 472,
                  "startColumn": 48,
                  "endLine": 472,
                  "endColumn": 74,
                  "snippet": {
                    "text": "\treturn defaultBinVersion\n}\n\nfunc runInContext(registerControllers func(*testenv.Environment), run func() error, crdPath string) error {\n\tvar err error\n\tutilruntime.Must(sourcev1.AddToScheme(scheme.Scheme))\n\tutilruntime.Must(kustomizev1.AddToScheme(scheme.Scheme))\n",
                    "rendered": {
                      "text": "\treturn defaultBinVersion\n}\n\nfunc runInContext(registerControllers func(*testenv.Environment), run func() error, crdPath string) error {\n\tvar err error\n\tutilruntime.Must(sourcev1.AddToScheme(scheme.Scheme))\n\tutilruntime.Must(kustomizev1.AddToScheme(scheme.Scheme))\n",
                      "markdown": "`\treturn defaultBinVersion\n}\n\nfunc runInContext(registerControllers func(*testenv.Environment), run func() error, crdPath string) error {\n\tvar err error\n\tutilruntime.Must(sourcev1.AddToScheme(scheme.Scheme))\n\tutilruntime.Must(kustomizev1.AddToScheme(scheme.Scheme))\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_fuzzer_test.go"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 52,
                  "endLine": 129,
                  "endColumn": 76,
                  "snippet": {
                    "text": "\t\t\t\tControllerName: controllerName,\n\t\t\t\tClient:         testEnv,\n\t\t\t}\n\t\t\tif err := (reconciler).SetupWithManager(ctx, testEnv, KustomizationReconcilerOptions{}); err != nil {\n\t\t\t\tpanic(fmt.Sprintf(\"Failed to start GitRepositoryReconciler: %v\", err))\n\t\t\t}\n\t\t}, func() error {\n",
                    "rendered": {
                      "text": "\t\t\t\tControllerName: controllerName,\n\t\t\t\tClient:         testEnv,\n\t\t\t}\n\t\t\tif err := (reconciler).SetupWithManager(ctx, testEnv, KustomizationReconcilerOptions{}); err != nil {\n\t\t\t\tpanic(fmt.Sprintf(\"Failed to start GitRepositoryReconciler: %v\", err))\n\t\t\t}\n\t\t}, func() error {\n",
                      "markdown": "`\t\t\t\tControllerName: controllerName,\n\t\t\t\tClient:         testEnv,\n\t\t\t}\n\t\t\tif err := (reconciler).SetupWithManager(ctx, testEnv, KustomizationReconcilerOptions{}); err != nil {\n\t\t\t\tpanic(fmt.Sprintf(\"Failed to start GitRepositoryReconciler: %v\", err))\n\t\t\t}\n\t\t}, func() error {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/suite_test.go"
                },
                "region": {
                  "startLine": 185,
                  "startColumn": 51,
                  "endLine": 185,
                  "endColumn": 75,
                  "snippet": {
                    "text": "\t\t\tConcurrentSSA:           4,\n\t\t\tDisallowedFieldManagers: []string{overrideManagerName},\n\t\t}\n\t\tif err := (reconciler).SetupWithManager(ctx, testEnv, KustomizationReconcilerOptions{\n\t\t\tDependencyRequeueInterval: 2 * time.Second,\n\t\t}); err != nil {\n\t\t\tpanic(fmt.Sprintf(\"Failed to start KustomizationReconciler: %v\", err))\n",
                    "rendered": {
                      "text": "\t\t\tConcurrentSSA:           4,\n\t\t\tDisallowedFieldManagers: []string{overrideManagerName},\n\t\t}\n\t\tif err := (reconciler).SetupWithManager(ctx, testEnv, KustomizationReconcilerOptions{\n\t\t\tDependencyRequeueInterval: 2 * time.Second,\n\t\t}); err != nil {\n\t\t\tpanic(fmt.Sprintf(\"Failed to start KustomizationReconciler: %v\", err))\n",
                      "markdown": "`\t\t\tConcurrentSSA:           4,\n\t\t\tDisallowedFieldManagers: []string{overrideManagerName},\n\t\t}\n\t\tif err := (reconciler).SetupWithManager(ctx, testEnv, KustomizationReconcilerOptions{\n\t\t\tDependencyRequeueInterval: 2 * time.Second,\n\t\t}); err != nil {\n\t\t\tpanic(fmt.Sprintf(\"Failed to start KustomizationReconciler: %v\", err))\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/suite_test.go"
                },
                "region": {
                  "startLine": 180,
                  "startColumn": 32,
                  "endLine": 180,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\t\t\tControllerName:          controllerName,\n\t\t\tClient:                  testEnv,\n\t\t\tAPIReader:               testEnv,\n\t\t\tEventRecorder:           testEnv.GetEventRecorderFor(controllerName),\n\t\t\tMetrics:                 testMetricsH,\n\t\t\tConcurrentSSA:           4,\n\t\t\tDisallowedFieldManagers: []string{overrideManagerName},\n",
                    "rendered": {
                      "text": "\t\t\tControllerName:          controllerName,\n\t\t\tClient:                  testEnv,\n\t\t\tAPIReader:               testEnv,\n\t\t\tEventRecorder:           testEnv.GetEventRecorderFor(controllerName),\n\t\t\tMetrics:                 testMetricsH,\n\t\t\tConcurrentSSA:           4,\n\t\t\tDisallowedFieldManagers: []string{overrideManagerName},\n",
                      "markdown": "`\t\t\tControllerName:          controllerName,\n\t\t\tClient:                  testEnv,\n\t\t\tAPIReader:               testEnv,\n\t\t\tEventRecorder:           testEnv.GetEventRecorderFor(controllerName),\n\t\t\tMetrics:                 testMetricsH,\n\t\t\tConcurrentSSA:           4,\n\t\t\tDisallowedFieldManagers: []string{overrideManagerName},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/suite_test.go"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 6,
                  "endLine": 88,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n\ttestEnv = testenv.New(\n\t\ttestenv.WithCRDPath(filepath.Join(\"..\", \"..\", \"config\", \"crd\", \"bases\")),\n\t\ttestenv.WithMaxConcurrentReconciles(4),\n\t)\n\n\ttestServer, err = testserver.NewTempArtifactServer()\n",
                    "rendered": {
                      "text": "\n\ttestEnv = testenv.New(\n\t\ttestenv.WithCRDPath(filepath.Join(\"..\", \"..\", \"config\", \"crd\", \"bases\")),\n\t\ttestenv.WithMaxConcurrentReconciles(4),\n\t)\n\n\ttestServer, err = testserver.NewTempArtifactServer()\n",
                      "markdown": "`\n\ttestEnv = testenv.New(\n\t\ttestenv.WithCRDPath(filepath.Join(\"..\", \"..\", \"config\", \"crd\", \"bases\")),\n\t\ttestenv.WithMaxConcurrentReconciles(4),\n\t)\n\n\ttestServer, err = testserver.NewTempArtifactServer()\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/suite_test.go"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 48,
                  "endLine": 76,
                  "endColumn": 74,
                  "snippet": {
                    "text": "\tdebugMode              = os.Getenv(\"DEBUG_TEST\") != \"\"\n)\n\nfunc runInContext(registerControllers func(*testenv.Environment), run func() int) (code int) {\n\tvar err error\n\tutilruntime.Must(kustomizev1.AddToScheme(scheme.Scheme))\n\tutilruntime.Must(sourcev1.AddToScheme(scheme.Scheme))\n",
                    "rendered": {
                      "text": "\tdebugMode              = os.Getenv(\"DEBUG_TEST\") != \"\"\n)\n\nfunc runInContext(registerControllers func(*testenv.Environment), run func() int) (code int) {\n\tvar err error\n\tutilruntime.Must(kustomizev1.AddToScheme(scheme.Scheme))\n\tutilruntime.Must(sourcev1.AddToScheme(scheme.Scheme))\n",
                      "markdown": "`\tdebugMode              = os.Getenv(\"DEBUG_TEST\") != \"\"\n)\n\nfunc runInContext(registerControllers func(*testenv.Environment), run func() int) (code int) {\n\tvar err error\n\tutilruntime.Must(kustomizev1.AddToScheme(scheme.Scheme))\n\tutilruntime.Must(sourcev1.AddToScheme(scheme.Scheme))\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/suite_test.go"
                },
                "region": {
                  "startLine": 56,
                  "endLine": 56,
                  "endColumn": 9,
                  "snippet": {
                    "text": ")\n\nconst (\n\ttimeout                = time.Second * 30\n\tinterval               = time.Second * 1\n\treconciliationInterval = time.Second * 5\n\tvaultVersion           = \"1.13.2\"\n",
                    "rendered": {
                      "text": ")\n\nconst (\n\ttimeout                = time.Second * 30\n\tinterval               = time.Second * 1\n\treconciliationInterval = time.Second * 5\n\tvaultVersion           = \"1.13.2\"\n",
                      "markdown": "`)\n\nconst (\n\ttimeout                = time.Second * 30\n\tinterval               = time.Second * 1\n\treconciliationInterval = time.Second * 5\n\tvaultVersion           = \"1.13.2\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2253,
                  "startColumn": 49,
                  "endLine": 2254,
                  "snippet": {
                    "text": "[automatically generate](https://github.com/fluxcd/kustomize-controller/blob/v0.0.1-alpha.3/docs/spec/v1alpha1/kustomization.md#generate-kustomizationyaml)\nthe `kustomization.yaml` for repositories that contain plain Kubernetes manifests.\n\nThe controller design and motivation can be found at\n[docs/spec](https://github.com/fluxcd/kustomize-controller/tree/v0.0.1-alpha.3/docs/spec).\n\n## 0.0.1-alpha.2\n\n",
                    "rendered": {
                      "text": "[automatically generate](https://github.com/fluxcd/kustomize-controller/blob/v0.0.1-alpha.3/docs/spec/v1alpha1/kustomization.md#generate-kustomizationyaml)\nthe `kustomization.yaml` for repositories that contain plain Kubernetes manifests.\n\nThe controller design and motivation can be found at\n[docs/spec](https://github.com/fluxcd/kustomize-controller/tree/v0.0.1-alpha.3/docs/spec).\n\n## 0.0.1-alpha.2\n\n",
                      "markdown": "`[automatically generate](https://github.com/fluxcd/kustomize-controller/blob/v0.0.1-alpha.3/docs/spec/v1alpha1/kustomization.md#generate-kustomizationyaml)\nthe `kustomization.yaml` for repositories that contain plain Kubernetes manifests.\n\nThe controller design and motivation can be found at\n[docs/spec](https://github.com/fluxcd/kustomize-controller/tree/v0.0.1-alpha.3/docs/spec).\n\n## 0.0.1-alpha.2\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2099,
                  "startColumn": 45,
                  "endLine": 2099,
                  "endColumn": 49,
                  "snippet": {
                    "text": "**Release date:** 2020-09-12\n\nThis prerelease comes with the option to watch for resources\nin the runtime namespace of the controller or at cluster level.\n\n## 0.0.10\n\n",
                    "rendered": {
                      "text": "**Release date:** 2020-09-12\n\nThis prerelease comes with the option to watch for resources\nin the runtime namespace of the controller or at cluster level.\n\n## 0.0.10\n\n",
                      "markdown": "`**Release date:** 2020-09-12\n\nThis prerelease comes with the option to watch for resources\nin the runtime namespace of the controller or at cluster level.\n\n## 0.0.10\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1999,
                  "startColumn": 1,
                  "endLine": 1999,
                  "endColumn": 9,
                  "snippet": {
                    "text": "The Kubernetes packages have been updated to v1.19.\n\nImprovements:\n* Update k8s to 1.19 + kustomize 0.6.4\n    [#161](https://github.com/fluxcd/kustomize-controller/pull/161)\n* Add openssh client to support git+ssh Kustomize resources\n    [#159](https://github.com/fluxcd/kustomize-controller/pull/159)\n",
                    "rendered": {
                      "text": "The Kubernetes packages have been updated to v1.19.\n\nImprovements:\n* Update k8s to 1.19 + kustomize 0.6.4\n    [#161](https://github.com/fluxcd/kustomize-controller/pull/161)\n* Add openssh client to support git+ssh Kustomize resources\n    [#159](https://github.com/fluxcd/kustomize-controller/pull/159)\n",
                      "markdown": "`The Kubernetes packages have been updated to v1.19.\n\nImprovements:\n* Update k8s to 1.19 + kustomize 0.6.4\n    [#161](https://github.com/fluxcd/kustomize-controller/pull/161)\n* Add openssh client to support git+ssh Kustomize resources\n    [#159](https://github.com/fluxcd/kustomize-controller/pull/159)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1986,
                  "startColumn": 1,
                  "endLine": 1986,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Improvements:\n* Patch status sub-resource\n    [#171](https://github.com/fluxcd/kustomize-controller/pull/171)\n* Update kustomize/api to v0.6.5\n    [#170](https://github.com/fluxcd/kustomize-controller/pull/170)\n* Allow disabling validation\n    [#168](https://github.com/fluxcd/kustomize-controller/pull/168)\n",
                    "rendered": {
                      "text": "Improvements:\n* Patch status sub-resource\n    [#171](https://github.com/fluxcd/kustomize-controller/pull/171)\n* Update kustomize/api to v0.6.5\n    [#170](https://github.com/fluxcd/kustomize-controller/pull/170)\n* Allow disabling validation\n    [#168](https://github.com/fluxcd/kustomize-controller/pull/168)\n",
                      "markdown": "`Improvements:\n* Patch status sub-resource\n    [#171](https://github.com/fluxcd/kustomize-controller/pull/171)\n* Update kustomize/api to v0.6.5\n    [#170](https://github.com/fluxcd/kustomize-controller/pull/170)\n* Allow disabling validation\n    [#168](https://github.com/fluxcd/kustomize-controller/pull/168)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1931,
                  "startColumn": 1,
                  "endLine": 1931,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Improvements:\n* Implement container image setters\n    [#194](https://github.com/fluxcd/kustomize-controller/pull/194)\n* Update kustomize/api to v0.7.0 \n    [#198](https://github.com/fluxcd/kustomize-controller/pull/198)\n\n## 0.4.0\n",
                    "rendered": {
                      "text": "Improvements:\n* Implement container image setters\n    [#194](https://github.com/fluxcd/kustomize-controller/pull/194)\n* Update kustomize/api to v0.7.0 \n    [#198](https://github.com/fluxcd/kustomize-controller/pull/198)\n\n## 0.4.0\n",
                      "markdown": "`Improvements:\n* Implement container image setters\n    [#194](https://github.com/fluxcd/kustomize-controller/pull/194)\n* Update kustomize/api to v0.7.0 \n    [#198](https://github.com/fluxcd/kustomize-controller/pull/198)\n\n## 0.4.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1868,
                  "startColumn": 1,
                  "endLine": 1868,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Improvements:\n* Update kubectl to v1.20.1\n  [#231](https://github.com/fluxcd/kustomize-controller/pull/231)\n* Update kustomize/api to v0.7.1\n  [#229](https://github.com/fluxcd/kustomize-controller/pull/229)\n* Run GC and health checks using service account impersonation\n  [#221](https://github.com/fluxcd/kustomize-controller/pull/221)\n",
                    "rendered": {
                      "text": "Improvements:\n* Update kubectl to v1.20.1\n  [#231](https://github.com/fluxcd/kustomize-controller/pull/231)\n* Update kustomize/api to v0.7.1\n  [#229](https://github.com/fluxcd/kustomize-controller/pull/229)\n* Run GC and health checks using service account impersonation\n  [#221](https://github.com/fluxcd/kustomize-controller/pull/221)\n",
                      "markdown": "`Improvements:\n* Update kubectl to v1.20.1\n  [#231](https://github.com/fluxcd/kustomize-controller/pull/231)\n* Update kustomize/api to v0.7.1\n  [#229](https://github.com/fluxcd/kustomize-controller/pull/229)\n* Run GC and health checks using service account impersonation\n  [#221](https://github.com/fluxcd/kustomize-controller/pull/221)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1866,
                  "startColumn": 1,
                  "endLine": 1866,
                  "endColumn": 9,
                  "snippet": {
                    "text": "AMD64 image.\n\nImprovements:\n* Update kubectl to v1.20.1\n  [#231](https://github.com/fluxcd/kustomize-controller/pull/231)\n* Update kustomize/api to v0.7.1\n  [#229](https://github.com/fluxcd/kustomize-controller/pull/229)\n",
                    "rendered": {
                      "text": "AMD64 image.\n\nImprovements:\n* Update kubectl to v1.20.1\n  [#231](https://github.com/fluxcd/kustomize-controller/pull/231)\n* Update kustomize/api to v0.7.1\n  [#229](https://github.com/fluxcd/kustomize-controller/pull/229)\n",
                      "markdown": "`AMD64 image.\n\nImprovements:\n* Update kubectl to v1.20.1\n  [#231](https://github.com/fluxcd/kustomize-controller/pull/231)\n* Update kustomize/api to v0.7.1\n  [#229](https://github.com/fluxcd/kustomize-controller/pull/229)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1847,
                  "startColumn": 1,
                  "endLine": 1847,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Improvements:\n* Add support for QPS and burst configurations\n  [#233](https://github.com/fluxcd/kustomize-controller/pull/233)\n* Update source-controller to v0.6.1\n  [#234](https://github.com/fluxcd/kustomize-controller/pull/234)\n\nFixes:\n",
                    "rendered": {
                      "text": "Improvements:\n* Add support for QPS and burst configurations\n  [#233](https://github.com/fluxcd/kustomize-controller/pull/233)\n* Update source-controller to v0.6.1\n  [#234](https://github.com/fluxcd/kustomize-controller/pull/234)\n\nFixes:\n",
                      "markdown": "`Improvements:\n* Add support for QPS and burst configurations\n  [#233](https://github.com/fluxcd/kustomize-controller/pull/233)\n* Update source-controller to v0.6.1\n  [#234](https://github.com/fluxcd/kustomize-controller/pull/234)\n\nFixes:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1827,
                  "startColumn": 5,
                  "endLine": 1827,
                  "endColumn": 9,
                  "snippet": {
                    "text": "**Release date:** 2021-01-15\n\nThis prerelease adds support for `kustomization.yml` and `Kustomization`\nfiles at the root of the configured path.\n\nImprovements:\n* Look for all accepted Kustomization filenames\n",
                    "rendered": {
                      "text": "**Release date:** 2021-01-15\n\nThis prerelease adds support for `kustomization.yml` and `Kustomization`\nfiles at the root of the configured path.\n\nImprovements:\n* Look for all accepted Kustomization filenames\n",
                      "markdown": "`**Release date:** 2021-01-15\n\nThis prerelease adds support for `kustomization.yml` and `Kustomization`\nfiles at the root of the configured path.\n\nImprovements:\n* Look for all accepted Kustomization filenames\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1819,
                  "startColumn": 1,
                  "endLine": 1819,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Improvements:\n* Update kustomize/api to v0.7.2 and disable kyaml\n  [#241](https://github.com/fluxcd/kustomize-controller/pull/241)\n* Update Kubernetes packages to v1.20.2\n  [#240](https://github.com/fluxcd/kustomize-controller/pull/240)\n\n## 0.6.2\n",
                    "rendered": {
                      "text": "Improvements:\n* Update kustomize/api to v0.7.2 and disable kyaml\n  [#241](https://github.com/fluxcd/kustomize-controller/pull/241)\n* Update Kubernetes packages to v1.20.2\n  [#240](https://github.com/fluxcd/kustomize-controller/pull/240)\n\n## 0.6.2\n",
                      "markdown": "`Improvements:\n* Update kustomize/api to v0.7.2 and disable kyaml\n  [#241](https://github.com/fluxcd/kustomize-controller/pull/241)\n* Update Kubernetes packages to v1.20.2\n  [#240](https://github.com/fluxcd/kustomize-controller/pull/240)\n\n## 0.6.2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1817,
                  "startColumn": 1,
                  "endLine": 1817,
                  "endColumn": 9,
                  "snippet": {
                    "text": "The Kubernetes packages were updated to v1.20.2 and kustomize/api to v0.7.2.\n\nImprovements:\n* Update kustomize/api to v0.7.2 and disable kyaml\n  [#241](https://github.com/fluxcd/kustomize-controller/pull/241)\n* Update Kubernetes packages to v1.20.2\n  [#240](https://github.com/fluxcd/kustomize-controller/pull/240)\n",
                    "rendered": {
                      "text": "The Kubernetes packages were updated to v1.20.2 and kustomize/api to v0.7.2.\n\nImprovements:\n* Update kustomize/api to v0.7.2 and disable kyaml\n  [#241](https://github.com/fluxcd/kustomize-controller/pull/241)\n* Update Kubernetes packages to v1.20.2\n  [#240](https://github.com/fluxcd/kustomize-controller/pull/240)\n",
                      "markdown": "`The Kubernetes packages were updated to v1.20.2 and kustomize/api to v0.7.2.\n\nImprovements:\n* Update kustomize/api to v0.7.2 and disable kyaml\n  [#241](https://github.com/fluxcd/kustomize-controller/pull/241)\n* Update Kubernetes packages to v1.20.2\n  [#240](https://github.com/fluxcd/kustomize-controller/pull/240)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1805,
                  "startColumn": 1,
                  "endLine": 1805,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Improvements:\n* Allow failed reconciliations to be scheduled at a different interval\n  [#250](https://github.com/fluxcd/kustomize-controller/pull/250)\n* Update fluxcd/pkg/runtime to v0.8.0\n  [#247](https://github.com/fluxcd/kustomize-controller/pull/247)\n\n\n",
                    "rendered": {
                      "text": "Improvements:\n* Allow failed reconciliations to be scheduled at a different interval\n  [#250](https://github.com/fluxcd/kustomize-controller/pull/250)\n* Update fluxcd/pkg/runtime to v0.8.0\n  [#247](https://github.com/fluxcd/kustomize-controller/pull/247)\n\n\n",
                      "markdown": "`Improvements:\n* Allow failed reconciliations to be scheduled at a different interval\n  [#250](https://github.com/fluxcd/kustomize-controller/pull/250)\n* Update fluxcd/pkg/runtime to v0.8.0\n  [#247](https://github.com/fluxcd/kustomize-controller/pull/247)\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1803,
                  "startColumn": 46,
                  "endLine": 1803,
                  "endColumn": 50,
                  "snippet": {
                    "text": "required by controller logic.\n\nImprovements:\n* Allow failed reconciliations to be scheduled at a different interval\n  [#250](https://github.com/fluxcd/kustomize-controller/pull/250)\n* Update fluxcd/pkg/runtime to v0.8.0\n  [#247](https://github.com/fluxcd/kustomize-controller/pull/247)\n",
                    "rendered": {
                      "text": "required by controller logic.\n\nImprovements:\n* Allow failed reconciliations to be scheduled at a different interval\n  [#250](https://github.com/fluxcd/kustomize-controller/pull/250)\n* Update fluxcd/pkg/runtime to v0.8.0\n  [#247](https://github.com/fluxcd/kustomize-controller/pull/247)\n",
                      "markdown": "`required by controller logic.\n\nImprovements:\n* Allow failed reconciliations to be scheduled at a different interval\n  [#250](https://github.com/fluxcd/kustomize-controller/pull/250)\n* Update fluxcd/pkg/runtime to v0.8.0\n  [#247](https://github.com/fluxcd/kustomize-controller/pull/247)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1795,
                  "startColumn": 31,
                  "endLine": 1795,
                  "endColumn": 35,
                  "snippet": {
                    "text": "This is the seventh MINOR prerelease.\n\nAn optional field was added `spec.retryInterval` that allows users to\nrequeue a failed reconciliation at a different interval than `spec.Interval`.\n\nThe `LocalObjectReference` from the Kubernetes core has been replaced\nwith our own, making `Name` a required field. The impact of this should\n",
                    "rendered": {
                      "text": "This is the seventh MINOR prerelease.\n\nAn optional field was added `spec.retryInterval` that allows users to\nrequeue a failed reconciliation at a different interval than `spec.Interval`.\n\nThe `LocalObjectReference` from the Kubernetes core has been replaced\nwith our own, making `Name` a required field. The impact of this should\n",
                      "markdown": "`This is the seventh MINOR prerelease.\n\nAn optional field was added `spec.retryInterval` that allows users to\nrequeue a failed reconciliation at a different interval than `spec.Interval`.\n\nThe `LocalObjectReference` from the Kubernetes core has been replaced\nwith our own, making `Name` a required field. The impact of this should\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1781,
                  "startColumn": 75,
                  "endLine": 1782,
                  "endColumn": 3,
                  "snippet": {
                    "text": "**Release date:** 2021-01-25\n\nThis prerelease fixes a regression bug introduced in `v0.7.0` that caused\nfailed reconciliations to be immediately retried instead of being scheduled\nat the specified interval.\n\nFixes:\n* Fix reconciliation retry scheduler\n",
                    "rendered": {
                      "text": "**Release date:** 2021-01-25\n\nThis prerelease fixes a regression bug introduced in `v0.7.0` that caused\nfailed reconciliations to be immediately retried instead of being scheduled\nat the specified interval.\n\nFixes:\n* Fix reconciliation retry scheduler\n",
                      "markdown": "`**Release date:** 2021-01-25\n\nThis prerelease fixes a regression bug introduced in `v0.7.0` that caused\nfailed reconciliations to be immediately retried instead of being scheduled\nat the specified interval.\n\nFixes:\n* Fix reconciliation retry scheduler\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1739,
                  "startColumn": 1,
                  "endLine": 1739,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Improvements:\n* Enable pprof endpoints on metrics server\n  [#266](https://github.com/fluxcd/kustomize-controller/pull/266)\n* Update `kustomize/api` to v0.7.4\n  [#269](https://github.com/fluxcd/kustomize-controller/pull/269)\n\n## 0.7.4\n",
                    "rendered": {
                      "text": "Improvements:\n* Enable pprof endpoints on metrics server\n  [#266](https://github.com/fluxcd/kustomize-controller/pull/266)\n* Update `kustomize/api` to v0.7.4\n  [#269](https://github.com/fluxcd/kustomize-controller/pull/269)\n\n## 0.7.4\n",
                      "markdown": "`Improvements:\n* Enable pprof endpoints on metrics server\n  [#266](https://github.com/fluxcd/kustomize-controller/pull/266)\n* Update `kustomize/api` to v0.7.4\n  [#269](https://github.com/fluxcd/kustomize-controller/pull/269)\n\n## 0.7.4\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1680,
                  "startColumn": 1,
                  "endLine": 1680,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Improvements:\n* Extracting validation error from apply dry run output\n  [#280](https://github.com/fluxcd/kustomize-controller/pull/280)\n* Update kubectl to v1.20.4\n  [#283](https://github.com/fluxcd/kustomize-controller/pull/283)\n\nFixes:\n",
                    "rendered": {
                      "text": "Improvements:\n* Extracting validation error from apply dry run output\n  [#280](https://github.com/fluxcd/kustomize-controller/pull/280)\n* Update kubectl to v1.20.4\n  [#283](https://github.com/fluxcd/kustomize-controller/pull/283)\n\nFixes:\n",
                      "markdown": "`Improvements:\n* Extracting validation error from apply dry run output\n  [#280](https://github.com/fluxcd/kustomize-controller/pull/280)\n* Update kubectl to v1.20.4\n  [#283](https://github.com/fluxcd/kustomize-controller/pull/283)\n\nFixes:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1661,
                  "startColumn": 1,
                  "endLine": 1661,
                  "endColumn": 9,
                  "snippet": {
                    "text": "that was discovered in the `flux` CLI.\n\nImprovements:\n* Update sigs.k8s.io/cli-utils to v0.22.2\n  [#287](https://github.com/fluxcd/kustomize-controller/pull/287)\n\n## 0.9.0\n",
                    "rendered": {
                      "text": "that was discovered in the `flux` CLI.\n\nImprovements:\n* Update sigs.k8s.io/cli-utils to v0.22.2\n  [#287](https://github.com/fluxcd/kustomize-controller/pull/287)\n\n## 0.9.0\n",
                      "markdown": "`that was discovered in the `flux` CLI.\n\nImprovements:\n* Update sigs.k8s.io/cli-utils to v0.22.2\n  [#287](https://github.com/fluxcd/kustomize-controller/pull/287)\n\n## 0.9.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1656,
                  "startColumn": 29,
                  "endLine": 1656,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\n**Release date:** 2021-02-25\n\nThis prerelease comes with an update to the `sigs.k8s.io/cli-utils`\ndependency, to guard against a potential bug with health assessments\nthat was discovered in the `flux` CLI.\n\n",
                    "rendered": {
                      "text": "\n**Release date:** 2021-02-25\n\nThis prerelease comes with an update to the `sigs.k8s.io/cli-utils`\ndependency, to guard against a potential bug with health assessments\nthat was discovered in the `flux` CLI.\n\n",
                      "markdown": "`\n**Release date:** 2021-02-25\n\nThis prerelease comes with an update to the `sigs.k8s.io/cli-utils`\ndependency, to guard against a potential bug with health assessments\nthat was discovered in the `flux` CLI.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1634,
                  "startColumn": 1,
                  "endLine": 1634,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Improvements:\n* Expose suspended status as Prometheus metric\n  [#299](https://github.com/fluxcd/kustomize-controller/pull/299)\n* Update dependencies\n  [#298](https://github.com/fluxcd/kustomize-controller/pull/298)\n\n## 0.9.2\n",
                    "rendered": {
                      "text": "Improvements:\n* Expose suspended status as Prometheus metric\n  [#299](https://github.com/fluxcd/kustomize-controller/pull/299)\n* Update dependencies\n  [#298](https://github.com/fluxcd/kustomize-controller/pull/298)\n\n## 0.9.2\n",
                      "markdown": "`Improvements:\n* Expose suspended status as Prometheus metric\n  [#299](https://github.com/fluxcd/kustomize-controller/pull/299)\n* Update dependencies\n  [#298](https://github.com/fluxcd/kustomize-controller/pull/298)\n\n## 0.9.2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1619,
                  "startColumn": 1,
                  "endLine": 1619,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Improvements:\n* Set leader election deadline to 30s\n  [#303](https://github.com/fluxcd/kustomize-controller/pull/303)\n* Update SOPS to v3.7.0\n  [#304](https://github.com/fluxcd/kustomize-controller/pull/304)\n\n## 0.9.3\n",
                    "rendered": {
                      "text": "Improvements:\n* Set leader election deadline to 30s\n  [#303](https://github.com/fluxcd/kustomize-controller/pull/303)\n* Update SOPS to v3.7.0\n  [#304](https://github.com/fluxcd/kustomize-controller/pull/304)\n\n## 0.9.3\n",
                      "markdown": "`Improvements:\n* Set leader election deadline to 30s\n  [#303](https://github.com/fluxcd/kustomize-controller/pull/303)\n* Update SOPS to v3.7.0\n  [#304](https://github.com/fluxcd/kustomize-controller/pull/304)\n\n## 0.9.3\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1540,
                  "startColumn": 1,
                  "endLine": 1540,
                  "endColumn": 9,
                  "snippet": {
                    "text": "This prerelease comes with a fix to the reconciliation timeout handling.\n\nImprovements:\n* Update Go to v1.16\n  [#350](https://github.com/fluxcd/kustomize-controller/pull/350)\n* Publish on-demand release candidates container images\n  [#342](https://github.com/fluxcd/kustomize-controller/pull/342)\n",
                    "rendered": {
                      "text": "This prerelease comes with a fix to the reconciliation timeout handling.\n\nImprovements:\n* Update Go to v1.16\n  [#350](https://github.com/fluxcd/kustomize-controller/pull/350)\n* Publish on-demand release candidates container images\n  [#342](https://github.com/fluxcd/kustomize-controller/pull/342)\n",
                      "markdown": "`This prerelease comes with a fix to the reconciliation timeout handling.\n\nImprovements:\n* Update Go to v1.16\n  [#350](https://github.com/fluxcd/kustomize-controller/pull/350)\n* Publish on-demand release candidates container images\n  [#342](https://github.com/fluxcd/kustomize-controller/pull/342)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1480,
                  "startColumn": 6,
                  "endLine": 1480,
                  "endColumn": 14,
                  "snippet": {
                    "text": "Improvements:\n* Update kubectl to v1.21.1\n  [#381](https://github.com/fluxcd/kustomize-controller/pull/381)\n* e2e: Update Kubernetes to v1.21.1\n  [#380](https://github.com/fluxcd/kustomize-controller/pull/380)\n* Improve test coverage of the `dependsOn` feature\n  [#380](https://github.com/fluxcd/kustomize-controller/pull/380)\n",
                    "rendered": {
                      "text": "Improvements:\n* Update kubectl to v1.21.1\n  [#381](https://github.com/fluxcd/kustomize-controller/pull/381)\n* e2e: Update Kubernetes to v1.21.1\n  [#380](https://github.com/fluxcd/kustomize-controller/pull/380)\n* Improve test coverage of the `dependsOn` feature\n  [#380](https://github.com/fluxcd/kustomize-controller/pull/380)\n",
                      "markdown": "`Improvements:\n* Update kubectl to v1.21.1\n  [#381](https://github.com/fluxcd/kustomize-controller/pull/381)\n* e2e: Update Kubernetes to v1.21.1\n  [#380](https://github.com/fluxcd/kustomize-controller/pull/380)\n* Improve test coverage of the `dependsOn` feature\n  [#380](https://github.com/fluxcd/kustomize-controller/pull/380)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1478,
                  "startColumn": 1,
                  "endLine": 1478,
                  "endColumn": 9,
                  "snippet": {
                    "text": "This prerelease comes with kubectl v1.21.1.\n\nImprovements:\n* Update kubectl to v1.21.1\n  [#381](https://github.com/fluxcd/kustomize-controller/pull/381)\n* e2e: Update Kubernetes to v1.21.1\n  [#380](https://github.com/fluxcd/kustomize-controller/pull/380)\n",
                    "rendered": {
                      "text": "This prerelease comes with kubectl v1.21.1.\n\nImprovements:\n* Update kubectl to v1.21.1\n  [#381](https://github.com/fluxcd/kustomize-controller/pull/381)\n* e2e: Update Kubernetes to v1.21.1\n  [#380](https://github.com/fluxcd/kustomize-controller/pull/380)\n",
                      "markdown": "`This prerelease comes with kubectl v1.21.1.\n\nImprovements:\n* Update kubectl to v1.21.1\n  [#381](https://github.com/fluxcd/kustomize-controller/pull/381)\n* e2e: Update Kubernetes to v1.21.1\n  [#380](https://github.com/fluxcd/kustomize-controller/pull/380)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1464,
                  "startColumn": 1,
                  "endLine": 1464,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#374](https://github.com/fluxcd/kustomize-controller/pull/374)\n* Update Alpine v3.14 and kubectl v1.21.2\n  [#385](https://github.com/fluxcd/kustomize-controller/pull/385)\n* Update controller to kustomize v4.2.0\n  [#383](https://github.com/fluxcd/kustomize-controller/pull/383)\n\nFixes:\n",
                    "rendered": {
                      "text": "  [#374](https://github.com/fluxcd/kustomize-controller/pull/374)\n* Update Alpine v3.14 and kubectl v1.21.2\n  [#385](https://github.com/fluxcd/kustomize-controller/pull/385)\n* Update controller to kustomize v4.2.0\n  [#383](https://github.com/fluxcd/kustomize-controller/pull/383)\n\nFixes:\n",
                      "markdown": "`  [#374](https://github.com/fluxcd/kustomize-controller/pull/374)\n* Update Alpine v3.14 and kubectl v1.21.2\n  [#385](https://github.com/fluxcd/kustomize-controller/pull/385)\n* Update controller to kustomize v4.2.0\n  [#383](https://github.com/fluxcd/kustomize-controller/pull/383)\n\nFixes:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1462,
                  "startColumn": 1,
                  "endLine": 1462,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Improvements:\n* Make it easier to reason about health check failures\n  [#374](https://github.com/fluxcd/kustomize-controller/pull/374)\n* Update Alpine v3.14 and kubectl v1.21.2\n  [#385](https://github.com/fluxcd/kustomize-controller/pull/385)\n* Update controller to kustomize v4.2.0\n  [#383](https://github.com/fluxcd/kustomize-controller/pull/383)\n",
                    "rendered": {
                      "text": "Improvements:\n* Make it easier to reason about health check failures\n  [#374](https://github.com/fluxcd/kustomize-controller/pull/374)\n* Update Alpine v3.14 and kubectl v1.21.2\n  [#385](https://github.com/fluxcd/kustomize-controller/pull/385)\n* Update controller to kustomize v4.2.0\n  [#383](https://github.com/fluxcd/kustomize-controller/pull/383)\n",
                      "markdown": "`Improvements:\n* Make it easier to reason about health check failures\n  [#374](https://github.com/fluxcd/kustomize-controller/pull/374)\n* Update Alpine v3.14 and kubectl v1.21.2\n  [#385](https://github.com/fluxcd/kustomize-controller/pull/385)\n* Update controller to kustomize v4.2.0\n  [#383](https://github.com/fluxcd/kustomize-controller/pull/383)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1443,
                  "startColumn": 1,
                  "endLine": 1443,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#397](https://github.com/fluxcd/kustomize-controller/pull/397)\n* Var substitution opt-in docs\n  [#389](https://github.com/fluxcd/kustomize-controller/pull/389) \n* Update dependencies\n  [#401](https://github.com/fluxcd/kustomize-controller/pull/401)\n\nFixes:\n",
                    "rendered": {
                      "text": "  [#397](https://github.com/fluxcd/kustomize-controller/pull/397)\n* Var substitution opt-in docs\n  [#389](https://github.com/fluxcd/kustomize-controller/pull/389) \n* Update dependencies\n  [#401](https://github.com/fluxcd/kustomize-controller/pull/401)\n\nFixes:\n",
                      "markdown": "`  [#397](https://github.com/fluxcd/kustomize-controller/pull/397)\n* Var substitution opt-in docs\n  [#389](https://github.com/fluxcd/kustomize-controller/pull/389) \n* Update dependencies\n  [#401](https://github.com/fluxcd/kustomize-controller/pull/401)\n\nFixes:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1423,
                  "startColumn": 1,
                  "endLine": 1423,
                  "endColumn": 9,
                  "snippet": {
                    "text": "kustomize [v4.3.0](https://github.com/kubernetes-sigs/kustomize/releases/tag/kustomize%2Fv4.3.0).\n\nImprovements:\n* Update controller to kustomize v4.3.0\n  [#416](https://github.com/fluxcd/kustomize-controller/pull/416)\n* Skip garbage collection of objects with owner references\n  [#411](https://github.com/fluxcd/kustomize-controller/pull/411)\n",
                    "rendered": {
                      "text": "kustomize [v4.3.0](https://github.com/kubernetes-sigs/kustomize/releases/tag/kustomize%2Fv4.3.0).\n\nImprovements:\n* Update controller to kustomize v4.3.0\n  [#416](https://github.com/fluxcd/kustomize-controller/pull/416)\n* Skip garbage collection of objects with owner references\n  [#411](https://github.com/fluxcd/kustomize-controller/pull/411)\n",
                      "markdown": "`kustomize [v4.3.0](https://github.com/kubernetes-sigs/kustomize/releases/tag/kustomize%2Fv4.3.0).\n\nImprovements:\n* Update controller to kustomize v4.3.0\n  [#416](https://github.com/fluxcd/kustomize-controller/pull/416)\n* Skip garbage collection of objects with owner references\n  [#411](https://github.com/fluxcd/kustomize-controller/pull/411)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1394,
                  "startColumn": 27,
                  "endLine": 1394,
                  "endColumn": 35,
                  "snippet": {
                    "text": "- `.status.snapshot` replaced by `.status.inventory`\n\nUpdating the manifests in Git to `v1beta2` can be done at any time after the kustomize-controller upgrade.\nAll users are encouraged to update the manifests as the deprecated fields\nwill be removed when the next API version will be released.\n\n## 0.14.1\n",
                    "rendered": {
                      "text": "- `.status.snapshot` replaced by `.status.inventory`\n\nUpdating the manifests in Git to `v1beta2` can be done at any time after the kustomize-controller upgrade.\nAll users are encouraged to update the manifests as the deprecated fields\nwill be removed when the next API version will be released.\n\n## 0.14.1\n",
                      "markdown": "`- `.status.snapshot` replaced by `.status.inventory`\n\nUpdating the manifests in Git to `v1beta2` can be done at any time after the kustomize-controller upgrade.\nAll users are encouraged to update the manifests as the deprecated fields\nwill be removed when the next API version will be released.\n\n## 0.14.1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1393,
                  "startColumn": 54,
                  "endLine": 1393,
                  "endColumn": 58,
                  "snippet": {
                    "text": "- `.spec.wait` added (when enabled, will wait for all the reconciled resources to become ready)\n- `.status.snapshot` replaced by `.status.inventory`\n\nUpdating the manifests in Git to `v1beta2` can be done at any time after the kustomize-controller upgrade.\nAll users are encouraged to update the manifests as the deprecated fields\nwill be removed when the next API version will be released.\n\n",
                    "rendered": {
                      "text": "- `.spec.wait` added (when enabled, will wait for all the reconciled resources to become ready)\n- `.status.snapshot` replaced by `.status.inventory`\n\nUpdating the manifests in Git to `v1beta2` can be done at any time after the kustomize-controller upgrade.\nAll users are encouraged to update the manifests as the deprecated fields\nwill be removed when the next API version will be released.\n\n",
                      "markdown": "`- `.spec.wait` added (when enabled, will wait for all the reconciled resources to become ready)\n- `.status.snapshot` replaced by `.status.inventory`\n\nUpdating the manifests in Git to `v1beta2` can be done at any time after the kustomize-controller upgrade.\nAll users are encouraged to update the manifests as the deprecated fields\nwill be removed when the next API version will be released.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1245,
                  "startColumn": 1,
                  "endLine": 1245,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Improvements:\n* Verify artifacts integrity\n  [#489](https://github.com/fluxcd/kustomize-controller/pull/489)\n* Update controller to kustomize v4.4.1\n  [#488](https://github.com/fluxcd/kustomize-controller/pull/488)\n\n## 0.17.0\n",
                    "rendered": {
                      "text": "Improvements:\n* Verify artifacts integrity\n  [#489](https://github.com/fluxcd/kustomize-controller/pull/489)\n* Update controller to kustomize v4.4.1\n  [#488](https://github.com/fluxcd/kustomize-controller/pull/488)\n\n## 0.17.0\n",
                      "markdown": "`Improvements:\n* Verify artifacts integrity\n  [#489](https://github.com/fluxcd/kustomize-controller/pull/489)\n* Update controller to kustomize v4.4.1\n  [#488](https://github.com/fluxcd/kustomize-controller/pull/488)\n\n## 0.17.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1228,
                  "startColumn": 1,
                  "endLine": 1228,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#499](https://github.com/fluxcd/kustomize-controller/pull/499)\n* Replace deprecated dependencies\n  [#498](https://github.com/fluxcd/kustomize-controller/pull/498)\n* Update `opencontainers/{image-spec, runc}`\n  [#497](https://github.com/fluxcd/kustomize-controller/pull/497)\n\n## 0.18.0\n",
                    "rendered": {
                      "text": "  [#499](https://github.com/fluxcd/kustomize-controller/pull/499)\n* Replace deprecated dependencies\n  [#498](https://github.com/fluxcd/kustomize-controller/pull/498)\n* Update `opencontainers/{image-spec, runc}`\n  [#497](https://github.com/fluxcd/kustomize-controller/pull/497)\n\n## 0.18.0\n",
                      "markdown": "`  [#499](https://github.com/fluxcd/kustomize-controller/pull/499)\n* Replace deprecated dependencies\n  [#498](https://github.com/fluxcd/kustomize-controller/pull/498)\n* Update `opencontainers/{image-spec, runc}`\n  [#497](https://github.com/fluxcd/kustomize-controller/pull/497)\n\n## 0.18.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1224,
                  "startColumn": 1,
                  "endLine": 1224,
                  "endColumn": 9,
                  "snippet": {
                    "text": "`github.com/ProtonMail/go-crypto/openpgp`.\n\nImprovements:\n* Update `source-controller/api` to v0.19.0\n  [#499](https://github.com/fluxcd/kustomize-controller/pull/499)\n* Replace deprecated dependencies\n  [#498](https://github.com/fluxcd/kustomize-controller/pull/498)\n",
                    "rendered": {
                      "text": "`github.com/ProtonMail/go-crypto/openpgp`.\n\nImprovements:\n* Update `source-controller/api` to v0.19.0\n  [#499](https://github.com/fluxcd/kustomize-controller/pull/499)\n* Replace deprecated dependencies\n  [#498](https://github.com/fluxcd/kustomize-controller/pull/498)\n",
                      "markdown": "``github.com/ProtonMail/go-crypto/openpgp`.\n\nImprovements:\n* Update `source-controller/api` to v0.19.0\n  [#499](https://github.com/fluxcd/kustomize-controller/pull/499)\n* Replace deprecated dependencies\n  [#498](https://github.com/fluxcd/kustomize-controller/pull/498)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1206,
                  "startColumn": 1,
                  "endLine": 1206,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Improvements:\n* Update dependencies (fix CVE-2021-43784)\n  [#509](https://github.com/fluxcd/kustomize-controller/pull/509)\n* Update golang.org/x/text to v0.3.7 (fix CVE-2021-38561)\n  [#512](https://github.com/fluxcd/kustomize-controller/pull/512)\n* Add test for replacing variables in secrets\n  [#505](https://github.com/fluxcd/kustomize-controller/pull/505)\n",
                    "rendered": {
                      "text": "Improvements:\n* Update dependencies (fix CVE-2021-43784)\n  [#509](https://github.com/fluxcd/kustomize-controller/pull/509)\n* Update golang.org/x/text to v0.3.7 (fix CVE-2021-38561)\n  [#512](https://github.com/fluxcd/kustomize-controller/pull/512)\n* Add test for replacing variables in secrets\n  [#505](https://github.com/fluxcd/kustomize-controller/pull/505)\n",
                      "markdown": "`Improvements:\n* Update dependencies (fix CVE-2021-43784)\n  [#509](https://github.com/fluxcd/kustomize-controller/pull/509)\n* Update golang.org/x/text to v0.3.7 (fix CVE-2021-38561)\n  [#512](https://github.com/fluxcd/kustomize-controller/pull/512)\n* Add test for replacing variables in secrets\n  [#505](https://github.com/fluxcd/kustomize-controller/pull/505)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1204,
                  "startColumn": 1,
                  "endLine": 1204,
                  "endColumn": 9,
                  "snippet": {
                    "text": "This prerelease comes with improvements to force applying objects with immutable fields changes. \n\nImprovements:\n* Update dependencies (fix CVE-2021-43784)\n  [#509](https://github.com/fluxcd/kustomize-controller/pull/509)\n* Update golang.org/x/text to v0.3.7 (fix CVE-2021-38561)\n  [#512](https://github.com/fluxcd/kustomize-controller/pull/512)\n",
                    "rendered": {
                      "text": "This prerelease comes with improvements to force applying objects with immutable fields changes. \n\nImprovements:\n* Update dependencies (fix CVE-2021-43784)\n  [#509](https://github.com/fluxcd/kustomize-controller/pull/509)\n* Update golang.org/x/text to v0.3.7 (fix CVE-2021-38561)\n  [#512](https://github.com/fluxcd/kustomize-controller/pull/512)\n",
                      "markdown": "`This prerelease comes with improvements to force applying objects with immutable fields changes. \n\nImprovements:\n* Update dependencies (fix CVE-2021-43784)\n  [#509](https://github.com/fluxcd/kustomize-controller/pull/509)\n* Update golang.org/x/text to v0.3.7 (fix CVE-2021-38561)\n  [#512](https://github.com/fluxcd/kustomize-controller/pull/512)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1194,
                  "startColumn": 36,
                  "endLine": 1194,
                  "endColumn": 40,
                  "snippet": {
                    "text": "Fixes:\n* Fix HPA diff (upstream bug)\n  [#526](https://github.com/fluxcd/kustomize-controller/pull/526)\n* Fix inconsistent code-style raised at security audit\n  [#522](https://github.com/fluxcd/kustomize-controller/pull/522)\n\n## 0.18.2\n",
                    "rendered": {
                      "text": "Fixes:\n* Fix HPA diff (upstream bug)\n  [#526](https://github.com/fluxcd/kustomize-controller/pull/526)\n* Fix inconsistent code-style raised at security audit\n  [#522](https://github.com/fluxcd/kustomize-controller/pull/522)\n\n## 0.18.2\n",
                      "markdown": "`Fixes:\n* Fix HPA diff (upstream bug)\n  [#526](https://github.com/fluxcd/kustomize-controller/pull/526)\n* Fix inconsistent code-style raised at security audit\n  [#522](https://github.com/fluxcd/kustomize-controller/pull/522)\n\n## 0.18.2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1186,
                  "startColumn": 1,
                  "endLine": 1186,
                  "endColumn": 9,
                  "snippet": {
                    "text": "In addition, the controller is now built with Go 1.17 and Alpine 3.15.\n\nImprovements:\n* Update Go to v1.17 and controller-runtime to v0.11\n  [#478](https://github.com/fluxcd/kustomize-controller/pull/478)\n* Add condition to checkDependencies when SourceRef is the same\n  [#521](https://github.com/fluxcd/kustomize-controller/pull/521)\n",
                    "rendered": {
                      "text": "In addition, the controller is now built with Go 1.17 and Alpine 3.15.\n\nImprovements:\n* Update Go to v1.17 and controller-runtime to v0.11\n  [#478](https://github.com/fluxcd/kustomize-controller/pull/478)\n* Add condition to checkDependencies when SourceRef is the same\n  [#521](https://github.com/fluxcd/kustomize-controller/pull/521)\n",
                      "markdown": "`In addition, the controller is now built with Go 1.17 and Alpine 3.15.\n\nImprovements:\n* Update Go to v1.17 and controller-runtime to v0.11\n  [#478](https://github.com/fluxcd/kustomize-controller/pull/478)\n* Add condition to checkDependencies when SourceRef is the same\n  [#521](https://github.com/fluxcd/kustomize-controller/pull/521)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1180,
                  "startColumn": 29,
                  "endLine": 1180,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\n**Release date:** 2022-01-10\n\nThis prerelease comes with an update to the Kubernetes and controller-runtime dependencies\nto align them with the Kubernetes 1.23 release.\n\nIn addition, the controller is now built with Go 1.17 and Alpine 3.15.\n",
                    "rendered": {
                      "text": "\n**Release date:** 2022-01-10\n\nThis prerelease comes with an update to the Kubernetes and controller-runtime dependencies\nto align them with the Kubernetes 1.23 release.\n\nIn addition, the controller is now built with Go 1.17 and Alpine 3.15.\n",
                      "markdown": "`\n**Release date:** 2022-01-10\n\nThis prerelease comes with an update to the Kubernetes and controller-runtime dependencies\nto align them with the Kubernetes 1.23 release.\n\nIn addition, the controller is now built with Go 1.17 and Alpine 3.15.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1173,
                  "startColumn": 1,
                  "endLine": 1173,
                  "endColumn": 9,
                  "snippet": {
                    "text": "from being reconciled on Kubernetes <= 1.21.\n\nFixes:\n* Update `fluxcd/pkg/ssa` to exclude the status field from apply\n  [#533](https://github.com/fluxcd/kustomize-controller/pull/533)\n\n## 0.19.0\n",
                    "rendered": {
                      "text": "from being reconciled on Kubernetes <= 1.21.\n\nFixes:\n* Update `fluxcd/pkg/ssa` to exclude the status field from apply\n  [#533](https://github.com/fluxcd/kustomize-controller/pull/533)\n\n## 0.19.0\n",
                      "markdown": "`from being reconciled on Kubernetes <= 1.21.\n\nFixes:\n* Update `fluxcd/pkg/ssa` to exclude the status field from apply\n  [#533](https://github.com/fluxcd/kustomize-controller/pull/533)\n\n## 0.19.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1158,
                  "startColumn": 22,
                  "endLine": 1158,
                  "endColumn": 30,
                  "snippet": {
                    "text": "  [#527](https://github.com/fluxcd/kustomize-controller/pull/527)\n* Ensure object are finalized under impersonation\n  [#552](https://github.com/fluxcd/kustomize-controller/pull/552)\n* Use patch instead of update when adding finalizers\n  [#535](https://github.com/fluxcd/kustomize-controller/pull/535)\n* Fix preflight validation\n  [#544](https://github.com/fluxcd/kustomize-controller/pull/544)\n",
                    "rendered": {
                      "text": "  [#527](https://github.com/fluxcd/kustomize-controller/pull/527)\n* Ensure object are finalized under impersonation\n  [#552](https://github.com/fluxcd/kustomize-controller/pull/552)\n* Use patch instead of update when adding finalizers\n  [#535](https://github.com/fluxcd/kustomize-controller/pull/535)\n* Fix preflight validation\n  [#544](https://github.com/fluxcd/kustomize-controller/pull/544)\n",
                      "markdown": "`  [#527](https://github.com/fluxcd/kustomize-controller/pull/527)\n* Ensure object are finalized under impersonation\n  [#552](https://github.com/fluxcd/kustomize-controller/pull/552)\n* Use patch instead of update when adding finalizers\n  [#535](https://github.com/fluxcd/kustomize-controller/pull/535)\n* Fix preflight validation\n  [#544](https://github.com/fluxcd/kustomize-controller/pull/544)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1148,
                  "startColumn": 1,
                  "endLine": 1148,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#539](https://github.com/fluxcd/kustomize-controller/pull/539)\n- docs: Add var substitution operator escape syntax\n  [#537](https://github.com/fluxcd/kustomize-controller/pull/537)\n- Update development documentation\n  [#540](https://github.com/fluxcd/kustomize-controller/pull/540)\n- Refactor Fuzz implementation\n  [#536](https://github.com/fluxcd/kustomize-controller/pull/536)\n",
                    "rendered": {
                      "text": "  [#539](https://github.com/fluxcd/kustomize-controller/pull/539)\n- docs: Add var substitution operator escape syntax\n  [#537](https://github.com/fluxcd/kustomize-controller/pull/537)\n- Update development documentation\n  [#540](https://github.com/fluxcd/kustomize-controller/pull/540)\n- Refactor Fuzz implementation\n  [#536](https://github.com/fluxcd/kustomize-controller/pull/536)\n",
                      "markdown": "`  [#539](https://github.com/fluxcd/kustomize-controller/pull/539)\n- docs: Add var substitution operator escape syntax\n  [#537](https://github.com/fluxcd/kustomize-controller/pull/537)\n- Update development documentation\n  [#540](https://github.com/fluxcd/kustomize-controller/pull/540)\n- Refactor Fuzz implementation\n  [#536](https://github.com/fluxcd/kustomize-controller/pull/536)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1095,
                  "startColumn": 1,
                  "endLine": 1095,
                  "endColumn": 9,
                  "snippet": {
                    "text": "the controller on par with the Kustomize v4.5.1 release.\n\nImprovements:\n- Update controller to kustomize v4.5.1\n  [#559](https://github.com/fluxcd/kustomize-controller/pull/559)\n\nFixes:\n",
                    "rendered": {
                      "text": "the controller on par with the Kustomize v4.5.1 release.\n\nImprovements:\n- Update controller to kustomize v4.5.1\n  [#559](https://github.com/fluxcd/kustomize-controller/pull/559)\n\nFixes:\n",
                      "markdown": "`the controller on par with the Kustomize v4.5.1 release.\n\nImprovements:\n- Update controller to kustomize v4.5.1\n  [#559](https://github.com/fluxcd/kustomize-controller/pull/559)\n\nFixes:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1091,
                  "startColumn": 29,
                  "endLine": 1091,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\n**Release date:** 2022-02-07\n\nThis prerelease comes with an update to the `sigs.k8s.io/kustomize` packages, bringing \nthe controller on par with the Kustomize v4.5.1 release.\n\nImprovements:\n",
                    "rendered": {
                      "text": "\n**Release date:** 2022-02-07\n\nThis prerelease comes with an update to the `sigs.k8s.io/kustomize` packages, bringing \nthe controller on par with the Kustomize v4.5.1 release.\n\nImprovements:\n",
                      "markdown": "`\n**Release date:** 2022-02-07\n\nThis prerelease comes with an update to the `sigs.k8s.io/kustomize` packages, bringing \nthe controller on par with the Kustomize v4.5.1 release.\n\nImprovements:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1080,
                  "startColumn": 1,
                  "endLine": 1080,
                  "endColumn": 9,
                  "snippet": {
                    "text": "[pseudo git HTTP URLs](https://github.com/kubernetes-sigs/kustomize/pull/4453).\n\nImprovements:\n- Update controller to kustomize v4.5.2\n  [#567](https://github.com/fluxcd/kustomize-controller/pull/567)\n- Clarify `spec.path` in API docs\n  [#566](https://github.com/fluxcd/kustomize-controller/pull/566)\n",
                    "rendered": {
                      "text": "[pseudo git HTTP URLs](https://github.com/kubernetes-sigs/kustomize/pull/4453).\n\nImprovements:\n- Update controller to kustomize v4.5.2\n  [#567](https://github.com/fluxcd/kustomize-controller/pull/567)\n- Clarify `spec.path` in API docs\n  [#566](https://github.com/fluxcd/kustomize-controller/pull/566)\n",
                      "markdown": "`[pseudo git HTTP URLs](https://github.com/kubernetes-sigs/kustomize/pull/4453).\n\nImprovements:\n- Update controller to kustomize v4.5.2\n  [#567](https://github.com/fluxcd/kustomize-controller/pull/567)\n- Clarify `spec.path` in API docs\n  [#566](https://github.com/fluxcd/kustomize-controller/pull/566)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1073,
                  "startColumn": 29,
                  "endLine": 1073,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\n**Release date:** 2022-02-10\n\nThis prerelease comes with an update to the `sigs.k8s.io/kustomize/api` package,\nbringing the controller on par with the Kustomize v4.5.2 release.\n\nKustomize v4.5.2 contains a regression bug fix for\n",
                    "rendered": {
                      "text": "\n**Release date:** 2022-02-10\n\nThis prerelease comes with an update to the `sigs.k8s.io/kustomize/api` package,\nbringing the controller on par with the Kustomize v4.5.2 release.\n\nKustomize v4.5.2 contains a regression bug fix for\n",
                      "markdown": "`\n**Release date:** 2022-02-10\n\nThis prerelease comes with an update to the `sigs.k8s.io/kustomize/api` package,\nbringing the controller on par with the Kustomize v4.5.2 release.\n\nKustomize v4.5.2 contains a regression bug fix for\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1053,
                  "startColumn": 1,
                  "endLine": 1053,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Improvements:\n- Convert `stringData` to `data` before applying Secrets\n  [#576](https://github.com/fluxcd/kustomize-controller/pull/576)\n- Update dependencies\n  [#574](https://github.com/fluxcd/kustomize-controller/pull/574)\n\n## 0.21.0\n",
                    "rendered": {
                      "text": "Improvements:\n- Convert `stringData` to `data` before applying Secrets\n  [#576](https://github.com/fluxcd/kustomize-controller/pull/576)\n- Update dependencies\n  [#574](https://github.com/fluxcd/kustomize-controller/pull/574)\n\n## 0.21.0\n",
                      "markdown": "`Improvements:\n- Convert `stringData` to `data` before applying Secrets\n  [#576](https://github.com/fluxcd/kustomize-controller/pull/576)\n- Update dependencies\n  [#574](https://github.com/fluxcd/kustomize-controller/pull/574)\n\n## 0.21.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1036,
                  "startColumn": 1,
                  "endLine": 1036,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#581](https://github.com/fluxcd/kustomize-controller/pull/581)\n- Update `pkg/runtime` and `apis/meta`\n  [#575](https://github.com/fluxcd/kustomize-controller/pull/575)\n- Update dependencies\n  [#584](https://github.com/fluxcd/kustomize-controller/pull/584)\n- SOPS: Add support for Azure Key Vault credentials\n  [#495](https://github.com/fluxcd/kustomize-controller/pull/495)\n",
                    "rendered": {
                      "text": "  [#581](https://github.com/fluxcd/kustomize-controller/pull/581)\n- Update `pkg/runtime` and `apis/meta`\n  [#575](https://github.com/fluxcd/kustomize-controller/pull/575)\n- Update dependencies\n  [#584](https://github.com/fluxcd/kustomize-controller/pull/584)\n- SOPS: Add support for Azure Key Vault credentials\n  [#495](https://github.com/fluxcd/kustomize-controller/pull/495)\n",
                      "markdown": "`  [#581](https://github.com/fluxcd/kustomize-controller/pull/581)\n- Update `pkg/runtime` and `apis/meta`\n  [#575](https://github.com/fluxcd/kustomize-controller/pull/575)\n- Update dependencies\n  [#584](https://github.com/fluxcd/kustomize-controller/pull/584)\n- SOPS: Add support for Azure Key Vault credentials\n  [#495](https://github.com/fluxcd/kustomize-controller/pull/495)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1034,
                  "startColumn": 1,
                  "endLine": 1034,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Improvements:\n- Allow shared ownership of in-cluster objects applied with kubectl\n  [#581](https://github.com/fluxcd/kustomize-controller/pull/581)\n- Update `pkg/runtime` and `apis/meta`\n  [#575](https://github.com/fluxcd/kustomize-controller/pull/575)\n- Update dependencies\n  [#584](https://github.com/fluxcd/kustomize-controller/pull/584)\n",
                    "rendered": {
                      "text": "Improvements:\n- Allow shared ownership of in-cluster objects applied with kubectl\n  [#581](https://github.com/fluxcd/kustomize-controller/pull/581)\n- Update `pkg/runtime` and `apis/meta`\n  [#575](https://github.com/fluxcd/kustomize-controller/pull/575)\n- Update dependencies\n  [#584](https://github.com/fluxcd/kustomize-controller/pull/584)\n",
                      "markdown": "`Improvements:\n- Allow shared ownership of in-cluster objects applied with kubectl\n  [#581](https://github.com/fluxcd/kustomize-controller/pull/581)\n- Update `pkg/runtime` and `apis/meta`\n  [#575](https://github.com/fluxcd/kustomize-controller/pull/575)\n- Update dependencies\n  [#584](https://github.com/fluxcd/kustomize-controller/pull/584)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 999,
                  "startColumn": 1,
                  "endLine": 999,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Improvements:\n- Update Kustomize to v4.5.3\n  [#594](https://github.com/fluxcd/kustomize-controller/pull/594)\n- Update source-controller API to v0.22.3\n  [#596](https://github.com/fluxcd/kustomize-controller/pull/596)\n\nFixes:\n",
                    "rendered": {
                      "text": "Improvements:\n- Update Kustomize to v4.5.3\n  [#594](https://github.com/fluxcd/kustomize-controller/pull/594)\n- Update source-controller API to v0.22.3\n  [#596](https://github.com/fluxcd/kustomize-controller/pull/596)\n\nFixes:\n",
                      "markdown": "`Improvements:\n- Update Kustomize to v4.5.3\n  [#594](https://github.com/fluxcd/kustomize-controller/pull/594)\n- Update source-controller API to v0.22.3\n  [#596](https://github.com/fluxcd/kustomize-controller/pull/596)\n\nFixes:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 997,
                  "startColumn": 1,
                  "endLine": 997,
                  "endColumn": 9,
                  "snippet": {
                    "text": "YAML anchors.\n\nImprovements:\n- Update Kustomize to v4.5.3\n  [#594](https://github.com/fluxcd/kustomize-controller/pull/594)\n- Update source-controller API to v0.22.3\n  [#596](https://github.com/fluxcd/kustomize-controller/pull/596)\n",
                    "rendered": {
                      "text": "YAML anchors.\n\nImprovements:\n- Update Kustomize to v4.5.3\n  [#594](https://github.com/fluxcd/kustomize-controller/pull/594)\n- Update source-controller API to v0.22.3\n  [#596](https://github.com/fluxcd/kustomize-controller/pull/596)\n",
                      "markdown": "`YAML anchors.\n\nImprovements:\n- Update Kustomize to v4.5.3\n  [#594](https://github.com/fluxcd/kustomize-controller/pull/594)\n- Update source-controller API to v0.22.3\n  [#596](https://github.com/fluxcd/kustomize-controller/pull/596)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 982,
                  "startColumn": 1,
                  "endLine": 982,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Fixes:\n- sops/azkv: ensure compatibility with upstream\n  [#604](https://github.com/fluxcd/kustomize-controller/pull/604)\n- Update Kustomize to v4.5.4\n  [#606](https://github.com/fluxcd/kustomize-controller/pull/606)\n\n## 0.22.2\n",
                    "rendered": {
                      "text": "Fixes:\n- sops/azkv: ensure compatibility with upstream\n  [#604](https://github.com/fluxcd/kustomize-controller/pull/604)\n- Update Kustomize to v4.5.4\n  [#606](https://github.com/fluxcd/kustomize-controller/pull/606)\n\n## 0.22.2\n",
                      "markdown": "`Fixes:\n- sops/azkv: ensure compatibility with upstream\n  [#604](https://github.com/fluxcd/kustomize-controller/pull/604)\n- Update Kustomize to v4.5.4\n  [#606](https://github.com/fluxcd/kustomize-controller/pull/606)\n\n## 0.22.2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 967,
                  "startColumn": 1,
                  "endLine": 967,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#609](https://github.com/fluxcd/kustomize-controller/pull/609)\n- Implement health check for Kubernetes jobs\n  [#608](https://github.com/fluxcd/kustomize-controller/pull/608)\n- Update KubeConfig documentation\n  [#611](https://github.com/fluxcd/kustomize-controller/pull/611)\n\n## 0.22.3\n",
                    "rendered": {
                      "text": "  [#609](https://github.com/fluxcd/kustomize-controller/pull/609)\n- Implement health check for Kubernetes jobs\n  [#608](https://github.com/fluxcd/kustomize-controller/pull/608)\n- Update KubeConfig documentation\n  [#611](https://github.com/fluxcd/kustomize-controller/pull/611)\n\n## 0.22.3\n",
                      "markdown": "`  [#609](https://github.com/fluxcd/kustomize-controller/pull/609)\n- Implement health check for Kubernetes jobs\n  [#608](https://github.com/fluxcd/kustomize-controller/pull/608)\n- Update KubeConfig documentation\n  [#611](https://github.com/fluxcd/kustomize-controller/pull/611)\n\n## 0.22.3\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 956,
                  "startColumn": 15,
                  "endLine": 956,
                  "endColumn": 19,
                  "snippet": {
                    "text": "- Use of `TLSClientConfig.Insecure` in KubeConfig file is disabled by default,\nbut can enabled at controller level with the flag `--insecure-kubeconfig-tls`.\n- Use of `ExecProvider` in KubeConfig file is now disabled by default,\nbut can enabled at controller level with the flag `--insecure-kubeconfig-exec`.\n\nImprovements:\n- Add kubeconfig flags\n",
                    "rendered": {
                      "text": "- Use of `TLSClientConfig.Insecure` in KubeConfig file is disabled by default,\nbut can enabled at controller level with the flag `--insecure-kubeconfig-tls`.\n- Use of `ExecProvider` in KubeConfig file is now disabled by default,\nbut can enabled at controller level with the flag `--insecure-kubeconfig-exec`.\n\nImprovements:\n- Add kubeconfig flags\n",
                      "markdown": "`- Use of `TLSClientConfig.Insecure` in KubeConfig file is disabled by default,\nbut can enabled at controller level with the flag `--insecure-kubeconfig-tls`.\n- Use of `ExecProvider` in KubeConfig file is now disabled by default,\nbut can enabled at controller level with the flag `--insecure-kubeconfig-exec`.\n\nImprovements:\n- Add kubeconfig flags\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 954,
                  "startColumn": 15,
                  "endLine": 954,
                  "endColumn": 19,
                  "snippet": {
                    "text": "and `BearerTokenFile`). The drive behind the change was to discourage\ninsecure practices of mounting Kubernetes tokens inside the controller's container file system.\n- Use of `TLSClientConfig.Insecure` in KubeConfig file is disabled by default,\nbut can enabled at controller level with the flag `--insecure-kubeconfig-tls`.\n- Use of `ExecProvider` in KubeConfig file is now disabled by default,\nbut can enabled at controller level with the flag `--insecure-kubeconfig-exec`.\n\n",
                    "rendered": {
                      "text": "and `BearerTokenFile`). The drive behind the change was to discourage\ninsecure practices of mounting Kubernetes tokens inside the controller's container file system.\n- Use of `TLSClientConfig.Insecure` in KubeConfig file is disabled by default,\nbut can enabled at controller level with the flag `--insecure-kubeconfig-tls`.\n- Use of `ExecProvider` in KubeConfig file is now disabled by default,\nbut can enabled at controller level with the flag `--insecure-kubeconfig-exec`.\n\n",
                      "markdown": "`and `BearerTokenFile`). The drive behind the change was to discourage\ninsecure practices of mounting Kubernetes tokens inside the controller's container file system.\n- Use of `TLSClientConfig.Insecure` in KubeConfig file is disabled by default,\nbut can enabled at controller level with the flag `--insecure-kubeconfig-tls`.\n- Use of `ExecProvider` in KubeConfig file is now disabled by default,\nbut can enabled at controller level with the flag `--insecure-kubeconfig-exec`.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 931,
                  "startColumn": 1,
                  "endLine": 931,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#619](https://github.com/fluxcd/kustomize-controller/pull/619)\n- controllers: use own Kustomize FS implementation\n  [#620](https://github.com/fluxcd/kustomize-controller/pull/620)\n- Update dependencies\n  [#621](https://github.com/fluxcd/kustomize-controller/pull/621)\n  [#622](https://github.com/fluxcd/kustomize-controller/pull/622)\n\n",
                    "rendered": {
                      "text": "  [#619](https://github.com/fluxcd/kustomize-controller/pull/619)\n- controllers: use own Kustomize FS implementation\n  [#620](https://github.com/fluxcd/kustomize-controller/pull/620)\n- Update dependencies\n  [#621](https://github.com/fluxcd/kustomize-controller/pull/621)\n  [#622](https://github.com/fluxcd/kustomize-controller/pull/622)\n\n",
                      "markdown": "`  [#619](https://github.com/fluxcd/kustomize-controller/pull/619)\n- controllers: use own Kustomize FS implementation\n  [#620](https://github.com/fluxcd/kustomize-controller/pull/620)\n- Update dependencies\n  [#621](https://github.com/fluxcd/kustomize-controller/pull/621)\n  [#622](https://github.com/fluxcd/kustomize-controller/pull/622)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 899,
                  "startColumn": 1,
                  "endLine": 899,
                  "endColumn": 9,
                  "snippet": {
                    "text": "please static security analysers (CVE-2022-27191).\n\nFixes:\n- Update golang.org/x/crypto\n  [#628](https://github.com/fluxcd/kustomize-controller/pull/628)\n\n## 0.24.1\n",
                    "rendered": {
                      "text": "please static security analysers (CVE-2022-27191).\n\nFixes:\n- Update golang.org/x/crypto\n  [#628](https://github.com/fluxcd/kustomize-controller/pull/628)\n\n## 0.24.1\n",
                      "markdown": "`please static security analysers (CVE-2022-27191).\n\nFixes:\n- Update golang.org/x/crypto\n  [#628](https://github.com/fluxcd/kustomize-controller/pull/628)\n\n## 0.24.1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 888,
                  "startColumn": 1,
                  "endLine": 888,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Improvements:\n- feat: flags to configure exponential backoff retry\n  [#631](https://github.com/fluxcd/kustomize-controller/pull/631)\n- Update source-controller to v0.24.1\n  [#632](https://github.com/fluxcd/kustomize-controller/pull/632)\n\n## 0.24.2\n",
                    "rendered": {
                      "text": "Improvements:\n- feat: flags to configure exponential backoff retry\n  [#631](https://github.com/fluxcd/kustomize-controller/pull/631)\n- Update source-controller to v0.24.1\n  [#632](https://github.com/fluxcd/kustomize-controller/pull/632)\n\n## 0.24.2\n",
                      "markdown": "`Improvements:\n- feat: flags to configure exponential backoff retry\n  [#631](https://github.com/fluxcd/kustomize-controller/pull/631)\n- Update source-controller to v0.24.1\n  [#632](https://github.com/fluxcd/kustomize-controller/pull/632)\n\n## 0.24.2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 822,
                  "startColumn": 1,
                  "endLine": 822,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#661](https://github.com/fluxcd/kustomize-controller/pull/661)\n- Update go-yaml to v3.0.0\n  [#665](https://github.com/fluxcd/kustomize-controller/pull/665)\n- Update source-controller/api to v0.25.0\n  [#671](https://github.com/fluxcd/kustomize-controller/pull/671)\n\nFixes:\n",
                    "rendered": {
                      "text": "  [#661](https://github.com/fluxcd/kustomize-controller/pull/661)\n- Update go-yaml to v3.0.0\n  [#665](https://github.com/fluxcd/kustomize-controller/pull/665)\n- Update source-controller/api to v0.25.0\n  [#671](https://github.com/fluxcd/kustomize-controller/pull/671)\n\nFixes:\n",
                      "markdown": "`  [#661](https://github.com/fluxcd/kustomize-controller/pull/661)\n- Update go-yaml to v3.0.0\n  [#665](https://github.com/fluxcd/kustomize-controller/pull/665)\n- Update source-controller/api to v0.25.0\n  [#671](https://github.com/fluxcd/kustomize-controller/pull/671)\n\nFixes:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 820,
                  "startColumn": 1,
                  "endLine": 820,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#650](https://github.com/fluxcd/kustomize-controller/pull/650)\n- Update Alpine to v3.16\n  [#661](https://github.com/fluxcd/kustomize-controller/pull/661)\n- Update go-yaml to v3.0.0\n  [#665](https://github.com/fluxcd/kustomize-controller/pull/665)\n- Update source-controller/api to v0.25.0\n  [#671](https://github.com/fluxcd/kustomize-controller/pull/671)\n",
                    "rendered": {
                      "text": "  [#650](https://github.com/fluxcd/kustomize-controller/pull/650)\n- Update Alpine to v3.16\n  [#661](https://github.com/fluxcd/kustomize-controller/pull/661)\n- Update go-yaml to v3.0.0\n  [#665](https://github.com/fluxcd/kustomize-controller/pull/665)\n- Update source-controller/api to v0.25.0\n  [#671](https://github.com/fluxcd/kustomize-controller/pull/671)\n",
                      "markdown": "`  [#650](https://github.com/fluxcd/kustomize-controller/pull/650)\n- Update Alpine to v3.16\n  [#661](https://github.com/fluxcd/kustomize-controller/pull/661)\n- Update go-yaml to v3.0.0\n  [#665](https://github.com/fluxcd/kustomize-controller/pull/665)\n- Update source-controller/api to v0.25.0\n  [#671](https://github.com/fluxcd/kustomize-controller/pull/671)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 818,
                  "startColumn": 1,
                  "endLine": 818,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#660](https://github.com/fluxcd/kustomize-controller/pull/660)\n- Update dependencies\n  [#650](https://github.com/fluxcd/kustomize-controller/pull/650)\n- Update Alpine to v3.16\n  [#661](https://github.com/fluxcd/kustomize-controller/pull/661)\n- Update go-yaml to v3.0.0\n  [#665](https://github.com/fluxcd/kustomize-controller/pull/665)\n",
                    "rendered": {
                      "text": "  [#660](https://github.com/fluxcd/kustomize-controller/pull/660)\n- Update dependencies\n  [#650](https://github.com/fluxcd/kustomize-controller/pull/650)\n- Update Alpine to v3.16\n  [#661](https://github.com/fluxcd/kustomize-controller/pull/661)\n- Update go-yaml to v3.0.0\n  [#665](https://github.com/fluxcd/kustomize-controller/pull/665)\n",
                      "markdown": "`  [#660](https://github.com/fluxcd/kustomize-controller/pull/660)\n- Update dependencies\n  [#650](https://github.com/fluxcd/kustomize-controller/pull/650)\n- Update Alpine to v3.16\n  [#661](https://github.com/fluxcd/kustomize-controller/pull/661)\n- Update go-yaml to v3.0.0\n  [#665](https://github.com/fluxcd/kustomize-controller/pull/665)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 816,
                  "startColumn": 1,
                  "endLine": 816,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#647](https://github.com/fluxcd/kustomize-controller/pull/647)\n- Update controller to kustomize v4.5.5\n  [#660](https://github.com/fluxcd/kustomize-controller/pull/660)\n- Update dependencies\n  [#650](https://github.com/fluxcd/kustomize-controller/pull/650)\n- Update Alpine to v3.16\n  [#661](https://github.com/fluxcd/kustomize-controller/pull/661)\n",
                    "rendered": {
                      "text": "  [#647](https://github.com/fluxcd/kustomize-controller/pull/647)\n- Update controller to kustomize v4.5.5\n  [#660](https://github.com/fluxcd/kustomize-controller/pull/660)\n- Update dependencies\n  [#650](https://github.com/fluxcd/kustomize-controller/pull/650)\n- Update Alpine to v3.16\n  [#661](https://github.com/fluxcd/kustomize-controller/pull/661)\n",
                      "markdown": "`  [#647](https://github.com/fluxcd/kustomize-controller/pull/647)\n- Update controller to kustomize v4.5.5\n  [#660](https://github.com/fluxcd/kustomize-controller/pull/660)\n- Update dependencies\n  [#650](https://github.com/fluxcd/kustomize-controller/pull/650)\n- Update Alpine to v3.16\n  [#661](https://github.com/fluxcd/kustomize-controller/pull/661)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 814,
                  "startColumn": 1,
                  "endLine": 814,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#635](https://github.com/fluxcd/kustomize-controller/pull/635)\n- Update SOPS to v3.7.3\n  [#647](https://github.com/fluxcd/kustomize-controller/pull/647)\n- Update controller to kustomize v4.5.5\n  [#660](https://github.com/fluxcd/kustomize-controller/pull/660)\n- Update dependencies\n  [#650](https://github.com/fluxcd/kustomize-controller/pull/650)\n",
                    "rendered": {
                      "text": "  [#635](https://github.com/fluxcd/kustomize-controller/pull/635)\n- Update SOPS to v3.7.3\n  [#647](https://github.com/fluxcd/kustomize-controller/pull/647)\n- Update controller to kustomize v4.5.5\n  [#660](https://github.com/fluxcd/kustomize-controller/pull/660)\n- Update dependencies\n  [#650](https://github.com/fluxcd/kustomize-controller/pull/650)\n",
                      "markdown": "`  [#635](https://github.com/fluxcd/kustomize-controller/pull/635)\n- Update SOPS to v3.7.3\n  [#647](https://github.com/fluxcd/kustomize-controller/pull/647)\n- Update controller to kustomize v4.5.5\n  [#660](https://github.com/fluxcd/kustomize-controller/pull/660)\n- Update dependencies\n  [#650](https://github.com/fluxcd/kustomize-controller/pull/650)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 812,
                  "startColumn": 1,
                  "endLine": 812,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#667](https://github.com/fluxcd/kustomize-controller/pull/667)\n- Support GCP KMS credentials using decryption secretRef\n  [#635](https://github.com/fluxcd/kustomize-controller/pull/635)\n- Update SOPS to v3.7.3\n  [#647](https://github.com/fluxcd/kustomize-controller/pull/647)\n- Update controller to kustomize v4.5.5\n  [#660](https://github.com/fluxcd/kustomize-controller/pull/660)\n",
                    "rendered": {
                      "text": "  [#667](https://github.com/fluxcd/kustomize-controller/pull/667)\n- Support GCP KMS credentials using decryption secretRef\n  [#635](https://github.com/fluxcd/kustomize-controller/pull/635)\n- Update SOPS to v3.7.3\n  [#647](https://github.com/fluxcd/kustomize-controller/pull/647)\n- Update controller to kustomize v4.5.5\n  [#660](https://github.com/fluxcd/kustomize-controller/pull/660)\n",
                      "markdown": "`  [#667](https://github.com/fluxcd/kustomize-controller/pull/667)\n- Support GCP KMS credentials using decryption secretRef\n  [#635](https://github.com/fluxcd/kustomize-controller/pull/635)\n- Update SOPS to v3.7.3\n  [#647](https://github.com/fluxcd/kustomize-controller/pull/647)\n- Update controller to kustomize v4.5.5\n  [#660](https://github.com/fluxcd/kustomize-controller/pull/660)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 782,
                  "startColumn": 1,
                  "endLine": 782,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#675](https://github.com/fluxcd/kustomize-controller/pull/675)\n- Update dependencies\n  [#676](https://github.com/fluxcd/kustomize-controller/pull/676)\n- Update fluxcd/pkg dependencies\n  [#677](https://github.com/fluxcd/kustomize-controller/pull/677)\n\n## 0.26.0\n",
                    "rendered": {
                      "text": "  [#675](https://github.com/fluxcd/kustomize-controller/pull/675)\n- Update dependencies\n  [#676](https://github.com/fluxcd/kustomize-controller/pull/676)\n- Update fluxcd/pkg dependencies\n  [#677](https://github.com/fluxcd/kustomize-controller/pull/677)\n\n## 0.26.0\n",
                      "markdown": "`  [#675](https://github.com/fluxcd/kustomize-controller/pull/675)\n- Update dependencies\n  [#676](https://github.com/fluxcd/kustomize-controller/pull/676)\n- Update fluxcd/pkg dependencies\n  [#677](https://github.com/fluxcd/kustomize-controller/pull/677)\n\n## 0.26.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 780,
                  "startColumn": 1,
                  "endLine": 780,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Improvements:\n- docs: Add example section and dockerconfigjson encryption\n  [#675](https://github.com/fluxcd/kustomize-controller/pull/675)\n- Update dependencies\n  [#676](https://github.com/fluxcd/kustomize-controller/pull/676)\n- Update fluxcd/pkg dependencies\n  [#677](https://github.com/fluxcd/kustomize-controller/pull/677)\n",
                    "rendered": {
                      "text": "Improvements:\n- docs: Add example section and dockerconfigjson encryption\n  [#675](https://github.com/fluxcd/kustomize-controller/pull/675)\n- Update dependencies\n  [#676](https://github.com/fluxcd/kustomize-controller/pull/676)\n- Update fluxcd/pkg dependencies\n  [#677](https://github.com/fluxcd/kustomize-controller/pull/677)\n",
                      "markdown": "`Improvements:\n- docs: Add example section and dockerconfigjson encryption\n  [#675](https://github.com/fluxcd/kustomize-controller/pull/675)\n- Update dependencies\n  [#676](https://github.com/fluxcd/kustomize-controller/pull/676)\n- Update fluxcd/pkg dependencies\n  [#677](https://github.com/fluxcd/kustomize-controller/pull/677)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 751,
                  "startColumn": 1,
                  "endLine": 751,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Improvements:\n- Retry downloading artifacts on not found errors\n  [#689](https://github.com/fluxcd/kustomize-controller/pull/689)\n- Update dependencies\n  [#692](https://github.com/fluxcd/kustomize-controller/pull/692)\n  [#696](https://github.com/fluxcd/kustomize-controller/pull/696)\n- build: Upgrade to Go 1.18\n",
                    "rendered": {
                      "text": "Improvements:\n- Retry downloading artifacts on not found errors\n  [#689](https://github.com/fluxcd/kustomize-controller/pull/689)\n- Update dependencies\n  [#692](https://github.com/fluxcd/kustomize-controller/pull/692)\n  [#696](https://github.com/fluxcd/kustomize-controller/pull/696)\n- build: Upgrade to Go 1.18\n",
                      "markdown": "`Improvements:\n- Retry downloading artifacts on not found errors\n  [#689](https://github.com/fluxcd/kustomize-controller/pull/689)\n- Update dependencies\n  [#692](https://github.com/fluxcd/kustomize-controller/pull/692)\n  [#696](https://github.com/fluxcd/kustomize-controller/pull/696)\n- build: Upgrade to Go 1.18\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 733,
                  "startColumn": 1,
                  "endLine": 733,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#684](https://github.com/fluxcd/kustomize-controller/pull/684)\n\nImprovements:\n- Update dependencies\n  [#704](https://github.com/fluxcd/kustomize-controller/pull/704)\n\n## 0.26.3\n",
                    "rendered": {
                      "text": "  [#684](https://github.com/fluxcd/kustomize-controller/pull/684)\n\nImprovements:\n- Update dependencies\n  [#704](https://github.com/fluxcd/kustomize-controller/pull/704)\n\n## 0.26.3\n",
                      "markdown": "`  [#684](https://github.com/fluxcd/kustomize-controller/pull/684)\n\nImprovements:\n- Update dependencies\n  [#704](https://github.com/fluxcd/kustomize-controller/pull/704)\n\n## 0.26.3\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 716,
                  "startColumn": 1,
                  "endLine": 716,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#714](https://github.com/fluxcd/kustomize-controller/pull/714)\n- Add file path to sops decryption errors\n  [#706](https://github.com/fluxcd/kustomize-controller/pull/706)\n- Update doc on target namespace\n  [#712](https://github.com/fluxcd/kustomize-controller/pull/712)\n\n## 0.27.0\n",
                    "rendered": {
                      "text": "  [#714](https://github.com/fluxcd/kustomize-controller/pull/714)\n- Add file path to sops decryption errors\n  [#706](https://github.com/fluxcd/kustomize-controller/pull/706)\n- Update doc on target namespace\n  [#712](https://github.com/fluxcd/kustomize-controller/pull/712)\n\n## 0.27.0\n",
                      "markdown": "`  [#714](https://github.com/fluxcd/kustomize-controller/pull/714)\n- Add file path to sops decryption errors\n  [#706](https://github.com/fluxcd/kustomize-controller/pull/706)\n- Update doc on target namespace\n  [#712](https://github.com/fluxcd/kustomize-controller/pull/712)\n\n## 0.27.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 712,
                  "startColumn": 1,
                  "endLine": 712,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Improvements:\n- Enable RecoverPanic option on reconciler\n  [#708](https://github.com/fluxcd/kustomize-controller/pull/708)\n- Update Kubernetes packages to v1.25.0\n  [#714](https://github.com/fluxcd/kustomize-controller/pull/714)\n- Add file path to sops decryption errors\n  [#706](https://github.com/fluxcd/kustomize-controller/pull/706)\n",
                    "rendered": {
                      "text": "Improvements:\n- Enable RecoverPanic option on reconciler\n  [#708](https://github.com/fluxcd/kustomize-controller/pull/708)\n- Update Kubernetes packages to v1.25.0\n  [#714](https://github.com/fluxcd/kustomize-controller/pull/714)\n- Add file path to sops decryption errors\n  [#706](https://github.com/fluxcd/kustomize-controller/pull/706)\n",
                      "markdown": "`Improvements:\n- Enable RecoverPanic option on reconciler\n  [#708](https://github.com/fluxcd/kustomize-controller/pull/708)\n- Update Kubernetes packages to v1.25.0\n  [#714](https://github.com/fluxcd/kustomize-controller/pull/714)\n- Add file path to sops decryption errors\n  [#706](https://github.com/fluxcd/kustomize-controller/pull/706)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 697,
                  "startColumn": 1,
                  "endLine": 697,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#723](https://github.com/fluxcd/kustomize-controller/pull/723)\n- Fuzz optimisations\n  [#722](https://github.com/fluxcd/kustomize-controller/pull/722)\n- Update dependencies\n  [#724](https://github.com/fluxcd/kustomize-controller/pull/724)\n\n## 0.27.1\n",
                    "rendered": {
                      "text": "  [#723](https://github.com/fluxcd/kustomize-controller/pull/723)\n- Fuzz optimisations\n  [#722](https://github.com/fluxcd/kustomize-controller/pull/722)\n- Update dependencies\n  [#724](https://github.com/fluxcd/kustomize-controller/pull/724)\n\n## 0.27.1\n",
                      "markdown": "`  [#723](https://github.com/fluxcd/kustomize-controller/pull/723)\n- Fuzz optimisations\n  [#722](https://github.com/fluxcd/kustomize-controller/pull/722)\n- Update dependencies\n  [#724](https://github.com/fluxcd/kustomize-controller/pull/724)\n\n## 0.27.1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 691,
                  "startColumn": 7,
                  "endLine": 691,
                  "endColumn": 15,
                  "snippet": {
                    "text": "  [#720](https://github.com/fluxcd/kustomize-controller/pull/720)\n- Sort SOPS masterkeys so offline decrypt methods are tried first\n  [#726](https://github.com/fluxcd/kustomize-controller/pull/726)\n- SOPS: Update the AWS SDK for KMS\n  [#721](https://github.com/fluxcd/kustomize-controller/pull/721)\n- Refactor Fuzzers based on Go native fuzzing\n  [#723](https://github.com/fluxcd/kustomize-controller/pull/723)\n",
                    "rendered": {
                      "text": "  [#720](https://github.com/fluxcd/kustomize-controller/pull/720)\n- Sort SOPS masterkeys so offline decrypt methods are tried first\n  [#726](https://github.com/fluxcd/kustomize-controller/pull/726)\n- SOPS: Update the AWS SDK for KMS\n  [#721](https://github.com/fluxcd/kustomize-controller/pull/721)\n- Refactor Fuzzers based on Go native fuzzing\n  [#723](https://github.com/fluxcd/kustomize-controller/pull/723)\n",
                      "markdown": "`  [#720](https://github.com/fluxcd/kustomize-controller/pull/720)\n- Sort SOPS masterkeys so offline decrypt methods are tried first\n  [#726](https://github.com/fluxcd/kustomize-controller/pull/726)\n- SOPS: Update the AWS SDK for KMS\n  [#721](https://github.com/fluxcd/kustomize-controller/pull/721)\n- Refactor Fuzzers based on Go native fuzzing\n  [#723](https://github.com/fluxcd/kustomize-controller/pull/723)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 665,
                  "startColumn": 1,
                  "endLine": 665,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#731](https://github.com/fluxcd/kustomize-controller/pull/731)\n- Build with Go 1.19\n  [#733](https://github.com/fluxcd/kustomize-controller/pull/733)\n- Update dependencies\n  [#735](https://github.com/fluxcd/kustomize-controller/pull/735)\n\nFixes:\n",
                    "rendered": {
                      "text": "  [#731](https://github.com/fluxcd/kustomize-controller/pull/731)\n- Build with Go 1.19\n  [#733](https://github.com/fluxcd/kustomize-controller/pull/733)\n- Update dependencies\n  [#735](https://github.com/fluxcd/kustomize-controller/pull/735)\n\nFixes:\n",
                      "markdown": "`  [#731](https://github.com/fluxcd/kustomize-controller/pull/731)\n- Build with Go 1.19\n  [#733](https://github.com/fluxcd/kustomize-controller/pull/733)\n- Update dependencies\n  [#735](https://github.com/fluxcd/kustomize-controller/pull/735)\n\nFixes:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 639,
                  "startColumn": 1,
                  "endLine": 639,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#738](https://github.com/fluxcd/kustomize-controller/pull/738)\n- API: allow configuration of `h` unit for timeouts\n  [#749](https://github.com/fluxcd/kustomize-controller/pull/749)\n- Update dependencies\n  [#750](https://github.com/fluxcd/kustomize-controller/pull/750)\n\n## 0.29.0\n",
                    "rendered": {
                      "text": "  [#738](https://github.com/fluxcd/kustomize-controller/pull/738)\n- API: allow configuration of `h` unit for timeouts\n  [#749](https://github.com/fluxcd/kustomize-controller/pull/749)\n- Update dependencies\n  [#750](https://github.com/fluxcd/kustomize-controller/pull/750)\n\n## 0.29.0\n",
                      "markdown": "`  [#738](https://github.com/fluxcd/kustomize-controller/pull/738)\n- API: allow configuration of `h` unit for timeouts\n  [#749](https://github.com/fluxcd/kustomize-controller/pull/749)\n- Update dependencies\n  [#750](https://github.com/fluxcd/kustomize-controller/pull/750)\n\n## 0.29.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 593,
                  "startColumn": 1,
                  "endLine": 593,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#759](https://github.com/fluxcd/kustomize-controller/pull/759)\n- Update Source API to v0.32.1\n  [#768](https://github.com/fluxcd/kustomize-controller/pull/768)\n- Update dependencies\n  [#767](https://github.com/fluxcd/kustomize-controller/pull/767)\n- Use Flux Event API v1beta1\n  [#758](https://github.com/fluxcd/kustomize-controller/pull/758)\n",
                    "rendered": {
                      "text": "  [#759](https://github.com/fluxcd/kustomize-controller/pull/759)\n- Update Source API to v0.32.1\n  [#768](https://github.com/fluxcd/kustomize-controller/pull/768)\n- Update dependencies\n  [#767](https://github.com/fluxcd/kustomize-controller/pull/767)\n- Use Flux Event API v1beta1\n  [#758](https://github.com/fluxcd/kustomize-controller/pull/758)\n",
                      "markdown": "`  [#759](https://github.com/fluxcd/kustomize-controller/pull/759)\n- Update Source API to v0.32.1\n  [#768](https://github.com/fluxcd/kustomize-controller/pull/768)\n- Update dependencies\n  [#767](https://github.com/fluxcd/kustomize-controller/pull/767)\n- Use Flux Event API v1beta1\n  [#758](https://github.com/fluxcd/kustomize-controller/pull/758)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 591,
                  "startColumn": 1,
                  "endLine": 591,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#763](https://github.com/fluxcd/kustomize-controller/pull/763)\n- Update `keyvault/azkeys` Azure SDK to v0.9.0\n  [#759](https://github.com/fluxcd/kustomize-controller/pull/759)\n- Update Source API to v0.32.1\n  [#768](https://github.com/fluxcd/kustomize-controller/pull/768)\n- Update dependencies\n  [#767](https://github.com/fluxcd/kustomize-controller/pull/767)\n",
                    "rendered": {
                      "text": "  [#763](https://github.com/fluxcd/kustomize-controller/pull/763)\n- Update `keyvault/azkeys` Azure SDK to v0.9.0\n  [#759](https://github.com/fluxcd/kustomize-controller/pull/759)\n- Update Source API to v0.32.1\n  [#768](https://github.com/fluxcd/kustomize-controller/pull/768)\n- Update dependencies\n  [#767](https://github.com/fluxcd/kustomize-controller/pull/767)\n",
                      "markdown": "`  [#763](https://github.com/fluxcd/kustomize-controller/pull/763)\n- Update `keyvault/azkeys` Azure SDK to v0.9.0\n  [#759](https://github.com/fluxcd/kustomize-controller/pull/759)\n- Update Source API to v0.32.1\n  [#768](https://github.com/fluxcd/kustomize-controller/pull/768)\n- Update dependencies\n  [#767](https://github.com/fluxcd/kustomize-controller/pull/767)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 589,
                  "startColumn": 1,
                  "endLine": 589,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Improvements:\n- Refactor: Generate manifests with `flux/pkg/kustomize`\n  [#763](https://github.com/fluxcd/kustomize-controller/pull/763)\n- Update `keyvault/azkeys` Azure SDK to v0.9.0\n  [#759](https://github.com/fluxcd/kustomize-controller/pull/759)\n- Update Source API to v0.32.1\n  [#768](https://github.com/fluxcd/kustomize-controller/pull/768)\n",
                    "rendered": {
                      "text": "Improvements:\n- Refactor: Generate manifests with `flux/pkg/kustomize`\n  [#763](https://github.com/fluxcd/kustomize-controller/pull/763)\n- Update `keyvault/azkeys` Azure SDK to v0.9.0\n  [#759](https://github.com/fluxcd/kustomize-controller/pull/759)\n- Update Source API to v0.32.1\n  [#768](https://github.com/fluxcd/kustomize-controller/pull/768)\n",
                      "markdown": "`Improvements:\n- Refactor: Generate manifests with `flux/pkg/kustomize`\n  [#763](https://github.com/fluxcd/kustomize-controller/pull/763)\n- Update `keyvault/azkeys` Azure SDK to v0.9.0\n  [#759](https://github.com/fluxcd/kustomize-controller/pull/759)\n- Update Source API to v0.32.1\n  [#768](https://github.com/fluxcd/kustomize-controller/pull/768)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 568,
                  "startColumn": 8,
                  "endLine": 568,
                  "endColumn": 16,
                  "snippet": {
                    "text": "  [#777](https://github.com/fluxcd/kustomize-controller/pull/777)\n- build: Fix cifuzz tests and improve fuzz tests' reliability\n  [#771](https://github.com/fluxcd/kustomize-controller/pull/771)\n- build: update dockertest to Go Mod compatible v3\n  [#776](https://github.com/fluxcd/kustomize-controller/pull/776)\n\n## 0.31.0\n",
                    "rendered": {
                      "text": "  [#777](https://github.com/fluxcd/kustomize-controller/pull/777)\n- build: Fix cifuzz tests and improve fuzz tests' reliability\n  [#771](https://github.com/fluxcd/kustomize-controller/pull/771)\n- build: update dockertest to Go Mod compatible v3\n  [#776](https://github.com/fluxcd/kustomize-controller/pull/776)\n\n## 0.31.0\n",
                      "markdown": "`  [#777](https://github.com/fluxcd/kustomize-controller/pull/777)\n- build: Fix cifuzz tests and improve fuzz tests' reliability\n  [#771](https://github.com/fluxcd/kustomize-controller/pull/771)\n- build: update dockertest to Go Mod compatible v3\n  [#776](https://github.com/fluxcd/kustomize-controller/pull/776)\n\n## 0.31.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 560,
                  "startColumn": 1,
                  "endLine": 560,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Improvements:\n- Add support for Kustomize components\n  [#754](https://github.com/fluxcd/kustomize-controller/pull/754)\n- Update dependencies\n  [#780](https://github.com/fluxcd/kustomize-controller/pull/780)\n- Document the behaviour of atomic fields with server-side apply\n  [#774](https://github.com/fluxcd/kustomize-controller/pull/774)\n",
                    "rendered": {
                      "text": "Improvements:\n- Add support for Kustomize components\n  [#754](https://github.com/fluxcd/kustomize-controller/pull/754)\n- Update dependencies\n  [#780](https://github.com/fluxcd/kustomize-controller/pull/780)\n- Document the behaviour of atomic fields with server-side apply\n  [#774](https://github.com/fluxcd/kustomize-controller/pull/774)\n",
                      "markdown": "`Improvements:\n- Add support for Kustomize components\n  [#754](https://github.com/fluxcd/kustomize-controller/pull/754)\n- Update dependencies\n  [#780](https://github.com/fluxcd/kustomize-controller/pull/780)\n- Document the behaviour of atomic fields with server-side apply\n  [#774](https://github.com/fluxcd/kustomize-controller/pull/774)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 538,
                  "startColumn": 8,
                  "endLine": 538,
                  "endColumn": 16,
                  "snippet": {
                    "text": "  [#789](https://github.com/fluxcd/kustomize-controller/pull/789)\n- build: Enable SBOM and SLSA Provenance\n  [#787](https://github.com/fluxcd/kustomize-controller/pull/788)\n- build: Update Alpine to 3.17\n  [#786](https://github.com/fluxcd/kustomize-controller/pull/786)\n- build: pdate source-controller/api to v0.34.0\n  [#790](https://github.com/fluxcd/kustomize-controller/pull/790)\n",
                    "rendered": {
                      "text": "  [#789](https://github.com/fluxcd/kustomize-controller/pull/789)\n- build: Enable SBOM and SLSA Provenance\n  [#787](https://github.com/fluxcd/kustomize-controller/pull/788)\n- build: Update Alpine to 3.17\n  [#786](https://github.com/fluxcd/kustomize-controller/pull/786)\n- build: pdate source-controller/api to v0.34.0\n  [#790](https://github.com/fluxcd/kustomize-controller/pull/790)\n",
                      "markdown": "`  [#789](https://github.com/fluxcd/kustomize-controller/pull/789)\n- build: Enable SBOM and SLSA Provenance\n  [#787](https://github.com/fluxcd/kustomize-controller/pull/788)\n- build: Update Alpine to 3.17\n  [#786](https://github.com/fluxcd/kustomize-controller/pull/786)\n- build: pdate source-controller/api to v0.34.0\n  [#790](https://github.com/fluxcd/kustomize-controller/pull/790)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 514,
                  "startColumn": 1,
                  "endLine": 514,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Improvements:\n- Support RFC-0005 revision format\n  [#793](https://github.com/fluxcd/kustomize-controller/pull/793)\n- Update dependencies\n  [#796](https://github.com/fluxcd/kustomize-controller/pull/796)\n\n## 0.33.0\n",
                    "rendered": {
                      "text": "Improvements:\n- Support RFC-0005 revision format\n  [#793](https://github.com/fluxcd/kustomize-controller/pull/793)\n- Update dependencies\n  [#796](https://github.com/fluxcd/kustomize-controller/pull/796)\n\n## 0.33.0\n",
                      "markdown": "`Improvements:\n- Support RFC-0005 revision format\n  [#793](https://github.com/fluxcd/kustomize-controller/pull/793)\n- Update dependencies\n  [#796](https://github.com/fluxcd/kustomize-controller/pull/796)\n\n## 0.33.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 494,
                  "startColumn": 1,
                  "endLine": 494,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#798](https://github.com/fluxcd/kustomize-controller/pull/798)\n- Update Go to 1.20\n  [#806](https://github.com/fluxcd/kustomize-controller/pull/806)\n- Update dependencies\n  [#807](https://github.com/fluxcd/kustomize-controller/pull/807)\n  [#811](https://github.com/fluxcd/kustomize-controller/pull/811)\n- Use `logger.SetLogger` to also configure `klog`\n",
                    "rendered": {
                      "text": "  [#798](https://github.com/fluxcd/kustomize-controller/pull/798)\n- Update Go to 1.20\n  [#806](https://github.com/fluxcd/kustomize-controller/pull/806)\n- Update dependencies\n  [#807](https://github.com/fluxcd/kustomize-controller/pull/807)\n  [#811](https://github.com/fluxcd/kustomize-controller/pull/811)\n- Use `logger.SetLogger` to also configure `klog`\n",
                      "markdown": "`  [#798](https://github.com/fluxcd/kustomize-controller/pull/798)\n- Update Go to 1.20\n  [#806](https://github.com/fluxcd/kustomize-controller/pull/806)\n- Update dependencies\n  [#807](https://github.com/fluxcd/kustomize-controller/pull/807)\n  [#811](https://github.com/fluxcd/kustomize-controller/pull/811)\n- Use `logger.SetLogger` to also configure `klog`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 492,
                  "startColumn": 1,
                  "endLine": 492,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Improvements:\n- api: update description LastAppliedRevision\n  [#798](https://github.com/fluxcd/kustomize-controller/pull/798)\n- Update Go to 1.20\n  [#806](https://github.com/fluxcd/kustomize-controller/pull/806)\n- Update dependencies\n  [#807](https://github.com/fluxcd/kustomize-controller/pull/807)\n",
                    "rendered": {
                      "text": "Improvements:\n- api: update description LastAppliedRevision\n  [#798](https://github.com/fluxcd/kustomize-controller/pull/798)\n- Update Go to 1.20\n  [#806](https://github.com/fluxcd/kustomize-controller/pull/806)\n- Update dependencies\n  [#807](https://github.com/fluxcd/kustomize-controller/pull/807)\n",
                      "markdown": "`Improvements:\n- api: update description LastAppliedRevision\n  [#798](https://github.com/fluxcd/kustomize-controller/pull/798)\n- Update Go to 1.20\n  [#806](https://github.com/fluxcd/kustomize-controller/pull/806)\n- Update dependencies\n  [#807](https://github.com/fluxcd/kustomize-controller/pull/807)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 490,
                  "startColumn": 6,
                  "endLine": 490,
                  "endColumn": 14,
                  "snippet": {
                    "text": "been updated to their latest versions.\n\nImprovements:\n- api: update description LastAppliedRevision\n  [#798](https://github.com/fluxcd/kustomize-controller/pull/798)\n- Update Go to 1.20\n  [#806](https://github.com/fluxcd/kustomize-controller/pull/806)\n",
                    "rendered": {
                      "text": "been updated to their latest versions.\n\nImprovements:\n- api: update description LastAppliedRevision\n  [#798](https://github.com/fluxcd/kustomize-controller/pull/798)\n- Update Go to 1.20\n  [#806](https://github.com/fluxcd/kustomize-controller/pull/806)\n",
                      "markdown": "`been updated to their latest versions.\n\nImprovements:\n- api: update description LastAppliedRevision\n  [#798](https://github.com/fluxcd/kustomize-controller/pull/798)\n- Update Go to 1.20\n  [#806](https://github.com/fluxcd/kustomize-controller/pull/806)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 481,
                  "startColumn": 8,
                  "endLine": 481,
                  "endColumn": 12,
                  "snippet": {
                    "text": "with `--feature-gates=DisableStatusPollerCache=true`.\n\nThis may have a positive impact on memory usage on large clusters with many\nobjects, at the cost of an increased number of API calls.\n\nIn addition, `klog` has been configured to log using the same logger as the\nrest of the controller (providing a consistent log format).\n",
                    "rendered": {
                      "text": "with `--feature-gates=DisableStatusPollerCache=true`.\n\nThis may have a positive impact on memory usage on large clusters with many\nobjects, at the cost of an increased number of API calls.\n\nIn addition, `klog` has been configured to log using the same logger as the\nrest of the controller (providing a consistent log format).\n",
                      "markdown": "`with `--feature-gates=DisableStatusPollerCache=true`.\n\nThis may have a positive impact on memory usage on large clusters with many\nobjects, at the cost of an increased number of API calls.\n\nIn addition, `klog` has been configured to log using the same logger as the\nrest of the controller (providing a consistent log format).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 468,
                  "startColumn": 1,
                  "endLine": 468,
                  "endColumn": 9,
                  "snippet": {
                    "text": "versions.\n\nImprovements:\n- Update dependencies\n  [#814](https://github.com/fluxcd/kustomize-controller/pull/814)\n\n## 0.35.0\n",
                    "rendered": {
                      "text": "versions.\n\nImprovements:\n- Update dependencies\n  [#814](https://github.com/fluxcd/kustomize-controller/pull/814)\n\n## 0.35.0\n",
                      "markdown": "`versions.\n\nImprovements:\n- Update dependencies\n  [#814](https://github.com/fluxcd/kustomize-controller/pull/814)\n\n## 0.35.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 378,
                  "startColumn": 1,
                  "endLine": 378,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Improvements:\n- Fix SOPS azkv envCred\n  [#838](https://github.com/fluxcd/kustomize-controller/pull/838)\n- Update dependencies\n  [#853](https://github.com/fluxcd/kustomize-controller/pull/853)\n\n## 1.0.0-rc.1\n",
                    "rendered": {
                      "text": "Improvements:\n- Fix SOPS azkv envCred\n  [#838](https://github.com/fluxcd/kustomize-controller/pull/838)\n- Update dependencies\n  [#853](https://github.com/fluxcd/kustomize-controller/pull/853)\n\n## 1.0.0-rc.1\n",
                      "markdown": "`Improvements:\n- Fix SOPS azkv envCred\n  [#838](https://github.com/fluxcd/kustomize-controller/pull/838)\n- Update dependencies\n  [#853](https://github.com/fluxcd/kustomize-controller/pull/853)\n\n## 1.0.0-rc.1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 359,
                  "startColumn": 1,
                  "endLine": 359,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Improvements:\n- Update Alpine to 3.18\n  [#855](https://github.com/fluxcd/kustomize-controller/pull/855)\n- Update dependencies\n  [#862](https://github.com/fluxcd/kustomize-controller/pull/862)\n- build(deps): bump github.com/cloudflare/circl from 1.1.0 to 1.3.3\n  [#860](https://github.com/fluxcd/kustomize-controller/pull/860)\n",
                    "rendered": {
                      "text": "Improvements:\n- Update Alpine to 3.18\n  [#855](https://github.com/fluxcd/kustomize-controller/pull/855)\n- Update dependencies\n  [#862](https://github.com/fluxcd/kustomize-controller/pull/862)\n- build(deps): bump github.com/cloudflare/circl from 1.1.0 to 1.3.3\n  [#860](https://github.com/fluxcd/kustomize-controller/pull/860)\n",
                      "markdown": "`Improvements:\n- Update Alpine to 3.18\n  [#855](https://github.com/fluxcd/kustomize-controller/pull/855)\n- Update dependencies\n  [#862](https://github.com/fluxcd/kustomize-controller/pull/862)\n- build(deps): bump github.com/cloudflare/circl from 1.1.0 to 1.3.3\n  [#860](https://github.com/fluxcd/kustomize-controller/pull/860)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 357,
                  "startColumn": 1,
                  "endLine": 357,
                  "endColumn": 9,
                  "snippet": {
                    "text": "CVE-2023-1732 and the base image has been updated to Alpine 3.18.\n\nImprovements:\n- Update Alpine to 3.18\n  [#855](https://github.com/fluxcd/kustomize-controller/pull/855)\n- Update dependencies\n  [#862](https://github.com/fluxcd/kustomize-controller/pull/862)\n",
                    "rendered": {
                      "text": "CVE-2023-1732 and the base image has been updated to Alpine 3.18.\n\nImprovements:\n- Update Alpine to 3.18\n  [#855](https://github.com/fluxcd/kustomize-controller/pull/855)\n- Update dependencies\n  [#862](https://github.com/fluxcd/kustomize-controller/pull/862)\n",
                      "markdown": "`CVE-2023-1732 and the base image has been updated to Alpine 3.18.\n\nImprovements:\n- Update Alpine to 3.18\n  [#855](https://github.com/fluxcd/kustomize-controller/pull/855)\n- Update dependencies\n  [#862](https://github.com/fluxcd/kustomize-controller/pull/862)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 343,
                  "startColumn": 1,
                  "endLine": 343,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#869](https://github.com/fluxcd/kustomize-controller/pull/869)\n- Update CA certificates\n  [#872](https://github.com/fluxcd/kustomize-controller/pull/872)\n- Update source-controller to v1.0.0-rc.4\n  [#873](https://github.com/fluxcd/kustomize-controller/pull/873)\n\n## 1.0.0-rc.3\n",
                    "rendered": {
                      "text": "  [#869](https://github.com/fluxcd/kustomize-controller/pull/869)\n- Update CA certificates\n  [#872](https://github.com/fluxcd/kustomize-controller/pull/872)\n- Update source-controller to v1.0.0-rc.4\n  [#873](https://github.com/fluxcd/kustomize-controller/pull/873)\n\n## 1.0.0-rc.3\n",
                      "markdown": "`  [#869](https://github.com/fluxcd/kustomize-controller/pull/869)\n- Update CA certificates\n  [#872](https://github.com/fluxcd/kustomize-controller/pull/872)\n- Update source-controller to v1.0.0-rc.4\n  [#873](https://github.com/fluxcd/kustomize-controller/pull/873)\n\n## 1.0.0-rc.3\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 341,
                  "startColumn": 1,
                  "endLine": 341,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#850](https://github.com/fluxcd/kustomize-controller/pull/850)\n- Update controller-runtime to v0.15.0\n  [#869](https://github.com/fluxcd/kustomize-controller/pull/869)\n- Update CA certificates\n  [#872](https://github.com/fluxcd/kustomize-controller/pull/872)\n- Update source-controller to v1.0.0-rc.4\n  [#873](https://github.com/fluxcd/kustomize-controller/pull/873)\n",
                    "rendered": {
                      "text": "  [#850](https://github.com/fluxcd/kustomize-controller/pull/850)\n- Update controller-runtime to v0.15.0\n  [#869](https://github.com/fluxcd/kustomize-controller/pull/869)\n- Update CA certificates\n  [#872](https://github.com/fluxcd/kustomize-controller/pull/872)\n- Update source-controller to v1.0.0-rc.4\n  [#873](https://github.com/fluxcd/kustomize-controller/pull/873)\n",
                      "markdown": "`  [#850](https://github.com/fluxcd/kustomize-controller/pull/850)\n- Update controller-runtime to v0.15.0\n  [#869](https://github.com/fluxcd/kustomize-controller/pull/869)\n- Update CA certificates\n  [#872](https://github.com/fluxcd/kustomize-controller/pull/872)\n- Update source-controller to v1.0.0-rc.4\n  [#873](https://github.com/fluxcd/kustomize-controller/pull/873)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 339,
                  "startColumn": 1,
                  "endLine": 339,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Improvements:\n- Update Kubernetes to v1.27 and Kustomize to v5\n  [#850](https://github.com/fluxcd/kustomize-controller/pull/850)\n- Update controller-runtime to v0.15.0\n  [#869](https://github.com/fluxcd/kustomize-controller/pull/869)\n- Update CA certificates\n  [#872](https://github.com/fluxcd/kustomize-controller/pull/872)\n",
                    "rendered": {
                      "text": "Improvements:\n- Update Kubernetes to v1.27 and Kustomize to v5\n  [#850](https://github.com/fluxcd/kustomize-controller/pull/850)\n- Update controller-runtime to v0.15.0\n  [#869](https://github.com/fluxcd/kustomize-controller/pull/869)\n- Update CA certificates\n  [#872](https://github.com/fluxcd/kustomize-controller/pull/872)\n",
                      "markdown": "`Improvements:\n- Update Kubernetes to v1.27 and Kustomize to v5\n  [#850](https://github.com/fluxcd/kustomize-controller/pull/850)\n- Update controller-runtime to v0.15.0\n  [#869](https://github.com/fluxcd/kustomize-controller/pull/869)\n- Update CA certificates\n  [#872](https://github.com/fluxcd/kustomize-controller/pull/872)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 337,
                  "startColumn": 1,
                  "endLine": 337,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Kubernetes v1.27.2 and controller-runtime v0.15.0.\n\nImprovements:\n- Update Kubernetes to v1.27 and Kustomize to v5\n  [#850](https://github.com/fluxcd/kustomize-controller/pull/850)\n- Update controller-runtime to v0.15.0\n  [#869](https://github.com/fluxcd/kustomize-controller/pull/869)\n",
                    "rendered": {
                      "text": "Kubernetes v1.27.2 and controller-runtime v0.15.0.\n\nImprovements:\n- Update Kubernetes to v1.27 and Kustomize to v5\n  [#850](https://github.com/fluxcd/kustomize-controller/pull/850)\n- Update controller-runtime to v0.15.0\n  [#869](https://github.com/fluxcd/kustomize-controller/pull/869)\n",
                      "markdown": "`Kubernetes v1.27.2 and controller-runtime v0.15.0.\n\nImprovements:\n- Update Kubernetes to v1.27 and Kustomize to v5\n  [#850](https://github.com/fluxcd/kustomize-controller/pull/850)\n- Update controller-runtime to v0.15.0\n  [#869](https://github.com/fluxcd/kustomize-controller/pull/869)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 312,
                  "startColumn": 1,
                  "endLine": 312,
                  "endColumn": 9,
                  "snippet": {
                    "text": "[v1.0.0-rc.3](#100-rc3) and [`v1.0.0-rc.4](#100-rc4).\n\nImprovements:\n- Update dependencies\n  [#908](https://github.com/fluxcd/kustomize-controller/pull/908)\n- Align `go.mod` version with Kubernetes (Go 1.20)\n  [#900](https://github.com/fluxcd/kustomize-controller/pull/900)\n",
                    "rendered": {
                      "text": "[v1.0.0-rc.3](#100-rc3) and [`v1.0.0-rc.4](#100-rc4).\n\nImprovements:\n- Update dependencies\n  [#908](https://github.com/fluxcd/kustomize-controller/pull/908)\n- Align `go.mod` version with Kubernetes (Go 1.20)\n  [#900](https://github.com/fluxcd/kustomize-controller/pull/900)\n",
                      "markdown": "`[v1.0.0-rc.3](#100-rc3) and [`v1.0.0-rc.4](#100-rc4).\n\nImprovements:\n- Update dependencies\n  [#908](https://github.com/fluxcd/kustomize-controller/pull/908)\n- Align `go.mod` version with Kubernetes (Go 1.20)\n  [#900](https://github.com/fluxcd/kustomize-controller/pull/900)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 305,
                  "startColumn": 37,
                  "endLine": 305,
                  "endColumn": 45,
                  "snippet": {
                    "text": "Flux project supply chain [provisionally meet SLSA Build Level 3](https://fluxcd.io/flux/security/slsa-assessment/).\n\nThis release includes several bug fixes. In addition, dependencies have been updated\nto their latest version, including an update of Kubernetes to v1.27.3.\n\nFor a comprehensive list of changes since `v0.35.x`, please refer to the\nchangelog for [v1.0.0-rc.1](#100-rc1), [v1.0.0-rc.2](#100-rc2),\n",
                    "rendered": {
                      "text": "Flux project supply chain [provisionally meet SLSA Build Level 3](https://fluxcd.io/flux/security/slsa-assessment/).\n\nThis release includes several bug fixes. In addition, dependencies have been updated\nto their latest version, including an update of Kubernetes to v1.27.3.\n\nFor a comprehensive list of changes since `v0.35.x`, please refer to the\nchangelog for [v1.0.0-rc.1](#100-rc1), [v1.0.0-rc.2](#100-rc2),\n",
                      "markdown": "`Flux project supply chain [provisionally meet SLSA Build Level 3](https://fluxcd.io/flux/security/slsa-assessment/).\n\nThis release includes several bug fixes. In addition, dependencies have been updated\nto their latest version, including an update of Kubernetes to v1.27.3.\n\nFor a comprehensive list of changes since `v0.35.x`, please refer to the\nchangelog for [v1.0.0-rc.1](#100-rc1), [v1.0.0-rc.2](#100-rc2),\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 275,
                  "startColumn": 1,
                  "endLine": 275,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#932](https://github.com/fluxcd/kustomize-controller/pull/932)\n- Update dependencies\n  [#939](https://github.com/fluxcd/kustomize-controller/pull/939)\n- Update Source API to v1.1.0\n  [#952](https://github.com/fluxcd/kustomize-controller/pull/952)\n\nFixes:\n",
                    "rendered": {
                      "text": "  [#932](https://github.com/fluxcd/kustomize-controller/pull/932)\n- Update dependencies\n  [#939](https://github.com/fluxcd/kustomize-controller/pull/939)\n- Update Source API to v1.1.0\n  [#952](https://github.com/fluxcd/kustomize-controller/pull/952)\n\nFixes:\n",
                      "markdown": "`  [#932](https://github.com/fluxcd/kustomize-controller/pull/932)\n- Update dependencies\n  [#939](https://github.com/fluxcd/kustomize-controller/pull/939)\n- Update Source API to v1.1.0\n  [#952](https://github.com/fluxcd/kustomize-controller/pull/952)\n\nFixes:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 273,
                  "startColumn": 1,
                  "endLine": 273,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#933](https://github.com/fluxcd/kustomize-controller/pull/933)\n- Bump `fluxcd/pkg/ssa` to improve immutable error detection\n  [#932](https://github.com/fluxcd/kustomize-controller/pull/932)\n- Update dependencies\n  [#939](https://github.com/fluxcd/kustomize-controller/pull/939)\n- Update Source API to v1.1.0\n  [#952](https://github.com/fluxcd/kustomize-controller/pull/952)\n",
                    "rendered": {
                      "text": "  [#933](https://github.com/fluxcd/kustomize-controller/pull/933)\n- Bump `fluxcd/pkg/ssa` to improve immutable error detection\n  [#932](https://github.com/fluxcd/kustomize-controller/pull/932)\n- Update dependencies\n  [#939](https://github.com/fluxcd/kustomize-controller/pull/939)\n- Update Source API to v1.1.0\n  [#952](https://github.com/fluxcd/kustomize-controller/pull/952)\n",
                      "markdown": "`  [#933](https://github.com/fluxcd/kustomize-controller/pull/933)\n- Bump `fluxcd/pkg/ssa` to improve immutable error detection\n  [#932](https://github.com/fluxcd/kustomize-controller/pull/932)\n- Update dependencies\n  [#939](https://github.com/fluxcd/kustomize-controller/pull/939)\n- Update Source API to v1.1.0\n  [#952](https://github.com/fluxcd/kustomize-controller/pull/952)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 215,
                  "startColumn": 1,
                  "endLine": 215,
                  "endColumn": 9,
                  "snippet": {
                    "text": "resources annotated with `kustomize.toolkit.fluxcd.io/force: Enabled`.\n\nImprovements:\n- Update `fluxcd/pkg` dependencies\n  [#983](https://github.com/fluxcd/kustomize-controller/pull/983)\n- Bump `github.com/cyphar/filepath-securejoi`n from 0.2.3 to 0.2.4\n  [#962](https://github.com/fluxcd/kustomize-controller/pull/962)\n",
                    "rendered": {
                      "text": "resources annotated with `kustomize.toolkit.fluxcd.io/force: Enabled`.\n\nImprovements:\n- Update `fluxcd/pkg` dependencies\n  [#983](https://github.com/fluxcd/kustomize-controller/pull/983)\n- Bump `github.com/cyphar/filepath-securejoi`n from 0.2.3 to 0.2.4\n  [#962](https://github.com/fluxcd/kustomize-controller/pull/962)\n",
                      "markdown": "`resources annotated with `kustomize.toolkit.fluxcd.io/force: Enabled`.\n\nImprovements:\n- Update `fluxcd/pkg` dependencies\n  [#983](https://github.com/fluxcd/kustomize-controller/pull/983)\n- Bump `github.com/cyphar/filepath-securejoi`n from 0.2.3 to 0.2.4\n  [#962](https://github.com/fluxcd/kustomize-controller/pull/962)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 199,
                  "startColumn": 1,
                  "endLine": 199,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#1005](https://github.com/fluxcd/kustomize-controller/pull/1005)\n- Cleanup pods when recreating Kubernetes Jobs\n  [#997](https://github.com/fluxcd/kustomize-controller/pull/997)\n- Update SOPS to v3.8.1\n  [#995](https://github.com/fluxcd/kustomize-controller/pull/995)\n\n## 1.1.1\n",
                    "rendered": {
                      "text": "  [#1005](https://github.com/fluxcd/kustomize-controller/pull/1005)\n- Cleanup pods when recreating Kubernetes Jobs\n  [#997](https://github.com/fluxcd/kustomize-controller/pull/997)\n- Update SOPS to v3.8.1\n  [#995](https://github.com/fluxcd/kustomize-controller/pull/995)\n\n## 1.1.1\n",
                      "markdown": "`  [#1005](https://github.com/fluxcd/kustomize-controller/pull/1005)\n- Cleanup pods when recreating Kubernetes Jobs\n  [#997](https://github.com/fluxcd/kustomize-controller/pull/997)\n- Update SOPS to v3.8.1\n  [#995](https://github.com/fluxcd/kustomize-controller/pull/995)\n\n## 1.1.1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 191,
                  "startColumn": 1,
                  "endLine": 191,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#1017](https://github.com/fluxcd/kustomize-controller/pull/1017)\n- Add test for Namespace custom resource\n  [#1016](https://github.com/fluxcd/kustomize-controller/pull/1016)\n- Update controller to Kubernetes v1.28.4\n  [#1014](https://github.com/fluxcd/kustomize-controller/pull/1014)\n- Disable status poller cache by default\n  [#1012](https://github.com/fluxcd/kustomize-controller/pull/1012)\n",
                    "rendered": {
                      "text": "  [#1017](https://github.com/fluxcd/kustomize-controller/pull/1017)\n- Add test for Namespace custom resource\n  [#1016](https://github.com/fluxcd/kustomize-controller/pull/1016)\n- Update controller to Kubernetes v1.28.4\n  [#1014](https://github.com/fluxcd/kustomize-controller/pull/1014)\n- Disable status poller cache by default\n  [#1012](https://github.com/fluxcd/kustomize-controller/pull/1012)\n",
                      "markdown": "`  [#1017](https://github.com/fluxcd/kustomize-controller/pull/1017)\n- Add test for Namespace custom resource\n  [#1016](https://github.com/fluxcd/kustomize-controller/pull/1016)\n- Update controller to Kubernetes v1.28.4\n  [#1014](https://github.com/fluxcd/kustomize-controller/pull/1014)\n- Disable status poller cache by default\n  [#1012](https://github.com/fluxcd/kustomize-controller/pull/1012)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 185,
                  "startColumn": 1,
                  "endLine": 185,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#1024](https://github.com/fluxcd/kustomize-controller/pull/1024)\n- build: update Alpine to 3.19\n  [#1023](https://github.com/fluxcd/kustomize-controller/pull/1023)\n- Update Kustomize to v5.3.0\n  [#1021](https://github.com/fluxcd/kustomize-controller/pull/1021)\n- Support additional Field Managers in the disallow list\n  [#1017](https://github.com/fluxcd/kustomize-controller/pull/1017)\n",
                    "rendered": {
                      "text": "  [#1024](https://github.com/fluxcd/kustomize-controller/pull/1024)\n- build: update Alpine to 3.19\n  [#1023](https://github.com/fluxcd/kustomize-controller/pull/1023)\n- Update Kustomize to v5.3.0\n  [#1021](https://github.com/fluxcd/kustomize-controller/pull/1021)\n- Support additional Field Managers in the disallow list\n  [#1017](https://github.com/fluxcd/kustomize-controller/pull/1017)\n",
                      "markdown": "`  [#1024](https://github.com/fluxcd/kustomize-controller/pull/1024)\n- build: update Alpine to 3.19\n  [#1023](https://github.com/fluxcd/kustomize-controller/pull/1023)\n- Update Kustomize to v5.3.0\n  [#1021](https://github.com/fluxcd/kustomize-controller/pull/1021)\n- Support additional Field Managers in the disallow list\n  [#1017](https://github.com/fluxcd/kustomize-controller/pull/1017)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 183,
                  "startColumn": 8,
                  "endLine": 183,
                  "endColumn": 16,
                  "snippet": {
                    "text": "Improvements:\n- Update source-controller to v1.2.2\n  [#1024](https://github.com/fluxcd/kustomize-controller/pull/1024)\n- build: update Alpine to 3.19\n  [#1023](https://github.com/fluxcd/kustomize-controller/pull/1023)\n- Update Kustomize to v5.3.0\n  [#1021](https://github.com/fluxcd/kustomize-controller/pull/1021)\n",
                    "rendered": {
                      "text": "Improvements:\n- Update source-controller to v1.2.2\n  [#1024](https://github.com/fluxcd/kustomize-controller/pull/1024)\n- build: update Alpine to 3.19\n  [#1023](https://github.com/fluxcd/kustomize-controller/pull/1023)\n- Update Kustomize to v5.3.0\n  [#1021](https://github.com/fluxcd/kustomize-controller/pull/1021)\n",
                      "markdown": "`Improvements:\n- Update source-controller to v1.2.2\n  [#1024](https://github.com/fluxcd/kustomize-controller/pull/1024)\n- build: update Alpine to 3.19\n  [#1023](https://github.com/fluxcd/kustomize-controller/pull/1023)\n- Update Kustomize to v5.3.0\n  [#1021](https://github.com/fluxcd/kustomize-controller/pull/1021)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 181,
                  "startColumn": 1,
                  "endLine": 181,
                  "endColumn": 9,
                  "snippet": {
                    "text": "The container base image has been updated to Alpine 3.19.\n\nImprovements:\n- Update source-controller to v1.2.2\n  [#1024](https://github.com/fluxcd/kustomize-controller/pull/1024)\n- build: update Alpine to 3.19\n  [#1023](https://github.com/fluxcd/kustomize-controller/pull/1023)\n",
                    "rendered": {
                      "text": "The container base image has been updated to Alpine 3.19.\n\nImprovements:\n- Update source-controller to v1.2.2\n  [#1024](https://github.com/fluxcd/kustomize-controller/pull/1024)\n- build: update Alpine to 3.19\n  [#1023](https://github.com/fluxcd/kustomize-controller/pull/1023)\n",
                      "markdown": "`The container base image has been updated to Alpine 3.19.\n\nImprovements:\n- Update source-controller to v1.2.2\n  [#1024](https://github.com/fluxcd/kustomize-controller/pull/1024)\n- build: update Alpine to 3.19\n  [#1023](https://github.com/fluxcd/kustomize-controller/pull/1023)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 177,
                  "startColumn": 72,
                  "endLine": 177,
                  "endColumn": 80,
                  "snippet": {
                    "text": "Using this flag, cluster administrators can configure the controller to undo changes\nmade with Lens and other UI tools that directly modify Kubernetes objects on clusters.\n\nIn addition, the controller dependencies have been updated, including an update to Kubernetes v1.28.\nThe container base image has been updated to Alpine 3.19.\n\nImprovements:\n",
                    "rendered": {
                      "text": "Using this flag, cluster administrators can configure the controller to undo changes\nmade with Lens and other UI tools that directly modify Kubernetes objects on clusters.\n\nIn addition, the controller dependencies have been updated, including an update to Kubernetes v1.28.\nThe container base image has been updated to Alpine 3.19.\n\nImprovements:\n",
                      "markdown": "`Using this flag, cluster administrators can configure the controller to undo changes\nmade with Lens and other UI tools that directly modify Kubernetes objects on clusters.\n\nIn addition, the controller dependencies have been updated, including an update to Kubernetes v1.28.\nThe container base image has been updated to Alpine 3.19.\n\nImprovements:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 1,
                  "endLine": 155,
                  "endColumn": 9,
                  "snippet": {
                    "text": "limit defined by the API.\n\nImprovements:\n- Update runtime to v0.43.3\n  [#1031](https://github.com/fluxcd/kustomize-controller/pull/1031)\n- Log HTTP errors to provide faster feedback\n  [#1028](https://github.com/fluxcd/kustomize-controller/pull/1028)\n",
                    "rendered": {
                      "text": "limit defined by the API.\n\nImprovements:\n- Update runtime to v0.43.3\n  [#1031](https://github.com/fluxcd/kustomize-controller/pull/1031)\n- Log HTTP errors to provide faster feedback\n  [#1028](https://github.com/fluxcd/kustomize-controller/pull/1028)\n",
                      "markdown": "`limit defined by the API.\n\nImprovements:\n- Update runtime to v0.43.3\n  [#1031](https://github.com/fluxcd/kustomize-controller/pull/1031)\n- Log HTTP errors to provide faster feedback\n  [#1028](https://github.com/fluxcd/kustomize-controller/pull/1028)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 127,
                  "startColumn": 1,
                  "endLine": 127,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Lastly, the controller is now built with Go 1.21.\n\nImprovements:\n- Update Go to 1.21\n  [#1053](https://github.com/fluxcd/kustomize-controller/pull/1053)\n- Various dependency updates\n  [#1076](https://github.com/fluxcd/kustomize-controller/pull/1076)\n",
                    "rendered": {
                      "text": "Lastly, the controller is now built with Go 1.21.\n\nImprovements:\n- Update Go to 1.21\n  [#1053](https://github.com/fluxcd/kustomize-controller/pull/1053)\n- Various dependency updates\n  [#1076](https://github.com/fluxcd/kustomize-controller/pull/1076)\n",
                      "markdown": "`Lastly, the controller is now built with Go 1.21.\n\nImprovements:\n- Update Go to 1.21\n  [#1053](https://github.com/fluxcd/kustomize-controller/pull/1053)\n- Various dependency updates\n  [#1076](https://github.com/fluxcd/kustomize-controller/pull/1076)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 1,
                  "endLine": 88,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#1152](https://github.com/fluxcd/kustomize-controller/pull/1152)\n- api: Refer condition type constants from `fluxcd/pkg/apis`\n  [#1144](https://github.com/fluxcd/kustomize-controller/pull/1144)\n- Update dependencies to Kustomize v5.4.0\n  [#1128](https://github.com/fluxcd/kustomize-controller/pull/1128)\n- Various dependency updates\n  [#1155](https://github.com/fluxcd/kustomize-controller/pull/1155)\n",
                    "rendered": {
                      "text": "  [#1152](https://github.com/fluxcd/kustomize-controller/pull/1152)\n- api: Refer condition type constants from `fluxcd/pkg/apis`\n  [#1144](https://github.com/fluxcd/kustomize-controller/pull/1144)\n- Update dependencies to Kustomize v5.4.0\n  [#1128](https://github.com/fluxcd/kustomize-controller/pull/1128)\n- Various dependency updates\n  [#1155](https://github.com/fluxcd/kustomize-controller/pull/1155)\n",
                      "markdown": "`  [#1152](https://github.com/fluxcd/kustomize-controller/pull/1152)\n- api: Refer condition type constants from `fluxcd/pkg/apis`\n  [#1144](https://github.com/fluxcd/kustomize-controller/pull/1144)\n- Update dependencies to Kustomize v5.4.0\n  [#1128](https://github.com/fluxcd/kustomize-controller/pull/1128)\n- Various dependency updates\n  [#1155](https://github.com/fluxcd/kustomize-controller/pull/1155)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 1,
                  "endLine": 26,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#1198](https://github.com/fluxcd/kustomize-controller/pull/1198)\n\nImprovements:\n- Update Bucket API to v1\n  [#1253](https://github.com/fluxcd/kustomize-controller/pull/1253)\n- Allow cross-shard dependency check\n  [#1248](https://github.com/fluxcd/kustomize-controller/pull/1248)\n",
                    "rendered": {
                      "text": "  [#1198](https://github.com/fluxcd/kustomize-controller/pull/1198)\n\nImprovements:\n- Update Bucket API to v1\n  [#1253](https://github.com/fluxcd/kustomize-controller/pull/1253)\n- Allow cross-shard dependency check\n  [#1248](https://github.com/fluxcd/kustomize-controller/pull/1248)\n",
                      "markdown": "`  [#1198](https://github.com/fluxcd/kustomize-controller/pull/1198)\n\nImprovements:\n- Update Bucket API to v1\n  [#1253](https://github.com/fluxcd/kustomize-controller/pull/1253)\n- Allow cross-shard dependency check\n  [#1248](https://github.com/fluxcd/kustomize-controller/pull/1248)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2225,
                  "startColumn": 68,
                  "endLine": 2225,
                  "endColumn": 77,
                  "snippet": {
                    "text": "\nThis alpha release comes with\n[role-based access control](https://github.com/fluxcd/kustomize-controller/blob/v0.0.1-alpha.6/docs/spec/v1alpha1/kustomization.md#role-based-access-control)\nfor restricting the execution of a kustomization apply to a specific service account.\n\n## 0.0.1-alpha.5\n\n",
                    "rendered": {
                      "text": "\nThis alpha release comes with\n[role-based access control](https://github.com/fluxcd/kustomize-controller/blob/v0.0.1-alpha.6/docs/spec/v1alpha1/kustomization.md#role-based-access-control)\nfor restricting the execution of a kustomization apply to a specific service account.\n\n## 0.0.1-alpha.5\n\n",
                      "markdown": "`\nThis alpha release comes with\n[role-based access control](https://github.com/fluxcd/kustomize-controller/blob/v0.0.1-alpha.6/docs/spec/v1alpha1/kustomization.md#role-based-access-control)\nfor restricting the execution of a kustomization apply to a specific service account.\n\n## 0.0.1-alpha.5\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2137,
                  "startColumn": 3,
                  "endLine": 2137,
                  "endColumn": 12,
                  "snippet": {
                    "text": "**Release date:** 2020-07-25\n\nThis prerelease comes with improvements to the dependency management\nand service account impersonation.\n\n## 0.0.5\n\n",
                    "rendered": {
                      "text": "**Release date:** 2020-07-25\n\nThis prerelease comes with improvements to the dependency management\nand service account impersonation.\n\n## 0.0.5\n\n",
                      "markdown": "`**Release date:** 2020-07-25\n\nThis prerelease comes with improvements to the dependency management\nand service account impersonation.\n\n## 0.0.5\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2098,
                  "startColumn": 40,
                  "endLine": 2098,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\n**Release date:** 2020-09-12\n\nThis prerelease comes with the option to watch for resources\nin the runtime namespace of the controller or at cluster level.\n\n## 0.0.10\n",
                    "rendered": {
                      "text": "\n**Release date:** 2020-09-12\n\nThis prerelease comes with the option to watch for resources\nin the runtime namespace of the controller or at cluster level.\n\n## 0.0.10\n",
                      "markdown": "`\n**Release date:** 2020-09-12\n\nThis prerelease comes with the option to watch for resources\nin the runtime namespace of the controller or at cluster level.\n\n## 0.0.10\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1957,
                  "startColumn": 57,
                  "endLine": 1957,
                  "endColumn": 66,
                  "snippet": {
                    "text": "\nThis is the third MINOR prerelease. It introduces two breaking changes:\n* the `ServiceAccount` field has been removed and replaced by `ServiceAccountName`;\n    it is no longer possible to specify a namespace for a service account,\n    the namespace is inferred from the Kustomization namespace \n* the status condition type has changed to the type introduced in Kubernetes API machinery `v1.19.0`\n\n",
                    "rendered": {
                      "text": "\nThis is the third MINOR prerelease. It introduces two breaking changes:\n* the `ServiceAccount` field has been removed and replaced by `ServiceAccountName`;\n    it is no longer possible to specify a namespace for a service account,\n    the namespace is inferred from the Kustomization namespace \n* the status condition type has changed to the type introduced in Kubernetes API machinery `v1.19.0`\n\n",
                      "markdown": "`\nThis is the third MINOR prerelease. It introduces two breaking changes:\n* the `ServiceAccount` field has been removed and replaced by `ServiceAccountName`;\n    it is no longer possible to specify a namespace for a service account,\n    the namespace is inferred from the Kustomization namespace \n* the status condition type has changed to the type introduced in Kubernetes API machinery `v1.19.0`\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1870,
                  "startColumn": 32,
                  "endLine": 1870,
                  "endColumn": 41,
                  "snippet": {
                    "text": "  [#231](https://github.com/fluxcd/kustomize-controller/pull/231)\n* Update kustomize/api to v0.7.1\n  [#229](https://github.com/fluxcd/kustomize-controller/pull/229)\n* Run GC and health checks using service account impersonation\n  [#221](https://github.com/fluxcd/kustomize-controller/pull/221)\n\nFixes:\n",
                    "rendered": {
                      "text": "  [#231](https://github.com/fluxcd/kustomize-controller/pull/231)\n* Update kustomize/api to v0.7.1\n  [#229](https://github.com/fluxcd/kustomize-controller/pull/229)\n* Run GC and health checks using service account impersonation\n  [#221](https://github.com/fluxcd/kustomize-controller/pull/221)\n\nFixes:\n",
                      "markdown": "`  [#231](https://github.com/fluxcd/kustomize-controller/pull/231)\n* Update kustomize/api to v0.7.1\n  [#229](https://github.com/fluxcd/kustomize-controller/pull/229)\n* Run GC and health checks using service account impersonation\n  [#221](https://github.com/fluxcd/kustomize-controller/pull/221)\n\nFixes:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1769,
                  "startColumn": 39,
                  "endLine": 1769,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\n**Release date:** 2021-01-26\n\nThis prerelease comes with a fix to the service account impersonation\nwhen running health checks and garbage collection.\n\nFixes:\n",
                    "rendered": {
                      "text": "\n**Release date:** 2021-01-26\n\nThis prerelease comes with a fix to the service account impersonation\nwhen running health checks and garbage collection.\n\nFixes:\n",
                      "markdown": "`\n**Release date:** 2021-01-26\n\nThis prerelease comes with a fix to the service account impersonation\nwhen running health checks and garbage collection.\n\nFixes:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1759,
                  "startColumn": 30,
                  "endLine": 1759,
                  "endColumn": 39,
                  "snippet": {
                    "text": "**Release date:** 2021-02-01\n\nThis prerelease comes with support for running the\nKustomization validation using service account impersonation.\n\nImprovements:\n* Support impersonation for validation\n",
                    "rendered": {
                      "text": "**Release date:** 2021-02-01\n\nThis prerelease comes with support for running the\nKustomization validation using service account impersonation.\n\nImprovements:\n* Support impersonation for validation\n",
                      "markdown": "`**Release date:** 2021-02-01\n\nThis prerelease comes with support for running the\nKustomization validation using service account impersonation.\n\nImprovements:\n* Support impersonation for validation\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1546,
                  "startColumn": 32,
                  "endLine": 1546,
                  "endColumn": 41,
                  "snippet": {
                    "text": "  [#342](https://github.com/fluxcd/kustomize-controller/pull/342)\n\nFixes:\n* Fix validation and application timeout handling\n  [#346](https://github.com/fluxcd/kustomize-controller/pull/346)\n\n## 0.12.0\n",
                    "rendered": {
                      "text": "  [#342](https://github.com/fluxcd/kustomize-controller/pull/342)\n\nFixes:\n* Fix validation and application timeout handling\n  [#346](https://github.com/fluxcd/kustomize-controller/pull/346)\n\n## 0.12.0\n",
                      "markdown": "`  [#342](https://github.com/fluxcd/kustomize-controller/pull/342)\n\nFixes:\n* Fix validation and application timeout handling\n  [#346](https://github.com/fluxcd/kustomize-controller/pull/346)\n\n## 0.12.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1537,
                  "startColumn": 54,
                  "endLine": 1537,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\n**Release date:** 2021-05-26\n\nThis prerelease comes with a fix to the reconciliation timeout handling.\n\nImprovements:\n* Update Go to v1.16\n",
                    "rendered": {
                      "text": "\n**Release date:** 2021-05-26\n\nThis prerelease comes with a fix to the reconciliation timeout handling.\n\nImprovements:\n* Update Go to v1.16\n",
                      "markdown": "`\n**Release date:** 2021-05-26\n\nThis prerelease comes with a fix to the reconciliation timeout handling.\n\nImprovements:\n* Update Go to v1.16\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1393,
                  "startColumn": 61,
                  "endLine": 1393,
                  "endColumn": 67,
                  "snippet": {
                    "text": "- `.spec.wait` added (when enabled, will wait for all the reconciled resources to become ready)\n- `.status.snapshot` replaced by `.status.inventory`\n\nUpdating the manifests in Git to `v1beta2` can be done at any time after the kustomize-controller upgrade.\nAll users are encouraged to update the manifests as the deprecated fields\nwill be removed when the next API version will be released.\n\n",
                    "rendered": {
                      "text": "- `.spec.wait` added (when enabled, will wait for all the reconciled resources to become ready)\n- `.status.snapshot` replaced by `.status.inventory`\n\nUpdating the manifests in Git to `v1beta2` can be done at any time after the kustomize-controller upgrade.\nAll users are encouraged to update the manifests as the deprecated fields\nwill be removed when the next API version will be released.\n\n",
                      "markdown": "`- `.spec.wait` added (when enabled, will wait for all the reconciled resources to become ready)\n- `.status.snapshot` replaced by `.status.inventory`\n\nUpdating the manifests in Git to `v1beta2` can be done at any time after the kustomize-controller upgrade.\nAll users are encouraged to update the manifests as the deprecated fields\nwill be removed when the next API version will be released.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1393,
                  "startColumn": 25,
                  "endLine": 1393,
                  "endColumn": 30,
                  "snippet": {
                    "text": "- `.spec.wait` added (when enabled, will wait for all the reconciled resources to become ready)\n- `.status.snapshot` replaced by `.status.inventory`\n\nUpdating the manifests in Git to `v1beta2` can be done at any time after the kustomize-controller upgrade.\nAll users are encouraged to update the manifests as the deprecated fields\nwill be removed when the next API version will be released.\n\n",
                    "rendered": {
                      "text": "- `.spec.wait` added (when enabled, will wait for all the reconciled resources to become ready)\n- `.status.snapshot` replaced by `.status.inventory`\n\nUpdating the manifests in Git to `v1beta2` can be done at any time after the kustomize-controller upgrade.\nAll users are encouraged to update the manifests as the deprecated fields\nwill be removed when the next API version will be released.\n\n",
                      "markdown": "`- `.spec.wait` added (when enabled, will wait for all the reconciled resources to become ready)\n- `.status.snapshot` replaced by `.status.inventory`\n\nUpdating the manifests in Git to `v1beta2` can be done at any time after the kustomize-controller upgrade.\nAll users are encouraged to update the manifests as the deprecated fields\nwill be removed when the next API version will be released.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1310,
                  "startColumn": 5,
                  "endLine": 1310,
                  "endColumn": 14,
                  "snippet": {
                    "text": "This prerelease comes with fixes to HPA and Service objects validation.\n\nFixes:\n* Fix Service and HPA v2beta1 validation\n  [#455](https://github.com/fluxcd/kustomize-controller/pull/455)\n\n## 0.15.3\n",
                    "rendered": {
                      "text": "This prerelease comes with fixes to HPA and Service objects validation.\n\nFixes:\n* Fix Service and HPA v2beta1 validation\n  [#455](https://github.com/fluxcd/kustomize-controller/pull/455)\n\n## 0.15.3\n",
                      "markdown": "`This prerelease comes with fixes to HPA and Service objects validation.\n\nFixes:\n* Fix Service and HPA v2beta1 validation\n  [#455](https://github.com/fluxcd/kustomize-controller/pull/455)\n\n## 0.15.3\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1307,
                  "startColumn": 43,
                  "endLine": 1307,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\n**Release date:** 2021-10-12\n\nThis prerelease comes with fixes to HPA and Service objects validation.\n\nFixes:\n* Fix Service and HPA v2beta1 validation\n",
                    "rendered": {
                      "text": "\n**Release date:** 2021-10-12\n\nThis prerelease comes with fixes to HPA and Service objects validation.\n\nFixes:\n* Fix Service and HPA v2beta1 validation\n",
                      "markdown": "`\n**Release date:** 2021-10-12\n\nThis prerelease comes with fixes to HPA and Service objects validation.\n\nFixes:\n* Fix Service and HPA v2beta1 validation\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1210,
                  "startColumn": 66,
                  "endLine": 1211,
                  "snippet": {
                    "text": "  [#512](https://github.com/fluxcd/kustomize-controller/pull/512)\n* Add test for replacing variables in secrets\n  [#505](https://github.com/fluxcd/kustomize-controller/pull/505)\n* Document behaviour when changes are made to fields not stored in git\n  [#501](https://github.com/fluxcd/kustomize-controller/pull/501)\n* SOPS: ensure proper wiring to default server\n  [#513](https://github.com/fluxcd/kustomize-controller/pull/513)\n\n",
                    "rendered": {
                      "text": "  [#512](https://github.com/fluxcd/kustomize-controller/pull/512)\n* Add test for replacing variables in secrets\n  [#505](https://github.com/fluxcd/kustomize-controller/pull/505)\n* Document behaviour when changes are made to fields not stored in git\n  [#501](https://github.com/fluxcd/kustomize-controller/pull/501)\n* SOPS: ensure proper wiring to default server\n  [#513](https://github.com/fluxcd/kustomize-controller/pull/513)\n\n",
                      "markdown": "`  [#512](https://github.com/fluxcd/kustomize-controller/pull/512)\n* Add test for replacing variables in secrets\n  [#505](https://github.com/fluxcd/kustomize-controller/pull/505)\n* Document behaviour when changes are made to fields not stored in git\n  [#501](https://github.com/fluxcd/kustomize-controller/pull/501)\n* SOPS: ensure proper wiring to default server\n  [#513](https://github.com/fluxcd/kustomize-controller/pull/513)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1192,
                  "startColumn": 9,
                  "endLine": 1192,
                  "endColumn": 15,
                  "snippet": {
                    "text": "  [#521](https://github.com/fluxcd/kustomize-controller/pull/521)\n\nFixes:\n* Fix HPA diff (upstream bug)\n  [#526](https://github.com/fluxcd/kustomize-controller/pull/526)\n* Fix inconsistent code-style raised at security audit\n  [#522](https://github.com/fluxcd/kustomize-controller/pull/522)\n",
                    "rendered": {
                      "text": "  [#521](https://github.com/fluxcd/kustomize-controller/pull/521)\n\nFixes:\n* Fix HPA diff (upstream bug)\n  [#526](https://github.com/fluxcd/kustomize-controller/pull/526)\n* Fix inconsistent code-style raised at security audit\n  [#522](https://github.com/fluxcd/kustomize-controller/pull/522)\n",
                      "markdown": "`  [#521](https://github.com/fluxcd/kustomize-controller/pull/521)\n\nFixes:\n* Fix HPA diff (upstream bug)\n  [#526](https://github.com/fluxcd/kustomize-controller/pull/526)\n* Fix inconsistent code-style raised at security audit\n  [#522](https://github.com/fluxcd/kustomize-controller/pull/522)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1134,
                  "startColumn": 25,
                  "endLine": 1134,
                  "endColumn": 34,
                  "snippet": {
                    "text": "  the service account on the target cluster, previously the controller ignored the service account.\n\nFeatures:\n- Allow setting a default service account for impersonation\n  [#550](https://github.com/fluxcd/kustomize-controller/pull/550)\n- Allow disabling cross-namespace references\n  [#549](https://github.com/fluxcd/kustomize-controller/pull/549)\n",
                    "rendered": {
                      "text": "  the service account on the target cluster, previously the controller ignored the service account.\n\nFeatures:\n- Allow setting a default service account for impersonation\n  [#550](https://github.com/fluxcd/kustomize-controller/pull/550)\n- Allow disabling cross-namespace references\n  [#549](https://github.com/fluxcd/kustomize-controller/pull/549)\n",
                      "markdown": "`  the service account on the target cluster, previously the controller ignored the service account.\n\nFeatures:\n- Allow setting a default service account for impersonation\n  [#550](https://github.com/fluxcd/kustomize-controller/pull/550)\n- Allow disabling cross-namespace references\n  [#549](https://github.com/fluxcd/kustomize-controller/pull/549)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1131,
                  "startColumn": 82,
                  "endLine": 1131,
                  "endColumn": 91,
                  "snippet": {
                    "text": "- The controller container is now executed under 65534:65534 (userid:groupid).\n  This change may break deployments that hard-coded the user ID of 'controller' in their PodSecurityPolicy.\n- When both `spec.kubeConfig` and `spec.ServiceAccountName` are specified, the controller will impersonate\n  the service account on the target cluster, previously the controller ignored the service account.\n\nFeatures:\n- Allow setting a default service account for impersonation\n",
                    "rendered": {
                      "text": "- The controller container is now executed under 65534:65534 (userid:groupid).\n  This change may break deployments that hard-coded the user ID of 'controller' in their PodSecurityPolicy.\n- When both `spec.kubeConfig` and `spec.ServiceAccountName` are specified, the controller will impersonate\n  the service account on the target cluster, previously the controller ignored the service account.\n\nFeatures:\n- Allow setting a default service account for impersonation\n",
                      "markdown": "`- The controller container is now executed under 65534:65534 (userid:groupid).\n  This change may break deployments that hard-coded the user ID of 'controller' in their PodSecurityPolicy.\n- When both `spec.kubeConfig` and `spec.ServiceAccountName` are specified, the controller will impersonate\n  the service account on the target cluster, previously the controller ignored the service account.\n\nFeatures:\n- Allow setting a default service account for impersonation\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1131,
                  "startColumn": 5,
                  "endLine": 1131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "- The controller container is now executed under 65534:65534 (userid:groupid).\n  This change may break deployments that hard-coded the user ID of 'controller' in their PodSecurityPolicy.\n- When both `spec.kubeConfig` and `spec.ServiceAccountName` are specified, the controller will impersonate\n  the service account on the target cluster, previously the controller ignored the service account.\n\nFeatures:\n- Allow setting a default service account for impersonation\n",
                    "rendered": {
                      "text": "- The controller container is now executed under 65534:65534 (userid:groupid).\n  This change may break deployments that hard-coded the user ID of 'controller' in their PodSecurityPolicy.\n- When both `spec.kubeConfig` and `spec.ServiceAccountName` are specified, the controller will impersonate\n  the service account on the target cluster, previously the controller ignored the service account.\n\nFeatures:\n- Allow setting a default service account for impersonation\n",
                      "markdown": "`- The controller container is now executed under 65534:65534 (userid:groupid).\n  This change may break deployments that hard-coded the user ID of 'controller' in their PodSecurityPolicy.\n- When both `spec.kubeConfig` and `spec.ServiceAccountName` are specified, the controller will impersonate\n  the service account on the target cluster, previously the controller ignored the service account.\n\nFeatures:\n- Allow setting a default service account for impersonation\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1109,
                  "startColumn": 9,
                  "endLine": 1109,
                  "endColumn": 18,
                  "snippet": {
                    "text": "-02-01\n\nThis prerelease comes with security improvements for multi-tenant clusters:\n- Platform admins can enforce impersonation across the cluster using the `--default-service-account` flag.\n  When the flag is set, all `Kustomizations`, which don't have `spec.serviceAccountName` specified,\n  use the service account name provided by `--default-service-account=<SA Name>` in the namespace of the object.\n- Platform admins can disable cross-namespace references with the `--no-cross-namespace-refs=true` flag.\n  When this flag is set, `Kustomizations` can only refer to sources (`GitRepositories` and `Buckets`",
                    "rendered": {
                      "text": "-02-01\n\nThis prerelease comes with security improvements for multi-tenant clusters:\n- Platform admins can enforce impersonation across the cluster using the `--default-service-account` flag.\n  When the flag is set, all `Kustomizations`, which don't have `spec.serviceAccountName` specified,\n  use the service account name provided by `--default-service-account=<SA Name>` in the namespace of the object.\n- Platform admins can disable cross-namespace references with the `--no-cross-namespace-refs=true` flag.\n  When this flag is set, `Kustomizations` can only refer to sources (`GitRepositories` and `Buckets`",
                      "markdown": "`-02-01\n\nThis prerelease comes with security improvements for multi-tenant clusters:\n- Platform admins can enforce impersonation across the cluster using the `--default-service-account` flag.\n  When the flag is set, all `Kustomizations`, which don't have `spec.serviceAccountName` specified,\n  use the service account name provided by `--default-service-account=<SA Name>` in the namespace of the object.\n- Platform admins can disable cross-namespace references with the `--no-cross-namespace-refs=true` flag.\n  When this flag is set, `Kustomizations` can only refer to sources (`GitRepositories` and `Buckets``"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1077,
                  "startColumn": 7,
                  "endLine": 1077,
                  "endColumn": 12,
                  "snippet": {
                    "text": "bringing the controller on par with the Kustomize v4.5.2 release.\n\nKustomize v4.5.2 contains a regression bug fix for\n[pseudo git HTTP URLs](https://github.com/kubernetes-sigs/kustomize/pull/4453).\n\nImprovements:\n- Update controller to kustomize v4.5.2\n",
                    "rendered": {
                      "text": "bringing the controller on par with the Kustomize v4.5.2 release.\n\nKustomize v4.5.2 contains a regression bug fix for\n[pseudo git HTTP URLs](https://github.com/kubernetes-sigs/kustomize/pull/4453).\n\nImprovements:\n- Update controller to kustomize v4.5.2\n",
                      "markdown": "`bringing the controller on par with the Kustomize v4.5.2 release.\n\nKustomize v4.5.2 contains a regression bug fix for\n[pseudo git HTTP URLs](https://github.com/kubernetes-sigs/kustomize/pull/4453).\n\nImprovements:\n- Update controller to kustomize v4.5.2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 762,
                  "startColumn": 20,
                  "endLine": 762,
                  "endColumn": 29,
                  "snippet": {
                    "text": "**Release date:** 2022-06-29\n\nThis prerelease adds support for health checking Kubernetes Jobs \nwhen impersonating a service account.\n\nFixes:\n- Fix job wait by adding polling options to impersonation client\n",
                    "rendered": {
                      "text": "**Release date:** 2022-06-29\n\nThis prerelease adds support for health checking Kubernetes Jobs \nwhen impersonating a service account.\n\nFixes:\n- Fix job wait by adding polling options to impersonation client\n",
                      "markdown": "`**Release date:** 2022-06-29\n\nThis prerelease adds support for health checking Kubernetes Jobs \nwhen impersonating a service account.\n\nFixes:\n- Fix job wait by adding polling options to impersonation client\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 689,
                  "startColumn": 1,
                  "endLine": 689,
                  "endColumn": 7,
                  "snippet": {
                    "text": "  [#718](https://github.com/fluxcd/kustomize-controller/pull/718)\n- Reconcile Kubernetes class type objects in a dedicated stage\n  [#720](https://github.com/fluxcd/kustomize-controller/pull/720)\n- Sort SOPS masterkeys so offline decrypt methods are tried first\n  [#726](https://github.com/fluxcd/kustomize-controller/pull/726)\n- SOPS: Update the AWS SDK for KMS\n  [#721](https://github.com/fluxcd/kustomize-controller/pull/721)\n",
                    "rendered": {
                      "text": "  [#718](https://github.com/fluxcd/kustomize-controller/pull/718)\n- Reconcile Kubernetes class type objects in a dedicated stage\n  [#720](https://github.com/fluxcd/kustomize-controller/pull/720)\n- Sort SOPS masterkeys so offline decrypt methods are tried first\n  [#726](https://github.com/fluxcd/kustomize-controller/pull/726)\n- SOPS: Update the AWS SDK for KMS\n  [#721](https://github.com/fluxcd/kustomize-controller/pull/721)\n",
                      "markdown": "`  [#718](https://github.com/fluxcd/kustomize-controller/pull/718)\n- Reconcile Kubernetes class type objects in a dedicated stage\n  [#720](https://github.com/fluxcd/kustomize-controller/pull/720)\n- Sort SOPS masterkeys so offline decrypt methods are tried first\n  [#726](https://github.com/fluxcd/kustomize-controller/pull/726)\n- SOPS: Update the AWS SDK for KMS\n  [#721](https://github.com/fluxcd/kustomize-controller/pull/721)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 650,
                  "startColumn": 36,
                  "endLine": 650,
                  "endColumn": 45,
                  "snippet": {
                    "text": "(time) duration. Effectively, this means values without a time unit (e.g. `ms`,\n`s`, `m`, `h`) will now be rejected by the API server. To stimulate sane\nconfigurations, the units `ns`, `us` and `µs` can no longer be configured, nor\ncan `h` be set for fields defining a timeout value.\n\nIn addition, the controller dependencies have been updated\nto Kubernetes controller-runtime v0.13.\n",
                    "rendered": {
                      "text": "(time) duration. Effectively, this means values without a time unit (e.g. `ms`,\n`s`, `m`, `h`) will now be rejected by the API server. To stimulate sane\nconfigurations, the units `ns`, `us` and `µs` can no longer be configured, nor\ncan `h` be set for fields defining a timeout value.\n\nIn addition, the controller dependencies have been updated\nto Kubernetes controller-runtime v0.13.\n",
                      "markdown": "`(time) duration. Effectively, this means values without a time unit (e.g. `ms`,\n`s`, `m`, `h`) will now be rejected by the API server. To stimulate sane\nconfigurations, the units `ns`, `us` and `µs` can no longer be configured, nor\ncan `h` be set for fields defining a timeout value.\n\nIn addition, the controller dependencies have been updated\nto Kubernetes controller-runtime v0.13.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 647,
                  "startColumn": 57,
                  "endLine": 647,
                  "endColumn": 63,
                  "snippet": {
                    "text": "**Release date:** 2022-09-29\n\nThis prerelease comes with strict validation rules for API fields which define a\n(time) duration. Effectively, this means values without a time unit (e.g. `ms`,\n`s`, `m`, `h`) will now be rejected by the API server. To stimulate sane\nconfigurations, the units `ns`, `us` and `µs` can no longer be configured, nor\ncan `h` be set for fields defining a timeout value.\n",
                    "rendered": {
                      "text": "**Release date:** 2022-09-29\n\nThis prerelease comes with strict validation rules for API fields which define a\n(time) duration. Effectively, this means values without a time unit (e.g. `ms`,\n`s`, `m`, `h`) will now be rejected by the API server. To stimulate sane\nconfigurations, the units `ns`, `us` and `µs` can no longer be configured, nor\ncan `h` be set for fields defining a timeout value.\n",
                      "markdown": "`**Release date:** 2022-09-29\n\nThis prerelease comes with strict validation rules for API fields which define a\n(time) duration. Effectively, this means values without a time unit (e.g. `ms`,\n`s`, `m`, `h`) will now be rejected by the API server. To stimulate sane\nconfigurations, the units `ns`, `us` and `µs` can no longer be configured, nor\ncan `h` be set for fields defining a timeout value.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 564,
                  "startColumn": 17,
                  "endLine": 564,
                  "endColumn": 25,
                  "snippet": {
                    "text": "  [#780](https://github.com/fluxcd/kustomize-controller/pull/780)\n- Document the behaviour of atomic fields with server-side apply\n  [#774](https://github.com/fluxcd/kustomize-controller/pull/774)\n- fuzz: Use build script from upstream and fix fuzzers\n  [#777](https://github.com/fluxcd/kustomize-controller/pull/777)\n- build: Fix cifuzz tests and improve fuzz tests' reliability\n  [#771](https://github.com/fluxcd/kustomize-controller/pull/771)\n",
                    "rendered": {
                      "text": "  [#780](https://github.com/fluxcd/kustomize-controller/pull/780)\n- Document the behaviour of atomic fields with server-side apply\n  [#774](https://github.com/fluxcd/kustomize-controller/pull/774)\n- fuzz: Use build script from upstream and fix fuzzers\n  [#777](https://github.com/fluxcd/kustomize-controller/pull/777)\n- build: Fix cifuzz tests and improve fuzz tests' reliability\n  [#771](https://github.com/fluxcd/kustomize-controller/pull/771)\n",
                      "markdown": "`  [#780](https://github.com/fluxcd/kustomize-controller/pull/780)\n- Document the behaviour of atomic fields with server-side apply\n  [#774](https://github.com/fluxcd/kustomize-controller/pull/774)\n- fuzz: Use build script from upstream and fix fuzzers\n  [#777](https://github.com/fluxcd/kustomize-controller/pull/777)\n- build: Fix cifuzz tests and improve fuzz tests' reliability\n  [#771](https://github.com/fluxcd/kustomize-controller/pull/771)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 408,
                  "startColumn": 65,
                  "endLine": 408,
                  "endColumn": 74,
                  "snippet": {
                    "text": "[commonLabels](https://kubectl.docs.kubernetes.io/references/kustomize/kustomization/commonlabels/) and\n[commonAnnotations](https://kubectl.docs.kubernetes.io/references/kustomize/kustomization/commonannotations/),\nis that the controller sets the labels and annotations only to the top level `metadata` field,\nwithout patching the Kubernetes Deployment `spec.template` or the Service `spec.selector`.\n\nThe `kustomizations.kustomize.toolkit.fluxcd.io` CRD contains the following versions:\n- v1 (storage version)\n",
                    "rendered": {
                      "text": "[commonLabels](https://kubectl.docs.kubernetes.io/references/kustomize/kustomization/commonlabels/) and\n[commonAnnotations](https://kubectl.docs.kubernetes.io/references/kustomize/kustomization/commonannotations/),\nis that the controller sets the labels and annotations only to the top level `metadata` field,\nwithout patching the Kubernetes Deployment `spec.template` or the Service `spec.selector`.\n\nThe `kustomizations.kustomize.toolkit.fluxcd.io` CRD contains the following versions:\n- v1 (storage version)\n",
                      "markdown": "`[commonLabels](https://kubectl.docs.kubernetes.io/references/kustomize/kustomization/commonlabels/) and\n[commonAnnotations](https://kubectl.docs.kubernetes.io/references/kustomize/kustomization/commonannotations/),\nis that the controller sets the labels and annotations only to the top level `metadata` field,\nwithout patching the Kubernetes Deployment `spec.template` or the Service `spec.selector`.\n\nThe `kustomizations.kustomize.toolkit.fluxcd.io` CRD contains the following versions:\n- v1 (storage version)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 407,
                  "startColumn": 66,
                  "endLine": 407,
                  "endColumn": 71,
                  "snippet": {
                    "text": "The main difference to the Kustomize\n[commonLabels](https://kubectl.docs.kubernetes.io/references/kustomize/kustomization/commonlabels/) and\n[commonAnnotations](https://kubectl.docs.kubernetes.io/references/kustomize/kustomization/commonannotations/),\nis that the controller sets the labels and annotations only to the top level `metadata` field,\nwithout patching the Kubernetes Deployment `spec.template` or the Service `spec.selector`.\n\nThe `kustomizations.kustomize.toolkit.fluxcd.io` CRD contains the following versions:\n",
                    "rendered": {
                      "text": "The main difference to the Kustomize\n[commonLabels](https://kubectl.docs.kubernetes.io/references/kustomize/kustomization/commonlabels/) and\n[commonAnnotations](https://kubectl.docs.kubernetes.io/references/kustomize/kustomization/commonannotations/),\nis that the controller sets the labels and annotations only to the top level `metadata` field,\nwithout patching the Kubernetes Deployment `spec.template` or the Service `spec.selector`.\n\nThe `kustomizations.kustomize.toolkit.fluxcd.io` CRD contains the following versions:\n",
                      "markdown": "`The main difference to the Kustomize\n[commonLabels](https://kubectl.docs.kubernetes.io/references/kustomize/kustomization/commonlabels/) and\n[commonAnnotations](https://kubectl.docs.kubernetes.io/references/kustomize/kustomization/commonannotations/),\nis that the controller sets the labels and annotations only to the top level `metadata` field,\nwithout patching the Kubernetes Deployment `spec.template` or the Service `spec.selector`.\n\nThe `kustomizations.kustomize.toolkit.fluxcd.io` CRD contains the following versions:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 1354,
                  "startColumn": 12,
                  "endLine": 1354,
                  "endColumn": 21,
                  "snippet": {
                    "text": "              key: awsSecretAccessKey\n        - name: AWS_SESSION_TOKEN\n          valueFrom:\n            secretKeyRef:\n              name: aws-creds\n              key: awsSessionToken\n```\n",
                    "rendered": {
                      "text": "              key: awsSecretAccessKey\n        - name: AWS_SESSION_TOKEN\n          valueFrom:\n            secretKeyRef:\n              name: aws-creds\n              key: awsSessionToken\n```\n",
                      "markdown": "`              key: awsSecretAccessKey\n        - name: AWS_SESSION_TOKEN\n          valueFrom:\n            secretKeyRef:\n              name: aws-creds\n              key: awsSessionToken\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 1349,
                  "startColumn": 12,
                  "endLine": 1349,
                  "endColumn": 21,
                  "snippet": {
                    "text": "              key: awsAccessKeyID\n        - name: AWS_SECRET_ACCESS_KEY\n          valueFrom:\n            secretKeyRef:\n              name: aws-creds\n              key: awsSecretAccessKey\n        - name: AWS_SESSION_TOKEN\n",
                    "rendered": {
                      "text": "              key: awsAccessKeyID\n        - name: AWS_SECRET_ACCESS_KEY\n          valueFrom:\n            secretKeyRef:\n              name: aws-creds\n              key: awsSecretAccessKey\n        - name: AWS_SESSION_TOKEN\n",
                      "markdown": "`              key: awsAccessKeyID\n        - name: AWS_SECRET_ACCESS_KEY\n          valueFrom:\n            secretKeyRef:\n              name: aws-creds\n              key: awsSecretAccessKey\n        - name: AWS_SESSION_TOKEN\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 1344,
                  "startColumn": 12,
                  "endLine": 1344,
                  "endColumn": 21,
                  "snippet": {
                    "text": "        env:\n        - name: AWS_ACCESS_KEY_ID\n          valueFrom:\n            secretKeyRef:\n              name: aws-creds\n              key: awsAccessKeyID\n        - name: AWS_SECRET_ACCESS_KEY\n",
                    "rendered": {
                      "text": "        env:\n        - name: AWS_ACCESS_KEY_ID\n          valueFrom:\n            secretKeyRef:\n              name: aws-creds\n              key: awsAccessKeyID\n        - name: AWS_SECRET_ACCESS_KEY\n",
                      "markdown": "`        env:\n        - name: AWS_ACCESS_KEY_ID\n          valueFrom:\n            secretKeyRef:\n              name: aws-creds\n              key: awsAccessKeyID\n        - name: AWS_SECRET_ACCESS_KEY\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 961,
                  "startColumn": 7,
                  "endLine": 961,
                  "endColumn": 18,
                  "snippet": {
                    "text": "      \"type\": \"service_account\",\n      \"project_id\": \"<project-id>\",\n      \"private_key_id\": \"<private-key-id>\",\n      \"private_key\": \"<private-key>\"\n    }\n```\n\n",
                    "rendered": {
                      "text": "      \"type\": \"service_account\",\n      \"project_id\": \"<project-id>\",\n      \"private_key_id\": \"<private-key-id>\",\n      \"private_key\": \"<private-key>\"\n    }\n```\n\n",
                      "markdown": "`      \"type\": \"service_account\",\n      \"project_id\": \"<project-id>\",\n      \"private_key_id\": \"<private-key-id>\",\n      \"private_key\": \"<private-key>\"\n    }\n```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 960,
                  "startColumn": 7,
                  "endLine": 960,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    {\n      \"type\": \"service_account\",\n      \"project_id\": \"<project-id>\",\n      \"private_key_id\": \"<private-key-id>\",\n      \"private_key\": \"<private-key>\"\n    }\n```\n",
                    "rendered": {
                      "text": "    {\n      \"type\": \"service_account\",\n      \"project_id\": \"<project-id>\",\n      \"private_key_id\": \"<private-key-id>\",\n      \"private_key\": \"<private-key>\"\n    }\n```\n",
                      "markdown": "`    {\n      \"type\": \"service_account\",\n      \"project_id\": \"<project-id>\",\n      \"private_key_id\": \"<private-key-id>\",\n      \"private_key\": \"<private-key>\"\n    }\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 917,
                  "startColumn": 7,
                  "endLine": 917,
                  "endColumn": 15,
                  "snippet": {
                    "text": "      \"appId\": \"559513bd-0c19-4c1a-87cd-851a26afd5fc\",\n      \"displayName\": \"myAKSClusterServicePrincipal\",\n      \"name\": \"http://myAKSClusterServicePrincipal\",\n      \"password\": \"e763725a-5eee-40e8-a466-dc88d980f415\",\n      \"tenant\": \"72f988bf-86f1-41af-91ab-2d7cd011db48\"\n    }\n```\n",
                    "rendered": {
                      "text": "      \"appId\": \"559513bd-0c19-4c1a-87cd-851a26afd5fc\",\n      \"displayName\": \"myAKSClusterServicePrincipal\",\n      \"name\": \"http://myAKSClusterServicePrincipal\",\n      \"password\": \"e763725a-5eee-40e8-a466-dc88d980f415\",\n      \"tenant\": \"72f988bf-86f1-41af-91ab-2d7cd011db48\"\n    }\n```\n",
                      "markdown": "`      \"appId\": \"559513bd-0c19-4c1a-87cd-851a26afd5fc\",\n      \"displayName\": \"myAKSClusterServicePrincipal\",\n      \"name\": \"http://myAKSClusterServicePrincipal\",\n      \"password\": \"e763725a-5eee-40e8-a466-dc88d980f415\",\n      \"tenant\": \"72f988bf-86f1-41af-91ab-2d7cd011db48\"\n    }\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 810,
                  "startColumn": 23,
                  "endLine": 810,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\n#### OpenPGP Secret entry\n\nTo specify an OpenPGP (passwordless) keyring in armor format in a Kubernetes\nSecret, suffix the key of the `.data` entry with `.asc`.\n\n```yaml\n",
                    "rendered": {
                      "text": "\n#### OpenPGP Secret entry\n\nTo specify an OpenPGP (passwordless) keyring in armor format in a Kubernetes\nSecret, suffix the key of the `.data` entry with `.asc`.\n\n```yaml\n",
                      "markdown": "`\n#### OpenPGP Secret entry\n\nTo specify an OpenPGP (passwordless) keyring in armor format in a Kubernetes\nSecret, suffix the key of the `.data` entry with `.asc`.\n\n```yaml\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 1534,
                  "startColumn": 15,
                  "endLine": 1534,
                  "endColumn": 22,
                  "snippet": {
                    "text": "secretGenerator:\n  - name: config\n    envs:\n      - config.env.encrypted\n```\n\nFor Docker config files, you need to specify both input and output type as JSON:\n",
                    "rendered": {
                      "text": "secretGenerator:\n  - name: config\n    envs:\n      - config.env.encrypted\n```\n\nFor Docker config files, you need to specify both input and output type as JSON:\n",
                      "markdown": "`secretGenerator:\n  - name: config\n    envs:\n      - config.env.encrypted\n```\n\nFor Docker config files, you need to specify both input and output type as JSON:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 1513,
                  "startColumn": 21,
                  "endLine": 1513,
                  "endColumn": 52,
                  "snippet": {
                    "text": "```sh\nsops -e --input-type=json config.json > config.json.encrypted\nsops -e --input-type=yaml config.yaml > config.yaml.encrypted\nsops -e --input-type=env config.env > config.env.encrypted\n```\n\nFor kustomize-controller to be able to decrypt a JSON config, you need to set\n",
                    "rendered": {
                      "text": "```sh\nsops -e --input-type=json config.json > config.json.encrypted\nsops -e --input-type=yaml config.yaml > config.yaml.encrypted\nsops -e --input-type=env config.env > config.env.encrypted\n```\n\nFor kustomize-controller to be able to decrypt a JSON config, you need to set\n",
                      "markdown": "````sh\nsops -e --input-type=json config.json > config.json.encrypted\nsops -e --input-type=yaml config.yaml > config.yaml.encrypted\nsops -e --input-type=env config.env > config.env.encrypted\n```\n\nFor kustomize-controller to be able to decrypt a JSON config, you need to set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 1484,
                  "startColumn": 39,
                  "endLine": 1484,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\n### Kustomize secretGenerator\n\nSOPS encrypted data can be stored as a base64 encoded Secret, which enables the\nuse of [Kustomize `secretGenerator`](https://github.com/kubernetes-sigs/kustomize/tree/main/examples/secretGeneratorPlugin.md)\nas follows:\n\n",
                    "rendered": {
                      "text": "\n### Kustomize secretGenerator\n\nSOPS encrypted data can be stored as a base64 encoded Secret, which enables the\nuse of [Kustomize `secretGenerator`](https://github.com/kubernetes-sigs/kustomize/tree/main/examples/secretGeneratorPlugin.md)\nas follows:\n\n",
                      "markdown": "`\n### Kustomize secretGenerator\n\nSOPS encrypted data can be stored as a base64 encoded Secret, which enables the\nuse of [Kustomize `secretGenerator`](https://github.com/kubernetes-sigs/kustomize/tree/main/examples/secretGeneratorPlugin.md)\nas follows:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 979,
                  "startColumn": 21,
                  "endLine": 979,
                  "endColumn": 27,
                  "snippet": {
                    "text": "  namespace: default\ndata:\n  # Exemplary Hashicorp Vault Secret token\n  sops.vault-token: <BASE64>\n```\n\n## Working with Kustomizations\n",
                    "rendered": {
                      "text": "  namespace: default\ndata:\n  # Exemplary Hashicorp Vault Secret token\n  sops.vault-token: <BASE64>\n```\n\n## Working with Kustomizations\n",
                      "markdown": "`  namespace: default\ndata:\n  # Exemplary Hashicorp Vault Secret token\n  sops.vault-token: <BASE64>\n```\n\n## Working with Kustomizations\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 822,
                  "startColumn": 17,
                  "endLine": 822,
                  "endColumn": 23,
                  "snippet": {
                    "text": "  namespace: default\ndata:\n  # Exemplary OpenPGP keyring\n  identity.asc: <BASE64>\n```\n\n#### AWS KMS Secret entry\n",
                    "rendered": {
                      "text": "  namespace: default\ndata:\n  # Exemplary OpenPGP keyring\n  identity.asc: <BASE64>\n```\n\n#### AWS KMS Secret entry\n",
                      "markdown": "`  namespace: default\ndata:\n  # Exemplary OpenPGP keyring\n  identity.asc: <BASE64>\n```\n\n#### AWS KMS Secret entry\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 805,
                  "startColumn": 20,
                  "endLine": 805,
                  "endColumn": 26,
                  "snippet": {
                    "text": "  namespace: default\ndata:\n  # Exemplary age private key\n  identity.agekey: <BASE64>\n```\n\n#### OpenPGP Secret entry\n",
                    "rendered": {
                      "text": "  namespace: default\ndata:\n  # Exemplary age private key\n  identity.agekey: <BASE64>\n```\n\n#### OpenPGP Secret entry\n",
                      "markdown": "`  namespace: default\ndata:\n  # Exemplary age private key\n  identity.agekey: <BASE64>\n```\n\n#### OpenPGP Secret entry\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 788,
                  "startColumn": 21,
                  "endLine": 788,
                  "endColumn": 27,
                  "snippet": {
                    "text": "  # Exemplary age private key\n  identity.agekey: <BASE64>\n  # Exemplary Hashicorp Vault token\n  sops.vault-token: <BASE64>\n```\n\n#### age Secret entry\n",
                    "rendered": {
                      "text": "  # Exemplary age private key\n  identity.agekey: <BASE64>\n  # Exemplary Hashicorp Vault token\n  sops.vault-token: <BASE64>\n```\n\n#### age Secret entry\n",
                      "markdown": "`  # Exemplary age private key\n  identity.agekey: <BASE64>\n  # Exemplary Hashicorp Vault token\n  sops.vault-token: <BASE64>\n```\n\n#### age Secret entry\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 786,
                  "startColumn": 20,
                  "endLine": 786,
                  "endColumn": 26,
                  "snippet": {
                    "text": "  namespace: default\ndata:\n  # Exemplary age private key\n  identity.agekey: <BASE64>\n  # Exemplary Hashicorp Vault token\n  sops.vault-token: <BASE64>\n```\n",
                    "rendered": {
                      "text": "  namespace: default\ndata:\n  # Exemplary age private key\n  identity.agekey: <BASE64>\n  # Exemplary Hashicorp Vault token\n  sops.vault-token: <BASE64>\n```\n",
                      "markdown": "`  namespace: default\ndata:\n  # Exemplary age private key\n  identity.agekey: <BASE64>\n  # Exemplary Hashicorp Vault token\n  sops.vault-token: <BASE64>\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 730,
                  "startColumn": 40,
                  "endLine": 730,
                  "endColumn": 46,
                  "snippet": {
                    "text": "`.spec.decryption` is an optional field to specify the configuration to decrypt\nSecrets that are a part of the Kustomization.\n\nSince Secrets are either plain text or `base64` encoded, it's unsafe to store\nthem in plain text in a public or private Git repository. In order to store\nthem safely, you can use [Mozilla SOPS](https://github.com/mozilla/sops) and\nencrypt your Kubernetes Secret data with [age](https://age-encryption.org/v1/)\n",
                    "rendered": {
                      "text": "`.spec.decryption` is an optional field to specify the configuration to decrypt\nSecrets that are a part of the Kustomization.\n\nSince Secrets are either plain text or `base64` encoded, it's unsafe to store\nthem in plain text in a public or private Git repository. In order to store\nthem safely, you can use [Mozilla SOPS](https://github.com/mozilla/sops) and\nencrypt your Kubernetes Secret data with [age](https://age-encryption.org/v1/)\n",
                      "markdown": "``.spec.decryption` is an optional field to specify the configuration to decrypt\nSecrets that are a part of the Kustomization.\n\nSince Secrets are either plain text or `base64` encoded, it's unsafe to store\nthem in plain text in a public or private Git repository. In order to store\nthem safely, you can use [Mozilla SOPS](https://github.com/mozilla/sops) and\nencrypt your Kubernetes Secret data with [age](https://age-encryption.org/v1/)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 1893,
                  "startColumn": 26,
                  "endLine": 1894,
                  "snippet": {
                    "text": "or stalled due to an error it can not recover from without human\nintervention.\n\n### Last Handled Reconcile At\n\nThe kustomize-controller reports the last `reconcile.fluxcd.io/requestedAt`\nannotation value it acted on in the `.status.lastHandledReconcileAt` field.\n\n",
                    "rendered": {
                      "text": "or stalled due to an error it can not recover from without human\nintervention.\n\n### Last Handled Reconcile At\n\nThe kustomize-controller reports the last `reconcile.fluxcd.io/requestedAt`\nannotation value it acted on in the `.status.lastHandledReconcileAt` field.\n\n",
                      "markdown": "`or stalled due to an error it can not recover from without human\nintervention.\n\n### Last Handled Reconcile At\n\nThe kustomize-controller reports the last `reconcile.fluxcd.io/requestedAt`\nannotation value it acted on in the `.status.lastHandledReconcileAt` field.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 1849,
                  "startColumn": 13,
                  "endLine": 1849,
                  "endColumn": 17,
                  "snippet": {
                    "text": "exponential backoff, until it succeeds and the Kustomization marked as [ready](#ready-kustomization).\n\nNote that a Kustomization can be [reconciling](#reconciling-kustomization)\nwhile failing at the same time, for example, due to a newly introduced\nconfiguration issue in the Kustomization spec. When a reconciliation fails, the\n`Reconciling` Condition `reason` would be `ProgressingWithRetry`. When the\nreconciliation is performed again after the failure, the `reason` is updated to `Progressing`.\n",
                    "rendered": {
                      "text": "exponential backoff, until it succeeds and the Kustomization marked as [ready](#ready-kustomization).\n\nNote that a Kustomization can be [reconciling](#reconciling-kustomization)\nwhile failing at the same time, for example, due to a newly introduced\nconfiguration issue in the Kustomization spec. When a reconciliation fails, the\n`Reconciling` Condition `reason` would be `ProgressingWithRetry`. When the\nreconciliation is performed again after the failure, the `reason` is updated to `Progressing`.\n",
                      "markdown": "`exponential backoff, until it succeeds and the Kustomization marked as [ready](#ready-kustomization).\n\nNote that a Kustomization can be [reconciling](#reconciling-kustomization)\nwhile failing at the same time, for example, due to a newly introduced\nconfiguration issue in the Kustomization spec. When a reconciliation fails, the\n`Reconciling` Condition `reason` would be `ProgressingWithRetry`. When the\nreconciliation is performed again after the failure, the `reason` is updated to `Progressing`.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 1802,
                  "startColumn": 33,
                  "endLine": 1802,
                  "endColumn": 37,
                  "snippet": {
                    "text": "- `reason: Progressing` | `reason: ProgressingWithRetry`\n\nThe Condition `message` is updated during the course of the reconciliation to\nreport the action being performed at any particular moment such as\nbuilding manifests, detecting drift, etc.\n\nThe `Ready` Condition's `status` is also marked as `Unkown`.\n",
                    "rendered": {
                      "text": "- `reason: Progressing` | `reason: ProgressingWithRetry`\n\nThe Condition `message` is updated during the course of the reconciliation to\nreport the action being performed at any particular moment such as\nbuilding manifests, detecting drift, etc.\n\nThe `Ready` Condition's `status` is also marked as `Unkown`.\n",
                      "markdown": "`- `reason: Progressing` | `reason: ProgressingWithRetry`\n\nThe Condition `message` is updated during the course of the reconciliation to\nreport the action being performed at any particular moment such as\nbuilding manifests, detecting drift, etc.\n\nThe `Ready` Condition's `status` is also marked as `Unkown`.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 1365,
                  "startColumn": 74,
                  "endLine": 1366,
                  "snippet": {
                    "text": "\n**Note:**: If you are mounting a secret containing the AWS credentials as a\nfile in the `kustomize-controller` Pod, you need to specify an environment\nvariable `$HOME`, since the AWS credentials file is expected to be present at\n`~/.aws`. For example:\n\n```yaml\nenv:\n",
                    "rendered": {
                      "text": "\n**Note:**: If you are mounting a secret containing the AWS credentials as a\nfile in the `kustomize-controller` Pod, you need to specify an environment\nvariable `$HOME`, since the AWS credentials file is expected to be present at\n`~/.aws`. For example:\n\n```yaml\nenv:\n",
                      "markdown": "`\n**Note:**: If you are mounting a secret containing the AWS credentials as a\nfile in the `kustomize-controller` Pod, you need to specify an environment\nvariable `$HOME`, since the AWS credentials file is expected to be present at\n`~/.aws`. For example:\n\n```yaml\nenv:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 1314,
                  "startColumn": 17,
                  "endLine": 1314,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\nWhile making use of the [IAM OIDC provider](https://eksctl.io/usage/iamserviceaccounts/)\non your EKS cluster, you can create an IAM Role and Service Account with access\nto AWS KMS (using at least `kms:Decrypt` and `kms:DescribeKey`). Once these are\ncreated, you can annotate the kustomize-controller Service Account with the\nRole ARN, granting the controller permission to decrypt the Secrets. Please refer\nto the [SOPS guide](https://fluxcd.io/flux/guides/mozilla-sops/#aws) for detailed steps.\n",
                    "rendered": {
                      "text": "\nWhile making use of the [IAM OIDC provider](https://eksctl.io/usage/iamserviceaccounts/)\non your EKS cluster, you can create an IAM Role and Service Account with access\nto AWS KMS (using at least `kms:Decrypt` and `kms:DescribeKey`). Once these are\ncreated, you can annotate the kustomize-controller Service Account with the\nRole ARN, granting the controller permission to decrypt the Secrets. Please refer\nto the [SOPS guide](https://fluxcd.io/flux/guides/mozilla-sops/#aws) for detailed steps.\n",
                      "markdown": "`\nWhile making use of the [IAM OIDC provider](https://eksctl.io/usage/iamserviceaccounts/)\non your EKS cluster, you can create an IAM Role and Service Account with access\nto AWS KMS (using at least `kms:Decrypt` and `kms:DescribeKey`). Once these are\ncreated, you can annotate the kustomize-controller Service Account with the\nRole ARN, granting the controller permission to decrypt the Secrets. Please refer\nto the [SOPS guide](https://fluxcd.io/flux/guides/mozilla-sops/#aws) for detailed steps.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 1290,
                  "startColumn": 44,
                  "endLine": 1290,
                  "endColumn": 48,
                  "snippet": {
                    "text": "      name: stage-kubeconfig  # Cluster API creates this for the matching Cluster\n```\n\nThe Cluster and Kustomization can be created at the same time.\nThe Kustomization will eventually reconcile once the cluster is available.\n\nIf you wish to target clusters created by other means than CAPI, you can create\n",
                    "rendered": {
                      "text": "      name: stage-kubeconfig  # Cluster API creates this for the matching Cluster\n```\n\nThe Cluster and Kustomization can be created at the same time.\nThe Kustomization will eventually reconcile once the cluster is available.\n\nIf you wish to target clusters created by other means than CAPI, you can create\n",
                      "markdown": "`      name: stage-kubeconfig  # Cluster API creates this for the matching Cluster\n```\n\nThe Cluster and Kustomization can be created at the same time.\nThe Kustomization will eventually reconcile once the cluster is available.\n\nIf you wish to target clusters created by other means than CAPI, you can create\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 1148,
                  "startColumn": 25,
                  "endLine": 1148,
                  "endColumn": 34,
                  "snippet": {
                    "text": "By default, a Kustomization apply runs under the cluster admin account and can\ncreate, modify and delete cluster level objects (namespaces, CRDs, etc) and\nnamespaced objects (deployments, ingresses, etc). For certain Kustomizations a\ncluster admin may wish to control what types of Kubernetes objects can be\nreconciled and under which namespaces.\nTo restrict a Kustomization, one can assign a service account under which the\nreconciliation is performed using [`.spec.serviceAccountName`](#service-account-reference).\n",
                    "rendered": {
                      "text": "By default, a Kustomization apply runs under the cluster admin account and can\ncreate, modify and delete cluster level objects (namespaces, CRDs, etc) and\nnamespaced objects (deployments, ingresses, etc). For certain Kustomizations a\ncluster admin may wish to control what types of Kubernetes objects can be\nreconciled and under which namespaces.\nTo restrict a Kustomization, one can assign a service account under which the\nreconciliation is performed using [`.spec.serviceAccountName`](#service-account-reference).\n",
                      "markdown": "`By default, a Kustomization apply runs under the cluster admin account and can\ncreate, modify and delete cluster level objects (namespaces, CRDs, etc) and\nnamespaced objects (deployments, ingresses, etc). For certain Kustomizations a\ncluster admin may wish to control what types of Kubernetes objects can be\nreconciled and under which namespaces.\nTo restrict a Kustomization, one can assign a service account under which the\nreconciliation is performed using [`.spec.serviceAccountName`](#service-account-reference).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 1143,
                  "startColumn": 21,
                  "endLine": 1144,
                  "snippet": {
                    "text": "This policy can be used to protect sensitive resources such as Namespaces, PVCs and PVs\nfrom accidental deletion.\n\n### Role-based access control\n\nBy default, a Kustomization apply runs under the cluster admin account and can\ncreate, modify and delete cluster level objects (namespaces, CRDs, etc) and\nnamespaced objects (deployments, ingresses, etc). For certain Kustomizations a\n",
                    "rendered": {
                      "text": "This policy can be used to protect sensitive resources such as Namespaces, PVCs and PVs\nfrom accidental deletion.\n\n### Role-based access control\n\nBy default, a Kustomization apply runs under the cluster admin account and can\ncreate, modify and delete cluster level objects (namespaces, CRDs, etc) and\nnamespaced objects (deployments, ingresses, etc). For certain Kustomizations a\n",
                      "markdown": "`This policy can be used to protect sensitive resources such as Namespaces, PVCs and PVs\nfrom accidental deletion.\n\n### Role-based access control\n\nBy default, a Kustomization apply runs under the cluster admin account and can\ncreate, modify and delete cluster level objects (namespaces, CRDs, etc) and\nnamespaced objects (deployments, ingresses, etc). For certain Kustomizations a\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 878,
                  "startColumn": 74,
                  "endLine": 879,
                  "endColumn": 8,
                  "snippet": {
                    "text": "To configure a Service Principal with Certificate credentials to access the\nAzure Key Vault, a JSON or YAML object with `tenantId`, `clientId` and\n`clientCertificate` fields must be configured as the `sops.azure-kv` value.\nIt optionally supports `clientCertificateSendChain` and `authorityHost` to\ncontrol the sending of the certificate chain, or to specify an authority host\nother than the Azure Public Cloud endpoint.\n\n```yaml\n",
                    "rendered": {
                      "text": "To configure a Service Principal with Certificate credentials to access the\nAzure Key Vault, a JSON or YAML object with `tenantId`, `clientId` and\n`clientCertificate` fields must be configured as the `sops.azure-kv` value.\nIt optionally supports `clientCertificateSendChain` and `authorityHost` to\ncontrol the sending of the certificate chain, or to specify an authority host\nother than the Azure Public Cloud endpoint.\n\n```yaml\n",
                      "markdown": "`To configure a Service Principal with Certificate credentials to access the\nAzure Key Vault, a JSON or YAML object with `tenantId`, `clientId` and\n`clientCertificate` fields must be configured as the `sops.azure-kv` value.\nIt optionally supports `clientCertificateSendChain` and `authorityHost` to\ncontrol the sending of the certificate chain, or to specify an authority host\nother than the Azure Public Cloud endpoint.\n\n```yaml\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 769,
                  "startColumn": 47,
                  "endLine": 769,
                  "endColumn": 51,
                  "snippet": {
                    "text": "      name: sops-keys\n```\n\n**Note:** For information on Secrets decryption at a controller level, please\nrefer to [controller global decryption](#controller-global-decryption).\n\nThe Secret's `.data` section is expected to contain entries with decryption\n",
                    "rendered": {
                      "text": "      name: sops-keys\n```\n\n**Note:** For information on Secrets decryption at a controller level, please\nrefer to [controller global decryption](#controller-global-decryption).\n\nThe Secret's `.data` section is expected to contain entries with decryption\n",
                      "markdown": "`      name: sops-keys\n```\n\n**Note:** For information on Secrets decryption at a controller level, please\nrefer to [controller global decryption](#controller-global-decryption).\n\nThe Secret's `.data` section is expected to contain entries with decryption\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 635,
                  "startColumn": 41,
                  "endLine": 635,
                  "endColumn": 45,
                  "snippet": {
                    "text": "kustomize.toolkit.fluxcd.io/substitute: disabled\n```\n\nSubstitution of variables only happens if at least a single variable or resource\nto substitute from is defined. This may cause issues if you rely on expressions\nwhich should evaluate to a default value, even if no other variables are\nconfigured. To work around this, one can set an arbitrary key/value pair to\n",
                    "rendered": {
                      "text": "kustomize.toolkit.fluxcd.io/substitute: disabled\n```\n\nSubstitution of variables only happens if at least a single variable or resource\nto substitute from is defined. This may cause issues if you rely on expressions\nwhich should evaluate to a default value, even if no other variables are\nconfigured. To work around this, one can set an arbitrary key/value pair to\n",
                      "markdown": "`kustomize.toolkit.fluxcd.io/substitute: disabled\n```\n\nSubstitution of variables only happens if at least a single variable or resource\nto substitute from is defined. This may cause issues if you rely on expressions\nwhich should evaluate to a default value, even if no other variables are\nconfigured. To work around this, one can set an arbitrary key/value pair to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 539,
                  "startColumn": 70,
                  "endLine": 540,
                  "endColumn": 3,
                  "snippet": {
                    "text": "are used as the variable names.\n\nThe `.spec.postBuild.substituteFrom.optional` field indicates how the\ncontroller should handle a referenced ConfigMap or Secret being absent\nat reconciliation time. The controller's default behavior ― with\n`optional` unspecified or set to `false` ― it has failed reconciliation if\nthe referenced object is missing. By setting the `optional` field to\n`true`, you can indicate that the controller should use the referenced\n",
                    "rendered": {
                      "text": "are used as the variable names.\n\nThe `.spec.postBuild.substituteFrom.optional` field indicates how the\ncontroller should handle a referenced ConfigMap or Secret being absent\nat reconciliation time. The controller's default behavior ― with\n`optional` unspecified or set to `false` ― it has failed reconciliation if\nthe referenced object is missing. By setting the `optional` field to\n`true`, you can indicate that the controller should use the referenced\n",
                      "markdown": "`are used as the variable names.\n\nThe `.spec.postBuild.substituteFrom.optional` field indicates how the\ncontroller should handle a referenced ConfigMap or Secret being absent\nat reconciliation time. The controller's default behavior ― with\n`optional` unspecified or set to `false` ― it has failed reconciliation if\nthe referenced object is missing. By setting the `optional` field to\n`true`, you can indicate that the controller should use the referenced\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 196,
                  "startColumn": 66,
                  "endLine": 196,
                  "endColumn": 70,
                  "snippet": {
                    "text": "\n### Retry interval\n\n`.spec.retryInterval` is an optional field to specify the interval at which to\nretry a failed reconciliation. Unlike `.spec.interval`, this field is\nexclusively meant for failure retries. If not specified, it defaults to\n`.spec.interval`.\n",
                    "rendered": {
                      "text": "\n### Retry interval\n\n`.spec.retryInterval` is an optional field to specify the interval at which to\nretry a failed reconciliation. Unlike `.spec.interval`, this field is\nexclusively meant for failure retries. If not specified, it defaults to\n`.spec.interval`.\n",
                      "markdown": "`\n### Retry interval\n\n`.spec.retryInterval` is an optional field to specify the interval at which to\nretry a failed reconciliation. Unlike `.spec.interval`, this field is\nexclusively meant for failure retries. If not specified, it defaults to\n`.spec.interval`.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 174,
                  "startColumn": 64,
                  "endLine": 174,
                  "endColumn": 68,
                  "snippet": {
                    "text": "\n### Interval\n\n`.spec.interval` is a required field that specifies the interval at which the\nKustomization is reconciled, i.e. the controller fetches the source with the\nKubernetes manifests, builds the Kustomization and applies it on the cluster,\ncorrecting any existing drift in the process. The minimum value should be 60\n",
                    "rendered": {
                      "text": "\n### Interval\n\n`.spec.interval` is a required field that specifies the interval at which the\nKustomization is reconciled, i.e. the controller fetches the source with the\nKubernetes manifests, builds the Kustomization and applies it on the cluster,\ncorrecting any existing drift in the process. The minimum value should be 60\n",
                      "markdown": "`\n### Interval\n\n`.spec.interval` is a required field that specifies the interval at which the\nKustomization is reconciled, i.e. the controller fetches the source with the\nKubernetes manifests, builds the Kustomization and applies it on the cluster,\ncorrecting any existing drift in the process. The minimum value should be 60\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 53,
                  "endLine": 49,
                  "endColumn": 57,
                  "snippet": {
                    "text": "  branch and makes the repository content available as an Artifact inside the cluster.\n- A Flux Kustomization named `podinfo` is created that watches the\n  GitRepository for Artifact changes.\n- The Kustomization builds the YAML manifests located at the specified `.spec.path`,\n  sets the namespace of all objects to the `.spec.targetNamespace`,\n  validates the objects against the Kubernetes API and finally applies them on\n  the cluster.\n",
                    "rendered": {
                      "text": "  branch and makes the repository content available as an Artifact inside the cluster.\n- A Flux Kustomization named `podinfo` is created that watches the\n  GitRepository for Artifact changes.\n- The Kustomization builds the YAML manifests located at the specified `.spec.path`,\n  sets the namespace of all objects to the `.spec.targetNamespace`,\n  validates the objects against the Kubernetes API and finally applies them on\n  the cluster.\n",
                      "markdown": "`  branch and makes the repository content available as an Artifact inside the cluster.\n- A Flux Kustomization named `podinfo` is created that watches the\n  GitRepository for Artifact changes.\n- The Kustomization builds the YAML manifests located at the specified `.spec.path`,\n  sets the namespace of all objects to the `.spec.targetNamespace`,\n  validates the objects against the Kubernetes API and finally applies them on\n  the cluster.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 1708,
                  "startColumn": 113,
                  "endLine": 1708,
                  "endColumn": 122,
                  "snippet": {
                    "text": "...\n  Conditions:\n    Last Transition Time:  2023-03-29T06:09:32Z\n    Message:               Fetching manifests for revision master/67e2c98a60dc92283531412a9e604dd4bae005a9 with a timeout of 4m30s\n    Observed Generation:   3\n    Reason:                ProgressingWithRetry\n    Status:                True\n",
                    "rendered": {
                      "text": "...\n  Conditions:\n    Last Transition Time:  2023-03-29T06:09:32Z\n    Message:               Fetching manifests for revision master/67e2c98a60dc92283531412a9e604dd4bae005a9 with a timeout of 4m30s\n    Observed Generation:   3\n    Reason:                ProgressingWithRetry\n    Status:                True\n",
                      "markdown": "`...\n  Conditions:\n    Last Transition Time:  2023-03-29T06:09:32Z\n    Message:               Fetching manifests for revision master/67e2c98a60dc92283531412a9e604dd4bae005a9 with a timeout of 4m30s\n    Observed Generation:   3\n    Reason:                ProgressingWithRetry\n    Status:                True\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 1618,
                  "startColumn": 8,
                  "endLine": 1618,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\n### Suspending and resuming\n\nWhen you find yourself in a situation where you temporarily want to pause the\nreconciliation of a Kustomization, you can suspend it using [`.spec.suspend`](#suspend).\n\nTo pause the reconciliation of a specific Kubernetes resource managed by a Flux Kustomization,\n",
                    "rendered": {
                      "text": "\n### Suspending and resuming\n\nWhen you find yourself in a situation where you temporarily want to pause the\nreconciliation of a Kustomization, you can suspend it using [`.spec.suspend`](#suspend).\n\nTo pause the reconciliation of a specific Kubernetes resource managed by a Flux Kustomization,\n",
                      "markdown": "`\n### Suspending and resuming\n\nWhen you find yourself in a situation where you temporarily want to pause the\nreconciliation of a Kustomization, you can suspend it using [`.spec.suspend`](#suspend).\n\nTo pause the reconciliation of a specific Kubernetes resource managed by a Flux Kustomization,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 1537,
                  "startColumn": 3,
                  "endLine": 1537,
                  "endColumn": 11,
                  "snippet": {
                    "text": "      - config.env.encrypted\n```\n\nFor Docker config files, you need to specify both input and output type as JSON:\n\n```sh\nsops -e --input-type=json --output-type=json ghcr.dockerconfigjson > ghcr.dockerconfigjson.encrypted\n",
                    "rendered": {
                      "text": "      - config.env.encrypted\n```\n\nFor Docker config files, you need to specify both input and output type as JSON:\n\n```sh\nsops -e --input-type=json --output-type=json ghcr.dockerconfigjson > ghcr.dockerconfigjson.encrypted\n",
                      "markdown": "`      - config.env.encrypted\n```\n\nFor Docker config files, you need to specify both input and output type as JSON:\n\n```sh\nsops -e --input-type=json --output-type=json ghcr.dockerconfigjson > ghcr.dockerconfigjson.encrypted\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 1490,
                  "startColumn": 1,
                  "endLine": 1490,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\n```console\n$ echo \"my-secret-token\" | sops -e /dev/stdin > token.encrypted\n$ cat <<EOF > kustomization.yaml\napiVersion: kustomize.config.k8s.io/v1beta1\nkind: Kustomization\n\n",
                    "rendered": {
                      "text": "\n```console\n$ echo \"my-secret-token\" | sops -e /dev/stdin > token.encrypted\n$ cat <<EOF > kustomization.yaml\napiVersion: kustomize.config.k8s.io/v1beta1\nkind: Kustomization\n\n",
                      "markdown": "`\n```console\n$ echo \"my-secret-token\" | sops -e /dev/stdin > token.encrypted\n$ cat <<EOF > kustomization.yaml\napiVersion: kustomize.config.k8s.io/v1beta1\nkind: Kustomization\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 1484,
                  "startColumn": 38,
                  "endLine": 1484,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\n### Kustomize secretGenerator\n\nSOPS encrypted data can be stored as a base64 encoded Secret, which enables the\nuse of [Kustomize `secretGenerator`](https://github.com/kubernetes-sigs/kustomize/tree/main/examples/secretGeneratorPlugin.md)\nas follows:\n\n",
                    "rendered": {
                      "text": "\n### Kustomize secretGenerator\n\nSOPS encrypted data can be stored as a base64 encoded Secret, which enables the\nuse of [Kustomize `secretGenerator`](https://github.com/kubernetes-sigs/kustomize/tree/main/examples/secretGeneratorPlugin.md)\nas follows:\n\n",
                      "markdown": "`\n### Kustomize secretGenerator\n\nSOPS encrypted data can be stored as a base64 encoded Secret, which enables the\nuse of [Kustomize `secretGenerator`](https://github.com/kubernetes-sigs/kustomize/tree/main/examples/secretGeneratorPlugin.md)\nas follows:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 1428,
                  "startColumn": 6,
                  "endLine": 1428,
                  "endColumn": 15,
                  "snippet": {
                    "text": "environment variable](https://cloud.google.com/docs/authentication/production)\nis automatically taken into account.\n[Granting permissions](https://cloud.google.com/kms/docs/reference/permissions-and-roles)\nto the Service Account attached to this will therefore be sufficient to decrypt\ndata. When running outside GCP, it is possible to manually patch the\nkustomize-controller Deployment with a valid set of (mounted) credentials.\n\n",
                    "rendered": {
                      "text": "environment variable](https://cloud.google.com/docs/authentication/production)\nis automatically taken into account.\n[Granting permissions](https://cloud.google.com/kms/docs/reference/permissions-and-roles)\nto the Service Account attached to this will therefore be sufficient to decrypt\ndata. When running outside GCP, it is possible to manually patch the\nkustomize-controller Deployment with a valid set of (mounted) credentials.\n\n",
                      "markdown": "`environment variable](https://cloud.google.com/docs/authentication/production)\nis automatically taken into account.\n[Granting permissions](https://cloud.google.com/kms/docs/reference/permissions-and-roles)\nto the Service Account attached to this will therefore be sufficient to decrypt\ndata. When running outside GCP, it is possible to manually patch the\nkustomize-controller Deployment with a valid set of (mounted) credentials.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 1315,
                  "startColumn": 50,
                  "endLine": 1315,
                  "endColumn": 59,
                  "snippet": {
                    "text": "While making use of the [IAM OIDC provider](https://eksctl.io/usage/iamserviceaccounts/)\non your EKS cluster, you can create an IAM Role and Service Account with access\nto AWS KMS (using at least `kms:Decrypt` and `kms:DescribeKey`). Once these are\ncreated, you can annotate the kustomize-controller Service Account with the\nRole ARN, granting the controller permission to decrypt the Secrets. Please refer\nto the [SOPS guide](https://fluxcd.io/flux/guides/mozilla-sops/#aws) for detailed steps.\n\n",
                    "rendered": {
                      "text": "While making use of the [IAM OIDC provider](https://eksctl.io/usage/iamserviceaccounts/)\non your EKS cluster, you can create an IAM Role and Service Account with access\nto AWS KMS (using at least `kms:Decrypt` and `kms:DescribeKey`). Once these are\ncreated, you can annotate the kustomize-controller Service Account with the\nRole ARN, granting the controller permission to decrypt the Secrets. Please refer\nto the [SOPS guide](https://fluxcd.io/flux/guides/mozilla-sops/#aws) for detailed steps.\n\n",
                      "markdown": "`While making use of the [IAM OIDC provider](https://eksctl.io/usage/iamserviceaccounts/)\non your EKS cluster, you can create an IAM Role and Service Account with access\nto AWS KMS (using at least `kms:Decrypt` and `kms:DescribeKey`). Once these are\ncreated, you can annotate the kustomize-controller Service Account with the\nRole ARN, granting the controller permission to decrypt the Secrets. Please refer\nto the [SOPS guide](https://fluxcd.io/flux/guides/mozilla-sops/#aws) for detailed steps.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 1313,
                  "startColumn": 51,
                  "endLine": 1313,
                  "endColumn": 60,
                  "snippet": {
                    "text": "#### AWS KMS\n\nWhile making use of the [IAM OIDC provider](https://eksctl.io/usage/iamserviceaccounts/)\non your EKS cluster, you can create an IAM Role and Service Account with access\nto AWS KMS (using at least `kms:Decrypt` and `kms:DescribeKey`). Once these are\ncreated, you can annotate the kustomize-controller Service Account with the\nRole ARN, granting the controller permission to decrypt the Secrets. Please refer\n",
                    "rendered": {
                      "text": "#### AWS KMS\n\nWhile making use of the [IAM OIDC provider](https://eksctl.io/usage/iamserviceaccounts/)\non your EKS cluster, you can create an IAM Role and Service Account with access\nto AWS KMS (using at least `kms:Decrypt` and `kms:DescribeKey`). Once these are\ncreated, you can annotate the kustomize-controller Service Account with the\nRole ARN, granting the controller permission to decrypt the Secrets. Please refer\n",
                      "markdown": "`#### AWS KMS\n\nWhile making use of the [IAM OIDC provider](https://eksctl.io/usage/iamserviceaccounts/)\non your EKS cluster, you can create an IAM Role and Service Account with access\nto AWS KMS (using at least `kms:Decrypt` and `kms:DescribeKey`). Once these are\ncreated, you can annotate the kustomize-controller Service Account with the\nRole ARN, granting the controller permission to decrypt the Secrets. Please refer\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 1307,
                  "startColumn": 54,
                  "endLine": 1307,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\nOther than [authentication using a Secret reference](#decryption),\nit is possible to specify global decryption settings on the\nkustomize-controller Pod. When the controller fails to find credentials on the\nKustomization object itself, it will fall back to these defaults.\n\n#### AWS KMS\n",
                    "rendered": {
                      "text": "\nOther than [authentication using a Secret reference](#decryption),\nit is possible to specify global decryption settings on the\nkustomize-controller Pod. When the controller fails to find credentials on the\nKustomization object itself, it will fall back to these defaults.\n\n#### AWS KMS\n",
                      "markdown": "`\nOther than [authentication using a Secret reference](#decryption),\nit is possible to specify global decryption settings on the\nkustomize-controller Pod. When the controller fails to find credentials on the\nKustomization object itself, it will fall back to these defaults.\n\n#### AWS KMS\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 1293,
                  "startColumn": 6,
                  "endLine": 1293,
                  "endColumn": 12,
                  "snippet": {
                    "text": "The Cluster and Kustomization can be created at the same time.\nThe Kustomization will eventually reconcile once the cluster is available.\n\nIf you wish to target clusters created by other means than CAPI, you can create\na ServiceAccount on the remote cluster, generate a KubeConfig for that account\nand then create a secret on the cluster where kustomize-controller is running.\nFor example:\n",
                    "rendered": {
                      "text": "The Cluster and Kustomization can be created at the same time.\nThe Kustomization will eventually reconcile once the cluster is available.\n\nIf you wish to target clusters created by other means than CAPI, you can create\na ServiceAccount on the remote cluster, generate a KubeConfig for that account\nand then create a secret on the cluster where kustomize-controller is running.\nFor example:\n",
                      "markdown": "`The Cluster and Kustomization can be created at the same time.\nThe Kustomization will eventually reconcile once the cluster is available.\n\nIf you wish to target clusters created by other means than CAPI, you can create\na ServiceAccount on the remote cluster, generate a KubeConfig for that account\nand then create a secret on the cluster where kustomize-controller is running.\nFor example:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 1232,
                  "startColumn": 22,
                  "endLine": 1232,
                  "endColumn": 31,
                  "snippet": {
                    "text": "`--default-service-account` flag.\n\nWhen the flag is set, all Kustomizations which don't have [`.spec.serviceAccountName`](#service-account-reference)\nspecified will use the service account name provided by\n`--default-service-account=<SA Name>` in the namespace of the object.\n\n### Remote clusters/Cluster-API\n",
                    "rendered": {
                      "text": "`--default-service-account` flag.\n\nWhen the flag is set, all Kustomizations which don't have [`.spec.serviceAccountName`](#service-account-reference)\nspecified will use the service account name provided by\n`--default-service-account=<SA Name>` in the namespace of the object.\n\n### Remote clusters/Cluster-API\n",
                      "markdown": "``--default-service-account` flag.\n\nWhen the flag is set, all Kustomizations which don't have [`.spec.serviceAccountName`](#service-account-reference)\nspecified will use the service account name provided by\n`--default-service-account=<SA Name>` in the namespace of the object.\n\n### Remote clusters/Cluster-API\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 1196,
                  "startColumn": 22,
                  "endLine": 1196,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\n**Note:** The namespace, RBAC and service account manifests should be\nplaced in a Git source and applied with a Kustomization. The Kustomizations that\nare running under that service account should depend on the one that contains the account.\n\nCreate a Kustomization that prevents altering the cluster state outside the\n`webapp` namespace:\n",
                    "rendered": {
                      "text": "\n**Note:** The namespace, RBAC and service account manifests should be\nplaced in a Git source and applied with a Kustomization. The Kustomizations that\nare running under that service account should depend on the one that contains the account.\n\nCreate a Kustomization that prevents altering the cluster state outside the\n`webapp` namespace:\n",
                      "markdown": "`\n**Note:** The namespace, RBAC and service account manifests should be\nplaced in a Git source and applied with a Kustomization. The Kustomizations that\nare running under that service account should depend on the one that contains the account.\n\nCreate a Kustomization that prevents altering the cluster state outside the\n`webapp` namespace:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 1195,
                  "startColumn": 11,
                  "endLine": 1195,
                  "endColumn": 16,
                  "snippet": {
                    "text": "```\n\n**Note:** The namespace, RBAC and service account manifests should be\nplaced in a Git source and applied with a Kustomization. The Kustomizations that\nare running under that service account should depend on the one that contains the account.\n\nCreate a Kustomization that prevents altering the cluster state outside the\n",
                    "rendered": {
                      "text": "```\n\n**Note:** The namespace, RBAC and service account manifests should be\nplaced in a Git source and applied with a Kustomization. The Kustomizations that\nare running under that service account should depend on the one that contains the account.\n\nCreate a Kustomization that prevents altering the cluster state outside the\n",
                      "markdown": "````\n\n**Note:** The namespace, RBAC and service account manifests should be\nplaced in a Git source and applied with a Kustomization. The Kustomizations that\nare running under that service account should depend on the one that contains the account.\n\nCreate a Kustomization that prevents altering the cluster state outside the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 1194,
                  "startColumn": 33,
                  "endLine": 1194,
                  "endColumn": 42,
                  "snippet": {
                    "text": "  namespace: webapp\n```\n\n**Note:** The namespace, RBAC and service account manifests should be\nplaced in a Git source and applied with a Kustomization. The Kustomizations that\nare running under that service account should depend on the one that contains the account.\n\n",
                    "rendered": {
                      "text": "  namespace: webapp\n```\n\n**Note:** The namespace, RBAC and service account manifests should be\nplaced in a Git source and applied with a Kustomization. The Kustomizations that\nare running under that service account should depend on the one that contains the account.\n\n",
                      "markdown": "`  namespace: webapp\n```\n\n**Note:** The namespace, RBAC and service account manifests should be\nplaced in a Git source and applied with a Kustomization. The Kustomizations that\nare running under that service account should depend on the one that contains the account.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 1150,
                  "startColumn": 45,
                  "endLine": 1150,
                  "endColumn": 54,
                  "snippet": {
                    "text": "namespaced objects (deployments, ingresses, etc). For certain Kustomizations a\ncluster admin may wish to control what types of Kubernetes objects can be\nreconciled and under which namespaces.\nTo restrict a Kustomization, one can assign a service account under which the\nreconciliation is performed using [`.spec.serviceAccountName`](#service-account-reference).\n\nAssuming you want to restrict a group of Kustomizations to a single namespace,\n",
                    "rendered": {
                      "text": "namespaced objects (deployments, ingresses, etc). For certain Kustomizations a\ncluster admin may wish to control what types of Kubernetes objects can be\nreconciled and under which namespaces.\nTo restrict a Kustomization, one can assign a service account under which the\nreconciliation is performed using [`.spec.serviceAccountName`](#service-account-reference).\n\nAssuming you want to restrict a group of Kustomizations to a single namespace,\n",
                      "markdown": "`namespaced objects (deployments, ingresses, etc). For certain Kustomizations a\ncluster admin may wish to control what types of Kubernetes objects can be\nreconciled and under which namespaces.\nTo restrict a Kustomization, one can assign a service account under which the\nreconciliation is performed using [`.spec.serviceAccountName`](#service-account-reference).\n\nAssuming you want to restrict a group of Kustomizations to a single namespace,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 1148,
                  "startColumn": 17,
                  "endLine": 1148,
                  "endColumn": 23,
                  "snippet": {
                    "text": "By default, a Kustomization apply runs under the cluster admin account and can\ncreate, modify and delete cluster level objects (namespaces, CRDs, etc) and\nnamespaced objects (deployments, ingresses, etc). For certain Kustomizations a\ncluster admin may wish to control what types of Kubernetes objects can be\nreconciled and under which namespaces.\nTo restrict a Kustomization, one can assign a service account under which the\nreconciliation is performed using [`.spec.serviceAccountName`](#service-account-reference).\n",
                    "rendered": {
                      "text": "By default, a Kustomization apply runs under the cluster admin account and can\ncreate, modify and delete cluster level objects (namespaces, CRDs, etc) and\nnamespaced objects (deployments, ingresses, etc). For certain Kustomizations a\ncluster admin may wish to control what types of Kubernetes objects can be\nreconciled and under which namespaces.\nTo restrict a Kustomization, one can assign a service account under which the\nreconciliation is performed using [`.spec.serviceAccountName`](#service-account-reference).\n",
                      "markdown": "`By default, a Kustomization apply runs under the cluster admin account and can\ncreate, modify and delete cluster level objects (namespaces, CRDs, etc) and\nnamespaced objects (deployments, ingresses, etc). For certain Kustomizations a\ncluster admin may wish to control what types of Kubernetes objects can be\nreconciled and under which namespaces.\nTo restrict a Kustomization, one can assign a service account under which the\nreconciliation is performed using [`.spec.serviceAccountName`](#service-account-reference).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 955,
                  "startColumn": 17,
                  "endLine": 955,
                  "endColumn": 26,
                  "snippet": {
                    "text": "  name: sops-keys\n  namespace: default\nstringData:\n  # Exemplary GCP Service Account credentials file\n  sops.gcp-kms: |\n    {\n      \"type\": \"service_account\",\n",
                    "rendered": {
                      "text": "  name: sops-keys\n  namespace: default\nstringData:\n  # Exemplary GCP Service Account credentials file\n  sops.gcp-kms: |\n    {\n      \"type\": \"service_account\",\n",
                      "markdown": "`  name: sops-keys\n  namespace: default\nstringData:\n  # Exemplary GCP Service Account credentials file\n  sops.gcp-kms: |\n    {\n      \"type\": \"service_account\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 945,
                  "startColumn": 45,
                  "endLine": 945,
                  "endColumn": 54,
                  "snippet": {
                    "text": "#### GCP KMS Secret entry\n\nTo specify credentials for GCP KMS in a Kubernetes Secret, append a `.data`\nentry with a fixed `sops.gcp-kms` key and the service account keys as its value.\n\n```yaml\n---\n",
                    "rendered": {
                      "text": "#### GCP KMS Secret entry\n\nTo specify credentials for GCP KMS in a Kubernetes Secret, append a `.data`\nentry with a fixed `sops.gcp-kms` key and the service account keys as its value.\n\n```yaml\n---\n",
                      "markdown": "`#### GCP KMS Secret entry\n\nTo specify credentials for GCP KMS in a Kubernetes Secret, append a `.data`\nentry with a fixed `sops.gcp-kms` key and the service account keys as its value.\n\n```yaml\n---\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 911,
                  "startColumn": 19,
                  "endLine": 911,
                  "endColumn": 28,
                  "snippet": {
                    "text": "  name: sops-keys\n  namespace: default\nstringData:\n  # Exemplary Azure Service Principal generated with `az`\n  sops.azure-kv: |\n    {\n      \"appId\": \"559513bd-0c19-4c1a-87cd-851a26afd5fc\",\n",
                    "rendered": {
                      "text": "  name: sops-keys\n  namespace: default\nstringData:\n  # Exemplary Azure Service Principal generated with `az`\n  sops.azure-kv: |\n    {\n      \"appId\": \"559513bd-0c19-4c1a-87cd-851a26afd5fc\",\n",
                      "markdown": "`  name: sops-keys\n  namespace: default\nstringData:\n  # Exemplary Azure Service Principal generated with `az`\n  sops.azure-kv: |\n    {\n      \"appId\": \"559513bd-0c19-4c1a-87cd-851a26afd5fc\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 899,
                  "startColumn": 14,
                  "endLine": 899,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n##### `az` generated Service Principal\n\nTo configure a Service Principal [generated using\n`az`](https://docs.microsoft.com/en-us/azure/aks/kubernetes-service-principal?tabs=azure-cli#manually-create-a-service-principal),\nthe output of the command can be directly used as a `sops.azure-kv` value.\n\n",
                    "rendered": {
                      "text": "\n##### `az` generated Service Principal\n\nTo configure a Service Principal [generated using\n`az`](https://docs.microsoft.com/en-us/azure/aks/kubernetes-service-principal?tabs=azure-cli#manually-create-a-service-principal),\nthe output of the command can be directly used as a `sops.azure-kv` value.\n\n",
                      "markdown": "`\n##### `az` generated Service Principal\n\nTo configure a Service Principal [generated using\n`az`](https://docs.microsoft.com/en-us/azure/aks/kubernetes-service-principal?tabs=azure-cli#manually-create-a-service-principal),\nthe output of the command can be directly used as a `sops.azure-kv` value.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 897,
                  "startColumn": 20,
                  "endLine": 897,
                  "endColumn": 29,
                  "snippet": {
                    "text": "    clientCertificate: <certificate PEM>\n```\n\n##### `az` generated Service Principal\n\nTo configure a Service Principal [generated using\n`az`](https://docs.microsoft.com/en-us/azure/aks/kubernetes-service-principal?tabs=azure-cli#manually-create-a-service-principal),\n",
                    "rendered": {
                      "text": "    clientCertificate: <certificate PEM>\n```\n\n##### `az` generated Service Principal\n\nTo configure a Service Principal [generated using\n`az`](https://docs.microsoft.com/en-us/azure/aks/kubernetes-service-principal?tabs=azure-cli#manually-create-a-service-principal),\n",
                      "markdown": "`    clientCertificate: <certificate PEM>\n```\n\n##### `az` generated Service Principal\n\nTo configure a Service Principal [generated using\n`az`](https://docs.microsoft.com/en-us/azure/aks/kubernetes-service-principal?tabs=azure-cli#manually-create-a-service-principal),\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 890,
                  "startColumn": 19,
                  "endLine": 890,
                  "endColumn": 28,
                  "snippet": {
                    "text": "  name: sops-keys\n  namespace: default\nstringData:\n  # Exemplary Azure Service Principal with Certificate\n  sops.azure-kv: |\n    tenantId: some-tenant-id\n    clientId: some-client-id\n",
                    "rendered": {
                      "text": "  name: sops-keys\n  namespace: default\nstringData:\n  # Exemplary Azure Service Principal with Certificate\n  sops.azure-kv: |\n    tenantId: some-tenant-id\n    clientId: some-client-id\n",
                      "markdown": "`  name: sops-keys\n  namespace: default\nstringData:\n  # Exemplary Azure Service Principal with Certificate\n  sops.azure-kv: |\n    tenantId: some-tenant-id\n    clientId: some-client-id\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 875,
                  "startColumn": 14,
                  "endLine": 875,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n##### Service Principal with Certificate\n\nTo configure a Service Principal with Certificate credentials to access the\nAzure Key Vault, a JSON or YAML object with `tenantId`, `clientId` and\n`clientCertificate` fields must be configured as the `sops.azure-kv` value.\nIt optionally supports `clientCertificateSendChain` and `authorityHost` to\n",
                    "rendered": {
                      "text": "\n##### Service Principal with Certificate\n\nTo configure a Service Principal with Certificate credentials to access the\nAzure Key Vault, a JSON or YAML object with `tenantId`, `clientId` and\n`clientCertificate` fields must be configured as the `sops.azure-kv` value.\nIt optionally supports `clientCertificateSendChain` and `authorityHost` to\n",
                      "markdown": "`\n##### Service Principal with Certificate\n\nTo configure a Service Principal with Certificate credentials to access the\nAzure Key Vault, a JSON or YAML object with `tenantId`, `clientId` and\n`clientCertificate` fields must be configured as the `sops.azure-kv` value.\nIt optionally supports `clientCertificateSendChain` and `authorityHost` to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 873,
                  "startColumn": 5,
                  "endLine": 873,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    clientSecret: some-client-secret\n```\n\n##### Service Principal with Certificate\n\nTo configure a Service Principal with Certificate credentials to access the\nAzure Key Vault, a JSON or YAML object with `tenantId`, `clientId` and\n",
                    "rendered": {
                      "text": "    clientSecret: some-client-secret\n```\n\n##### Service Principal with Certificate\n\nTo configure a Service Principal with Certificate credentials to access the\nAzure Key Vault, a JSON or YAML object with `tenantId`, `clientId` and\n",
                      "markdown": "`    clientSecret: some-client-secret\n```\n\n##### Service Principal with Certificate\n\nTo configure a Service Principal with Certificate credentials to access the\nAzure Key Vault, a JSON or YAML object with `tenantId`, `clientId` and\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 866,
                  "startColumn": 19,
                  "endLine": 866,
                  "endColumn": 28,
                  "snippet": {
                    "text": "  name: sops-keys\n  namespace: default\nstringData:\n  # Exemplary Azure Service Principal with Secret\n  sops.azure-kv: |\n    tenantId: some-tenant-id\n    clientId: some-client-id\n",
                    "rendered": {
                      "text": "  name: sops-keys\n  namespace: default\nstringData:\n  # Exemplary Azure Service Principal with Secret\n  sops.azure-kv: |\n    tenantId: some-tenant-id\n    clientId: some-client-id\n",
                      "markdown": "`  name: sops-keys\n  namespace: default\nstringData:\n  # Exemplary Azure Service Principal with Secret\n  sops.azure-kv: |\n    tenantId: some-tenant-id\n    clientId: some-client-id\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 852,
                  "startColumn": 14,
                  "endLine": 852,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n##### Service Principal with Secret\n\nTo configure a Service Principal with Secret credentials to access the Azure\nKey Vault, a JSON or YAML object with `tenantId`, `clientId` and `clientSecret`\nfields must be configured as the `sops.azure-kv` value. It optionally supports\n`authorityHost` to configure an authority host other than the Azure Public Cloud\n",
                    "rendered": {
                      "text": "\n##### Service Principal with Secret\n\nTo configure a Service Principal with Secret credentials to access the Azure\nKey Vault, a JSON or YAML object with `tenantId`, `clientId` and `clientSecret`\nfields must be configured as the `sops.azure-kv` value. It optionally supports\n`authorityHost` to configure an authority host other than the Azure Public Cloud\n",
                      "markdown": "`\n##### Service Principal with Secret\n\nTo configure a Service Principal with Secret credentials to access the Azure\nKey Vault, a JSON or YAML object with `tenantId`, `clientId` and `clientSecret`\nfields must be configured as the `sops.azure-kv` value. It optionally supports\n`authorityHost` to configure an authority host other than the Azure Public Cloud\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 850,
                  "startColumn": 5,
                  "endLine": 850,
                  "endColumn": 14,
                  "snippet": {
                    "text": "with a fixed `sops.azure-kv` key. The value can contain a variety of JSON or\nYAML formats depending on the authentication method you want to utilize.\n\n##### Service Principal with Secret\n\nTo configure a Service Principal with Secret credentials to access the Azure\nKey Vault, a JSON or YAML object with `tenantId`, `clientId` and `clientSecret`\n",
                    "rendered": {
                      "text": "with a fixed `sops.azure-kv` key. The value can contain a variety of JSON or\nYAML formats depending on the authentication method you want to utilize.\n\n##### Service Principal with Secret\n\nTo configure a Service Principal with Secret credentials to access the Azure\nKey Vault, a JSON or YAML object with `tenantId`, `clientId` and `clientSecret`\n",
                      "markdown": "`with a fixed `sops.azure-kv` key. The value can contain a variety of JSON or\nYAML formats depending on the authentication method you want to utilize.\n\n##### Service Principal with Secret\n\nTo configure a Service Principal with Secret credentials to access the Azure\nKey Vault, a JSON or YAML object with `tenantId`, `clientId` and `clientSecret`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 731,
                  "startColumn": 41,
                  "endLine": 731,
                  "endColumn": 46,
                  "snippet": {
                    "text": "Secrets that are a part of the Kustomization.\n\nSince Secrets are either plain text or `base64` encoded, it's unsafe to store\nthem in plain text in a public or private Git repository. In order to store\nthem safely, you can use [Mozilla SOPS](https://github.com/mozilla/sops) and\nencrypt your Kubernetes Secret data with [age](https://age-encryption.org/v1/)\nand/or [OpenPGP](https://www.openpgp.org) keys, or with provider implementations\n",
                    "rendered": {
                      "text": "Secrets that are a part of the Kustomization.\n\nSince Secrets are either plain text or `base64` encoded, it's unsafe to store\nthem in plain text in a public or private Git repository. In order to store\nthem safely, you can use [Mozilla SOPS](https://github.com/mozilla/sops) and\nencrypt your Kubernetes Secret data with [age](https://age-encryption.org/v1/)\nand/or [OpenPGP](https://www.openpgp.org) keys, or with provider implementations\n",
                      "markdown": "`Secrets that are a part of the Kustomization.\n\nSince Secrets are either plain text or `base64` encoded, it's unsafe to store\nthem in plain text in a public or private Git repository. In order to store\nthem safely, you can use [Mozilla SOPS](https://github.com/mozilla/sops) and\nencrypt your Kubernetes Secret data with [age](https://age-encryption.org/v1/)\nand/or [OpenPGP](https://www.openpgp.org) keys, or with provider implementations\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 721,
                  "startColumn": 35,
                  "endLine": 721,
                  "endColumn": 44,
                  "snippet": {
                    "text": "per-provider installation of kustomize-controller.\n\nWhen both `.spec.kubeConfig` and `.spec.ServiceAccountName` are specified,\nthe controller will impersonate the service account on the target cluster.\n\nFor more information, see [remote clusters/Cluster-API](#remote-clusterscluster-api).\n\n",
                    "rendered": {
                      "text": "per-provider installation of kustomize-controller.\n\nWhen both `.spec.kubeConfig` and `.spec.ServiceAccountName` are specified,\nthe controller will impersonate the service account on the target cluster.\n\nFor more information, see [remote clusters/Cluster-API](#remote-clusterscluster-api).\n\n",
                      "markdown": "`per-provider installation of kustomize-controller.\n\nWhen both `.spec.kubeConfig` and `.spec.ServiceAccountName` are specified,\nthe controller will impersonate the service account on the target cluster.\n\nFor more information, see [remote clusters/Cluster-API](#remote-clusterscluster-api).\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 386,
                  "startColumn": 3,
                  "endLine": 386,
                  "endColumn": 12,
                  "snippet": {
                    "text": "**Note:** Circular dependencies between Kustomizations must be avoided,\notherwise the interdependent Kustomizations will never be applied on the cluster.\n\n### Service Account reference\n\n`.spec.serviceAccountName` is an optional field used to specify the\nServiceAccount to be impersonated while reconciling the Kustomization. For more\n",
                    "rendered": {
                      "text": "**Note:** Circular dependencies between Kustomizations must be avoided,\notherwise the interdependent Kustomizations will never be applied on the cluster.\n\n### Service Account reference\n\n`.spec.serviceAccountName` is an optional field used to specify the\nServiceAccount to be impersonated while reconciling the Kustomization. For more\n",
                      "markdown": "`**Note:** Circular dependencies between Kustomizations must be avoided,\notherwise the interdependent Kustomizations will never be applied on the cluster.\n\n### Service Account reference\n\n`.spec.serviceAccountName` is an optional field used to specify the\nServiceAccount to be impersonated while reconciling the Kustomization. For more\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 380,
                  "startColumn": 49,
                  "endLine": 380,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\nIf `.spec.healthChecks` is non-empty or `.spec.wait` is set to `true`, a\nKustomization will be applied after all its dependencies' health checks have\npassed. For example, this can be used to ensure a service mesh proxy injector\nis running before deploying applications inside the mesh.\n\n**Note:** Circular dependencies between Kustomizations must be avoided,\n",
                    "rendered": {
                      "text": "\nIf `.spec.healthChecks` is non-empty or `.spec.wait` is set to `true`, a\nKustomization will be applied after all its dependencies' health checks have\npassed. For example, this can be used to ensure a service mesh proxy injector\nis running before deploying applications inside the mesh.\n\n**Note:** Circular dependencies between Kustomizations must be avoided,\n",
                      "markdown": "`\nIf `.spec.healthChecks` is non-empty or `.spec.wait` is set to `true`, a\nKustomization will be applied after all its dependencies' health checks have\npassed. For example, this can be used to ensure a service mesh proxy injector\nis running before deploying applications inside the mesh.\n\n**Note:** Circular dependencies between Kustomizations must be avoided,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 317,
                  "startColumn": 49,
                  "endLine": 317,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\n### Timeout\n\n`.spec.timeout` is an optional field to specify a timeout duration for any\noperation like building, applying, health checking, etc. performed during the\nreconciliation process.\n\n",
                    "rendered": {
                      "text": "\n### Timeout\n\n`.spec.timeout` is an optional field to specify a timeout duration for any\noperation like building, applying, health checking, etc. performed during the\nreconciliation process.\n\n",
                      "markdown": "`\n### Timeout\n\n`.spec.timeout` is an optional field to specify a timeout duration for any\noperation like building, applying, health checking, etc. performed during the\nreconciliation process.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 315,
                  "startColumn": 3,
                  "endLine": 316,
                  "snippet": {
                    "text": "reconciled resources as part of the Kustomization. If set to `true`,\n`.spec.healthChecks` is ignored.\n\n### Timeout\n\n`.spec.timeout` is an optional field to specify a timeout duration for any\noperation like building, applying, health checking, etc. performed during the\nreconciliation process.\n",
                    "rendered": {
                      "text": "reconciled resources as part of the Kustomization. If set to `true`,\n`.spec.healthChecks` is ignored.\n\n### Timeout\n\n`.spec.timeout` is an optional field to specify a timeout duration for any\noperation like building, applying, health checking, etc. performed during the\nreconciliation process.\n",
                      "markdown": "`reconciled resources as part of the Kustomization. If set to `true`,\n`.spec.healthChecks` is ignored.\n\n### Timeout\n\n`.spec.timeout` is an optional field to specify a timeout duration for any\noperation like building, applying, health checking, etc. performed during the\nreconciliation process.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 272,
                  "startColumn": 38,
                  "endLine": 272,
                  "endColumn": 47,
                  "snippet": {
                    "text": "After applying the kustomize build output, the controller verifies if the\nrollout was completed successfully. If the deployment was successful, the\nKustomization `Ready` condition is marked as `True`, if the rollout failed,\nor if it takes more than the specified timeout to complete, then the\nKustomization `Ready` condition is set to `False`. If the deployment becomes\nhealthy on the next execution, then the Kustomization is marked as ready.\n\n",
                    "rendered": {
                      "text": "After applying the kustomize build output, the controller verifies if the\nrollout was completed successfully. If the deployment was successful, the\nKustomization `Ready` condition is marked as `True`, if the rollout failed,\nor if it takes more than the specified timeout to complete, then the\nKustomization `Ready` condition is set to `False`. If the deployment becomes\nhealthy on the next execution, then the Kustomization is marked as ready.\n\n",
                      "markdown": "`After applying the kustomize build output, the controller verifies if the\nrollout was completed successfully. If the deployment was successful, the\nKustomization `Ready` condition is marked as `True`, if the rollout failed,\nor if it takes more than the specified timeout to complete, then the\nKustomization `Ready` condition is set to `False`. If the deployment becomes\nhealthy on the next execution, then the Kustomization is marked as ready.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 10,
                  "endLine": 55,
                  "endColumn": 15,
                  "snippet": {
                    "text": "  the cluster.\n- As specified by `.spec.interval`, every ten minutes, the Kustomization runs a\n  server-side apply dry-run to detect and correct drift inside the cluster.\n- When the Git revision changes, the manifests are reconciled automatically. If\n  previously applied objects are missing from the current revision, these\n  objects are deleted from the cluster when `.spec.prune` is enabled.\n\n",
                    "rendered": {
                      "text": "  the cluster.\n- As specified by `.spec.interval`, every ten minutes, the Kustomization runs a\n  server-side apply dry-run to detect and correct drift inside the cluster.\n- When the Git revision changes, the manifests are reconciled automatically. If\n  previously applied objects are missing from the current revision, these\n  objects are deleted from the cluster when `.spec.prune` is enabled.\n\n",
                      "markdown": "`  the cluster.\n- As specified by `.spec.interval`, every ten minutes, the Kustomization runs a\n  server-side apply dry-run to detect and correct drift inside the cluster.\n- When the Git revision changes, the manifests are reconciled automatically. If\n  previously applied objects are missing from the current revision, these\n  objects are deleted from the cluster when `.spec.prune` is enabled.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1/kustomizations.md"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 32,
                  "endLine": 13,
                  "endColumn": 37,
                  "snippet": {
                    "text": "## Example\n\nThe following is an example of a Flux Kustomization that reconciles the\nKubernetes manifests stored in a Git repository.\n\n```yaml\napiVersion: source.toolkit.fluxcd.io/v1\n",
                    "rendered": {
                      "text": "## Example\n\nThe following is an example of a Flux Kustomization that reconciles the\nKubernetes manifests stored in a Git repository.\n\n```yaml\napiVersion: source.toolkit.fluxcd.io/v1\n",
                      "markdown": "`## Example\n\nThe following is an example of a Flux Kustomization that reconciles the\nKubernetes manifests stored in a Git repository.\n\n```yaml\napiVersion: source.toolkit.fluxcd.io/v1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/api/v1/kustomization_types.go"
                },
                "region": {
                  "startLine": 154,
                  "endLine": 154,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// Force instructs the controller to recreate resources\n\t// when patching fails due to an immutable field change.\n",
                    "rendered": {
                      "text": "\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// Force instructs the controller to recreate resources\n\t// when patching fails due to an immutable field change.\n",
                      "markdown": "`\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// Force instructs the controller to recreate resources\n\t// when patching fails due to an immutable field change.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/testdata/file-transformer/secret-generator.yaml"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 13,
                  "endLine": 7,
                  "endColumn": 21,
                  "snippet": {
                    "text": "  name: secret\nliterals:\n  - username=admin\n  - password=password\n",
                    "rendered": {
                      "text": "  name: secret\nliterals:\n  - username=admin\n  - password=password\n",
                      "markdown": "`  name: secret\nliterals:\n  - username=admin\n  - password=password\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/testdata/file-transformer/secret-generator.yaml"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 4,
                  "endLine": 7,
                  "endColumn": 12,
                  "snippet": {
                    "text": "  name: secret\nliterals:\n  - username=admin\n  - password=password\n",
                    "rendered": {
                      "text": "  name: secret\nliterals:\n  - username=admin\n  - password=password\n",
                      "markdown": "`  name: secret\nliterals:\n  - username=admin\n  - password=password\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/testdata/sops/day.txt.encrypted"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 10,
                  "endLine": 14,
                  "endColumn": 52,
                  "snippet": {
                    "text": "7HXQWqtd7EXmy/I94okNVXeAZuuQFt/So78jJ4H9uQK1snukPNBhr\\nG8aM8SfdrTbp4KZQpm2RJwNdhbHzHoz2M2Dc6Eo14FceW0R0jYDaKTwKeNIgH6jS\\nXgGdX+eJRyC1yhp6HAXOaaR9MvXJ8xCi6clWRpI9h3wxnrZtg+pERFeHhp2Ldlww\\nRTjw4g3Cp9GQJB/0aTkVVOPmZ4/jpCyUS6hiV3cEE4veuDYZ20evpgO4sld6Ve8=\\n=1o9a\\n-----END PGP MESSAGE-----\\n\",\n\t\t\t\t\"fp\": \"35C1A64CD7FC0AB6EB66756B2445463C3234ECE1\"\n\t\t\t}\n\t\t],\n\t\t\"encrypted_regex\": \"^(data|stringData)$\",\n\t\t\"version\": \"3.6.0\"\n\t}\n}",
                    "rendered": {
                      "text": "7HXQWqtd7EXmy/I94okNVXeAZuuQFt/So78jJ4H9uQK1snukPNBhr\\nG8aM8SfdrTbp4KZQpm2RJwNdhbHzHoz2M2Dc6Eo14FceW0R0jYDaKTwKeNIgH6jS\\nXgGdX+eJRyC1yhp6HAXOaaR9MvXJ8xCi6clWRpI9h3wxnrZtg+pERFeHhp2Ldlww\\nRTjw4g3Cp9GQJB/0aTkVVOPmZ4/jpCyUS6hiV3cEE4veuDYZ20evpgO4sld6Ve8=\\n=1o9a\\n-----END PGP MESSAGE-----\\n\",\n\t\t\t\t\"fp\": \"35C1A64CD7FC0AB6EB66756B2445463C3234ECE1\"\n\t\t\t}\n\t\t],\n\t\t\"encrypted_regex\": \"^(data|stringData)$\",\n\t\t\"version\": \"3.6.0\"\n\t}\n}",
                      "markdown": "`7HXQWqtd7EXmy/I94okNVXeAZuuQFt/So78jJ4H9uQK1snukPNBhr\\nG8aM8SfdrTbp4KZQpm2RJwNdhbHzHoz2M2Dc6Eo14FceW0R0jYDaKTwKeNIgH6jS\\nXgGdX+eJRyC1yhp6HAXOaaR9MvXJ8xCi6clWRpI9h3wxnrZtg+pERFeHhp2Ldlww\\nRTjw4g3Cp9GQJB/0aTkVVOPmZ4/jpCyUS6hiV3cEE4veuDYZ20evpgO4sld6Ve8=\\n=1o9a\\n-----END PGP MESSAGE-----\\n\",\n\t\t\t\t\"fp\": \"35C1A64CD7FC0AB6EB66756B2445463C3234ECE1\"\n\t\t\t}\n\t\t],\n\t\t\"encrypted_regex\": \"^(data|stringData)$\",\n\t\t\"version\": \"3.6.0\"\n\t}\n}`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_acl_test.go"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 16,
                  "endLine": 129,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treadyCondition = apimeta.FindStatusCondition(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t\treturn apimeta.IsStatusConditionFalse(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t}, timeout, time.Second).Should(BeTrue())\n",
                    "rendered": {
                      "text": "\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treadyCondition = apimeta.FindStatusCondition(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t\treturn apimeta.IsStatusConditionFalse(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t}, timeout, time.Second).Should(BeTrue())\n",
                      "markdown": "`\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treadyCondition = apimeta.FindStatusCondition(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t\treturn apimeta.IsStatusConditionFalse(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t}, timeout, time.Second).Should(BeTrue())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_acl_test.go"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 16,
                  "endLine": 113,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\n\tt.Run(\"reconciles from cross-namespace source\", func(t *testing.T) {\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treadyCondition = apimeta.FindStatusCondition(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t\treturn resultK.Status.LastAppliedRevision == revision\n\t\t}, timeout, time.Second).Should(BeTrue())\n",
                    "rendered": {
                      "text": "\n\tt.Run(\"reconciles from cross-namespace source\", func(t *testing.T) {\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treadyCondition = apimeta.FindStatusCondition(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t\treturn resultK.Status.LastAppliedRevision == revision\n\t\t}, timeout, time.Second).Should(BeTrue())\n",
                      "markdown": "`\n\tt.Run(\"reconciles from cross-namespace source\", func(t *testing.T) {\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treadyCondition = apimeta.FindStatusCondition(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t\treturn resultK.Status.LastAppliedRevision == revision\n\t\t}, timeout, time.Second).Should(BeTrue())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_acl_test.go"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 20,
                  "endLine": 93,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\t\tInterval: metav1.Duration{Duration: reconciliationInterval},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t\tInterval: metav1.Duration{Duration: reconciliationInterval},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n",
                      "markdown": "`\t\t\tInterval: metav1.Duration{Duration: reconciliationInterval},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_inventory_test.go"
                },
                "region": {
                  "startLine": 270,
                  "startColumn": 20,
                  "endLine": 270,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\terr = k8sClient.Get(context.Background(), secretName, old)\n\t\tg.Expect(apierrors.IsNotFound(err)).To(BeTrue())\n\n\t\tg.Expect(k8sClient.Get(context.Background(), configMapName, configMap)).To(Succeed())\n\t\tg.Expect(configMap.Data[\"key\"]).To(Equal(id))\n\t})\n}\n",
                    "rendered": {
                      "text": "\t\terr = k8sClient.Get(context.Background(), secretName, old)\n\t\tg.Expect(apierrors.IsNotFound(err)).To(BeTrue())\n\n\t\tg.Expect(k8sClient.Get(context.Background(), configMapName, configMap)).To(Succeed())\n\t\tg.Expect(configMap.Data[\"key\"]).To(Equal(id))\n\t})\n}\n",
                      "markdown": "`\t\terr = k8sClient.Get(context.Background(), secretName, old)\n\t\tg.Expect(apierrors.IsNotFound(err)).To(BeTrue())\n\n\t\tg.Expect(k8sClient.Get(context.Background(), configMapName, configMap)).To(Succeed())\n\t\tg.Expect(configMap.Data[\"key\"]).To(Equal(id))\n\t})\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_inventory_test.go"
                },
                "region": {
                  "startLine": 267,
                  "startColumn": 17,
                  "endLine": 267,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t\t}))\n\n\t\told := &corev1.Secret{}\n\t\terr = k8sClient.Get(context.Background(), secretName, old)\n\t\tg.Expect(apierrors.IsNotFound(err)).To(BeTrue())\n\n\t\tg.Expect(k8sClient.Get(context.Background(), configMapName, configMap)).To(Succeed())\n",
                    "rendered": {
                      "text": "\t\t}))\n\n\t\told := &corev1.Secret{}\n\t\terr = k8sClient.Get(context.Background(), secretName, old)\n\t\tg.Expect(apierrors.IsNotFound(err)).To(BeTrue())\n\n\t\tg.Expect(k8sClient.Get(context.Background(), configMapName, configMap)).To(Succeed())\n",
                      "markdown": "`\t\t}))\n\n\t\told := &corev1.Secret{}\n\t\terr = k8sClient.Get(context.Background(), secretName, old)\n\t\tg.Expect(apierrors.IsNotFound(err)).To(BeTrue())\n\n\t\tg.Expect(k8sClient.Get(context.Background(), configMapName, configMap)).To(Succeed())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_inventory_test.go"
                },
                "region": {
                  "startLine": 236,
                  "startColumn": 16,
                  "endLine": 236,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\tready := apimeta.IsStatusConditionTrue(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t\treturn ready && resultK.Status.LastAppliedRevision == testRev\n\t\t}, timeout, time.Second).Should(BeTrue())\n",
                    "rendered": {
                      "text": "\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\tready := apimeta.IsStatusConditionTrue(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t\treturn ready && resultK.Status.LastAppliedRevision == testRev\n\t\t}, timeout, time.Second).Should(BeTrue())\n",
                      "markdown": "`\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\tready := apimeta.IsStatusConditionTrue(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t\treturn ready && resultK.Status.LastAppliedRevision == testRev\n\t\t}, timeout, time.Second).Should(BeTrue())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_inventory_test.go"
                },
                "region": {
                  "startLine": 222,
                  "startColumn": 20,
                  "endLine": 222,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\ttestId := id + randStringRunes(5)\n\t\ttestRev := revision + \"-3\"\n\n\t\tg.Expect(k8sClient.Get(context.Background(), configMapName, configMap)).To(Succeed())\n\t\tconfigMapClone := configMap.DeepCopy()\n\t\tconfigMapClone.SetAnnotations(map[string]string{\n\t\t\tfmt.Sprintf(\"%s/reconcile\", kustomizev1.GroupVersion.Group): kustomizev1.DisabledValue,\n",
                    "rendered": {
                      "text": "\t\ttestId := id + randStringRunes(5)\n\t\ttestRev := revision + \"-3\"\n\n\t\tg.Expect(k8sClient.Get(context.Background(), configMapName, configMap)).To(Succeed())\n\t\tconfigMapClone := configMap.DeepCopy()\n\t\tconfigMapClone.SetAnnotations(map[string]string{\n\t\t\tfmt.Sprintf(\"%s/reconcile\", kustomizev1.GroupVersion.Group): kustomizev1.DisabledValue,\n",
                      "markdown": "`\t\ttestId := id + randStringRunes(5)\n\t\ttestRev := revision + \"-3\"\n\n\t\tg.Expect(k8sClient.Get(context.Background(), configMapName, configMap)).To(Succeed())\n\t\tconfigMapClone := configMap.DeepCopy()\n\t\tconfigMapClone.SetAnnotations(map[string]string{\n\t\t\tfmt.Sprintf(\"%s/reconcile\", kustomizev1.GroupVersion.Group): kustomizev1.DisabledValue,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_inventory_test.go"
                },
                "region": {
                  "startLine": 214,
                  "startColumn": 20,
                  "endLine": 214,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\t\treturn ready && resultK.Status.LastAppliedRevision == testRev\n\t\t}, timeout, time.Second).Should(BeTrue())\n\n\t\tg.Expect(k8sClient.Get(context.Background(), configMapName, configMap)).To(Succeed())\n\t\tg.Expect(configMap.Data[\"key\"]).To(Equal(id))\n\t})\n\n",
                    "rendered": {
                      "text": "\t\t\treturn ready && resultK.Status.LastAppliedRevision == testRev\n\t\t}, timeout, time.Second).Should(BeTrue())\n\n\t\tg.Expect(k8sClient.Get(context.Background(), configMapName, configMap)).To(Succeed())\n\t\tg.Expect(configMap.Data[\"key\"]).To(Equal(id))\n\t})\n\n",
                      "markdown": "`\t\t\treturn ready && resultK.Status.LastAppliedRevision == testRev\n\t\t}, timeout, time.Second).Should(BeTrue())\n\n\t\tg.Expect(k8sClient.Get(context.Background(), configMapName, configMap)).To(Succeed())\n\t\tg.Expect(configMap.Data[\"key\"]).To(Equal(id))\n\t})\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_inventory_test.go"
                },
                "region": {
                  "startLine": 209,
                  "startColumn": 16,
                  "endLine": 209,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\tready := apimeta.IsStatusConditionTrue(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t\treturn ready && resultK.Status.LastAppliedRevision == testRev\n\t\t}, timeout, time.Second).Should(BeTrue())\n",
                    "rendered": {
                      "text": "\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\tready := apimeta.IsStatusConditionTrue(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t\treturn ready && resultK.Status.LastAppliedRevision == testRev\n\t\t}, timeout, time.Second).Should(BeTrue())\n",
                      "markdown": "`\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\tready := apimeta.IsStatusConditionTrue(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t\treturn ready && resultK.Status.LastAppliedRevision == testRev\n\t\t}, timeout, time.Second).Should(BeTrue())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_inventory_test.go"
                },
                "region": {
                  "startLine": 198,
                  "startColumn": 20,
                  "endLine": 198,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\tt.Run(\"corrects drift\", func(t *testing.T) {\n\t\ttestRev := revision + \"-2\"\n\n\t\tg.Expect(k8sClient.Get(context.Background(), configMapName, configMap)).To(Succeed())\n\t\tconfigMapClone := configMap.DeepCopy()\n\t\tconfigMapClone.SetAnnotations(map[string]string{\n\t\t\tfmt.Sprintf(\"%s/reconcile\", kustomizev1.GroupVersion.Group): \"enabled\",\n",
                    "rendered": {
                      "text": "\tt.Run(\"corrects drift\", func(t *testing.T) {\n\t\ttestRev := revision + \"-2\"\n\n\t\tg.Expect(k8sClient.Get(context.Background(), configMapName, configMap)).To(Succeed())\n\t\tconfigMapClone := configMap.DeepCopy()\n\t\tconfigMapClone.SetAnnotations(map[string]string{\n\t\t\tfmt.Sprintf(\"%s/reconcile\", kustomizev1.GroupVersion.Group): \"enabled\",\n",
                      "markdown": "`\tt.Run(\"corrects drift\", func(t *testing.T) {\n\t\ttestRev := revision + \"-2\"\n\n\t\tg.Expect(k8sClient.Get(context.Background(), configMapName, configMap)).To(Succeed())\n\t\tconfigMapClone := configMap.DeepCopy()\n\t\tconfigMapClone.SetAnnotations(map[string]string{\n\t\t\tfmt.Sprintf(\"%s/reconcile\", kustomizev1.GroupVersion.Group): \"enabled\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_inventory_test.go"
                },
                "region": {
                  "startLine": 191,
                  "startColumn": 20,
                  "endLine": 191,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\t\treturn ready && resultK.Status.LastAppliedRevision == testRev\n\t\t}, timeout, time.Second).Should(BeTrue())\n\n\t\tg.Expect(k8sClient.Get(context.Background(), configMapName, configMap)).To(Succeed())\n\t\tg.Expect(configMap.Data[\"key\"]).To(Equal(testVal))\n\t})\n\n",
                    "rendered": {
                      "text": "\t\t\treturn ready && resultK.Status.LastAppliedRevision == testRev\n\t\t}, timeout, time.Second).Should(BeTrue())\n\n\t\tg.Expect(k8sClient.Get(context.Background(), configMapName, configMap)).To(Succeed())\n\t\tg.Expect(configMap.Data[\"key\"]).To(Equal(testVal))\n\t})\n\n",
                      "markdown": "`\t\t\treturn ready && resultK.Status.LastAppliedRevision == testRev\n\t\t}, timeout, time.Second).Should(BeTrue())\n\n\t\tg.Expect(k8sClient.Get(context.Background(), configMapName, configMap)).To(Succeed())\n\t\tg.Expect(configMap.Data[\"key\"]).To(Equal(testVal))\n\t})\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_inventory_test.go"
                },
                "region": {
                  "startLine": 186,
                  "startColumn": 16,
                  "endLine": 186,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\tready := apimeta.IsStatusConditionTrue(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t\treturn ready && resultK.Status.LastAppliedRevision == testRev\n\t\t}, timeout, time.Second).Should(BeTrue())\n",
                    "rendered": {
                      "text": "\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\tready := apimeta.IsStatusConditionTrue(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t\treturn ready && resultK.Status.LastAppliedRevision == testRev\n\t\t}, timeout, time.Second).Should(BeTrue())\n",
                      "markdown": "`\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\tready := apimeta.IsStatusConditionTrue(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t\treturn ready && resultK.Status.LastAppliedRevision == testRev\n\t\t}, timeout, time.Second).Should(BeTrue())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_inventory_test.go"
                },
                "region": {
                  "startLine": 174,
                  "startColumn": 20,
                  "endLine": 174,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\ttestRev := revision + \"-1\"\n\t\ttestVal := \"test\"\n\n\t\tg.Expect(k8sClient.Get(context.Background(), configMapName, configMap)).To(Succeed())\n\t\tconfigMapClone := configMap.DeepCopy()\n\t\tconfigMapClone.Data[\"key\"] = testVal\n\t\tconfigMapClone.SetAnnotations(map[string]string{\n",
                    "rendered": {
                      "text": "\t\ttestRev := revision + \"-1\"\n\t\ttestVal := \"test\"\n\n\t\tg.Expect(k8sClient.Get(context.Background(), configMapName, configMap)).To(Succeed())\n\t\tconfigMapClone := configMap.DeepCopy()\n\t\tconfigMapClone.Data[\"key\"] = testVal\n\t\tconfigMapClone.SetAnnotations(map[string]string{\n",
                      "markdown": "`\t\ttestRev := revision + \"-1\"\n\t\ttestVal := \"test\"\n\n\t\tg.Expect(k8sClient.Get(context.Background(), configMapName, configMap)).To(Succeed())\n\t\tconfigMapClone := configMap.DeepCopy()\n\t\tconfigMapClone.Data[\"key\"] = testVal\n\t\tconfigMapClone.SetAnnotations(map[string]string{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_inventory_test.go"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 20,
                  "endLine": 141,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\tg.Expect(k8sClient.Get(context.Background(), secretName, secret)).To(Succeed())\n\t\tg.Expect(secret.Data[\"key\"]).To(Equal([]byte(id)))\n\n\t\tg.Expect(k8sClient.Get(context.Background(), configMapName, configMap)).To(Succeed())\n\t\tg.Expect(configMap.Data[\"key\"]).To(Equal(id))\n\n\t\tg.Expect(resultK.Status.Inventory.Entries).Should(ConsistOf([]kustomizev1.ResourceRef{\n",
                    "rendered": {
                      "text": "\t\tg.Expect(k8sClient.Get(context.Background(), secretName, secret)).To(Succeed())\n\t\tg.Expect(secret.Data[\"key\"]).To(Equal([]byte(id)))\n\n\t\tg.Expect(k8sClient.Get(context.Background(), configMapName, configMap)).To(Succeed())\n\t\tg.Expect(configMap.Data[\"key\"]).To(Equal(id))\n\n\t\tg.Expect(resultK.Status.Inventory.Entries).Should(ConsistOf([]kustomizev1.ResourceRef{\n",
                      "markdown": "`\t\tg.Expect(k8sClient.Get(context.Background(), secretName, secret)).To(Succeed())\n\t\tg.Expect(secret.Data[\"key\"]).To(Equal([]byte(id)))\n\n\t\tg.Expect(k8sClient.Get(context.Background(), configMapName, configMap)).To(Succeed())\n\t\tg.Expect(configMap.Data[\"key\"]).To(Equal(id))\n\n\t\tg.Expect(resultK.Status.Inventory.Entries).Should(ConsistOf([]kustomizev1.ResourceRef{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_inventory_test.go"
                },
                "region": {
                  "startLine": 138,
                  "startColumn": 20,
                  "endLine": 138,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\tsecretName := types.NamespacedName{Name: id, Namespace: id}\n\n\tt.Run(\"creates resources\", func(t *testing.T) {\n\t\tg.Expect(k8sClient.Get(context.Background(), secretName, secret)).To(Succeed())\n\t\tg.Expect(secret.Data[\"key\"]).To(Equal([]byte(id)))\n\n\t\tg.Expect(k8sClient.Get(context.Background(), configMapName, configMap)).To(Succeed())\n",
                    "rendered": {
                      "text": "\tsecretName := types.NamespacedName{Name: id, Namespace: id}\n\n\tt.Run(\"creates resources\", func(t *testing.T) {\n\t\tg.Expect(k8sClient.Get(context.Background(), secretName, secret)).To(Succeed())\n\t\tg.Expect(secret.Data[\"key\"]).To(Equal([]byte(id)))\n\n\t\tg.Expect(k8sClient.Get(context.Background(), configMapName, configMap)).To(Succeed())\n",
                      "markdown": "`\tsecretName := types.NamespacedName{Name: id, Namespace: id}\n\n\tt.Run(\"creates resources\", func(t *testing.T) {\n\t\tg.Expect(k8sClient.Get(context.Background(), secretName, secret)).To(Succeed())\n\t\tg.Expect(secret.Data[\"key\"]).To(Equal([]byte(id)))\n\n\t\tg.Expect(k8sClient.Get(context.Background(), configMapName, configMap)).To(Succeed())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_inventory_test.go"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 15,
                  "endLine": 121,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\tresultK := &kustomizev1.Kustomization{}\n\n\tg.Eventually(func() bool {\n\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\tready := apimeta.IsStatusConditionTrue(resultK.Status.Conditions, meta.ReadyCondition)\n\t\treturn ready && resultK.Status.LastAppliedRevision == revision\n\t}, timeout, time.Second).Should(BeTrue())\n",
                    "rendered": {
                      "text": "\tresultK := &kustomizev1.Kustomization{}\n\n\tg.Eventually(func() bool {\n\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\tready := apimeta.IsStatusConditionTrue(resultK.Status.Conditions, meta.ReadyCondition)\n\t\treturn ready && resultK.Status.LastAppliedRevision == revision\n\t}, timeout, time.Second).Should(BeTrue())\n",
                      "markdown": "`\tresultK := &kustomizev1.Kustomization{}\n\n\tg.Eventually(func() bool {\n\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\tready := apimeta.IsStatusConditionTrue(resultK.Status.Conditions, meta.ReadyCondition)\n\t\treturn ready && resultK.Status.LastAppliedRevision == revision\n\t}, timeout, time.Second).Should(BeTrue())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_inventory_test.go"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 20,
                  "endLine": 100,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\t\tInterval: metav1.Duration{Duration: 2 * time.Minute},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t\tInterval: metav1.Duration{Duration: 2 * time.Minute},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n",
                      "markdown": "`\t\t\tInterval: metav1.Duration{Duration: 2 * time.Minute},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_wait_test.go"
                },
                "region": {
                  "startLine": 273,
                  "startColumn": 18,
                  "endLine": 273,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t\tg.Expect(k8sClient.Delete(context.Background(), resultK)).To(Succeed())\n\n\t\tg.Eventually(func() bool {\n\t\t\terr = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn apierrors.IsNotFound(err)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t})\n",
                    "rendered": {
                      "text": "\t\tg.Expect(k8sClient.Delete(context.Background(), resultK)).To(Succeed())\n\n\t\tg.Eventually(func() bool {\n\t\t\terr = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn apierrors.IsNotFound(err)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t})\n",
                      "markdown": "`\t\tg.Expect(k8sClient.Delete(context.Background(), resultK)).To(Succeed())\n\n\t\tg.Eventually(func() bool {\n\t\t\terr = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn apierrors.IsNotFound(err)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_wait_test.go"
                },
                "region": {
                  "startLine": 246,
                  "startColumn": 16,
                  "endLine": 246,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn resultK.Status.LastAppliedRevision == revision\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t\tlogStatus(t, resultK)\n",
                    "rendered": {
                      "text": "\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn resultK.Status.LastAppliedRevision == revision\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t\tlogStatus(t, resultK)\n",
                      "markdown": "`\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn resultK.Status.LastAppliedRevision == revision\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t\tlogStatus(t, resultK)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_wait_test.go"
                },
                "region": {
                  "startLine": 209,
                  "startColumn": 16,
                  "endLine": 209,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\t}, timeout, time.Second).Should(BeNil())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn isReconcileSuccess(resultK)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t\tlogStatus(t, resultK)\n",
                    "rendered": {
                      "text": "\t\t}, timeout, time.Second).Should(BeNil())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn isReconcileSuccess(resultK)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t\tlogStatus(t, resultK)\n",
                      "markdown": "`\t\t}, timeout, time.Second).Should(BeNil())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn isReconcileSuccess(resultK)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t\tlogStatus(t, resultK)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_wait_test.go"
                },
                "region": {
                  "startLine": 203,
                  "startColumn": 16,
                  "endLine": 203,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\n\tt.Run(\"recovers and reports healthy status\", func(t *testing.T) {\n\t\tg.Eventually(func() error {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\tresultK.Spec.Wait = true\n\t\t\treturn k8sClient.Update(context.Background(), resultK)\n\t\t}, timeout, time.Second).Should(BeNil())\n",
                    "rendered": {
                      "text": "\n\tt.Run(\"recovers and reports healthy status\", func(t *testing.T) {\n\t\tg.Eventually(func() error {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\tresultK.Spec.Wait = true\n\t\t\treturn k8sClient.Update(context.Background(), resultK)\n\t\t}, timeout, time.Second).Should(BeNil())\n",
                      "markdown": "`\n\tt.Run(\"recovers and reports healthy status\", func(t *testing.T) {\n\t\tg.Eventually(func() error {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\tresultK.Spec.Wait = true\n\t\t\treturn k8sClient.Update(context.Background(), resultK)\n\t\t}, timeout, time.Second).Should(BeNil())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_wait_test.go"
                },
                "region": {
                  "startLine": 173,
                  "startColumn": 16,
                  "endLine": 173,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\n\tt.Run(\"reports unhealthy status\", func(t *testing.T) {\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn isReconcileFailure(resultK)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t\tlogStatus(t, resultK)\n",
                    "rendered": {
                      "text": "\n\tt.Run(\"reports unhealthy status\", func(t *testing.T) {\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn isReconcileFailure(resultK)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t\tlogStatus(t, resultK)\n",
                      "markdown": "`\n\tt.Run(\"reports unhealthy status\", func(t *testing.T) {\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn isReconcileFailure(resultK)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t\tlogStatus(t, resultK)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_wait_test.go"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 16,
                  "endLine": 157,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\t}, timeout, time.Second).Should(BeNil())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn isReconcileRunning(resultK) && conditions.IsUnknown(resultK, meta.HealthyCondition)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t\tlogStatus(t, resultK)\n",
                    "rendered": {
                      "text": "\t\t}, timeout, time.Second).Should(BeNil())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn isReconcileRunning(resultK) && conditions.IsUnknown(resultK, meta.HealthyCondition)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t\tlogStatus(t, resultK)\n",
                      "markdown": "`\t\t}, timeout, time.Second).Should(BeNil())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn isReconcileRunning(resultK) && conditions.IsUnknown(resultK, meta.HealthyCondition)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t\tlogStatus(t, resultK)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_wait_test.go"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 16,
                  "endLine": 140,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\n\tt.Run(\"reports progressing status\", func(t *testing.T) {\n\t\tg.Eventually(func() error {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\tresultK.SetAnnotations(map[string]string{\n\t\t\t\tmeta.ReconcileRequestAnnotation: reconcileRequestAt,\n\t\t\t})\n",
                    "rendered": {
                      "text": "\n\tt.Run(\"reports progressing status\", func(t *testing.T) {\n\t\tg.Eventually(func() error {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\tresultK.SetAnnotations(map[string]string{\n\t\t\t\tmeta.ReconcileRequestAnnotation: reconcileRequestAt,\n\t\t\t})\n",
                      "markdown": "`\n\tt.Run(\"reports progressing status\", func(t *testing.T) {\n\t\tg.Eventually(func() error {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\tresultK.SetAnnotations(map[string]string{\n\t\t\t\tmeta.ReconcileRequestAnnotation: reconcileRequestAt,\n\t\t\t})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_wait_test.go"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 16,
                  "endLine": 125,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\n\tt.Run(\"reports healthy status\", func(t *testing.T) {\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn isReconcileSuccess(resultK)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t\tlogStatus(t, resultK)\n",
                    "rendered": {
                      "text": "\n\tt.Run(\"reports healthy status\", func(t *testing.T) {\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn isReconcileSuccess(resultK)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t\tlogStatus(t, resultK)\n",
                      "markdown": "`\n\tt.Run(\"reports healthy status\", func(t *testing.T) {\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn isReconcileSuccess(resultK)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t\tlogStatus(t, resultK)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_wait_test.go"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 20,
                  "endLine": 105,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\t\tInterval: metav1.Duration{Duration: 2 * time.Minute},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t\tInterval: metav1.Duration{Duration: 2 * time.Minute},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n",
                      "markdown": "`\t\t\tInterval: metav1.Duration{Duration: 2 * time.Minute},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_wait_test.go"
                },
                "region": {
                  "startLine": 46,
                  "endLine": 46,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\trevision := \"v1.0.0\"\n\tresultK := &kustomizev1.Kustomization{}\n\treconcileRequestAt := metav1.Now().String()\n\ttimeout := 60 * time.Second\n\n\terr := createNamespace(id)\n\tg.Expect(err).NotTo(HaveOccurred(), \"failed to create test namespace\")\n",
                    "rendered": {
                      "text": "\trevision := \"v1.0.0\"\n\tresultK := &kustomizev1.Kustomization{}\n\treconcileRequestAt := metav1.Now().String()\n\ttimeout := 60 * time.Second\n\n\terr := createNamespace(id)\n\tg.Expect(err).NotTo(HaveOccurred(), \"failed to create test namespace\")\n",
                      "markdown": "`\trevision := \"v1.0.0\"\n\tresultK := &kustomizev1.Kustomization{}\n\treconcileRequestAt := metav1.Now().String()\n\ttimeout := 60 * time.Second\n\n\terr := createNamespace(id)\n\tg.Expect(err).NotTo(HaveOccurred(), \"failed to create test namespace\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_fetcher_test.go"
                },
                "region": {
                  "startLine": 150,
                  "startColumn": 16,
                  "endLine": 150,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\tg.Expect(k8sClient.Status().Update(context.Background(), repo)).To(Succeed())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn apimeta.IsStatusConditionTrue(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t})\n",
                    "rendered": {
                      "text": "\t\tg.Expect(k8sClient.Status().Update(context.Background(), repo)).To(Succeed())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn apimeta.IsStatusConditionTrue(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t})\n",
                      "markdown": "`\t\tg.Expect(k8sClient.Status().Update(context.Background(), repo)).To(Succeed())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn apimeta.IsStatusConditionTrue(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_fetcher_test.go"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 20,
                  "endLine": 144,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t})\n\n\tt.Run(\"recovers after not found errors\", func(t *testing.T) {\n\t\tg.Expect(k8sClient.Get(context.Background(), repositoryName, repo)).Should(Succeed())\n\t\trepo.Status.Artifact.URL = repoURL\n\t\trepo.ManagedFields = nil\n\t\tg.Expect(k8sClient.Status().Update(context.Background(), repo)).To(Succeed())\n",
                    "rendered": {
                      "text": "\t})\n\n\tt.Run(\"recovers after not found errors\", func(t *testing.T) {\n\t\tg.Expect(k8sClient.Get(context.Background(), repositoryName, repo)).Should(Succeed())\n\t\trepo.Status.Artifact.URL = repoURL\n\t\trepo.ManagedFields = nil\n\t\tg.Expect(k8sClient.Status().Update(context.Background(), repo)).To(Succeed())\n",
                      "markdown": "`\t})\n\n\tt.Run(\"recovers after not found errors\", func(t *testing.T) {\n\t\tg.Expect(k8sClient.Get(context.Background(), repositoryName, repo)).Should(Succeed())\n\t\trepo.Status.Artifact.URL = repoURL\n\t\trepo.ManagedFields = nil\n\t\tg.Expect(k8sClient.Status().Update(context.Background(), repo)).To(Succeed())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_fetcher_test.go"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 16,
                  "endLine": 137,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\tg.Expect(k8sClient.Status().Update(context.Background(), repo)).To(Succeed())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\tready := apimeta.FindStatusCondition(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t\treturn strings.Contains(ready.Message, \"artifact not found\")\n\t\t}, timeout, time.Second).Should(BeTrue())\n",
                    "rendered": {
                      "text": "\t\tg.Expect(k8sClient.Status().Update(context.Background(), repo)).To(Succeed())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\tready := apimeta.FindStatusCondition(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t\treturn strings.Contains(ready.Message, \"artifact not found\")\n\t\t}, timeout, time.Second).Should(BeTrue())\n",
                      "markdown": "`\t\tg.Expect(k8sClient.Status().Update(context.Background(), repo)).To(Succeed())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\tready := apimeta.FindStatusCondition(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t\treturn strings.Contains(ready.Message, \"artifact not found\")\n\t\t}, timeout, time.Second).Should(BeTrue())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_fetcher_test.go"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 16,
                  "endLine": 125,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\n\tt.Run(\"downloads artifact\", func(t *testing.T) {\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn apimeta.IsStatusConditionTrue(resultK.Status.Conditions, meta.ReadyCondition) &&\n\t\t\t\tresultK.Status.LastAppliedRevision == revision\n\t\t}, timeout, time.Second).Should(BeTrue())\n",
                    "rendered": {
                      "text": "\n\tt.Run(\"downloads artifact\", func(t *testing.T) {\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn apimeta.IsStatusConditionTrue(resultK.Status.Conditions, meta.ReadyCondition) &&\n\t\t\t\tresultK.Status.LastAppliedRevision == revision\n\t\t}, timeout, time.Second).Should(BeTrue())\n",
                      "markdown": "`\n\tt.Run(\"downloads artifact\", func(t *testing.T) {\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn apimeta.IsStatusConditionTrue(resultK.Status.Conditions, meta.ReadyCondition) &&\n\t\t\t\tresultK.Status.LastAppliedRevision == revision\n\t\t}, timeout, time.Second).Should(BeTrue())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_fetcher_test.go"
                },
                "region": {
                  "startLine": 120,
                  "startColumn": 19,
                  "endLine": 120,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t\t\tAPIVersion: sourcev1.GroupVersion.String(),\n\t\t},\n\t}\n\tg.Expect(k8sClient.Get(context.Background(), repositoryName, repo)).Should(Succeed())\n\trepoURL := repo.Status.Artifact.URL\n\n\tt.Run(\"downloads artifact\", func(t *testing.T) {\n",
                    "rendered": {
                      "text": "\t\t\tAPIVersion: sourcev1.GroupVersion.String(),\n\t\t},\n\t}\n\tg.Expect(k8sClient.Get(context.Background(), repositoryName, repo)).Should(Succeed())\n\trepoURL := repo.Status.Artifact.URL\n\n\tt.Run(\"downloads artifact\", func(t *testing.T) {\n",
                      "markdown": "`\t\t\tAPIVersion: sourcev1.GroupVersion.String(),\n\t\t},\n\t}\n\tg.Expect(k8sClient.Get(context.Background(), repositoryName, repo)).Should(Succeed())\n\trepoURL := repo.Status.Artifact.URL\n\n\tt.Run(\"downloads artifact\", func(t *testing.T) {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_fetcher_test.go"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 20,
                  "endLine": 89,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\t\tInterval: metav1.Duration{Duration: reconciliationInterval},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t\tInterval: metav1.Duration{Duration: reconciliationInterval},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n",
                      "markdown": "`\t\t\tInterval: metav1.Duration{Duration: reconciliationInterval},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_prune_test.go"
                },
                "region": {
                  "startLine": 440,
                  "startColumn": 20,
                  "endLine": 440,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t})\n\n\tt.Run(\"preserves objects with different owner\", func(t *testing.T) {\n\t\tg.Expect(k8sClient.Get(context.Background(), client.ObjectKeyFromObject(resultConfig), resultConfig)).Should(Succeed())\n\t})\n\n}\n",
                    "rendered": {
                      "text": "\t})\n\n\tt.Run(\"preserves objects with different owner\", func(t *testing.T) {\n\t\tg.Expect(k8sClient.Get(context.Background(), client.ObjectKeyFromObject(resultConfig), resultConfig)).Should(Succeed())\n\t})\n\n}\n",
                      "markdown": "`\t})\n\n\tt.Run(\"preserves objects with different owner\", func(t *testing.T) {\n\t\tg.Expect(k8sClient.Get(context.Background(), client.ObjectKeyFromObject(resultConfig), resultConfig)).Should(Succeed())\n\t})\n\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_prune_test.go"
                },
                "region": {
                  "startLine": 435,
                  "startColumn": 17,
                  "endLine": 435,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t\t\treturn apierrors.IsNotFound(err)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\n\t\terr = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(resultSecret), resultSecret)\n\t\tg.Expect(apierrors.IsNotFound(err)).To(BeTrue())\n\t})\n\n",
                    "rendered": {
                      "text": "\t\t\treturn apierrors.IsNotFound(err)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\n\t\terr = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(resultSecret), resultSecret)\n\t\tg.Expect(apierrors.IsNotFound(err)).To(BeTrue())\n\t})\n\n",
                      "markdown": "`\t\t\treturn apierrors.IsNotFound(err)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\n\t\terr = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(resultSecret), resultSecret)\n\t\tg.Expect(apierrors.IsNotFound(err)).To(BeTrue())\n\t})\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_prune_test.go"
                },
                "region": {
                  "startLine": 431,
                  "startColumn": 18,
                  "endLine": 431,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tt.Run(\"deletes owned objects\", func(t *testing.T) {\n\t\tg.Expect(k8sClient.Delete(context.Background(), kustomization)).To(Succeed())\n\t\tg.Eventually(func() bool {\n\t\t\terr = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), kustomization)\n\t\t\treturn apierrors.IsNotFound(err)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\n",
                    "rendered": {
                      "text": "\tt.Run(\"deletes owned objects\", func(t *testing.T) {\n\t\tg.Expect(k8sClient.Delete(context.Background(), kustomization)).To(Succeed())\n\t\tg.Eventually(func() bool {\n\t\t\terr = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), kustomization)\n\t\t\treturn apierrors.IsNotFound(err)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\n",
                      "markdown": "`\tt.Run(\"deletes owned objects\", func(t *testing.T) {\n\t\tg.Expect(k8sClient.Delete(context.Background(), kustomization)).To(Succeed())\n\t\tg.Eventually(func() bool {\n\t\t\terr = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), kustomization)\n\t\t\treturn apierrors.IsNotFound(err)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_prune_test.go"
                },
                "region": {
                  "startLine": 416,
                  "startColumn": 20,
                  "endLine": 416,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\n\tt.Run(\"creates objects with owner labels\", func(t *testing.T) {\n\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, resultSecret)).Should(Succeed())\n\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, resultConfig)).Should(Succeed())\n\n\t\tname := resultConfig.GetLabels()[\"kustomize.toolkit.fluxcd.io/name\"]\n\t\tg.Expect(name).Should(BeIdenticalTo(kustomizationKey.Name))\n",
                    "rendered": {
                      "text": "\n\tt.Run(\"creates objects with owner labels\", func(t *testing.T) {\n\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, resultSecret)).Should(Succeed())\n\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, resultConfig)).Should(Succeed())\n\n\t\tname := resultConfig.GetLabels()[\"kustomize.toolkit.fluxcd.io/name\"]\n\t\tg.Expect(name).Should(BeIdenticalTo(kustomizationKey.Name))\n",
                      "markdown": "`\n\tt.Run(\"creates objects with owner labels\", func(t *testing.T) {\n\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, resultSecret)).Should(Succeed())\n\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, resultConfig)).Should(Succeed())\n\n\t\tname := resultConfig.GetLabels()[\"kustomize.toolkit.fluxcd.io/name\"]\n\t\tg.Expect(name).Should(BeIdenticalTo(kustomizationKey.Name))\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_prune_test.go"
                },
                "region": {
                  "startLine": 415,
                  "startColumn": 20,
                  "endLine": 415,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t}, timeout, time.Second).Should(BeTrue())\n\n\tt.Run(\"creates objects with owner labels\", func(t *testing.T) {\n\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, resultSecret)).Should(Succeed())\n\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, resultConfig)).Should(Succeed())\n\n\t\tname := resultConfig.GetLabels()[\"kustomize.toolkit.fluxcd.io/name\"]\n",
                    "rendered": {
                      "text": "\t}, timeout, time.Second).Should(BeTrue())\n\n\tt.Run(\"creates objects with owner labels\", func(t *testing.T) {\n\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, resultSecret)).Should(Succeed())\n\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, resultConfig)).Should(Succeed())\n\n\t\tname := resultConfig.GetLabels()[\"kustomize.toolkit.fluxcd.io/name\"]\n",
                      "markdown": "`\t}, timeout, time.Second).Should(BeTrue())\n\n\tt.Run(\"creates objects with owner labels\", func(t *testing.T) {\n\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, resultSecret)).Should(Succeed())\n\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, resultConfig)).Should(Succeed())\n\n\t\tname := resultConfig.GetLabels()[\"kustomize.toolkit.fluxcd.io/name\"]\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_prune_test.go"
                },
                "region": {
                  "startLine": 410,
                  "startColumn": 15,
                  "endLine": 410,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\tresultConfig := &corev1.ConfigMap{}\n\n\tg.Eventually(func() bool {\n\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\treturn resultK.Status.LastAppliedRevision == revision\n\t}, timeout, time.Second).Should(BeTrue())\n\n",
                    "rendered": {
                      "text": "\tresultConfig := &corev1.ConfigMap{}\n\n\tg.Eventually(func() bool {\n\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\treturn resultK.Status.LastAppliedRevision == revision\n\t}, timeout, time.Second).Should(BeTrue())\n\n",
                      "markdown": "`\tresultConfig := &corev1.ConfigMap{}\n\n\tg.Eventually(func() bool {\n\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\treturn resultK.Status.LastAppliedRevision == revision\n\t}, timeout, time.Second).Should(BeTrue())\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_prune_test.go"
                },
                "region": {
                  "startLine": 320,
                  "startColumn": 18,
                  "endLine": 320,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n\t\tg.Expect(k8sClient.Delete(context.Background(), kustomization)).To(Succeed())\n\t\tg.Eventually(func() bool {\n\t\t\terr = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), kustomization)\n\t\t\treturn apierrors.IsNotFound(err)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t})\n",
                    "rendered": {
                      "text": "\n\t\tg.Expect(k8sClient.Delete(context.Background(), kustomization)).To(Succeed())\n\t\tg.Eventually(func() bool {\n\t\t\terr = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), kustomization)\n\t\t\treturn apierrors.IsNotFound(err)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t})\n",
                      "markdown": "`\n\t\tg.Expect(k8sClient.Delete(context.Background(), kustomization)).To(Succeed())\n\t\tg.Eventually(func() bool {\n\t\t\terr = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), kustomization)\n\t\t\treturn apierrors.IsNotFound(err)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_prune_test.go"
                },
                "region": {
                  "startLine": 313,
                  "startColumn": 16,
                  "endLine": 313,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\n\tt.Run(\"deletes suspended\", func(t *testing.T) {\n\t\tg.Eventually(func() error {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\tresultK.Spec.Suspend = true\n\t\t\treturn k8sClient.Update(context.Background(), resultK)\n\t\t}, timeout, time.Second).Should(BeNil())\n",
                    "rendered": {
                      "text": "\n\tt.Run(\"deletes suspended\", func(t *testing.T) {\n\t\tg.Eventually(func() error {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\tresultK.Spec.Suspend = true\n\t\t\treturn k8sClient.Update(context.Background(), resultK)\n\t\t}, timeout, time.Second).Should(BeNil())\n",
                      "markdown": "`\n\tt.Run(\"deletes suspended\", func(t *testing.T) {\n\t\tg.Eventually(func() error {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\tresultK.Spec.Suspend = true\n\t\t\treturn k8sClient.Update(context.Background(), resultK)\n\t\t}, timeout, time.Second).Should(BeNil())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_prune_test.go"
                },
                "region": {
                  "startLine": 304,
                  "startColumn": 16,
                  "endLine": 304,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn resultK.Status.LastAppliedRevision == revision\n\t\t}, timeout, time.Second).Should(BeTrue())\n\n",
                    "rendered": {
                      "text": "\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn resultK.Status.LastAppliedRevision == revision\n\t\t}, timeout, time.Second).Should(BeTrue())\n\n",
                      "markdown": "`\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn resultK.Status.LastAppliedRevision == revision\n\t\t}, timeout, time.Second).Should(BeTrue())\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_prune_test.go"
                },
                "region": {
                  "startLine": 289,
                  "startColumn": 16,
                  "endLine": 289,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn resultK.Status.LastAppliedRevision == revision\n\t\t}, timeout, time.Second).Should(BeTrue())\n\n",
                    "rendered": {
                      "text": "\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn resultK.Status.LastAppliedRevision == revision\n\t\t}, timeout, time.Second).Should(BeTrue())\n\n",
                      "markdown": "`\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn resultK.Status.LastAppliedRevision == revision\n\t\t}, timeout, time.Second).Should(BeTrue())\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_prune_test.go"
                },
                "region": {
                  "startLine": 265,
                  "startColumn": 16,
                  "endLine": 265,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn resultK.Status.LastAppliedRevision == revision\n\t\t}, timeout, time.Second).Should(BeTrue())\n\n",
                    "rendered": {
                      "text": "\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn resultK.Status.LastAppliedRevision == revision\n\t\t}, timeout, time.Second).Should(BeTrue())\n\n",
                      "markdown": "`\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn resultK.Status.LastAppliedRevision == revision\n\t\t}, timeout, time.Second).Should(BeTrue())\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_prune_test.go"
                },
                "region": {
                  "startLine": 250,
                  "startColumn": 15,
                  "endLine": 250,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\tresultK := &kustomizev1.Kustomization{}\n\n\tg.Eventually(func() bool {\n\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\treturn resultK.Status.LastAppliedRevision == revision\n\t}, timeout, time.Second).Should(BeTrue())\n\n",
                    "rendered": {
                      "text": "\tresultK := &kustomizev1.Kustomization{}\n\n\tg.Eventually(func() bool {\n\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\treturn resultK.Status.LastAppliedRevision == revision\n\t}, timeout, time.Second).Should(BeTrue())\n\n",
                      "markdown": "`\tresultK := &kustomizev1.Kustomization{}\n\n\tg.Eventually(func() bool {\n\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\treturn resultK.Status.LastAppliedRevision == revision\n\t}, timeout, time.Second).Should(BeTrue())\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_prune_test.go"
                },
                "region": {
                  "startLine": 164,
                  "startColumn": 20,
                  "endLine": 164,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t})\n\n\tt.Run(\"preserves objects with pruning disabled\", func(t *testing.T) {\n\t\tg.Expect(k8sClient.Get(context.Background(), client.ObjectKeyFromObject(resultConfig), resultConfig)).Should(Succeed())\n\t})\n}\n\n",
                    "rendered": {
                      "text": "\t})\n\n\tt.Run(\"preserves objects with pruning disabled\", func(t *testing.T) {\n\t\tg.Expect(k8sClient.Get(context.Background(), client.ObjectKeyFromObject(resultConfig), resultConfig)).Should(Succeed())\n\t})\n}\n\n",
                      "markdown": "`\t})\n\n\tt.Run(\"preserves objects with pruning disabled\", func(t *testing.T) {\n\t\tg.Expect(k8sClient.Get(context.Background(), client.ObjectKeyFromObject(resultConfig), resultConfig)).Should(Succeed())\n\t})\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_prune_test.go"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 17,
                  "endLine": 159,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t\t\treturn apierrors.IsNotFound(err)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\n\t\terr = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(resultSecret), resultSecret)\n\t\tg.Expect(apierrors.IsNotFound(err)).To(BeTrue())\n\t})\n\n",
                    "rendered": {
                      "text": "\t\t\treturn apierrors.IsNotFound(err)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\n\t\terr = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(resultSecret), resultSecret)\n\t\tg.Expect(apierrors.IsNotFound(err)).To(BeTrue())\n\t})\n\n",
                      "markdown": "`\t\t\treturn apierrors.IsNotFound(err)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\n\t\terr = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(resultSecret), resultSecret)\n\t\tg.Expect(apierrors.IsNotFound(err)).To(BeTrue())\n\t})\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_prune_test.go"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 18,
                  "endLine": 155,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tt.Run(\"handles finalizer\", func(t *testing.T) {\n\t\tg.Expect(k8sClient.Delete(context.Background(), kustomization)).To(Succeed())\n\t\tg.Eventually(func() bool {\n\t\t\terr = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), kustomization)\n\t\t\treturn apierrors.IsNotFound(err)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\n",
                    "rendered": {
                      "text": "\tt.Run(\"handles finalizer\", func(t *testing.T) {\n\t\tg.Expect(k8sClient.Delete(context.Background(), kustomization)).To(Succeed())\n\t\tg.Eventually(func() bool {\n\t\t\terr = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), kustomization)\n\t\t\treturn apierrors.IsNotFound(err)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\n",
                      "markdown": "`\tt.Run(\"handles finalizer\", func(t *testing.T) {\n\t\tg.Expect(k8sClient.Delete(context.Background(), kustomization)).To(Succeed())\n\t\tg.Eventually(func() bool {\n\t\t\terr = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), kustomization)\n\t\t\treturn apierrors.IsNotFound(err)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_prune_test.go"
                },
                "region": {
                  "startLine": 148,
                  "startColumn": 17,
                  "endLine": 148,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: newID, Namespace: id}, resultSecret)).Should(Succeed())\n\n\t\told := &corev1.Secret{}\n\t\terr = k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, old)\n\t\tg.Expect(apierrors.IsNotFound(err)).To(BeTrue())\n\t})\n\n",
                    "rendered": {
                      "text": "\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: newID, Namespace: id}, resultSecret)).Should(Succeed())\n\n\t\told := &corev1.Secret{}\n\t\terr = k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, old)\n\t\tg.Expect(apierrors.IsNotFound(err)).To(BeTrue())\n\t})\n\n",
                      "markdown": "`\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: newID, Namespace: id}, resultSecret)).Should(Succeed())\n\n\t\told := &corev1.Secret{}\n\t\terr = k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, old)\n\t\tg.Expect(apierrors.IsNotFound(err)).To(BeTrue())\n\t})\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_prune_test.go"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 20,
                  "endLine": 145,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\t\treturn resultK.Status.LastAppliedRevision == revision\n\t\t}, timeout, time.Second).Should(BeTrue())\n\n\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: newID, Namespace: id}, resultSecret)).Should(Succeed())\n\n\t\told := &corev1.Secret{}\n\t\terr = k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, old)\n",
                    "rendered": {
                      "text": "\t\t\treturn resultK.Status.LastAppliedRevision == revision\n\t\t}, timeout, time.Second).Should(BeTrue())\n\n\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: newID, Namespace: id}, resultSecret)).Should(Succeed())\n\n\t\told := &corev1.Secret{}\n\t\terr = k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, old)\n",
                      "markdown": "`\t\t\treturn resultK.Status.LastAppliedRevision == revision\n\t\t}, timeout, time.Second).Should(BeTrue())\n\n\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: newID, Namespace: id}, resultSecret)).Should(Succeed())\n\n\t\told := &corev1.Secret{}\n\t\terr = k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, old)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_prune_test.go"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 16,
                  "endLine": 141,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn resultK.Status.LastAppliedRevision == revision\n\t\t}, timeout, time.Second).Should(BeTrue())\n\n",
                    "rendered": {
                      "text": "\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn resultK.Status.LastAppliedRevision == revision\n\t\t}, timeout, time.Second).Should(BeTrue())\n\n",
                      "markdown": "`\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn resultK.Status.LastAppliedRevision == revision\n\t\t}, timeout, time.Second).Should(BeTrue())\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_prune_test.go"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 20,
                  "endLine": 129,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\n\tt.Run(\"creates objects\", func(t *testing.T) {\n\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, resultSecret)).Should(Succeed())\n\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, resultConfig)).Should(Succeed())\n\t})\n\n\tt.Run(\"deletes stale objects\", func(t *testing.T) {\n",
                    "rendered": {
                      "text": "\n\tt.Run(\"creates objects\", func(t *testing.T) {\n\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, resultSecret)).Should(Succeed())\n\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, resultConfig)).Should(Succeed())\n\t})\n\n\tt.Run(\"deletes stale objects\", func(t *testing.T) {\n",
                      "markdown": "`\n\tt.Run(\"creates objects\", func(t *testing.T) {\n\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, resultSecret)).Should(Succeed())\n\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, resultConfig)).Should(Succeed())\n\t})\n\n\tt.Run(\"deletes stale objects\", func(t *testing.T) {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_prune_test.go"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 20,
                  "endLine": 128,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t}, timeout, time.Second).Should(BeTrue())\n\n\tt.Run(\"creates objects\", func(t *testing.T) {\n\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, resultSecret)).Should(Succeed())\n\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, resultConfig)).Should(Succeed())\n\t})\n\n",
                    "rendered": {
                      "text": "\t}, timeout, time.Second).Should(BeTrue())\n\n\tt.Run(\"creates objects\", func(t *testing.T) {\n\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, resultSecret)).Should(Succeed())\n\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, resultConfig)).Should(Succeed())\n\t})\n\n",
                      "markdown": "`\t}, timeout, time.Second).Should(BeTrue())\n\n\tt.Run(\"creates objects\", func(t *testing.T) {\n\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, resultSecret)).Should(Succeed())\n\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, resultConfig)).Should(Succeed())\n\t})\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_prune_test.go"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 15,
                  "endLine": 123,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\tresultConfig := &corev1.ConfigMap{}\n\n\tg.Eventually(func() bool {\n\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\treturn resultK.Status.LastAppliedRevision == revision\n\t}, timeout, time.Second).Should(BeTrue())\n\n",
                    "rendered": {
                      "text": "\tresultConfig := &corev1.ConfigMap{}\n\n\tg.Eventually(func() bool {\n\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\treturn resultK.Status.LastAppliedRevision == revision\n\t}, timeout, time.Second).Should(BeTrue())\n\n",
                      "markdown": "`\tresultConfig := &corev1.ConfigMap{}\n\n\tg.Eventually(func() bool {\n\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\treturn resultK.Status.LastAppliedRevision == revision\n\t}, timeout, time.Second).Should(BeTrue())\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_prune_test.go"
                },
                "region": {
                  "startLine": 388,
                  "startColumn": 20,
                  "endLine": 388,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\t\tInterval: metav1.Duration{Duration: reconciliationInterval},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t\tInterval: metav1.Duration{Duration: reconciliationInterval},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n",
                      "markdown": "`\t\t\tInterval: metav1.Duration{Duration: reconciliationInterval},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_prune_test.go"
                },
                "region": {
                  "startLine": 230,
                  "startColumn": 20,
                  "endLine": 230,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\t\tInterval: metav1.Duration{Duration: reconciliationInterval},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t\tInterval: metav1.Duration{Duration: reconciliationInterval},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n",
                      "markdown": "`\t\t\tInterval: metav1.Duration{Duration: reconciliationInterval},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_prune_test.go"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 20,
                  "endLine": 102,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\t\tInterval: metav1.Duration{Duration: reconciliationInterval},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t\tInterval: metav1.Duration{Duration: reconciliationInterval},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n",
                      "markdown": "`\t\t\tInterval: metav1.Duration{Duration: reconciliationInterval},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_force_test.go"
                },
                "region": {
                  "startLine": 165,
                  "startColumn": 16,
                  "endLine": 165,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\t}, timeout, time.Second).Should(BeNil())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn isReconcileSuccess(resultK)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t\tlogStatus(t, resultK)\n",
                    "rendered": {
                      "text": "\t\t}, timeout, time.Second).Should(BeNil())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn isReconcileSuccess(resultK)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t\tlogStatus(t, resultK)\n",
                      "markdown": "`\t\t}, timeout, time.Second).Should(BeNil())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn isReconcileSuccess(resultK)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t\tlogStatus(t, resultK)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_force_test.go"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 16,
                  "endLine": 159,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() error {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\tresultK.Spec.Force = true\n\t\t\treturn k8sClient.Update(context.Background(), resultK)\n\t\t}, timeout, time.Second).Should(BeNil())\n",
                    "rendered": {
                      "text": "\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() error {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\tresultK.Spec.Force = true\n\t\t\treturn k8sClient.Update(context.Background(), resultK)\n\t\t}, timeout, time.Second).Should(BeNil())\n",
                      "markdown": "`\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() error {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\tresultK.Spec.Force = true\n\t\t\treturn k8sClient.Update(context.Background(), resultK)\n\t\t}, timeout, time.Second).Should(BeNil())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_force_test.go"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 16,
                  "endLine": 136,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn isReconcileFailure(resultK)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t\tlogStatus(t, resultK)\n",
                    "rendered": {
                      "text": "\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn isReconcileFailure(resultK)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t\tlogStatus(t, resultK)\n",
                      "markdown": "`\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn isReconcileFailure(resultK)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t\tlogStatus(t, resultK)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_force_test.go"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 20,
                  "endLine": 125,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\tlogStatus(t, resultK)\n\n\t\tkstatusCheck.CheckErr(ctx, resultK)\n\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, resultSecret)).Should(Succeed())\n\t})\n\n\tt.Run(\"fails to update immutable secret\", func(t *testing.T) {\n",
                    "rendered": {
                      "text": "\t\tlogStatus(t, resultK)\n\n\t\tkstatusCheck.CheckErr(ctx, resultK)\n\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, resultSecret)).Should(Succeed())\n\t})\n\n\tt.Run(\"fails to update immutable secret\", func(t *testing.T) {\n",
                      "markdown": "`\t\tlogStatus(t, resultK)\n\n\t\tkstatusCheck.CheckErr(ctx, resultK)\n\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, resultSecret)).Should(Succeed())\n\t})\n\n\tt.Run(\"fails to update immutable secret\", func(t *testing.T) {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_force_test.go"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 16,
                  "endLine": 119,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\n\tt.Run(\"creates immutable secret\", func(t *testing.T) {\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn resultK.Status.LastAppliedRevision == revision\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t\tlogStatus(t, resultK)\n",
                    "rendered": {
                      "text": "\n\tt.Run(\"creates immutable secret\", func(t *testing.T) {\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn resultK.Status.LastAppliedRevision == revision\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t\tlogStatus(t, resultK)\n",
                      "markdown": "`\n\tt.Run(\"creates immutable secret\", func(t *testing.T) {\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn resultK.Status.LastAppliedRevision == revision\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t\tlogStatus(t, resultK)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_force_test.go"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 20,
                  "endLine": 90,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\t\tInterval: metav1.Duration{Duration: reconciliationInterval},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t\tInterval: metav1.Duration{Duration: reconciliationInterval},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n",
                      "markdown": "`\t\t\tInterval: metav1.Duration{Duration: reconciliationInterval},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_force_test.go"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 16,
                  "endLine": 128,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, resultSecret)).Should(Succeed())\n\t})\n\n\tt.Run(\"fails to update immutable secret\", func(t *testing.T) {\n\t\tartifact, err = testServer.ArtifactFromFiles(manifests(id, randStringRunes(5)))\n\t\tg.Expect(err).NotTo(HaveOccurred())\n\t\trevision = \"v2.0.0\"\n",
                    "rendered": {
                      "text": "\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, resultSecret)).Should(Succeed())\n\t})\n\n\tt.Run(\"fails to update immutable secret\", func(t *testing.T) {\n\t\tartifact, err = testServer.ArtifactFromFiles(manifests(id, randStringRunes(5)))\n\t\tg.Expect(err).NotTo(HaveOccurred())\n\t\trevision = \"v2.0.0\"\n",
                      "markdown": "`\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, resultSecret)).Should(Succeed())\n\t})\n\n\tt.Run(\"fails to update immutable secret\", func(t *testing.T) {\n\t\tartifact, err = testServer.ArtifactFromFiles(manifests(id, randStringRunes(5)))\n\t\tg.Expect(err).NotTo(HaveOccurred())\n\t\trevision = \"v2.0.0\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_indexers.go"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 28,
                  "endLine": 69,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\t\t}\n\t\tsorted, err := dependency.Sort(dd)\n\t\tif err != nil {\n\t\t\tlog.Error(err, \"failed to sort dependencies for revision change\")\n\t\t\treturn nil\n\t\t}\n\t\treqs := make([]reconcile.Request, len(sorted))\n",
                    "rendered": {
                      "text": "\t\t}\n\t\tsorted, err := dependency.Sort(dd)\n\t\tif err != nil {\n\t\t\tlog.Error(err, \"failed to sort dependencies for revision change\")\n\t\t\treturn nil\n\t\t}\n\t\treqs := make([]reconcile.Request, len(sorted))\n",
                      "markdown": "`\t\t}\n\t\tsorted, err := dependency.Sort(dd)\n\t\tif err != nil {\n\t\t\tlog.Error(err, \"failed to sort dependencies for revision change\")\n\t\t\treturn nil\n\t\t}\n\t\treqs := make([]reconcile.Request, len(sorted))\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_indexers.go"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\t\tif conditions.IsReady(&list.Items[i]) && repo.GetArtifact().HasRevision(d.Status.LastAttemptedRevision) {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tdd = append(dd, d.DeepCopy())\n\t\t}\n\t\tsorted, err := dependency.Sort(dd)\n\t\tif err != nil {\n",
                    "rendered": {
                      "text": "\t\t\tif conditions.IsReady(&list.Items[i]) && repo.GetArtifact().HasRevision(d.Status.LastAttemptedRevision) {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tdd = append(dd, d.DeepCopy())\n\t\t}\n\t\tsorted, err := dependency.Sort(dd)\n\t\tif err != nil {\n",
                      "markdown": "`\t\t\tif conditions.IsReady(&list.Items[i]) && repo.GetArtifact().HasRevision(d.Status.LastAttemptedRevision) {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tdd = append(dd, d.DeepCopy())\n\t\t}\n\t\tsorted, err := dependency.Sort(dd)\n\t\tif err != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_indexers.go"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 5,
                  "endLine": 58,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\t\tlog.Error(err, \"failed to list objects for revision change\")\n\t\t\treturn nil\n\t\t}\n\t\tvar dd []dependency.Dependent\n\t\tfor i, d := range list.Items {\n\t\t\t// If the Kustomization is ready and the revision of the artifact equals\n\t\t\t// to the last attempted revision, we should not make a request for this Kustomization\n",
                    "rendered": {
                      "text": "\t\t\tlog.Error(err, \"failed to list objects for revision change\")\n\t\t\treturn nil\n\t\t}\n\t\tvar dd []dependency.Dependent\n\t\tfor i, d := range list.Items {\n\t\t\t// If the Kustomization is ready and the revision of the artifact equals\n\t\t\t// to the last attempted revision, we should not make a request for this Kustomization\n",
                      "markdown": "`\t\t\tlog.Error(err, \"failed to list objects for revision change\")\n\t\t\treturn nil\n\t\t}\n\t\tvar dd []dependency.Dependent\n\t\tfor i, d := range list.Items {\n\t\t\t// If the Kustomization is ready and the revision of the artifact equals\n\t\t\t// to the last attempted revision, we should not make a request for this Kustomization\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/decryptor/decryptor_test.go"
                },
                "region": {
                  "startLine": 676,
                  "startColumn": 4,
                  "endLine": 676,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\"auths\": {\n\t\t\"my-registry.example:5000\": {\n\t\t\t\"username\": \"tiger\",\n\t\t\t\"password\": \"pass1234\",\n\t\t\t\"email\": \"tiger@acme.example\",\n\t\t\t\"auth\": \"dGlnZXI6cGFzczEyMzQ=\"\n\t\t}\n",
                    "rendered": {
                      "text": "\t\"auths\": {\n\t\t\"my-registry.example:5000\": {\n\t\t\t\"username\": \"tiger\",\n\t\t\t\"password\": \"pass1234\",\n\t\t\t\"email\": \"tiger@acme.example\",\n\t\t\t\"auth\": \"dGlnZXI6cGFzczEyMzQ=\"\n\t\t}\n",
                      "markdown": "`\t\"auths\": {\n\t\t\"my-registry.example:5000\": {\n\t\t\t\"username\": \"tiger\",\n\t\t\t\"password\": \"pass1234\",\n\t\t\t\"email\": \"tiger@acme.example\",\n\t\t\t\"auth\": \"dGlnZXI6cGFzczEyMzQ=\"\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/decryptor/decryptor_test.go"
                },
                "region": {
                  "startLine": 999,
                  "startColumn": 16,
                  "endLine": 999,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\t\t\tname:        \"file exceeds max size\",\n\t\t\tmaxFileSize: 5,\n\t\t\tfiles: []file{\n\t\t\t\t{name: \"app.env\", data: []byte(\"app=key\\n\"), encrypt: true, format: formats.Dotenv, expectData: false},\n\t\t\t},\n\t\t\tpath:    \"app.env\",\n\t\t\twantErr: fmt.Errorf(\"cannot decrypt file with size (972 bytes) exceeding limit (5)\"),\n",
                    "rendered": {
                      "text": "\t\t\tname:        \"file exceeds max size\",\n\t\t\tmaxFileSize: 5,\n\t\t\tfiles: []file{\n\t\t\t\t{name: \"app.env\", data: []byte(\"app=key\\n\"), encrypt: true, format: formats.Dotenv, expectData: false},\n\t\t\t},\n\t\t\tpath:    \"app.env\",\n\t\t\twantErr: fmt.Errorf(\"cannot decrypt file with size (972 bytes) exceeding limit (5)\"),\n",
                      "markdown": "`\t\t\tname:        \"file exceeds max size\",\n\t\t\tmaxFileSize: 5,\n\t\t\tfiles: []file{\n\t\t\t\t{name: \"app.env\", data: []byte(\"app=key\\n\"), encrypt: true, format: formats.Dotenv, expectData: false},\n\t\t\t},\n\t\t\tpath:    \"app.env\",\n\t\t\twantErr: fmt.Errorf(\"cannot decrypt file with size (972 bytes) exceeding limit (5)\"),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/decryptor/decryptor_test.go"
                },
                "region": {
                  "startLine": 976,
                  "startColumn": 16,
                  "endLine": 976,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\t\t\tname:          \"decrypt dotenv file\",\n\t\t\tageIdentities: age.ParsedIdentities{id},\n\t\t\tfiles: []file{\n\t\t\t\t{name: \"app.env\", data: []byte(\"app=key\\n\"), encrypt: true, format: formats.Dotenv, expectData: true},\n\t\t\t},\n\t\t\tpath:   \"app.env\",\n\t\t\tformat: formats.Dotenv,\n",
                    "rendered": {
                      "text": "\t\t\tname:          \"decrypt dotenv file\",\n\t\t\tageIdentities: age.ParsedIdentities{id},\n\t\t\tfiles: []file{\n\t\t\t\t{name: \"app.env\", data: []byte(\"app=key\\n\"), encrypt: true, format: formats.Dotenv, expectData: true},\n\t\t\t},\n\t\t\tpath:   \"app.env\",\n\t\t\tformat: formats.Dotenv,\n",
                      "markdown": "`\t\t\tname:          \"decrypt dotenv file\",\n\t\t\tageIdentities: age.ParsedIdentities{id},\n\t\t\tfiles: []file{\n\t\t\t\t{name: \"app.env\", data: []byte(\"app=key\\n\"), encrypt: true, format: formats.Dotenv, expectData: true},\n\t\t\t},\n\t\t\tpath:   \"app.env\",\n\t\t\tformat: formats.Dotenv,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/decryptor/decryptor_test.go"
                },
                "region": {
                  "startLine": 854,
                  "startColumn": 17,
                  "endLine": 854,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\t\t\twordirSuffix: \"subdir\",\n\t\t\tpath:         \"./\",\n\t\t\tfiles: []file{\n\t\t\t\t{name: \"data.env\", data: []byte(\"key=value\\n\"), encrypt: true, expectData: false},\n\t\t\t},\n\t\t\tsecretGenerator: []kustypes.SecretArgs{\n\t\t\t\t{\n",
                    "rendered": {
                      "text": "\t\t\twordirSuffix: \"subdir\",\n\t\t\tpath:         \"./\",\n\t\t\tfiles: []file{\n\t\t\t\t{name: \"data.env\", data: []byte(\"key=value\\n\"), encrypt: true, expectData: false},\n\t\t\t},\n\t\t\tsecretGenerator: []kustypes.SecretArgs{\n\t\t\t\t{\n",
                      "markdown": "`\t\t\twordirSuffix: \"subdir\",\n\t\t\tpath:         \"./\",\n\t\t\tfiles: []file{\n\t\t\t\t{name: \"data.env\", data: []byte(\"key=value\\n\"), encrypt: true, expectData: false},\n\t\t\t},\n\t\t\tsecretGenerator: []kustypes.SecretArgs{\n\t\t\t\t{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/decryptor/decryptor_test.go"
                },
                "region": {
                  "startLine": 834,
                  "startColumn": 26,
                  "endLine": 834,
                  "endColumn": 64,
                  "snippet": {
                    "text": "\t\t\tpath:         \"./\",\n\t\t\tfiles: []file{\n\t\t\t\t{name: \"subdir/symlink\", symlink: \"../otherdir/data.env\"},\n\t\t\t\t{name: \"otherdir/data.env\", data: []byte(\"key=value\\n\"), encrypt: true, expectData: false},\n\t\t\t},\n\t\t\tsecretGenerator: []kustypes.SecretArgs{\n\t\t\t\t{\n",
                    "rendered": {
                      "text": "\t\t\tpath:         \"./\",\n\t\t\tfiles: []file{\n\t\t\t\t{name: \"subdir/symlink\", symlink: \"../otherdir/data.env\"},\n\t\t\t\t{name: \"otherdir/data.env\", data: []byte(\"key=value\\n\"), encrypt: true, expectData: false},\n\t\t\t},\n\t\t\tsecretGenerator: []kustypes.SecretArgs{\n\t\t\t\t{\n",
                      "markdown": "`\t\t\tpath:         \"./\",\n\t\t\tfiles: []file{\n\t\t\t\t{name: \"subdir/symlink\", symlink: \"../otherdir/data.env\"},\n\t\t\t\t{name: \"otherdir/data.env\", data: []byte(\"key=value\\n\"), encrypt: true, expectData: false},\n\t\t\t},\n\t\t\tsecretGenerator: []kustypes.SecretArgs{\n\t\t\t\t{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/decryptor/decryptor_test.go"
                },
                "region": {
                  "startLine": 814,
                  "startColumn": 26,
                  "endLine": 814,
                  "endColumn": 64,
                  "snippet": {
                    "text": "\t\t\tpath: \"subdir\",\n\t\t\tfiles: []file{\n\t\t\t\t{name: \"subdir/symlink\", symlink: \"../otherdir/data.env\"},\n\t\t\t\t{name: \"otherdir/data.env\", data: []byte(\"key=value\\n\"), encrypt: true, expectData: true},\n\t\t\t},\n\t\t\tsecretGenerator: []kustypes.SecretArgs{\n\t\t\t\t{\n",
                    "rendered": {
                      "text": "\t\t\tpath: \"subdir\",\n\t\t\tfiles: []file{\n\t\t\t\t{name: \"subdir/symlink\", symlink: \"../otherdir/data.env\"},\n\t\t\t\t{name: \"otherdir/data.env\", data: []byte(\"key=value\\n\"), encrypt: true, expectData: true},\n\t\t\t},\n\t\t\tsecretGenerator: []kustypes.SecretArgs{\n\t\t\t\t{\n",
                      "markdown": "`\t\t\tpath: \"subdir\",\n\t\t\tfiles: []file{\n\t\t\t\t{name: \"subdir/symlink\", symlink: \"../otherdir/data.env\"},\n\t\t\t\t{name: \"otherdir/data.env\", data: []byte(\"key=value\\n\"), encrypt: true, expectData: true},\n\t\t\t},\n\t\t\tsecretGenerator: []kustypes.SecretArgs{\n\t\t\t\t{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/decryptor/decryptor_test.go"
                },
                "region": {
                  "startLine": 778,
                  "startColumn": 19,
                  "endLine": 778,
                  "endColumn": 59,
                  "snippet": {
                    "text": "\t\t\t\t// format, the original data is plain text, or \"binary.\"\n\t\t\t\t{name: \"subdir/combination.json\", data: []byte(\"The safe combination is ...\"), originalFormat: &binaryFormat, encrypt: true, expectData: true},\n\t\t\t\t{name: \"subdir/file.txt\", data: []byte(\"file\"), encrypt: true, expectData: true},\n\t\t\t\t{name: \"secret.env\", data: []byte(\"var2=value2\\n\"), encrypt: true, expectData: true},\n\t\t\t},\n\t\t\tsecretGenerator: []kustypes.SecretArgs{\n\t\t\t\t{\n",
                    "rendered": {
                      "text": "\t\t\t\t// format, the original data is plain text, or \"binary.\"\n\t\t\t\t{name: \"subdir/combination.json\", data: []byte(\"The safe combination is ...\"), originalFormat: &binaryFormat, encrypt: true, expectData: true},\n\t\t\t\t{name: \"subdir/file.txt\", data: []byte(\"file\"), encrypt: true, expectData: true},\n\t\t\t\t{name: \"secret.env\", data: []byte(\"var2=value2\\n\"), encrypt: true, expectData: true},\n\t\t\t},\n\t\t\tsecretGenerator: []kustypes.SecretArgs{\n\t\t\t\t{\n",
                      "markdown": "`\t\t\t\t// format, the original data is plain text, or \"binary.\"\n\t\t\t\t{name: \"subdir/combination.json\", data: []byte(\"The safe combination is ...\"), originalFormat: &binaryFormat, encrypt: true, expectData: true},\n\t\t\t\t{name: \"subdir/file.txt\", data: []byte(\"file\"), encrypt: true, expectData: true},\n\t\t\t\t{name: \"secret.env\", data: []byte(\"var2=value2\\n\"), encrypt: true, expectData: true},\n\t\t\t},\n\t\t\tsecretGenerator: []kustypes.SecretArgs{\n\t\t\t\t{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/decryptor/decryptor_test.go"
                },
                "region": {
                  "startLine": 773,
                  "startColumn": 23,
                  "endLine": 773,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\t\t\tname: \"decrypt env sources\",\n\t\t\tpath: \"subdir\",\n\t\t\tfiles: []file{\n\t\t\t\t{name: \"subdir/app.env\", data: []byte(\"var1=value1\\n\"), encrypt: true, expectData: true},\n\t\t\t\t// NB: Despite the file extension representing the SOPS-encrypted JSON output\n\t\t\t\t// format, the original data is plain text, or \"binary.\"\n\t\t\t\t{name: \"subdir/combination.json\", data: []byte(\"The safe combination is ...\"), originalFormat: &binaryFormat, encrypt: true, expectData: true},\n",
                    "rendered": {
                      "text": "\t\t\tname: \"decrypt env sources\",\n\t\t\tpath: \"subdir\",\n\t\t\tfiles: []file{\n\t\t\t\t{name: \"subdir/app.env\", data: []byte(\"var1=value1\\n\"), encrypt: true, expectData: true},\n\t\t\t\t// NB: Despite the file extension representing the SOPS-encrypted JSON output\n\t\t\t\t// format, the original data is plain text, or \"binary.\"\n\t\t\t\t{name: \"subdir/combination.json\", data: []byte(\"The safe combination is ...\"), originalFormat: &binaryFormat, encrypt: true, expectData: true},\n",
                      "markdown": "`\t\t\tname: \"decrypt env sources\",\n\t\t\tpath: \"subdir\",\n\t\t\tfiles: []file{\n\t\t\t\t{name: \"subdir/app.env\", data: []byte(\"var1=value1\\n\"), encrypt: true, expectData: true},\n\t\t\t\t// NB: Despite the file extension representing the SOPS-encrypted JSON output\n\t\t\t\t// format, the original data is plain text, or \"binary.\"\n\t\t\t\t{name: \"subdir/combination.json\", data: []byte(\"The safe combination is ...\"), originalFormat: &binaryFormat, encrypt: true, expectData: true},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/decryptor/decryptor_test.go"
                },
                "region": {
                  "startLine": 706,
                  "startColumn": 77,
                  "endLine": 706,
                  "endColumn": 83,
                  "snippet": {
                    "text": "\t\tgot, err := d.DecryptResource(secret)\n\t\tg.Expect(err).ToNot(HaveOccurred())\n\t\tg.Expect(got).ToNot(BeNil())\n\t\tg.Expect(got.GetDataMap()).To(HaveKeyWithValue(corev1.DockerConfigJsonKey, base64.StdEncoding.EncodeToString(plainData)))\n\t})\n\n\tt.Run(\"nil resource\", func(t *testing.T) {\n",
                    "rendered": {
                      "text": "\t\tgot, err := d.DecryptResource(secret)\n\t\tg.Expect(err).ToNot(HaveOccurred())\n\t\tg.Expect(got).ToNot(BeNil())\n\t\tg.Expect(got.GetDataMap()).To(HaveKeyWithValue(corev1.DockerConfigJsonKey, base64.StdEncoding.EncodeToString(plainData)))\n\t})\n\n\tt.Run(\"nil resource\", func(t *testing.T) {\n",
                      "markdown": "`\t\tgot, err := d.DecryptResource(secret)\n\t\tg.Expect(err).ToNot(HaveOccurred())\n\t\tg.Expect(got).ToNot(BeNil())\n\t\tg.Expect(got.GetDataMap()).To(HaveKeyWithValue(corev1.DockerConfigJsonKey, base64.StdEncoding.EncodeToString(plainData)))\n\t})\n\n\tt.Run(\"nil resource\", func(t *testing.T) {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/decryptor/decryptor_test.go"
                },
                "region": {
                  "startLine": 698,
                  "startColumn": 32,
                  "endLine": 698,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\t\t\t},\n\t\t\t\"type\": corev1.SecretTypeDockerConfigJson,\n\t\t\t\"data\": map[string]interface{}{\n\t\t\t\tcorev1.DockerConfigJsonKey: base64.StdEncoding.EncodeToString(encData),\n\t\t\t},\n\t\t})\n\t\tg.Expect(isSOPSEncryptedResource(secret)).To(BeFalse())\n",
                    "rendered": {
                      "text": "\t\t\t},\n\t\t\t\"type\": corev1.SecretTypeDockerConfigJson,\n\t\t\t\"data\": map[string]interface{}{\n\t\t\t\tcorev1.DockerConfigJsonKey: base64.StdEncoding.EncodeToString(encData),\n\t\t\t},\n\t\t})\n\t\tg.Expect(isSOPSEncryptedResource(secret)).To(BeFalse())\n",
                      "markdown": "`\t\t\t},\n\t\t\t\"type\": corev1.SecretTypeDockerConfigJson,\n\t\t\t\"data\": map[string]interface{}{\n\t\t\t\tcorev1.DockerConfigJsonKey: base64.StdEncoding.EncodeToString(encData),\n\t\t\t},\n\t\t})\n\t\tg.Expect(isSOPSEncryptedResource(secret)).To(BeFalse())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/decryptor/decryptor_test.go"
                },
                "region": {
                  "startLine": 653,
                  "startColumn": 61,
                  "endLine": 653,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\t\tgot, err := d.DecryptResource(secret)\n\t\tg.Expect(err).ToNot(HaveOccurred())\n\t\tg.Expect(got).ToNot(BeNil())\n\t\tg.Expect(got.GetDataMap()).To(HaveKeyWithValue(\"key.yaml\", base64.StdEncoding.EncodeToString(plainData)))\n\t})\n\n\tt.Run(\"SOPS-encrypted Docker config Secret\", func(t *testing.T) {\n",
                    "rendered": {
                      "text": "\t\tgot, err := d.DecryptResource(secret)\n\t\tg.Expect(err).ToNot(HaveOccurred())\n\t\tg.Expect(got).ToNot(BeNil())\n\t\tg.Expect(got.GetDataMap()).To(HaveKeyWithValue(\"key.yaml\", base64.StdEncoding.EncodeToString(plainData)))\n\t})\n\n\tt.Run(\"SOPS-encrypted Docker config Secret\", func(t *testing.T) {\n",
                      "markdown": "`\t\tgot, err := d.DecryptResource(secret)\n\t\tg.Expect(err).ToNot(HaveOccurred())\n\t\tg.Expect(got).ToNot(BeNil())\n\t\tg.Expect(got.GetDataMap()).To(HaveKeyWithValue(\"key.yaml\", base64.StdEncoding.EncodeToString(plainData)))\n\t})\n\n\tt.Run(\"SOPS-encrypted Docker config Secret\", func(t *testing.T) {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/decryptor/decryptor_test.go"
                },
                "region": {
                  "startLine": 646,
                  "startColumn": 15,
                  "endLine": 646,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\tg.Expect(err).ToNot(HaveOccurred())\n\n\t\tsecret, _ := newSecretResource(\"test\", \"secret-data\", map[string]interface{}{\n\t\t\t\"key.yaml\": base64.StdEncoding.EncodeToString(encData),\n\t\t})\n\t\tg.Expect(isSOPSEncryptedResource(secret)).To(BeFalse())\n\n",
                    "rendered": {
                      "text": "\t\tg.Expect(err).ToNot(HaveOccurred())\n\n\t\tsecret, _ := newSecretResource(\"test\", \"secret-data\", map[string]interface{}{\n\t\t\t\"key.yaml\": base64.StdEncoding.EncodeToString(encData),\n\t\t})\n\t\tg.Expect(isSOPSEncryptedResource(secret)).To(BeFalse())\n\n",
                      "markdown": "`\t\tg.Expect(err).ToNot(HaveOccurred())\n\n\t\tsecret, _ := newSecretResource(\"test\", \"secret-data\", map[string]interface{}{\n\t\t\t\"key.yaml\": base64.StdEncoding.EncodeToString(encData),\n\t\t})\n\t\tg.Expect(isSOPSEncryptedResource(secret)).To(BeFalse())\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/decryptor/decryptor_test.go"
                },
                "region": {
                  "startLine": 618,
                  "startColumn": 61,
                  "endLine": 618,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\t\tgot, err := d.DecryptResource(secret)\n\t\tg.Expect(err).ToNot(HaveOccurred())\n\t\tg.Expect(got).ToNot(BeNil())\n\t\tg.Expect(got.GetDataMap()).To(HaveKeyWithValue(\"file.ini\", base64.StdEncoding.EncodeToString(plainData)))\n\t})\n\n\tt.Run(\"SOPS-encrypted YAML-format Secret data field\", func(t *testing.T) {\n",
                    "rendered": {
                      "text": "\t\tgot, err := d.DecryptResource(secret)\n\t\tg.Expect(err).ToNot(HaveOccurred())\n\t\tg.Expect(got).ToNot(BeNil())\n\t\tg.Expect(got.GetDataMap()).To(HaveKeyWithValue(\"file.ini\", base64.StdEncoding.EncodeToString(plainData)))\n\t})\n\n\tt.Run(\"SOPS-encrypted YAML-format Secret data field\", func(t *testing.T) {\n",
                      "markdown": "`\t\tgot, err := d.DecryptResource(secret)\n\t\tg.Expect(err).ToNot(HaveOccurred())\n\t\tg.Expect(got).ToNot(BeNil())\n\t\tg.Expect(got.GetDataMap()).To(HaveKeyWithValue(\"file.ini\", base64.StdEncoding.EncodeToString(plainData)))\n\t})\n\n\tt.Run(\"SOPS-encrypted YAML-format Secret data field\", func(t *testing.T) {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/decryptor/decryptor_test.go"
                },
                "region": {
                  "startLine": 611,
                  "startColumn": 15,
                  "endLine": 611,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\tg.Expect(err).ToNot(HaveOccurred())\n\n\t\tsecret, _ := newSecretResource(\"test\", \"secret-data\", map[string]interface{}{\n\t\t\t\"file.ini\": base64.StdEncoding.EncodeToString(encData),\n\t\t})\n\t\tg.Expect(isSOPSEncryptedResource(secret)).To(BeFalse())\n\n",
                    "rendered": {
                      "text": "\t\tg.Expect(err).ToNot(HaveOccurred())\n\n\t\tsecret, _ := newSecretResource(\"test\", \"secret-data\", map[string]interface{}{\n\t\t\t\"file.ini\": base64.StdEncoding.EncodeToString(encData),\n\t\t})\n\t\tg.Expect(isSOPSEncryptedResource(secret)).To(BeFalse())\n\n",
                      "markdown": "`\t\tg.Expect(err).ToNot(HaveOccurred())\n\n\t\tsecret, _ := newSecretResource(\"test\", \"secret-data\", map[string]interface{}{\n\t\t\t\"file.ini\": base64.StdEncoding.EncodeToString(encData),\n\t\t})\n\t\tg.Expect(isSOPSEncryptedResource(secret)).To(BeFalse())\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/decryptor/decryptor_test.go"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 11,
                  "endLine": 22,
                  "endColumn": 17,
                  "snippet": {
                    "text": "import (\n\t\"bytes\"\n\t\"context\"\n\t\"encoding/base64\"\n\t\"fmt\"\n\t\"io/fs\"\n\t\"os\"\n",
                    "rendered": {
                      "text": "import (\n\t\"bytes\"\n\t\"context\"\n\t\"encoding/base64\"\n\t\"fmt\"\n\t\"io/fs\"\n\t\"os\"\n",
                      "markdown": "`import (\n\t\"bytes\"\n\t\"context\"\n\t\"encoding/base64\"\n\t\"fmt\"\n\t\"io/fs\"\n\t\"os\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/decryptor/decryptor_test.go"
                },
                "region": {
                  "startLine": 770,
                  "startColumn": 17,
                  "endLine": 770,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t\twantErr         error\n\t}{\n\t\t{\n\t\t\tname: \"decrypt env sources\",\n\t\t\tpath: \"subdir\",\n\t\t\tfiles: []file{\n\t\t\t\t{name: \"subdir/app.env\", data: []byte(\"var1=value1\\n\"), encrypt: true, expectData: true},\n",
                    "rendered": {
                      "text": "\t\twantErr         error\n\t}{\n\t\t{\n\t\t\tname: \"decrypt env sources\",\n\t\t\tpath: \"subdir\",\n\t\t\tfiles: []file{\n\t\t\t\t{name: \"subdir/app.env\", data: []byte(\"var1=value1\\n\"), encrypt: true, expectData: true},\n",
                      "markdown": "`\t\twantErr         error\n\t}{\n\t\t{\n\t\t\tname: \"decrypt env sources\",\n\t\t\tpath: \"subdir\",\n\t\t\tfiles: []file{\n\t\t\t\t{name: \"subdir/app.env\", data: []byte(\"var1=value1\\n\"), encrypt: true, expectData: true},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/decryptor/decryptor_test.go"
                },
                "region": {
                  "startLine": 656,
                  "startColumn": 22,
                  "endLine": 656,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\tg.Expect(got.GetDataMap()).To(HaveKeyWithValue(\"key.yaml\", base64.StdEncoding.EncodeToString(plainData)))\n\t})\n\n\tt.Run(\"SOPS-encrypted Docker config Secret\", func(t *testing.T) {\n\t\tg := NewWithT(t)\n\n\t\tkus := kustomization.DeepCopy()\n",
                    "rendered": {
                      "text": "\t\tg.Expect(got.GetDataMap()).To(HaveKeyWithValue(\"key.yaml\", base64.StdEncoding.EncodeToString(plainData)))\n\t})\n\n\tt.Run(\"SOPS-encrypted Docker config Secret\", func(t *testing.T) {\n\t\tg := NewWithT(t)\n\n\t\tkus := kustomization.DeepCopy()\n",
                      "markdown": "`\t\tg.Expect(got.GetDataMap()).To(HaveKeyWithValue(\"key.yaml\", base64.StdEncoding.EncodeToString(plainData)))\n\t})\n\n\tt.Run(\"SOPS-encrypted Docker config Secret\", func(t *testing.T) {\n\t\tg := NewWithT(t)\n\n\t\tkus := kustomization.DeepCopy()\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/decryptor/decryptor_test.go"
                },
                "region": {
                  "startLine": 216,
                  "startColumn": 13,
                  "endLine": 216,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname: \"GCP Service Account key\",\n\t\t\tdecryption: &kustomizev1.Decryption{\n\t\t\t\tProvider: provider,\n\t\t\t\tSecretRef: &meta.LocalObjectReference{\n",
                    "rendered": {
                      "text": "\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname: \"GCP Service Account key\",\n\t\t\tdecryption: &kustomizev1.Decryption{\n\t\t\t\tProvider: provider,\n\t\t\t\tSecretRef: &meta.LocalObjectReference{\n",
                      "markdown": "`\t\t\t},\n\t\t},\n\t\t{\n\t\t\tname: \"GCP Service Account key\",\n\t\t\tdecryption: &kustomizev1.Decryption{\n\t\t\t\tProvider: provider,\n\t\t\t\tSecretRef: &meta.LocalObjectReference{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/sops/azkv/config_test.go"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 26,
                  "endLine": 197,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\t\tType:  \"PRIVATE KEY\",\n\t\tBytes: x509.MarshalPKCS1PrivateKey(key),\n\t}\n\tif err = pem.Encode(out, privateKey); err != nil {\n\t\tt.Fatal(\"Private key cannot be PEM encoded.\", err.Error())\n\t}\n\n",
                    "rendered": {
                      "text": "\t\tType:  \"PRIVATE KEY\",\n\t\tBytes: x509.MarshalPKCS1PrivateKey(key),\n\t}\n\tif err = pem.Encode(out, privateKey); err != nil {\n\t\tt.Fatal(\"Private key cannot be PEM encoded.\", err.Error())\n\t}\n\n",
                      "markdown": "`\t\tType:  \"PRIVATE KEY\",\n\t\tBytes: x509.MarshalPKCS1PrivateKey(key),\n\t}\n\tif err = pem.Encode(out, privateKey); err != nil {\n\t\tt.Fatal(\"Private key cannot be PEM encoded.\", err.Error())\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/sops/azkv/config_test.go"
                },
                "region": {
                  "startLine": 195,
                  "startColumn": 26,
                  "endLine": 195,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\n\tvar privateKey = &pem.Block{\n\t\tType:  \"PRIVATE KEY\",\n\t\tBytes: x509.MarshalPKCS1PrivateKey(key),\n\t}\n\tif err = pem.Encode(out, privateKey); err != nil {\n\t\tt.Fatal(\"Private key cannot be PEM encoded.\", err.Error())\n",
                    "rendered": {
                      "text": "\n\tvar privateKey = &pem.Block{\n\t\tType:  \"PRIVATE KEY\",\n\t\tBytes: x509.MarshalPKCS1PrivateKey(key),\n\t}\n\tif err = pem.Encode(out, privateKey); err != nil {\n\t\tt.Fatal(\"Private key cannot be PEM encoded.\", err.Error())\n",
                      "markdown": "`\n\tvar privateKey = &pem.Block{\n\t\tType:  \"PRIVATE KEY\",\n\t\tBytes: x509.MarshalPKCS1PrivateKey(key),\n\t}\n\tif err = pem.Encode(out, privateKey); err != nil {\n\t\tt.Fatal(\"Private key cannot be PEM encoded.\", err.Error())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/sops/azkv/config_test.go"
                },
                "region": {
                  "startLine": 193,
                  "startColumn": 5,
                  "endLine": 193,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n\tout := bytes.NewBuffer(nil)\n\n\tvar privateKey = &pem.Block{\n\t\tType:  \"PRIVATE KEY\",\n\t\tBytes: x509.MarshalPKCS1PrivateKey(key),\n\t}\n",
                    "rendered": {
                      "text": "\n\tout := bytes.NewBuffer(nil)\n\n\tvar privateKey = &pem.Block{\n\t\tType:  \"PRIVATE KEY\",\n\t\tBytes: x509.MarshalPKCS1PrivateKey(key),\n\t}\n",
                      "markdown": "`\n\tout := bytes.NewBuffer(nil)\n\n\tvar privateKey = &pem.Block{\n\t\tType:  \"PRIVATE KEY\",\n\t\tBytes: x509.MarshalPKCS1PrivateKey(key),\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/sops/azkv/config_test.go"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 21,
                  "endLine": 144,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\t\t\tAZConfig: AZConfig{\n\t\t\t\t\tAppID:    \"some-app-id\",\n\t\t\t\t\tTenant:   \"some-tenant\",\n\t\t\t\t\tPassword: \"some-password\",\n\t\t\t\t},\n\t\t\t},\n\t\t\twant: &azidentity.ClientSecretCredential{},\n",
                    "rendered": {
                      "text": "\t\t\t\tAZConfig: AZConfig{\n\t\t\t\t\tAppID:    \"some-app-id\",\n\t\t\t\t\tTenant:   \"some-tenant\",\n\t\t\t\t\tPassword: \"some-password\",\n\t\t\t\t},\n\t\t\t},\n\t\t\twant: &azidentity.ClientSecretCredential{},\n",
                      "markdown": "`\t\t\t\tAZConfig: AZConfig{\n\t\t\t\t\tAppID:    \"some-app-id\",\n\t\t\t\t\tTenant:   \"some-tenant\",\n\t\t\t\t\tPassword: \"some-password\",\n\t\t\t\t},\n\t\t\t},\n\t\t\twant: &azidentity.ClientSecretCredential{},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/sops/azkv/config_test.go"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 5,
                  "endLine": 144,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\t\t\t\tAZConfig: AZConfig{\n\t\t\t\t\tAppID:    \"some-app-id\",\n\t\t\t\t\tTenant:   \"some-tenant\",\n\t\t\t\t\tPassword: \"some-password\",\n\t\t\t\t},\n\t\t\t},\n\t\t\twant: &azidentity.ClientSecretCredential{},\n",
                    "rendered": {
                      "text": "\t\t\t\tAZConfig: AZConfig{\n\t\t\t\t\tAppID:    \"some-app-id\",\n\t\t\t\t\tTenant:   \"some-tenant\",\n\t\t\t\t\tPassword: \"some-password\",\n\t\t\t\t},\n\t\t\t},\n\t\t\twant: &azidentity.ClientSecretCredential{},\n",
                      "markdown": "`\t\t\t\tAZConfig: AZConfig{\n\t\t\t\t\tAppID:    \"some-app-id\",\n\t\t\t\t\tTenant:   \"some-tenant\",\n\t\t\t\t\tPassword: \"some-password\",\n\t\t\t\t},\n\t\t\t},\n\t\t\twant: &azidentity.ClientSecretCredential{},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/sops/azkv/config_test.go"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 21,
                  "endLine": 77,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\t\t\tAZConfig: AZConfig{\n\t\t\t\t\tAppID:    \"some-app-id\",\n\t\t\t\t\tTenant:   \"some-tenant\",\n\t\t\t\t\tPassword: \"some-password\",\n\t\t\t\t},\n\t\t\t},\n\t\t},\n",
                    "rendered": {
                      "text": "\t\t\t\tAZConfig: AZConfig{\n\t\t\t\t\tAppID:    \"some-app-id\",\n\t\t\t\t\tTenant:   \"some-tenant\",\n\t\t\t\t\tPassword: \"some-password\",\n\t\t\t\t},\n\t\t\t},\n\t\t},\n",
                      "markdown": "`\t\t\t\tAZConfig: AZConfig{\n\t\t\t\t\tAppID:    \"some-app-id\",\n\t\t\t\t\tTenant:   \"some-tenant\",\n\t\t\t\t\tPassword: \"some-password\",\n\t\t\t\t},\n\t\t\t},\n\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/sops/azkv/config_test.go"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 5,
                  "endLine": 77,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\t\t\t\tAZConfig: AZConfig{\n\t\t\t\t\tAppID:    \"some-app-id\",\n\t\t\t\t\tTenant:   \"some-tenant\",\n\t\t\t\t\tPassword: \"some-password\",\n\t\t\t\t},\n\t\t\t},\n\t\t},\n",
                    "rendered": {
                      "text": "\t\t\t\tAZConfig: AZConfig{\n\t\t\t\t\tAppID:    \"some-app-id\",\n\t\t\t\t\tTenant:   \"some-tenant\",\n\t\t\t\t\tPassword: \"some-password\",\n\t\t\t\t},\n\t\t\t},\n\t\t},\n",
                      "markdown": "`\t\t\t\tAZConfig: AZConfig{\n\t\t\t\t\tAppID:    \"some-app-id\",\n\t\t\t\t\tTenant:   \"some-tenant\",\n\t\t\t\t\tPassword: \"some-password\",\n\t\t\t\t},\n\t\t\t},\n\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/sops/azkv/config_test.go"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 85,
                  "endLine": 72,
                  "endColumn": 93,
                  "snippet": {
                    "text": "\t\t},\n\t\t{\n\t\t\tname: \"Service Principal with Secret from az CLI\",\n\t\t\tb:    []byte(`{\"appId\": \"some-app-id\", \"tenant\": \"some-tenant\", \"password\": \"some-password\"}`),\n\t\t\twant: AADConfig{\n\t\t\t\tAZConfig: AZConfig{\n\t\t\t\t\tAppID:    \"some-app-id\",\n",
                    "rendered": {
                      "text": "\t\t},\n\t\t{\n\t\t\tname: \"Service Principal with Secret from az CLI\",\n\t\t\tb:    []byte(`{\"appId\": \"some-app-id\", \"tenant\": \"some-tenant\", \"password\": \"some-password\"}`),\n\t\t\twant: AADConfig{\n\t\t\t\tAZConfig: AZConfig{\n\t\t\t\t\tAppID:    \"some-app-id\",\n",
                      "markdown": "`\t\t},\n\t\t{\n\t\t\tname: \"Service Principal with Secret from az CLI\",\n\t\t\tb:    []byte(`{\"appId\": \"some-app-id\", \"tenant\": \"some-tenant\", \"password\": \"some-password\"}`),\n\t\t\twant: AADConfig{\n\t\t\t\tAZConfig: AZConfig{\n\t\t\t\t\tAppID:    \"some-app-id\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/sops/azkv/config_test.go"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 68,
                  "endLine": 72,
                  "endColumn": 76,
                  "snippet": {
                    "text": "\t\t},\n\t\t{\n\t\t\tname: \"Service Principal with Secret from az CLI\",\n\t\t\tb:    []byte(`{\"appId\": \"some-app-id\", \"tenant\": \"some-tenant\", \"password\": \"some-password\"}`),\n\t\t\twant: AADConfig{\n\t\t\t\tAZConfig: AZConfig{\n\t\t\t\t\tAppID:    \"some-app-id\",\n",
                    "rendered": {
                      "text": "\t\t},\n\t\t{\n\t\t\tname: \"Service Principal with Secret from az CLI\",\n\t\t\tb:    []byte(`{\"appId\": \"some-app-id\", \"tenant\": \"some-tenant\", \"password\": \"some-password\"}`),\n\t\t\twant: AADConfig{\n\t\t\t\tAZConfig: AZConfig{\n\t\t\t\t\tAppID:    \"some-app-id\",\n",
                      "markdown": "`\t\t},\n\t\t{\n\t\t\tname: \"Service Principal with Secret from az CLI\",\n\t\t\tb:    []byte(`{\"appId\": \"some-app-id\", \"tenant\": \"some-tenant\", \"password\": \"some-password\"}`),\n\t\t\twant: AADConfig{\n\t\t\t\tAZConfig: AZConfig{\n\t\t\t\t\tAppID:    \"some-app-id\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/sops/azkv/config.go"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 67,
                  "endLine": 107,
                  "endColumn": 75,
                  "snippet": {
                    "text": "\n\tswitch {\n\tcase c.Tenant != \"\" && c.AppID != \"\" && c.Password != \"\":\n\t\treturn azidentity.NewClientSecretCredential(c.Tenant, c.AppID, c.Password, &azidentity.ClientSecretCredentialOptions{\n\t\t\tClientOptions: azcore.ClientOptions{\n\t\t\t\tCloud: c.GetCloudConfig(),\n\t\t\t},\n",
                    "rendered": {
                      "text": "\n\tswitch {\n\tcase c.Tenant != \"\" && c.AppID != \"\" && c.Password != \"\":\n\t\treturn azidentity.NewClientSecretCredential(c.Tenant, c.AppID, c.Password, &azidentity.ClientSecretCredentialOptions{\n\t\t\tClientOptions: azcore.ClientOptions{\n\t\t\t\tCloud: c.GetCloudConfig(),\n\t\t\t},\n",
                      "markdown": "`\n\tswitch {\n\tcase c.Tenant != \"\" && c.AppID != \"\" && c.Password != \"\":\n\t\treturn azidentity.NewClientSecretCredential(c.Tenant, c.AppID, c.Password, &azidentity.ClientSecretCredentialOptions{\n\t\t\tClientOptions: azcore.ClientOptions{\n\t\t\t\tCloud: c.GetCloudConfig(),\n\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/sops/azkv/config.go"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 43,
                  "endLine": 106,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\t}\n\n\tswitch {\n\tcase c.Tenant != \"\" && c.AppID != \"\" && c.Password != \"\":\n\t\treturn azidentity.NewClientSecretCredential(c.Tenant, c.AppID, c.Password, &azidentity.ClientSecretCredentialOptions{\n\t\t\tClientOptions: azcore.ClientOptions{\n\t\t\t\tCloud: c.GetCloudConfig(),\n",
                    "rendered": {
                      "text": "\t}\n\n\tswitch {\n\tcase c.Tenant != \"\" && c.AppID != \"\" && c.Password != \"\":\n\t\treturn azidentity.NewClientSecretCredential(c.Tenant, c.AppID, c.Password, &azidentity.ClientSecretCredentialOptions{\n\t\t\tClientOptions: azcore.ClientOptions{\n\t\t\t\tCloud: c.GetCloudConfig(),\n",
                      "markdown": "`\t}\n\n\tswitch {\n\tcase c.Tenant != \"\" && c.AppID != \"\" && c.Password != \"\":\n\t\treturn azidentity.NewClientSecretCredential(c.Tenant, c.AppID, c.Password, &azidentity.ClientSecretCredentialOptions{\n\t\t\tClientOptions: azcore.ClientOptions{\n\t\t\t\tCloud: c.GetCloudConfig(),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/sops/azkv/config.go"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 105,
                  "endLine": 92,
                  "endColumn": 113,
                  "snippet": {
                    "text": "\t\t\t})\n\t\t}\n\t\tif c.ClientCertificate != \"\" {\n\t\t\tcerts, pk, err := azidentity.ParseCertificates([]byte(c.ClientCertificate), []byte(c.ClientCertificatePassword))\n\t\t\tif err != nil {\n\t\t\t\treturn nil, err\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t})\n\t\t}\n\t\tif c.ClientCertificate != \"\" {\n\t\t\tcerts, pk, err := azidentity.ParseCertificates([]byte(c.ClientCertificate), []byte(c.ClientCertificatePassword))\n\t\t\tif err != nil {\n\t\t\t\treturn nil, err\n\t\t\t}\n",
                      "markdown": "`\t\t\t})\n\t\t}\n\t\tif c.ClientCertificate != \"\" {\n\t\t\tcerts, pk, err := azidentity.ParseCertificates([]byte(c.ClientCertificate), []byte(c.ClientCertificatePassword))\n\t\t\tif err != nil {\n\t\t\t\treturn nil, err\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/sops/azkv/config.go"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 61,
                  "endLine": 74,
                  "endColumn": 69,
                  "snippet": {
                    "text": "//   - azidentity.ClientSecretCredential when `tenantId`, `clientId` and\n//     `clientSecret` fields are found.\n//   - azidentity.ClientCertificateCredential when `tenantId`,\n//     `clientCertificate` (and optionally `clientCertificatePassword`) fields\n//     are found.\n//   - azidentity.ClientSecretCredential when AZConfig fields are found.\n//   - azidentity.ManagedIdentityCredential for a User ID, when a `clientId`\n",
                    "rendered": {
                      "text": "//   - azidentity.ClientSecretCredential when `tenantId`, `clientId` and\n//     `clientSecret` fields are found.\n//   - azidentity.ClientCertificateCredential when `tenantId`,\n//     `clientCertificate` (and optionally `clientCertificatePassword`) fields\n//     are found.\n//   - azidentity.ClientSecretCredential when AZConfig fields are found.\n//   - azidentity.ManagedIdentityCredential for a User ID, when a `clientId`\n",
                      "markdown": "`//   - azidentity.ClientSecretCredential when `tenantId`, `clientId` and\n//     `clientSecret` fields are found.\n//   - azidentity.ClientCertificateCredential when `tenantId`,\n//     `clientCertificate` (and optionally `clientCertificatePassword`) fields\n//     are found.\n//   - azidentity.ClientSecretCredential when AZConfig fields are found.\n//   - azidentity.ManagedIdentityCredential for a User ID, when a `clientId`\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/sops/azkv/config.go"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 24,
                  "endLine": 65,
                  "endColumn": 32,
                  "snippet": {
                    "text": "type AZConfig struct {\n\tAppID    string `json:\"appId,omitempty\"`\n\tTenant   string `json:\"tenant,omitempty\"`\n\tPassword string `json:\"password,omitempty\"`\n}\n\n// TokenCredentialFromAADConfig attempts to construct a Token using the AADConfig values.\n",
                    "rendered": {
                      "text": "type AZConfig struct {\n\tAppID    string `json:\"appId,omitempty\"`\n\tTenant   string `json:\"tenant,omitempty\"`\n\tPassword string `json:\"password,omitempty\"`\n}\n\n// TokenCredentialFromAADConfig attempts to construct a Token using the AADConfig values.\n",
                      "markdown": "`type AZConfig struct {\n\tAppID    string `json:\"appId,omitempty\"`\n\tTenant   string `json:\"tenant,omitempty\"`\n\tPassword string `json:\"password,omitempty\"`\n}\n\n// TokenCredentialFromAADConfig attempts to construct a Token using the AADConfig values.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/sops/azkv/config.go"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 1,
                  "endLine": 65,
                  "endColumn": 9,
                  "snippet": {
                    "text": "type AZConfig struct {\n\tAppID    string `json:\"appId,omitempty\"`\n\tTenant   string `json:\"tenant,omitempty\"`\n\tPassword string `json:\"password,omitempty\"`\n}\n\n// TokenCredentialFromAADConfig attempts to construct a Token using the AADConfig values.\n",
                    "rendered": {
                      "text": "type AZConfig struct {\n\tAppID    string `json:\"appId,omitempty\"`\n\tTenant   string `json:\"tenant,omitempty\"`\n\tPassword string `json:\"password,omitempty\"`\n}\n\n// TokenCredentialFromAADConfig attempts to construct a Token using the AADConfig values.\n",
                      "markdown": "`type AZConfig struct {\n\tAppID    string `json:\"appId,omitempty\"`\n\tTenant   string `json:\"tenant,omitempty\"`\n\tPassword string `json:\"password,omitempty\"`\n}\n\n// TokenCredentialFromAADConfig attempts to construct a Token using the AADConfig values.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/sops/azkv/config.go"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 59,
                  "endLine": 55,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\tClientID                   string `json:\"clientId,omitempty\"`\n\tClientSecret               string `json:\"clientSecret,omitempty\"`\n\tClientCertificate          string `json:\"clientCertificate,omitempty\"`\n\tClientCertificatePassword  string `json:\"clientCertificatePassword,omitempty\"`\n\tClientCertificateSendChain bool   `json:\"clientCertificateSendChain,omitempty\"`\n\tAuthorityHost              string `json:\"authorityHost,omitempty\"`\n}\n",
                    "rendered": {
                      "text": "\tClientID                   string `json:\"clientId,omitempty\"`\n\tClientSecret               string `json:\"clientSecret,omitempty\"`\n\tClientCertificate          string `json:\"clientCertificate,omitempty\"`\n\tClientCertificatePassword  string `json:\"clientCertificatePassword,omitempty\"`\n\tClientCertificateSendChain bool   `json:\"clientCertificateSendChain,omitempty\"`\n\tAuthorityHost              string `json:\"authorityHost,omitempty\"`\n}\n",
                      "markdown": "`\tClientID                   string `json:\"clientId,omitempty\"`\n\tClientSecret               string `json:\"clientSecret,omitempty\"`\n\tClientCertificate          string `json:\"clientCertificate,omitempty\"`\n\tClientCertificatePassword  string `json:\"clientCertificatePassword,omitempty\"`\n\tClientCertificateSendChain bool   `json:\"clientCertificateSendChain,omitempty\"`\n\tAuthorityHost              string `json:\"authorityHost,omitempty\"`\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/sops/azkv/config.go"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 18,
                  "endLine": 55,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\tClientID                   string `json:\"clientId,omitempty\"`\n\tClientSecret               string `json:\"clientSecret,omitempty\"`\n\tClientCertificate          string `json:\"clientCertificate,omitempty\"`\n\tClientCertificatePassword  string `json:\"clientCertificatePassword,omitempty\"`\n\tClientCertificateSendChain bool   `json:\"clientCertificateSendChain,omitempty\"`\n\tAuthorityHost              string `json:\"authorityHost,omitempty\"`\n}\n",
                    "rendered": {
                      "text": "\tClientID                   string `json:\"clientId,omitempty\"`\n\tClientSecret               string `json:\"clientSecret,omitempty\"`\n\tClientCertificate          string `json:\"clientCertificate,omitempty\"`\n\tClientCertificatePassword  string `json:\"clientCertificatePassword,omitempty\"`\n\tClientCertificateSendChain bool   `json:\"clientCertificateSendChain,omitempty\"`\n\tAuthorityHost              string `json:\"authorityHost,omitempty\"`\n}\n",
                      "markdown": "`\tClientID                   string `json:\"clientId,omitempty\"`\n\tClientSecret               string `json:\"clientSecret,omitempty\"`\n\tClientCertificate          string `json:\"clientCertificate,omitempty\"`\n\tClientCertificatePassword  string `json:\"clientCertificatePassword,omitempty\"`\n\tClientCertificateSendChain bool   `json:\"clientCertificateSendChain,omitempty\"`\n\tAuthorityHost              string `json:\"authorityHost,omitempty\"`\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/sops/azkv/config.go"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 24,
                  "endLine": 60,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\tAuthorityHost              string `json:\"authorityHost,omitempty\"`\n}\n\n// AZConfig contains the Service Principal fields as generated by `az`.\n// Ref: https://docs.microsoft.com/en-us/azure/aks/kubernetes-service-principal?tabs=azure-cli#manually-create-a-service-principal\ntype AZConfig struct {\n\tAppID    string `json:\"appId,omitempty\"`\n",
                    "rendered": {
                      "text": "\tAuthorityHost              string `json:\"authorityHost,omitempty\"`\n}\n\n// AZConfig contains the Service Principal fields as generated by `az`.\n// Ref: https://docs.microsoft.com/en-us/azure/aks/kubernetes-service-principal?tabs=azure-cli#manually-create-a-service-principal\ntype AZConfig struct {\n\tAppID    string `json:\"appId,omitempty\"`\n",
                      "markdown": "`\tAuthorityHost              string `json:\"authorityHost,omitempty\"`\n}\n\n// AZConfig contains the Service Principal fields as generated by `az`.\n// Ref: https://docs.microsoft.com/en-us/azure/aks/kubernetes-service-principal?tabs=azure-cli#manually-create-a-service-principal\ntype AZConfig struct {\n\tAppID    string `json:\"appId,omitempty\"`\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/sops/azkv/credentials.go"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 30,
                  "endLine": 37,
                  "endColumn": 38,
                  "snippet": {
                    "text": "//   - azidentity.NewEnvironmentCredential if environment variables AZURE_CLIENT_ID,\n//     AZURE_CLIENT_ID is set with either one of the following: (AZURE_CLIENT_SECRET)\n//     or (AZURE_CLIENT_CERTIFICATE_PATH and AZURE_CLIENT_CERTIFICATE_PATH) or\n//     (AZURE_USERNAME, AZURE_PASSWORD)\n//   - azidentity.WorkloadIdentityCredential if environment variable configuration\n//     (AZURE_AUTHORITY_HOST, AZURE_CLIENT_ID, AZURE_FEDERATED_TOKEN_FILE, AZURE_TENANT_ID)\n//     is set by the Azure workload identity webhook.\n",
                    "rendered": {
                      "text": "//   - azidentity.NewEnvironmentCredential if environment variables AZURE_CLIENT_ID,\n//     AZURE_CLIENT_ID is set with either one of the following: (AZURE_CLIENT_SECRET)\n//     or (AZURE_CLIENT_CERTIFICATE_PATH and AZURE_CLIENT_CERTIFICATE_PATH) or\n//     (AZURE_USERNAME, AZURE_PASSWORD)\n//   - azidentity.WorkloadIdentityCredential if environment variable configuration\n//     (AZURE_AUTHORITY_HOST, AZURE_CLIENT_ID, AZURE_FEDERATED_TOKEN_FILE, AZURE_TENANT_ID)\n//     is set by the Azure workload identity webhook.\n",
                      "markdown": "`//   - azidentity.NewEnvironmentCredential if environment variables AZURE_CLIENT_ID,\n//     AZURE_CLIENT_ID is set with either one of the following: (AZURE_CLIENT_SECRET)\n//     or (AZURE_CLIENT_CERTIFICATE_PATH and AZURE_CLIENT_CERTIFICATE_PATH) or\n//     (AZURE_USERNAME, AZURE_PASSWORD)\n//   - azidentity.WorkloadIdentityCredential if environment variable configuration\n//     (AZURE_AUTHORITY_HOST, AZURE_CLIENT_ID, AZURE_FEDERATED_TOKEN_FILE, AZURE_TENANT_ID)\n//     is set by the Azure workload identity webhook.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/sops/keyservice/server_test.go"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 35,
                  "endLine": 64,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\tg.Expect(encResp.Ciphertext).ToNot(BeEmpty())\n\tg.Expect(encResp.Ciphertext).ToNot(Equal(dataKey))\n\n\tg.Expect(gnuPGHome.ImportFile(mockPrivateKey)).To(Succeed())\n\tdecResp, err := s.Decrypt(context.TODO(), &keyservice.DecryptRequest{\n\t\tKey:        &key,\n\t\tCiphertext: encResp.Ciphertext,\n",
                    "rendered": {
                      "text": "\tg.Expect(encResp.Ciphertext).ToNot(BeEmpty())\n\tg.Expect(encResp.Ciphertext).ToNot(Equal(dataKey))\n\n\tg.Expect(gnuPGHome.ImportFile(mockPrivateKey)).To(Succeed())\n\tdecResp, err := s.Decrypt(context.TODO(), &keyservice.DecryptRequest{\n\t\tKey:        &key,\n\t\tCiphertext: encResp.Ciphertext,\n",
                      "markdown": "`\tg.Expect(encResp.Ciphertext).ToNot(BeEmpty())\n\tg.Expect(encResp.Ciphertext).ToNot(Equal(dataKey))\n\n\tg.Expect(gnuPGHome.ImportFile(mockPrivateKey)).To(Succeed())\n\tdecResp, err := s.Decrypt(context.TODO(), &keyservice.DecryptRequest{\n\t\tKey:        &key,\n\t\tCiphertext: encResp.Ciphertext,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/sops/keyservice/server_test.go"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 6,
                  "endLine": 40,
                  "endColumn": 16,
                  "snippet": {
                    "text": "func TestServer_EncryptDecrypt_PGP(t *testing.T) {\n\tconst (\n\t\tmockPublicKey   = \"testdata/public.gpg\"\n\t\tmockPrivateKey  = \"testdata/private.gpg\"\n\t\tmockFingerprint = \"B59DAF469E8C948138901A649732075EA221A7EA\"\n\t)\n\n",
                    "rendered": {
                      "text": "func TestServer_EncryptDecrypt_PGP(t *testing.T) {\n\tconst (\n\t\tmockPublicKey   = \"testdata/public.gpg\"\n\t\tmockPrivateKey  = \"testdata/private.gpg\"\n\t\tmockFingerprint = \"B59DAF469E8C948138901A649732075EA221A7EA\"\n\t)\n\n",
                      "markdown": "`func TestServer_EncryptDecrypt_PGP(t *testing.T) {\n\tconst (\n\t\tmockPublicKey   = \"testdata/public.gpg\"\n\t\tmockPrivateKey  = \"testdata/private.gpg\"\n\t\tmockFingerprint = \"B59DAF469E8C948138901A649732075EA221A7EA\"\n\t)\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/sops/keyservice/server_test.go"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 25,
                  "endLine": 77,
                  "endColumn": 89,
                  "snippet": {
                    "text": "\tg := NewWithT(t)\n\n\tconst (\n\t\tmockRecipient string = \"age1lzd99uklcjnc0e7d860axevet2cz99ce9pq6tzuzd05l5nr28ams36nvun\"\n\t\tmockIdentity  string = \"AGE-SECRET-KEY-1G0Q5K9TV4REQ3ZSQRMTMG8NSWQGYT0T7TZ33RAZEE0GZYVZN0APSU24RK7\"\n\t)\n\n",
                    "rendered": {
                      "text": "\tg := NewWithT(t)\n\n\tconst (\n\t\tmockRecipient string = \"age1lzd99uklcjnc0e7d860axevet2cz99ce9pq6tzuzd05l5nr28ams36nvun\"\n\t\tmockIdentity  string = \"AGE-SECRET-KEY-1G0Q5K9TV4REQ3ZSQRMTMG8NSWQGYT0T7TZ33RAZEE0GZYVZN0APSU24RK7\"\n\t)\n\n",
                      "markdown": "`\tg := NewWithT(t)\n\n\tconst (\n\t\tmockRecipient string = \"age1lzd99uklcjnc0e7d860axevet2cz99ce9pq6tzuzd05l5nr28ams36nvun\"\n\t\tmockIdentity  string = \"AGE-SECRET-KEY-1G0Q5K9TV4REQ3ZSQRMTMG8NSWQGYT0T7TZ33RAZEE0GZYVZN0APSU24RK7\"\n\t)\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/sops/keyservice/server_test.go"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 20,
                  "endLine": 41,
                  "endColumn": 62,
                  "snippet": {
                    "text": "\tconst (\n\t\tmockPublicKey   = \"testdata/public.gpg\"\n\t\tmockPrivateKey  = \"testdata/private.gpg\"\n\t\tmockFingerprint = \"B59DAF469E8C948138901A649732075EA221A7EA\"\n\t)\n\n\tg := NewWithT(t)\n",
                    "rendered": {
                      "text": "\tconst (\n\t\tmockPublicKey   = \"testdata/public.gpg\"\n\t\tmockPrivateKey  = \"testdata/private.gpg\"\n\t\tmockFingerprint = \"B59DAF469E8C948138901A649732075EA221A7EA\"\n\t)\n\n\tg := NewWithT(t)\n",
                      "markdown": "`\tconst (\n\t\tmockPublicKey   = \"testdata/public.gpg\"\n\t\tmockPrivateKey  = \"testdata/private.gpg\"\n\t\tmockFingerprint = \"B59DAF469E8C948138901A649732075EA221A7EA\"\n\t)\n\n\tg := NewWithT(t)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.gitignore"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 29,
                  "endLine": 17,
                  "endColumn": 33,
                  "snippet": {
                    "text": "# Build tools downloaded at runtime.\nbin/\n\n# Release manifests generated at runtime.\nconfig/release/\nconfig/crd/bases/ocirepositories.yaml\nconfig/crd/bases/gitrepositories.yaml\n",
                    "rendered": {
                      "text": "# Build tools downloaded at runtime.\nbin/\n\n# Release manifests generated at runtime.\nconfig/release/\nconfig/crd/bases/ocirepositories.yaml\nconfig/crd/bases/gitrepositories.yaml\n",
                      "markdown": "`# Build tools downloaded at runtime.\nbin/\n\n# Release manifests generated at runtime.\nconfig/release/\nconfig/crd/bases/ocirepositories.yaml\nconfig/crd/bases/gitrepositories.yaml\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.gitignore"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 24,
                  "endLine": 14,
                  "endColumn": 28,
                  "snippet": {
                    "text": "# Output of the go coverage tool.\n*.out\n\n# Build tools downloaded at runtime.\nbin/\n\n# Release manifests generated at runtime.\n",
                    "rendered": {
                      "text": "# Output of the go coverage tool.\n*.out\n\n# Build tools downloaded at runtime.\nbin/\n\n# Release manifests generated at runtime.\n",
                      "markdown": "`# Output of the go coverage tool.\n*.out\n\n# Build tools downloaded at runtime.\nbin/\n\n# Release manifests generated at runtime.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/config/rbac/role.yaml"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 3,
                  "endLine": 54,
                  "snippet": {
                    "text": "  verbs:\n  - get\n  - patch\n  - update\n- apiGroups:\n  - source.toolkit.fluxcd.io\n  resources:\n  - buckets\n",
                    "rendered": {
                      "text": "  verbs:\n  - get\n  - patch\n  - update\n- apiGroups:\n  - source.toolkit.fluxcd.io\n  resources:\n  - buckets\n",
                      "markdown": "`  verbs:\n  - get\n  - patch\n  - update\n- apiGroups:\n  - source.toolkit.fluxcd.io\n  resources:\n  - buckets\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/config/rbac/role.yaml"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 3,
                  "endLine": 46,
                  "snippet": {
                    "text": "  - delete\n  - get\n  - patch\n  - update\n- apiGroups:\n  - kustomize.toolkit.fluxcd.io\n  resources:\n  - kustomizations/status\n",
                    "rendered": {
                      "text": "  - delete\n  - get\n  - patch\n  - update\n- apiGroups:\n  - kustomize.toolkit.fluxcd.io\n  resources:\n  - kustomizations/status\n",
                      "markdown": "`  - delete\n  - get\n  - patch\n  - update\n- apiGroups:\n  - kustomize.toolkit.fluxcd.io\n  resources:\n  - kustomizations/status\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/config/rbac/role.yaml"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 3,
                  "endLine": 35,
                  "snippet": {
                    "text": "  - get\n  - list\n  - patch\n  - update\n  - watch\n- apiGroups:\n  - kustomize.toolkit.fluxcd.io\n  resources:\n",
                    "rendered": {
                      "text": "  - get\n  - list\n  - patch\n  - update\n  - watch\n- apiGroups:\n  - kustomize.toolkit.fluxcd.io\n  resources:\n",
                      "markdown": "`  - get\n  - list\n  - patch\n  - update\n  - watch\n- apiGroups:\n  - kustomize.toolkit.fluxcd.io\n  resources:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/config/rbac/role.yaml"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 3,
                  "endLine": 64,
                  "snippet": {
                    "text": "  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - source.toolkit.fluxcd.io\n  resources:\n  - buckets/status\n",
                    "rendered": {
                      "text": "  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - source.toolkit.fluxcd.io\n  resources:\n  - buckets/status\n",
                      "markdown": "`  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - source.toolkit.fluxcd.io\n  resources:\n  - buckets/status\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/config/rbac/role.yaml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 3,
                  "endLine": 36,
                  "snippet": {
                    "text": "  - list\n  - patch\n  - update\n  - watch\n- apiGroups:\n  - kustomize.toolkit.fluxcd.io\n  resources:\n  - kustomizations/finalizers\n",
                    "rendered": {
                      "text": "  - list\n  - patch\n  - update\n  - watch\n- apiGroups:\n  - kustomize.toolkit.fluxcd.io\n  resources:\n  - kustomizations/finalizers\n",
                      "markdown": "`  - list\n  - patch\n  - update\n  - watch\n- apiGroups:\n  - kustomize.toolkit.fluxcd.io\n  resources:\n  - kustomizations/finalizers\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/config/rbac/role.yaml"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 3,
                  "endLine": 17,
                  "snippet": {
                    "text": "  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  - events\n",
                    "rendered": {
                      "text": "  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  - events\n",
                      "markdown": "`  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - \"\"\n  resources:\n  - events\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/config/rbac/leader_election_role.yaml"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 7,
                  "endLine": 43,
                  "snippet": {
                    "text": "      - list\n      - watch\n      - create\n      - update\n      - patch\n      - delete\n",
                    "rendered": {
                      "text": "      - list\n      - watch\n      - create\n      - update\n      - patch\n      - delete\n",
                      "markdown": "`      - list\n      - watch\n      - create\n      - update\n      - patch\n      - delete\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/config/rbac/leader_election_role.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 7,
                  "endLine": 26,
                  "snippet": {
                    "text": "      - configmaps/status\n    verbs:\n      - get\n      - update\n      - patch\n  - apiGroups:\n      - \"\"\n    resources:\n",
                    "rendered": {
                      "text": "      - configmaps/status\n    verbs:\n      - get\n      - update\n      - patch\n  - apiGroups:\n      - \"\"\n    resources:\n",
                      "markdown": "`      - configmaps/status\n    verbs:\n      - get\n      - update\n      - patch\n  - apiGroups:\n      - \"\"\n    resources:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/config/rbac/leader_election_role.yaml"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 7,
                  "endLine": 17,
                  "snippet": {
                    "text": "      - list\n      - watch\n      - create\n      - update\n      - patch\n      - delete\n  - apiGroups:\n      - \"\"\n",
                    "rendered": {
                      "text": "      - list\n      - watch\n      - create\n      - update\n      - patch\n      - delete\n  - apiGroups:\n      - \"\"\n",
                      "markdown": "`      - list\n      - watch\n      - create\n      - update\n      - patch\n      - delete\n  - apiGroups:\n      - \"\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/config/rbac/leader_election_role.yaml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 7,
                  "endLine": 41,
                  "snippet": {
                    "text": "    verbs:\n      - get\n      - list\n      - watch\n      - create\n      - update\n      - patch\n      - delete\n",
                    "rendered": {
                      "text": "    verbs:\n      - get\n      - list\n      - watch\n      - create\n      - update\n      - patch\n      - delete\n",
                      "markdown": "`    verbs:\n      - get\n      - list\n      - watch\n      - create\n      - update\n      - patch\n      - delete\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/config/rbac/leader_election_role.yaml"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 7,
                  "endLine": 15,
                  "snippet": {
                    "text": "    verbs:\n      - get\n      - list\n      - watch\n      - create\n      - update\n      - patch\n      - delete\n",
                    "rendered": {
                      "text": "    verbs:\n      - get\n      - list\n      - watch\n      - create\n      - update\n      - patch\n      - delete\n",
                      "markdown": "`    verbs:\n      - get\n      - list\n      - watch\n      - create\n      - update\n      - patch\n      - delete\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_decryptor_test.go"
                },
                "region": {
                  "startLine": 221,
                  "startColumn": 16,
                  "endLine": 221,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn resultK.Status.LastAppliedRevision == revision\n\t\t}, timeout, time.Second).Should(BeTrue())\n\n",
                    "rendered": {
                      "text": "\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn resultK.Status.LastAppliedRevision == revision\n\t\t}, timeout, time.Second).Should(BeTrue())\n\n",
                      "markdown": "`\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn resultK.Status.LastAppliedRevision == revision\n\t\t}, timeout, time.Second).Should(BeTrue())\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_decryptor_test.go"
                },
                "region": {
                  "startLine": 208,
                  "startColumn": 20,
                  "endLine": 208,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\tg.Expect(string(encodedSecret.Data[\"month.yaml\"])).To(Equal(\"month: May\\n\"))\n\n\t\tvar hcvaultSecret corev1.Secret\n\t\tg.Expect(k8sClient.Get(context.TODO(), types.NamespacedName{Name: \"sops-hcvault\", Namespace: id}, &hcvaultSecret)).To(Succeed())\n\t\tg.Expect(string(hcvaultSecret.Data[\"secret\"])).To(Equal(\"my-sops-vault-secret\\n\"))\n\t})\n\n",
                    "rendered": {
                      "text": "\t\tg.Expect(string(encodedSecret.Data[\"month.yaml\"])).To(Equal(\"month: May\\n\"))\n\n\t\tvar hcvaultSecret corev1.Secret\n\t\tg.Expect(k8sClient.Get(context.TODO(), types.NamespacedName{Name: \"sops-hcvault\", Namespace: id}, &hcvaultSecret)).To(Succeed())\n\t\tg.Expect(string(hcvaultSecret.Data[\"secret\"])).To(Equal(\"my-sops-vault-secret\\n\"))\n\t})\n\n",
                      "markdown": "`\t\tg.Expect(string(encodedSecret.Data[\"month.yaml\"])).To(Equal(\"month: May\\n\"))\n\n\t\tvar hcvaultSecret corev1.Secret\n\t\tg.Expect(k8sClient.Get(context.TODO(), types.NamespacedName{Name: \"sops-hcvault\", Namespace: id}, &hcvaultSecret)).To(Succeed())\n\t\tg.Expect(string(hcvaultSecret.Data[\"secret\"])).To(Equal(\"my-sops-vault-secret\\n\"))\n\t})\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_decryptor_test.go"
                },
                "region": {
                  "startLine": 204,
                  "startColumn": 20,
                  "endLine": 204,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\tg.Expect(string(year2Secret.Data[\"year\"])).To(Equal(\"year2\"))\n\n\t\tvar encodedSecret corev1.Secret\n\t\tg.Expect(k8sClient.Get(context.TODO(), types.NamespacedName{Name: \"sops-month\", Namespace: id}, &encodedSecret)).To(Succeed())\n\t\tg.Expect(string(encodedSecret.Data[\"month.yaml\"])).To(Equal(\"month: May\\n\"))\n\n\t\tvar hcvaultSecret corev1.Secret\n",
                    "rendered": {
                      "text": "\t\tg.Expect(string(year2Secret.Data[\"year\"])).To(Equal(\"year2\"))\n\n\t\tvar encodedSecret corev1.Secret\n\t\tg.Expect(k8sClient.Get(context.TODO(), types.NamespacedName{Name: \"sops-month\", Namespace: id}, &encodedSecret)).To(Succeed())\n\t\tg.Expect(string(encodedSecret.Data[\"month.yaml\"])).To(Equal(\"month: May\\n\"))\n\n\t\tvar hcvaultSecret corev1.Secret\n",
                      "markdown": "`\t\tg.Expect(string(year2Secret.Data[\"year\"])).To(Equal(\"year2\"))\n\n\t\tvar encodedSecret corev1.Secret\n\t\tg.Expect(k8sClient.Get(context.TODO(), types.NamespacedName{Name: \"sops-month\", Namespace: id}, &encodedSecret)).To(Succeed())\n\t\tg.Expect(string(encodedSecret.Data[\"month.yaml\"])).To(Equal(\"month: May\\n\"))\n\n\t\tvar hcvaultSecret corev1.Secret\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_decryptor_test.go"
                },
                "region": {
                  "startLine": 200,
                  "startColumn": 20,
                  "endLine": 200,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\tg.Expect(string(year1Secret.Data[\"year\"])).To(Equal(\"year1\"))\n\n\t\tvar year2Secret corev1.Secret\n\t\tg.Expect(k8sClient.Get(context.TODO(), types.NamespacedName{Name: \"sops-year2\", Namespace: id}, &year2Secret)).To(Succeed())\n\t\tg.Expect(string(year2Secret.Data[\"year\"])).To(Equal(\"year2\"))\n\n\t\tvar encodedSecret corev1.Secret\n",
                    "rendered": {
                      "text": "\t\tg.Expect(string(year1Secret.Data[\"year\"])).To(Equal(\"year1\"))\n\n\t\tvar year2Secret corev1.Secret\n\t\tg.Expect(k8sClient.Get(context.TODO(), types.NamespacedName{Name: \"sops-year2\", Namespace: id}, &year2Secret)).To(Succeed())\n\t\tg.Expect(string(year2Secret.Data[\"year\"])).To(Equal(\"year2\"))\n\n\t\tvar encodedSecret corev1.Secret\n",
                      "markdown": "`\t\tg.Expect(string(year1Secret.Data[\"year\"])).To(Equal(\"year1\"))\n\n\t\tvar year2Secret corev1.Secret\n\t\tg.Expect(k8sClient.Get(context.TODO(), types.NamespacedName{Name: \"sops-year2\", Namespace: id}, &year2Secret)).To(Succeed())\n\t\tg.Expect(string(year2Secret.Data[\"year\"])).To(Equal(\"year2\"))\n\n\t\tvar encodedSecret corev1.Secret\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_decryptor_test.go"
                },
                "region": {
                  "startLine": 196,
                  "startColumn": 20,
                  "endLine": 196,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\tg.Expect(string(unencryptedSecret.Data[\"year\"])).To(Equal(\"2021\"))\n\n\t\tvar year1Secret corev1.Secret\n\t\tg.Expect(k8sClient.Get(context.TODO(), types.NamespacedName{Name: \"sops-year1\", Namespace: id}, &year1Secret)).To(Succeed())\n\t\tg.Expect(string(year1Secret.Data[\"year\"])).To(Equal(\"year1\"))\n\n\t\tvar year2Secret corev1.Secret\n",
                    "rendered": {
                      "text": "\t\tg.Expect(string(unencryptedSecret.Data[\"year\"])).To(Equal(\"2021\"))\n\n\t\tvar year1Secret corev1.Secret\n\t\tg.Expect(k8sClient.Get(context.TODO(), types.NamespacedName{Name: \"sops-year1\", Namespace: id}, &year1Secret)).To(Succeed())\n\t\tg.Expect(string(year1Secret.Data[\"year\"])).To(Equal(\"year1\"))\n\n\t\tvar year2Secret corev1.Secret\n",
                      "markdown": "`\t\tg.Expect(string(unencryptedSecret.Data[\"year\"])).To(Equal(\"2021\"))\n\n\t\tvar year1Secret corev1.Secret\n\t\tg.Expect(k8sClient.Get(context.TODO(), types.NamespacedName{Name: \"sops-year1\", Namespace: id}, &year1Secret)).To(Succeed())\n\t\tg.Expect(string(year1Secret.Data[\"year\"])).To(Equal(\"year1\"))\n\n\t\tvar year2Secret corev1.Secret\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_decryptor_test.go"
                },
                "region": {
                  "startLine": 192,
                  "startColumn": 20,
                  "endLine": 192,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\tg.Expect(string(yearSecret.Data[\"year\"])).To(Equal(\"2017\"))\n\n\t\tvar unencryptedSecret corev1.Secret\n\t\tg.Expect(k8sClient.Get(context.TODO(), types.NamespacedName{Name: \"unencrypted-sops-year\", Namespace: id}, &unencryptedSecret)).To(Succeed())\n\t\tg.Expect(string(unencryptedSecret.Data[\"year\"])).To(Equal(\"2021\"))\n\n\t\tvar year1Secret corev1.Secret\n",
                    "rendered": {
                      "text": "\t\tg.Expect(string(yearSecret.Data[\"year\"])).To(Equal(\"2017\"))\n\n\t\tvar unencryptedSecret corev1.Secret\n\t\tg.Expect(k8sClient.Get(context.TODO(), types.NamespacedName{Name: \"unencrypted-sops-year\", Namespace: id}, &unencryptedSecret)).To(Succeed())\n\t\tg.Expect(string(unencryptedSecret.Data[\"year\"])).To(Equal(\"2021\"))\n\n\t\tvar year1Secret corev1.Secret\n",
                      "markdown": "`\t\tg.Expect(string(yearSecret.Data[\"year\"])).To(Equal(\"2017\"))\n\n\t\tvar unencryptedSecret corev1.Secret\n\t\tg.Expect(k8sClient.Get(context.TODO(), types.NamespacedName{Name: \"unencrypted-sops-year\", Namespace: id}, &unencryptedSecret)).To(Succeed())\n\t\tg.Expect(string(unencryptedSecret.Data[\"year\"])).To(Equal(\"2021\"))\n\n\t\tvar year1Secret corev1.Secret\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_decryptor_test.go"
                },
                "region": {
                  "startLine": 188,
                  "startColumn": 20,
                  "endLine": 188,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\tg.Expect(string(daySecret.Data[\"secret\"])).To(Equal(\"day=Tuesday\\n\"))\n\n\t\tvar yearSecret corev1.Secret\n\t\tg.Expect(k8sClient.Get(context.TODO(), types.NamespacedName{Name: \"sops-year\", Namespace: id}, &yearSecret)).To(Succeed())\n\t\tg.Expect(string(yearSecret.Data[\"year\"])).To(Equal(\"2017\"))\n\n\t\tvar unencryptedSecret corev1.Secret\n",
                    "rendered": {
                      "text": "\t\tg.Expect(string(daySecret.Data[\"secret\"])).To(Equal(\"day=Tuesday\\n\"))\n\n\t\tvar yearSecret corev1.Secret\n\t\tg.Expect(k8sClient.Get(context.TODO(), types.NamespacedName{Name: \"sops-year\", Namespace: id}, &yearSecret)).To(Succeed())\n\t\tg.Expect(string(yearSecret.Data[\"year\"])).To(Equal(\"2017\"))\n\n\t\tvar unencryptedSecret corev1.Secret\n",
                      "markdown": "`\t\tg.Expect(string(daySecret.Data[\"secret\"])).To(Equal(\"day=Tuesday\\n\"))\n\n\t\tvar yearSecret corev1.Secret\n\t\tg.Expect(k8sClient.Get(context.TODO(), types.NamespacedName{Name: \"sops-year\", Namespace: id}, &yearSecret)).To(Succeed())\n\t\tg.Expect(string(yearSecret.Data[\"year\"])).To(Equal(\"2017\"))\n\n\t\tvar unencryptedSecret corev1.Secret\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_decryptor_test.go"
                },
                "region": {
                  "startLine": 184,
                  "startColumn": 20,
                  "endLine": 184,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\tg.Expect(ageSecret.Data[\"secret\"]).To(Equal([]byte(`my-sops-age-secret`)))\n\n\t\tvar daySecret corev1.Secret\n\t\tg.Expect(k8sClient.Get(context.TODO(), types.NamespacedName{Name: \"sops-day\", Namespace: id}, &daySecret)).To(Succeed())\n\t\tg.Expect(string(daySecret.Data[\"secret\"])).To(Equal(\"day=Tuesday\\n\"))\n\n\t\tvar yearSecret corev1.Secret\n",
                    "rendered": {
                      "text": "\t\tg.Expect(ageSecret.Data[\"secret\"]).To(Equal([]byte(`my-sops-age-secret`)))\n\n\t\tvar daySecret corev1.Secret\n\t\tg.Expect(k8sClient.Get(context.TODO(), types.NamespacedName{Name: \"sops-day\", Namespace: id}, &daySecret)).To(Succeed())\n\t\tg.Expect(string(daySecret.Data[\"secret\"])).To(Equal(\"day=Tuesday\\n\"))\n\n\t\tvar yearSecret corev1.Secret\n",
                      "markdown": "`\t\tg.Expect(ageSecret.Data[\"secret\"]).To(Equal([]byte(`my-sops-age-secret`)))\n\n\t\tvar daySecret corev1.Secret\n\t\tg.Expect(k8sClient.Get(context.TODO(), types.NamespacedName{Name: \"sops-day\", Namespace: id}, &daySecret)).To(Succeed())\n\t\tg.Expect(string(daySecret.Data[\"secret\"])).To(Equal(\"day=Tuesday\\n\"))\n\n\t\tvar yearSecret corev1.Secret\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_decryptor_test.go"
                },
                "region": {
                  "startLine": 180,
                  "startColumn": 20,
                  "endLine": 180,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\tg.Expect(pgpSecret.Data[\"secret\"]).To(Equal([]byte(`my-sops-pgp-secret`)))\n\n\t\tvar ageSecret corev1.Secret\n\t\tg.Expect(k8sClient.Get(context.TODO(), types.NamespacedName{Name: \"sops-age\", Namespace: id}, &ageSecret)).To(Succeed())\n\t\tg.Expect(ageSecret.Data[\"secret\"]).To(Equal([]byte(`my-sops-age-secret`)))\n\n\t\tvar daySecret corev1.Secret\n",
                    "rendered": {
                      "text": "\t\tg.Expect(pgpSecret.Data[\"secret\"]).To(Equal([]byte(`my-sops-pgp-secret`)))\n\n\t\tvar ageSecret corev1.Secret\n\t\tg.Expect(k8sClient.Get(context.TODO(), types.NamespacedName{Name: \"sops-age\", Namespace: id}, &ageSecret)).To(Succeed())\n\t\tg.Expect(ageSecret.Data[\"secret\"]).To(Equal([]byte(`my-sops-age-secret`)))\n\n\t\tvar daySecret corev1.Secret\n",
                      "markdown": "`\t\tg.Expect(pgpSecret.Data[\"secret\"]).To(Equal([]byte(`my-sops-pgp-secret`)))\n\n\t\tvar ageSecret corev1.Secret\n\t\tg.Expect(k8sClient.Get(context.TODO(), types.NamespacedName{Name: \"sops-age\", Namespace: id}, &ageSecret)).To(Succeed())\n\t\tg.Expect(ageSecret.Data[\"secret\"]).To(Equal([]byte(`my-sops-age-secret`)))\n\n\t\tvar daySecret corev1.Secret\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_decryptor_test.go"
                },
                "region": {
                  "startLine": 176,
                  "startColumn": 20,
                  "endLine": 176,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\tg := NewWithT(t)\n\n\t\tvar pgpSecret corev1.Secret\n\t\tg.Expect(k8sClient.Get(context.TODO(), types.NamespacedName{Name: \"sops-pgp\", Namespace: id}, &pgpSecret)).To(Succeed())\n\t\tg.Expect(pgpSecret.Data[\"secret\"]).To(Equal([]byte(`my-sops-pgp-secret`)))\n\n\t\tvar ageSecret corev1.Secret\n",
                    "rendered": {
                      "text": "\t\tg := NewWithT(t)\n\n\t\tvar pgpSecret corev1.Secret\n\t\tg.Expect(k8sClient.Get(context.TODO(), types.NamespacedName{Name: \"sops-pgp\", Namespace: id}, &pgpSecret)).To(Succeed())\n\t\tg.Expect(pgpSecret.Data[\"secret\"]).To(Equal([]byte(`my-sops-pgp-secret`)))\n\n\t\tvar ageSecret corev1.Secret\n",
                      "markdown": "`\t\tg := NewWithT(t)\n\n\t\tvar pgpSecret corev1.Secret\n\t\tg.Expect(k8sClient.Get(context.TODO(), types.NamespacedName{Name: \"sops-pgp\", Namespace: id}, &pgpSecret)).To(Succeed())\n\t\tg.Expect(pgpSecret.Data[\"secret\"]).To(Equal([]byte(`my-sops-pgp-secret`)))\n\n\t\tvar ageSecret corev1.Secret\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_decryptor_test.go"
                },
                "region": {
                  "startLine": 168,
                  "startColumn": 15,
                  "endLine": 168,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\n\tg.Eventually(func() bool {\n\t\tvar obj kustomizev1.Kustomization\n\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(overlayKs), &obj)\n\t\treturn obj.Status.LastAppliedRevision == \"main/\"+overlayChecksum\n\t}, timeout, time.Second).Should(BeTrue())\n\n",
                    "rendered": {
                      "text": "\n\tg.Eventually(func() bool {\n\t\tvar obj kustomizev1.Kustomization\n\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(overlayKs), &obj)\n\t\treturn obj.Status.LastAppliedRevision == \"main/\"+overlayChecksum\n\t}, timeout, time.Second).Should(BeTrue())\n\n",
                      "markdown": "`\n\tg.Eventually(func() bool {\n\t\tvar obj kustomizev1.Kustomization\n\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(overlayKs), &obj)\n\t\treturn obj.Status.LastAppliedRevision == \"main/\"+overlayChecksum\n\t}, timeout, time.Second).Should(BeTrue())\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_decryptor_test.go"
                },
                "region": {
                  "startLine": 152,
                  "startColumn": 15,
                  "endLine": 152,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\n\tg.Eventually(func() bool {\n\t\tvar obj kustomizev1.Kustomization\n\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), &obj)\n\t\treturn obj.Status.LastAppliedRevision == \"main/\"+artifactChecksum\n\t}, timeout, time.Second).Should(BeTrue())\n\n",
                    "rendered": {
                      "text": "\n\tg.Eventually(func() bool {\n\t\tvar obj kustomizev1.Kustomization\n\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), &obj)\n\t\treturn obj.Status.LastAppliedRevision == \"main/\"+artifactChecksum\n\t}, timeout, time.Second).Should(BeTrue())\n\n",
                      "markdown": "`\n\tg.Eventually(func() bool {\n\t\tvar obj kustomizev1.Kustomization\n\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), &obj)\n\t\treturn obj.Status.LastAppliedRevision == \"main/\"+artifactChecksum\n\t}, timeout, time.Second).Should(BeTrue())\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_decryptor_test.go"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 15,
                  "endLine": 142,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t\t\tDecryption: &kustomizev1.Decryption{\n\t\t\t\tProvider: \"sops\",\n\t\t\t\tSecretRef: &meta.LocalObjectReference{\n\t\t\t\t\tName: sopsSecretKey.Name,\n\t\t\t\t},\n\t\t\t},\n\t\t\tTargetNamespace: id,\n",
                    "rendered": {
                      "text": "\t\t\tDecryption: &kustomizev1.Decryption{\n\t\t\t\tProvider: \"sops\",\n\t\t\t\tSecretRef: &meta.LocalObjectReference{\n\t\t\t\t\tName: sopsSecretKey.Name,\n\t\t\t\t},\n\t\t\t},\n\t\t\tTargetNamespace: id,\n",
                      "markdown": "`\t\t\tDecryption: &kustomizev1.Decryption{\n\t\t\t\tProvider: \"sops\",\n\t\t\t\tSecretRef: &meta.LocalObjectReference{\n\t\t\t\t\tName: sopsSecretKey.Name,\n\t\t\t\t},\n\t\t\t},\n\t\t\tTargetNamespace: id,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_decryptor_test.go"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 20,
                  "endLine": 130,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\t\tInterval: metav1.Duration{Duration: 2 * time.Minute},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t\tInterval: metav1.Duration{Duration: 2 * time.Minute},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n",
                      "markdown": "`\t\t\tInterval: metav1.Duration{Duration: 2 * time.Minute},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_decryptor_test.go"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 18,
                  "endLine": 106,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\tsopsSecret := &corev1.Secret{\n\t\tObjectMeta: metav1.ObjectMeta{\n\t\t\tName:      sopsSecretKey.Name,\n\t\t\tNamespace: sopsSecretKey.Namespace,\n\t\t},\n\t\tStringData: map[string]string{\n\t\t\t\"pgp.asc\":          string(pgpKey),\n",
                    "rendered": {
                      "text": "\tsopsSecret := &corev1.Secret{\n\t\tObjectMeta: metav1.ObjectMeta{\n\t\t\tName:      sopsSecretKey.Name,\n\t\t\tNamespace: sopsSecretKey.Namespace,\n\t\t},\n\t\tStringData: map[string]string{\n\t\t\t\"pgp.asc\":          string(pgpKey),\n",
                      "markdown": "`\tsopsSecret := &corev1.Secret{\n\t\tObjectMeta: metav1.ObjectMeta{\n\t\t\tName:      sopsSecretKey.Name,\n\t\t\tNamespace: sopsSecretKey.Namespace,\n\t\t},\n\t\tStringData: map[string]string{\n\t\t\t\"pgp.asc\":          string(pgpKey),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_decryptor_test.go"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 18,
                  "endLine": 105,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n\tsopsSecret := &corev1.Secret{\n\t\tObjectMeta: metav1.ObjectMeta{\n\t\t\tName:      sopsSecretKey.Name,\n\t\t\tNamespace: sopsSecretKey.Namespace,\n\t\t},\n\t\tStringData: map[string]string{\n",
                    "rendered": {
                      "text": "\n\tsopsSecret := &corev1.Secret{\n\t\tObjectMeta: metav1.ObjectMeta{\n\t\t\tName:      sopsSecretKey.Name,\n\t\t\tNamespace: sopsSecretKey.Namespace,\n\t\t},\n\t\tStringData: map[string]string{\n",
                      "markdown": "`\n\tsopsSecret := &corev1.Secret{\n\t\tObjectMeta: metav1.ObjectMeta{\n\t\t\tName:      sopsSecretKey.Name,\n\t\t\tNamespace: sopsSecretKey.Namespace,\n\t\t},\n\t\tStringData: map[string]string{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_decryptor_test.go"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 5,
                  "endLine": 98,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\tageKey, err := os.ReadFile(\"testdata/sops/age.txt\")\n\tg.Expect(err).ToNot(HaveOccurred())\n\n\tsopsSecretKey := types.NamespacedName{\n\t\tName:      \"sops-\" + randStringRunes(5),\n\t\tNamespace: id,\n\t}\n",
                    "rendered": {
                      "text": "\tageKey, err := os.ReadFile(\"testdata/sops/age.txt\")\n\tg.Expect(err).ToNot(HaveOccurred())\n\n\tsopsSecretKey := types.NamespacedName{\n\t\tName:      \"sops-\" + randStringRunes(5),\n\t\tNamespace: id,\n\t}\n",
                      "markdown": "`\tageKey, err := os.ReadFile(\"testdata/sops/age.txt\")\n\tg.Expect(err).ToNot(HaveOccurred())\n\n\tsopsSecretKey := types.NamespacedName{\n\t\tName:      \"sops-\" + randStringRunes(5),\n\t\tNamespace: id,\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_decryptor_test.go"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 1,
                  "endLine": 57,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\n\t// defer the testdata vault secret decryption, to leave a clean testdata vault secret\n\tdefer func() {\n\t\tcmd := exec.Command(\"sops\", \"--hc-vault-transit\", cli.Address()+\"/v1/sops/keys/firstkey\", \"--decrypt\", \"--encrypted-regex\", \"^(data|stringData)$\", \"--in-place\", \"./testdata/sops/secret.vault.yaml\")\n\t\terr = cmd.Run()\n\t}()\n\n",
                    "rendered": {
                      "text": "\n\t// defer the testdata vault secret decryption, to leave a clean testdata vault secret\n\tdefer func() {\n\t\tcmd := exec.Command(\"sops\", \"--hc-vault-transit\", cli.Address()+\"/v1/sops/keys/firstkey\", \"--decrypt\", \"--encrypted-regex\", \"^(data|stringData)$\", \"--in-place\", \"./testdata/sops/secret.vault.yaml\")\n\t\terr = cmd.Run()\n\t}()\n\n",
                      "markdown": "`\n\t// defer the testdata vault secret decryption, to leave a clean testdata vault secret\n\tdefer func() {\n\t\tcmd := exec.Command(\"sops\", \"--hc-vault-transit\", cli.Address()+\"/v1/sops/keys/firstkey\", \"--decrypt\", \"--encrypted-regex\", \"^(data|stringData)$\", \"--in-place\", \"./testdata/sops/secret.vault.yaml\")\n\t\terr = cmd.Run()\n\t}()\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_decryptor_test.go"
                },
                "region": {
                  "startLine": 51,
                  "endLine": 51,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tg.Expect(err).NotTo(HaveOccurred(), \"failed to write key\")\n\n\t// encrypt the testdata vault secret\n\tcmd := exec.Command(\"sops\", \"--hc-vault-transit\", cli.Address()+\"/v1/sops/keys/firstkey\", \"--encrypt\", \"--encrypted-regex\", \"^(data|stringData)$\", \"--in-place\", \"./testdata/sops/secret.vault.yaml\")\n\terr = cmd.Run()\n\tg.Expect(err).NotTo(HaveOccurred(), \"failed to encrypt file\")\n\n",
                    "rendered": {
                      "text": "\tg.Expect(err).NotTo(HaveOccurred(), \"failed to write key\")\n\n\t// encrypt the testdata vault secret\n\tcmd := exec.Command(\"sops\", \"--hc-vault-transit\", cli.Address()+\"/v1/sops/keys/firstkey\", \"--encrypt\", \"--encrypted-regex\", \"^(data|stringData)$\", \"--in-place\", \"./testdata/sops/secret.vault.yaml\")\n\terr = cmd.Run()\n\tg.Expect(err).NotTo(HaveOccurred(), \"failed to encrypt file\")\n\n",
                      "markdown": "`\tg.Expect(err).NotTo(HaveOccurred(), \"failed to write key\")\n\n\t// encrypt the testdata vault secret\n\tcmd := exec.Command(\"sops\", \"--hc-vault-transit\", cli.Address()+\"/v1/sops/keys/firstkey\", \"--encrypt\", \"--encrypted-regex\", \"^(data|stringData)$\", \"--in-place\", \"./testdata/sops/secret.vault.yaml\")\n\terr = cmd.Run()\n\tg.Expect(err).NotTo(HaveOccurred(), \"failed to encrypt file\")\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/main.go"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 89,
                  "endLine": 105,
                  "endColumn": 93,
                  "snippet": {
                    "text": "nds to.\")\n\tflag.IntVar(&concurrent, \"concurrent\", 4, \"The number of concurrent kustomize reconciles.\")\n\tflag.IntVar(&concurrentSSA, \"concurrent-ssa\", 4, \"The number of concurrent server-side apply operations.\")\n\tflag.DurationVar(&requeueDependency, \"requeue-dependency\", 30*time.Second, \"The interval at which failing dependencies are reevaluated.\")\n\tflag.BoolVar(&noRemoteBases, \"no-remote-bases\", false,\n\t\t\"Disallow remote bases usage in Kustomize overlays. When this flag is enabled, all resources must refer to local files included in the source artifact.\")\n\tflag.IntVar(&httpRetry, \"http-retry\", 9, ",
                    "rendered": {
                      "text": "nds to.\")\n\tflag.IntVar(&concurrent, \"concurrent\", 4, \"The number of concurrent kustomize reconciles.\")\n\tflag.IntVar(&concurrentSSA, \"concurrent-ssa\", 4, \"The number of concurrent server-side apply operations.\")\n\tflag.DurationVar(&requeueDependency, \"requeue-dependency\", 30*time.Second, \"The interval at which failing dependencies are reevaluated.\")\n\tflag.BoolVar(&noRemoteBases, \"no-remote-bases\", false,\n\t\t\"Disallow remote bases usage in Kustomize overlays. When this flag is enabled, all resources must refer to local files included in the source artifact.\")\n\tflag.IntVar(&httpRetry, \"http-retry\", 9, ",
                      "markdown": "`nds to.\")\n\tflag.IntVar(&concurrent, \"concurrent\", 4, \"The number of concurrent kustomize reconciles.\")\n\tflag.IntVar(&concurrentSSA, \"concurrent-ssa\", 4, \"The number of concurrent server-side apply operations.\")\n\tflag.DurationVar(&requeueDependency, \"requeue-dependency\", 30*time.Second, \"The interval at which failing dependencies are reevaluated.\")\n\tflag.BoolVar(&noRemoteBases, \"no-remote-bases\", false,\n\t\t\"Disallow remote bases usage in Kustomize overlays. When this flag is enabled, all resources must refer to local files included in the source artifact.\")\n\tflag.IntVar(&httpRetry, \"http-retry\", 9, `"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/main.go"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 42,
                  "endLine": 145,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\n\twatchSelector, err := runtimeCtrl.GetWatchSelector(watchOptions)\n\tif err != nil {\n\t\tsetupLog.Error(err, \"unable to configure watch label selector for manager\")\n\t\tos.Exit(1)\n\t}\n\n",
                    "rendered": {
                      "text": "\n\twatchSelector, err := runtimeCtrl.GetWatchSelector(watchOptions)\n\tif err != nil {\n\t\tsetupLog.Error(err, \"unable to configure watch label selector for manager\")\n\t\tos.Exit(1)\n\t}\n\n",
                      "markdown": "`\n\twatchSelector, err := runtimeCtrl.GetWatchSelector(watchOptions)\n\tif err != nil {\n\t\tsetupLog.Error(err, \"unable to configure watch label selector for manager\")\n\t\tos.Exit(1)\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/main.go"
                },
                "region": {
                  "startLine": 109,
                  "startColumn": 79,
                  "endLine": 109,
                  "endColumn": 88,
                  "snippet": {
                    "text": " When this flag is enabled, all resources must refer to local files included in the source artifact.\")\n\tflag.IntVar(&httpRetry, \"http-retry\", 9, \"The maximum number of retries when failing to fetch artifacts over HTTP.\")\n\tflag.StringVar(&defaultServiceAccount, \"default-service-account\", \"\", \"Default service account used for impersonation.\")\n\tflag.StringArrayVar(&disallowedFieldManagers, \"override-manager\", []string{}, \"Field manager disallowed to perform changes on managed resources.\")\n\n\tclientOptions.BindFlags(flag.CommandLine)\n\tlogOptions.BindFlags(flag.CommandLine)\n\tleaderElectionOptions.BindFlags(f",
                    "rendered": {
                      "text": " When this flag is enabled, all resources must refer to local files included in the source artifact.\")\n\tflag.IntVar(&httpRetry, \"http-retry\", 9, \"The maximum number of retries when failing to fetch artifacts over HTTP.\")\n\tflag.StringVar(&defaultServiceAccount, \"default-service-account\", \"\", \"Default service account used for impersonation.\")\n\tflag.StringArrayVar(&disallowedFieldManagers, \"override-manager\", []string{}, \"Field manager disallowed to perform changes on managed resources.\")\n\n\tclientOptions.BindFlags(flag.CommandLine)\n\tlogOptions.BindFlags(flag.CommandLine)\n\tleaderElectionOptions.BindFlags(f",
                      "markdown": "` When this flag is enabled, all resources must refer to local files included in the source artifact.\")\n\tflag.IntVar(&httpRetry, \"http-retry\", 9, \"The maximum number of retries when failing to fetch artifacts over HTTP.\")\n\tflag.StringVar(&defaultServiceAccount, \"default-service-account\", \"\", \"Default service account used for impersonation.\")\n\tflag.StringArrayVar(&disallowedFieldManagers, \"override-manager\", []string{}, \"Field manager disallowed to perform changes on managed resources.\")\n\n\tclientOptions.BindFlags(flag.CommandLine)\n\tlogOptions.BindFlags(flag.CommandLine)\n\tleaderElectionOptions.BindFlags(f`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/DEVELOPMENT.md"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 30,
                  "endLine": 3,
                  "endColumn": 34,
                  "snippet": {
                    "text": "# Development\n\n> **Note:** Please take a look at <https://fluxcd.io/contributing/flux/>\n> to find out about how to contribute to Flux and how to interact with the\n> Flux Development team.\n\n",
                    "rendered": {
                      "text": "# Development\n\n> **Note:** Please take a look at <https://fluxcd.io/contributing/flux/>\n> to find out about how to contribute to Flux and how to interact with the\n> Flux Development team.\n\n",
                      "markdown": "`# Development\n\n> **Note:** Please take a look at <https://fluxcd.io/contributing/flux/>\n> to find out about how to contribute to Flux and how to interact with the\n> Flux Development team.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/DEVELOPMENT.md"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 243,
                  "endLine": 35,
                  "endColumn": 249,
                  "snippet": {
                    "text": "make install\n```\n\nNote that `kustomize-controller` depends on [source-controller](https://github.com/fluxcd/source-controller) to acquire its artifacts. If `source-controller` is not running on your test cluster, you need to tell `kustomize-controller` where to find it. \n\nPort forward to source-controller artifacts server:\n\n",
                    "rendered": {
                      "text": "make install\n```\n\nNote that `kustomize-controller` depends on [source-controller](https://github.com/fluxcd/source-controller) to acquire its artifacts. If `source-controller` is not running on your test cluster, you need to tell `kustomize-controller` where to find it. \n\nPort forward to source-controller artifacts server:\n\n",
                      "markdown": "`make install\n```\n\nNote that `kustomize-controller` depends on [source-controller](https://github.com/fluxcd/source-controller) to acquire its artifacts. If `source-controller` is not running on your test cluster, you need to tell `kustomize-controller` where to find it. \n\nPort forward to source-controller artifacts server:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/DEVELOPMENT.md"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 4,
                  "endLine": 4,
                  "endColumn": 10,
                  "snippet": {
                    "text": "# Development\n\n> **Note:** Please take a look at <https://fluxcd.io/contributing/flux/>\n> to find out about how to contribute to Flux and how to interact with the\n> Flux Development team.\n\n## Installing required dependencies\n",
                    "rendered": {
                      "text": "# Development\n\n> **Note:** Please take a look at <https://fluxcd.io/contributing/flux/>\n> to find out about how to contribute to Flux and how to interact with the\n> Flux Development team.\n\n## Installing required dependencies\n",
                      "markdown": "`# Development\n\n> **Note:** Please take a look at <https://fluxcd.io/contributing/flux/>\n> to find out about how to contribute to Flux and how to interact with the\n> Flux Development team.\n\n## Installing required dependencies\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/api/v1/kustomize.md"
                },
                "region": {
                  "startLine": 1026,
                  "startColumn": 20,
                  "endLine": 1026,
                  "endColumn": 26,
                  "snippet": {
                    "text": "<p>Substitute holds a map of key/value pairs.\nThe variables defined in your YAML manifests that match any of the keys\ndefined in the map will be substituted with the set value.\nIncludes support for bash string replacement functions\ne.g. ${var:=default}, ${var:position} and ${var/substring/replacement}.</p>\n</td>\n</tr>\n",
                    "rendered": {
                      "text": "<p>Substitute holds a map of key/value pairs.\nThe variables defined in your YAML manifests that match any of the keys\ndefined in the map will be substituted with the set value.\nIncludes support for bash string replacement functions\ne.g. ${var:=default}, ${var:position} and ${var/substring/replacement}.</p>\n</td>\n</tr>\n",
                      "markdown": "`<p>Substitute holds a map of key/value pairs.\nThe variables defined in your YAML manifests that match any of the keys\ndefined in the map will be substituted with the set value.\nIncludes support for bash string replacement functions\ne.g. ${var:=default}, ${var:position} and ${var/substring/replacement}.</p>\n</td>\n</tr>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/api/v1/kustomize.md"
                },
                "region": {
                  "startLine": 670,
                  "startColumn": 62,
                  "endLine": 670,
                  "endColumn": 66,
                  "snippet": {
                    "text": "<em>(Optional)</em>\n<p>The KubeConfig for reconciling the Kustomization on a remote cluster.\nWhen used in combination with KustomizationSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when KustomizationSpec.ServiceAccountName\n",
                    "rendered": {
                      "text": "<em>(Optional)</em>\n<p>The KubeConfig for reconciling the Kustomization on a remote cluster.\nWhen used in combination with KustomizationSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when KustomizationSpec.ServiceAccountName\n",
                      "markdown": "`<em>(Optional)</em>\n<p>The KubeConfig for reconciling the Kustomization on a remote cluster.\nWhen used in combination with KustomizationSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when KustomizationSpec.ServiceAccountName\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/api/v1/kustomize.md"
                },
                "region": {
                  "startLine": 652,
                  "startColumn": 15,
                  "endLine": 652,
                  "endColumn": 19,
                  "snippet": {
                    "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>The interval at which to retry a previously failed reconciliation.\nWhen not specified, the controller uses the KustomizationSpec.Interval\nvalue to retry failures.</p>\n</td>\n",
                    "rendered": {
                      "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>The interval at which to retry a previously failed reconciliation.\nWhen not specified, the controller uses the KustomizationSpec.Interval\nvalue to retry failures.</p>\n</td>\n",
                      "markdown": "`</td>\n<td>\n<em>(Optional)</em>\n<p>The interval at which to retry a previously failed reconciliation.\nWhen not specified, the controller uses the KustomizationSpec.Interval\nvalue to retry failures.</p>\n</td>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/api/v1/kustomize.md"
                },
                "region": {
                  "startLine": 636,
                  "startColumn": 15,
                  "endLine": 636,
                  "endColumn": 19,
                  "snippet": {
                    "text": "</em>\n</td>\n<td>\n<p>The interval at which to reconcile the Kustomization.\nThis interval is approximate and may be subject to jitter to ensure\nefficient use of resources.</p>\n</td>\n",
                    "rendered": {
                      "text": "</em>\n</td>\n<td>\n<p>The interval at which to reconcile the Kustomization.\nThis interval is approximate and may be subject to jitter to ensure\nefficient use of resources.</p>\n</td>\n",
                      "markdown": "`</em>\n</td>\n<td>\n<p>The interval at which to reconcile the Kustomization.\nThis interval is approximate and may be subject to jitter to ensure\nefficient use of resources.</p>\n</td>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/api/v1/kustomize.md"
                },
                "region": {
                  "startLine": 454,
                  "startColumn": 32,
                  "endLine": 454,
                  "endColumn": 36,
                  "snippet": {
                    "text": "<a href=\"#kustomize.toolkit.fluxcd.io/v1.KustomizationSpec\">KustomizationSpec</a>)\n</p>\n<p>CrossNamespaceSourceReference contains enough information to let you locate the\ntyped Kubernetes resource object at cluster level.</p>\n<div class=\"md-typeset__scrollwrap\">\n<div class=\"md-typeset__table\">\n<table>\n",
                    "rendered": {
                      "text": "<a href=\"#kustomize.toolkit.fluxcd.io/v1.KustomizationSpec\">KustomizationSpec</a>)\n</p>\n<p>CrossNamespaceSourceReference contains enough information to let you locate the\ntyped Kubernetes resource object at cluster level.</p>\n<div class=\"md-typeset__scrollwrap\">\n<div class=\"md-typeset__table\">\n<table>\n",
                      "markdown": "`<a href=\"#kustomize.toolkit.fluxcd.io/v1.KustomizationSpec\">KustomizationSpec</a>)\n</p>\n<p>CrossNamespaceSourceReference contains enough information to let you locate the\ntyped Kubernetes resource object at cluster level.</p>\n<div class=\"md-typeset__scrollwrap\">\n<div class=\"md-typeset__table\">\n<table>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/api/v1/kustomize.md"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 62,
                  "endLine": 162,
                  "endColumn": 66,
                  "snippet": {
                    "text": "<em>(Optional)</em>\n<p>The KubeConfig for reconciling the Kustomization on a remote cluster.\nWhen used in combination with KustomizationSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when KustomizationSpec.ServiceAccountName\n",
                    "rendered": {
                      "text": "<em>(Optional)</em>\n<p>The KubeConfig for reconciling the Kustomization on a remote cluster.\nWhen used in combination with KustomizationSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when KustomizationSpec.ServiceAccountName\n",
                      "markdown": "`<em>(Optional)</em>\n<p>The KubeConfig for reconciling the Kustomization on a remote cluster.\nWhen used in combination with KustomizationSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when KustomizationSpec.ServiceAccountName\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/api/v1/kustomize.md"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 15,
                  "endLine": 144,
                  "endColumn": 19,
                  "snippet": {
                    "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>The interval at which to retry a previously failed reconciliation.\nWhen not specified, the controller uses the KustomizationSpec.Interval\nvalue to retry failures.</p>\n</td>\n",
                    "rendered": {
                      "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>The interval at which to retry a previously failed reconciliation.\nWhen not specified, the controller uses the KustomizationSpec.Interval\nvalue to retry failures.</p>\n</td>\n",
                      "markdown": "`</td>\n<td>\n<em>(Optional)</em>\n<p>The interval at which to retry a previously failed reconciliation.\nWhen not specified, the controller uses the KustomizationSpec.Interval\nvalue to retry failures.</p>\n</td>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/api/v1/kustomize.md"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 15,
                  "endLine": 128,
                  "endColumn": 19,
                  "snippet": {
                    "text": "</em>\n</td>\n<td>\n<p>The interval at which to reconcile the Kustomization.\nThis interval is approximate and may be subject to jitter to ensure\nefficient use of resources.</p>\n</td>\n",
                    "rendered": {
                      "text": "</em>\n</td>\n<td>\n<p>The interval at which to reconcile the Kustomization.\nThis interval is approximate and may be subject to jitter to ensure\nefficient use of resources.</p>\n</td>\n",
                      "markdown": "`</em>\n</td>\n<td>\n<p>The interval at which to reconcile the Kustomization.\nThis interval is approximate and may be subject to jitter to ensure\nefficient use of resources.</p>\n</td>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/api/v1/kustomize.md"
                },
                "region": {
                  "startLine": 1026,
                  "startColumn": 20,
                  "endLine": 1026,
                  "endColumn": 26,
                  "snippet": {
                    "text": "<p>Substitute holds a map of key/value pairs.\nThe variables defined in your YAML manifests that match any of the keys\ndefined in the map will be substituted with the set value.\nIncludes support for bash string replacement functions\ne.g. ${var:=default}, ${var:position} and ${var/substring/replacement}.</p>\n</td>\n</tr>\n",
                    "rendered": {
                      "text": "<p>Substitute holds a map of key/value pairs.\nThe variables defined in your YAML manifests that match any of the keys\ndefined in the map will be substituted with the set value.\nIncludes support for bash string replacement functions\ne.g. ${var:=default}, ${var:position} and ${var/substring/replacement}.</p>\n</td>\n</tr>\n",
                      "markdown": "`<p>Substitute holds a map of key/value pairs.\nThe variables defined in your YAML manifests that match any of the keys\ndefined in the map will be substituted with the set value.\nIncludes support for bash string replacement functions\ne.g. ${var:=default}, ${var:position} and ${var/substring/replacement}.</p>\n</td>\n</tr>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/api/v1/kustomize.md"
                },
                "region": {
                  "startLine": 795,
                  "startColumn": 29,
                  "endLine": 795,
                  "endColumn": 38,
                  "snippet": {
                    "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>The name of the Kubernetes service account to impersonate\nwhen reconciling this Kustomization.</p>\n</td>\n</tr>\n",
                    "rendered": {
                      "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>The name of the Kubernetes service account to impersonate\nwhen reconciling this Kustomization.</p>\n</td>\n</tr>\n",
                      "markdown": "`</td>\n<td>\n<em>(Optional)</em>\n<p>The name of the Kubernetes service account to impersonate\nwhen reconciling this Kustomization.</p>\n</td>\n</tr>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/api/v1/kustomize.md"
                },
                "region": {
                  "startLine": 670,
                  "startColumn": 46,
                  "endLine": 670,
                  "endColumn": 55,
                  "snippet": {
                    "text": "<em>(Optional)</em>\n<p>The KubeConfig for reconciling the Kustomization on a remote cluster.\nWhen used in combination with KustomizationSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when KustomizationSpec.ServiceAccountName\n",
                    "rendered": {
                      "text": "<em>(Optional)</em>\n<p>The KubeConfig for reconciling the Kustomization on a remote cluster.\nWhen used in combination with KustomizationSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when KustomizationSpec.ServiceAccountName\n",
                      "markdown": "`<em>(Optional)</em>\n<p>The KubeConfig for reconciling the Kustomization on a remote cluster.\nWhen used in combination with KustomizationSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when KustomizationSpec.ServiceAccountName\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/api/v1/kustomize.md"
                },
                "region": {
                  "startLine": 287,
                  "startColumn": 29,
                  "endLine": 287,
                  "endColumn": 38,
                  "snippet": {
                    "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>The name of the Kubernetes service account to impersonate\nwhen reconciling this Kustomization.</p>\n</td>\n</tr>\n",
                    "rendered": {
                      "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>The name of the Kubernetes service account to impersonate\nwhen reconciling this Kustomization.</p>\n</td>\n</tr>\n",
                      "markdown": "`</td>\n<td>\n<em>(Optional)</em>\n<p>The name of the Kubernetes service account to impersonate\nwhen reconciling this Kustomization.</p>\n</td>\n</tr>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/api/v1/kustomize.md"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 46,
                  "endLine": 162,
                  "endColumn": 55,
                  "snippet": {
                    "text": "<em>(Optional)</em>\n<p>The KubeConfig for reconciling the Kustomization on a remote cluster.\nWhen used in combination with KustomizationSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when KustomizationSpec.ServiceAccountName\n",
                    "rendered": {
                      "text": "<em>(Optional)</em>\n<p>The KubeConfig for reconciling the Kustomization on a remote cluster.\nWhen used in combination with KustomizationSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when KustomizationSpec.ServiceAccountName\n",
                      "markdown": "`<em>(Optional)</em>\n<p>The KubeConfig for reconciling the Kustomization on a remote cluster.\nWhen used in combination with KustomizationSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when KustomizationSpec.ServiceAccountName\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/internal/release.md"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 2,
                  "endLine": 8,
                  "endColumn": 10,
                  "snippet": {
                    "text": "1. Create a `api/<next semver>` tag and push it to remote.\n1. Create a new branch from `main` i.e. `release-<next semver>`. This\n   will function as your release preparation branch.\n1. Update the `github.com/fluxcd/kustomize-controller/api` version in `go.mod`\n1. Add an entry to the `CHANGELOG.md` for the new release and change the\n   `newTag` value in ` config/manager/kustomization.yaml` to that of the\n   semver release you are going to make. Commit and push your changes.\n",
                    "rendered": {
                      "text": "1. Create a `api/<next semver>` tag and push it to remote.\n1. Create a new branch from `main` i.e. `release-<next semver>`. This\n   will function as your release preparation branch.\n1. Update the `github.com/fluxcd/kustomize-controller/api` version in `go.mod`\n1. Add an entry to the `CHANGELOG.md` for the new release and change the\n   `newTag` value in ` config/manager/kustomization.yaml` to that of the\n   semver release you are going to make. Commit and push your changes.\n",
                      "markdown": "`1. Create a `api/<next semver>` tag and push it to remote.\n1. Create a new branch from `main` i.e. `release-<next semver>`. This\n   will function as your release preparation branch.\n1. Update the `github.com/fluxcd/kustomize-controller/api` version in `go.mod`\n1. Add an entry to the `CHANGELOG.md` for the new release and change the\n   `newTag` value in ` config/manager/kustomization.yaml` to that of the\n   semver release you are going to make. Commit and push your changes.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1alpha1/kustomizations.md"
                },
                "region": {
                  "startLine": 408,
                  "startColumn": 54,
                  "endLine": 408,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\nBy default, a kustomization apply runs under the cluster admin account and can create, modify, delete\ncluster level objects (namespaces, CRDs, etc) and namespeced objects (deployments, ingresses, etc).\nFor certain kustomizations a cluster admin may wish to control what types of Kubernetes objects can\nbe reconciled and under which namespaces.\nTo restrict a kustomization, one can assign a service account under which the reconciliation is performed.\n\n",
                    "rendered": {
                      "text": "\nBy default, a kustomization apply runs under the cluster admin account and can create, modify, delete\ncluster level objects (namespaces, CRDs, etc) and namespeced objects (deployments, ingresses, etc).\nFor certain kustomizations a cluster admin may wish to control what types of Kubernetes objects can\nbe reconciled and under which namespaces.\nTo restrict a kustomization, one can assign a service account under which the reconciliation is performed.\n\n",
                      "markdown": "`\nBy default, a kustomization apply runs under the cluster admin account and can create, modify, delete\ncluster level objects (namespaces, CRDs, etc) and namespeced objects (deployments, ingresses, etc).\nFor certain kustomizations a cluster admin may wish to control what types of Kubernetes objects can\nbe reconciled and under which namespaces.\nTo restrict a kustomization, one can assign a service account under which the reconciliation is performed.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1alpha1/kustomizations.md"
                },
                "region": {
                  "startLine": 404,
                  "startColumn": 20,
                  "endLine": 405,
                  "snippet": {
                    "text": "> **Note** that circular dependencies between kustomizations must be avoided, otherwise the\n> interdependent kustomizations will never be applied on the cluster.\n\n## Role-based access control\n\nBy default, a kustomization apply runs under the cluster admin account and can create, modify, delete\ncluster level objects (namespaces, CRDs, etc) and namespeced objects (deployments, ingresses, etc).\nFor certain kustomizations a cluster admin may wish to control what types of Kubernetes objects can\n",
                    "rendered": {
                      "text": "> **Note** that circular dependencies between kustomizations must be avoided, otherwise the\n> interdependent kustomizations will never be applied on the cluster.\n\n## Role-based access control\n\nBy default, a kustomization apply runs under the cluster admin account and can create, modify, delete\ncluster level objects (namespaces, CRDs, etc) and namespeced objects (deployments, ingresses, etc).\nFor certain kustomizations a cluster admin may wish to control what types of Kubernetes objects can\n",
                      "markdown": "`> **Note** that circular dependencies between kustomizations must be avoided, otherwise the\n> interdependent kustomizations will never be applied on the cluster.\n\n## Role-based access control\n\nBy default, a kustomization apply runs under the cluster admin account and can create, modify, delete\ncluster level objects (namespaces, CRDs, etc) and namespeced objects (deployments, ingresses, etc).\nFor certain kustomizations a cluster admin may wish to control what types of Kubernetes objects can\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1alpha1/kustomizations.md"
                },
                "region": {
                  "startLine": 216,
                  "startColumn": 54,
                  "endLine": 216,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\n## Reconciliation\n\nThe kustomization `spec.interval` tells the controller at which interval to fetch the\nKubernetes manifest for the source, build the kustomization and apply it on the cluster.\nThe interval time units are `s`, `m` and `h` e.g. `interval: 5m`, the minimum value should be over 60 seconds.\n\n",
                    "rendered": {
                      "text": "\n## Reconciliation\n\nThe kustomization `spec.interval` tells the controller at which interval to fetch the\nKubernetes manifest for the source, build the kustomization and apply it on the cluster.\nThe interval time units are `s`, `m` and `h` e.g. `interval: 5m`, the minimum value should be over 60 seconds.\n\n",
                      "markdown": "`\n## Reconciliation\n\nThe kustomization `spec.interval` tells the controller at which interval to fetch the\nKubernetes manifest for the source, build the kustomization and apply it on the cluster.\nThe interval time units are `s`, `m` and `h` e.g. `interval: 5m`, the minimum value should be over 60 seconds.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1alpha1/kustomizations.md"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 16,
                  "endLine": 24,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t// +optional\n\tDecryption *Decryption `json:\"decryption,omitempty\"`\n\n\t// The interval at which to apply the kustomization.\n\t// +required\n\tInterval metav1.Duration `json:\"interval\"`\n\n",
                    "rendered": {
                      "text": "\t// +optional\n\tDecryption *Decryption `json:\"decryption,omitempty\"`\n\n\t// The interval at which to apply the kustomization.\n\t// +required\n\tInterval metav1.Duration `json:\"interval\"`\n\n",
                      "markdown": "`\t// +optional\n\tDecryption *Decryption `json:\"decryption,omitempty\"`\n\n\t// The interval at which to apply the kustomization.\n\t// +required\n\tInterval metav1.Duration `json:\"interval\"`\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1alpha1/kustomizations.md"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 16,
                  "endLine": 10,
                  "endColumn": 20,
                  "snippet": {
                    "text": "A **Kustomization** object defines the source of Kubernetes manifests by referencing an object \nmanaged by [source-controller](https://github.com/fluxcd/source-controller),\nthe path to the kustomization file within that source,\nand the interval at which the kustomize build output is applied on the cluster.\n\n```go\ntype KustomizationSpec struct {\n",
                    "rendered": {
                      "text": "A **Kustomization** object defines the source of Kubernetes manifests by referencing an object \nmanaged by [source-controller](https://github.com/fluxcd/source-controller),\nthe path to the kustomization file within that source,\nand the interval at which the kustomize build output is applied on the cluster.\n\n```go\ntype KustomizationSpec struct {\n",
                      "markdown": "`A **Kustomization** object defines the source of Kubernetes manifests by referencing an object \nmanaged by [source-controller](https://github.com/fluxcd/source-controller),\nthe path to the kustomization file within that source,\nand the interval at which the kustomize build output is applied on the cluster.\n\n```go\ntype KustomizationSpec struct {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1alpha1/kustomizations.md"
                },
                "region": {
                  "startLine": 593,
                  "startColumn": 15,
                  "endLine": 593,
                  "endColumn": 24,
                  "snippet": {
                    "text": "  \"ts\": \"2020-09-17T07:27:11.921Z\",\n  \"logger\": \"controllers.Kustomization\",\n  \"kustomization\": \"default/backend\",\n  \"error\": \"The Service 'backend' is invalid: spec.type: Unsupported value: 'Ingress'\"\n}\n```\n\n",
                    "rendered": {
                      "text": "  \"ts\": \"2020-09-17T07:27:11.921Z\",\n  \"logger\": \"controllers.Kustomization\",\n  \"kustomization\": \"default/backend\",\n  \"error\": \"The Service 'backend' is invalid: spec.type: Unsupported value: 'Ingress'\"\n}\n```\n\n",
                      "markdown": "`  \"ts\": \"2020-09-17T07:27:11.921Z\",\n  \"logger\": \"controllers.Kustomization\",\n  \"kustomization\": \"default/backend\",\n  \"error\": \"The Service 'backend' is invalid: spec.type: Unsupported value: 'Ingress'\"\n}\n```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1alpha1/kustomizations.md"
                },
                "region": {
                  "startLine": 575,
                  "startColumn": 17,
                  "endLine": 575,
                  "endColumn": 26,
                  "snippet": {
                    "text": "status:\n  conditions:\n  - lastTransitionTime: \"2020-09-17T07:26:48Z\"\n    message: \"The Service 'backend' is invalid: spec.type: Unsupported value: 'Ingress'\"\n    reason: ValidationFailed\n    status: \"False\"\n    type: Ready\n",
                    "rendered": {
                      "text": "status:\n  conditions:\n  - lastTransitionTime: \"2020-09-17T07:26:48Z\"\n    message: \"The Service 'backend' is invalid: spec.type: Unsupported value: 'Ingress'\"\n    reason: ValidationFailed\n    status: \"False\"\n    type: Ready\n",
                      "markdown": "`status:\n  conditions:\n  - lastTransitionTime: \"2020-09-17T07:26:48Z\"\n    message: \"The Service 'backend' is invalid: spec.type: Unsupported value: 'Ingress'\"\n    reason: ValidationFailed\n    status: \"False\"\n    type: Ready\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1alpha1/kustomizations.md"
                },
                "region": {
                  "startLine": 484,
                  "startColumn": 55,
                  "endLine": 484,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\n## Secrets decryption\n\nIn order to store secrets safely in a public or private Git repository,\nyou can use [Mozilla SOPS](https://github.com/mozilla/sops)\nand encrypt your Kubernetes Secrets data with OpenPGP keys. \n\n",
                    "rendered": {
                      "text": "\n## Secrets decryption\n\nIn order to store secrets safely in a public or private Git repository,\nyou can use [Mozilla SOPS](https://github.com/mozilla/sops)\nand encrypt your Kubernetes Secrets data with OpenPGP keys. \n\n",
                      "markdown": "`\n## Secrets decryption\n\nIn order to store secrets safely in a public or private Git repository,\nyou can use [Mozilla SOPS](https://github.com/mozilla/sops)\nand encrypt your Kubernetes Secrets data with OpenPGP keys. \n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1alpha1/kustomizations.md"
                },
                "region": {
                  "startLine": 454,
                  "startColumn": 24,
                  "endLine": 454,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n> **Note** that the namespace, RBAC and service account manifests should be \n> placed in a Git source and applied with a kustomization. The kustomizations that \n> are running under that service account should depend-on the one that contains the account.\n\nCreate a kustomization that prevents altering the cluster state outside of the `webapp` namespace:\n\n",
                    "rendered": {
                      "text": "\n> **Note** that the namespace, RBAC and service account manifests should be \n> placed in a Git source and applied with a kustomization. The kustomizations that \n> are running under that service account should depend-on the one that contains the account.\n\nCreate a kustomization that prevents altering the cluster state outside of the `webapp` namespace:\n\n",
                      "markdown": "`\n> **Note** that the namespace, RBAC and service account manifests should be \n> placed in a Git source and applied with a kustomization. The kustomizations that \n> are running under that service account should depend-on the one that contains the account.\n\nCreate a kustomization that prevents altering the cluster state outside of the `webapp` namespace:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1alpha1/kustomizations.md"
                },
                "region": {
                  "startLine": 453,
                  "startColumn": 13,
                  "endLine": 453,
                  "endColumn": 18,
                  "snippet": {
                    "text": "```\n\n> **Note** that the namespace, RBAC and service account manifests should be \n> placed in a Git source and applied with a kustomization. The kustomizations that \n> are running under that service account should depend-on the one that contains the account.\n\nCreate a kustomization that prevents altering the cluster state outside of the `webapp` namespace:\n",
                    "rendered": {
                      "text": "```\n\n> **Note** that the namespace, RBAC and service account manifests should be \n> placed in a Git source and applied with a kustomization. The kustomizations that \n> are running under that service account should depend-on the one that contains the account.\n\nCreate a kustomization that prevents altering the cluster state outside of the `webapp` namespace:\n",
                      "markdown": "````\n\n> **Note** that the namespace, RBAC and service account manifests should be \n> placed in a Git source and applied with a kustomization. The kustomizations that \n> are running under that service account should depend-on the one that contains the account.\n\nCreate a kustomization that prevents altering the cluster state outside of the `webapp` namespace:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1alpha1/kustomizations.md"
                },
                "region": {
                  "startLine": 452,
                  "startColumn": 39,
                  "endLine": 452,
                  "endColumn": 48,
                  "snippet": {
                    "text": "  namespace: webapp\n```\n\n> **Note** that the namespace, RBAC and service account manifests should be \n> placed in a Git source and applied with a kustomization. The kustomizations that \n> are running under that service account should depend-on the one that contains the account.\n\n",
                    "rendered": {
                      "text": "  namespace: webapp\n```\n\n> **Note** that the namespace, RBAC and service account manifests should be \n> placed in a Git source and applied with a kustomization. The kustomizations that \n> are running under that service account should depend-on the one that contains the account.\n\n",
                      "markdown": "`  namespace: webapp\n```\n\n> **Note** that the namespace, RBAC and service account manifests should be \n> placed in a Git source and applied with a kustomization. The kustomizations that \n> are running under that service account should depend-on the one that contains the account.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1alpha1/kustomizations.md"
                },
                "region": {
                  "startLine": 410,
                  "startColumn": 45,
                  "endLine": 410,
                  "endColumn": 54,
                  "snippet": {
                    "text": "cluster level objects (namespaces, CRDs, etc) and namespeced objects (deployments, ingresses, etc).\nFor certain kustomizations a cluster admin may wish to control what types of Kubernetes objects can\nbe reconciled and under which namespaces.\nTo restrict a kustomization, one can assign a service account under which the reconciliation is performed.\n\nAssuming you want to restrict a group of kustomizations to a single namespace, you can create an account\nwith a role binding that grants access only to that namespace:\n",
                    "rendered": {
                      "text": "cluster level objects (namespaces, CRDs, etc) and namespeced objects (deployments, ingresses, etc).\nFor certain kustomizations a cluster admin may wish to control what types of Kubernetes objects can\nbe reconciled and under which namespaces.\nTo restrict a kustomization, one can assign a service account under which the reconciliation is performed.\n\nAssuming you want to restrict a group of kustomizations to a single namespace, you can create an account\nwith a role binding that grants access only to that namespace:\n",
                      "markdown": "`cluster level objects (namespaces, CRDs, etc) and namespeced objects (deployments, ingresses, etc).\nFor certain kustomizations a cluster admin may wish to control what types of Kubernetes objects can\nbe reconciled and under which namespaces.\nTo restrict a kustomization, one can assign a service account under which the reconciliation is performed.\n\nAssuming you want to restrict a group of kustomizations to a single namespace, you can create an account\nwith a role binding that grants access only to that namespace:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1alpha1/kustomizations.md"
                },
                "region": {
                  "startLine": 408,
                  "startColumn": 46,
                  "endLine": 408,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\nBy default, a kustomization apply runs under the cluster admin account and can create, modify, delete\ncluster level objects (namespaces, CRDs, etc) and namespeced objects (deployments, ingresses, etc).\nFor certain kustomizations a cluster admin may wish to control what types of Kubernetes objects can\nbe reconciled and under which namespaces.\nTo restrict a kustomization, one can assign a service account under which the reconciliation is performed.\n\n",
                    "rendered": {
                      "text": "\nBy default, a kustomization apply runs under the cluster admin account and can create, modify, delete\ncluster level objects (namespaces, CRDs, etc) and namespeced objects (deployments, ingresses, etc).\nFor certain kustomizations a cluster admin may wish to control what types of Kubernetes objects can\nbe reconciled and under which namespaces.\nTo restrict a kustomization, one can assign a service account under which the reconciliation is performed.\n\n",
                      "markdown": "`\nBy default, a kustomization apply runs under the cluster admin account and can create, modify, delete\ncluster level objects (namespaces, CRDs, etc) and namespeced objects (deployments, ingresses, etc).\nFor certain kustomizations a cluster admin may wish to control what types of Kubernetes objects can\nbe reconciled and under which namespaces.\nTo restrict a kustomization, one can assign a service account under which the reconciliation is performed.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1alpha1/kustomizations.md"
                },
                "region": {
                  "startLine": 364,
                  "startColumn": 14,
                  "endLine": 364,
                  "endColumn": 23,
                  "snippet": {
                    "text": "```\n\nWhen combined with health assessment, a kustomization will run after all its dependencies health checks are passing.\nFor example, a service mesh proxy injector should be running before deploying applications inside the mesh.\n\n```yaml\napiVersion: kustomize.toolkit.fluxcd.io/v1alpha1\n",
                    "rendered": {
                      "text": "```\n\nWhen combined with health assessment, a kustomization will run after all its dependencies health checks are passing.\nFor example, a service mesh proxy injector should be running before deploying applications inside the mesh.\n\n```yaml\napiVersion: kustomize.toolkit.fluxcd.io/v1alpha1\n",
                      "markdown": "````\n\nWhen combined with health assessment, a kustomization will run after all its dependencies health checks are passing.\nFor example, a service mesh proxy injector should be running before deploying applications inside the mesh.\n\n```yaml\napiVersion: kustomize.toolkit.fluxcd.io/v1alpha1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1alpha1/kustomizations.md"
                },
                "region": {
                  "startLine": 330,
                  "startColumn": 37,
                  "endLine": 330,
                  "endColumn": 46,
                  "snippet": {
                    "text": "its last apply status condition.\n\nAssuming two kustomizations:\n* `common` - contains a namespace and service accounts definitions\n* `backend` - contains the workloads to be deployed in that namespace\n\nYou can instruct the controller to apply the `common` kustomization before `backend`:\n",
                    "rendered": {
                      "text": "its last apply status condition.\n\nAssuming two kustomizations:\n* `common` - contains a namespace and service accounts definitions\n* `backend` - contains the workloads to be deployed in that namespace\n\nYou can instruct the controller to apply the `common` kustomization before `backend`:\n",
                      "markdown": "`its last apply status condition.\n\nAssuming two kustomizations:\n* `common` - contains a namespace and service accounts definitions\n* `backend` - contains the workloads to be deployed in that namespace\n\nYou can instruct the controller to apply the `common` kustomization before `backend`:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1alpha1/kustomizations.md"
                },
                "region": {
                  "startLine": 285,
                  "startColumn": 61,
                  "endLine": 285,
                  "endColumn": 70,
                  "snippet": {
                    "text": "\nAfter applying the kustomize build output, the controller verifies if the rollout completed successfully.\nIf the deployment was successful, the kustomization ready condition is marked as `true`,\nif the rollout failed, or if it takes more than the specified timeout to complete, then the \nkustomization ready condition is set to `false`. If the deployment becomes healthy on the next\nexecution, then the kustomization is marked as ready.\n\n",
                    "rendered": {
                      "text": "\nAfter applying the kustomize build output, the controller verifies if the rollout completed successfully.\nIf the deployment was successful, the kustomization ready condition is marked as `true`,\nif the rollout failed, or if it takes more than the specified timeout to complete, then the \nkustomization ready condition is set to `false`. If the deployment becomes healthy on the next\nexecution, then the kustomization is marked as ready.\n\n",
                      "markdown": "`\nAfter applying the kustomize build output, the controller verifies if the rollout completed successfully.\nIf the deployment was successful, the kustomization ready condition is marked as `true`,\nif the rollout failed, or if it takes more than the specified timeout to complete, then the \nkustomization ready condition is set to `false`. If the deployment becomes healthy on the next\nexecution, then the kustomization is marked as ready.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1alpha1/kustomizations.md"
                },
                "region": {
                  "startLine": 218,
                  "startColumn": 12,
                  "endLine": 218,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\nThe kustomization `spec.interval` tells the controller at which interval to fetch the\nKubernetes manifest for the source, build the kustomization and apply it on the cluster.\nThe interval time units are `s`, `m` and `h` e.g. `interval: 5m`, the minimum value should be over 60 seconds.\n\nThe kustomization execution can be suspended by setting `spec.susped` to `true`.\n\n",
                    "rendered": {
                      "text": "\nThe kustomization `spec.interval` tells the controller at which interval to fetch the\nKubernetes manifest for the source, build the kustomization and apply it on the cluster.\nThe interval time units are `s`, `m` and `h` e.g. `interval: 5m`, the minimum value should be over 60 seconds.\n\nThe kustomization execution can be suspended by setting `spec.susped` to `true`.\n\n",
                      "markdown": "`\nThe kustomization `spec.interval` tells the controller at which interval to fetch the\nKubernetes manifest for the source, build the kustomization and apply it on the cluster.\nThe interval time units are `s`, `m` and `h` e.g. `interval: 5m`, the minimum value should be over 60 seconds.\n\nThe kustomization execution can be suspended by setting `spec.susped` to `true`.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1alpha1/kustomizations.md"
                },
                "region": {
                  "startLine": 202,
                  "startColumn": 9,
                  "endLine": 202,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\n> **Note** that the source should contain the kustomization.yaml and all the\n> Kubernetes manifests and configuration files referenced in the kustomization.yaml.\n> If your Git repository or S3 bucket contains only plain manifests,\n> then a kustomization.yaml will be automatically generated.\n\n## Generate kustomization.yaml\n",
                    "rendered": {
                      "text": "\n> **Note** that the source should contain the kustomization.yaml and all the\n> Kubernetes manifests and configuration files referenced in the kustomization.yaml.\n> If your Git repository or S3 bucket contains only plain manifests,\n> then a kustomization.yaml will be automatically generated.\n\n## Generate kustomization.yaml\n",
                      "markdown": "`\n> **Note** that the source should contain the kustomization.yaml and all the\n> Kubernetes manifests and configuration files referenced in the kustomization.yaml.\n> If your Git repository or S3 bucket contains only plain manifests,\n> then a kustomization.yaml will be automatically generated.\n\n## Generate kustomization.yaml\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1alpha1/kustomizations.md"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 27,
                  "endLine": 113,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\tConditions []metav1.Condition `json:\"conditions,omitempty\"`\n\n\t// The last successfully applied revision.\n\t// The revision format for Git sources is <branch|tag>/<commit-sha>.\n\t// +optional\n\tLastAppliedRevision string `json:\"lastAppliedRevision,omitempty\"`\n\n",
                    "rendered": {
                      "text": "\tConditions []metav1.Condition `json:\"conditions,omitempty\"`\n\n\t// The last successfully applied revision.\n\t// The revision format for Git sources is <branch|tag>/<commit-sha>.\n\t// +optional\n\tLastAppliedRevision string `json:\"lastAppliedRevision,omitempty\"`\n\n",
                      "markdown": "`\tConditions []metav1.Condition `json:\"conditions,omitempty\"`\n\n\t// The last successfully applied revision.\n\t// The revision format for Git sources is <branch|tag>/<commit-sha>.\n\t// +optional\n\tLastAppliedRevision string `json:\"lastAppliedRevision,omitempty\"`\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1alpha1/kustomizations.md"
                },
                "region": {
                  "startLine": 65,
                  "endLine": 65,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t// Timeout for validation, apply and health checking operations.\n\t// Defaults to 'Interval' duration.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// Validate the Kubernetes objects before applying them on the cluster.\n\t// The validation strategy can be 'client' (local dry-run) or 'server' (APIServer dry-run).\n",
                    "rendered": {
                      "text": "\t// Timeout for validation, apply and health checking operations.\n\t// Defaults to 'Interval' duration.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// Validate the Kubernetes objects before applying them on the cluster.\n\t// The validation strategy can be 'client' (local dry-run) or 'server' (APIServer dry-run).\n",
                      "markdown": "`\t// Timeout for validation, apply and health checking operations.\n\t// Defaults to 'Interval' duration.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// Validate the Kubernetes objects before applying them on the cluster.\n\t// The validation strategy can be 'client' (local dry-run) or 'server' (APIServer dry-run).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1alpha1/kustomizations.md"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 3,
                  "endLine": 62,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t// +optional\n\tTargetNamespace string `json:\"targetNamespace,omitempty\"`\n\n\t// Timeout for validation, apply and health checking operations.\n\t// Defaults to 'Interval' duration.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n",
                    "rendered": {
                      "text": "\t// +optional\n\tTargetNamespace string `json:\"targetNamespace,omitempty\"`\n\n\t// Timeout for validation, apply and health checking operations.\n\t// Defaults to 'Interval' duration.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n",
                      "markdown": "`\t// +optional\n\tTargetNamespace string `json:\"targetNamespace,omitempty\"`\n\n\t// Timeout for validation, apply and health checking operations.\n\t// Defaults to 'Interval' duration.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1alpha1/kustomizations.md"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 18,
                  "endLine": 44,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t// +optional\n\tHealthChecks []CrossNamespaceObjectReference `json:\"healthChecks,omitempty\"`\n\n\t// The Kubernetes service account used for applying the kustomization.\n\t// +optional\n\tServiceAccount *ServiceAccount `json:\"serviceAccount,omitempty\"`\n\n",
                    "rendered": {
                      "text": "\t// +optional\n\tHealthChecks []CrossNamespaceObjectReference `json:\"healthChecks,omitempty\"`\n\n\t// The Kubernetes service account used for applying the kustomization.\n\t// +optional\n\tServiceAccount *ServiceAccount `json:\"serviceAccount,omitempty\"`\n\n",
                      "markdown": "`\t// +optional\n\tHealthChecks []CrossNamespaceObjectReference `json:\"healthChecks,omitempty\"`\n\n\t// The Kubernetes service account used for applying the kustomization.\n\t// +optional\n\tServiceAccount *ServiceAccount `json:\"serviceAccount,omitempty\"`\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta1/kustomizations.md"
                },
                "region": {
                  "startLine": 1021,
                  "startColumn": 39,
                  "endLine": 1021,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\n### Kustomize secretGenerator\n\nSOPS encrypted data can be stored as a base64 encoded Secret,\nwhich enables the use of Kustomize `secretGenerator` as follows:\n\n```console\n",
                    "rendered": {
                      "text": "\n### Kustomize secretGenerator\n\nSOPS encrypted data can be stored as a base64 encoded Secret,\nwhich enables the use of Kustomize `secretGenerator` as follows:\n\n```console\n",
                      "markdown": "`\n### Kustomize secretGenerator\n\nSOPS encrypted data can be stored as a base64 encoded Secret,\nwhich enables the use of Kustomize `secretGenerator` as follows:\n\n```console\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta1/kustomizations.md"
                },
                "region": {
                  "startLine": 904,
                  "startColumn": 44,
                  "endLine": 904,
                  "endColumn": 48,
                  "snippet": {
                    "text": "      name: stage-kubeconfig  # Cluster API creates this for the matching Cluster\n```\n\nThe Cluster and Kustomization can be created at the same time.\nThe Kustomization will eventually reconcile once the cluster is available.\n\nIf you wish to target clusters created by other means than CAPI, you can create a ServiceAccount\n",
                    "rendered": {
                      "text": "      name: stage-kubeconfig  # Cluster API creates this for the matching Cluster\n```\n\nThe Cluster and Kustomization can be created at the same time.\nThe Kustomization will eventually reconcile once the cluster is available.\n\nIf you wish to target clusters created by other means than CAPI, you can create a ServiceAccount\n",
                      "markdown": "`      name: stage-kubeconfig  # Cluster API creates this for the matching Cluster\n```\n\nThe Cluster and Kustomization can be created at the same time.\nThe Kustomization will eventually reconcile once the cluster is available.\n\nIf you wish to target clusters created by other means than CAPI, you can create a ServiceAccount\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta1/kustomizations.md"
                },
                "region": {
                  "startLine": 809,
                  "startColumn": 41,
                  "endLine": 809,
                  "endColumn": 45,
                  "snippet": {
                    "text": "kustomize.toolkit.fluxcd.io/substitute: disabled\n``` \n\nSubstitution of variables only happens if at least a single variable or resource to substitute\nfrom is defined. This may cause issues if you rely on expressions which should evaluate to a\ndefault, even if no other variables are configured. To work around this, one can set an\narbitrary key/value pair to enable the substitution of variables. For example: \n",
                    "rendered": {
                      "text": "kustomize.toolkit.fluxcd.io/substitute: disabled\n``` \n\nSubstitution of variables only happens if at least a single variable or resource to substitute\nfrom is defined. This may cause issues if you rely on expressions which should evaluate to a\ndefault, even if no other variables are configured. To work around this, one can set an\narbitrary key/value pair to enable the substitution of variables. For example: \n",
                      "markdown": "`kustomize.toolkit.fluxcd.io/substitute: disabled\n``` \n\nSubstitution of variables only happens if at least a single variable or resource to substitute\nfrom is defined. This may cause issues if you rely on expressions which should evaluate to a\ndefault, even if no other variables are configured. To work around this, one can set an\narbitrary key/value pair to enable the substitution of variables. For example: \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta1/kustomizations.md"
                },
                "region": {
                  "startLine": 531,
                  "startColumn": 54,
                  "endLine": 531,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\nBy default, a Kustomization apply runs under the cluster admin account and can create, modify, delete\ncluster level objects (namespaces, CRDs, etc) and namespeced objects (deployments, ingresses, etc).\nFor certain Kustomizations a cluster admin may wish to control what types of Kubernetes objects can\nbe reconciled and under which namespaces.\nTo restrict a Kustomization, one can assign a service account under which the reconciliation is performed.\n\n",
                    "rendered": {
                      "text": "\nBy default, a Kustomization apply runs under the cluster admin account and can create, modify, delete\ncluster level objects (namespaces, CRDs, etc) and namespeced objects (deployments, ingresses, etc).\nFor certain Kustomizations a cluster admin may wish to control what types of Kubernetes objects can\nbe reconciled and under which namespaces.\nTo restrict a Kustomization, one can assign a service account under which the reconciliation is performed.\n\n",
                      "markdown": "`\nBy default, a Kustomization apply runs under the cluster admin account and can create, modify, delete\ncluster level objects (namespaces, CRDs, etc) and namespeced objects (deployments, ingresses, etc).\nFor certain Kustomizations a cluster admin may wish to control what types of Kubernetes objects can\nbe reconciled and under which namespaces.\nTo restrict a Kustomization, one can assign a service account under which the reconciliation is performed.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta1/kustomizations.md"
                },
                "region": {
                  "startLine": 527,
                  "startColumn": 20,
                  "endLine": 528,
                  "snippet": {
                    "text": "> **Note** that circular dependencies between Kustomizations must be avoided, otherwise the\n> interdependent Kustomizations will never be applied on the cluster.\n\n## Role-based access control\n\nBy default, a Kustomization apply runs under the cluster admin account and can create, modify, delete\ncluster level objects (namespaces, CRDs, etc) and namespeced objects (deployments, ingresses, etc).\nFor certain Kustomizations a cluster admin may wish to control what types of Kubernetes objects can\n",
                    "rendered": {
                      "text": "> **Note** that circular dependencies between Kustomizations must be avoided, otherwise the\n> interdependent Kustomizations will never be applied on the cluster.\n\n## Role-based access control\n\nBy default, a Kustomization apply runs under the cluster admin account and can create, modify, delete\ncluster level objects (namespaces, CRDs, etc) and namespeced objects (deployments, ingresses, etc).\nFor certain Kustomizations a cluster admin may wish to control what types of Kubernetes objects can\n",
                      "markdown": "`> **Note** that circular dependencies between Kustomizations must be avoided, otherwise the\n> interdependent Kustomizations will never be applied on the cluster.\n\n## Role-based access control\n\nBy default, a Kustomization apply runs under the cluster admin account and can create, modify, delete\ncluster level objects (namespaces, CRDs, etc) and namespeced objects (deployments, ingresses, etc).\nFor certain Kustomizations a cluster admin may wish to control what types of Kubernetes objects can\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta1/kustomizations.md"
                },
                "region": {
                  "startLine": 329,
                  "startColumn": 54,
                  "endLine": 329,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\n## Reconciliation\n\nThe Kustomization `spec.interval` tells the controller at which interval to fetch the\nKubernetes manifest for the source, build the Kustomization and apply it on the cluster.\nThe interval time units are `s`, `m` and `h` e.g. `interval: 5m`, the minimum value should be over 60 seconds.\n\n",
                    "rendered": {
                      "text": "\n## Reconciliation\n\nThe Kustomization `spec.interval` tells the controller at which interval to fetch the\nKubernetes manifest for the source, build the Kustomization and apply it on the cluster.\nThe interval time units are `s`, `m` and `h` e.g. `interval: 5m`, the minimum value should be over 60 seconds.\n\n",
                      "markdown": "`\n## Reconciliation\n\nThe Kustomization `spec.interval` tells the controller at which interval to fetch the\nKubernetes manifest for the source, build the Kustomization and apply it on the cluster.\nThe interval time units are `s`, `m` and `h` e.g. `interval: 5m`, the minimum value should be over 60 seconds.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta1/kustomizations.md"
                },
                "region": {
                  "startLine": 174,
                  "startColumn": 24,
                  "endLine": 174,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t// The variables defined in your YAML manifests\n\t// that match any of the keys defined in the map\n\t// will be substituted with the set value.\n\t// Includes support for bash string replacement functions\n\t// e.g. ${var:=default}, ${var:position} and ${var/substring/replacement}.\n\t// +optional\n\tSubstitute map[string]string `json:\"substitute,omitempty\"`\n",
                    "rendered": {
                      "text": "\t// The variables defined in your YAML manifests\n\t// that match any of the keys defined in the map\n\t// will be substituted with the set value.\n\t// Includes support for bash string replacement functions\n\t// e.g. ${var:=default}, ${var:position} and ${var/substring/replacement}.\n\t// +optional\n\tSubstitute map[string]string `json:\"substitute,omitempty\"`\n",
                      "markdown": "`\t// The variables defined in your YAML manifests\n\t// that match any of the keys defined in the map\n\t// will be substituted with the set value.\n\t// Includes support for bash string replacement functions\n\t// e.g. ${var:=default}, ${var:position} and ${var/substring/replacement}.\n\t// +optional\n\tSubstitute map[string]string `json:\"substitute,omitempty\"`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta1/kustomizations.md"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 16,
                  "endLine": 28,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t// +required\n\tInterval metav1.Duration `json:\"interval\"`\n\n\t// The interval at which to retry a previously failed reconciliation.\n\t// When not specified, the controller uses the KustomizationSpec.Interval\n\t// value to retry failures.\n\t// +optional\n",
                    "rendered": {
                      "text": "\t// +required\n\tInterval metav1.Duration `json:\"interval\"`\n\n\t// The interval at which to retry a previously failed reconciliation.\n\t// When not specified, the controller uses the KustomizationSpec.Interval\n\t// value to retry failures.\n\t// +optional\n",
                      "markdown": "`\t// +required\n\tInterval metav1.Duration `json:\"interval\"`\n\n\t// The interval at which to retry a previously failed reconciliation.\n\t// When not specified, the controller uses the KustomizationSpec.Interval\n\t// value to retry failures.\n\t// +optional\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta1/kustomizations.md"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 16,
                  "endLine": 24,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t// +optional\n\tDecryption *Decryption `json:\"decryption,omitempty\"`\n\n\t// The interval at which to reconcile the Kustomization.\n\t// +required\n\tInterval metav1.Duration `json:\"interval\"`\n\n",
                    "rendered": {
                      "text": "\t// +optional\n\tDecryption *Decryption `json:\"decryption,omitempty\"`\n\n\t// The interval at which to reconcile the Kustomization.\n\t// +required\n\tInterval metav1.Duration `json:\"interval\"`\n\n",
                      "markdown": "`\t// +optional\n\tDecryption *Decryption `json:\"decryption,omitempty\"`\n\n\t// The interval at which to reconcile the Kustomization.\n\t// +required\n\tInterval metav1.Duration `json:\"interval\"`\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta1/kustomizations.md"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 16,
                  "endLine": 10,
                  "endColumn": 20,
                  "snippet": {
                    "text": "A **Kustomization** object defines the source of Kubernetes manifests by referencing an object\nmanaged by [source-controller](https://github.com/fluxcd/source-controller),\nthe path to the Kustomization file within that source,\nand the interval at which the kustomize build output is applied on the cluster.\n\n```go\ntype KustomizationSpec struct {\n",
                    "rendered": {
                      "text": "A **Kustomization** object defines the source of Kubernetes manifests by referencing an object\nmanaged by [source-controller](https://github.com/fluxcd/source-controller),\nthe path to the Kustomization file within that source,\nand the interval at which the kustomize build output is applied on the cluster.\n\n```go\ntype KustomizationSpec struct {\n",
                      "markdown": "`A **Kustomization** object defines the source of Kubernetes manifests by referencing an object\nmanaged by [source-controller](https://github.com/fluxcd/source-controller),\nthe path to the Kustomization file within that source,\nand the interval at which the kustomize build output is applied on the cluster.\n\n```go\ntype KustomizationSpec struct {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta1/kustomizations.md"
                },
                "region": {
                  "startLine": 1108,
                  "startColumn": 15,
                  "endLine": 1108,
                  "endColumn": 24,
                  "snippet": {
                    "text": "  \"ts\": \"2020-09-17T07:27:11.921Z\",\n  \"logger\": \"controllers.Kustomization\",\n  \"kustomization\": \"default/backend\",\n  \"error\": \"The Service 'backend' is invalid: spec.type: Unsupported value: 'Ingress'\"\n}\n```\n",
                    "rendered": {
                      "text": "  \"ts\": \"2020-09-17T07:27:11.921Z\",\n  \"logger\": \"controllers.Kustomization\",\n  \"kustomization\": \"default/backend\",\n  \"error\": \"The Service 'backend' is invalid: spec.type: Unsupported value: 'Ingress'\"\n}\n```\n",
                      "markdown": "`  \"ts\": \"2020-09-17T07:27:11.921Z\",\n  \"logger\": \"controllers.Kustomization\",\n  \"kustomization\": \"default/backend\",\n  \"error\": \"The Service 'backend' is invalid: spec.type: Unsupported value: 'Ingress'\"\n}\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta1/kustomizations.md"
                },
                "region": {
                  "startLine": 1090,
                  "startColumn": 17,
                  "endLine": 1090,
                  "endColumn": 26,
                  "snippet": {
                    "text": "status:\n  conditions:\n  - lastTransitionTime: \"2020-09-17T07:26:48Z\"\n    message: \"The Service 'backend' is invalid: spec.type: Unsupported value: 'Ingress'\"\n    reason: ValidationFailed\n    status: \"False\"\n    type: Ready\n",
                    "rendered": {
                      "text": "status:\n  conditions:\n  - lastTransitionTime: \"2020-09-17T07:26:48Z\"\n    message: \"The Service 'backend' is invalid: spec.type: Unsupported value: 'Ingress'\"\n    reason: ValidationFailed\n    status: \"False\"\n    type: Ready\n",
                      "markdown": "`status:\n  conditions:\n  - lastTransitionTime: \"2020-09-17T07:26:48Z\"\n    message: \"The Service 'backend' is invalid: spec.type: Unsupported value: 'Ingress'\"\n    reason: ValidationFailed\n    status: \"False\"\n    type: Ready\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta1/kustomizations.md"
                },
                "region": {
                  "startLine": 1026,
                  "startColumn": 1,
                  "endLine": 1026,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\n```console\n$ echo \"my-secret-token\" | sops -e /dev/stdin > token.encrypted\n$ cat <<EOF > kustomization.yaml\napiVersion: kustomize.config.k8s.io/v1beta1\nkind: Kustomization\n\n",
                    "rendered": {
                      "text": "\n```console\n$ echo \"my-secret-token\" | sops -e /dev/stdin > token.encrypted\n$ cat <<EOF > kustomization.yaml\napiVersion: kustomize.config.k8s.io/v1beta1\nkind: Kustomization\n\n",
                      "markdown": "`\n```console\n$ echo \"my-secret-token\" | sops -e /dev/stdin > token.encrypted\n$ cat <<EOF > kustomization.yaml\napiVersion: kustomize.config.k8s.io/v1beta1\nkind: Kustomization\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta1/kustomizations.md"
                },
                "region": {
                  "startLine": 1021,
                  "startColumn": 38,
                  "endLine": 1021,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\n### Kustomize secretGenerator\n\nSOPS encrypted data can be stored as a base64 encoded Secret,\nwhich enables the use of Kustomize `secretGenerator` as follows:\n\n```console\n",
                    "rendered": {
                      "text": "\n### Kustomize secretGenerator\n\nSOPS encrypted data can be stored as a base64 encoded Secret,\nwhich enables the use of Kustomize `secretGenerator` as follows:\n\n```console\n",
                      "markdown": "`\n### Kustomize secretGenerator\n\nSOPS encrypted data can be stored as a base64 encoded Secret,\nwhich enables the use of Kustomize `secretGenerator` as follows:\n\n```console\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta1/kustomizations.md"
                },
                "region": {
                  "startLine": 993,
                  "startColumn": 5,
                  "endLine": 994,
                  "endColumn": 4,
                  "snippet": {
                    "text": "Create a secret in the `default` namespace with the age private key,\nthe key name must end with `.agekey` to be detected as an age key:\n\n```sh\ncat age.agekey |\nkubectl -n default create secret generic sops-age \\\n--from-file=age.agekey=/dev/stdin\n```\n",
                    "rendered": {
                      "text": "Create a secret in the `default` namespace with the age private key,\nthe key name must end with `.agekey` to be detected as an age key:\n\n```sh\ncat age.agekey |\nkubectl -n default create secret generic sops-age \\\n--from-file=age.agekey=/dev/stdin\n```\n",
                      "markdown": "`Create a secret in the `default` namespace with the age private key,\nthe key name must end with `.agekey` to be detected as an age key:\n\n```sh\ncat age.agekey |\nkubectl -n default create secret generic sops-age \\\n--from-file=age.agekey=/dev/stdin\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta1/kustomizations.md"
                },
                "region": {
                  "startLine": 924,
                  "startColumn": 55,
                  "endLine": 924,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\n## Secrets decryption\n\nIn order to store secrets safely in a public or private Git repository,\nyou can use [Mozilla SOPS](https://github.com/mozilla/sops)\nand encrypt your Kubernetes Secrets data with [OpenPGP](https://www.openpgp.org)\nand [age](https://age-encryption.org/v1/) keys.\n",
                    "rendered": {
                      "text": "\n## Secrets decryption\n\nIn order to store secrets safely in a public or private Git repository,\nyou can use [Mozilla SOPS](https://github.com/mozilla/sops)\nand encrypt your Kubernetes Secrets data with [OpenPGP](https://www.openpgp.org)\nand [age](https://age-encryption.org/v1/) keys.\n",
                      "markdown": "`\n## Secrets decryption\n\nIn order to store secrets safely in a public or private Git repository,\nyou can use [Mozilla SOPS](https://github.com/mozilla/sops)\nand encrypt your Kubernetes Secrets data with [OpenPGP](https://www.openpgp.org)\nand [age](https://age-encryption.org/v1/) keys.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta1/kustomizations.md"
                },
                "region": {
                  "startLine": 907,
                  "startColumn": 6,
                  "endLine": 907,
                  "endColumn": 12,
                  "snippet": {
                    "text": "The Cluster and Kustomization can be created at the same time.\nThe Kustomization will eventually reconcile once the cluster is available.\n\nIf you wish to target clusters created by other means than CAPI, you can create a ServiceAccount\non the remote cluster, generate a KubeConfig for that account, and then create a secret on the\ncluster where kustomize-controller is running e.g.:\n\n",
                    "rendered": {
                      "text": "The Cluster and Kustomization can be created at the same time.\nThe Kustomization will eventually reconcile once the cluster is available.\n\nIf you wish to target clusters created by other means than CAPI, you can create a ServiceAccount\non the remote cluster, generate a KubeConfig for that account, and then create a secret on the\ncluster where kustomize-controller is running e.g.:\n\n",
                      "markdown": "`The Cluster and Kustomization can be created at the same time.\nThe Kustomization will eventually reconcile once the cluster is available.\n\nIf you wish to target clusters created by other means than CAPI, you can create a ServiceAccount\non the remote cluster, generate a KubeConfig for that account, and then create a secret on the\ncluster where kustomize-controller is running e.g.:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta1/kustomizations.md"
                },
                "region": {
                  "startLine": 577,
                  "startColumn": 24,
                  "endLine": 577,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n> **Note** that the namespace, RBAC and service account manifests should be\n> placed in a Git source and applied with a Kustomization. The Kustomizations that\n> are running under that service account should depend-on the one that contains the account.\n\nCreate a Kustomization that prevents altering the cluster state outside of the `webapp` namespace:\n\n",
                    "rendered": {
                      "text": "\n> **Note** that the namespace, RBAC and service account manifests should be\n> placed in a Git source and applied with a Kustomization. The Kustomizations that\n> are running under that service account should depend-on the one that contains the account.\n\nCreate a Kustomization that prevents altering the cluster state outside of the `webapp` namespace:\n\n",
                      "markdown": "`\n> **Note** that the namespace, RBAC and service account manifests should be\n> placed in a Git source and applied with a Kustomization. The Kustomizations that\n> are running under that service account should depend-on the one that contains the account.\n\nCreate a Kustomization that prevents altering the cluster state outside of the `webapp` namespace:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta1/kustomizations.md"
                },
                "region": {
                  "startLine": 576,
                  "startColumn": 13,
                  "endLine": 576,
                  "endColumn": 18,
                  "snippet": {
                    "text": "```\n\n> **Note** that the namespace, RBAC and service account manifests should be\n> placed in a Git source and applied with a Kustomization. The Kustomizations that\n> are running under that service account should depend-on the one that contains the account.\n\nCreate a Kustomization that prevents altering the cluster state outside of the `webapp` namespace:\n",
                    "rendered": {
                      "text": "```\n\n> **Note** that the namespace, RBAC and service account manifests should be\n> placed in a Git source and applied with a Kustomization. The Kustomizations that\n> are running under that service account should depend-on the one that contains the account.\n\nCreate a Kustomization that prevents altering the cluster state outside of the `webapp` namespace:\n",
                      "markdown": "````\n\n> **Note** that the namespace, RBAC and service account manifests should be\n> placed in a Git source and applied with a Kustomization. The Kustomizations that\n> are running under that service account should depend-on the one that contains the account.\n\nCreate a Kustomization that prevents altering the cluster state outside of the `webapp` namespace:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta1/kustomizations.md"
                },
                "region": {
                  "startLine": 575,
                  "startColumn": 39,
                  "endLine": 575,
                  "endColumn": 48,
                  "snippet": {
                    "text": "  namespace: webapp\n```\n\n> **Note** that the namespace, RBAC and service account manifests should be\n> placed in a Git source and applied with a Kustomization. The Kustomizations that\n> are running under that service account should depend-on the one that contains the account.\n\n",
                    "rendered": {
                      "text": "  namespace: webapp\n```\n\n> **Note** that the namespace, RBAC and service account manifests should be\n> placed in a Git source and applied with a Kustomization. The Kustomizations that\n> are running under that service account should depend-on the one that contains the account.\n\n",
                      "markdown": "`  namespace: webapp\n```\n\n> **Note** that the namespace, RBAC and service account manifests should be\n> placed in a Git source and applied with a Kustomization. The Kustomizations that\n> are running under that service account should depend-on the one that contains the account.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta1/kustomizations.md"
                },
                "region": {
                  "startLine": 533,
                  "startColumn": 45,
                  "endLine": 533,
                  "endColumn": 54,
                  "snippet": {
                    "text": "cluster level objects (namespaces, CRDs, etc) and namespeced objects (deployments, ingresses, etc).\nFor certain Kustomizations a cluster admin may wish to control what types of Kubernetes objects can\nbe reconciled and under which namespaces.\nTo restrict a Kustomization, one can assign a service account under which the reconciliation is performed.\n\nAssuming you want to restrict a group of Kustomizations to a single namespace, you can create an account\nwith a role binding that grants access only to that namespace:\n",
                    "rendered": {
                      "text": "cluster level objects (namespaces, CRDs, etc) and namespeced objects (deployments, ingresses, etc).\nFor certain Kustomizations a cluster admin may wish to control what types of Kubernetes objects can\nbe reconciled and under which namespaces.\nTo restrict a Kustomization, one can assign a service account under which the reconciliation is performed.\n\nAssuming you want to restrict a group of Kustomizations to a single namespace, you can create an account\nwith a role binding that grants access only to that namespace:\n",
                      "markdown": "`cluster level objects (namespaces, CRDs, etc) and namespeced objects (deployments, ingresses, etc).\nFor certain Kustomizations a cluster admin may wish to control what types of Kubernetes objects can\nbe reconciled and under which namespaces.\nTo restrict a Kustomization, one can assign a service account under which the reconciliation is performed.\n\nAssuming you want to restrict a group of Kustomizations to a single namespace, you can create an account\nwith a role binding that grants access only to that namespace:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta1/kustomizations.md"
                },
                "region": {
                  "startLine": 531,
                  "startColumn": 46,
                  "endLine": 531,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\nBy default, a Kustomization apply runs under the cluster admin account and can create, modify, delete\ncluster level objects (namespaces, CRDs, etc) and namespeced objects (deployments, ingresses, etc).\nFor certain Kustomizations a cluster admin may wish to control what types of Kubernetes objects can\nbe reconciled and under which namespaces.\nTo restrict a Kustomization, one can assign a service account under which the reconciliation is performed.\n\n",
                    "rendered": {
                      "text": "\nBy default, a Kustomization apply runs under the cluster admin account and can create, modify, delete\ncluster level objects (namespaces, CRDs, etc) and namespeced objects (deployments, ingresses, etc).\nFor certain Kustomizations a cluster admin may wish to control what types of Kubernetes objects can\nbe reconciled and under which namespaces.\nTo restrict a Kustomization, one can assign a service account under which the reconciliation is performed.\n\n",
                      "markdown": "`\nBy default, a Kustomization apply runs under the cluster admin account and can create, modify, delete\ncluster level objects (namespaces, CRDs, etc) and namespeced objects (deployments, ingresses, etc).\nFor certain Kustomizations a cluster admin may wish to control what types of Kubernetes objects can\nbe reconciled and under which namespaces.\nTo restrict a Kustomization, one can assign a service account under which the reconciliation is performed.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta1/kustomizations.md"
                },
                "region": {
                  "startLine": 522,
                  "startColumn": 14,
                  "endLine": 522,
                  "endColumn": 23,
                  "snippet": {
                    "text": "```\n\nWhen combined with health assessment, a Kustomization will run after all its dependencies health checks are passing.\nFor example, a service mesh proxy injector should be running before deploying applications inside the mesh.\n\n> **Note** that circular dependencies between Kustomizations must be avoided, otherwise the\n> interdependent Kustomizations will never be applied on the cluster.\n",
                    "rendered": {
                      "text": "```\n\nWhen combined with health assessment, a Kustomization will run after all its dependencies health checks are passing.\nFor example, a service mesh proxy injector should be running before deploying applications inside the mesh.\n\n> **Note** that circular dependencies between Kustomizations must be avoided, otherwise the\n> interdependent Kustomizations will never be applied on the cluster.\n",
                      "markdown": "````\n\nWhen combined with health assessment, a Kustomization will run after all its dependencies health checks are passing.\nFor example, a service mesh proxy injector should be running before deploying applications inside the mesh.\n\n> **Note** that circular dependencies between Kustomizations must be avoided, otherwise the\n> interdependent Kustomizations will never be applied on the cluster.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta1/kustomizations.md"
                },
                "region": {
                  "startLine": 434,
                  "startColumn": 61,
                  "endLine": 434,
                  "endColumn": 70,
                  "snippet": {
                    "text": "\nAfter applying the kustomize build output, the controller verifies if the rollout completed successfully.\nIf the deployment was successful, the Kustomization ready condition is marked as `true`,\nif the rollout failed, or if it takes more than the specified timeout to complete, then the\nKustomization ready condition is set to `false`. If the deployment becomes healthy on the next\nexecution, then the Kustomization is marked as ready.\n\n",
                    "rendered": {
                      "text": "\nAfter applying the kustomize build output, the controller verifies if the rollout completed successfully.\nIf the deployment was successful, the Kustomization ready condition is marked as `true`,\nif the rollout failed, or if it takes more than the specified timeout to complete, then the\nKustomization ready condition is set to `false`. If the deployment becomes healthy on the next\nexecution, then the Kustomization is marked as ready.\n\n",
                      "markdown": "`\nAfter applying the kustomize build output, the controller verifies if the rollout completed successfully.\nIf the deployment was successful, the Kustomization ready condition is marked as `true`,\nif the rollout failed, or if it takes more than the specified timeout to complete, then the\nKustomization ready condition is set to `false`. If the deployment becomes healthy on the next\nexecution, then the Kustomization is marked as ready.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta1/kustomizations.md"
                },
                "region": {
                  "startLine": 331,
                  "startColumn": 12,
                  "endLine": 331,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\nThe Kustomization `spec.interval` tells the controller at which interval to fetch the\nKubernetes manifest for the source, build the Kustomization and apply it on the cluster.\nThe interval time units are `s`, `m` and `h` e.g. `interval: 5m`, the minimum value should be over 60 seconds.\n\nThe Kustomization execution can be suspended by setting `spec.suspend` to `true`.\n\n",
                    "rendered": {
                      "text": "\nThe Kustomization `spec.interval` tells the controller at which interval to fetch the\nKubernetes manifest for the source, build the Kustomization and apply it on the cluster.\nThe interval time units are `s`, `m` and `h` e.g. `interval: 5m`, the minimum value should be over 60 seconds.\n\nThe Kustomization execution can be suspended by setting `spec.suspend` to `true`.\n\n",
                      "markdown": "`\nThe Kustomization `spec.interval` tells the controller at which interval to fetch the\nKubernetes manifest for the source, build the Kustomization and apply it on the cluster.\nThe interval time units are `s`, `m` and `h` e.g. `interval: 5m`, the minimum value should be over 60 seconds.\n\nThe Kustomization execution can be suspended by setting `spec.suspend` to `true`.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta1/kustomizations.md"
                },
                "region": {
                  "startLine": 314,
                  "startColumn": 38,
                  "endLine": 314,
                  "endColumn": 46,
                  "snippet": {
                    "text": "```\n\nIt is recommended to generate the `kustomization.yaml` on your own and store it in Git, this way you can\nvalidate your manifests in CI (example script [here](https://github.com/fluxcd/flux2-multi-tenancy/blob/main/scripts/validate.sh)).\nAssuming your manifests are inside `./clusters/my-cluster`, you can generate a `kustomization.yaml` with:\n\n```sh\n",
                    "rendered": {
                      "text": "```\n\nIt is recommended to generate the `kustomization.yaml` on your own and store it in Git, this way you can\nvalidate your manifests in CI (example script [here](https://github.com/fluxcd/flux2-multi-tenancy/blob/main/scripts/validate.sh)).\nAssuming your manifests are inside `./clusters/my-cluster`, you can generate a `kustomization.yaml` with:\n\n```sh\n",
                      "markdown": "````\n\nIt is recommended to generate the `kustomization.yaml` on your own and store it in Git, this way you can\nvalidate your manifests in CI (example script [here](https://github.com/fluxcd/flux2-multi-tenancy/blob/main/scripts/validate.sh)).\nAssuming your manifests are inside `./clusters/my-cluster`, you can generate a `kustomization.yaml` with:\n\n```sh\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta1/kustomizations.md"
                },
                "region": {
                  "startLine": 285,
                  "startColumn": 9,
                  "endLine": 285,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\n> **Note** that the source should contain the kustomization.yaml and all the\n> Kubernetes manifests and configuration files referenced in the kustomization.yaml.\n> If your Git repository or S3 bucket contains only plain manifests,\n> then a kustomization.yaml will be automatically generated.\n\n## Generate kustomization.yaml\n",
                    "rendered": {
                      "text": "\n> **Note** that the source should contain the kustomization.yaml and all the\n> Kubernetes manifests and configuration files referenced in the kustomization.yaml.\n> If your Git repository or S3 bucket contains only plain manifests,\n> then a kustomization.yaml will be automatically generated.\n\n## Generate kustomization.yaml\n",
                      "markdown": "`\n> **Note** that the source should contain the kustomization.yaml and all the\n> Kubernetes manifests and configuration files referenced in the kustomization.yaml.\n> If your Git repository or S3 bucket contains only plain manifests,\n> then a kustomization.yaml will be automatically generated.\n\n## Generate kustomization.yaml\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta1/kustomizations.md"
                },
                "region": {
                  "startLine": 200,
                  "startColumn": 27,
                  "endLine": 200,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\tConditions []metav1.Condition `json:\"conditions,omitempty\"`\n\n\t// The last successfully applied revision.\n\t// The revision format for Git sources is <branch|tag>/<commit-sha>.\n\t// +optional\n\tLastAppliedRevision string `json:\"lastAppliedRevision,omitempty\"`\n\n",
                    "rendered": {
                      "text": "\tConditions []metav1.Condition `json:\"conditions,omitempty\"`\n\n\t// The last successfully applied revision.\n\t// The revision format for Git sources is <branch|tag>/<commit-sha>.\n\t// +optional\n\tLastAppliedRevision string `json:\"lastAppliedRevision,omitempty\"`\n\n",
                      "markdown": "`\tConditions []metav1.Condition `json:\"conditions,omitempty\"`\n\n\t// The last successfully applied revision.\n\t// The revision format for Git sources is <branch|tag>/<commit-sha>.\n\t// +optional\n\tLastAppliedRevision string `json:\"lastAppliedRevision,omitempty\"`\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta1/kustomizations.md"
                },
                "region": {
                  "startLine": 174,
                  "startColumn": 24,
                  "endLine": 174,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t// The variables defined in your YAML manifests\n\t// that match any of the keys defined in the map\n\t// will be substituted with the set value.\n\t// Includes support for bash string replacement functions\n\t// e.g. ${var:=default}, ${var:position} and ${var/substring/replacement}.\n\t// +optional\n\tSubstitute map[string]string `json:\"substitute,omitempty\"`\n",
                    "rendered": {
                      "text": "\t// The variables defined in your YAML manifests\n\t// that match any of the keys defined in the map\n\t// will be substituted with the set value.\n\t// Includes support for bash string replacement functions\n\t// e.g. ${var:=default}, ${var:position} and ${var/substring/replacement}.\n\t// +optional\n\tSubstitute map[string]string `json:\"substitute,omitempty\"`\n",
                      "markdown": "`\t// The variables defined in your YAML manifests\n\t// that match any of the keys defined in the map\n\t// will be substituted with the set value.\n\t// Includes support for bash string replacement functions\n\t// e.g. ${var:=default}, ${var:position} and ${var/substring/replacement}.\n\t// +optional\n\tSubstitute map[string]string `json:\"substitute,omitempty\"`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta1/kustomizations.md"
                },
                "region": {
                  "startLine": 99,
                  "endLine": 99,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t// Timeout for validation, apply and health checking operations.\n\t// Defaults to 'Interval' duration.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// Validate the Kubernetes objects before applying them on the cluster.\n\t// The validation strategy can be 'client' (local dry-run), 'server' (APIServer dry-run) or 'none'.\n",
                    "rendered": {
                      "text": "\t// Timeout for validation, apply and health checking operations.\n\t// Defaults to 'Interval' duration.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// Validate the Kubernetes objects before applying them on the cluster.\n\t// The validation strategy can be 'client' (local dry-run), 'server' (APIServer dry-run) or 'none'.\n",
                      "markdown": "`\t// Timeout for validation, apply and health checking operations.\n\t// Defaults to 'Interval' duration.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// Validate the Kubernetes objects before applying them on the cluster.\n\t// The validation strategy can be 'client' (local dry-run), 'server' (APIServer dry-run) or 'none'.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta1/kustomizations.md"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 3,
                  "endLine": 96,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t// +optional\n\tTargetNamespace string `json:\"targetNamespace,omitempty\"`\n\n\t// Timeout for validation, apply and health checking operations.\n\t// Defaults to 'Interval' duration.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n",
                    "rendered": {
                      "text": "\t// +optional\n\tTargetNamespace string `json:\"targetNamespace,omitempty\"`\n\n\t// Timeout for validation, apply and health checking operations.\n\t// Defaults to 'Interval' duration.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n",
                      "markdown": "`\t// +optional\n\tTargetNamespace string `json:\"targetNamespace,omitempty\"`\n\n\t// Timeout for validation, apply and health checking operations.\n\t// Defaults to 'Interval' duration.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta1/kustomizations.md"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 30,
                  "endLine": 77,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\t// +optional\n    Images []kustomize.Image `json:\"images,omitempty\"`\n\n\t// The name of the Kubernetes service account to impersonate\n\t// when reconciling this Kustomization.\n\t// +optional\n\tServiceAccountName string `json:\"serviceAccountName,omitempty\"`\n",
                    "rendered": {
                      "text": "\t// +optional\n    Images []kustomize.Image `json:\"images,omitempty\"`\n\n\t// The name of the Kubernetes service account to impersonate\n\t// when reconciling this Kustomization.\n\t// +optional\n\tServiceAccountName string `json:\"serviceAccountName,omitempty\"`\n",
                      "markdown": "`\t// +optional\n    Images []kustomize.Image `json:\"images,omitempty\"`\n\n\t// The name of the Kubernetes service account to impersonate\n\t// when reconciling this Kustomization.\n\t// +optional\n\tServiceAccountName string `json:\"serviceAccountName,omitempty\"`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 1242,
                  "startColumn": 12,
                  "endLine": 1242,
                  "endColumn": 21,
                  "snippet": {
                    "text": "              key: awsSecretAccessKey\n        - name: AWS_SESSION_TOKEN\n          valueFrom:\n            secretKeyRef:\n              name: aws-creds\n              key: awsSessionToken\n```\n",
                    "rendered": {
                      "text": "              key: awsSecretAccessKey\n        - name: AWS_SESSION_TOKEN\n          valueFrom:\n            secretKeyRef:\n              name: aws-creds\n              key: awsSessionToken\n```\n",
                      "markdown": "`              key: awsSecretAccessKey\n        - name: AWS_SESSION_TOKEN\n          valueFrom:\n            secretKeyRef:\n              name: aws-creds\n              key: awsSessionToken\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 1237,
                  "startColumn": 12,
                  "endLine": 1237,
                  "endColumn": 21,
                  "snippet": {
                    "text": "              key: awsAccessKeyID\n        - name: AWS_SECRET_ACCESS_KEY\n          valueFrom:\n            secretKeyRef:\n              name: aws-creds\n              key: awsSecretAccessKey\n        - name: AWS_SESSION_TOKEN\n",
                    "rendered": {
                      "text": "              key: awsAccessKeyID\n        - name: AWS_SECRET_ACCESS_KEY\n          valueFrom:\n            secretKeyRef:\n              name: aws-creds\n              key: awsSecretAccessKey\n        - name: AWS_SESSION_TOKEN\n",
                      "markdown": "`              key: awsAccessKeyID\n        - name: AWS_SECRET_ACCESS_KEY\n          valueFrom:\n            secretKeyRef:\n              name: aws-creds\n              key: awsSecretAccessKey\n        - name: AWS_SESSION_TOKEN\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 1232,
                  "startColumn": 12,
                  "endLine": 1232,
                  "endColumn": 21,
                  "snippet": {
                    "text": "        env:\n        - name: AWS_ACCESS_KEY_ID\n          valueFrom:\n            secretKeyRef:\n              name: aws-creds\n              key: awsAccessKeyID\n        - name: AWS_SECRET_ACCESS_KEY\n",
                    "rendered": {
                      "text": "        env:\n        - name: AWS_ACCESS_KEY_ID\n          valueFrom:\n            secretKeyRef:\n              name: aws-creds\n              key: awsAccessKeyID\n        - name: AWS_SECRET_ACCESS_KEY\n",
                      "markdown": "`        env:\n        - name: AWS_ACCESS_KEY_ID\n          valueFrom:\n            secretKeyRef:\n              name: aws-creds\n              key: awsAccessKeyID\n        - name: AWS_SECRET_ACCESS_KEY\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 1170,
                  "startColumn": 7,
                  "endLine": 1170,
                  "endColumn": 18,
                  "snippet": {
                    "text": "      \"type\": \"service_account\",\n      \"project_id\": \"<project-id>\",\n      \"private_key_id\": \"<private-key-id>\",\n      \"private_key\": \"<private-key>\"\n    }\n```\n\n",
                    "rendered": {
                      "text": "      \"type\": \"service_account\",\n      \"project_id\": \"<project-id>\",\n      \"private_key_id\": \"<private-key-id>\",\n      \"private_key\": \"<private-key>\"\n    }\n```\n\n",
                      "markdown": "`      \"type\": \"service_account\",\n      \"project_id\": \"<project-id>\",\n      \"private_key_id\": \"<private-key-id>\",\n      \"private_key\": \"<private-key>\"\n    }\n```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 1169,
                  "startColumn": 7,
                  "endLine": 1169,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    {\n      \"type\": \"service_account\",\n      \"project_id\": \"<project-id>\",\n      \"private_key_id\": \"<private-key-id>\",\n      \"private_key\": \"<private-key>\"\n    }\n```\n",
                    "rendered": {
                      "text": "    {\n      \"type\": \"service_account\",\n      \"project_id\": \"<project-id>\",\n      \"private_key_id\": \"<private-key-id>\",\n      \"private_key\": \"<private-key>\"\n    }\n```\n",
                      "markdown": "`    {\n      \"type\": \"service_account\",\n      \"project_id\": \"<project-id>\",\n      \"private_key_id\": \"<private-key-id>\",\n      \"private_key\": \"<private-key>\"\n    }\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 1126,
                  "startColumn": 7,
                  "endLine": 1126,
                  "endColumn": 15,
                  "snippet": {
                    "text": "      \"appId\": \"559513bd-0c19-4c1a-87cd-851a26afd5fc\",\n      \"displayName\": \"myAKSClusterServicePrincipal\",\n      \"name\": \"http://myAKSClusterServicePrincipal\",\n      \"password\": \"e763725a-5eee-40e8-a466-dc88d980f415\",\n      \"tenant\": \"72f988bf-86f1-41af-91ab-2d7cd011db48\"\n    }\n```\n",
                    "rendered": {
                      "text": "      \"appId\": \"559513bd-0c19-4c1a-87cd-851a26afd5fc\",\n      \"displayName\": \"myAKSClusterServicePrincipal\",\n      \"name\": \"http://myAKSClusterServicePrincipal\",\n      \"password\": \"e763725a-5eee-40e8-a466-dc88d980f415\",\n      \"tenant\": \"72f988bf-86f1-41af-91ab-2d7cd011db48\"\n    }\n```\n",
                      "markdown": "`      \"appId\": \"559513bd-0c19-4c1a-87cd-851a26afd5fc\",\n      \"displayName\": \"myAKSClusterServicePrincipal\",\n      \"name\": \"http://myAKSClusterServicePrincipal\",\n      \"password\": \"e763725a-5eee-40e8-a466-dc88d980f415\",\n      \"tenant\": \"72f988bf-86f1-41af-91ab-2d7cd011db48\"\n    }\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 1019,
                  "startColumn": 23,
                  "endLine": 1019,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\n#### OpenPGP Secret entry\n\nTo specify an OpenPGP (passwordless) keyring in armor format in a Kubernetes\nSecret, suffix the key of the `.data` entry with `.asc`.\n\n```yaml\n",
                    "rendered": {
                      "text": "\n#### OpenPGP Secret entry\n\nTo specify an OpenPGP (passwordless) keyring in armor format in a Kubernetes\nSecret, suffix the key of the `.data` entry with `.asc`.\n\n```yaml\n",
                      "markdown": "`\n#### OpenPGP Secret entry\n\nTo specify an OpenPGP (passwordless) keyring in armor format in a Kubernetes\nSecret, suffix the key of the `.data` entry with `.asc`.\n\n```yaml\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 1403,
                  "startColumn": 15,
                  "endLine": 1403,
                  "endColumn": 22,
                  "snippet": {
                    "text": "secretGenerator:\n  - name: config\n    envs:\n      - config.env.encrypted\n```\n\nFor Docker config files, you need to specify both input and output type as JSON:\n",
                    "rendered": {
                      "text": "secretGenerator:\n  - name: config\n    envs:\n      - config.env.encrypted\n```\n\nFor Docker config files, you need to specify both input and output type as JSON:\n",
                      "markdown": "`secretGenerator:\n  - name: config\n    envs:\n      - config.env.encrypted\n```\n\nFor Docker config files, you need to specify both input and output type as JSON:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 1383,
                  "startColumn": 21,
                  "endLine": 1383,
                  "endColumn": 52,
                  "snippet": {
                    "text": "```sh\nsops -e --input-type=json config.json > config.json.encrypted\nsops -e --input-type=yaml config.yaml > config.yaml.encrypted\nsops -e --input-type=env config.env > config.env.encrypted\n```\n\nFor kustomize-controller to be able to decrypt a JSON config, you need to set the file extension to `.json`:\n",
                    "rendered": {
                      "text": "```sh\nsops -e --input-type=json config.json > config.json.encrypted\nsops -e --input-type=yaml config.yaml > config.yaml.encrypted\nsops -e --input-type=env config.env > config.env.encrypted\n```\n\nFor kustomize-controller to be able to decrypt a JSON config, you need to set the file extension to `.json`:\n",
                      "markdown": "````sh\nsops -e --input-type=json config.json > config.json.encrypted\nsops -e --input-type=yaml config.yaml > config.yaml.encrypted\nsops -e --input-type=env config.env > config.env.encrypted\n```\n\nFor kustomize-controller to be able to decrypt a JSON config, you need to set the file extension to `.json`:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 1252,
                  "startColumn": 25,
                  "endLine": 1252,
                  "endColumn": 59,
                  "snippet": {
                    "text": "allowing you to specify e.g. a `SOPS_KMS_ARN` environment variable.\n\n**Note:**: If you're mounting a secret containing the AWS credentials as a file in the `kustomize-controller` pod,\nyou'd need to specify an environment variable `$HOME`, since the AWS credentials file is expected to be present\nat `~/.aws`, like so:\n```yaml\nenv:\n",
                    "rendered": {
                      "text": "allowing you to specify e.g. a `SOPS_KMS_ARN` environment variable.\n\n**Note:**: If you're mounting a secret containing the AWS credentials as a file in the `kustomize-controller` pod,\nyou'd need to specify an environment variable `$HOME`, since the AWS credentials file is expected to be present\nat `~/.aws`, like so:\n```yaml\nenv:\n",
                      "markdown": "`allowing you to specify e.g. a `SOPS_KMS_ARN` environment variable.\n\n**Note:**: If you're mounting a secret containing the AWS credentials as a file in the `kustomize-controller` pod,\nyou'd need to specify an environment variable `$HOME`, since the AWS credentials file is expected to be present\nat `~/.aws`, like so:\n```yaml\nenv:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 1356,
                  "startColumn": 39,
                  "endLine": 1356,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\n### Kustomize secretGenerator\n\nSOPS encrypted data can be stored as a base64 encoded Secret,\nwhich enables the use of Kustomize `secretGenerator` as follows:\n\n```console\n",
                    "rendered": {
                      "text": "\n### Kustomize secretGenerator\n\nSOPS encrypted data can be stored as a base64 encoded Secret,\nwhich enables the use of Kustomize `secretGenerator` as follows:\n\n```console\n",
                      "markdown": "`\n### Kustomize secretGenerator\n\nSOPS encrypted data can be stored as a base64 encoded Secret,\nwhich enables the use of Kustomize `secretGenerator` as follows:\n\n```console\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 1188,
                  "startColumn": 21,
                  "endLine": 1188,
                  "endColumn": 27,
                  "snippet": {
                    "text": "  namespace: default\ndata:\n  # Exemplary Hashicorp Vault Secret token\n  sops.vault-token: <BASE64>\n```\n\n### Controller global decryption\n",
                    "rendered": {
                      "text": "  namespace: default\ndata:\n  # Exemplary Hashicorp Vault Secret token\n  sops.vault-token: <BASE64>\n```\n\n### Controller global decryption\n",
                      "markdown": "`  namespace: default\ndata:\n  # Exemplary Hashicorp Vault Secret token\n  sops.vault-token: <BASE64>\n```\n\n### Controller global decryption\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 1031,
                  "startColumn": 17,
                  "endLine": 1031,
                  "endColumn": 23,
                  "snippet": {
                    "text": "  namespace: default\ndata:\n  # Exemplary OpenPGP keyring\n  identity.asc: <BASE64>\n```\n\n#### AWS KMS Secret Entry\n",
                    "rendered": {
                      "text": "  namespace: default\ndata:\n  # Exemplary OpenPGP keyring\n  identity.asc: <BASE64>\n```\n\n#### AWS KMS Secret Entry\n",
                      "markdown": "`  namespace: default\ndata:\n  # Exemplary OpenPGP keyring\n  identity.asc: <BASE64>\n```\n\n#### AWS KMS Secret Entry\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 1014,
                  "startColumn": 20,
                  "endLine": 1014,
                  "endColumn": 26,
                  "snippet": {
                    "text": "  namespace: default\ndata:\n  # Exemplary age private key \n  identity.agekey: <BASE64>\n```\n\n#### OpenPGP Secret entry\n",
                    "rendered": {
                      "text": "  namespace: default\ndata:\n  # Exemplary age private key \n  identity.agekey: <BASE64>\n```\n\n#### OpenPGP Secret entry\n",
                      "markdown": "`  namespace: default\ndata:\n  # Exemplary age private key \n  identity.agekey: <BASE64>\n```\n\n#### OpenPGP Secret entry\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 997,
                  "startColumn": 21,
                  "endLine": 997,
                  "endColumn": 27,
                  "snippet": {
                    "text": "  # Exemplary age private key \n  identity.agekey: <BASE64>\n  # Examplary Hashicorp Vault token\n  sops.vault-token: <BASE64>\n```\n\n#### age Secret entry\n",
                    "rendered": {
                      "text": "  # Exemplary age private key \n  identity.agekey: <BASE64>\n  # Examplary Hashicorp Vault token\n  sops.vault-token: <BASE64>\n```\n\n#### age Secret entry\n",
                      "markdown": "`  # Exemplary age private key \n  identity.agekey: <BASE64>\n  # Examplary Hashicorp Vault token\n  sops.vault-token: <BASE64>\n```\n\n#### age Secret entry\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 995,
                  "startColumn": 20,
                  "endLine": 995,
                  "endColumn": 26,
                  "snippet": {
                    "text": "  namespace: default\ndata:\n  # Exemplary age private key \n  identity.agekey: <BASE64>\n  # Examplary Hashicorp Vault token\n  sops.vault-token: <BASE64>\n```\n",
                    "rendered": {
                      "text": "  namespace: default\ndata:\n  # Exemplary age private key \n  identity.agekey: <BASE64>\n  # Examplary Hashicorp Vault token\n  sops.vault-token: <BASE64>\n```\n",
                      "markdown": "`  namespace: default\ndata:\n  # Exemplary age private key \n  identity.agekey: <BASE64>\n  # Examplary Hashicorp Vault token\n  sops.vault-token: <BASE64>\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 1252,
                  "startColumn": 111,
                  "endLine": 1253,
                  "endColumn": 3,
                  "snippet": {
                    "text": "allowing you to specify e.g. a `SOPS_KMS_ARN` environment variable.\n\n**Note:**: If you're mounting a secret containing the AWS credentials as a file in the `kustomize-controller` pod,\nyou'd need to specify an environment variable `$HOME`, since the AWS credentials file is expected to be present\nat `~/.aws`, like so:\n```yaml\nenv:\n  - name: HOME\n",
                    "rendered": {
                      "text": "allowing you to specify e.g. a `SOPS_KMS_ARN` environment variable.\n\n**Note:**: If you're mounting a secret containing the AWS credentials as a file in the `kustomize-controller` pod,\nyou'd need to specify an environment variable `$HOME`, since the AWS credentials file is expected to be present\nat `~/.aws`, like so:\n```yaml\nenv:\n  - name: HOME\n",
                      "markdown": "`allowing you to specify e.g. a `SOPS_KMS_ARN` environment variable.\n\n**Note:**: If you're mounting a secret containing the AWS credentials as a file in the `kustomize-controller` pod,\nyou'd need to specify an environment variable `$HOME`, since the AWS credentials file is expected to be present\nat `~/.aws`, like so:\n```yaml\nenv:\n  - name: HOME\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 1202,
                  "startColumn": 17,
                  "endLine": 1202,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\nWhile making use of the [IAM OIDC provider](https://eksctl.io/usage/iamserviceaccounts/)\non your EKS cluster, you can create an IAM Role and Service Account with access\nto AWS KMS (using at least `kms:Decrypt` and `kms:DescribeKey`). Once these are\ncreated, you can annotate the kustomize-controller Service Account with the\nRole ARN, granting the controller permissions to decrypt the Secrets. Please refer\nto the [SOPS guide](https://fluxcd.io/flux/guides/mozilla-sops/#aws) for detailed steps.\n",
                    "rendered": {
                      "text": "\nWhile making use of the [IAM OIDC provider](https://eksctl.io/usage/iamserviceaccounts/)\non your EKS cluster, you can create an IAM Role and Service Account with access\nto AWS KMS (using at least `kms:Decrypt` and `kms:DescribeKey`). Once these are\ncreated, you can annotate the kustomize-controller Service Account with the\nRole ARN, granting the controller permissions to decrypt the Secrets. Please refer\nto the [SOPS guide](https://fluxcd.io/flux/guides/mozilla-sops/#aws) for detailed steps.\n",
                      "markdown": "`\nWhile making use of the [IAM OIDC provider](https://eksctl.io/usage/iamserviceaccounts/)\non your EKS cluster, you can create an IAM Role and Service Account with access\nto AWS KMS (using at least `kms:Decrypt` and `kms:DescribeKey`). Once these are\ncreated, you can annotate the kustomize-controller Service Account with the\nRole ARN, granting the controller permissions to decrypt the Secrets. Please refer\nto the [SOPS guide](https://fluxcd.io/flux/guides/mozilla-sops/#aws) for detailed steps.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 1087,
                  "startColumn": 74,
                  "endLine": 1088,
                  "endColumn": 8,
                  "snippet": {
                    "text": "To configure a Service Principal with Certificate credentials to access the\nAzure Key Vault, a JSON or YAML object with `tenantId`, `clientId` and\n`clientCertificate` fields must be configured as the `sops.azure-kv` value.\nIt optionally supports `clientCertificateSendChain` and `authorityHost` to\ncontrol the sending of the certificate chain, or to specify an authority host\nother than the Azure Public Cloud endpoint.\n\n```yaml\n",
                    "rendered": {
                      "text": "To configure a Service Principal with Certificate credentials to access the\nAzure Key Vault, a JSON or YAML object with `tenantId`, `clientId` and\n`clientCertificate` fields must be configured as the `sops.azure-kv` value.\nIt optionally supports `clientCertificateSendChain` and `authorityHost` to\ncontrol the sending of the certificate chain, or to specify an authority host\nother than the Azure Public Cloud endpoint.\n\n```yaml\n",
                      "markdown": "`To configure a Service Principal with Certificate credentials to access the\nAzure Key Vault, a JSON or YAML object with `tenantId`, `clientId` and\n`clientCertificate` fields must be configured as the `sops.azure-kv` value.\nIt optionally supports `clientCertificateSendChain` and `authorityHost` to\ncontrol the sending of the certificate chain, or to specify an authority host\nother than the Azure Public Cloud endpoint.\n\n```yaml\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 922,
                  "startColumn": 44,
                  "endLine": 922,
                  "endColumn": 48,
                  "snippet": {
                    "text": "      name: stage-kubeconfig  # Cluster API creates this for the matching Cluster\n```\n\nThe Cluster and Kustomization can be created at the same time.\nThe Kustomization will eventually reconcile once the cluster is available.\n\nIf you wish to target clusters created by other means than CAPI, you can create a ServiceAccount\n",
                    "rendered": {
                      "text": "      name: stage-kubeconfig  # Cluster API creates this for the matching Cluster\n```\n\nThe Cluster and Kustomization can be created at the same time.\nThe Kustomization will eventually reconcile once the cluster is available.\n\nIf you wish to target clusters created by other means than CAPI, you can create a ServiceAccount\n",
                      "markdown": "`      name: stage-kubeconfig  # Cluster API creates this for the matching Cluster\n```\n\nThe Cluster and Kustomization can be created at the same time.\nThe Kustomization will eventually reconcile once the cluster is available.\n\nIf you wish to target clusters created by other means than CAPI, you can create a ServiceAccount\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 826,
                  "startColumn": 41,
                  "endLine": 826,
                  "endColumn": 45,
                  "snippet": {
                    "text": "kustomize.toolkit.fluxcd.io/substitute: disabled\n``` \n\nSubstitution of variables only happens if at least a single variable or resource to substitute\nfrom is defined. This may cause issues if you rely on expressions which should evaluate to a\ndefault, even if no other variables are configured. To work around this, one can set an\narbitrary key/value pair to enable the substitution of variables. For example: \n",
                    "rendered": {
                      "text": "kustomize.toolkit.fluxcd.io/substitute: disabled\n``` \n\nSubstitution of variables only happens if at least a single variable or resource to substitute\nfrom is defined. This may cause issues if you rely on expressions which should evaluate to a\ndefault, even if no other variables are configured. To work around this, one can set an\narbitrary key/value pair to enable the substitution of variables. For example: \n",
                      "markdown": "`kustomize.toolkit.fluxcd.io/substitute: disabled\n``` \n\nSubstitution of variables only happens if at least a single variable or resource to substitute\nfrom is defined. This may cause issues if you rely on expressions which should evaluate to a\ndefault, even if no other variables are configured. To work around this, one can set an\narbitrary key/value pair to enable the substitution of variables. For example: \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 735,
                  "startColumn": 70,
                  "endLine": 736,
                  "endColumn": 3,
                  "snippet": {
                    "text": "The ConfigMap and Secret data keys are used as the var names.\n\nThe `spec.postBuild.substituteFrom.optional` field indicates how the\ncontroller should handle a referenced ConfigMap or Secret being absent\nat renconciliation time. The controller's default behavior ― with\n`optional` unspecified or set to `false` ― has it fail reconciliation if\nthe referenced object is missing. By setting the `optional` field to\n`true`, you can indicate that controller should use the referenced\n",
                    "rendered": {
                      "text": "The ConfigMap and Secret data keys are used as the var names.\n\nThe `spec.postBuild.substituteFrom.optional` field indicates how the\ncontroller should handle a referenced ConfigMap or Secret being absent\nat renconciliation time. The controller's default behavior ― with\n`optional` unspecified or set to `false` ― has it fail reconciliation if\nthe referenced object is missing. By setting the `optional` field to\n`true`, you can indicate that controller should use the referenced\n",
                      "markdown": "`The ConfigMap and Secret data keys are used as the var names.\n\nThe `spec.postBuild.substituteFrom.optional` field indicates how the\ncontroller should handle a referenced ConfigMap or Secret being absent\nat renconciliation time. The controller's default behavior ― with\n`optional` unspecified or set to `false` ― has it fail reconciliation if\nthe referenced object is missing. By setting the `optional` field to\n`true`, you can indicate that controller should use the referenced\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 478,
                  "startColumn": 54,
                  "endLine": 478,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\nBy default, a Kustomization apply runs under the cluster admin account and can create, modify, delete\ncluster level objects (namespaces, CRDs, etc) and namespaced objects (deployments, ingresses, etc).\nFor certain Kustomizations a cluster admin may wish to control what types of Kubernetes objects can\nbe reconciled and under which namespaces.\nTo restrict a Kustomization, one can assign a service account under which the reconciliation is performed.\n\n",
                    "rendered": {
                      "text": "\nBy default, a Kustomization apply runs under the cluster admin account and can create, modify, delete\ncluster level objects (namespaces, CRDs, etc) and namespaced objects (deployments, ingresses, etc).\nFor certain Kustomizations a cluster admin may wish to control what types of Kubernetes objects can\nbe reconciled and under which namespaces.\nTo restrict a Kustomization, one can assign a service account under which the reconciliation is performed.\n\n",
                      "markdown": "`\nBy default, a Kustomization apply runs under the cluster admin account and can create, modify, delete\ncluster level objects (namespaces, CRDs, etc) and namespaced objects (deployments, ingresses, etc).\nFor certain Kustomizations a cluster admin may wish to control what types of Kubernetes objects can\nbe reconciled and under which namespaces.\nTo restrict a Kustomization, one can assign a service account under which the reconciliation is performed.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 474,
                  "startColumn": 20,
                  "endLine": 475,
                  "snippet": {
                    "text": "**Note:** Circular dependencies between Kustomizations must be avoided, otherwise the\ninterdependent Kustomizations will never be applied on the cluster.\n\n## Role-based access control\n\nBy default, a Kustomization apply runs under the cluster admin account and can create, modify, delete\ncluster level objects (namespaces, CRDs, etc) and namespaced objects (deployments, ingresses, etc).\nFor certain Kustomizations a cluster admin may wish to control what types of Kubernetes objects can\n",
                    "rendered": {
                      "text": "**Note:** Circular dependencies between Kustomizations must be avoided, otherwise the\ninterdependent Kustomizations will never be applied on the cluster.\n\n## Role-based access control\n\nBy default, a Kustomization apply runs under the cluster admin account and can create, modify, delete\ncluster level objects (namespaces, CRDs, etc) and namespaced objects (deployments, ingresses, etc).\nFor certain Kustomizations a cluster admin may wish to control what types of Kubernetes objects can\n",
                      "markdown": "`**Note:** Circular dependencies between Kustomizations must be avoided, otherwise the\ninterdependent Kustomizations will never be applied on the cluster.\n\n## Role-based access control\n\nBy default, a Kustomization apply runs under the cluster admin account and can create, modify, delete\ncluster level objects (namespaces, CRDs, etc) and namespaced objects (deployments, ingresses, etc).\nFor certain Kustomizations a cluster admin may wish to control what types of Kubernetes objects can\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 225,
                  "startColumn": 54,
                  "endLine": 225,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\n## Reconciliation\n\nThe Kustomization `spec.interval` tells the controller at which interval to fetch the\nKubernetes manifest for the source, build the Kustomization and apply it on the cluster.\nThe interval time units are `s` and `m` e.g. `interval: 5m`, the minimum value should be over 60 seconds.\n\n",
                    "rendered": {
                      "text": "\n## Reconciliation\n\nThe Kustomization `spec.interval` tells the controller at which interval to fetch the\nKubernetes manifest for the source, build the Kustomization and apply it on the cluster.\nThe interval time units are `s` and `m` e.g. `interval: 5m`, the minimum value should be over 60 seconds.\n\n",
                      "markdown": "`\n## Reconciliation\n\nThe Kustomization `spec.interval` tells the controller at which interval to fetch the\nKubernetes manifest for the source, build the Kustomization and apply it on the cluster.\nThe interval time units are `s` and `m` e.g. `interval: 5m`, the minimum value should be over 60 seconds.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 53,
                  "endLine": 45,
                  "endColumn": 57,
                  "snippet": {
                    "text": "tory named `podinfo` is created that clones the `master` branch\n  and makes the repository content available as an Artifact inside the cluster.\n- A Flux Kustomization named `podinfo` is created that watches the GitRepository for artifact changes.\n- The Kustomization builds the YAML manifests located at the specified `spec.path`,\n  sets the namespace of all objects to the `spec.targetNamespace`,\n  validates the objects against the Kubernetes API, and finally applies them on the cluster. \n- Every ten minutes, the Kustomization runs a server-side apply dry-run to detect and correct drift inside the c",
                    "rendered": {
                      "text": "tory named `podinfo` is created that clones the `master` branch\n  and makes the repository content available as an Artifact inside the cluster.\n- A Flux Kustomization named `podinfo` is created that watches the GitRepository for artifact changes.\n- The Kustomization builds the YAML manifests located at the specified `spec.path`,\n  sets the namespace of all objects to the `spec.targetNamespace`,\n  validates the objects against the Kubernetes API, and finally applies them on the cluster. \n- Every ten minutes, the Kustomization runs a server-side apply dry-run to detect and correct drift inside the c",
                      "markdown": "`tory named `podinfo` is created that clones the `master` branch\n  and makes the repository content available as an Artifact inside the cluster.\n- A Flux Kustomization named `podinfo` is created that watches the GitRepository for artifact changes.\n- The Kustomization builds the YAML manifests located at the specified `spec.path`,\n  sets the namespace of all objects to the `spec.targetNamespace`,\n  validates the objects against the Kubernetes API, and finally applies them on the cluster. \n- Every ten minutes, the Kustomization runs a server-side apply dry-run to detect and correct drift inside the c`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 1515,
                  "startColumn": 15,
                  "endLine": 1515,
                  "endColumn": 24,
                  "snippet": {
                    "text": "  \"name\": \"backend\",\n  \"namespace\": \"default\",\n  \"revision\": \"main@sha1:a1afe267b54f38b46b487f6e938a6fd508278c07\",\n  \"error\": \"The Service 'backend' is invalid: spec.type: Unsupported value: 'Ingress'\"\n}\n```\n",
                    "rendered": {
                      "text": "  \"name\": \"backend\",\n  \"namespace\": \"default\",\n  \"revision\": \"main@sha1:a1afe267b54f38b46b487f6e938a6fd508278c07\",\n  \"error\": \"The Service 'backend' is invalid: spec.type: Unsupported value: 'Ingress'\"\n}\n```\n",
                      "markdown": "`  \"name\": \"backend\",\n  \"namespace\": \"default\",\n  \"revision\": \"main@sha1:a1afe267b54f38b46b487f6e938a6fd508278c07\",\n  \"error\": \"The Service 'backend' is invalid: spec.type: Unsupported value: 'Ingress'\"\n}\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 1494,
                  "startColumn": 17,
                  "endLine": 1494,
                  "endColumn": 26,
                  "snippet": {
                    "text": "status:\n  conditions:\n  - lastTransitionTime: \"2020-09-17T07:26:48Z\"\n    message: \"The Service 'backend' is invalid: spec.type: Unsupported value: 'Ingress'\"\n    reason: ValidationFailed\n    status: \"False\"\n    type: Ready\n",
                    "rendered": {
                      "text": "status:\n  conditions:\n  - lastTransitionTime: \"2020-09-17T07:26:48Z\"\n    message: \"The Service 'backend' is invalid: spec.type: Unsupported value: 'Ingress'\"\n    reason: ValidationFailed\n    status: \"False\"\n    type: Ready\n",
                      "markdown": "`status:\n  conditions:\n  - lastTransitionTime: \"2020-09-17T07:26:48Z\"\n    message: \"The Service 'backend' is invalid: spec.type: Unsupported value: 'Ingress'\"\n    reason: ValidationFailed\n    status: \"False\"\n    type: Ready\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 1431,
                  "startColumn": 97,
                  "endLine": 1431,
                  "endColumn": 106,
                  "snippet": {
                    "text": "```yaml\nconditions:\n- lastTransitionTime: \"2022-10-17T13:40:21Z\"\n  message: Detecting drift for revision main@sha1:a1afe267b54f38b46b487f6e938a6fd508278c07 with a timeout of 50s\n  observedGeneration: 2\n  reason: Progressing\n  status: \"True\"\n",
                    "rendered": {
                      "text": "```yaml\nconditions:\n- lastTransitionTime: \"2022-10-17T13:40:21Z\"\n  message: Detecting drift for revision main@sha1:a1afe267b54f38b46b487f6e938a6fd508278c07 with a timeout of 50s\n  observedGeneration: 2\n  reason: Progressing\n  status: \"True\"\n",
                      "markdown": "````yaml\nconditions:\n- lastTransitionTime: \"2022-10-17T13:40:21Z\"\n  message: Detecting drift for revision main@sha1:a1afe267b54f38b46b487f6e938a6fd508278c07 with a timeout of 50s\n  observedGeneration: 2\n  reason: Progressing\n  status: \"True\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 1425,
                  "startColumn": 5,
                  "endLine": 1425,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\n## Status\n\nEvery time the controller starts reconciling a `Kustomization`, it adds the `Reconciling` condition in `status` and\nupdates its message to report the action performed during a reconciliation run:\n\n```yaml\n",
                    "rendered": {
                      "text": "\n## Status\n\nEvery time the controller starts reconciling a `Kustomization`, it adds the `Reconciling` condition in `status` and\nupdates its message to report the action performed during a reconciliation run:\n\n```yaml\n",
                      "markdown": "`\n## Status\n\nEvery time the controller starts reconciling a `Kustomization`, it adds the `Reconciling` condition in `status` and\nupdates its message to report the action performed during a reconciliation run:\n\n```yaml\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 1406,
                  "startColumn": 3,
                  "endLine": 1406,
                  "endColumn": 11,
                  "snippet": {
                    "text": "      - config.env.encrypted\n```\n\nFor Docker config files, you need to specify both input and output type as JSON:\n\n```sh\nsops -e --input-type=json --output-type=json ghcr.dockerconfigjson > ghcr.dockerconfigjson.encrypted\n",
                    "rendered": {
                      "text": "      - config.env.encrypted\n```\n\nFor Docker config files, you need to specify both input and output type as JSON:\n\n```sh\nsops -e --input-type=json --output-type=json ghcr.dockerconfigjson > ghcr.dockerconfigjson.encrypted\n",
                      "markdown": "`      - config.env.encrypted\n```\n\nFor Docker config files, you need to specify both input and output type as JSON:\n\n```sh\nsops -e --input-type=json --output-type=json ghcr.dockerconfigjson > ghcr.dockerconfigjson.encrypted\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 1361,
                  "startColumn": 1,
                  "endLine": 1361,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\n```console\n$ echo \"my-secret-token\" | sops -e /dev/stdin > token.encrypted\n$ cat <<EOF > kustomization.yaml\napiVersion: kustomize.config.k8s.io/v1beta1\nkind: Kustomization\n\n",
                    "rendered": {
                      "text": "\n```console\n$ echo \"my-secret-token\" | sops -e /dev/stdin > token.encrypted\n$ cat <<EOF > kustomization.yaml\napiVersion: kustomize.config.k8s.io/v1beta1\nkind: Kustomization\n\n",
                      "markdown": "`\n```console\n$ echo \"my-secret-token\" | sops -e /dev/stdin > token.encrypted\n$ cat <<EOF > kustomization.yaml\napiVersion: kustomize.config.k8s.io/v1beta1\nkind: Kustomization\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 1356,
                  "startColumn": 38,
                  "endLine": 1356,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\n### Kustomize secretGenerator\n\nSOPS encrypted data can be stored as a base64 encoded Secret,\nwhich enables the use of Kustomize `secretGenerator` as follows:\n\n```console\n",
                    "rendered": {
                      "text": "\n### Kustomize secretGenerator\n\nSOPS encrypted data can be stored as a base64 encoded Secret,\nwhich enables the use of Kustomize `secretGenerator` as follows:\n\n```console\n",
                      "markdown": "`\n### Kustomize secretGenerator\n\nSOPS encrypted data can be stored as a base64 encoded Secret,\nwhich enables the use of Kustomize `secretGenerator` as follows:\n\n```console\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 1300,
                  "startColumn": 6,
                  "endLine": 1300,
                  "endColumn": 15,
                  "snippet": {
                    "text": "environment variable](https://cloud.google.com/docs/authentication/production)\nis automatically taken into account.\n[Granting permissions](https://cloud.google.com/kms/docs/reference/permissions-and-roles)\nto the Service Account attached to this will therefore be sufficient to decrypt\ndata. When running outside GCP, it is possible to manually patch the\nkustomize-controller Deployment with a valid set of (mounted) credentials.\n\n",
                    "rendered": {
                      "text": "environment variable](https://cloud.google.com/docs/authentication/production)\nis automatically taken into account.\n[Granting permissions](https://cloud.google.com/kms/docs/reference/permissions-and-roles)\nto the Service Account attached to this will therefore be sufficient to decrypt\ndata. When running outside GCP, it is possible to manually patch the\nkustomize-controller Deployment with a valid set of (mounted) credentials.\n\n",
                      "markdown": "`environment variable](https://cloud.google.com/docs/authentication/production)\nis automatically taken into account.\n[Granting permissions](https://cloud.google.com/kms/docs/reference/permissions-and-roles)\nto the Service Account attached to this will therefore be sufficient to decrypt\ndata. When running outside GCP, it is possible to manually patch the\nkustomize-controller Deployment with a valid set of (mounted) credentials.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 1203,
                  "startColumn": 50,
                  "endLine": 1203,
                  "endColumn": 59,
                  "snippet": {
                    "text": "While making use of the [IAM OIDC provider](https://eksctl.io/usage/iamserviceaccounts/)\non your EKS cluster, you can create an IAM Role and Service Account with access\nto AWS KMS (using at least `kms:Decrypt` and `kms:DescribeKey`). Once these are\ncreated, you can annotate the kustomize-controller Service Account with the\nRole ARN, granting the controller permissions to decrypt the Secrets. Please refer\nto the [SOPS guide](https://fluxcd.io/flux/guides/mozilla-sops/#aws) for detailed steps.\n\n",
                    "rendered": {
                      "text": "While making use of the [IAM OIDC provider](https://eksctl.io/usage/iamserviceaccounts/)\non your EKS cluster, you can create an IAM Role and Service Account with access\nto AWS KMS (using at least `kms:Decrypt` and `kms:DescribeKey`). Once these are\ncreated, you can annotate the kustomize-controller Service Account with the\nRole ARN, granting the controller permissions to decrypt the Secrets. Please refer\nto the [SOPS guide](https://fluxcd.io/flux/guides/mozilla-sops/#aws) for detailed steps.\n\n",
                      "markdown": "`While making use of the [IAM OIDC provider](https://eksctl.io/usage/iamserviceaccounts/)\non your EKS cluster, you can create an IAM Role and Service Account with access\nto AWS KMS (using at least `kms:Decrypt` and `kms:DescribeKey`). Once these are\ncreated, you can annotate the kustomize-controller Service Account with the\nRole ARN, granting the controller permissions to decrypt the Secrets. Please refer\nto the [SOPS guide](https://fluxcd.io/flux/guides/mozilla-sops/#aws) for detailed steps.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 1201,
                  "startColumn": 51,
                  "endLine": 1201,
                  "endColumn": 60,
                  "snippet": {
                    "text": "#### AWS KMS\n\nWhile making use of the [IAM OIDC provider](https://eksctl.io/usage/iamserviceaccounts/)\non your EKS cluster, you can create an IAM Role and Service Account with access\nto AWS KMS (using at least `kms:Decrypt` and `kms:DescribeKey`). Once these are\ncreated, you can annotate the kustomize-controller Service Account with the\nRole ARN, granting the controller permissions to decrypt the Secrets. Please refer\n",
                    "rendered": {
                      "text": "#### AWS KMS\n\nWhile making use of the [IAM OIDC provider](https://eksctl.io/usage/iamserviceaccounts/)\non your EKS cluster, you can create an IAM Role and Service Account with access\nto AWS KMS (using at least `kms:Decrypt` and `kms:DescribeKey`). Once these are\ncreated, you can annotate the kustomize-controller Service Account with the\nRole ARN, granting the controller permissions to decrypt the Secrets. Please refer\n",
                      "markdown": "`#### AWS KMS\n\nWhile making use of the [IAM OIDC provider](https://eksctl.io/usage/iamserviceaccounts/)\non your EKS cluster, you can create an IAM Role and Service Account with access\nto AWS KMS (using at least `kms:Decrypt` and `kms:DescribeKey`). Once these are\ncreated, you can annotate the kustomize-controller Service Account with the\nRole ARN, granting the controller permissions to decrypt the Secrets. Please refer\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 1195,
                  "startColumn": 54,
                  "endLine": 1195,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\nOther than [authentication using a Secret reference](#decryption-secret-reference),\nit is possible to specify global decryption settings on the\nkustomize-controller Pod. When the controller fails to find credentials on the\nKustomization object itself, it will fall back to these defaults.\n\n#### AWS KMS\n",
                    "rendered": {
                      "text": "\nOther than [authentication using a Secret reference](#decryption-secret-reference),\nit is possible to specify global decryption settings on the\nkustomize-controller Pod. When the controller fails to find credentials on the\nKustomization object itself, it will fall back to these defaults.\n\n#### AWS KMS\n",
                      "markdown": "`\nOther than [authentication using a Secret reference](#decryption-secret-reference),\nit is possible to specify global decryption settings on the\nkustomize-controller Pod. When the controller fails to find credentials on the\nKustomization object itself, it will fall back to these defaults.\n\n#### AWS KMS\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 1164,
                  "startColumn": 17,
                  "endLine": 1164,
                  "endColumn": 26,
                  "snippet": {
                    "text": "  name: sops-keys\n  namespace: default\nstringData:\n  # Exemplary GCP Service Account credentials file\n  sops.gcp-kms: |\n    {\n      \"type\": \"service_account\",\n",
                    "rendered": {
                      "text": "  name: sops-keys\n  namespace: default\nstringData:\n  # Exemplary GCP Service Account credentials file\n  sops.gcp-kms: |\n    {\n      \"type\": \"service_account\",\n",
                      "markdown": "`  name: sops-keys\n  namespace: default\nstringData:\n  # Exemplary GCP Service Account credentials file\n  sops.gcp-kms: |\n    {\n      \"type\": \"service_account\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 1154,
                  "startColumn": 45,
                  "endLine": 1154,
                  "endColumn": 54,
                  "snippet": {
                    "text": "#### GCP KMS Secret entry\n\nTo specify credentials for GCP KMS in a Kubernetes Secret, append a `.data`\nentry with a fixed `sops.gcp-kms` key and the service account keys as its value.\n\n```yaml\n---\n",
                    "rendered": {
                      "text": "#### GCP KMS Secret entry\n\nTo specify credentials for GCP KMS in a Kubernetes Secret, append a `.data`\nentry with a fixed `sops.gcp-kms` key and the service account keys as its value.\n\n```yaml\n---\n",
                      "markdown": "`#### GCP KMS Secret entry\n\nTo specify credentials for GCP KMS in a Kubernetes Secret, append a `.data`\nentry with a fixed `sops.gcp-kms` key and the service account keys as its value.\n\n```yaml\n---\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 1120,
                  "startColumn": 19,
                  "endLine": 1120,
                  "endColumn": 28,
                  "snippet": {
                    "text": "  name: sops-keys\n  namespace: default\nstringData:\n  # Exemplary Azure Service Principal generated with `az`\n  sops.azure-kv: |\n    {\n      \"appId\": \"559513bd-0c19-4c1a-87cd-851a26afd5fc\",\n",
                    "rendered": {
                      "text": "  name: sops-keys\n  namespace: default\nstringData:\n  # Exemplary Azure Service Principal generated with `az`\n  sops.azure-kv: |\n    {\n      \"appId\": \"559513bd-0c19-4c1a-87cd-851a26afd5fc\",\n",
                      "markdown": "`  name: sops-keys\n  namespace: default\nstringData:\n  # Exemplary Azure Service Principal generated with `az`\n  sops.azure-kv: |\n    {\n      \"appId\": \"559513bd-0c19-4c1a-87cd-851a26afd5fc\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 1108,
                  "startColumn": 14,
                  "endLine": 1108,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n##### `az` generated Service Principal\n\nTo configure a Service Principal [generated using\n`az`](https://docs.microsoft.com/en-us/azure/aks/kubernetes-service-principal?tabs=azure-cli#manually-create-a-service-principal),\nthe output of the command can be directly used as a `sops.azure-kv` value.\n\n",
                    "rendered": {
                      "text": "\n##### `az` generated Service Principal\n\nTo configure a Service Principal [generated using\n`az`](https://docs.microsoft.com/en-us/azure/aks/kubernetes-service-principal?tabs=azure-cli#manually-create-a-service-principal),\nthe output of the command can be directly used as a `sops.azure-kv` value.\n\n",
                      "markdown": "`\n##### `az` generated Service Principal\n\nTo configure a Service Principal [generated using\n`az`](https://docs.microsoft.com/en-us/azure/aks/kubernetes-service-principal?tabs=azure-cli#manually-create-a-service-principal),\nthe output of the command can be directly used as a `sops.azure-kv` value.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 1106,
                  "startColumn": 20,
                  "endLine": 1106,
                  "endColumn": 29,
                  "snippet": {
                    "text": "    clientCertificate: <certificate PEM>\n```\n\n##### `az` generated Service Principal\n\nTo configure a Service Principal [generated using\n`az`](https://docs.microsoft.com/en-us/azure/aks/kubernetes-service-principal?tabs=azure-cli#manually-create-a-service-principal),\n",
                    "rendered": {
                      "text": "    clientCertificate: <certificate PEM>\n```\n\n##### `az` generated Service Principal\n\nTo configure a Service Principal [generated using\n`az`](https://docs.microsoft.com/en-us/azure/aks/kubernetes-service-principal?tabs=azure-cli#manually-create-a-service-principal),\n",
                      "markdown": "`    clientCertificate: <certificate PEM>\n```\n\n##### `az` generated Service Principal\n\nTo configure a Service Principal [generated using\n`az`](https://docs.microsoft.com/en-us/azure/aks/kubernetes-service-principal?tabs=azure-cli#manually-create-a-service-principal),\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 1099,
                  "startColumn": 19,
                  "endLine": 1099,
                  "endColumn": 28,
                  "snippet": {
                    "text": "  name: sops-keys\n  namespace: default\nstringData:\n  # Exemplary Azure Service Principal with Certificate\n  sops.azure-kv: |\n    tenantId: some-tenant-id\n    clientId: some-client-id\n",
                    "rendered": {
                      "text": "  name: sops-keys\n  namespace: default\nstringData:\n  # Exemplary Azure Service Principal with Certificate\n  sops.azure-kv: |\n    tenantId: some-tenant-id\n    clientId: some-client-id\n",
                      "markdown": "`  name: sops-keys\n  namespace: default\nstringData:\n  # Exemplary Azure Service Principal with Certificate\n  sops.azure-kv: |\n    tenantId: some-tenant-id\n    clientId: some-client-id\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 1084,
                  "startColumn": 14,
                  "endLine": 1084,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n##### Service Principal with Certificate\n\nTo configure a Service Principal with Certificate credentials to access the\nAzure Key Vault, a JSON or YAML object with `tenantId`, `clientId` and\n`clientCertificate` fields must be configured as the `sops.azure-kv` value.\nIt optionally supports `clientCertificateSendChain` and `authorityHost` to\n",
                    "rendered": {
                      "text": "\n##### Service Principal with Certificate\n\nTo configure a Service Principal with Certificate credentials to access the\nAzure Key Vault, a JSON or YAML object with `tenantId`, `clientId` and\n`clientCertificate` fields must be configured as the `sops.azure-kv` value.\nIt optionally supports `clientCertificateSendChain` and `authorityHost` to\n",
                      "markdown": "`\n##### Service Principal with Certificate\n\nTo configure a Service Principal with Certificate credentials to access the\nAzure Key Vault, a JSON or YAML object with `tenantId`, `clientId` and\n`clientCertificate` fields must be configured as the `sops.azure-kv` value.\nIt optionally supports `clientCertificateSendChain` and `authorityHost` to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 1082,
                  "startColumn": 5,
                  "endLine": 1082,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    clientSecret: some-client-secret\n```\n\n##### Service Principal with Certificate\n\nTo configure a Service Principal with Certificate credentials to access the\nAzure Key Vault, a JSON or YAML object with `tenantId`, `clientId` and\n",
                    "rendered": {
                      "text": "    clientSecret: some-client-secret\n```\n\n##### Service Principal with Certificate\n\nTo configure a Service Principal with Certificate credentials to access the\nAzure Key Vault, a JSON or YAML object with `tenantId`, `clientId` and\n",
                      "markdown": "`    clientSecret: some-client-secret\n```\n\n##### Service Principal with Certificate\n\nTo configure a Service Principal with Certificate credentials to access the\nAzure Key Vault, a JSON or YAML object with `tenantId`, `clientId` and\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 1075,
                  "startColumn": 19,
                  "endLine": 1075,
                  "endColumn": 28,
                  "snippet": {
                    "text": "  name: sops-keys\n  namespace: default\nstringData:\n  # Exemplary Azure Service Principal with Secret\n  sops.azure-kv: |\n    tenantId: some-tenant-id\n    clientId: some-client-id\n",
                    "rendered": {
                      "text": "  name: sops-keys\n  namespace: default\nstringData:\n  # Exemplary Azure Service Principal with Secret\n  sops.azure-kv: |\n    tenantId: some-tenant-id\n    clientId: some-client-id\n",
                      "markdown": "`  name: sops-keys\n  namespace: default\nstringData:\n  # Exemplary Azure Service Principal with Secret\n  sops.azure-kv: |\n    tenantId: some-tenant-id\n    clientId: some-client-id\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 1061,
                  "startColumn": 14,
                  "endLine": 1061,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n##### Service Principal with Secret\n\nTo configure a Service Principal with Secret credentials to access the Azure\nKey Vault, a JSON or YAML object with `tenantId`, `clientId` and `clientSecret`\nfields must be configured as the `sops.azure-kv` value. It\noptionally supports `authorityHost` to configure an authority host other than\n",
                    "rendered": {
                      "text": "\n##### Service Principal with Secret\n\nTo configure a Service Principal with Secret credentials to access the Azure\nKey Vault, a JSON or YAML object with `tenantId`, `clientId` and `clientSecret`\nfields must be configured as the `sops.azure-kv` value. It\noptionally supports `authorityHost` to configure an authority host other than\n",
                      "markdown": "`\n##### Service Principal with Secret\n\nTo configure a Service Principal with Secret credentials to access the Azure\nKey Vault, a JSON or YAML object with `tenantId`, `clientId` and `clientSecret`\nfields must be configured as the `sops.azure-kv` value. It\noptionally supports `authorityHost` to configure an authority host other than\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 1059,
                  "startColumn": 5,
                  "endLine": 1059,
                  "endColumn": 14,
                  "snippet": {
                    "text": "with a fixed `sops.azure-kv` key. The value can contain a variety of JSON or\nYAML formats depending on the authentication method you want to utilize.\n\n##### Service Principal with Secret\n\nTo configure a Service Principal with Secret credentials to access the Azure\nKey Vault, a JSON or YAML object with `tenantId`, `clientId` and `clientSecret`\n",
                    "rendered": {
                      "text": "with a fixed `sops.azure-kv` key. The value can contain a variety of JSON or\nYAML formats depending on the authentication method you want to utilize.\n\n##### Service Principal with Secret\n\nTo configure a Service Principal with Secret credentials to access the Azure\nKey Vault, a JSON or YAML object with `tenantId`, `clientId` and `clientSecret`\n",
                      "markdown": "`with a fixed `sops.azure-kv` key. The value can contain a variety of JSON or\nYAML formats depending on the authentication method you want to utilize.\n\n##### Service Principal with Secret\n\nTo configure a Service Principal with Secret credentials to access the Azure\nKey Vault, a JSON or YAML object with `tenantId`, `clientId` and `clientSecret`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 945,
                  "startColumn": 55,
                  "endLine": 945,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\n## Secrets decryption\n\nIn order to store secrets safely in a public or private Git repository,\nyou can use [Mozilla SOPS](https://github.com/mozilla/sops)\nand encrypt your Kubernetes Secrets data with [age](https://age-encryption.org/v1/)\nand [OpenPGP](https://www.openpgp.org) keys, or using provider\n",
                    "rendered": {
                      "text": "\n## Secrets decryption\n\nIn order to store secrets safely in a public or private Git repository,\nyou can use [Mozilla SOPS](https://github.com/mozilla/sops)\nand encrypt your Kubernetes Secrets data with [age](https://age-encryption.org/v1/)\nand [OpenPGP](https://www.openpgp.org) keys, or using provider\n",
                      "markdown": "`\n## Secrets decryption\n\nIn order to store secrets safely in a public or private Git repository,\nyou can use [Mozilla SOPS](https://github.com/mozilla/sops)\nand encrypt your Kubernetes Secrets data with [age](https://age-encryption.org/v1/)\nand [OpenPGP](https://www.openpgp.org) keys, or using provider\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 941,
                  "startColumn": 35,
                  "endLine": 941,
                  "endColumn": 44,
                  "snippet": {
                    "text": "per-provider installation of kustomize-controller.\n\nWhen both `spec.kubeConfig` and `spec.ServiceAccountName` are specified,\nthe controller will impersonate the service account on the target cluster.\n\n## Secrets decryption\n\n",
                    "rendered": {
                      "text": "per-provider installation of kustomize-controller.\n\nWhen both `spec.kubeConfig` and `spec.ServiceAccountName` are specified,\nthe controller will impersonate the service account on the target cluster.\n\n## Secrets decryption\n\n",
                      "markdown": "`per-provider installation of kustomize-controller.\n\nWhen both `spec.kubeConfig` and `spec.ServiceAccountName` are specified,\nthe controller will impersonate the service account on the target cluster.\n\n## Secrets decryption\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 925,
                  "startColumn": 6,
                  "endLine": 925,
                  "endColumn": 12,
                  "snippet": {
                    "text": "The Cluster and Kustomization can be created at the same time.\nThe Kustomization will eventually reconcile once the cluster is available.\n\nIf you wish to target clusters created by other means than CAPI, you can create a ServiceAccount\non the remote cluster, generate a KubeConfig for that account, and then create a secret on the\ncluster where kustomize-controller is running e.g.:\n\n",
                    "rendered": {
                      "text": "The Cluster and Kustomization can be created at the same time.\nThe Kustomization will eventually reconcile once the cluster is available.\n\nIf you wish to target clusters created by other means than CAPI, you can create a ServiceAccount\non the remote cluster, generate a KubeConfig for that account, and then create a secret on the\ncluster where kustomize-controller is running e.g.:\n\n",
                      "markdown": "`The Cluster and Kustomization can be created at the same time.\nThe Kustomization will eventually reconcile once the cluster is available.\n\nIf you wish to target clusters created by other means than CAPI, you can create a ServiceAccount\non the remote cluster, generate a KubeConfig for that account, and then create a secret on the\ncluster where kustomize-controller is running e.g.:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 603,
                  "startColumn": 65,
                  "endLine": 603,
                  "endColumn": 74,
                  "snippet": {
                    "text": "[commonLabels](https://kubectl.docs.kubernetes.io/references/kustomize/kustomization/commonlabels/)\nand [commonAnnotations](https://kubectl.docs.kubernetes.io/references/kustomize/kustomization/commonannotations/),\nis that the controller sets the labels and annotations only to the top level `metadata` field,\nwithout patching the Kubernetes Deployment `spec.template` or the Service `spec.selector`.\n\n```yaml\napiVersion: kustomize.toolkit.fluxcd.io/v1beta2\n",
                    "rendered": {
                      "text": "[commonLabels](https://kubectl.docs.kubernetes.io/references/kustomize/kustomization/commonlabels/)\nand [commonAnnotations](https://kubectl.docs.kubernetes.io/references/kustomize/kustomization/commonannotations/),\nis that the controller sets the labels and annotations only to the top level `metadata` field,\nwithout patching the Kubernetes Deployment `spec.template` or the Service `spec.selector`.\n\n```yaml\napiVersion: kustomize.toolkit.fluxcd.io/v1beta2\n",
                      "markdown": "`[commonLabels](https://kubectl.docs.kubernetes.io/references/kustomize/kustomization/commonlabels/)\nand [commonAnnotations](https://kubectl.docs.kubernetes.io/references/kustomize/kustomization/commonannotations/),\nis that the controller sets the labels and annotations only to the top level `metadata` field,\nwithout patching the Kubernetes Deployment `spec.template` or the Service `spec.selector`.\n\n```yaml\napiVersion: kustomize.toolkit.fluxcd.io/v1beta2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 602,
                  "startColumn": 66,
                  "endLine": 602,
                  "endColumn": 71,
                  "snippet": {
                    "text": "The main difference to the Kustomize\n[commonLabels](https://kubectl.docs.kubernetes.io/references/kustomize/kustomization/commonlabels/)\nand [commonAnnotations](https://kubectl.docs.kubernetes.io/references/kustomize/kustomization/commonannotations/),\nis that the controller sets the labels and annotations only to the top level `metadata` field,\nwithout patching the Kubernetes Deployment `spec.template` or the Service `spec.selector`.\n\n```yaml\n",
                    "rendered": {
                      "text": "The main difference to the Kustomize\n[commonLabels](https://kubectl.docs.kubernetes.io/references/kustomize/kustomization/commonlabels/)\nand [commonAnnotations](https://kubectl.docs.kubernetes.io/references/kustomize/kustomization/commonannotations/),\nis that the controller sets the labels and annotations only to the top level `metadata` field,\nwithout patching the Kubernetes Deployment `spec.template` or the Service `spec.selector`.\n\n```yaml\n",
                      "markdown": "`The main difference to the Kustomize\n[commonLabels](https://kubectl.docs.kubernetes.io/references/kustomize/kustomization/commonlabels/)\nand [commonAnnotations](https://kubectl.docs.kubernetes.io/references/kustomize/kustomization/commonannotations/),\nis that the controller sets the labels and annotations only to the top level `metadata` field,\nwithout patching the Kubernetes Deployment `spec.template` or the Service `spec.selector`.\n\n```yaml\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 559,
                  "startColumn": 12,
                  "endLine": 559,
                  "endColumn": 21,
                  "snippet": {
                    "text": "`--default-service-account` flag.\n\nWhen the flag is set, all Kustomizations which don't have `spec.serviceAccountName` specified\nwill use the service account name provided by `--default-service-account=<SA Name>`\nin the namespace of the object.\n\n## Override kustomize config\n",
                    "rendered": {
                      "text": "`--default-service-account` flag.\n\nWhen the flag is set, all Kustomizations which don't have `spec.serviceAccountName` specified\nwill use the service account name provided by `--default-service-account=<SA Name>`\nin the namespace of the object.\n\n## Override kustomize config\n",
                      "markdown": "``--default-service-account` flag.\n\nWhen the flag is set, all Kustomizations which don't have `spec.serviceAccountName` specified\nwill use the service account name provided by `--default-service-account=<SA Name>`\nin the namespace of the object.\n\n## Override kustomize config\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 525,
                  "startColumn": 22,
                  "endLine": 525,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\n**Note:** The namespace, RBAC and service account manifests should be\nplaced in a Git source and applied with a Kustomization. The Kustomizations that\nare running under that service account should depend-on the one that contains the account.\n\nCreate a Kustomization that prevents altering the cluster state outside of the `webapp` namespace:\n\n",
                    "rendered": {
                      "text": "\n**Note:** The namespace, RBAC and service account manifests should be\nplaced in a Git source and applied with a Kustomization. The Kustomizations that\nare running under that service account should depend-on the one that contains the account.\n\nCreate a Kustomization that prevents altering the cluster state outside of the `webapp` namespace:\n\n",
                      "markdown": "`\n**Note:** The namespace, RBAC and service account manifests should be\nplaced in a Git source and applied with a Kustomization. The Kustomizations that\nare running under that service account should depend-on the one that contains the account.\n\nCreate a Kustomization that prevents altering the cluster state outside of the `webapp` namespace:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 524,
                  "startColumn": 11,
                  "endLine": 524,
                  "endColumn": 16,
                  "snippet": {
                    "text": "```\n\n**Note:** The namespace, RBAC and service account manifests should be\nplaced in a Git source and applied with a Kustomization. The Kustomizations that\nare running under that service account should depend-on the one that contains the account.\n\nCreate a Kustomization that prevents altering the cluster state outside of the `webapp` namespace:\n",
                    "rendered": {
                      "text": "```\n\n**Note:** The namespace, RBAC and service account manifests should be\nplaced in a Git source and applied with a Kustomization. The Kustomizations that\nare running under that service account should depend-on the one that contains the account.\n\nCreate a Kustomization that prevents altering the cluster state outside of the `webapp` namespace:\n",
                      "markdown": "````\n\n**Note:** The namespace, RBAC and service account manifests should be\nplaced in a Git source and applied with a Kustomization. The Kustomizations that\nare running under that service account should depend-on the one that contains the account.\n\nCreate a Kustomization that prevents altering the cluster state outside of the `webapp` namespace:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 523,
                  "startColumn": 33,
                  "endLine": 523,
                  "endColumn": 42,
                  "snippet": {
                    "text": "  namespace: webapp\n```\n\n**Note:** The namespace, RBAC and service account manifests should be\nplaced in a Git source and applied with a Kustomization. The Kustomizations that\nare running under that service account should depend-on the one that contains the account.\n\n",
                    "rendered": {
                      "text": "  namespace: webapp\n```\n\n**Note:** The namespace, RBAC and service account manifests should be\nplaced in a Git source and applied with a Kustomization. The Kustomizations that\nare running under that service account should depend-on the one that contains the account.\n\n",
                      "markdown": "`  namespace: webapp\n```\n\n**Note:** The namespace, RBAC and service account manifests should be\nplaced in a Git source and applied with a Kustomization. The Kustomizations that\nare running under that service account should depend-on the one that contains the account.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 480,
                  "startColumn": 45,
                  "endLine": 480,
                  "endColumn": 54,
                  "snippet": {
                    "text": "cluster level objects (namespaces, CRDs, etc) and namespaced objects (deployments, ingresses, etc).\nFor certain Kustomizations a cluster admin may wish to control what types of Kubernetes objects can\nbe reconciled and under which namespaces.\nTo restrict a Kustomization, one can assign a service account under which the reconciliation is performed.\n\nAssuming you want to restrict a group of Kustomizations to a single namespace, you can create an account\nwith a role binding that grants access only to that namespace:\n",
                    "rendered": {
                      "text": "cluster level objects (namespaces, CRDs, etc) and namespaced objects (deployments, ingresses, etc).\nFor certain Kustomizations a cluster admin may wish to control what types of Kubernetes objects can\nbe reconciled and under which namespaces.\nTo restrict a Kustomization, one can assign a service account under which the reconciliation is performed.\n\nAssuming you want to restrict a group of Kustomizations to a single namespace, you can create an account\nwith a role binding that grants access only to that namespace:\n",
                      "markdown": "`cluster level objects (namespaces, CRDs, etc) and namespaced objects (deployments, ingresses, etc).\nFor certain Kustomizations a cluster admin may wish to control what types of Kubernetes objects can\nbe reconciled and under which namespaces.\nTo restrict a Kustomization, one can assign a service account under which the reconciliation is performed.\n\nAssuming you want to restrict a group of Kustomizations to a single namespace, you can create an account\nwith a role binding that grants access only to that namespace:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 478,
                  "startColumn": 46,
                  "endLine": 478,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\nBy default, a Kustomization apply runs under the cluster admin account and can create, modify, delete\ncluster level objects (namespaces, CRDs, etc) and namespaced objects (deployments, ingresses, etc).\nFor certain Kustomizations a cluster admin may wish to control what types of Kubernetes objects can\nbe reconciled and under which namespaces.\nTo restrict a Kustomization, one can assign a service account under which the reconciliation is performed.\n\n",
                    "rendered": {
                      "text": "\nBy default, a Kustomization apply runs under the cluster admin account and can create, modify, delete\ncluster level objects (namespaces, CRDs, etc) and namespaced objects (deployments, ingresses, etc).\nFor certain Kustomizations a cluster admin may wish to control what types of Kubernetes objects can\nbe reconciled and under which namespaces.\nTo restrict a Kustomization, one can assign a service account under which the reconciliation is performed.\n\n",
                      "markdown": "`\nBy default, a Kustomization apply runs under the cluster admin account and can create, modify, delete\ncluster level objects (namespaces, CRDs, etc) and namespaced objects (deployments, ingresses, etc).\nFor certain Kustomizations a cluster admin may wish to control what types of Kubernetes objects can\nbe reconciled and under which namespaces.\nTo restrict a Kustomization, one can assign a service account under which the reconciliation is performed.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 469,
                  "startColumn": 14,
                  "endLine": 469,
                  "endColumn": 23,
                  "snippet": {
                    "text": "```\n\nWhen combined with health assessment, a Kustomization will run after all its dependencies health checks are passing.\nFor example, a service mesh proxy injector should be running before deploying applications inside the mesh.\n\n**Note:** Circular dependencies between Kustomizations must be avoided, otherwise the\ninterdependent Kustomizations will never be applied on the cluster.\n",
                    "rendered": {
                      "text": "```\n\nWhen combined with health assessment, a Kustomization will run after all its dependencies health checks are passing.\nFor example, a service mesh proxy injector should be running before deploying applications inside the mesh.\n\n**Note:** Circular dependencies between Kustomizations must be avoided, otherwise the\ninterdependent Kustomizations will never be applied on the cluster.\n",
                      "markdown": "````\n\nWhen combined with health assessment, a Kustomization will run after all its dependencies health checks are passing.\nFor example, a service mesh proxy injector should be running before deploying applications inside the mesh.\n\n**Note:** Circular dependencies between Kustomizations must be avoided, otherwise the\ninterdependent Kustomizations will never be applied on the cluster.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 379,
                  "startColumn": 61,
                  "endLine": 379,
                  "endColumn": 70,
                  "snippet": {
                    "text": "\nAfter applying the kustomize build output, the controller verifies if the rollout completed successfully.\nIf the deployment was successful, the Kustomization ready condition is marked as `true`,\nif the rollout failed, or if it takes more than the specified timeout to complete, then the\nKustomization ready condition is set to `false`. If the deployment becomes healthy on the next\nexecution, then the Kustomization is marked as ready.\n\n",
                    "rendered": {
                      "text": "\nAfter applying the kustomize build output, the controller verifies if the rollout completed successfully.\nIf the deployment was successful, the Kustomization ready condition is marked as `true`,\nif the rollout failed, or if it takes more than the specified timeout to complete, then the\nKustomization ready condition is set to `false`. If the deployment becomes healthy on the next\nexecution, then the Kustomization is marked as ready.\n\n",
                      "markdown": "`\nAfter applying the kustomize build output, the controller verifies if the rollout completed successfully.\nIf the deployment was successful, the Kustomization ready condition is marked as `true`,\nif the rollout failed, or if it takes more than the specified timeout to complete, then the\nKustomization ready condition is set to `false`. If the deployment becomes healthy on the next\nexecution, then the Kustomization is marked as ready.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 342,
                  "startColumn": 6,
                  "endLine": 342,
                  "endColumn": 12,
                  "snippet": {
                    "text": "  timeout: 2m\n```\n\nIf you wish to select only certain resources, list them under `spec.healthChecks`.\n\n**Note:** When `spec.wait` is enabled, the `spec.healthChecks` field is ignored.\n\n",
                    "rendered": {
                      "text": "  timeout: 2m\n```\n\nIf you wish to select only certain resources, list them under `spec.healthChecks`.\n\n**Note:** When `spec.wait` is enabled, the `spec.healthChecks` field is ignored.\n\n",
                      "markdown": "`  timeout: 2m\n```\n\nIf you wish to select only certain resources, list them under `spec.healthChecks`.\n\n**Note:** When `spec.wait` is enabled, the `spec.healthChecks` field is ignored.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 227,
                  "startColumn": 12,
                  "endLine": 227,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\nThe Kustomization `spec.interval` tells the controller at which interval to fetch the\nKubernetes manifest for the source, build the Kustomization and apply it on the cluster.\nThe interval time units are `s` and `m` e.g. `interval: 5m`, the minimum value should be over 60 seconds.\n\nThe Kustomization execution can be suspended by setting `spec.suspend` to `true`.\n\n",
                    "rendered": {
                      "text": "\nThe Kustomization `spec.interval` tells the controller at which interval to fetch the\nKubernetes manifest for the source, build the Kustomization and apply it on the cluster.\nThe interval time units are `s` and `m` e.g. `interval: 5m`, the minimum value should be over 60 seconds.\n\nThe Kustomization execution can be suspended by setting `spec.suspend` to `true`.\n\n",
                      "markdown": "`\nThe Kustomization `spec.interval` tells the controller at which interval to fetch the\nKubernetes manifest for the source, build the Kustomization and apply it on the cluster.\nThe interval time units are `s` and `m` e.g. `interval: 5m`, the minimum value should be over 60 seconds.\n\nThe Kustomization execution can be suspended by setting `spec.suspend` to `true`.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 213,
                  "startColumn": 38,
                  "endLine": 213,
                  "endColumn": 46,
                  "snippet": {
                    "text": "```\n\nIt is recommended to generate the `kustomization.yaml` on your own and store it in Git, this way you can\nvalidate your manifests in CI (example script [here](https://github.com/fluxcd/flux2-multi-tenancy/blob/main/scripts/validate.sh)).\nAssuming your manifests are inside `apps/my-app`, you can generate a `kustomization.yaml` with:\n\n```sh\n",
                    "rendered": {
                      "text": "```\n\nIt is recommended to generate the `kustomization.yaml` on your own and store it in Git, this way you can\nvalidate your manifests in CI (example script [here](https://github.com/fluxcd/flux2-multi-tenancy/blob/main/scripts/validate.sh)).\nAssuming your manifests are inside `apps/my-app`, you can generate a `kustomization.yaml` with:\n\n```sh\n",
                      "markdown": "````\n\nIt is recommended to generate the `kustomization.yaml` on your own and store it in Git, this way you can\nvalidate your manifests in CI (example script [here](https://github.com/fluxcd/flux2-multi-tenancy/blob/main/scripts/validate.sh)).\nAssuming your manifests are inside `apps/my-app`, you can generate a `kustomization.yaml` with:\n\n```sh\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 10,
                  "endLine": 49,
                  "endColumn": 15,
                  "snippet": {
                    "text": "  sets the namespace of all objects to the `spec.targetNamespace`,\n  validates the objects against the Kubernetes API, and finally applies them on the cluster. \n- Every ten minutes, the Kustomization runs a server-side apply dry-run to detect and correct drift inside the cluster.\n- When the Git revision changes, the manifests are reconciled automatically. If previously applied objects\n  are missing from the current revision, these objects are deleted from the cluster when `spec.prune` is enabled.\n\nYou can run this example by saving the manifest into `podinfo.yaml`.\n",
                    "rendered": {
                      "text": "  sets the namespace of all objects to the `spec.targetNamespace`,\n  validates the objects against the Kubernetes API, and finally applies them on the cluster. \n- Every ten minutes, the Kustomization runs a server-side apply dry-run to detect and correct drift inside the cluster.\n- When the Git revision changes, the manifests are reconciled automatically. If previously applied objects\n  are missing from the current revision, these objects are deleted from the cluster when `spec.prune` is enabled.\n\nYou can run this example by saving the manifest into `podinfo.yaml`.\n",
                      "markdown": "`  sets the namespace of all objects to the `spec.targetNamespace`,\n  validates the objects against the Kubernetes API, and finally applies them on the cluster. \n- Every ten minutes, the Kustomization runs a server-side apply dry-run to detect and correct drift inside the cluster.\n- When the Git revision changes, the manifests are reconciled automatically. If previously applied objects\n  are missing from the current revision, these objects are deleted from the cluster when `spec.prune` is enabled.\n\nYou can run this example by saving the manifest into `podinfo.yaml`.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/docs/spec/v1beta2/kustomizations.md"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 44,
                  "endLine": 11,
                  "endColumn": 49,
                  "snippet": {
                    "text": "## Example\n\nThe following is an example of a Flux Kustomization that reconciles on the\ncluster the Kubernetes manifests stored in a Git repository.\n\n```yaml\napiVersion: source.toolkit.fluxcd.io/v1beta2\n",
                    "rendered": {
                      "text": "## Example\n\nThe following is an example of a Flux Kustomization that reconciles on the\ncluster the Kubernetes manifests stored in a Git repository.\n\n```yaml\napiVersion: source.toolkit.fluxcd.io/v1beta2\n",
                      "markdown": "`## Example\n\nThe following is an example of a Flux Kustomization that reconciles on the\ncluster the Kubernetes manifests stored in a Git repository.\n\n```yaml\napiVersion: source.toolkit.fluxcd.io/v1beta2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/config/crd/bases/kustomize.toolkit.fluxcd.io_kustomizations.yaml"
                },
                "region": {
                  "startLine": 1535,
                  "startColumn": 30,
                  "endLine": 1535,
                  "endColumn": 34,
                  "snippet": {
                    "text": "                type: boolean\n              retryInterval:\n                description: |-\n                  The interval at which to retry a previously failed reconciliation.\n                  When not specified, the controller uses the KustomizationSpec.Interval\n                  value to retry failures.\n                pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                    "rendered": {
                      "text": "                type: boolean\n              retryInterval:\n                description: |-\n                  The interval at which to retry a previously failed reconciliation.\n                  When not specified, the controller uses the KustomizationSpec.Interval\n                  value to retry failures.\n                pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                      "markdown": "`                type: boolean\n              retryInterval:\n                description: |-\n                  The interval at which to retry a previously failed reconciliation.\n                  When not specified, the controller uses the KustomizationSpec.Interval\n                  value to retry failures.\n                pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/config/crd/bases/kustomize.toolkit.fluxcd.io_kustomizations.yaml"
                },
                "region": {
                  "startLine": 1489,
                  "startColumn": 42,
                  "endLine": 1489,
                  "endColumn": 48,
                  "snippet": {
                    "text": "                      The variables defined in your YAML manifests\n                      that match any of the keys defined in the map\n                      will be substituted with the set value.\n                      Includes support for bash string replacement functions\n                      e.g. ${var:=default}, ${var:position} and ${var/substring/replacement}.\n                    type: object\n                  substituteFrom:\n",
                    "rendered": {
                      "text": "                      The variables defined in your YAML manifests\n                      that match any of the keys defined in the map\n                      will be substituted with the set value.\n                      Includes support for bash string replacement functions\n                      e.g. ${var:=default}, ${var:position} and ${var/substring/replacement}.\n                    type: object\n                  substituteFrom:\n",
                      "markdown": "`                      The variables defined in your YAML manifests\n                      that match any of the keys defined in the map\n                      will be substituted with the set value.\n                      Includes support for bash string replacement functions\n                      e.g. ${var:=default}, ${var:position} and ${var/substring/replacement}.\n                    type: object\n                  substituteFrom:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/config/crd/bases/kustomize.toolkit.fluxcd.io_kustomizations.yaml"
                },
                "region": {
                  "startLine": 1277,
                  "startColumn": 80,
                  "endLine": 1277,
                  "endColumn": 84,
                  "snippet": {
                    "text": "                description: |-\n                  The KubeConfig for reconciling the Kustomization on a remote cluster.\n                  When used in combination with KustomizationSpec.ServiceAccountName,\n                  forces the controller to act on behalf of that Service Account at the\n                  target cluster.\n                  If the --default-service-account flag is set, its value will be used as\n                  a controller level fallback for when KustomizationSpec.ServiceAccountName\n",
                    "rendered": {
                      "text": "                description: |-\n                  The KubeConfig for reconciling the Kustomization on a remote cluster.\n                  When used in combination with KustomizationSpec.ServiceAccountName,\n                  forces the controller to act on behalf of that Service Account at the\n                  target cluster.\n                  If the --default-service-account flag is set, its value will be used as\n                  a controller level fallback for when KustomizationSpec.ServiceAccountName\n",
                      "markdown": "`                description: |-\n                  The KubeConfig for reconciling the Kustomization on a remote cluster.\n                  When used in combination with KustomizationSpec.ServiceAccountName,\n                  forces the controller to act on behalf of that Service Account at the\n                  target cluster.\n                  If the --default-service-account flag is set, its value will be used as\n                  a controller level fallback for when KustomizationSpec.ServiceAccountName\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/config/crd/bases/kustomize.toolkit.fluxcd.io_kustomizations.yaml"
                },
                "region": {
                  "startLine": 1270,
                  "startColumn": 41,
                  "endLine": 1270,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                  type: object\n                type: array\n              interval:\n                description: The interval at which to reconcile the Kustomization.\n                pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                type: string\n              kubeConfig:\n",
                    "rendered": {
                      "text": "                  type: object\n                type: array\n              interval:\n                description: The interval at which to reconcile the Kustomization.\n                pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                type: string\n              kubeConfig:\n",
                      "markdown": "`                  type: object\n                type: array\n              interval:\n                description: The interval at which to reconcile the Kustomization.\n                pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                type: string\n              kubeConfig:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/config/crd/bases/kustomize.toolkit.fluxcd.io_kustomizations.yaml"
                },
                "region": {
                  "startLine": 923,
                  "startColumn": 30,
                  "endLine": 923,
                  "endColumn": 34,
                  "snippet": {
                    "text": "                type: boolean\n              retryInterval:\n                description: |-\n                  The interval at which to retry a previously failed reconciliation.\n                  When not specified, the controller uses the KustomizationSpec.Interval\n                  value to retry failures.\n                type: string\n",
                    "rendered": {
                      "text": "                type: boolean\n              retryInterval:\n                description: |-\n                  The interval at which to retry a previously failed reconciliation.\n                  When not specified, the controller uses the KustomizationSpec.Interval\n                  value to retry failures.\n                type: string\n",
                      "markdown": "`                type: boolean\n              retryInterval:\n                description: |-\n                  The interval at which to retry a previously failed reconciliation.\n                  When not specified, the controller uses the KustomizationSpec.Interval\n                  value to retry failures.\n                type: string\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/config/crd/bases/kustomize.toolkit.fluxcd.io_kustomizations.yaml"
                },
                "region": {
                  "startLine": 884,
                  "startColumn": 42,
                  "endLine": 884,
                  "endColumn": 48,
                  "snippet": {
                    "text": "                      The variables defined in your YAML manifests\n                      that match any of the keys defined in the map\n                      will be substituted with the set value.\n                      Includes support for bash string replacement functions\n                      e.g. ${var:=default}, ${var:position} and ${var/substring/replacement}.\n                    type: object\n                  substituteFrom:\n",
                    "rendered": {
                      "text": "                      The variables defined in your YAML manifests\n                      that match any of the keys defined in the map\n                      will be substituted with the set value.\n                      Includes support for bash string replacement functions\n                      e.g. ${var:=default}, ${var:position} and ${var/substring/replacement}.\n                    type: object\n                  substituteFrom:\n",
                      "markdown": "`                      The variables defined in your YAML manifests\n                      that match any of the keys defined in the map\n                      will be substituted with the set value.\n                      Includes support for bash string replacement functions\n                      e.g. ${var:=default}, ${var:position} and ${var/substring/replacement}.\n                    type: object\n                  substituteFrom:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/config/crd/bases/kustomize.toolkit.fluxcd.io_kustomizations.yaml"
                },
                "region": {
                  "startLine": 679,
                  "startColumn": 41,
                  "endLine": 679,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                  type: object\n                type: array\n              interval:\n                description: The interval at which to reconcile the Kustomization.\n                type: string\n              kubeConfig:\n                description: |-\n",
                    "rendered": {
                      "text": "                  type: object\n                type: array\n              interval:\n                description: The interval at which to reconcile the Kustomization.\n                type: string\n              kubeConfig:\n                description: |-\n",
                      "markdown": "`                  type: object\n                type: array\n              interval:\n                description: The interval at which to reconcile the Kustomization.\n                type: string\n              kubeConfig:\n                description: |-\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/config/crd/bases/kustomize.toolkit.fluxcd.io_kustomizations.yaml"
                },
                "region": {
                  "startLine": 359,
                  "startColumn": 30,
                  "endLine": 359,
                  "endColumn": 34,
                  "snippet": {
                    "text": "                type: boolean\n              retryInterval:\n                description: |-\n                  The interval at which to retry a previously failed reconciliation.\n                  When not specified, the controller uses the KustomizationSpec.Interval\n                  value to retry failures.\n                pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                    "rendered": {
                      "text": "                type: boolean\n              retryInterval:\n                description: |-\n                  The interval at which to retry a previously failed reconciliation.\n                  When not specified, the controller uses the KustomizationSpec.Interval\n                  value to retry failures.\n                pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                      "markdown": "`                type: boolean\n              retryInterval:\n                description: |-\n                  The interval at which to retry a previously failed reconciliation.\n                  When not specified, the controller uses the KustomizationSpec.Interval\n                  value to retry failures.\n                pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/config/crd/bases/kustomize.toolkit.fluxcd.io_kustomizations.yaml"
                },
                "region": {
                  "startLine": 312,
                  "startColumn": 42,
                  "endLine": 312,
                  "endColumn": 48,
                  "snippet": {
                    "text": "                      Substitute holds a map of key/value pairs.\n                      The variables defined in your YAML manifests that match any of the keys\n                      defined in the map will be substituted with the set value.\n                      Includes support for bash string replacement functions\n                      e.g. ${var:=default}, ${var:position} and ${var/substring/replacement}.\n                    type: object\n                  substituteFrom:\n",
                    "rendered": {
                      "text": "                      Substitute holds a map of key/value pairs.\n                      The variables defined in your YAML manifests that match any of the keys\n                      defined in the map will be substituted with the set value.\n                      Includes support for bash string replacement functions\n                      e.g. ${var:=default}, ${var:position} and ${var/substring/replacement}.\n                    type: object\n                  substituteFrom:\n",
                      "markdown": "`                      Substitute holds a map of key/value pairs.\n                      The variables defined in your YAML manifests that match any of the keys\n                      defined in the map will be substituted with the set value.\n                      Includes support for bash string replacement functions\n                      e.g. ${var:=default}, ${var:position} and ${var/substring/replacement}.\n                    type: object\n                  substituteFrom:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/config/crd/bases/kustomize.toolkit.fluxcd.io_kustomizations.yaml"
                },
                "region": {
                  "startLine": 194,
                  "startColumn": 80,
                  "endLine": 194,
                  "endColumn": 84,
                  "snippet": {
                    "text": "                description: |-\n                  The KubeConfig for reconciling the Kustomization on a remote cluster.\n                  When used in combination with KustomizationSpec.ServiceAccountName,\n                  forces the controller to act on behalf of that Service Account at the\n                  target cluster.\n                  If the --default-service-account flag is set, its value will be used as\n                  a controller level fallback for when KustomizationSpec.ServiceAccountName\n",
                    "rendered": {
                      "text": "                description: |-\n                  The KubeConfig for reconciling the Kustomization on a remote cluster.\n                  When used in combination with KustomizationSpec.ServiceAccountName,\n                  forces the controller to act on behalf of that Service Account at the\n                  target cluster.\n                  If the --default-service-account flag is set, its value will be used as\n                  a controller level fallback for when KustomizationSpec.ServiceAccountName\n",
                      "markdown": "`                description: |-\n                  The KubeConfig for reconciling the Kustomization on a remote cluster.\n                  When used in combination with KustomizationSpec.ServiceAccountName,\n                  forces the controller to act on behalf of that Service Account at the\n                  target cluster.\n                  If the --default-service-account flag is set, its value will be used as\n                  a controller level fallback for when KustomizationSpec.ServiceAccountName\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/config/crd/bases/kustomize.toolkit.fluxcd.io_kustomizations.yaml"
                },
                "region": {
                  "startLine": 185,
                  "startColumn": 30,
                  "endLine": 185,
                  "endColumn": 34,
                  "snippet": {
                    "text": "                type: array\n              interval:\n                description: |-\n                  The interval at which to reconcile the Kustomization.\n                  This interval is approximate and may be subject to jitter to ensure\n                  efficient use of resources.\n                pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                    "rendered": {
                      "text": "                type: array\n              interval:\n                description: |-\n                  The interval at which to reconcile the Kustomization.\n                  This interval is approximate and may be subject to jitter to ensure\n                  efficient use of resources.\n                pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                      "markdown": "`                type: array\n              interval:\n                description: |-\n                  The interval at which to reconcile the Kustomization.\n                  This interval is approximate and may be subject to jitter to ensure\n                  efficient use of resources.\n                pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/config/crd/bases/kustomize.toolkit.fluxcd.io_kustomizations.yaml"
                },
                "region": {
                  "startLine": 1618,
                  "startColumn": 115,
                  "endLine": 1618,
                  "endColumn": 121,
                  "snippet": {
                    "text": "                    lastTransitionTime:\n                      description: |-\n                        lastTransitionTime is the last time the condition transitioned from one status to another.\n                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.\n                      format: date-time\n                      type: string\n                    message:\n",
                    "rendered": {
                      "text": "                    lastTransitionTime:\n                      description: |-\n                        lastTransitionTime is the last time the condition transitioned from one status to another.\n                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.\n                      format: date-time\n                      type: string\n                    message:\n",
                      "markdown": "`                    lastTransitionTime:\n                      description: |-\n                        lastTransitionTime is the last time the condition transitioned from one status to another.\n                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.\n                      format: date-time\n                      type: string\n                    message:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/config/crd/bases/kustomize.toolkit.fluxcd.io_kustomizations.yaml"
                },
                "region": {
                  "startLine": 1617,
                  "startColumn": 54,
                  "endLine": 1617,
                  "endColumn": 60,
                  "snippet": {
                    "text": "                  properties:\n                    lastTransitionTime:\n                      description: |-\n                        lastTransitionTime is the last time the condition transitioned from one status to another.\n                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.\n                      format: date-time\n                      type: string\n",
                    "rendered": {
                      "text": "                  properties:\n                    lastTransitionTime:\n                      description: |-\n                        lastTransitionTime is the last time the condition transitioned from one status to another.\n                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.\n                      format: date-time\n                      type: string\n",
                      "markdown": "`                  properties:\n                    lastTransitionTime:\n                      description: |-\n                        lastTransitionTime is the last time the condition transitioned from one status to another.\n                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.\n                      format: date-time\n                      type: string\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/config/crd/bases/kustomize.toolkit.fluxcd.io_kustomizations.yaml"
                },
                "region": {
                  "startLine": 1584,
                  "startColumn": 17,
                  "endLine": 1584,
                  "endColumn": 26,
                  "snippet": {
                    "text": "                type: string\n              timeout:\n                description: |-\n                  Timeout for validation, apply and health checking operations.\n                  Defaults to 'Interval' duration.\n                pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                type: string\n",
                    "rendered": {
                      "text": "                type: string\n              timeout:\n                description: |-\n                  Timeout for validation, apply and health checking operations.\n                  Defaults to 'Interval' duration.\n                pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                type: string\n",
                      "markdown": "`                type: string\n              timeout:\n                description: |-\n                  Timeout for validation, apply and health checking operations.\n                  Defaults to 'Interval' duration.\n                pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                type: string\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/config/crd/bases/kustomize.toolkit.fluxcd.io_kustomizations.yaml"
                },
                "region": {
                  "startLine": 1542,
                  "startColumn": 44,
                  "endLine": 1542,
                  "endColumn": 53,
                  "snippet": {
                    "text": "                type: string\n              serviceAccountName:\n                description: |-\n                  The name of the Kubernetes service account to impersonate\n                  when reconciling this Kustomization.\n                type: string\n              sourceRef:\n",
                    "rendered": {
                      "text": "                type: string\n              serviceAccountName:\n                description: |-\n                  The name of the Kubernetes service account to impersonate\n                  when reconciling this Kustomization.\n                type: string\n              sourceRef:\n",
                      "markdown": "`                type: string\n              serviceAccountName:\n                description: |-\n                  The name of the Kubernetes service account to impersonate\n                  when reconciling this Kustomization.\n                type: string\n              sourceRef:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/config/crd/bases/kustomize.toolkit.fluxcd.io_kustomizations.yaml"
                },
                "region": {
                  "startLine": 1489,
                  "startColumn": 42,
                  "endLine": 1489,
                  "endColumn": 48,
                  "snippet": {
                    "text": "                      The variables defined in your YAML manifests\n                      that match any of the keys defined in the map\n                      will be substituted with the set value.\n                      Includes support for bash string replacement functions\n                      e.g. ${var:=default}, ${var:position} and ${var/substring/replacement}.\n                    type: object\n                  substituteFrom:\n",
                    "rendered": {
                      "text": "                      The variables defined in your YAML manifests\n                      that match any of the keys defined in the map\n                      will be substituted with the set value.\n                      Includes support for bash string replacement functions\n                      e.g. ${var:=default}, ${var:position} and ${var/substring/replacement}.\n                    type: object\n                  substituteFrom:\n",
                      "markdown": "`                      The variables defined in your YAML manifests\n                      that match any of the keys defined in the map\n                      will be substituted with the set value.\n                      Includes support for bash string replacement functions\n                      e.g. ${var:=default}, ${var:position} and ${var/substring/replacement}.\n                    type: object\n                  substituteFrom:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/config/crd/bases/kustomize.toolkit.fluxcd.io_kustomizations.yaml"
                },
                "region": {
                  "startLine": 1277,
                  "startColumn": 64,
                  "endLine": 1277,
                  "endColumn": 73,
                  "snippet": {
                    "text": "                description: |-\n                  The KubeConfig for reconciling the Kustomization on a remote cluster.\n                  When used in combination with KustomizationSpec.ServiceAccountName,\n                  forces the controller to act on behalf of that Service Account at the\n                  target cluster.\n                  If the --default-service-account flag is set, its value will be used as\n                  a controller level fallback for when KustomizationSpec.ServiceAccountName\n",
                    "rendered": {
                      "text": "                description: |-\n                  The KubeConfig for reconciling the Kustomization on a remote cluster.\n                  When used in combination with KustomizationSpec.ServiceAccountName,\n                  forces the controller to act on behalf of that Service Account at the\n                  target cluster.\n                  If the --default-service-account flag is set, its value will be used as\n                  a controller level fallback for when KustomizationSpec.ServiceAccountName\n",
                      "markdown": "`                description: |-\n                  The KubeConfig for reconciling the Kustomization on a remote cluster.\n                  When used in combination with KustomizationSpec.ServiceAccountName,\n                  forces the controller to act on behalf of that Service Account at the\n                  target cluster.\n                  If the --default-service-account flag is set, its value will be used as\n                  a controller level fallback for when KustomizationSpec.ServiceAccountName\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/config/crd/bases/kustomize.toolkit.fluxcd.io_kustomizations.yaml"
                },
                "region": {
                  "startLine": 1054,
                  "startColumn": 41,
                  "endLine": 1054,
                  "endColumn": 46,
                  "snippet": {
                    "text": "              lastAppliedRevision:\n                description: |-\n                  The last successfully applied revision.\n                  The revision format for Git sources is <branch|tag>/<commit-sha>.\n                type: string\n              lastAttemptedRevision:\n                description: LastAttemptedRevision is the revision of the last reconciliation\n",
                    "rendered": {
                      "text": "              lastAppliedRevision:\n                description: |-\n                  The last successfully applied revision.\n                  The revision format for Git sources is <branch|tag>/<commit-sha>.\n                type: string\n              lastAttemptedRevision:\n                description: LastAttemptedRevision is the revision of the last reconciliation\n",
                      "markdown": "`              lastAppliedRevision:\n                description: |-\n                  The last successfully applied revision.\n                  The revision format for Git sources is <branch|tag>/<commit-sha>.\n                type: string\n              lastAttemptedRevision:\n                description: LastAttemptedRevision is the revision of the last reconciliation\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/config/crd/bases/kustomize.toolkit.fluxcd.io_kustomizations.yaml"
                },
                "region": {
                  "startLine": 1003,
                  "startColumn": 115,
                  "endLine": 1003,
                  "endColumn": 121,
                  "snippet": {
                    "text": "                    lastTransitionTime:\n                      description: |-\n                        lastTransitionTime is the last time the condition transitioned from one status to another.\n                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.\n                      format: date-time\n                      type: string\n                    message:\n",
                    "rendered": {
                      "text": "                    lastTransitionTime:\n                      description: |-\n                        lastTransitionTime is the last time the condition transitioned from one status to another.\n                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.\n                      format: date-time\n                      type: string\n                    message:\n",
                      "markdown": "`                    lastTransitionTime:\n                      description: |-\n                        lastTransitionTime is the last time the condition transitioned from one status to another.\n                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.\n                      format: date-time\n                      type: string\n                    message:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/config/crd/bases/kustomize.toolkit.fluxcd.io_kustomizations.yaml"
                },
                "region": {
                  "startLine": 1002,
                  "startColumn": 54,
                  "endLine": 1002,
                  "endColumn": 60,
                  "snippet": {
                    "text": "                  properties:\n                    lastTransitionTime:\n                      description: |-\n                        lastTransitionTime is the last time the condition transitioned from one status to another.\n                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.\n                      format: date-time\n                      type: string\n",
                    "rendered": {
                      "text": "                  properties:\n                    lastTransitionTime:\n                      description: |-\n                        lastTransitionTime is the last time the condition transitioned from one status to another.\n                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.\n                      format: date-time\n                      type: string\n",
                      "markdown": "`                  properties:\n                    lastTransitionTime:\n                      description: |-\n                        lastTransitionTime is the last time the condition transitioned from one status to another.\n                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.\n                      format: date-time\n                      type: string\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/config/crd/bases/kustomize.toolkit.fluxcd.io_kustomizations.yaml"
                },
                "region": {
                  "startLine": 970,
                  "startColumn": 17,
                  "endLine": 970,
                  "endColumn": 26,
                  "snippet": {
                    "text": "                type: string\n              timeout:\n                description: |-\n                  Timeout for validation, apply and health checking operations.\n                  Defaults to 'Interval' duration.\n                type: string\n              validation:\n",
                    "rendered": {
                      "text": "                type: string\n              timeout:\n                description: |-\n                  Timeout for validation, apply and health checking operations.\n                  Defaults to 'Interval' duration.\n                type: string\n              validation:\n",
                      "markdown": "`                type: string\n              timeout:\n                description: |-\n                  Timeout for validation, apply and health checking operations.\n                  Defaults to 'Interval' duration.\n                type: string\n              validation:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/config/crd/bases/kustomize.toolkit.fluxcd.io_kustomizations.yaml"
                },
                "region": {
                  "startLine": 929,
                  "startColumn": 44,
                  "endLine": 929,
                  "endColumn": 53,
                  "snippet": {
                    "text": "                type: string\n              serviceAccountName:\n                description: |-\n                  The name of the Kubernetes service account to impersonate\n                  when reconciling this Kustomization.\n                type: string\n              sourceRef:\n",
                    "rendered": {
                      "text": "                type: string\n              serviceAccountName:\n                description: |-\n                  The name of the Kubernetes service account to impersonate\n                  when reconciling this Kustomization.\n                type: string\n              sourceRef:\n",
                      "markdown": "`                type: string\n              serviceAccountName:\n                description: |-\n                  The name of the Kubernetes service account to impersonate\n                  when reconciling this Kustomization.\n                type: string\n              sourceRef:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/config/crd/bases/kustomize.toolkit.fluxcd.io_kustomizations.yaml"
                },
                "region": {
                  "startLine": 884,
                  "startColumn": 42,
                  "endLine": 884,
                  "endColumn": 48,
                  "snippet": {
                    "text": "                      The variables defined in your YAML manifests\n                      that match any of the keys defined in the map\n                      will be substituted with the set value.\n                      Includes support for bash string replacement functions\n                      e.g. ${var:=default}, ${var:position} and ${var/substring/replacement}.\n                    type: object\n                  substituteFrom:\n",
                    "rendered": {
                      "text": "                      The variables defined in your YAML manifests\n                      that match any of the keys defined in the map\n                      will be substituted with the set value.\n                      Includes support for bash string replacement functions\n                      e.g. ${var:=default}, ${var:position} and ${var/substring/replacement}.\n                    type: object\n                  substituteFrom:\n",
                      "markdown": "`                      The variables defined in your YAML manifests\n                      that match any of the keys defined in the map\n                      will be substituted with the set value.\n                      Includes support for bash string replacement functions\n                      e.g. ${var:=default}, ${var:position} and ${var/substring/replacement}.\n                    type: object\n                  substituteFrom:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/config/crd/bases/kustomize.toolkit.fluxcd.io_kustomizations.yaml"
                },
                "region": {
                  "startLine": 436,
                  "startColumn": 115,
                  "endLine": 436,
                  "endColumn": 121,
                  "snippet": {
                    "text": "                    lastTransitionTime:\n                      description: |-\n                        lastTransitionTime is the last time the condition transitioned from one status to another.\n                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.\n                      format: date-time\n                      type: string\n                    message:\n",
                    "rendered": {
                      "text": "                    lastTransitionTime:\n                      description: |-\n                        lastTransitionTime is the last time the condition transitioned from one status to another.\n                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.\n                      format: date-time\n                      type: string\n                    message:\n",
                      "markdown": "`                    lastTransitionTime:\n                      description: |-\n                        lastTransitionTime is the last time the condition transitioned from one status to another.\n                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.\n                      format: date-time\n                      type: string\n                    message:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/config/crd/bases/kustomize.toolkit.fluxcd.io_kustomizations.yaml"
                },
                "region": {
                  "startLine": 435,
                  "startColumn": 54,
                  "endLine": 435,
                  "endColumn": 60,
                  "snippet": {
                    "text": "                  properties:\n                    lastTransitionTime:\n                      description: |-\n                        lastTransitionTime is the last time the condition transitioned from one status to another.\n                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.\n                      format: date-time\n                      type: string\n",
                    "rendered": {
                      "text": "                  properties:\n                    lastTransitionTime:\n                      description: |-\n                        lastTransitionTime is the last time the condition transitioned from one status to another.\n                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.\n                      format: date-time\n                      type: string\n",
                      "markdown": "`                  properties:\n                    lastTransitionTime:\n                      description: |-\n                        lastTransitionTime is the last time the condition transitioned from one status to another.\n                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.\n                      format: date-time\n                      type: string\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/config/crd/bases/kustomize.toolkit.fluxcd.io_kustomizations.yaml"
                },
                "region": {
                  "startLine": 409,
                  "startColumn": 17,
                  "endLine": 409,
                  "endColumn": 26,
                  "snippet": {
                    "text": "                type: string\n              timeout:\n                description: |-\n                  Timeout for validation, apply and health checking operations.\n                  Defaults to 'Interval' duration.\n                pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                type: string\n",
                    "rendered": {
                      "text": "                type: string\n              timeout:\n                description: |-\n                  Timeout for validation, apply and health checking operations.\n                  Defaults to 'Interval' duration.\n                pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                type: string\n",
                      "markdown": "`                type: string\n              timeout:\n                description: |-\n                  Timeout for validation, apply and health checking operations.\n                  Defaults to 'Interval' duration.\n                pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                type: string\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/config/crd/bases/kustomize.toolkit.fluxcd.io_kustomizations.yaml"
                },
                "region": {
                  "startLine": 366,
                  "startColumn": 44,
                  "endLine": 366,
                  "endColumn": 53,
                  "snippet": {
                    "text": "                type: string\n              serviceAccountName:\n                description: |-\n                  The name of the Kubernetes service account to impersonate\n                  when reconciling this Kustomization.\n                type: string\n              sourceRef:\n",
                    "rendered": {
                      "text": "                type: string\n              serviceAccountName:\n                description: |-\n                  The name of the Kubernetes service account to impersonate\n                  when reconciling this Kustomization.\n                type: string\n              sourceRef:\n",
                      "markdown": "`                type: string\n              serviceAccountName:\n                description: |-\n                  The name of the Kubernetes service account to impersonate\n                  when reconciling this Kustomization.\n                type: string\n              sourceRef:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/config/crd/bases/kustomize.toolkit.fluxcd.io_kustomizations.yaml"
                },
                "region": {
                  "startLine": 312,
                  "startColumn": 42,
                  "endLine": 312,
                  "endColumn": 48,
                  "snippet": {
                    "text": "                      Substitute holds a map of key/value pairs.\n                      The variables defined in your YAML manifests that match any of the keys\n                      defined in the map will be substituted with the set value.\n                      Includes support for bash string replacement functions\n                      e.g. ${var:=default}, ${var:position} and ${var/substring/replacement}.\n                    type: object\n                  substituteFrom:\n",
                    "rendered": {
                      "text": "                      Substitute holds a map of key/value pairs.\n                      The variables defined in your YAML manifests that match any of the keys\n                      defined in the map will be substituted with the set value.\n                      Includes support for bash string replacement functions\n                      e.g. ${var:=default}, ${var:position} and ${var/substring/replacement}.\n                    type: object\n                  substituteFrom:\n",
                      "markdown": "`                      Substitute holds a map of key/value pairs.\n                      The variables defined in your YAML manifests that match any of the keys\n                      defined in the map will be substituted with the set value.\n                      Includes support for bash string replacement functions\n                      e.g. ${var:=default}, ${var:position} and ${var/substring/replacement}.\n                    type: object\n                  substituteFrom:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/config/crd/bases/kustomize.toolkit.fluxcd.io_kustomizations.yaml"
                },
                "region": {
                  "startLine": 194,
                  "startColumn": 64,
                  "endLine": 194,
                  "endColumn": 73,
                  "snippet": {
                    "text": "                description: |-\n                  The KubeConfig for reconciling the Kustomization on a remote cluster.\n                  When used in combination with KustomizationSpec.ServiceAccountName,\n                  forces the controller to act on behalf of that Service Account at the\n                  target cluster.\n                  If the --default-service-account flag is set, its value will be used as\n                  a controller level fallback for when KustomizationSpec.ServiceAccountName\n",
                    "rendered": {
                      "text": "                description: |-\n                  The KubeConfig for reconciling the Kustomization on a remote cluster.\n                  When used in combination with KustomizationSpec.ServiceAccountName,\n                  forces the controller to act on behalf of that Service Account at the\n                  target cluster.\n                  If the --default-service-account flag is set, its value will be used as\n                  a controller level fallback for when KustomizationSpec.ServiceAccountName\n",
                      "markdown": "`                description: |-\n                  The KubeConfig for reconciling the Kustomization on a remote cluster.\n                  When used in combination with KustomizationSpec.ServiceAccountName,\n                  forces the controller to act on behalf of that Service Account at the\n                  target cluster.\n                  If the --default-service-account flag is set, its value will be used as\n                  a controller level fallback for when KustomizationSpec.ServiceAccountName\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_controller_test.go"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 17,
                  "endLine": 97,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\n\tg.Eventually(func() bool {\n\t\tvar obj kustomizev1.Kustomization\n\t\terr = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), &obj)\n\t\treturn errors.IsNotFound(err)\n\t}, timeout, time.Second).Should(BeTrue())\n}\n",
                    "rendered": {
                      "text": "\n\tg.Eventually(func() bool {\n\t\tvar obj kustomizev1.Kustomization\n\t\terr = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), &obj)\n\t\treturn errors.IsNotFound(err)\n\t}, timeout, time.Second).Should(BeTrue())\n}\n",
                      "markdown": "`\n\tg.Eventually(func() bool {\n\t\tvar obj kustomizev1.Kustomization\n\t\terr = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), &obj)\n\t\treturn errors.IsNotFound(err)\n\t}, timeout, time.Second).Should(BeTrue())\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_controller_test.go"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 15,
                  "endLine": 89,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\n\tg.Eventually(func() bool {\n\t\tvar obj kustomizev1.Kustomization\n\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), &obj)\n\t\treturn isReconcileSuccess(&obj) && obj.Status.LastAttemptedRevision == \"main/\"+artifactChecksum\n\t}, timeout, time.Second).Should(BeTrue())\n\n",
                    "rendered": {
                      "text": "\n\tg.Eventually(func() bool {\n\t\tvar obj kustomizev1.Kustomization\n\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), &obj)\n\t\treturn isReconcileSuccess(&obj) && obj.Status.LastAttemptedRevision == \"main/\"+artifactChecksum\n\t}, timeout, time.Second).Should(BeTrue())\n\n",
                      "markdown": "`\n\tg.Eventually(func() bool {\n\t\tvar obj kustomizev1.Kustomization\n\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), &obj)\n\t\treturn isReconcileSuccess(&obj) && obj.Status.LastAttemptedRevision == \"main/\"+artifactChecksum\n\t}, timeout, time.Second).Should(BeTrue())\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_controller_test.go"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 19,
                  "endLine": 79,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\t\t\tKind:      sourcev1.GitRepositoryKind,\n\t\t},\n\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\tName: \"kubeconfig\",\n\t\t\t},\n\t\t},\n",
                    "rendered": {
                      "text": "\t\t\tKind:      sourcev1.GitRepositoryKind,\n\t\t},\n\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\tName: \"kubeconfig\",\n\t\t\t},\n\t\t},\n",
                      "markdown": "`\t\t\tKind:      sourcev1.GitRepositoryKind,\n\t\t},\n\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\tName: \"kubeconfig\",\n\t\t\t},\n\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_transformer_test.go"
                },
                "region": {
                  "startLine": 570,
                  "startColumn": 19,
                  "endLine": 570,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t}, timeout, time.Second).Should(BeTrue())\n\n\tvar deployment appsv1.Deployment\n\tg.Expect(k8sClient.Get(context.TODO(), client.ObjectKey{Name: \"podinfo\", Namespace: id}, &deployment)).To(Succeed())\n\n\tt.Run(\"applies patches\", func(t *testing.T) {\n\t\tg.Expect(deployment.ObjectMeta.Labels[\"patch1\"]).To(Equal(\"inline-json\"))\n",
                    "rendered": {
                      "text": "\t}, timeout, time.Second).Should(BeTrue())\n\n\tvar deployment appsv1.Deployment\n\tg.Expect(k8sClient.Get(context.TODO(), client.ObjectKey{Name: \"podinfo\", Namespace: id}, &deployment)).To(Succeed())\n\n\tt.Run(\"applies patches\", func(t *testing.T) {\n\t\tg.Expect(deployment.ObjectMeta.Labels[\"patch1\"]).To(Equal(\"inline-json\"))\n",
                      "markdown": "`\t}, timeout, time.Second).Should(BeTrue())\n\n\tvar deployment appsv1.Deployment\n\tg.Expect(k8sClient.Get(context.TODO(), client.ObjectKey{Name: \"podinfo\", Namespace: id}, &deployment)).To(Succeed())\n\n\tt.Run(\"applies patches\", func(t *testing.T) {\n\t\tg.Expect(deployment.ObjectMeta.Labels[\"patch1\"]).To(Equal(\"inline-json\"))\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_transformer_test.go"
                },
                "region": {
                  "startLine": 565,
                  "startColumn": 15,
                  "endLine": 565,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\n\tg.Eventually(func() bool {\n\t\tvar obj kustomizev1.Kustomization\n\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), &obj)\n\t\treturn obj.Status.LastAppliedRevision == \"main/\"+artifactChecksum\n\t}, timeout, time.Second).Should(BeTrue())\n\n",
                    "rendered": {
                      "text": "\n\tg.Eventually(func() bool {\n\t\tvar obj kustomizev1.Kustomization\n\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), &obj)\n\t\treturn obj.Status.LastAppliedRevision == \"main/\"+artifactChecksum\n\t}, timeout, time.Second).Should(BeTrue())\n\n",
                      "markdown": "`\n\tg.Eventually(func() bool {\n\t\tvar obj kustomizev1.Kustomization\n\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), &obj)\n\t\treturn obj.Status.LastAppliedRevision == \"main/\"+artifactChecksum\n\t}, timeout, time.Second).Should(BeTrue())\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_transformer_test.go"
                },
                "region": {
                  "startLine": 451,
                  "startColumn": 19,
                  "endLine": 451,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t})\n\n\tdeployment := &appsv1.Deployment{}\n\tg.Expect(k8sClient.Get(context.TODO(), types.NamespacedName{\n\t\tName:      \"test-podinfo-transform\",\n\t\tNamespace: deployNamespace,\n\t}, deployment)).To(Succeed())\n",
                    "rendered": {
                      "text": "\t})\n\n\tdeployment := &appsv1.Deployment{}\n\tg.Expect(k8sClient.Get(context.TODO(), types.NamespacedName{\n\t\tName:      \"test-podinfo-transform\",\n\t\tNamespace: deployNamespace,\n\t}, deployment)).To(Succeed())\n",
                      "markdown": "`\t})\n\n\tdeployment := &appsv1.Deployment{}\n\tg.Expect(k8sClient.Get(context.TODO(), types.NamespacedName{\n\t\tName:      \"test-podinfo-transform\",\n\t\tNamespace: deployNamespace,\n\t}, deployment)).To(Succeed())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_transformer_test.go"
                },
                "region": {
                  "startLine": 419,
                  "startColumn": 20,
                  "endLine": 419,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\tquota := &corev1.ResourceQuota{}\n\n\tt.Run(\"namespace and prefix transformers\", func(t *testing.T) {\n\t\tg.Expect(k8sClient.Get(context.TODO(), client.ObjectKey{\n\t\t\tName:      \"test-common-transform\",\n\t\t\tNamespace: deployNamespace,\n\t\t}, quota)).To(Succeed())\n",
                    "rendered": {
                      "text": "\tquota := &corev1.ResourceQuota{}\n\n\tt.Run(\"namespace and prefix transformers\", func(t *testing.T) {\n\t\tg.Expect(k8sClient.Get(context.TODO(), client.ObjectKey{\n\t\t\tName:      \"test-common-transform\",\n\t\t\tNamespace: deployNamespace,\n\t\t}, quota)).To(Succeed())\n",
                      "markdown": "`\tquota := &corev1.ResourceQuota{}\n\n\tt.Run(\"namespace and prefix transformers\", func(t *testing.T) {\n\t\tg.Expect(k8sClient.Get(context.TODO(), client.ObjectKey{\n\t\t\tName:      \"test-common-transform\",\n\t\t\tNamespace: deployNamespace,\n\t\t}, quota)).To(Succeed())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_transformer_test.go"
                },
                "region": {
                  "startLine": 412,
                  "startColumn": 15,
                  "endLine": 412,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\n\tg.Eventually(func() bool {\n\t\tvar obj kustomizev1.Kustomization\n\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), &obj)\n\t\treturn obj.Status.LastAppliedRevision == \"main/\"+artifactChecksum\n\t}, timeout, time.Second).Should(BeTrue())\n\n",
                    "rendered": {
                      "text": "\n\tg.Eventually(func() bool {\n\t\tvar obj kustomizev1.Kustomization\n\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), &obj)\n\t\treturn obj.Status.LastAppliedRevision == \"main/\"+artifactChecksum\n\t}, timeout, time.Second).Should(BeTrue())\n\n",
                      "markdown": "`\n\tg.Eventually(func() bool {\n\t\tvar obj kustomizev1.Kustomization\n\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), &obj)\n\t\treturn obj.Status.LastAppliedRevision == \"main/\"+artifactChecksum\n\t}, timeout, time.Second).Should(BeTrue())\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_transformer_test.go"
                },
                "region": {
                  "startLine": 328,
                  "startColumn": 19,
                  "endLine": 328,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t})\n\n\tdeployment := &appsv1.Deployment{}\n\tg.Expect(k8sClient.Get(context.TODO(), types.NamespacedName{\n\t\tName:      \"test-podinfo-transform\",\n\t\tNamespace: deployNamespace,\n\t}, deployment)).To(Succeed())\n",
                    "rendered": {
                      "text": "\t})\n\n\tdeployment := &appsv1.Deployment{}\n\tg.Expect(k8sClient.Get(context.TODO(), types.NamespacedName{\n\t\tName:      \"test-podinfo-transform\",\n\t\tNamespace: deployNamespace,\n\t}, deployment)).To(Succeed())\n",
                      "markdown": "`\t})\n\n\tdeployment := &appsv1.Deployment{}\n\tg.Expect(k8sClient.Get(context.TODO(), types.NamespacedName{\n\t\tName:      \"test-podinfo-transform\",\n\t\tNamespace: deployNamespace,\n\t}, deployment)).To(Succeed())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_transformer_test.go"
                },
                "region": {
                  "startLine": 296,
                  "startColumn": 20,
                  "endLine": 296,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\tquota := &corev1.ResourceQuota{}\n\n\tt.Run(\"namespace and prefix transformers\", func(t *testing.T) {\n\t\tg.Expect(k8sClient.Get(context.TODO(), client.ObjectKey{\n\t\t\tName:      \"test-common-transform\",\n\t\t\tNamespace: deployNamespace,\n\t\t}, quota)).To(Succeed())\n",
                    "rendered": {
                      "text": "\tquota := &corev1.ResourceQuota{}\n\n\tt.Run(\"namespace and prefix transformers\", func(t *testing.T) {\n\t\tg.Expect(k8sClient.Get(context.TODO(), client.ObjectKey{\n\t\t\tName:      \"test-common-transform\",\n\t\t\tNamespace: deployNamespace,\n\t\t}, quota)).To(Succeed())\n",
                      "markdown": "`\tquota := &corev1.ResourceQuota{}\n\n\tt.Run(\"namespace and prefix transformers\", func(t *testing.T) {\n\t\tg.Expect(k8sClient.Get(context.TODO(), client.ObjectKey{\n\t\t\tName:      \"test-common-transform\",\n\t\t\tNamespace: deployNamespace,\n\t\t}, quota)).To(Succeed())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_transformer_test.go"
                },
                "region": {
                  "startLine": 289,
                  "startColumn": 15,
                  "endLine": 289,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\n\tg.Eventually(func() bool {\n\t\tvar obj kustomizev1.Kustomization\n\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), &obj)\n\t\treturn obj.Status.LastAppliedRevision == \"main/\"+artifactChecksum\n\t}, timeout, time.Second).Should(BeTrue())\n\n",
                    "rendered": {
                      "text": "\n\tg.Eventually(func() bool {\n\t\tvar obj kustomizev1.Kustomization\n\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), &obj)\n\t\treturn obj.Status.LastAppliedRevision == \"main/\"+artifactChecksum\n\t}, timeout, time.Second).Should(BeTrue())\n\n",
                      "markdown": "`\n\tg.Eventually(func() bool {\n\t\tvar obj kustomizev1.Kustomization\n\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), &obj)\n\t\treturn obj.Status.LastAppliedRevision == \"main/\"+artifactChecksum\n\t}, timeout, time.Second).Should(BeTrue())\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_transformer_test.go"
                },
                "region": {
                  "startLine": 230,
                  "startColumn": 20,
                  "endLine": 230,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\n\t\tname := fmt.Sprintf(\"prefix-%s-suffix\", id)\n\t\tvar cm corev1.ConfigMap\n\t\tg.Expect(k8sClient.Get(context.Background(), client.ObjectKey{Name: name, Namespace: id}, &cm)).To(Succeed())\n\t})\n}\n\n",
                    "rendered": {
                      "text": "\n\t\tname := fmt.Sprintf(\"prefix-%s-suffix\", id)\n\t\tvar cm corev1.ConfigMap\n\t\tg.Expect(k8sClient.Get(context.Background(), client.ObjectKey{Name: name, Namespace: id}, &cm)).To(Succeed())\n\t})\n}\n\n",
                      "markdown": "`\n\t\tname := fmt.Sprintf(\"prefix-%s-suffix\", id)\n\t\tvar cm corev1.ConfigMap\n\t\tg.Expect(k8sClient.Get(context.Background(), client.ObjectKey{Name: name, Namespace: id}, &cm)).To(Succeed())\n\t})\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_transformer_test.go"
                },
                "region": {
                  "startLine": 223,
                  "startColumn": 16,
                  "endLine": 223,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\tt.Run(\"sets name prefix and suffix\", func(t *testing.T) {\n\t\tg := NewWithT(t)\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn isReconcileSuccess(resultK)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t\tkstatusCheck.CheckErr(ctx, resultK)\n",
                    "rendered": {
                      "text": "\tt.Run(\"sets name prefix and suffix\", func(t *testing.T) {\n\t\tg := NewWithT(t)\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn isReconcileSuccess(resultK)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t\tkstatusCheck.CheckErr(ctx, resultK)\n",
                      "markdown": "`\tt.Run(\"sets name prefix and suffix\", func(t *testing.T) {\n\t\tg := NewWithT(t)\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn isReconcileSuccess(resultK)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t\tkstatusCheck.CheckErr(ctx, resultK)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_transformer_test.go"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 20,
                  "endLine": 143,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\tkstatusCheck.CheckErr(ctx, resultK)\n\n\t\tvar cm corev1.ConfigMap\n\t\tg.Expect(k8sClient.Get(context.Background(), client.ObjectKey{Name: id, Namespace: id}, &cm)).To(Succeed())\n\t\tg.Expect(cm.GetLabels()).ToNot(HaveKeyWithValue(\"tenant\", id))\n\t\tg.Expect(cm.GetAnnotations()).ToNot(HaveKeyWithValue(\"tenant\", id))\n\t})\n",
                    "rendered": {
                      "text": "\t\tkstatusCheck.CheckErr(ctx, resultK)\n\n\t\tvar cm corev1.ConfigMap\n\t\tg.Expect(k8sClient.Get(context.Background(), client.ObjectKey{Name: id, Namespace: id}, &cm)).To(Succeed())\n\t\tg.Expect(cm.GetLabels()).ToNot(HaveKeyWithValue(\"tenant\", id))\n\t\tg.Expect(cm.GetAnnotations()).ToNot(HaveKeyWithValue(\"tenant\", id))\n\t})\n",
                      "markdown": "`\t\tkstatusCheck.CheckErr(ctx, resultK)\n\n\t\tvar cm corev1.ConfigMap\n\t\tg.Expect(k8sClient.Get(context.Background(), client.ObjectKey{Name: id, Namespace: id}, &cm)).To(Succeed())\n\t\tg.Expect(cm.GetLabels()).ToNot(HaveKeyWithValue(\"tenant\", id))\n\t\tg.Expect(cm.GetAnnotations()).ToNot(HaveKeyWithValue(\"tenant\", id))\n\t})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_transformer_test.go"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 16,
                  "endLine": 137,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\tg.Expect(k8sClient.Update(context.Background(), resultK)).To(Succeed())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn isReconcileSuccess(resultK)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t\tkstatusCheck.CheckErr(ctx, resultK)\n",
                    "rendered": {
                      "text": "\t\tg.Expect(k8sClient.Update(context.Background(), resultK)).To(Succeed())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn isReconcileSuccess(resultK)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t\tkstatusCheck.CheckErr(ctx, resultK)\n",
                      "markdown": "`\t\tg.Expect(k8sClient.Update(context.Background(), resultK)).To(Succeed())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn isReconcileSuccess(resultK)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t\tkstatusCheck.CheckErr(ctx, resultK)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_transformer_test.go"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 20,
                  "endLine": 126,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\tkstatusCheck.CheckErr(ctx, resultK)\n\n\t\tvar cm corev1.ConfigMap\n\t\tg.Expect(k8sClient.Get(context.Background(), client.ObjectKey{Name: id, Namespace: id}, &cm)).To(Succeed())\n\t\tg.Expect(cm.GetLabels()).To(HaveKeyWithValue(\"tenant\", id))\n\t\tg.Expect(cm.GetAnnotations()).To(HaveKeyWithValue(\"tenant\", id))\n\t})\n",
                    "rendered": {
                      "text": "\t\tkstatusCheck.CheckErr(ctx, resultK)\n\n\t\tvar cm corev1.ConfigMap\n\t\tg.Expect(k8sClient.Get(context.Background(), client.ObjectKey{Name: id, Namespace: id}, &cm)).To(Succeed())\n\t\tg.Expect(cm.GetLabels()).To(HaveKeyWithValue(\"tenant\", id))\n\t\tg.Expect(cm.GetAnnotations()).To(HaveKeyWithValue(\"tenant\", id))\n\t})\n",
                      "markdown": "`\t\tkstatusCheck.CheckErr(ctx, resultK)\n\n\t\tvar cm corev1.ConfigMap\n\t\tg.Expect(k8sClient.Get(context.Background(), client.ObjectKey{Name: id, Namespace: id}, &cm)).To(Succeed())\n\t\tg.Expect(cm.GetLabels()).To(HaveKeyWithValue(\"tenant\", id))\n\t\tg.Expect(cm.GetAnnotations()).To(HaveKeyWithValue(\"tenant\", id))\n\t})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_transformer_test.go"
                },
                "region": {
                  "startLine": 120,
                  "startColumn": 16,
                  "endLine": 120,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\tt.Run(\"sets labels and annotations\", func(t *testing.T) {\n\t\tg := NewWithT(t)\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn isReconcileSuccess(resultK)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t\tkstatusCheck.CheckErr(ctx, resultK)\n",
                    "rendered": {
                      "text": "\tt.Run(\"sets labels and annotations\", func(t *testing.T) {\n\t\tg := NewWithT(t)\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn isReconcileSuccess(resultK)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t\tkstatusCheck.CheckErr(ctx, resultK)\n",
                      "markdown": "`\tt.Run(\"sets labels and annotations\", func(t *testing.T) {\n\t\tg := NewWithT(t)\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\treturn isReconcileSuccess(resultK)\n\t\t}, timeout, time.Second).Should(BeTrue())\n\t\tkstatusCheck.CheckErr(ctx, resultK)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_transformer_test.go"
                },
                "region": {
                  "startLine": 515,
                  "startColumn": 20,
                  "endLine": 515,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\t\tInterval: metav1.Duration{Duration: reconciliationInterval},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t\tInterval: metav1.Duration{Duration: reconciliationInterval},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n",
                      "markdown": "`\t\t\tInterval: metav1.Duration{Duration: reconciliationInterval},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_transformer_test.go"
                },
                "region": {
                  "startLine": 396,
                  "startColumn": 20,
                  "endLine": 396,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\t\tInterval: metav1.Duration{Duration: reconciliationInterval},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t\tInterval: metav1.Duration{Duration: reconciliationInterval},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n",
                      "markdown": "`\t\t\tInterval: metav1.Duration{Duration: reconciliationInterval},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_transformer_test.go"
                },
                "region": {
                  "startLine": 273,
                  "startColumn": 20,
                  "endLine": 273,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\t\tInterval: metav1.Duration{Duration: reconciliationInterval},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t\tInterval: metav1.Duration{Duration: reconciliationInterval},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n",
                      "markdown": "`\t\t\tInterval: metav1.Duration{Duration: reconciliationInterval},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_transformer_test.go"
                },
                "region": {
                  "startLine": 203,
                  "startColumn": 20,
                  "endLine": 203,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\t\tInterval: metav1.Duration{Duration: 2 * time.Minute},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t\tInterval: metav1.Duration{Duration: 2 * time.Minute},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n",
                      "markdown": "`\t\t\tInterval: metav1.Duration{Duration: 2 * time.Minute},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_transformer_test.go"
                },
                "region": {
                  "startLine": 94,
                  "startColumn": 20,
                  "endLine": 94,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\t\tInterval: metav1.Duration{Duration: 2 * time.Minute},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t\tInterval: metav1.Duration{Duration: 2 * time.Minute},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n",
                      "markdown": "`\t\t\tInterval: metav1.Duration{Duration: 2 * time.Minute},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_varsub_test.go"
                },
                "region": {
                  "startLine": 559,
                  "startColumn": 16,
                  "endLine": 559,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\tvar resultK kustomizev1.Kustomization\n\tt.Run(\"fails to reconcile\", func(t *testing.T) {\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(inputK), &resultK)\n\t\t\tfor _, c := range resultK.Status.Conditions {\n\t\t\t\tif c.Reason == meta.BuildFailedReason {\n\t\t\t\t\treturn true\n",
                    "rendered": {
                      "text": "\tvar resultK kustomizev1.Kustomization\n\tt.Run(\"fails to reconcile\", func(t *testing.T) {\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(inputK), &resultK)\n\t\t\tfor _, c := range resultK.Status.Conditions {\n\t\t\t\tif c.Reason == meta.BuildFailedReason {\n\t\t\t\t\treturn true\n",
                      "markdown": "`\tvar resultK kustomizev1.Kustomization\n\tt.Run(\"fails to reconcile\", func(t *testing.T) {\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(inputK), &resultK)\n\t\t\tfor _, c := range resultK.Status.Conditions {\n\t\t\t\tif c.Reason == meta.BuildFailedReason {\n\t\t\t\t\treturn true\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_varsub_test.go"
                },
                "region": {
                  "startLine": 474,
                  "startColumn": 19,
                  "endLine": 474,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\tg.Expect(resultRepo.Annotations[\"enabled\"]).To(Equal(\"true\"))\n\n\tresultCM := &corev1.ConfigMap{}\n\tg.Expect(k8sClient.Get(ctx, types.NamespacedName{Name: id, Namespace: id}, resultCM)).Should(Succeed())\n\tg.Expect(resultCM.Data[\"id\"]).To(Equal(\"123\"))\n\tg.Expect(resultCM.Data[\"text\"]).To(ContainSubstring(`${var}`))\n\tg.Expect(resultCM.Data[\"text\"]).ToNot(ContainSubstring(`$${var}`))\n",
                    "rendered": {
                      "text": "\tg.Expect(resultRepo.Annotations[\"enabled\"]).To(Equal(\"true\"))\n\n\tresultCM := &corev1.ConfigMap{}\n\tg.Expect(k8sClient.Get(ctx, types.NamespacedName{Name: id, Namespace: id}, resultCM)).Should(Succeed())\n\tg.Expect(resultCM.Data[\"id\"]).To(Equal(\"123\"))\n\tg.Expect(resultCM.Data[\"text\"]).To(ContainSubstring(`${var}`))\n\tg.Expect(resultCM.Data[\"text\"]).ToNot(ContainSubstring(`$${var}`))\n",
                      "markdown": "`\tg.Expect(resultRepo.Annotations[\"enabled\"]).To(Equal(\"true\"))\n\n\tresultCM := &corev1.ConfigMap{}\n\tg.Expect(k8sClient.Get(ctx, types.NamespacedName{Name: id, Namespace: id}, resultCM)).Should(Succeed())\n\tg.Expect(resultCM.Data[\"id\"]).To(Equal(\"123\"))\n\tg.Expect(resultCM.Data[\"text\"]).To(ContainSubstring(`${var}`))\n\tg.Expect(resultCM.Data[\"text\"]).ToNot(ContainSubstring(`$${var}`))\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_varsub_test.go"
                },
                "region": {
                  "startLine": 467,
                  "startColumn": 19,
                  "endLine": 467,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t}, timeout, interval).Should(BeTrue())\n\n\tresultRepo := &sourcev1.GitRepository{}\n\tg.Expect(k8sClient.Get(ctx, types.NamespacedName{Name: id, Namespace: id}, resultRepo)).Should(Succeed())\n\tg.Expect(resultRepo.Labels[\"id\"]).To(Equal(\"123\"))\n\tg.Expect(resultRepo.Annotations[\"id\"]).To(Equal(\"123\"))\n\tg.Expect(resultRepo.Labels[\"enabled\"]).To(Equal(\"true\"))\n",
                    "rendered": {
                      "text": "\t}, timeout, interval).Should(BeTrue())\n\n\tresultRepo := &sourcev1.GitRepository{}\n\tg.Expect(k8sClient.Get(ctx, types.NamespacedName{Name: id, Namespace: id}, resultRepo)).Should(Succeed())\n\tg.Expect(resultRepo.Labels[\"id\"]).To(Equal(\"123\"))\n\tg.Expect(resultRepo.Annotations[\"id\"]).To(Equal(\"123\"))\n\tg.Expect(resultRepo.Labels[\"enabled\"]).To(Equal(\"true\"))\n",
                      "markdown": "`\t}, timeout, interval).Should(BeTrue())\n\n\tresultRepo := &sourcev1.GitRepository{}\n\tg.Expect(k8sClient.Get(ctx, types.NamespacedName{Name: id, Namespace: id}, resultRepo)).Should(Succeed())\n\tg.Expect(resultRepo.Labels[\"id\"]).To(Equal(\"123\"))\n\tg.Expect(resultRepo.Annotations[\"id\"]).To(Equal(\"123\"))\n\tg.Expect(resultRepo.Labels[\"enabled\"]).To(Equal(\"true\"))\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_varsub_test.go"
                },
                "region": {
                  "startLine": 457,
                  "startColumn": 15,
                  "endLine": 457,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\n\tg.Eventually(func() bool {\n\t\tresultK := &kustomizev1.Kustomization{}\n\t\t_ = k8sClient.Get(ctx, client.ObjectKeyFromObject(inputK), resultK)\n\t\tfor _, c := range resultK.Status.Conditions {\n\t\t\tif c.Reason == meta.ReconciliationSucceededReason {\n\t\t\t\treturn true\n",
                    "rendered": {
                      "text": "\n\tg.Eventually(func() bool {\n\t\tresultK := &kustomizev1.Kustomization{}\n\t\t_ = k8sClient.Get(ctx, client.ObjectKeyFromObject(inputK), resultK)\n\t\tfor _, c := range resultK.Status.Conditions {\n\t\t\tif c.Reason == meta.ReconciliationSucceededReason {\n\t\t\t\treturn true\n",
                      "markdown": "`\n\tg.Eventually(func() bool {\n\t\tresultK := &kustomizev1.Kustomization{}\n\t\t_ = k8sClient.Get(ctx, client.ObjectKeyFromObject(inputK), resultK)\n\t\tfor _, c := range resultK.Status.Conditions {\n\t\t\tif c.Reason == meta.ReconciliationSucceededReason {\n\t\t\t\treturn true\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_varsub_test.go"
                },
                "region": {
                  "startLine": 343,
                  "startColumn": 19,
                  "endLine": 343,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t}\n\n\t// Force a second detectable reconciliation of the Kustomization.\n\tg.Expect(k8sClient.Get(ctx, client.ObjectKeyFromObject(inputK), inputK)).Should(Succeed())\n\tinputK.Status.Conditions = nil\n\tg.Expect(k8sClient.Status().Update(ctx, inputK)).Should(Succeed())\n\tensureReconciles(\" without optional ConfigMap\")\n",
                    "rendered": {
                      "text": "\t}\n\n\t// Force a second detectable reconciliation of the Kustomization.\n\tg.Expect(k8sClient.Get(ctx, client.ObjectKeyFromObject(inputK), inputK)).Should(Succeed())\n\tinputK.Status.Conditions = nil\n\tg.Expect(k8sClient.Status().Update(ctx, inputK)).Should(Succeed())\n\tensureReconciles(\" without optional ConfigMap\")\n",
                      "markdown": "`\t}\n\n\t// Force a second detectable reconciliation of the Kustomization.\n\tg.Expect(k8sClient.Get(ctx, client.ObjectKeyFromObject(inputK), inputK)).Should(Succeed())\n\tinputK.Status.Conditions = nil\n\tg.Expect(k8sClient.Status().Update(ctx, inputK)).Should(Succeed())\n\tensureReconciles(\" without optional ConfigMap\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_varsub_test.go"
                },
                "region": {
                  "startLine": 325,
                  "startColumn": 21,
                  "endLine": 325,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t\t\t\treturn false\n\t\t\t}, timeout, interval).Should(BeTrue())\n\n\t\t\tg.Expect(k8sClient.Get(ctx, types.NamespacedName{Name: id, Namespace: id}, resultSA)).Should(Succeed())\n\t\t})\n\t}\n\n",
                    "rendered": {
                      "text": "\t\t\t\treturn false\n\t\t\t}, timeout, interval).Should(BeTrue())\n\n\t\t\tg.Expect(k8sClient.Get(ctx, types.NamespacedName{Name: id, Namespace: id}, resultSA)).Should(Succeed())\n\t\t})\n\t}\n\n",
                      "markdown": "`\t\t\t\treturn false\n\t\t\t}, timeout, interval).Should(BeTrue())\n\n\t\t\tg.Expect(k8sClient.Get(ctx, types.NamespacedName{Name: id, Namespace: id}, resultSA)).Should(Succeed())\n\t\t})\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_varsub_test.go"
                },
                "region": {
                  "startLine": 316,
                  "startColumn": 17,
                  "endLine": 316,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t\tt.Run(\"reconciles successfully\"+nameSuffix, func(t *testing.T) {\n\t\t\tg.Eventually(func() bool {\n\t\t\t\tresultK := &kustomizev1.Kustomization{}\n\t\t\t\t_ = k8sClient.Get(ctx, client.ObjectKeyFromObject(inputK), resultK)\n\t\t\t\tfor _, c := range resultK.Status.Conditions {\n\t\t\t\t\tif c.Reason == meta.ReconciliationSucceededReason {\n\t\t\t\t\t\treturn true\n",
                    "rendered": {
                      "text": "\t\tt.Run(\"reconciles successfully\"+nameSuffix, func(t *testing.T) {\n\t\t\tg.Eventually(func() bool {\n\t\t\t\tresultK := &kustomizev1.Kustomization{}\n\t\t\t\t_ = k8sClient.Get(ctx, client.ObjectKeyFromObject(inputK), resultK)\n\t\t\t\tfor _, c := range resultK.Status.Conditions {\n\t\t\t\t\tif c.Reason == meta.ReconciliationSucceededReason {\n\t\t\t\t\t\treturn true\n",
                      "markdown": "`\t\tt.Run(\"reconciles successfully\"+nameSuffix, func(t *testing.T) {\n\t\t\tg.Eventually(func() bool {\n\t\t\t\tresultK := &kustomizev1.Kustomization{}\n\t\t\t\t_ = k8sClient.Get(ctx, client.ObjectKeyFromObject(inputK), resultK)\n\t\t\t\tfor _, c := range resultK.Status.Conditions {\n\t\t\t\t\tif c.Reason == meta.ReconciliationSucceededReason {\n\t\t\t\t\t\treturn true\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_varsub_test.go"
                },
                "region": {
                  "startLine": 175,
                  "startColumn": 20,
                  "endLine": 175,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\t}, timeout, interval).Should(BeTrue())\n\n\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, resultSA)).Should(Succeed())\n\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, resultSecret)).Should(Succeed())\n\t})\n\n\tt.Run(\"sets status\", func(t *testing.T) {\n",
                    "rendered": {
                      "text": "\t\t}, timeout, interval).Should(BeTrue())\n\n\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, resultSA)).Should(Succeed())\n\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, resultSecret)).Should(Succeed())\n\t})\n\n\tt.Run(\"sets status\", func(t *testing.T) {\n",
                      "markdown": "`\t\t}, timeout, interval).Should(BeTrue())\n\n\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, resultSA)).Should(Succeed())\n\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, resultSecret)).Should(Succeed())\n\t})\n\n\tt.Run(\"sets status\", func(t *testing.T) {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_varsub_test.go"
                },
                "region": {
                  "startLine": 174,
                  "startColumn": 20,
                  "endLine": 174,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\t\treturn false\n\t\t}, timeout, interval).Should(BeTrue())\n\n\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, resultSA)).Should(Succeed())\n\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, resultSecret)).Should(Succeed())\n\t})\n\n",
                    "rendered": {
                      "text": "\t\t\treturn false\n\t\t}, timeout, interval).Should(BeTrue())\n\n\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, resultSA)).Should(Succeed())\n\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, resultSecret)).Should(Succeed())\n\t})\n\n",
                      "markdown": "`\t\t\treturn false\n\t\t}, timeout, interval).Should(BeTrue())\n\n\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, resultSA)).Should(Succeed())\n\t\tg.Expect(k8sClient.Get(context.Background(), types.NamespacedName{Name: id, Namespace: id}, resultSecret)).Should(Succeed())\n\t})\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_varsub_test.go"
                },
                "region": {
                  "startLine": 165,
                  "startColumn": 16,
                  "endLine": 165,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\n\tt.Run(\"reconciles successfully\", func(t *testing.T) {\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(inputK), resultK)\n\t\t\tfor _, c := range resultK.Status.Conditions {\n\t\t\t\tif c.Reason == meta.ReconciliationSucceededReason {\n\t\t\t\t\treturn true\n",
                    "rendered": {
                      "text": "\n\tt.Run(\"reconciles successfully\", func(t *testing.T) {\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(inputK), resultK)\n\t\t\tfor _, c := range resultK.Status.Conditions {\n\t\t\t\tif c.Reason == meta.ReconciliationSucceededReason {\n\t\t\t\t\treturn true\n",
                      "markdown": "`\n\tt.Run(\"reconciles successfully\", func(t *testing.T) {\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(inputK), resultK)\n\t\t\tfor _, c := range resultK.Status.Conditions {\n\t\t\t\tif c.Reason == meta.ReconciliationSucceededReason {\n\t\t\t\t\treturn true\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_varsub_test.go"
                },
                "region": {
                  "startLine": 535,
                  "startColumn": 20,
                  "endLine": 535,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\t},\n\t\tSpec: kustomizev1.KustomizationSpec{\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t},\n\t\tSpec: kustomizev1.KustomizationSpec{\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n",
                      "markdown": "`\t\t},\n\t\tSpec: kustomizev1.KustomizationSpec{\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_varsub_test.go"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 20,
                  "endLine": 429,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\t},\n\t\tSpec: kustomizev1.KustomizationSpec{\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t},\n\t\tSpec: kustomizev1.KustomizationSpec{\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n",
                      "markdown": "`\t\t},\n\t\tSpec: kustomizev1.KustomizationSpec{\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_varsub_test.go"
                },
                "region": {
                  "startLine": 272,
                  "startColumn": 20,
                  "endLine": 272,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\t},\n\t\tSpec: kustomizev1.KustomizationSpec{\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t},\n\t\tSpec: kustomizev1.KustomizationSpec{\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n",
                      "markdown": "`\t\t},\n\t\tSpec: kustomizev1.KustomizationSpec{\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_varsub_test.go"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 20,
                  "endLine": 123,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\t},\n\t\tSpec: kustomizev1.KustomizationSpec{\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t},\n\t\tSpec: kustomizev1.KustomizationSpec{\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n",
                      "markdown": "`\t\t},\n\t\tSpec: kustomizev1.KustomizationSpec{\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_varsub_test.go"
                },
                "region": {
                  "startLine": 397,
                  "startColumn": 68,
                  "endLine": 398,
                  "snippet": {
                    "text": "  text: |\n    This variable is escaped $${var}\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus at\n    nisl sem. Nullam nec dui ipsum. Nam vehicula volutpat ipsum, ac fringilla\n    nisl convallis sed. Aliquam porttitor turpis finibus, finibus velit ut,\n    imperdiet mauris. Cras nec neque nulla. Maecenas semper nulla et elit\n    dictum sagittis. Quisque tincidunt non diam non ullamcorper. Curabitur\n",
                    "rendered": {
                      "text": "  text: |\n    This variable is escaped $${var}\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus at\n    nisl sem. Nullam nec dui ipsum. Nam vehicula volutpat ipsum, ac fringilla\n    nisl convallis sed. Aliquam porttitor turpis finibus, finibus velit ut,\n    imperdiet mauris. Cras nec neque nulla. Maecenas semper nulla et elit\n    dictum sagittis. Quisque tincidunt non diam non ullamcorper. Curabitur\n",
                      "markdown": "`  text: |\n    This variable is escaped $${var}\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus at\n    nisl sem. Nullam nec dui ipsum. Nam vehicula volutpat ipsum, ac fringilla\n    nisl convallis sed. Aliquam porttitor turpis finibus, finibus velit ut,\n    imperdiet mauris. Cras nec neque nulla. Maecenas semper nulla et elit\n    dictum sagittis. Quisque tincidunt non diam non ullamcorper. Curabitur\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_validation_test.go"
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 16,
                  "endLine": 134,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\tt.Run(\"fails to build invalid overlay\", func(t *testing.T) {\n\t\tvar resultK kustomizev1.Kustomization\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(overlayKs), &resultK)\n\t\t\tfor _, c := range resultK.Status.Conditions {\n\t\t\t\tif c.Reason == meta.BuildFailedReason {\n\t\t\t\t\treturn true\n",
                    "rendered": {
                      "text": "\tt.Run(\"fails to build invalid overlay\", func(t *testing.T) {\n\t\tvar resultK kustomizev1.Kustomization\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(overlayKs), &resultK)\n\t\t\tfor _, c := range resultK.Status.Conditions {\n\t\t\t\tif c.Reason == meta.BuildFailedReason {\n\t\t\t\t\treturn true\n",
                      "markdown": "`\tt.Run(\"fails to build invalid overlay\", func(t *testing.T) {\n\t\tvar resultK kustomizev1.Kustomization\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(overlayKs), &resultK)\n\t\t\tfor _, c := range resultK.Status.Conditions {\n\t\t\t\tif c.Reason == meta.BuildFailedReason {\n\t\t\t\t\treturn true\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_validation_test.go"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 16,
                  "endLine": 121,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\tt.Run(\"fails to build invalid plain yamls\", func(t *testing.T) {\n\t\tvar resultK kustomizev1.Kustomization\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), &resultK)\n\t\t\tfor _, c := range resultK.Status.Conditions {\n\t\t\t\tif c.Reason == meta.BuildFailedReason {\n\t\t\t\t\treturn true\n",
                    "rendered": {
                      "text": "\tt.Run(\"fails to build invalid plain yamls\", func(t *testing.T) {\n\t\tvar resultK kustomizev1.Kustomization\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), &resultK)\n\t\t\tfor _, c := range resultK.Status.Conditions {\n\t\t\t\tif c.Reason == meta.BuildFailedReason {\n\t\t\t\t\treturn true\n",
                      "markdown": "`\tt.Run(\"fails to build invalid plain yamls\", func(t *testing.T) {\n\t\tvar resultK kustomizev1.Kustomization\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), &resultK)\n\t\t\tfor _, c := range resultK.Status.Conditions {\n\t\t\t\tif c.Reason == meta.BuildFailedReason {\n\t\t\t\t\treturn true\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_validation_test.go"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 15,
                  "endLine": 114,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\n\tg.Eventually(func() bool {\n\t\tvar obj kustomizev1.Kustomization\n\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(overlayKs), &obj)\n\t\treturn obj.Status.LastAttemptedRevision == \"main/\"+overlayChecksum\n\t}, timeout, time.Second).Should(BeTrue())\n\n",
                    "rendered": {
                      "text": "\n\tg.Eventually(func() bool {\n\t\tvar obj kustomizev1.Kustomization\n\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(overlayKs), &obj)\n\t\treturn obj.Status.LastAttemptedRevision == \"main/\"+overlayChecksum\n\t}, timeout, time.Second).Should(BeTrue())\n\n",
                      "markdown": "`\n\tg.Eventually(func() bool {\n\t\tvar obj kustomizev1.Kustomization\n\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(overlayKs), &obj)\n\t\treturn obj.Status.LastAttemptedRevision == \"main/\"+overlayChecksum\n\t}, timeout, time.Second).Should(BeTrue())\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_validation_test.go"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 15,
                  "endLine": 99,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\n\tg.Eventually(func() bool {\n\t\tvar obj kustomizev1.Kustomization\n\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), &obj)\n\t\treturn obj.Status.LastAttemptedRevision == \"main/\"+artifactChecksum\n\t}, timeout, time.Second).Should(BeTrue())\n\n",
                    "rendered": {
                      "text": "\n\tg.Eventually(func() bool {\n\t\tvar obj kustomizev1.Kustomization\n\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), &obj)\n\t\treturn obj.Status.LastAttemptedRevision == \"main/\"+artifactChecksum\n\t}, timeout, time.Second).Should(BeTrue())\n\n",
                      "markdown": "`\n\tg.Eventually(func() bool {\n\t\tvar obj kustomizev1.Kustomization\n\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), &obj)\n\t\treturn obj.Status.LastAttemptedRevision == \"main/\"+artifactChecksum\n\t}, timeout, time.Second).Should(BeTrue())\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_validation_test.go"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 20,
                  "endLine": 83,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\t\tInterval: metav1.Duration{Duration: 2 * time.Minute},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t\tInterval: metav1.Duration{Duration: 2 * time.Minute},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n",
                      "markdown": "`\t\t\tInterval: metav1.Duration{Duration: 2 * time.Minute},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_dependson_test.go"
                },
                "region": {
                  "startLine": 181,
                  "startColumn": 16,
                  "endLine": 181,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\t}, timeout, time.Second).Should(BeNil())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\tready := apimeta.FindStatusCondition(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t\treturn ready.Reason == meta.DependencyNotReadyReason\n\t\t}, timeout, time.Second).Should(BeTrue())\n",
                    "rendered": {
                      "text": "\t\t}, timeout, time.Second).Should(BeNil())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\tready := apimeta.FindStatusCondition(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t\treturn ready.Reason == meta.DependencyNotReadyReason\n\t\t}, timeout, time.Second).Should(BeTrue())\n",
                      "markdown": "`\t\t}, timeout, time.Second).Should(BeNil())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\tready := apimeta.FindStatusCondition(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t\treturn ready.Reason == meta.DependencyNotReadyReason\n\t\t}, timeout, time.Second).Should(BeTrue())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_dependson_test.go"
                },
                "region": {
                  "startLine": 170,
                  "startColumn": 16,
                  "endLine": 170,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\tt.Run(\"fails due to dependency not found\", func(t *testing.T) {\n\t\tg := NewWithT(t)\n\t\tg.Eventually(func() error {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\tresultK.Spec.DependsOn = []meta.NamespacedObjectReference{\n\t\t\t\t{\n\t\t\t\t\tNamespace: id,\n",
                    "rendered": {
                      "text": "\tt.Run(\"fails due to dependency not found\", func(t *testing.T) {\n\t\tg := NewWithT(t)\n\t\tg.Eventually(func() error {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\tresultK.Spec.DependsOn = []meta.NamespacedObjectReference{\n\t\t\t\t{\n\t\t\t\t\tNamespace: id,\n",
                      "markdown": "`\tt.Run(\"fails due to dependency not found\", func(t *testing.T) {\n\t\tg := NewWithT(t)\n\t\tg.Eventually(func() error {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\tresultK.Spec.DependsOn = []meta.NamespacedObjectReference{\n\t\t\t\t{\n\t\t\t\t\tNamespace: id,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_dependson_test.go"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 16,
                  "endLine": 161,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\tready := apimeta.FindStatusCondition(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t\treturn ready.Reason == meta.ReconciliationSucceededReason\n\t\t}, timeout, time.Second).Should(BeTrue())\n",
                    "rendered": {
                      "text": "\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\tready := apimeta.FindStatusCondition(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t\treturn ready.Reason == meta.ReconciliationSucceededReason\n\t\t}, timeout, time.Second).Should(BeTrue())\n",
                      "markdown": "`\t\tg.Expect(err).NotTo(HaveOccurred())\n\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\tready := apimeta.FindStatusCondition(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t\treturn ready.Reason == meta.ReconciliationSucceededReason\n\t\t}, timeout, time.Second).Should(BeTrue())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_dependson_test.go"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 16,
                  "endLine": 149,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\tt.Run(\"fails due to source not found\", func(t *testing.T) {\n\t\tg := NewWithT(t)\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\tready := apimeta.FindStatusCondition(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t\treturn ready.Reason == meta.ArtifactFailedReason\n\t\t}, timeout, time.Second).Should(BeTrue())\n",
                    "rendered": {
                      "text": "\tt.Run(\"fails due to source not found\", func(t *testing.T) {\n\t\tg := NewWithT(t)\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\tready := apimeta.FindStatusCondition(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t\treturn ready.Reason == meta.ArtifactFailedReason\n\t\t}, timeout, time.Second).Should(BeTrue())\n",
                      "markdown": "`\tt.Run(\"fails due to source not found\", func(t *testing.T) {\n\t\tg := NewWithT(t)\n\t\tg.Eventually(func() bool {\n\t\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\t\tready := apimeta.FindStatusCondition(resultK.Status.Conditions, meta.ReadyCondition)\n\t\t\treturn ready.Reason == meta.ArtifactFailedReason\n\t\t}, timeout, time.Second).Should(BeTrue())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_dependson_test.go"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 15,
                  "endLine": 142,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\tresultK := &kustomizev1.Kustomization{}\n\n\tg.Eventually(func() bool {\n\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\treturn apimeta.FindStatusCondition(resultK.Status.Conditions, meta.ReadyCondition) != nil\n\t}, timeout, time.Second).Should(BeTrue())\n\n",
                    "rendered": {
                      "text": "\tresultK := &kustomizev1.Kustomization{}\n\n\tg.Eventually(func() bool {\n\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\treturn apimeta.FindStatusCondition(resultK.Status.Conditions, meta.ReadyCondition) != nil\n\t}, timeout, time.Second).Should(BeTrue())\n\n",
                      "markdown": "`\tresultK := &kustomizev1.Kustomization{}\n\n\tg.Eventually(func() bool {\n\t\t_ = k8sClient.Get(context.Background(), client.ObjectKeyFromObject(kustomization), resultK)\n\t\treturn apimeta.FindStatusCondition(resultK.Status.Conditions, meta.ReadyCondition) != nil\n\t}, timeout, time.Second).Should(BeTrue())\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/controller/kustomization_dependson_test.go"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 20,
                  "endLine": 123,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\t\tInterval: metav1.Duration{Duration: reconciliationInterval},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t\tInterval: metav1.Duration{Duration: reconciliationInterval},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n",
                      "markdown": "`\t\t\tInterval: metav1.Duration{Duration: reconciliationInterval},\n\t\t\tPath:     \"./\",\n\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t},\n\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/decryptor/decryptor.go"
                },
                "region": {
                  "startLine": 212,
                  "startColumn": 20,
                  "endLine": 212,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\t}\n\n\t\tvar secret corev1.Secret\n\t\tif err := d.client.Get(ctx, secretName, &secret); err != nil {\n\t\t\tif apierrors.IsNotFound(err) {\n\t\t\t\treturn err\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t}\n\n\t\tvar secret corev1.Secret\n\t\tif err := d.client.Get(ctx, secretName, &secret); err != nil {\n\t\t\tif apierrors.IsNotFound(err) {\n\t\t\t\treturn err\n\t\t\t}\n",
                      "markdown": "`\t\t}\n\n\t\tvar secret corev1.Secret\n\t\tif err := d.client.Get(ctx, secretName, &secret); err != nil {\n\t\t\tif apierrors.IsNotFound(err) {\n\t\t\t\treturn err\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/decryptor/decryptor.go"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 13,
                  "endLine": 103,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\tsopsFormatToMarkerBytes = map[formats.Format][]byte{\n\t\t// formats.Binary is a JSON envelop at encrypted rest\n\t\tformats.Binary: []byte(\"\\\"mac\\\": \\\"ENC[\"),\n\t\tformats.Dotenv: []byte(\"sops_mac=ENC[\"),\n\t\tformats.Ini:    []byte(\"[sops]\"),\n\t\tformats.Json:   []byte(\"\\\"mac\\\": \\\"ENC[\"),\n\t\tformats.Yaml:   []byte(\"mac: ENC[\"),\n",
                    "rendered": {
                      "text": "\tsopsFormatToMarkerBytes = map[formats.Format][]byte{\n\t\t// formats.Binary is a JSON envelop at encrypted rest\n\t\tformats.Binary: []byte(\"\\\"mac\\\": \\\"ENC[\"),\n\t\tformats.Dotenv: []byte(\"sops_mac=ENC[\"),\n\t\tformats.Ini:    []byte(\"[sops]\"),\n\t\tformats.Json:   []byte(\"\\\"mac\\\": \\\"ENC[\"),\n\t\tformats.Yaml:   []byte(\"mac: ENC[\"),\n",
                      "markdown": "`\tsopsFormatToMarkerBytes = map[formats.Format][]byte{\n\t\t// formats.Binary is a JSON envelop at encrypted rest\n\t\tformats.Binary: []byte(\"\\\"mac\\\": \\\"ENC[\"),\n\t\tformats.Dotenv: []byte(\"sops_mac=ENC[\"),\n\t\tformats.Ini:    []byte(\"[sops]\"),\n\t\tformats.Json:   []byte(\"\\\"mac\\\": \\\"ENC[\"),\n\t\tformats.Yaml:   []byte(\"mac: ENC[\"),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/decryptor/decryptor.go"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 30,
                  "endLine": 101,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t// sopsFormatToMarkerBytes contains a list of formats and their byte\n\t// order markers, used to detect if a Secret data field is SOPS' encrypted.\n\tsopsFormatToMarkerBytes = map[formats.Format][]byte{\n\t\t// formats.Binary is a JSON envelop at encrypted rest\n\t\tformats.Binary: []byte(\"\\\"mac\\\": \\\"ENC[\"),\n\t\tformats.Dotenv: []byte(\"sops_mac=ENC[\"),\n\t\tformats.Ini:    []byte(\"[sops]\"),\n",
                    "rendered": {
                      "text": "\t// sopsFormatToMarkerBytes contains a list of formats and their byte\n\t// order markers, used to detect if a Secret data field is SOPS' encrypted.\n\tsopsFormatToMarkerBytes = map[formats.Format][]byte{\n\t\t// formats.Binary is a JSON envelop at encrypted rest\n\t\tformats.Binary: []byte(\"\\\"mac\\\": \\\"ENC[\"),\n\t\tformats.Dotenv: []byte(\"sops_mac=ENC[\"),\n\t\tformats.Ini:    []byte(\"[sops]\"),\n",
                      "markdown": "`\t// sopsFormatToMarkerBytes contains a list of formats and their byte\n\t// order markers, used to detect if a Secret data field is SOPS' encrypted.\n\tsopsFormatToMarkerBytes = map[formats.Format][]byte{\n\t\t// formats.Binary is a JSON envelop at encrypted rest\n\t\tformats.Binary: []byte(\"\\\"mac\\\": \\\"ENC[\"),\n\t\tformats.Dotenv: []byte(\"sops_mac=ENC[\"),\n\t\tformats.Ini:    []byte(\"[sops]\"),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/decryptor/decryptor.go"
                },
                "region": {
                  "startLine": 385,
                  "startColumn": 20,
                  "endLine": 385,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t\t\t\t\t\treturn nil, fmt.Errorf(\"failed to decrypt and format '%s/%s' Secret field '%s': %w\",\n\t\t\t\t\t\t\tres.GetNamespace(), res.GetName(), key, err)\n\t\t\t\t\t}\n\t\t\t\t\tdataMap[key] = base64.StdEncoding.EncodeToString(out)\n\t\t\t\t}\n\t\t\t}\n\t\t\tres.SetDataMap(dataMap)\n",
                    "rendered": {
                      "text": "\t\t\t\t\t\treturn nil, fmt.Errorf(\"failed to decrypt and format '%s/%s' Secret field '%s': %w\",\n\t\t\t\t\t\t\tres.GetNamespace(), res.GetName(), key, err)\n\t\t\t\t\t}\n\t\t\t\t\tdataMap[key] = base64.StdEncoding.EncodeToString(out)\n\t\t\t\t}\n\t\t\t}\n\t\t\tres.SetDataMap(dataMap)\n",
                      "markdown": "`\t\t\t\t\t\treturn nil, fmt.Errorf(\"failed to decrypt and format '%s/%s' Secret field '%s': %w\",\n\t\t\t\t\t\t\tres.GetNamespace(), res.GetName(), key, err)\n\t\t\t\t\t}\n\t\t\t\t\tdataMap[key] = base64.StdEncoding.EncodeToString(out)\n\t\t\t\t}\n\t\t\t}\n\t\t\tres.SetDataMap(dataMap)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/decryptor/decryptor.go"
                },
                "region": {
                  "startLine": 370,
                  "startColumn": 17,
                  "endLine": 370,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t\tcase res.GetKind() == \"Secret\":\n\t\t\tdataMap := res.GetDataMap()\n\t\t\tfor key, value := range dataMap {\n\t\t\t\tdata, err := base64.StdEncoding.DecodeString(value)\n\t\t\t\tif err != nil {\n\t\t\t\t\t// If we fail to base64 decode, it is (very) likely to be a\n\t\t\t\t\t// user input error. Instead of failing here, let it bubble\n",
                    "rendered": {
                      "text": "\t\tcase res.GetKind() == \"Secret\":\n\t\t\tdataMap := res.GetDataMap()\n\t\t\tfor key, value := range dataMap {\n\t\t\t\tdata, err := base64.StdEncoding.DecodeString(value)\n\t\t\t\tif err != nil {\n\t\t\t\t\t// If we fail to base64 decode, it is (very) likely to be a\n\t\t\t\t\t// user input error. Instead of failing here, let it bubble\n",
                      "markdown": "`\t\tcase res.GetKind() == \"Secret\":\n\t\t\tdataMap := res.GetDataMap()\n\t\t\tfor key, value := range dataMap {\n\t\t\t\tdata, err := base64.StdEncoding.DecodeString(value)\n\t\t\t\tif err != nil {\n\t\t\t\t\t// If we fail to base64 decode, it is (very) likely to be a\n\t\t\t\t\t// user input error. Instead of failing here, let it bubble\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/decryptor/decryptor.go"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 11,
                  "endLine": 22,
                  "endColumn": 17,
                  "snippet": {
                    "text": "import (\n\t\"bytes\"\n\t\"context\"\n\t\"encoding/base64\"\n\t\"errors\"\n\t\"fmt\"\n\t\"io/fs\"\n",
                    "rendered": {
                      "text": "import (\n\t\"bytes\"\n\t\"context\"\n\t\"encoding/base64\"\n\t\"errors\"\n\t\"fmt\"\n\t\"io/fs\"\n",
                      "markdown": "`import (\n\t\"bytes\"\n\t\"context\"\n\t\"encoding/base64\"\n\t\"errors\"\n\t\"fmt\"\n\t\"io/fs\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/decryptor/decryptor.go"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 41,
                  "endLine": 111,
                  "endColumn": 45,
                  "snippet": {
                    "text": ")\n\n// Decryptor performs decryption operations for a v1.Kustomization.\n// The only supported decryption provider at present is\n// DecryptionProviderSOPS.\ntype Decryptor struct {\n\t// root is the root for file system operations. Any (relative) path or\n",
                    "rendered": {
                      "text": ")\n\n// Decryptor performs decryption operations for a v1.Kustomization.\n// The only supported decryption provider at present is\n// DecryptionProviderSOPS.\ntype Decryptor struct {\n\t// root is the root for file system operations. Any (relative) path or\n",
                      "markdown": "`)\n\n// Decryptor performs decryption operations for a v1.Kustomization.\n// The only supported decryption provider at present is\n// DecryptionProviderSOPS.\ntype Decryptor struct {\n\t// root is the root for file system operations. Any (relative) path or\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/decryptor/decryptor.go"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 37,
                  "endLine": 101,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\t// sopsFormatToMarkerBytes contains a list of formats and their byte\n\t// order markers, used to detect if a Secret data field is SOPS' encrypted.\n\tsopsFormatToMarkerBytes = map[formats.Format][]byte{\n\t\t// formats.Binary is a JSON envelop at encrypted rest\n\t\tformats.Binary: []byte(\"\\\"mac\\\": \\\"ENC[\"),\n\t\tformats.Dotenv: []byte(\"sops_mac=ENC[\"),\n\t\tformats.Ini:    []byte(\"[sops]\"),\n",
                    "rendered": {
                      "text": "\t// sopsFormatToMarkerBytes contains a list of formats and their byte\n\t// order markers, used to detect if a Secret data field is SOPS' encrypted.\n\tsopsFormatToMarkerBytes = map[formats.Format][]byte{\n\t\t// formats.Binary is a JSON envelop at encrypted rest\n\t\tformats.Binary: []byte(\"\\\"mac\\\": \\\"ENC[\"),\n\t\tformats.Dotenv: []byte(\"sops_mac=ENC[\"),\n\t\tformats.Ini:    []byte(\"[sops]\"),\n",
                      "markdown": "`\t// sopsFormatToMarkerBytes contains a list of formats and their byte\n\t// order markers, used to detect if a Secret data field is SOPS' encrypted.\n\tsopsFormatToMarkerBytes = map[formats.Format][]byte{\n\t\t// formats.Binary is a JSON envelop at encrypted rest\n\t\tformats.Binary: []byte(\"\\\"mac\\\": \\\"ENC[\"),\n\t\tformats.Dotenv: []byte(\"sops_mac=ENC[\"),\n\t\tformats.Ini:    []byte(\"[sops]\"),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/decryptor/decryptor.go"
                },
                "region": {
                  "startLine": 195,
                  "startColumn": 49,
                  "endLine": 195,
                  "endColumn": 58,
                  "snippet": {
                    "text": "// It returns an error if the Secret cannot be retrieved, or if one of the\n// imports fails.\n// Imports do not have an effect after the first call to SopsDecryptWithFormat(),\n// which initializes and caches SOPS' (local) key service server.\n// For the import of PGP keys, the Decryptor must be configured with\n// an absolute GnuPG home directory path.\nfunc (d *Decryptor) ImportKeys(ctx context.Context) error {\n",
                    "rendered": {
                      "text": "// It returns an error if the Secret cannot be retrieved, or if one of the\n// imports fails.\n// Imports do not have an effect after the first call to SopsDecryptWithFormat(),\n// which initializes and caches SOPS' (local) key service server.\n// For the import of PGP keys, the Decryptor must be configured with\n// an absolute GnuPG home directory path.\nfunc (d *Decryptor) ImportKeys(ctx context.Context) error {\n",
                      "markdown": "`// It returns an error if the Secret cannot be retrieved, or if one of the\n// imports fails.\n// Imports do not have an effect after the first call to SopsDecryptWithFormat(),\n// which initializes and caches SOPS' (local) key service server.\n// For the import of PGP keys, the Decryptor must be configured with\n// an absolute GnuPG home directory path.\nfunc (d *Decryptor) ImportKeys(ctx context.Context) error {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/internal/decryptor/decryptor.go"
                },
                "region": {
                  "startLine": 146,
                  "startColumn": 51,
                  "endLine": 146,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\t// azureToken is the Azure credential token used to authenticate towards\n\t// any Azure Key Vault.\n\tazureToken *azkv.TokenCredential\n\t// gcpCredsJSON is the JSON credential file of the service account used to\n\t// authenticate towards any GCP KMS.\n\tgcpCredsJSON []byte\n\n",
                    "rendered": {
                      "text": "\t// azureToken is the Azure credential token used to authenticate towards\n\t// any Azure Key Vault.\n\tazureToken *azkv.TokenCredential\n\t// gcpCredsJSON is the JSON credential file of the service account used to\n\t// authenticate towards any GCP KMS.\n\tgcpCredsJSON []byte\n\n",
                      "markdown": "`\t// azureToken is the Azure credential token used to authenticate towards\n\t// any Azure Key Vault.\n\tazureToken *azkv.TokenCredential\n\t// gcpCredsJSON is the JSON credential file of the service account used to\n\t// authenticate towards any GCP KMS.\n\tgcpCredsJSON []byte\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/Dockerfile"
                },
                "region": {
                  "startLine": 43,
                  "endLine": 44,
                  "endColumn": 4,
                  "snippet": {
                    "text": "COPY --from=builder /workspace/kustomize-controller /usr/local/bin/\n\nUSER 65534:65534\n\nENV GNUPGHOME=/tmp\n\nENTRYPOINT [ \"/sbin/tini\", \"--\", \"kustomize-controller\" ]\n",
                    "rendered": {
                      "text": "COPY --from=builder /workspace/kustomize-controller /usr/local/bin/\n\nUSER 65534:65534\n\nENV GNUPGHOME=/tmp\n\nENTRYPOINT [ \"/sbin/tini\", \"--\", \"kustomize-controller\" ]\n",
                      "markdown": "`COPY --from=builder /workspace/kustomize-controller /usr/local/bin/\n\nUSER 65534:65534\n\nENV GNUPGHOME=/tmp\n\nENTRYPOINT [ \"/sbin/tini\", \"--\", \"kustomize-controller\" ]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/Dockerfile"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 43,
                  "endLine": 37,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\nARG TARGETPLATFORM\n\nRUN apk --no-cache add ca-certificates tini git openssh-client gnupg \\\n  && update-ca-certificates\n\nCOPY --from=builder /workspace/kustomize-controller /usr/local/bin/\n",
                    "rendered": {
                      "text": "\nARG TARGETPLATFORM\n\nRUN apk --no-cache add ca-certificates tini git openssh-client gnupg \\\n  && update-ca-certificates\n\nCOPY --from=builder /workspace/kustomize-controller /usr/local/bin/\n",
                      "markdown": "`\nARG TARGETPLATFORM\n\nRUN apk --no-cache add ca-certificates tini git openssh-client gnupg \\\n  && update-ca-certificates\n\nCOPY --from=builder /workspace/kustomize-controller /usr/local/bin/\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/Dockerfile"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 7,
                  "endLine": 30,
                  "endColumn": 4,
                  "snippet": {
                    "text": "COPY main.go main.go\nCOPY internal/ internal/\n\n# build\nENV CGO_ENABLED=0\nRUN xx-go build -trimpath -a -o kustomize-controller main.go\n\nFROM alpine:3.19\n",
                    "rendered": {
                      "text": "COPY main.go main.go\nCOPY internal/ internal/\n\n# build\nENV CGO_ENABLED=0\nRUN xx-go build -trimpath -a -o kustomize-controller main.go\n\nFROM alpine:3.19\n",
                      "markdown": "`COPY main.go main.go\nCOPY internal/ internal/\n\n# build\nENV CGO_ENABLED=0\nRUN xx-go build -trimpath -a -o kustomize-controller main.go\n\nFROM alpine:3.19\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/MAINTAINERS"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 21,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "The maintainers are generally available in Slack at\nhttps://cloud-native.slack.com in #flux (https://cloud-native.slack.com/messages/CLAJ40HV3)\n(obtain an invitation at https://slack.cncf.io/).\n\nThis project shares maintainers from the main Flux v2 git repository,\nas listed in\n",
                    "rendered": {
                      "text": "The maintainers are generally available in Slack at\nhttps://cloud-native.slack.com in #flux (https://cloud-native.slack.com/messages/CLAJ40HV3)\n(obtain an invitation at https://slack.cncf.io/).\n\nThis project shares maintainers from the main Flux v2 git repository,\nas listed in\n",
                      "markdown": "`The maintainers are generally available in Slack at\nhttps://cloud-native.slack.com in #flux (https://cloud-native.slack.com/messages/CLAJ40HV3)\n(obtain an invitation at https://slack.cncf.io/).\n\nThis project shares maintainers from the main Flux v2 git repository,\nas listed in\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/MAINTAINERS"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 48,
                  "endLine": 2,
                  "snippet": {
                    "text": "The maintainers are generally available in Slack at\nhttps://cloud-native.slack.com in #flux (https://cloud-native.slack.com/messages/CLAJ40HV3)\n(obtain an invitation at https://slack.cncf.io/).\n\nThis project shares maintainers from the main Flux v2 git repository,\n",
                    "rendered": {
                      "text": "The maintainers are generally available in Slack at\nhttps://cloud-native.slack.com in #flux (https://cloud-native.slack.com/messages/CLAJ40HV3)\n(obtain an invitation at https://slack.cncf.io/).\n\nThis project shares maintainers from the main Flux v2 git repository,\n",
                      "markdown": "`The maintainers are generally available in Slack at\nhttps://cloud-native.slack.com in #flux (https://cloud-native.slack.com/messages/CLAJ40HV3)\n(obtain an invitation at https://slack.cncf.io/).\n\nThis project shares maintainers from the main Flux v2 git repository,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/MAINTAINERS"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 53,
                  "endLine": 5,
                  "endColumn": 58,
                  "snippet": {
                    "text": "https://cloud-native.slack.com in #flux (https://cloud-native.slack.com/messages/CLAJ40HV3)\n(obtain an invitation at https://slack.cncf.io/).\n\nThis project shares maintainers from the main Flux v2 git repository,\nas listed in\n\n    https://github.com/fluxcd/flux2/blob/main/MAINTAINERS\n",
                    "rendered": {
                      "text": "https://cloud-native.slack.com in #flux (https://cloud-native.slack.com/messages/CLAJ40HV3)\n(obtain an invitation at https://slack.cncf.io/).\n\nThis project shares maintainers from the main Flux v2 git repository,\nas listed in\n\n    https://github.com/fluxcd/flux2/blob/main/MAINTAINERS\n",
                      "markdown": "`https://cloud-native.slack.com in #flux (https://cloud-native.slack.com/messages/CLAJ40HV3)\n(obtain an invitation at https://slack.cncf.io/).\n\nThis project shares maintainers from the main Flux v2 git repository,\nas listed in\n\n    https://github.com/fluxcd/flux2/blob/main/MAINTAINERS\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/README.md"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 56,
                  "endLine": 50,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\n## Roadmap\n\nThe roadmap for the Flux family of projects can be found at <https://fluxcd.io/roadmap/>.\n\n## Contributing\n\n",
                    "rendered": {
                      "text": "\n## Roadmap\n\nThe roadmap for the Flux family of projects can be found at <https://fluxcd.io/roadmap/>.\n\n## Contributing\n\n",
                      "markdown": "`\n## Roadmap\n\nThe roadmap for the Flux family of projects can be found at <https://fluxcd.io/roadmap/>.\n\n## Contributing\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 220,
                  "startColumn": 1,
                  "endLine": 220,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t-v \"$(BUILD_DIR)/fuzz/out\":/out \\\n\t\t-v \"$(shell pwd)/tests/fuzz/oss_fuzz_run.sh\":/runner.sh \\\n\t\tlocal-fuzzing:latest \\\n\t\tbash -c \"/runner.sh\"\n\n# Run fuzz tests for the duration set in FUZZ_TIME.\nfuzz-native: \n",
                    "rendered": {
                      "text": "\t\t-v \"$(BUILD_DIR)/fuzz/out\":/out \\\n\t\t-v \"$(shell pwd)/tests/fuzz/oss_fuzz_run.sh\":/runner.sh \\\n\t\tlocal-fuzzing:latest \\\n\t\tbash -c \"/runner.sh\"\n\n# Run fuzz tests for the duration set in FUZZ_TIME.\nfuzz-native: \n",
                      "markdown": "`\t\t-v \"$(BUILD_DIR)/fuzz/out\":/out \\\n\t\t-v \"$(shell pwd)/tests/fuzz/oss_fuzz_run.sh\":/runner.sh \\\n\t\tlocal-fuzzing:latest \\\n\t\tbash -c \"/runner.sh\"\n\n# Run fuzz tests for the duration set in FUZZ_TIME.\nfuzz-native: \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 220,
                  "startColumn": 1,
                  "endLine": 220,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t-v \"$(BUILD_DIR)/fuzz/out\":/out \\\n\t\t-v \"$(shell pwd)/tests/fuzz/oss_fuzz_run.sh\":/runner.sh \\\n\t\tlocal-fuzzing:latest \\\n\t\tbash -c \"/runner.sh\"\n\n# Run fuzz tests for the duration set in FUZZ_TIME.\nfuzz-native: \n",
                    "rendered": {
                      "text": "\t\t-v \"$(BUILD_DIR)/fuzz/out\":/out \\\n\t\t-v \"$(shell pwd)/tests/fuzz/oss_fuzz_run.sh\":/runner.sh \\\n\t\tlocal-fuzzing:latest \\\n\t\tbash -c \"/runner.sh\"\n\n# Run fuzz tests for the duration set in FUZZ_TIME.\nfuzz-native: \n",
                      "markdown": "`\t\t-v \"$(BUILD_DIR)/fuzz/out\":/out \\\n\t\t-v \"$(shell pwd)/tests/fuzz/oss_fuzz_run.sh\":/runner.sh \\\n\t\tlocal-fuzzing:latest \\\n\t\tbash -c \"/runner.sh\"\n\n# Run fuzz tests for the duration set in FUZZ_TIME.\nfuzz-native: \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 216,
                  "endLine": 216,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n# Run each fuzzer once to ensure they will work when executed by oss-fuzz.\nfuzz-smoketest: fuzz-build\n\tdocker run --rm \\\n\t\t-v \"$(BUILD_DIR)/fuzz/out\":/out \\\n\t\t-v \"$(shell pwd)/tests/fuzz/oss_fuzz_run.sh\":/runner.sh \\\n\t\tlocal-fuzzing:latest \\\n",
                    "rendered": {
                      "text": "\n# Run each fuzzer once to ensure they will work when executed by oss-fuzz.\nfuzz-smoketest: fuzz-build\n\tdocker run --rm \\\n\t\t-v \"$(BUILD_DIR)/fuzz/out\":/out \\\n\t\t-v \"$(shell pwd)/tests/fuzz/oss_fuzz_run.sh\":/runner.sh \\\n\t\tlocal-fuzzing:latest \\\n",
                      "markdown": "`\n# Run each fuzzer once to ensure they will work when executed by oss-fuzz.\nfuzz-smoketest: fuzz-build\n\tdocker run --rm \\\n\t\t-v \"$(BUILD_DIR)/fuzz/out\":/out \\\n\t\t-v \"$(shell pwd)/tests/fuzz/oss_fuzz_run.sh\":/runner.sh \\\n\t\tlocal-fuzzing:latest \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 210,
                  "startColumn": 16,
                  "endLine": 210,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\tdocker run --rm \\\n\t\t-e FUZZING_LANGUAGE=go -e SANITIZER=address \\\n\t\t-e CIFUZZ_DEBUG='True' -e OSS_FUZZ_PROJECT_NAME=fluxcd \\\n\t\t-v \"$(shell go env GOMODCACHE):/root/go/pkg/mod\" \\\n\t\t-v \"$(BUILD_DIR)/fuzz/out\":/out \\\n\t\tlocal-fuzzing:latest\n\n",
                    "rendered": {
                      "text": "\tdocker run --rm \\\n\t\t-e FUZZING_LANGUAGE=go -e SANITIZER=address \\\n\t\t-e CIFUZZ_DEBUG='True' -e OSS_FUZZ_PROJECT_NAME=fluxcd \\\n\t\t-v \"$(shell go env GOMODCACHE):/root/go/pkg/mod\" \\\n\t\t-v \"$(BUILD_DIR)/fuzz/out\":/out \\\n\t\tlocal-fuzzing:latest\n\n",
                      "markdown": "`\tdocker run --rm \\\n\t\t-e FUZZING_LANGUAGE=go -e SANITIZER=address \\\n\t\t-e CIFUZZ_DEBUG='True' -e OSS_FUZZ_PROJECT_NAME=fluxcd \\\n\t\t-v \"$(shell go env GOMODCACHE):/root/go/pkg/mod\" \\\n\t\t-v \"$(BUILD_DIR)/fuzz/out\":/out \\\n\t\tlocal-fuzzing:latest\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 207,
                  "endLine": 207,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\tmkdir -p $(BUILD_DIR)/fuzz/out/\n\n\tdocker build . --pull --tag local-fuzzing:latest -f tests/fuzz/Dockerfile.builder\n\tdocker run --rm \\\n\t\t-e FUZZING_LANGUAGE=go -e SANITIZER=address \\\n\t\t-e CIFUZZ_DEBUG='True' -e OSS_FUZZ_PROJECT_NAME=fluxcd \\\n\t\t-v \"$(shell go env GOMODCACHE):/root/go/pkg/mod\" \\\n",
                    "rendered": {
                      "text": "\tmkdir -p $(BUILD_DIR)/fuzz/out/\n\n\tdocker build . --pull --tag local-fuzzing:latest -f tests/fuzz/Dockerfile.builder\n\tdocker run --rm \\\n\t\t-e FUZZING_LANGUAGE=go -e SANITIZER=address \\\n\t\t-e CIFUZZ_DEBUG='True' -e OSS_FUZZ_PROJECT_NAME=fluxcd \\\n\t\t-v \"$(shell go env GOMODCACHE):/root/go/pkg/mod\" \\\n",
                      "markdown": "`\tmkdir -p $(BUILD_DIR)/fuzz/out/\n\n\tdocker build . --pull --tag local-fuzzing:latest -f tests/fuzz/Dockerfile.builder\n\tdocker run --rm \\\n\t\t-e FUZZING_LANGUAGE=go -e SANITIZER=address \\\n\t\t-e CIFUZZ_DEBUG='True' -e OSS_FUZZ_PROJECT_NAME=fluxcd \\\n\t\t-v \"$(shell go env GOMODCACHE):/root/go/pkg/mod\" \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 206,
                  "endLine": 206,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\trm -rf $(BUILD_DIR)/fuzz/\n\tmkdir -p $(BUILD_DIR)/fuzz/out/\n\n\tdocker build . --pull --tag local-fuzzing:latest -f tests/fuzz/Dockerfile.builder\n\tdocker run --rm \\\n\t\t-e FUZZING_LANGUAGE=go -e SANITIZER=address \\\n\t\t-e CIFUZZ_DEBUG='True' -e OSS_FUZZ_PROJECT_NAME=fluxcd \\\n",
                    "rendered": {
                      "text": "\trm -rf $(BUILD_DIR)/fuzz/\n\tmkdir -p $(BUILD_DIR)/fuzz/out/\n\n\tdocker build . --pull --tag local-fuzzing:latest -f tests/fuzz/Dockerfile.builder\n\tdocker run --rm \\\n\t\t-e FUZZING_LANGUAGE=go -e SANITIZER=address \\\n\t\t-e CIFUZZ_DEBUG='True' -e OSS_FUZZ_PROJECT_NAME=fluxcd \\\n",
                      "markdown": "`\trm -rf $(BUILD_DIR)/fuzz/\n\tmkdir -p $(BUILD_DIR)/fuzz/out/\n\n\tdocker build . --pull --tag local-fuzzing:latest -f tests/fuzz/Dockerfile.builder\n\tdocker run --rm \\\n\t\t-e FUZZING_LANGUAGE=go -e SANITIZER=address \\\n\t\t-e CIFUZZ_DEBUG='True' -e OSS_FUZZ_PROJECT_NAME=fluxcd \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 176,
                  "startColumn": 1,
                  "endLine": 176,
                  "endColumn": 7,
                  "snippet": {
                    "text": "controller-gen: ## Download controller-gen locally if necessary.\n\t$(call go-install-tool,$(CONTROLLER_GEN),sigs.k8s.io/controller-tools/cmd/controller-gen@$(CONTROLLER_GEN_VERSION))\n\n# Find or download gen-crd-api-reference-docs\nGEN_CRD_API_REFERENCE_DOCS = $(GOBIN)/gen-crd-api-reference-docs\n.PHONY: gen-crd-api-reference-docs\ngen-crd-api-reference-docs: ## Download gen-crd-api-reference-docs locally if necessary\n",
                    "rendered": {
                      "text": "controller-gen: ## Download controller-gen locally if necessary.\n\t$(call go-install-tool,$(CONTROLLER_GEN),sigs.k8s.io/controller-tools/cmd/controller-gen@$(CONTROLLER_GEN_VERSION))\n\n# Find or download gen-crd-api-reference-docs\nGEN_CRD_API_REFERENCE_DOCS = $(GOBIN)/gen-crd-api-reference-docs\n.PHONY: gen-crd-api-reference-docs\ngen-crd-api-reference-docs: ## Download gen-crd-api-reference-docs locally if necessary\n",
                      "markdown": "`controller-gen: ## Download controller-gen locally if necessary.\n\t$(call go-install-tool,$(CONTROLLER_GEN),sigs.k8s.io/controller-tools/cmd/controller-gen@$(CONTROLLER_GEN_VERSION))\n\n# Find or download gen-crd-api-reference-docs\nGEN_CRD_API_REFERENCE_DOCS = $(GOBIN)/gen-crd-api-reference-docs\n.PHONY: gen-crd-api-reference-docs\ngen-crd-api-reference-docs: ## Download gen-crd-api-reference-docs locally if necessary\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 170,
                  "startColumn": 1,
                  "endLine": 170,
                  "endColumn": 7,
                  "snippet": {
                    "text": "docker-deploy:\n\tkubectl -n flux-system set image deployment/kustomize-controller manager=${IMG}\n\n# Find or download controller-gen\nCONTROLLER_GEN = $(GOBIN)/controller-gen\n.PHONY: controller-gen\ncontroller-gen: ## Download controller-gen locally if necessary.\n",
                    "rendered": {
                      "text": "docker-deploy:\n\tkubectl -n flux-system set image deployment/kustomize-controller manager=${IMG}\n\n# Find or download controller-gen\nCONTROLLER_GEN = $(GOBIN)/controller-gen\n.PHONY: controller-gen\ncontroller-gen: ## Download controller-gen locally if necessary.\n",
                      "markdown": "`docker-deploy:\n\tkubectl -n flux-system set image deployment/kustomize-controller manager=${IMG}\n\n# Find or download controller-gen\nCONTROLLER_GEN = $(GOBIN)/controller-gen\n.PHONY: controller-gen\ncontroller-gen: ## Download controller-gen locally if necessary.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 166,
                  "startColumn": 9,
                  "endLine": 166,
                  "endColumn": 17,
                  "snippet": {
                    "text": "docker-push:\n\tdocker push ${IMG}\n\n# Set the docker image in-cluster\ndocker-deploy:\n\tkubectl -n flux-system set image deployment/kustomize-controller manager=${IMG}\n\n",
                    "rendered": {
                      "text": "docker-push:\n\tdocker push ${IMG}\n\n# Set the docker image in-cluster\ndocker-deploy:\n\tkubectl -n flux-system set image deployment/kustomize-controller manager=${IMG}\n\n",
                      "markdown": "`docker-push:\n\tdocker push ${IMG}\n\n# Set the docker image in-cluster\ndocker-deploy:\n\tkubectl -n flux-system set image deployment/kustomize-controller manager=${IMG}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 164,
                  "endLine": 164,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n# Push the docker image\ndocker-push:\n\tdocker push ${IMG}\n\n# Set the docker image in-cluster\ndocker-deploy:\n",
                    "rendered": {
                      "text": "\n# Push the docker image\ndocker-push:\n\tdocker push ${IMG}\n\n# Set the docker image in-cluster\ndocker-deploy:\n",
                      "markdown": "`\n# Push the docker image\ndocker-push:\n\tdocker push ${IMG}\n\n# Set the docker image in-cluster\ndocker-deploy:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 10,
                  "endLine": 162,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t-t ${IMG} \\\n\t${BUILD_ARGS} .\n\n# Push the docker image\ndocker-push:\n\tdocker push ${IMG}\n\n",
                    "rendered": {
                      "text": "\t-t ${IMG} \\\n\t${BUILD_ARGS} .\n\n# Push the docker image\ndocker-push:\n\tdocker push ${IMG}\n\n",
                      "markdown": "`\t-t ${IMG} \\\n\t${BUILD_ARGS} .\n\n# Push the docker image\ndocker-push:\n\tdocker push ${IMG}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 157,
                  "endLine": 157,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n# Build the docker image\ndocker-build:\n\tdocker buildx build \\\n\t--platform=$(BUILD_PLATFORMS) \\\n\t-t ${IMG} \\\n\t${BUILD_ARGS} .\n",
                    "rendered": {
                      "text": "\n# Build the docker image\ndocker-build:\n\tdocker buildx build \\\n\t--platform=$(BUILD_PLATFORMS) \\\n\t-t ${IMG} \\\n\t${BUILD_ARGS} .\n",
                      "markdown": "`\n# Build the docker image\ndocker-build:\n\tdocker buildx build \\\n\t--platform=$(BUILD_PLATFORMS) \\\n\t-t ${IMG} \\\n\t${BUILD_ARGS} .\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 11,
                  "endLine": 155,
                  "endColumn": 19,
                  "snippet": {
                    "text": "generate: controller-gen\n\tcd api; $(CONTROLLER_GEN) object:headerFile=\"../hack/boilerplate.go.txt\" paths=\"./...\"\n\n# Build the docker image\ndocker-build:\n\tdocker buildx build \\\n\t--platform=$(BUILD_PLATFORMS) \\\n",
                    "rendered": {
                      "text": "generate: controller-gen\n\tcd api; $(CONTROLLER_GEN) object:headerFile=\"../hack/boilerplate.go.txt\" paths=\"./...\"\n\n# Build the docker image\ndocker-build:\n\tdocker buildx build \\\n\t--platform=$(BUILD_PLATFORMS) \\\n",
                      "markdown": "`generate: controller-gen\n\tcd api; $(CONTROLLER_GEN) object:headerFile=\"../hack/boilerplate.go.txt\" paths=\"./...\"\n\n# Build the docker image\ndocker-build:\n\tdocker buildx build \\\n\t--platform=$(BUILD_PLATFORMS) \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 11,
                  "endLine": 144,
                  "endColumn": 16,
                  "snippet": {
                    "text": "# Run go fmt against code\nfmt:\n\tgo fmt ./...\n\tcd api; go fmt ./...\n\n# Run go vet against code\nvet:\n",
                    "rendered": {
                      "text": "# Run go fmt against code\nfmt:\n\tgo fmt ./...\n\tcd api; go fmt ./...\n\n# Run go vet against code\nvet:\n",
                      "markdown": "`# Run go fmt against code\nfmt:\n\tgo fmt ./...\n\tcd api; go fmt ./...\n\n# Run go vet against code\nvet:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 3,
                  "endLine": 143,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n# Run go fmt against code\nfmt:\n\tgo fmt ./...\n\tcd api; go fmt ./...\n\n# Run go vet against code\n",
                    "rendered": {
                      "text": "\n# Run go fmt against code\nfmt:\n\tgo fmt ./...\n\tcd api; go fmt ./...\n\n# Run go vet against code\n",
                      "markdown": "`\n# Run go fmt against code\nfmt:\n\tgo fmt ./...\n\tcd api; go fmt ./...\n\n# Run go vet against code\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 8,
                  "endLine": 141,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\tcd api; rm -f go.sum; go mod tidy -compat=1.22\n\trm -f go.sum; go mod tidy -compat=1.22\n\n# Run go fmt against code\nfmt:\n\tgo fmt ./...\n\tcd api; go fmt ./...\n",
                    "rendered": {
                      "text": "\tcd api; rm -f go.sum; go mod tidy -compat=1.22\n\trm -f go.sum; go mod tidy -compat=1.22\n\n# Run go fmt against code\nfmt:\n\tgo fmt ./...\n\tcd api; go fmt ./...\n",
                      "markdown": "`\tcd api; rm -f go.sum; go mod tidy -compat=1.22\n\trm -f go.sum; go mod tidy -compat=1.22\n\n# Run go fmt against code\nfmt:\n\tgo fmt ./...\n\tcd api; go fmt ./...\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 23,
                  "endLine": 122,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n# Delete dev deployment and CRDs\ndev-cleanup: manifests\n\tmkdir -p config/dev && cp config/default/* config/dev\n\tcd config/dev && kustomize edit set image fluxcd/kustomize-controller=${IMG}\n\tkustomize build config/dev | kubectl delete -f -\n\trm -rf config/dev\n",
                    "rendered": {
                      "text": "\n# Delete dev deployment and CRDs\ndev-cleanup: manifests\n\tmkdir -p config/dev && cp config/default/* config/dev\n\tcd config/dev && kustomize edit set image fluxcd/kustomize-controller=${IMG}\n\tkustomize build config/dev | kubectl delete -f -\n\trm -rf config/dev\n",
                      "markdown": "`\n# Delete dev deployment and CRDs\ndev-cleanup: manifests\n\tmkdir -p config/dev && cp config/default/* config/dev\n\tcd config/dev && kustomize edit set image fluxcd/kustomize-controller=${IMG}\n\tkustomize build config/dev | kubectl delete -f -\n\trm -rf config/dev\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 23,
                  "endLine": 115,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n# Deploy controller dev image in the configured Kubernetes cluster in ~/.kube/config\ndev-deploy: manifests\n\tmkdir -p config/dev && cp config/default/* config/dev\n\tcd config/dev && kustomize edit set image fluxcd/kustomize-controller=${IMG}\n\tkustomize build config/dev | kubectl apply -f -\n\trm -rf config/dev\n",
                    "rendered": {
                      "text": "\n# Deploy controller dev image in the configured Kubernetes cluster in ~/.kube/config\ndev-deploy: manifests\n\tmkdir -p config/dev && cp config/default/* config/dev\n\tcd config/dev && kustomize edit set image fluxcd/kustomize-controller=${IMG}\n\tkustomize build config/dev | kubectl apply -f -\n\trm -rf config/dev\n",
                      "markdown": "`\n# Deploy controller dev image in the configured Kubernetes cluster in ~/.kube/config\ndev-deploy: manifests\n\tmkdir -p config/dev && cp config/default/* config/dev\n\tcd config/dev && kustomize edit set image fluxcd/kustomize-controller=${IMG}\n\tkustomize build config/dev | kubectl apply -f -\n\trm -rf config/dev\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 91,
                  "endLine": 91,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tcurl -s https://raw.githubusercontent.com/fluxcd/source-controller/${SOURCE_VER}/config/crd/bases/source.toolkit.fluxcd.io_buckets.yaml -o $(BUCKET_CRD)\n\n$(OCIREPO_CRD):\n\tcurl -s https://raw.githubusercontent.com/fluxcd/source-controller/${SOURCE_VER}/config/crd/bases/source.toolkit.fluxcd.io_ocirepositories.yaml -o $(OCIREPO_CRD)\n\n# Download the CRDs the controller depends on\ndownload-crd-deps: $(SOURCE_CRD_VER) $(GITREPO_CRD) $(BUCKET_CRD) $(OCIREPO_CRD)\n",
                    "rendered": {
                      "text": "\tcurl -s https://raw.githubusercontent.com/fluxcd/source-controller/${SOURCE_VER}/config/crd/bases/source.toolkit.fluxcd.io_buckets.yaml -o $(BUCKET_CRD)\n\n$(OCIREPO_CRD):\n\tcurl -s https://raw.githubusercontent.com/fluxcd/source-controller/${SOURCE_VER}/config/crd/bases/source.toolkit.fluxcd.io_ocirepositories.yaml -o $(OCIREPO_CRD)\n\n# Download the CRDs the controller depends on\ndownload-crd-deps: $(SOURCE_CRD_VER) $(GITREPO_CRD) $(BUCKET_CRD) $(OCIREPO_CRD)\n",
                      "markdown": "`\tcurl -s https://raw.githubusercontent.com/fluxcd/source-controller/${SOURCE_VER}/config/crd/bases/source.toolkit.fluxcd.io_buckets.yaml -o $(BUCKET_CRD)\n\n$(OCIREPO_CRD):\n\tcurl -s https://raw.githubusercontent.com/fluxcd/source-controller/${SOURCE_VER}/config/crd/bases/source.toolkit.fluxcd.io_ocirepositories.yaml -o $(OCIREPO_CRD)\n\n# Download the CRDs the controller depends on\ndownload-crd-deps: $(SOURCE_CRD_VER) $(GITREPO_CRD) $(BUCKET_CRD) $(OCIREPO_CRD)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 88,
                  "endLine": 88,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tcurl -s https://raw.githubusercontent.com/fluxcd/source-controller/${SOURCE_VER}/config/crd/bases/source.toolkit.fluxcd.io_gitrepositories.yaml -o $(GITREPO_CRD)\n\n$(BUCKET_CRD):\n\tcurl -s https://raw.githubusercontent.com/fluxcd/source-controller/${SOURCE_VER}/config/crd/bases/source.toolkit.fluxcd.io_buckets.yaml -o $(BUCKET_CRD)\n\n$(OCIREPO_CRD):\n\tcurl -s https://raw.githubusercontent.com/fluxcd/source-controller/${SOURCE_VER}/config/crd/bases/source.toolkit.fluxcd.io_ocirepositories.yaml -o $(OCIREPO_CRD)\n",
                    "rendered": {
                      "text": "\tcurl -s https://raw.githubusercontent.com/fluxcd/source-controller/${SOURCE_VER}/config/crd/bases/source.toolkit.fluxcd.io_gitrepositories.yaml -o $(GITREPO_CRD)\n\n$(BUCKET_CRD):\n\tcurl -s https://raw.githubusercontent.com/fluxcd/source-controller/${SOURCE_VER}/config/crd/bases/source.toolkit.fluxcd.io_buckets.yaml -o $(BUCKET_CRD)\n\n$(OCIREPO_CRD):\n\tcurl -s https://raw.githubusercontent.com/fluxcd/source-controller/${SOURCE_VER}/config/crd/bases/source.toolkit.fluxcd.io_ocirepositories.yaml -o $(OCIREPO_CRD)\n",
                      "markdown": "`\tcurl -s https://raw.githubusercontent.com/fluxcd/source-controller/${SOURCE_VER}/config/crd/bases/source.toolkit.fluxcd.io_gitrepositories.yaml -o $(GITREPO_CRD)\n\n$(BUCKET_CRD):\n\tcurl -s https://raw.githubusercontent.com/fluxcd/source-controller/${SOURCE_VER}/config/crd/bases/source.toolkit.fluxcd.io_buckets.yaml -o $(BUCKET_CRD)\n\n$(OCIREPO_CRD):\n\tcurl -s https://raw.githubusercontent.com/fluxcd/source-controller/${SOURCE_VER}/config/crd/bases/source.toolkit.fluxcd.io_ocirepositories.yaml -o $(OCIREPO_CRD)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 85,
                  "endLine": 85,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\ttouch $(SOURCE_CRD_VER)\n\n$(GITREPO_CRD):\n\tcurl -s https://raw.githubusercontent.com/fluxcd/source-controller/${SOURCE_VER}/config/crd/bases/source.toolkit.fluxcd.io_gitrepositories.yaml -o $(GITREPO_CRD)\n\n$(BUCKET_CRD):\n\tcurl -s https://raw.githubusercontent.com/fluxcd/source-controller/${SOURCE_VER}/config/crd/bases/source.toolkit.fluxcd.io_buckets.yaml -o $(BUCKET_CRD)\n",
                    "rendered": {
                      "text": "\ttouch $(SOURCE_CRD_VER)\n\n$(GITREPO_CRD):\n\tcurl -s https://raw.githubusercontent.com/fluxcd/source-controller/${SOURCE_VER}/config/crd/bases/source.toolkit.fluxcd.io_gitrepositories.yaml -o $(GITREPO_CRD)\n\n$(BUCKET_CRD):\n\tcurl -s https://raw.githubusercontent.com/fluxcd/source-controller/${SOURCE_VER}/config/crd/bases/source.toolkit.fluxcd.io_buckets.yaml -o $(BUCKET_CRD)\n",
                      "markdown": "`\ttouch $(SOURCE_CRD_VER)\n\n$(GITREPO_CRD):\n\tcurl -s https://raw.githubusercontent.com/fluxcd/source-controller/${SOURCE_VER}/config/crd/bases/source.toolkit.fluxcd.io_gitrepositories.yaml -o $(GITREPO_CRD)\n\n$(BUCKET_CRD):\n\tcurl -s https://raw.githubusercontent.com/fluxcd/source-controller/${SOURCE_VER}/config/crd/bases/source.toolkit.fluxcd.io_buckets.yaml -o $(BUCKET_CRD)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 13,
                  "endLine": 73,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\tgo build -o $(BUILD_DIR)/bin/manager main.go\n\n# Run against the configured Kubernetes cluster in ~/.kube/config\nrun: generate fmt vet manifests\n\tgo run ./main.go --metrics-addr=:8089\n\n# Delete previously downloaded CRDs and record the new version of the source\n",
                    "rendered": {
                      "text": "\tgo build -o $(BUILD_DIR)/bin/manager main.go\n\n# Run against the configured Kubernetes cluster in ~/.kube/config\nrun: generate fmt vet manifests\n\tgo run ./main.go --metrics-addr=:8089\n\n# Delete previously downloaded CRDs and record the new version of the source\n",
                      "markdown": "`\tgo build -o $(BUILD_DIR)/bin/manager main.go\n\n# Run against the configured Kubernetes cluster in ~/.kube/config\nrun: generate fmt vet manifests\n\tgo run ./main.go --metrics-addr=:8089\n\n# Delete previously downloaded CRDs and record the new version of the source\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 17,
                  "endLine": 69,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\tKUBEBUILDER_ASSETS=$(KUBEBUILDER_ASSETS) go test ./... $(GO_TEST_ARGS) -v -coverprofile cover.out\n\n# Build manager binary\nmanager: generate fmt vet\n\tgo build -o $(BUILD_DIR)/bin/manager main.go\n\n# Run against the configured Kubernetes cluster in ~/.kube/config\n",
                    "rendered": {
                      "text": "\tKUBEBUILDER_ASSETS=$(KUBEBUILDER_ASSETS) go test ./... $(GO_TEST_ARGS) -v -coverprofile cover.out\n\n# Build manager binary\nmanager: generate fmt vet\n\tgo build -o $(BUILD_DIR)/bin/manager main.go\n\n# Run against the configured Kubernetes cluster in ~/.kube/config\n",
                      "markdown": "`\tKUBEBUILDER_ASSETS=$(KUBEBUILDER_ASSETS) go test ./... $(GO_TEST_ARGS) -v -coverprofile cover.out\n\n# Build manager binary\nmanager: generate fmt vet\n\tgo build -o $(BUILD_DIR)/bin/manager main.go\n\n# Run against the configured Kubernetes cluster in ~/.kube/config\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 19,
                  "endLine": 65,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\n# Run controller tests\nKUBEBUILDER_ASSETS?=\"$(shell $(ENVTEST) --arch=$(ENVTEST_ARCH) use -i $(ENVTEST_KUBERNETES_VERSION) --bin-dir=$(ENVTEST_ASSETS_DIR) -p path)\"\ntest: tidy generate fmt vet manifests api-docs download-crd-deps install-envtest $(SOPS)\n\tKUBEBUILDER_ASSETS=$(KUBEBUILDER_ASSETS) go test ./... $(GO_TEST_ARGS) -v -coverprofile cover.out\n\n# Build manager binary\n",
                    "rendered": {
                      "text": "\n# Run controller tests\nKUBEBUILDER_ASSETS?=\"$(shell $(ENVTEST) --arch=$(ENVTEST_ARCH) use -i $(ENVTEST_KUBERNETES_VERSION) --bin-dir=$(ENVTEST_ASSETS_DIR) -p path)\"\ntest: tidy generate fmt vet manifests api-docs download-crd-deps install-envtest $(SOPS)\n\tKUBEBUILDER_ASSETS=$(KUBEBUILDER_ASSETS) go test ./... $(GO_TEST_ARGS) -v -coverprofile cover.out\n\n# Build manager binary\n",
                      "markdown": "`\n# Run controller tests\nKUBEBUILDER_ASSETS?=\"$(shell $(ENVTEST) --arch=$(ENVTEST_ARCH) use -i $(ENVTEST_KUBERNETES_VERSION) --bin-dir=$(ENVTEST_ASSETS_DIR) -p path)\"\ntest: tidy generate fmt vet manifests api-docs download-crd-deps install-envtest $(SOPS)\n\tKUBEBUILDER_ASSETS=$(KUBEBUILDER_ASSETS) go test ./... $(GO_TEST_ARGS) -v -coverprofile cover.out\n\n# Build manager binary\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 32,
                  "endLine": 29,
                  "endColumn": 40,
                  "snippet": {
                    "text": "# Allows for defining additional Go test args, e.g. '-tags integration'.\nGO_TEST_ARGS ?=\n\n# Allows for defining additional Docker buildx arguments, e.g. '--push'.\nBUILD_ARGS ?= --load\n# Architectures to build images for.\nBUILD_PLATFORMS ?= linux/amd64\n",
                    "rendered": {
                      "text": "# Allows for defining additional Go test args, e.g. '-tags integration'.\nGO_TEST_ARGS ?=\n\n# Allows for defining additional Docker buildx arguments, e.g. '--push'.\nBUILD_ARGS ?= --load\n# Architectures to build images for.\nBUILD_PLATFORMS ?= linux/amd64\n",
                      "markdown": "`# Allows for defining additional Go test args, e.g. '-tags integration'.\nGO_TEST_ARGS ?=\n\n# Allows for defining additional Docker buildx arguments, e.g. '--push'.\nBUILD_ARGS ?= --load\n# Architectures to build images for.\nBUILD_PLATFORMS ?= linux/amd64\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 16,
                  "endLine": 22,
                  "endColumn": 21,
                  "snippet": {
                    "text": "ifeq (,$(shell go env GOBIN))\nGOBIN=$(BUILD_DIR)/gobin\nelse\nGOBIN=$(shell go env GOBIN)\nendif\nexport PATH:=$(GOBIN):${PATH}\n\n",
                    "rendered": {
                      "text": "ifeq (,$(shell go env GOBIN))\nGOBIN=$(BUILD_DIR)/gobin\nelse\nGOBIN=$(shell go env GOBIN)\nendif\nexport PATH:=$(GOBIN):${PATH}\n\n",
                      "markdown": "`ifeq (,$(shell go env GOBIN))\nGOBIN=$(BUILD_DIR)/gobin\nelse\nGOBIN=$(shell go env GOBIN)\nendif\nexport PATH:=$(GOBIN):${PATH}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 17,
                  "endLine": 19,
                  "endColumn": 22,
                  "snippet": {
                    "text": "FUZZ_TIME ?= 1m\n\n# If gobin not set, create one on ./build and add to path.\nifeq (,$(shell go env GOBIN))\nGOBIN=$(BUILD_DIR)/gobin\nelse\nGOBIN=$(shell go env GOBIN)\n",
                    "rendered": {
                      "text": "FUZZ_TIME ?= 1m\n\n# If gobin not set, create one on ./build and add to path.\nifeq (,$(shell go env GOBIN))\nGOBIN=$(BUILD_DIR)/gobin\nelse\nGOBIN=$(shell go env GOBIN)\n",
                      "markdown": "`FUZZ_TIME ?= 1m\n\n# If gobin not set, create one on ./build and add to path.\nifeq (,$(shell go env GOBIN))\nGOBIN=$(BUILD_DIR)/gobin\nelse\nGOBIN=$(shell go env GOBIN)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 26,
                  "endLine": 11,
                  "endColumn": 31,
                  "snippet": {
                    "text": "SOPS_VER := $(shell go list -m all | grep github.com/getsops/sops | awk '{print $$2}')\n\n# Repository root based on Git metadata\nREPOSITORY_ROOT := $(shell git rev-parse --show-toplevel)\nBUILD_DIR := $(REPOSITORY_ROOT)/build\n\n# FUZZ_TIME defines the max amount of time, in Go Duration,\n",
                    "rendered": {
                      "text": "SOPS_VER := $(shell go list -m all | grep github.com/getsops/sops | awk '{print $$2}')\n\n# Repository root based on Git metadata\nREPOSITORY_ROOT := $(shell git rev-parse --show-toplevel)\nBUILD_DIR := $(REPOSITORY_ROOT)/build\n\n# FUZZ_TIME defines the max amount of time, in Go Duration,\n",
                      "markdown": "`SOPS_VER := $(shell go list -m all | grep github.com/getsops/sops | awk '{print $$2}')\n\n# Repository root based on Git metadata\nREPOSITORY_ROOT := $(shell git rev-parse --show-toplevel)\nBUILD_DIR := $(REPOSITORY_ROOT)/build\n\n# FUZZ_TIME defines the max amount of time, in Go Duration,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 26,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# Use the same version of SOPS already referenced on go.mod\nSOPS_VER := $(shell go list -m all | grep github.com/getsops/sops | awk '{print $$2}')\n\n# Repository root based on Git metadata\nREPOSITORY_ROOT := $(shell git rev-parse --show-toplevel)\nBUILD_DIR := $(REPOSITORY_ROOT)/build\n\n",
                    "rendered": {
                      "text": "# Use the same version of SOPS already referenced on go.mod\nSOPS_VER := $(shell go list -m all | grep github.com/getsops/sops | awk '{print $$2}')\n\n# Repository root based on Git metadata\nREPOSITORY_ROOT := $(shell git rev-parse --show-toplevel)\nBUILD_DIR := $(REPOSITORY_ROOT)/build\n\n",
                      "markdown": "`# Use the same version of SOPS already referenced on go.mod\nSOPS_VER := $(shell go list -m all | grep github.com/getsops/sops | awk '{print $$2}')\n\n# Repository root based on Git metadata\nREPOSITORY_ROOT := $(shell git rev-parse --show-toplevel)\nBUILD_DIR := $(REPOSITORY_ROOT)/build\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 67,
                  "endLine": 8,
                  "endColumn": 72,
                  "snippet": {
                    "text": "SOURCE_VER ?= $(shell go list -m all | grep github.com/fluxcd/source-controller/api | awk '{print $$2}')\n\n# Use the same version of SOPS already referenced on go.mod\nSOPS_VER := $(shell go list -m all | grep github.com/getsops/sops | awk '{print $$2}')\n\n# Repository root based on Git metadata\nREPOSITORY_ROOT := $(shell git rev-parse --show-toplevel)\n",
                    "rendered": {
                      "text": "SOURCE_VER ?= $(shell go list -m all | grep github.com/fluxcd/source-controller/api | awk '{print $$2}')\n\n# Use the same version of SOPS already referenced on go.mod\nSOPS_VER := $(shell go list -m all | grep github.com/getsops/sops | awk '{print $$2}')\n\n# Repository root based on Git metadata\nREPOSITORY_ROOT := $(shell git rev-parse --show-toplevel)\n",
                      "markdown": "`SOURCE_VER ?= $(shell go list -m all | grep github.com/fluxcd/source-controller/api | awk '{print $$2}')\n\n# Use the same version of SOPS already referenced on go.mod\nSOPS_VER := $(shell go list -m all | grep github.com/getsops/sops | awk '{print $$2}')\n\n# Repository root based on Git metadata\nREPOSITORY_ROOT := $(shell git rev-parse --show-toplevel)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 36,
                  "endLine": 8,
                  "endColumn": 42,
                  "snippet": {
                    "text": "SOURCE_VER ?= $(shell go list -m all | grep github.com/fluxcd/source-controller/api | awk '{print $$2}')\n\n# Use the same version of SOPS already referenced on go.mod\nSOPS_VER := $(shell go list -m all | grep github.com/getsops/sops | awk '{print $$2}')\n\n# Repository root based on Git metadata\nREPOSITORY_ROOT := $(shell git rev-parse --show-toplevel)\n",
                    "rendered": {
                      "text": "SOURCE_VER ?= $(shell go list -m all | grep github.com/fluxcd/source-controller/api | awk '{print $$2}')\n\n# Use the same version of SOPS already referenced on go.mod\nSOPS_VER := $(shell go list -m all | grep github.com/getsops/sops | awk '{print $$2}')\n\n# Repository root based on Git metadata\nREPOSITORY_ROOT := $(shell git rev-parse --show-toplevel)\n",
                      "markdown": "`SOURCE_VER ?= $(shell go list -m all | grep github.com/fluxcd/source-controller/api | awk '{print $$2}')\n\n# Use the same version of SOPS already referenced on go.mod\nSOPS_VER := $(shell go list -m all | grep github.com/getsops/sops | awk '{print $$2}')\n\n# Repository root based on Git metadata\nREPOSITORY_ROOT := $(shell git rev-parse --show-toplevel)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 85,
                  "endLine": 5,
                  "endColumn": 90,
                  "snippet": {
                    "text": "IMG ?= fluxcd/kustomize-controller:latest\n# Produce CRDs that work back to Kubernetes 1.16\nCRD_OPTIONS ?= crd:crdVersions=v1\nSOURCE_VER ?= $(shell go list -m all | grep github.com/fluxcd/source-controller/api | awk '{print $$2}')\n\n# Use the same version of SOPS already referenced on go.mod\nSOPS_VER := $(shell go list -m all | grep github.com/getsops/sops | awk '{print $$2}')\n",
                    "rendered": {
                      "text": "IMG ?= fluxcd/kustomize-controller:latest\n# Produce CRDs that work back to Kubernetes 1.16\nCRD_OPTIONS ?= crd:crdVersions=v1\nSOURCE_VER ?= $(shell go list -m all | grep github.com/fluxcd/source-controller/api | awk '{print $$2}')\n\n# Use the same version of SOPS already referenced on go.mod\nSOPS_VER := $(shell go list -m all | grep github.com/getsops/sops | awk '{print $$2}')\n",
                      "markdown": "`IMG ?= fluxcd/kustomize-controller:latest\n# Produce CRDs that work back to Kubernetes 1.16\nCRD_OPTIONS ?= crd:crdVersions=v1\nSOURCE_VER ?= $(shell go list -m all | grep github.com/fluxcd/source-controller/api | awk '{print $$2}')\n\n# Use the same version of SOPS already referenced on go.mod\nSOPS_VER := $(shell go list -m all | grep github.com/getsops/sops | awk '{print $$2}')\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-kustomize-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 5,
                  "endColumn": 44,
                  "snippet": {
                    "text": "IMG ?= fluxcd/kustomize-controller:latest\n# Produce CRDs that work back to Kubernetes 1.16\nCRD_OPTIONS ?= crd:crdVersions=v1\nSOURCE_VER ?= $(shell go list -m all | grep github.com/fluxcd/source-controller/api | awk '{print $$2}')\n\n# Use the same version of SOPS already referenced on go.mod\nSOPS_VER := $(shell go list -m all | grep github.com/getsops/sops | awk '{print $$2}')\n",
                    "rendered": {
                      "text": "IMG ?= fluxcd/kustomize-controller:latest\n# Produce CRDs that work back to Kubernetes 1.16\nCRD_OPTIONS ?= crd:crdVersions=v1\nSOURCE_VER ?= $(shell go list -m all | grep github.com/fluxcd/source-controller/api | awk '{print $$2}')\n\n# Use the same version of SOPS already referenced on go.mod\nSOPS_VER := $(shell go list -m all | grep github.com/getsops/sops | awk '{print $$2}')\n",
                      "markdown": "`IMG ?= fluxcd/kustomize-controller:latest\n# Produce CRDs that work back to Kubernetes 1.16\nCRD_OPTIONS ?= crd:crdVersions=v1\nSOURCE_VER ?= $(shell go list -m all | grep github.com/fluxcd/source-controller/api | awk '{print $$2}')\n\n# Use the same version of SOPS already referenced on go.mod\nSOPS_VER := $(shell go list -m all | grep github.com/getsops/sops | awk '{print $$2}')\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}