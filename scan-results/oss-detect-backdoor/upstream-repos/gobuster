{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/libgobuster/options_http.go"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 1,
                  "endLine": 22,
                  "endColumn": 9,
                  "snippet": {
                    "text": "// HTTPOptions is the struct to pass in all http options to Gobuster\ntype HTTPOptions struct {\n\tBasicHTTPOptions\n\tPassword              string\n\tURL                   string\n\tUsername              string\n\tCookies               string\n",
                    "rendered": {
                      "text": "// HTTPOptions is the struct to pass in all http options to Gobuster\ntype HTTPOptions struct {\n\tBasicHTTPOptions\n\tPassword              string\n\tURL                   string\n\tUsername              string\n\tCookies               string\n",
                      "markdown": "`// HTTPOptions is the struct to pass in all http options to Gobuster\ntype HTTPOptions struct {\n\tBasicHTTPOptions\n\tPassword              string\n\tURL                   string\n\tUsername              string\n\tCookies               string\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/libgobuster/options_http.go"
                },
                "region": {
                  "startLine": 13,
                  "endLine": 13,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tUserAgent       string\n\tProxy           string\n\tNoTLSValidation bool\n\tTimeout         time.Duration\n\tRetryOnTimeout  bool\n\tRetryAttempts   int\n\tTLSCertificate  *tls.Certificate\n",
                    "rendered": {
                      "text": "\tUserAgent       string\n\tProxy           string\n\tNoTLSValidation bool\n\tTimeout         time.Duration\n\tRetryOnTimeout  bool\n\tRetryAttempts   int\n\tTLSCertificate  *tls.Certificate\n",
                      "markdown": "`\tUserAgent       string\n\tProxy           string\n\tNoTLSValidation bool\n\tTimeout         time.Duration\n\tRetryOnTimeout  bool\n\tRetryAttempts   int\n\tTLSCertificate  *tls.Certificate\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 605,
                  "startColumn": 36,
                  "endLine": 605,
                  "endColumn": 44,
                  "snippet": {
                    "text": "  -h, --help                        help for fuzz\n  -m, --method string               Use the following HTTP method (default \"GET\")\n  -k, --no-tls-validation           Skip TLS certificate verification\n  -P, --password string             Password for Basic Auth\n      --proxy string                Proxy to use for requests [http(s)://host:port]\n      --random-agent                Use a random User-Agent string\n      --retry                       Should retry on request timeout\n",
                    "rendered": {
                      "text": "  -h, --help                        help for fuzz\n  -m, --method string               Use the following HTTP method (default \"GET\")\n  -k, --no-tls-validation           Skip TLS certificate verification\n  -P, --password string             Password for Basic Auth\n      --proxy string                Proxy to use for requests [http(s)://host:port]\n      --random-agent                Use a random User-Agent string\n      --retry                       Should retry on request timeout\n",
                      "markdown": "`  -h, --help                        help for fuzz\n  -m, --method string               Use the following HTTP method (default \"GET\")\n  -k, --no-tls-validation           Skip TLS certificate verification\n  -P, --password string             Password for Basic Auth\n      --proxy string                Proxy to use for requests [http(s)://host:port]\n      --random-agent                Use a random User-Agent string\n      --retry                       Should retry on request timeout\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 605,
                  "startColumn": 8,
                  "endLine": 605,
                  "endColumn": 16,
                  "snippet": {
                    "text": "  -h, --help                        help for fuzz\n  -m, --method string               Use the following HTTP method (default \"GET\")\n  -k, --no-tls-validation           Skip TLS certificate verification\n  -P, --password string             Password for Basic Auth\n      --proxy string                Proxy to use for requests [http(s)://host:port]\n      --random-agent                Use a random User-Agent string\n      --retry                       Should retry on request timeout\n",
                    "rendered": {
                      "text": "  -h, --help                        help for fuzz\n  -m, --method string               Use the following HTTP method (default \"GET\")\n  -k, --no-tls-validation           Skip TLS certificate verification\n  -P, --password string             Password for Basic Auth\n      --proxy string                Proxy to use for requests [http(s)://host:port]\n      --random-agent                Use a random User-Agent string\n      --retry                       Should retry on request timeout\n",
                      "markdown": "`  -h, --help                        help for fuzz\n  -m, --method string               Use the following HTTP method (default \"GET\")\n  -k, --no-tls-validation           Skip TLS certificate verification\n  -P, --password string             Password for Basic Auth\n      --proxy string                Proxy to use for requests [http(s)://host:port]\n      --random-agent                Use a random User-Agent string\n      --retry                       Should retry on request timeout\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 531,
                  "startColumn": 30,
                  "endLine": 531,
                  "endColumn": 38,
                  "snippet": {
                    "text": "  -h, --help                  help for vhost\n  -m, --method string         Use the following HTTP method (default \"GET\")\n  -k, --no-tls-validation     Skip TLS certificate verification\n  -P, --password string       Password for Basic Auth\n      --proxy string          Proxy to use for requests [http(s)://host:port]\n      --random-agent          Use a random User-Agent string\n      --retry                 Should retry on request timeout\n",
                    "rendered": {
                      "text": "  -h, --help                  help for vhost\n  -m, --method string         Use the following HTTP method (default \"GET\")\n  -k, --no-tls-validation     Skip TLS certificate verification\n  -P, --password string       Password for Basic Auth\n      --proxy string          Proxy to use for requests [http(s)://host:port]\n      --random-agent          Use a random User-Agent string\n      --retry                 Should retry on request timeout\n",
                      "markdown": "`  -h, --help                  help for vhost\n  -m, --method string         Use the following HTTP method (default \"GET\")\n  -k, --no-tls-validation     Skip TLS certificate verification\n  -P, --password string       Password for Basic Auth\n      --proxy string          Proxy to use for requests [http(s)://host:port]\n      --random-agent          Use a random User-Agent string\n      --retry                 Should retry on request timeout\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 531,
                  "startColumn": 8,
                  "endLine": 531,
                  "endColumn": 16,
                  "snippet": {
                    "text": "  -h, --help                  help for vhost\n  -m, --method string         Use the following HTTP method (default \"GET\")\n  -k, --no-tls-validation     Skip TLS certificate verification\n  -P, --password string       Password for Basic Auth\n      --proxy string          Proxy to use for requests [http(s)://host:port]\n      --random-agent          Use a random User-Agent string\n      --retry                 Should retry on request timeout\n",
                    "rendered": {
                      "text": "  -h, --help                  help for vhost\n  -m, --method string         Use the following HTTP method (default \"GET\")\n  -k, --no-tls-validation     Skip TLS certificate verification\n  -P, --password string       Password for Basic Auth\n      --proxy string          Proxy to use for requests [http(s)://host:port]\n      --random-agent          Use a random User-Agent string\n      --retry                 Should retry on request timeout\n",
                      "markdown": "`  -h, --help                  help for vhost\n  -m, --method string         Use the following HTTP method (default \"GET\")\n  -k, --no-tls-validation     Skip TLS certificate verification\n  -P, --password string       Password for Basic Auth\n      --proxy string          Proxy to use for requests [http(s)://host:port]\n      --random-agent          Use a random User-Agent string\n      --retry                 Should retry on request timeout\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 353,
                  "startColumn": 40,
                  "endLine": 353,
                  "endColumn": 48,
                  "snippet": {
                    "text": "  -m, --method string                   Use the following HTTP method (default \"GET\")\n  -n, --no-status                       Don't print status codes\n  -k, --no-tls-validation               Skip TLS certificate verification\n  -P, --password string                 Password for Basic Auth\n      --proxy string                    Proxy to use for requests [http(s)://host:port]\n      --random-agent                    Use a random User-Agent string\n      --retry                           Should retry on request timeout\n",
                    "rendered": {
                      "text": "  -m, --method string                   Use the following HTTP method (default \"GET\")\n  -n, --no-status                       Don't print status codes\n  -k, --no-tls-validation               Skip TLS certificate verification\n  -P, --password string                 Password for Basic Auth\n      --proxy string                    Proxy to use for requests [http(s)://host:port]\n      --random-agent                    Use a random User-Agent string\n      --retry                           Should retry on request timeout\n",
                      "markdown": "`  -m, --method string                   Use the following HTTP method (default \"GET\")\n  -n, --no-status                       Don't print status codes\n  -k, --no-tls-validation               Skip TLS certificate verification\n  -P, --password string                 Password for Basic Auth\n      --proxy string                    Proxy to use for requests [http(s)://host:port]\n      --random-agent                    Use a random User-Agent string\n      --retry                           Should retry on request timeout\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 353,
                  "startColumn": 8,
                  "endLine": 353,
                  "endColumn": 16,
                  "snippet": {
                    "text": "  -m, --method string                   Use the following HTTP method (default \"GET\")\n  -n, --no-status                       Don't print status codes\n  -k, --no-tls-validation               Skip TLS certificate verification\n  -P, --password string                 Password for Basic Auth\n      --proxy string                    Proxy to use for requests [http(s)://host:port]\n      --random-agent                    Use a random User-Agent string\n      --retry                           Should retry on request timeout\n",
                    "rendered": {
                      "text": "  -m, --method string                   Use the following HTTP method (default \"GET\")\n  -n, --no-status                       Don't print status codes\n  -k, --no-tls-validation               Skip TLS certificate verification\n  -P, --password string                 Password for Basic Auth\n      --proxy string                    Proxy to use for requests [http(s)://host:port]\n      --random-agent                    Use a random User-Agent string\n      --retry                           Should retry on request timeout\n",
                      "markdown": "`  -m, --method string                   Use the following HTTP method (default \"GET\")\n  -n, --no-status                       Don't print status codes\n  -k, --no-tls-validation               Skip TLS certificate verification\n  -P, --password string                 Password for Basic Auth\n      --proxy string                    Proxy to use for requests [http(s)://host:port]\n      --random-agent                    Use a random User-Agent string\n      --retry                           Should retry on request timeout\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 524,
                  "startColumn": 137,
                  "endLine": 524,
                  "endColumn": 145,
                  "snippet": {
                    "text": " to words from wordlist. Otherwise the fully qualified domains need to be specified in the wordlist.\n  -c, --cookies string        Cookies to use for the requests\n      --domain string         the domain to append when using an IP address as URL. If left empty and you specify a domain based URL the hostname from the URL is extracted\n      --exclude-length ints   exclude the following content length (completely ignores the status). Supply multiple times to exclude multiple sizes.\n  -r, --follow-redirect       Follow redirects\n  -H, --headers stringArray   Specify HTTP headers, -H 'Header1: val1' -H 'He",
                    "rendered": {
                      "text": " to words from wordlist. Otherwise the fully qualified domains need to be specified in the wordlist.\n  -c, --cookies string        Cookies to use for the requests\n      --domain string         the domain to append when using an IP address as URL. If left empty and you specify a domain based URL the hostname from the URL is extracted\n      --exclude-length ints   exclude the following content length (completely ignores the status). Supply multiple times to exclude multiple sizes.\n  -r, --follow-redirect       Follow redirects\n  -H, --headers stringArray   Specify HTTP headers, -H 'Header1: val1' -H 'He",
                      "markdown": "` to words from wordlist. Otherwise the fully qualified domains need to be specified in the wordlist.\n  -c, --cookies string        Cookies to use for the requests\n      --domain string         the domain to append when using an IP address as URL. If left empty and you specify a domain based URL the hostname from the URL is extracted\n      --exclude-length ints   exclude the following content length (completely ignores the status). Supply multiple times to exclude multiple sizes.\n  -r, --follow-redirect       Follow redirects\n  -H, --headers stringArray   Specify HTTP headers, -H 'Header1: val1' -H 'He`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 757,
                  "startColumn": 37,
                  "endLine": 757,
                  "endColumn": 41,
                  "snippet": {
                    "text": "hashcat -a 3 --stdout ?l | gobuster dir -u https://mysite.com -w -\n```\n\nNote: If the `-w` option is specified at the same time as piping from STDIN, an error will be shown and the program will terminate.\n\n## Patterns\n\n",
                    "rendered": {
                      "text": "hashcat -a 3 --stdout ?l | gobuster dir -u https://mysite.com -w -\n```\n\nNote: If the `-w` option is specified at the same time as piping from STDIN, an error will be shown and the program will terminate.\n\n## Patterns\n\n",
                      "markdown": "`hashcat -a 3 --stdout ?l | gobuster dir -u https://mysite.com -w -\n```\n\nNote: If the `-w` option is specified at the same time as piping from STDIN, an error will be shown and the program will terminate.\n\n## Patterns\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 266,
                  "endLine": 119,
                  "endColumn": 270,
                  "snippet": {
                    "text": "\n### Building From Source\n\nSince this tool is written in [Go](https://golang.org/) you need to install the Go language/compiler/etc. Full details of installation and set up can be found [on the Go language website](https://golang.org/doc/install). Once installed you have two options. You need at least go 1.19 to compile gobuster.\n\n### Compiling\n\n",
                    "rendered": {
                      "text": "\n### Building From Source\n\nSince this tool is written in [Go](https://golang.org/) you need to install the Go language/compiler/etc. Full details of installation and set up can be found [on the Go language website](https://golang.org/doc/install). Once installed you have two options. You need at least go 1.19 to compile gobuster.\n\n### Compiling\n\n",
                      "markdown": "`\n### Building From Source\n\nSince this tool is written in [Go](https://golang.org/) you need to install the Go language/compiler/etc. Full details of installation and set up can be found [on the Go language website](https://golang.org/doc/install). Once installed you have two options. You need at least go 1.19 to compile gobuster.\n\n### Compiling\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 12,
                  "endLine": 115,
                  "endColumn": 16,
                  "snippet": {
                    "text": "go install github.com/OJ/gobuster/v3@latest\n```\n\nPS: You need at least go 1.19 to compile gobuster.\n\n### Building From Source\n\n",
                    "rendered": {
                      "text": "go install github.com/OJ/gobuster/v3@latest\n```\n\nPS: You need at least go 1.19 to compile gobuster.\n\n### Building From Source\n\n",
                      "markdown": "`go install github.com/OJ/gobuster/v3@latest\n```\n\nPS: You need at least go 1.19 to compile gobuster.\n\n### Building From Source\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 783,
                  "startColumn": 111,
                  "endLine": 783,
                  "endColumn": 116,
                  "snippet": {
                    "text": "- Create a pattern file to use for common bucket names.\n\n```bash\ncurl -s --output - https://raw.githubusercontent.com/eth0izzle/bucket-stream/master/permutations/extended.txt | sed -s 's/%s/{GOBUSTER}/' > patterns.txt\n```\n\n- Run gobuster with the custom input. Be sure to turn verbose mode on to see the bucket details\n",
                    "rendered": {
                      "text": "- Create a pattern file to use for common bucket names.\n\n```bash\ncurl -s --output - https://raw.githubusercontent.com/eth0izzle/bucket-stream/master/permutations/extended.txt | sed -s 's/%s/{GOBUSTER}/' > patterns.txt\n```\n\n- Run gobuster with the custom input. Be sure to turn verbose mode on to see the bucket details\n",
                      "markdown": "`- Create a pattern file to use for common bucket names.\n\n```bash\ncurl -s --output - https://raw.githubusercontent.com/eth0izzle/bucket-stream/master/permutations/extended.txt | sed -s 's/%s/{GOBUSTER}/' > patterns.txt\n```\n\n- Run gobuster with the custom input. Be sure to turn verbose mode on to see the bucket details\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 782,
                  "startColumn": 7,
                  "endLine": 783,
                  "endColumn": 5,
                  "snippet": {
                    "text": "- Create a custom wordlist for the target containing company names and so on\n- Create a pattern file to use for common bucket names.\n\n```bash\ncurl -s --output - https://raw.githubusercontent.com/eth0izzle/bucket-stream/master/permutations/extended.txt | sed -s 's/%s/{GOBUSTER}/' > patterns.txt\n```\n\n- Run gobuster with the custom input. Be sure to turn verbose mode on to see the bucket details\n",
                    "rendered": {
                      "text": "- Create a custom wordlist for the target containing company names and so on\n- Create a pattern file to use for common bucket names.\n\n```bash\ncurl -s --output - https://raw.githubusercontent.com/eth0izzle/bucket-stream/master/permutations/extended.txt | sed -s 's/%s/{GOBUSTER}/' > patterns.txt\n```\n\n- Run gobuster with the custom input. Be sure to turn verbose mode on to see the bucket details\n",
                      "markdown": "`- Create a custom wordlist for the target containing company names and so on\n- Create a pattern file to use for common bucket names.\n\n```bash\ncurl -s --output - https://raw.githubusercontent.com/eth0izzle/bucket-stream/master/permutations/extended.txt | sed -s 's/%s/{GOBUSTER}/' > patterns.txt\n```\n\n- Run gobuster with the custom input. Be sure to turn verbose mode on to see the bucket details\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 757,
                  "startColumn": 49,
                  "endLine": 757,
                  "endColumn": 55,
                  "snippet": {
                    "text": "hashcat -a 3 --stdout ?l | gobuster dir -u https://mysite.com -w -\n```\n\nNote: If the `-w` option is specified at the same time as piping from STDIN, an error will be shown and the program will terminate.\n\n## Patterns\n\n",
                    "rendered": {
                      "text": "hashcat -a 3 --stdout ?l | gobuster dir -u https://mysite.com -w -\n```\n\nNote: If the `-w` option is specified at the same time as piping from STDIN, an error will be shown and the program will terminate.\n\n## Patterns\n\n",
                      "markdown": "`hashcat -a 3 --stdout ?l | gobuster dir -u https://mysite.com -w -\n```\n\nNote: If the `-w` option is specified at the same time as piping from STDIN, an error will be shown and the program will terminate.\n\n## Patterns\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 745,
                  "startColumn": 8,
                  "endLine": 745,
                  "endColumn": 14,
                  "snippet": {
                    "text": "### Examples\n\n```text\ngobuster tftp -s tftp.example.com -w common-filenames.txt\n```\n\n\n",
                    "rendered": {
                      "text": "### Examples\n\n```text\ngobuster tftp -s tftp.example.com -w common-filenames.txt\n```\n\n\n",
                      "markdown": "`### Examples\n\n```text\ngobuster tftp -s tftp.example.com -w common-filenames.txt\n```\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 730,
                  "startColumn": 25,
                  "endLine": 730,
                  "endColumn": 31,
                  "snippet": {
                    "text": "      --timeout duration   TFTP timeout (default 1s)\n\nGlobal Flags:\n      --delay duration    Time each thread waits between requests (e.g. 1500ms)\n      --no-color          Disable color output\n      --no-error          Don't display errors\n  -z, --no-progress       Don't display progress\n",
                    "rendered": {
                      "text": "      --timeout duration   TFTP timeout (default 1s)\n\nGlobal Flags:\n      --delay duration    Time each thread waits between requests (e.g. 1500ms)\n      --no-color          Disable color output\n      --no-error          Don't display errors\n  -z, --no-progress       Don't display progress\n",
                      "markdown": "`      --timeout duration   TFTP timeout (default 1s)\n\nGlobal Flags:\n      --delay duration    Time each thread waits between requests (e.g. 1500ms)\n      --no-color          Disable color output\n      --no-error          Don't display errors\n  -z, --no-progress       Don't display progress\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 727,
                  "startColumn": 26,
                  "endLine": 727,
                  "endColumn": 32,
                  "snippet": {
                    "text": "Flags:\n  -h, --help               help for tftp\n  -s, --server string      The target TFTP server\n      --timeout duration   TFTP timeout (default 1s)\n\nGlobal Flags:\n      --delay duration    Time each thread waits between requests (e.g. 1500ms)\n",
                    "rendered": {
                      "text": "Flags:\n  -h, --help               help for tftp\n  -s, --server string      The target TFTP server\n      --timeout duration   TFTP timeout (default 1s)\n\nGlobal Flags:\n      --delay duration    Time each thread waits between requests (e.g. 1500ms)\n",
                      "markdown": "`Flags:\n  -h, --help               help for tftp\n  -s, --server string      The target TFTP server\n      --timeout duration   TFTP timeout (default 1s)\n\nGlobal Flags:\n      --delay duration    Time each thread waits between requests (e.g. 1500ms)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 726,
                  "startColumn": 37,
                  "endLine": 726,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\nFlags:\n  -h, --help               help for tftp\n  -s, --server string      The target TFTP server\n      --timeout duration   TFTP timeout (default 1s)\n\nGlobal Flags:\n",
                    "rendered": {
                      "text": "\nFlags:\n  -h, --help               help for tftp\n  -s, --server string      The target TFTP server\n      --timeout duration   TFTP timeout (default 1s)\n\nGlobal Flags:\n",
                      "markdown": "`\nFlags:\n  -h, --help               help for tftp\n  -s, --server string      The target TFTP server\n      --timeout duration   TFTP timeout (default 1s)\n\nGlobal Flags:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 725,
                  "startColumn": 35,
                  "endLine": 726,
                  "snippet": {
                    "text": "  gobuster tftp [flags]\n\nFlags:\n  -h, --help               help for tftp\n  -s, --server string      The target TFTP server\n      --timeout duration   TFTP timeout (default 1s)\n\nGlobal Flags:\n",
                    "rendered": {
                      "text": "  gobuster tftp [flags]\n\nFlags:\n  -h, --help               help for tftp\n  -s, --server string      The target TFTP server\n      --timeout duration   TFTP timeout (default 1s)\n\nGlobal Flags:\n",
                      "markdown": "`  gobuster tftp [flags]\n\nFlags:\n  -h, --help               help for tftp\n  -s, --server string      The target TFTP server\n      --timeout duration   TFTP timeout (default 1s)\n\nGlobal Flags:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 722,
                  "startColumn": 10,
                  "endLine": 722,
                  "endColumn": 16,
                  "snippet": {
                    "text": "Uses TFTP enumeration mode\n\nUsage:\n  gobuster tftp [flags]\n\nFlags:\n  -h, --help               help for tftp\n",
                    "rendered": {
                      "text": "Uses TFTP enumeration mode\n\nUsage:\n  gobuster tftp [flags]\n\nFlags:\n  -h, --help               help for tftp\n",
                      "markdown": "`Uses TFTP enumeration mode\n\nUsage:\n  gobuster tftp [flags]\n\nFlags:\n  -h, --help               help for tftp\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 719,
                  "startColumn": 4,
                  "endLine": 719,
                  "endColumn": 10,
                  "snippet": {
                    "text": "### Options\n\n```text\nUses TFTP enumeration mode\n\nUsage:\n  gobuster tftp [flags]\n",
                    "rendered": {
                      "text": "### Options\n\n```text\nUses TFTP enumeration mode\n\nUsage:\n  gobuster tftp [flags]\n",
                      "markdown": "`### Options\n\n```text\nUses TFTP enumeration mode\n\nUsage:\n  gobuster tftp [flags]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 696,
                  "startColumn": 25,
                  "endLine": 696,
                  "endColumn": 31,
                  "snippet": {
                    "text": "  -a, --useragent string     Set the User-Agent string (default \"gobuster/3.2.0\")\n\nGlobal Flags:\n      --delay duration    Time each thread waits between requests (e.g. 1500ms)\n      --no-color          Disable color output\n      --no-error          Don't display errors\n  -z, --no-progress       Don't display progress\n",
                    "rendered": {
                      "text": "  -a, --useragent string     Set the User-Agent string (default \"gobuster/3.2.0\")\n\nGlobal Flags:\n      --delay duration    Time each thread waits between requests (e.g. 1500ms)\n      --no-color          Disable color output\n      --no-error          Don't display errors\n  -z, --no-progress       Don't display progress\n",
                      "markdown": "`  -a, --useragent string     Set the User-Agent string (default \"gobuster/3.2.0\")\n\nGlobal Flags:\n      --delay duration    Time each thread waits between requests (e.g. 1500ms)\n      --no-color          Disable color output\n      --no-error          Don't display errors\n  -z, --no-progress       Don't display progress\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 692,
                  "startColumn": 33,
                  "endLine": 692,
                  "endColumn": 42,
                  "snippet": {
                    "text": "      --random-agent         Use a random User-Agent string\n      --retry                Should retry on request timeout\n      --retry-attempts int   Times to retry on request timeout (default 3)\n      --timeout duration     HTTP Timeout (default 10s)\n  -a, --useragent string     Set the User-Agent string (default \"gobuster/3.2.0\")\n\nGlobal Flags:\n",
                    "rendered": {
                      "text": "      --random-agent         Use a random User-Agent string\n      --retry                Should retry on request timeout\n      --retry-attempts int   Times to retry on request timeout (default 3)\n      --timeout duration     HTTP Timeout (default 10s)\n  -a, --useragent string     Set the User-Agent string (default \"gobuster/3.2.0\")\n\nGlobal Flags:\n",
                      "markdown": "`      --random-agent         Use a random User-Agent string\n      --retry                Should retry on request timeout\n      --retry-attempts int   Times to retry on request timeout (default 3)\n      --timeout duration     HTTP Timeout (default 10s)\n  -a, --useragent string     Set the User-Agent string (default \"gobuster/3.2.0\")\n\nGlobal Flags:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 691,
                  "startColumn": 54,
                  "endLine": 691,
                  "endColumn": 63,
                  "snippet": {
                    "text": "      --proxy string         Proxy to use for requests [http(s)://host:port]\n      --random-agent         Use a random User-Agent string\n      --retry                Should retry on request timeout\n      --retry-attempts int   Times to retry on request timeout (default 3)\n      --timeout duration     HTTP Timeout (default 10s)\n  -a, --useragent string     Set the User-Agent string (default \"gobuster/3.2.0\")\n\n",
                    "rendered": {
                      "text": "      --proxy string         Proxy to use for requests [http(s)://host:port]\n      --random-agent         Use a random User-Agent string\n      --retry                Should retry on request timeout\n      --retry-attempts int   Times to retry on request timeout (default 3)\n      --timeout duration     HTTP Timeout (default 10s)\n  -a, --useragent string     Set the User-Agent string (default \"gobuster/3.2.0\")\n\n",
                      "markdown": "`      --proxy string         Proxy to use for requests [http(s)://host:port]\n      --random-agent         Use a random User-Agent string\n      --retry                Should retry on request timeout\n      --retry-attempts int   Times to retry on request timeout (default 3)\n      --timeout duration     HTTP Timeout (default 10s)\n  -a, --useragent string     Set the User-Agent string (default \"gobuster/3.2.0\")\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 690,
                  "startColumn": 52,
                  "endLine": 691,
                  "snippet": {
                    "text": "  -k, --no-tls-validation    Skip TLS certificate verification\n      --proxy string         Proxy to use for requests [http(s)://host:port]\n      --random-agent         Use a random User-Agent string\n      --retry                Should retry on request timeout\n      --retry-attempts int   Times to retry on request timeout (default 3)\n      --timeout duration     HTTP Timeout (default 10s)\n  -a, --useragent string     Set the User-Agent string (default \"gobuster/3.2.0\")\n\n",
                    "rendered": {
                      "text": "  -k, --no-tls-validation    Skip TLS certificate verification\n      --proxy string         Proxy to use for requests [http(s)://host:port]\n      --random-agent         Use a random User-Agent string\n      --retry                Should retry on request timeout\n      --retry-attempts int   Times to retry on request timeout (default 3)\n      --timeout duration     HTTP Timeout (default 10s)\n  -a, --useragent string     Set the User-Agent string (default \"gobuster/3.2.0\")\n\n",
                      "markdown": "`  -k, --no-tls-validation    Skip TLS certificate verification\n      --proxy string         Proxy to use for requests [http(s)://host:port]\n      --random-agent         Use a random User-Agent string\n      --retry                Should retry on request timeout\n      --retry-attempts int   Times to retry on request timeout (default 3)\n      --timeout duration     HTTP Timeout (default 10s)\n  -a, --useragent string     Set the User-Agent string (default \"gobuster/3.2.0\")\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 656,
                  "startColumn": 25,
                  "endLine": 656,
                  "endColumn": 31,
                  "snippet": {
                    "text": "  -a, --useragent string     Set the User-Agent string (default \"gobuster/3.2.0\")\n\nGlobal Flags:\n      --delay duration    Time each thread waits between requests (e.g. 1500ms)\n      --no-color          Disable color output\n      --no-error          Don't display errors\n  -z, --no-progress       Don't display progress\n",
                    "rendered": {
                      "text": "  -a, --useragent string     Set the User-Agent string (default \"gobuster/3.2.0\")\n\nGlobal Flags:\n      --delay duration    Time each thread waits between requests (e.g. 1500ms)\n      --no-color          Disable color output\n      --no-error          Don't display errors\n  -z, --no-progress       Don't display progress\n",
                      "markdown": "`  -a, --useragent string     Set the User-Agent string (default \"gobuster/3.2.0\")\n\nGlobal Flags:\n      --delay duration    Time each thread waits between requests (e.g. 1500ms)\n      --no-color          Disable color output\n      --no-error          Don't display errors\n  -z, --no-progress       Don't display progress\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 652,
                  "startColumn": 33,
                  "endLine": 652,
                  "endColumn": 42,
                  "snippet": {
                    "text": "      --random-agent         Use a random User-Agent string\n      --retry                Should retry on request timeout\n      --retry-attempts int   Times to retry on request timeout (default 3)\n      --timeout duration     HTTP Timeout (default 10s)\n  -a, --useragent string     Set the User-Agent string (default \"gobuster/3.2.0\")\n\nGlobal Flags:\n",
                    "rendered": {
                      "text": "      --random-agent         Use a random User-Agent string\n      --retry                Should retry on request timeout\n      --retry-attempts int   Times to retry on request timeout (default 3)\n      --timeout duration     HTTP Timeout (default 10s)\n  -a, --useragent string     Set the User-Agent string (default \"gobuster/3.2.0\")\n\nGlobal Flags:\n",
                      "markdown": "`      --random-agent         Use a random User-Agent string\n      --retry                Should retry on request timeout\n      --retry-attempts int   Times to retry on request timeout (default 3)\n      --timeout duration     HTTP Timeout (default 10s)\n  -a, --useragent string     Set the User-Agent string (default \"gobuster/3.2.0\")\n\nGlobal Flags:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 651,
                  "startColumn": 54,
                  "endLine": 651,
                  "endColumn": 63,
                  "snippet": {
                    "text": "      --proxy string         Proxy to use for requests [http(s)://host:port]\n      --random-agent         Use a random User-Agent string\n      --retry                Should retry on request timeout\n      --retry-attempts int   Times to retry on request timeout (default 3)\n      --timeout duration     HTTP Timeout (default 10s)\n  -a, --useragent string     Set the User-Agent string (default \"gobuster/3.2.0\")\n\n",
                    "rendered": {
                      "text": "      --proxy string         Proxy to use for requests [http(s)://host:port]\n      --random-agent         Use a random User-Agent string\n      --retry                Should retry on request timeout\n      --retry-attempts int   Times to retry on request timeout (default 3)\n      --timeout duration     HTTP Timeout (default 10s)\n  -a, --useragent string     Set the User-Agent string (default \"gobuster/3.2.0\")\n\n",
                      "markdown": "`      --proxy string         Proxy to use for requests [http(s)://host:port]\n      --random-agent         Use a random User-Agent string\n      --retry                Should retry on request timeout\n      --retry-attempts int   Times to retry on request timeout (default 3)\n      --timeout duration     HTTP Timeout (default 10s)\n  -a, --useragent string     Set the User-Agent string (default \"gobuster/3.2.0\")\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 650,
                  "startColumn": 52,
                  "endLine": 651,
                  "snippet": {
                    "text": "  -k, --no-tls-validation    Skip TLS certificate verification\n      --proxy string         Proxy to use for requests [http(s)://host:port]\n      --random-agent         Use a random User-Agent string\n      --retry                Should retry on request timeout\n      --retry-attempts int   Times to retry on request timeout (default 3)\n      --timeout duration     HTTP Timeout (default 10s)\n  -a, --useragent string     Set the User-Agent string (default \"gobuster/3.2.0\")\n\n",
                    "rendered": {
                      "text": "  -k, --no-tls-validation    Skip TLS certificate verification\n      --proxy string         Proxy to use for requests [http(s)://host:port]\n      --random-agent         Use a random User-Agent string\n      --retry                Should retry on request timeout\n      --retry-attempts int   Times to retry on request timeout (default 3)\n      --timeout duration     HTTP Timeout (default 10s)\n  -a, --useragent string     Set the User-Agent string (default \"gobuster/3.2.0\")\n\n",
                      "markdown": "`  -k, --no-tls-validation    Skip TLS certificate verification\n      --proxy string         Proxy to use for requests [http(s)://host:port]\n      --random-agent         Use a random User-Agent string\n      --retry                Should retry on request timeout\n      --retry-attempts int   Times to retry on request timeout (default 3)\n      --timeout duration     HTTP Timeout (default 10s)\n  -a, --useragent string     Set the User-Agent string (default \"gobuster/3.2.0\")\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 616,
                  "startColumn": 25,
                  "endLine": 616,
                  "endColumn": 31,
                  "snippet": {
                    "text": "  -U, --username string             Username for Basic Auth\n\nGlobal Flags:\n      --delay duration    Time each thread waits between requests (e.g. 1500ms)\n      --no-color          Disable color output\n      --no-error          Don't display errors\n  -z, --no-progress       Don't display progress\n",
                    "rendered": {
                      "text": "  -U, --username string             Username for Basic Auth\n\nGlobal Flags:\n      --delay duration    Time each thread waits between requests (e.g. 1500ms)\n      --no-color          Disable color output\n      --no-error          Don't display errors\n  -z, --no-progress       Don't display progress\n",
                      "markdown": "`  -U, --username string             Username for Basic Auth\n\nGlobal Flags:\n      --delay duration    Time each thread waits between requests (e.g. 1500ms)\n      --no-color          Disable color output\n      --no-error          Don't display errors\n  -z, --no-progress       Don't display progress\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 610,
                  "startColumn": 40,
                  "endLine": 610,
                  "endColumn": 49,
                  "snippet": {
                    "text": "      --random-agent                Use a random User-Agent string\n      --retry                       Should retry on request timeout\n      --retry-attempts int          Times to retry on request timeout (default 3)\n      --timeout duration            HTTP Timeout (default 10s)\n  -u, --url string                  The target URL\n  -a, --useragent string            Set the User-Agent string (default \"gobuster/3.2.0\")\n  -U, --username string             Username for Basic Auth\n",
                    "rendered": {
                      "text": "      --random-agent                Use a random User-Agent string\n      --retry                       Should retry on request timeout\n      --retry-attempts int          Times to retry on request timeout (default 3)\n      --timeout duration            HTTP Timeout (default 10s)\n  -u, --url string                  The target URL\n  -a, --useragent string            Set the User-Agent string (default \"gobuster/3.2.0\")\n  -U, --username string             Username for Basic Auth\n",
                      "markdown": "`      --random-agent                Use a random User-Agent string\n      --retry                       Should retry on request timeout\n      --retry-attempts int          Times to retry on request timeout (default 3)\n      --timeout duration            HTTP Timeout (default 10s)\n  -u, --url string                  The target URL\n  -a, --useragent string            Set the User-Agent string (default \"gobuster/3.2.0\")\n  -U, --username string             Username for Basic Auth\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 609,
                  "startColumn": 61,
                  "endLine": 609,
                  "endColumn": 70,
                  "snippet": {
                    "text": "      --proxy string                Proxy to use for requests [http(s)://host:port]\n      --random-agent                Use a random User-Agent string\n      --retry                       Should retry on request timeout\n      --retry-attempts int          Times to retry on request timeout (default 3)\n      --timeout duration            HTTP Timeout (default 10s)\n  -u, --url string                  The target URL\n  -a, --useragent string            Set the User-Agent string (default \"gobuster/3.2.0\")\n",
                    "rendered": {
                      "text": "      --proxy string                Proxy to use for requests [http(s)://host:port]\n      --random-agent                Use a random User-Agent string\n      --retry                       Should retry on request timeout\n      --retry-attempts int          Times to retry on request timeout (default 3)\n      --timeout duration            HTTP Timeout (default 10s)\n  -u, --url string                  The target URL\n  -a, --useragent string            Set the User-Agent string (default \"gobuster/3.2.0\")\n",
                      "markdown": "`      --proxy string                Proxy to use for requests [http(s)://host:port]\n      --random-agent                Use a random User-Agent string\n      --retry                       Should retry on request timeout\n      --retry-attempts int          Times to retry on request timeout (default 3)\n      --timeout duration            HTTP Timeout (default 10s)\n  -u, --url string                  The target URL\n  -a, --useragent string            Set the User-Agent string (default \"gobuster/3.2.0\")\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 608,
                  "startColumn": 59,
                  "endLine": 609,
                  "snippet": {
                    "text": "  -P, --password string             Password for Basic Auth\n      --proxy string                Proxy to use for requests [http(s)://host:port]\n      --random-agent                Use a random User-Agent string\n      --retry                       Should retry on request timeout\n      --retry-attempts int          Times to retry on request timeout (default 3)\n      --timeout duration            HTTP Timeout (default 10s)\n  -u, --url string                  The target URL\n  -a, --useragent string            Set the User-Agent string (default \"gobuster/3.2.0\")\n",
                    "rendered": {
                      "text": "  -P, --password string             Password for Basic Auth\n      --proxy string                Proxy to use for requests [http(s)://host:port]\n      --random-agent                Use a random User-Agent string\n      --retry                       Should retry on request timeout\n      --retry-attempts int          Times to retry on request timeout (default 3)\n      --timeout duration            HTTP Timeout (default 10s)\n  -u, --url string                  The target URL\n  -a, --useragent string            Set the User-Agent string (default \"gobuster/3.2.0\")\n",
                      "markdown": "`  -P, --password string             Password for Basic Auth\n      --proxy string                Proxy to use for requests [http(s)://host:port]\n      --random-agent                Use a random User-Agent string\n      --retry                       Should retry on request timeout\n      --retry-attempts int          Times to retry on request timeout (default 3)\n      --timeout duration            HTTP Timeout (default 10s)\n  -u, --url string                  The target URL\n  -a, --useragent string            Set the User-Agent string (default \"gobuster/3.2.0\")\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 542,
                  "startColumn": 25,
                  "endLine": 542,
                  "endColumn": 31,
                  "snippet": {
                    "text": "  -U, --username string       Username for Basic Auth\n\nGlobal Flags:\n      --delay duration    Time each thread waits between requests (e.g. 1500ms)\n      --no-color          Disable color output\n      --no-error          Don't display errors\n  -z, --no-progress       Don't display progress\n",
                    "rendered": {
                      "text": "  -U, --username string       Username for Basic Auth\n\nGlobal Flags:\n      --delay duration    Time each thread waits between requests (e.g. 1500ms)\n      --no-color          Disable color output\n      --no-error          Don't display errors\n  -z, --no-progress       Don't display progress\n",
                      "markdown": "`  -U, --username string       Username for Basic Auth\n\nGlobal Flags:\n      --delay duration    Time each thread waits between requests (e.g. 1500ms)\n      --no-color          Disable color output\n      --no-error          Don't display errors\n  -z, --no-progress       Don't display progress\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 536,
                  "startColumn": 34,
                  "endLine": 536,
                  "endColumn": 43,
                  "snippet": {
                    "text": "      --random-agent          Use a random User-Agent string\n      --retry                 Should retry on request timeout\n      --retry-attempts int    Times to retry on request timeout (default 3)\n      --timeout duration      HTTP Timeout (default 10s)\n  -u, --url string            The target URL\n  -a, --useragent string      Set the User-Agent string (default \"gobuster/3.2.0\")\n  -U, --username string       Username for Basic Auth\n",
                    "rendered": {
                      "text": "      --random-agent          Use a random User-Agent string\n      --retry                 Should retry on request timeout\n      --retry-attempts int    Times to retry on request timeout (default 3)\n      --timeout duration      HTTP Timeout (default 10s)\n  -u, --url string            The target URL\n  -a, --useragent string      Set the User-Agent string (default \"gobuster/3.2.0\")\n  -U, --username string       Username for Basic Auth\n",
                      "markdown": "`      --random-agent          Use a random User-Agent string\n      --retry                 Should retry on request timeout\n      --retry-attempts int    Times to retry on request timeout (default 3)\n      --timeout duration      HTTP Timeout (default 10s)\n  -u, --url string            The target URL\n  -a, --useragent string      Set the User-Agent string (default \"gobuster/3.2.0\")\n  -U, --username string       Username for Basic Auth\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 535,
                  "startColumn": 55,
                  "endLine": 535,
                  "endColumn": 64,
                  "snippet": {
                    "text": "      --proxy string          Proxy to use for requests [http(s)://host:port]\n      --random-agent          Use a random User-Agent string\n      --retry                 Should retry on request timeout\n      --retry-attempts int    Times to retry on request timeout (default 3)\n      --timeout duration      HTTP Timeout (default 10s)\n  -u, --url string            The target URL\n  -a, --useragent string      Set the User-Agent string (default \"gobuster/3.2.0\")\n",
                    "rendered": {
                      "text": "      --proxy string          Proxy to use for requests [http(s)://host:port]\n      --random-agent          Use a random User-Agent string\n      --retry                 Should retry on request timeout\n      --retry-attempts int    Times to retry on request timeout (default 3)\n      --timeout duration      HTTP Timeout (default 10s)\n  -u, --url string            The target URL\n  -a, --useragent string      Set the User-Agent string (default \"gobuster/3.2.0\")\n",
                      "markdown": "`      --proxy string          Proxy to use for requests [http(s)://host:port]\n      --random-agent          Use a random User-Agent string\n      --retry                 Should retry on request timeout\n      --retry-attempts int    Times to retry on request timeout (default 3)\n      --timeout duration      HTTP Timeout (default 10s)\n  -u, --url string            The target URL\n  -a, --useragent string      Set the User-Agent string (default \"gobuster/3.2.0\")\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 534,
                  "startColumn": 53,
                  "endLine": 535,
                  "snippet": {
                    "text": "  -P, --password string       Password for Basic Auth\n      --proxy string          Proxy to use for requests [http(s)://host:port]\n      --random-agent          Use a random User-Agent string\n      --retry                 Should retry on request timeout\n      --retry-attempts int    Times to retry on request timeout (default 3)\n      --timeout duration      HTTP Timeout (default 10s)\n  -u, --url string            The target URL\n  -a, --useragent string      Set the User-Agent string (default \"gobuster/3.2.0\")\n",
                    "rendered": {
                      "text": "  -P, --password string       Password for Basic Auth\n      --proxy string          Proxy to use for requests [http(s)://host:port]\n      --random-agent          Use a random User-Agent string\n      --retry                 Should retry on request timeout\n      --retry-attempts int    Times to retry on request timeout (default 3)\n      --timeout duration      HTTP Timeout (default 10s)\n  -u, --url string            The target URL\n  -a, --useragent string      Set the User-Agent string (default \"gobuster/3.2.0\")\n",
                      "markdown": "`  -P, --password string       Password for Basic Auth\n      --proxy string          Proxy to use for requests [http(s)://host:port]\n      --random-agent          Use a random User-Agent string\n      --retry                 Should retry on request timeout\n      --retry-attempts int    Times to retry on request timeout (default 3)\n      --timeout duration      HTTP Timeout (default 10s)\n  -u, --url string            The target URL\n  -a, --useragent string      Set the User-Agent string (default \"gobuster/3.2.0\")\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 524,
                  "startColumn": 64,
                  "endLine": 524,
                  "endColumn": 68,
                  "snippet": {
                    "text": "[flags]\n\nFlags:\n      --append-domain         Append main domain from URL to words from wordlist. Otherwise the fully qualified domains need to be specified in the wordlist.\n  -c, --cookies string        Cookies to use for the requests\n      --domain string         the domain to append when using an IP address as URL. If left empty and you specify a domain based URL the hostname from the URL is extracted\n      --exclude-length ints   exclude the following content length (completely ignores the status). Supply multiple times to exclude multiple sizes.\n  -r, --follow-redirect       Follow redirects\n",
                    "rendered": {
                      "text": "[flags]\n\nFlags:\n      --append-domain         Append main domain from URL to words from wordlist. Otherwise the fully qualified domains need to be specified in the wordlist.\n  -c, --cookies string        Cookies to use for the requests\n      --domain string         the domain to append when using an IP address as URL. If left empty and you specify a domain based URL the hostname from the URL is extracted\n      --exclude-length ints   exclude the following content length (completely ignores the status). Supply multiple times to exclude multiple sizes.\n  -r, --follow-redirect       Follow redirects\n",
                      "markdown": "`[flags]\n\nFlags:\n      --append-domain         Append main domain from URL to words from wordlist. Otherwise the fully qualified domains need to be specified in the wordlist.\n  -c, --cookies string        Cookies to use for the requests\n      --domain string         the domain to append when using an IP address as URL. If left empty and you specify a domain based URL the hostname from the URL is extracted\n      --exclude-length ints   exclude the following content length (completely ignores the status). Supply multiple times to exclude multiple sizes.\n  -r, --follow-redirect       Follow redirects\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 516,
                  "startColumn": 62,
                  "endLine": 516,
                  "endColumn": 66,
                  "snippet": {
                    "text": "### Options\n\n```text\nUses VHOST enumeration mode (you most probably want to use the IP address as the URL parameter)\n\nUsage:\n  gobuster vhost [flags]\n",
                    "rendered": {
                      "text": "### Options\n\n```text\nUses VHOST enumeration mode (you most probably want to use the IP address as the URL parameter)\n\nUsage:\n  gobuster vhost [flags]\n",
                      "markdown": "`### Options\n\n```text\nUses VHOST enumeration mode (you most probably want to use the IP address as the URL parameter)\n\nUsage:\n  gobuster vhost [flags]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 488,
                  "startColumn": 3,
                  "endLine": 488,
                  "endColumn": 12,
                  "snippet": {
                    "text": "[+] Status codes : 200,204,301,302,307,401,403\n[+] User Agent   : gobuster/3.2.0\n[+] Show length  : true\n[+] Timeout      : 10s\n===============================================================\n2019/06/21 11:51:16 Starting gobuster\n===============================================================\n",
                    "rendered": {
                      "text": "[+] Status codes : 200,204,301,302,307,401,403\n[+] User Agent   : gobuster/3.2.0\n[+] Show length  : true\n[+] Timeout      : 10s\n===============================================================\n2019/06/21 11:51:16 Starting gobuster\n===============================================================\n",
                      "markdown": "`[+] Status codes : 200,204,301,302,307,401,403\n[+] User Agent   : gobuster/3.2.0\n[+] Show length  : true\n[+] Timeout      : 10s\n===============================================================\n2019/06/21 11:51:16 Starting gobuster\n===============================================================\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 457,
                  "startColumn": 3,
                  "endLine": 457,
                  "endColumn": 12,
                  "snippet": {
                    "text": "[+] Status codes : 200,204,301,302,307,401,403\n[+] User Agent   : gobuster/3.2.0\n[+] Verbose      : true\n[+] Timeout      : 10s\n===============================================================\n2019/06/21 11:50:51 Starting gobuster\n===============================================================\n",
                    "rendered": {
                      "text": "[+] Status codes : 200,204,301,302,307,401,403\n[+] User Agent   : gobuster/3.2.0\n[+] Verbose      : true\n[+] Timeout      : 10s\n===============================================================\n2019/06/21 11:50:51 Starting gobuster\n===============================================================\n",
                      "markdown": "`[+] Status codes : 200,204,301,302,307,401,403\n[+] User Agent   : gobuster/3.2.0\n[+] Verbose      : true\n[+] Timeout      : 10s\n===============================================================\n2019/06/21 11:50:51 Starting gobuster\n===============================================================\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 428,
                  "startColumn": 3,
                  "endLine": 428,
                  "endColumn": 12,
                  "snippet": {
                    "text": "[+] Status codes : 200,204,301,302,307,401,403\n[+] User Agent   : gobuster/3.2.0\n[+] No status    : true\n[+] Timeout      : 10s\n===============================================================\n2019/06/21 11:50:18 Starting gobuster\n===============================================================\n",
                    "rendered": {
                      "text": "[+] Status codes : 200,204,301,302,307,401,403\n[+] User Agent   : gobuster/3.2.0\n[+] No status    : true\n[+] Timeout      : 10s\n===============================================================\n2019/06/21 11:50:18 Starting gobuster\n===============================================================\n",
                      "markdown": "`[+] Status codes : 200,204,301,302,307,401,403\n[+] User Agent   : gobuster/3.2.0\n[+] No status    : true\n[+] Timeout      : 10s\n===============================================================\n2019/06/21 11:50:18 Starting gobuster\n===============================================================\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 399,
                  "startColumn": 3,
                  "endLine": 399,
                  "endColumn": 12,
                  "snippet": {
                    "text": "[+] Wordlist     : /home/oj/wordlists/shortlist.txt\n[+] Status codes : 200,204,301,302,307,401,403\n[+] User Agent   : gobuster/3.2.0\n[+] Timeout      : 10s\n===============================================================\n2019/06/21 11:49:43 Starting gobuster\n===============================================================\n",
                    "rendered": {
                      "text": "[+] Wordlist     : /home/oj/wordlists/shortlist.txt\n[+] Status codes : 200,204,301,302,307,401,403\n[+] User Agent   : gobuster/3.2.0\n[+] Timeout      : 10s\n===============================================================\n2019/06/21 11:49:43 Starting gobuster\n===============================================================\n",
                      "markdown": "`[+] Wordlist     : /home/oj/wordlists/shortlist.txt\n[+] Status codes : 200,204,301,302,307,401,403\n[+] User Agent   : gobuster/3.2.0\n[+] Timeout      : 10s\n===============================================================\n2019/06/21 11:49:43 Starting gobuster\n===============================================================\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 366,
                  "startColumn": 25,
                  "endLine": 366,
                  "endColumn": 31,
                  "snippet": {
                    "text": "  -U, --username string                 Username for Basic Auth\n\nGlobal Flags:\n      --delay duration    Time each thread waits between requests (e.g. 1500ms)\n      --no-color          Disable color output\n      --no-error          Don't display errors\n  -z, --no-progress       Don't display progress\n",
                    "rendered": {
                      "text": "  -U, --username string                 Username for Basic Auth\n\nGlobal Flags:\n      --delay duration    Time each thread waits between requests (e.g. 1500ms)\n      --no-color          Disable color output\n      --no-error          Don't display errors\n  -z, --no-progress       Don't display progress\n",
                      "markdown": "`  -U, --username string                 Username for Basic Auth\n\nGlobal Flags:\n      --delay duration    Time each thread waits between requests (e.g. 1500ms)\n      --no-color          Disable color output\n      --no-error          Don't display errors\n  -z, --no-progress       Don't display progress\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 360,
                  "startColumn": 44,
                  "endLine": 360,
                  "endColumn": 53,
                  "snippet": {
                    "text": "      --retry-attempts int              Times to retry on request timeout (default 3)\n  -s, --status-codes string             Positive status codes (will be overwritten with status-codes-blacklist if set)\n  -b, --status-codes-blacklist string   Negative status codes (will override status-codes if set) (default \"404\")\n      --timeout duration                HTTP Timeout (default 10s)\n  -u, --url string                      The target URL\n  -a, --useragent string                Set the User-Agent string (default \"gobuster/3.2.0\")\n  -U, --username string                 Username for Basic Auth\n",
                    "rendered": {
                      "text": "      --retry-attempts int              Times to retry on request timeout (default 3)\n  -s, --status-codes string             Positive status codes (will be overwritten with status-codes-blacklist if set)\n  -b, --status-codes-blacklist string   Negative status codes (will override status-codes if set) (default \"404\")\n      --timeout duration                HTTP Timeout (default 10s)\n  -u, --url string                      The target URL\n  -a, --useragent string                Set the User-Agent string (default \"gobuster/3.2.0\")\n  -U, --username string                 Username for Basic Auth\n",
                      "markdown": "`      --retry-attempts int              Times to retry on request timeout (default 3)\n  -s, --status-codes string             Positive status codes (will be overwritten with status-codes-blacklist if set)\n  -b, --status-codes-blacklist string   Negative status codes (will override status-codes if set) (default \"404\")\n      --timeout duration                HTTP Timeout (default 10s)\n  -u, --url string                      The target URL\n  -a, --useragent string                Set the User-Agent string (default \"gobuster/3.2.0\")\n  -U, --username string                 Username for Basic Auth\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 357,
                  "startColumn": 65,
                  "endLine": 357,
                  "endColumn": 74,
                  "snippet": {
                    "text": "uth\n      --proxy string                    Proxy to use for requests [http(s)://host:port]\n      --random-agent                    Use a random User-Agent string\n      --retry                           Should retry on request timeout\n      --retry-attempts int              Times to retry on request timeout (default 3)\n  -s, --status-codes string             Positive status codes (will be overwritten with status-codes-blacklist if set)\n  -b, --status-codes-blacklist string   Negative status codes (will override status-codes if set) (default \"404\")\n      --timeout duration                HTTP Timeout (d",
                    "rendered": {
                      "text": "uth\n      --proxy string                    Proxy to use for requests [http(s)://host:port]\n      --random-agent                    Use a random User-Agent string\n      --retry                           Should retry on request timeout\n      --retry-attempts int              Times to retry on request timeout (default 3)\n  -s, --status-codes string             Positive status codes (will be overwritten with status-codes-blacklist if set)\n  -b, --status-codes-blacklist string   Negative status codes (will override status-codes if set) (default \"404\")\n      --timeout duration                HTTP Timeout (d",
                      "markdown": "`uth\n      --proxy string                    Proxy to use for requests [http(s)://host:port]\n      --random-agent                    Use a random User-Agent string\n      --retry                           Should retry on request timeout\n      --retry-attempts int              Times to retry on request timeout (default 3)\n  -s, --status-codes string             Positive status codes (will be overwritten with status-codes-blacklist if set)\n  -b, --status-codes-blacklist string   Negative status codes (will override status-codes if set) (default \"404\")\n      --timeout duration                HTTP Timeout (d`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 356,
                  "startColumn": 63,
                  "endLine": 357,
                  "snippet": {
                    "text": " verification\n  -P, --password string                 Password for Basic Auth\n      --proxy string                    Proxy to use for requests [http(s)://host:port]\n      --random-agent                    Use a random User-Agent string\n      --retry                           Should retry on request timeout\n      --retry-attempts int              Times to retry on request timeout (default 3)\n  -s, --status-codes string             Positive status codes (will be overwritten with status-codes-blacklist if set)\n  -b, --status-codes-blacklist string   Negative status codes (will override status-codes if se",
                    "rendered": {
                      "text": " verification\n  -P, --password string                 Password for Basic Auth\n      --proxy string                    Proxy to use for requests [http(s)://host:port]\n      --random-agent                    Use a random User-Agent string\n      --retry                           Should retry on request timeout\n      --retry-attempts int              Times to retry on request timeout (default 3)\n  -s, --status-codes string             Positive status codes (will be overwritten with status-codes-blacklist if set)\n  -b, --status-codes-blacklist string   Negative status codes (will override status-codes if se",
                      "markdown": "` verification\n  -P, --password string                 Password for Basic Auth\n      --proxy string                    Proxy to use for requests [http(s)://host:port]\n      --random-agent                    Use a random User-Agent string\n      --retry                           Should retry on request timeout\n      --retry-attempts int              Times to retry on request timeout (default 3)\n  -s, --status-codes string             Positive status codes (will be overwritten with status-codes-blacklist if set)\n  -b, --status-codes-blacklist string   Negative status codes (will override status-codes if se`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 321,
                  "startColumn": 43,
                  "endLine": 321,
                  "endColumn": 47,
                  "snippet": {
                    "text": "===============================================================\n2019/06/21 12:13:51 Starting gobuster\n===============================================================\n2019/06/21 12:13:51 [-] Wildcard DNS found. IP address(es): 1.0.0.0\nFound: 127.0.0.1.xip.io\nFound: test.127.0.0.1.xip.io\n===============================================================\n",
                    "rendered": {
                      "text": "===============================================================\n2019/06/21 12:13:51 Starting gobuster\n===============================================================\n2019/06/21 12:13:51 [-] Wildcard DNS found. IP address(es): 1.0.0.0\nFound: 127.0.0.1.xip.io\nFound: test.127.0.0.1.xip.io\n===============================================================\n",
                      "markdown": "`===============================================================\n2019/06/21 12:13:51 Starting gobuster\n===============================================================\n2019/06/21 12:13:51 [-] Wildcard DNS found. IP address(es): 1.0.0.0\nFound: 127.0.0.1.xip.io\nFound: test.127.0.0.1.xip.io\n===============================================================\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 298,
                  "startColumn": 43,
                  "endLine": 298,
                  "endColumn": 47,
                  "snippet": {
                    "text": "===============================================================\n2019/06/21 12:13:48 Starting gobuster\n===============================================================\n2019/06/21 12:13:48 [-] Wildcard DNS found. IP address(es): 1.0.0.0\n2019/06/21 12:13:48 [!] To force processing of Wildcard DNS, specify the '--wildcard' switch.\n===============================================================\n2019/06/21 12:13:48 Finished\n",
                    "rendered": {
                      "text": "===============================================================\n2019/06/21 12:13:48 Starting gobuster\n===============================================================\n2019/06/21 12:13:48 [-] Wildcard DNS found. IP address(es): 1.0.0.0\n2019/06/21 12:13:48 [!] To force processing of Wildcard DNS, specify the '--wildcard' switch.\n===============================================================\n2019/06/21 12:13:48 Finished\n",
                      "markdown": "`===============================================================\n2019/06/21 12:13:48 Starting gobuster\n===============================================================\n2019/06/21 12:13:48 [-] Wildcard DNS found. IP address(es): 1.0.0.0\n2019/06/21 12:13:48 [!] To force processing of Wildcard DNS, specify the '--wildcard' switch.\n===============================================================\n2019/06/21 12:13:48 Finished\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 220,
                  "startColumn": 4,
                  "endLine": 220,
                  "endColumn": 8,
                  "snippet": {
                    "text": "===============================================================\n```\n\nShow IP sample run goes like this:\n\n```text\ngobuster dns -d google.com -w ~/wordlists/subdomains.txt -i\n",
                    "rendered": {
                      "text": "===============================================================\n```\n\nShow IP sample run goes like this:\n\n```text\ngobuster dns -d google.com -w ~/wordlists/subdomains.txt -i\n",
                      "markdown": "`===============================================================\n```\n\nShow IP sample run goes like this:\n\n```text\ngobuster dns -d google.com -w ~/wordlists/subdomains.txt -i\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 162,
                  "startColumn": 25,
                  "endLine": 162,
                  "endColumn": 31,
                  "snippet": {
                    "text": "      --wildcard           Force continued operation when wildcard found\n\nGlobal Flags:\n      --delay duration    Time each thread waits between requests (e.g. 1500ms)\n      --no-color          Disable color output\n      --no-error          Don't display errors\n  -z, --no-progress       Don't display progress\n",
                    "rendered": {
                      "text": "      --wildcard           Force continued operation when wildcard found\n\nGlobal Flags:\n      --delay duration    Time each thread waits between requests (e.g. 1500ms)\n      --no-color          Disable color output\n      --no-error          Don't display errors\n  -z, --no-progress       Don't display progress\n",
                      "markdown": "`      --wildcard           Force continued operation when wildcard found\n\nGlobal Flags:\n      --delay duration    Time each thread waits between requests (e.g. 1500ms)\n      --no-color          Disable color output\n      --no-error          Don't display errors\n  -z, --no-progress       Don't display progress\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 158,
                  "startColumn": 39,
                  "endLine": 158,
                  "endColumn": 48,
                  "snippet": {
                    "text": "  -r, --resolver string    Use custom DNS server (format server.com or server.com:port)\n  -c, --show-cname         Show CNAME records (cannot be used with '-i' option)\n  -i, --show-ips           Show IP addresses\n      --timeout duration   DNS resolver timeout (default 1s)\n      --wildcard           Force continued operation when wildcard found\n\nGlobal Flags:\n",
                    "rendered": {
                      "text": "  -r, --resolver string    Use custom DNS server (format server.com or server.com:port)\n  -c, --show-cname         Show CNAME records (cannot be used with '-i' option)\n  -i, --show-ips           Show IP addresses\n      --timeout duration   DNS resolver timeout (default 1s)\n      --wildcard           Force continued operation when wildcard found\n\nGlobal Flags:\n",
                      "markdown": "`  -r, --resolver string    Use custom DNS server (format server.com or server.com:port)\n  -c, --show-cname         Show CNAME records (cannot be used with '-i' option)\n  -i, --show-ips           Show IP addresses\n      --timeout duration   DNS resolver timeout (default 1s)\n      --wildcard           Force continued operation when wildcard found\n\nGlobal Flags:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 31,
                  "endLine": 157,
                  "endColumn": 35,
                  "snippet": {
                    "text": "  -h, --help               help for dns\n  -r, --resolver string    Use custom DNS server (format server.com or server.com:port)\n  -c, --show-cname         Show CNAME records (cannot be used with '-i' option)\n  -i, --show-ips           Show IP addresses\n      --timeout duration   DNS resolver timeout (default 1s)\n      --wildcard           Force continued operation when wildcard found\n\n",
                    "rendered": {
                      "text": "  -h, --help               help for dns\n  -r, --resolver string    Use custom DNS server (format server.com or server.com:port)\n  -c, --show-cname         Show CNAME records (cannot be used with '-i' option)\n  -i, --show-ips           Show IP addresses\n      --timeout duration   DNS resolver timeout (default 1s)\n      --wildcard           Force continued operation when wildcard found\n\n",
                      "markdown": "`  -h, --help               help for dns\n  -r, --resolver string    Use custom DNS server (format server.com or server.com:port)\n  -c, --show-cname         Show CNAME records (cannot be used with '-i' option)\n  -i, --show-ips           Show IP addresses\n      --timeout duration   DNS resolver timeout (default 1s)\n      --wildcard           Force continued operation when wildcard found\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 7,
                  "endLine": 104,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\nYou can also grab a prebuilt docker image from [https://github.com/OJ/gobuster/pkgs/container/gobuster](https://github.com/OJ/gobuster/pkgs/container/gobuster)\n\n```bash\ndocker pull ghcr.io/oj/gobuster:latest\n```\n\n### Using `go install`\n",
                    "rendered": {
                      "text": "\nYou can also grab a prebuilt docker image from [https://github.com/OJ/gobuster/pkgs/container/gobuster](https://github.com/OJ/gobuster/pkgs/container/gobuster)\n\n```bash\ndocker pull ghcr.io/oj/gobuster:latest\n```\n\n### Using `go install`\n",
                      "markdown": "`\nYou can also grab a prebuilt docker image from [https://github.com/OJ/gobuster/pkgs/container/gobuster](https://github.com/OJ/gobuster/pkgs/container/gobuster)\n\n```bash\ndocker pull ghcr.io/oj/gobuster:latest\n```\n\n### Using `go install`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 28,
                  "endLine": 101,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\n### Docker\n\nYou can also grab a prebuilt docker image from [https://github.com/OJ/gobuster/pkgs/container/gobuster](https://github.com/OJ/gobuster/pkgs/container/gobuster)\n\n```bash\ndocker pull ghcr.io/oj/gobuster:latest\n",
                    "rendered": {
                      "text": "\n### Docker\n\nYou can also grab a prebuilt docker image from [https://github.com/OJ/gobuster/pkgs/container/gobuster](https://github.com/OJ/gobuster/pkgs/container/gobuster)\n\n```bash\ndocker pull ghcr.io/oj/gobuster:latest\n",
                      "markdown": "`\n### Docker\n\nYou can also grab a prebuilt docker image from [https://github.com/OJ/gobuster/pkgs/container/gobuster](https://github.com/OJ/gobuster/pkgs/container/gobuster)\n\n```bash\ndocker pull ghcr.io/oj/gobuster:latest\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 3,
                  "endLine": 100,
                  "snippet": {
                    "text": "\nIf you're stupid enough to trust binaries that I've put together, you can download them from the [releases](https://github.com/OJ/gobuster/releases) page.\n\n### Docker\n\nYou can also grab a prebuilt docker image from [https://github.com/OJ/gobuster/pkgs/container/gobuster](https://github.com/OJ/gobuster/pkgs/container/gobuster)\n\n```bash\n",
                    "rendered": {
                      "text": "\nIf you're stupid enough to trust binaries that I've put together, you can download them from the [releases](https://github.com/OJ/gobuster/releases) page.\n\n### Docker\n\nYou can also grab a prebuilt docker image from [https://github.com/OJ/gobuster/pkgs/container/gobuster](https://github.com/OJ/gobuster/pkgs/container/gobuster)\n\n```bash\n",
                      "markdown": "`\nIf you're stupid enough to trust binaries that I've put together, you can download them from the [releases](https://github.com/OJ/gobuster/releases) page.\n\n### Docker\n\nYou can also grab a prebuilt docker image from [https://github.com/OJ/gobuster/pkgs/container/gobuster](https://github.com/OJ/gobuster/pkgs/container/gobuster)\n\n```bash\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 19,
                  "endLine": 89,
                  "endColumn": 25,
                  "snippet": {
                    "text": "- gcs - Enumerate open google cloud buckets\n- vhost - virtual host brute-forcing mode (not the same as DNS!)\n- fuzz - some basic fuzzing, replaces the `FUZZ` keyword\n- tftp - bruteforce tftp files\n\n## Easy Installation\n\n",
                    "rendered": {
                      "text": "- gcs - Enumerate open google cloud buckets\n- vhost - virtual host brute-forcing mode (not the same as DNS!)\n- fuzz - some basic fuzzing, replaces the `FUZZ` keyword\n- tftp - bruteforce tftp files\n\n## Easy Installation\n\n",
                      "markdown": "`- gcs - Enumerate open google cloud buckets\n- vhost - virtual host brute-forcing mode (not the same as DNS!)\n- fuzz - some basic fuzzing, replaces the `FUZZ` keyword\n- tftp - bruteforce tftp files\n\n## Easy Installation\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 1,
                  "endLine": 89,
                  "endColumn": 7,
                  "snippet": {
                    "text": "- gcs - Enumerate open google cloud buckets\n- vhost - virtual host brute-forcing mode (not the same as DNS!)\n- fuzz - some basic fuzzing, replaces the `FUZZ` keyword\n- tftp - bruteforce tftp files\n\n## Easy Installation\n\n",
                    "rendered": {
                      "text": "- gcs - Enumerate open google cloud buckets\n- vhost - virtual host brute-forcing mode (not the same as DNS!)\n- fuzz - some basic fuzzing, replaces the `FUZZ` keyword\n- tftp - bruteforce tftp files\n\n## Easy Installation\n\n",
                      "markdown": "`- gcs - Enumerate open google cloud buckets\n- vhost - virtual host brute-forcing mode (not the same as DNS!)\n- fuzz - some basic fuzzing, replaces the `FUZZ` keyword\n- tftp - bruteforce tftp files\n\n## Easy Installation\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 10,
                  "endLine": 57,
                  "snippet": {
                    "text": "- use contexts in the correct way\n- get rid of the wildcard flag (except in DNS mode)\n- color output\n- retry on timeout\n- google cloud bucket enumeration\n- fix nil reference errors\n\n## 3.1\n",
                    "rendered": {
                      "text": "- use contexts in the correct way\n- get rid of the wildcard flag (except in DNS mode)\n- color output\n- retry on timeout\n- google cloud bucket enumeration\n- fix nil reference errors\n\n## 3.1\n",
                      "markdown": "`- use contexts in the correct way\n- get rid of the wildcard flag (except in DNS mode)\n- color output\n- retry on timeout\n- google cloud bucket enumeration\n- fix nil reference errors\n\n## 3.1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 38,
                  "endLine": 41,
                  "endColumn": 44,
                  "snippet": {
                    "text": "## 3.4\n\n- Enable TLS1.0 and TLS1.1 support\n- Add TFTP mode to search for files on tftp servers\n\n## 3.3\n\n",
                    "rendered": {
                      "text": "## 3.4\n\n- Enable TLS1.0 and TLS1.1 support\n- Add TFTP mode to search for files on tftp servers\n\n## 3.3\n\n",
                      "markdown": "`## 3.4\n\n- Enable TLS1.0 and TLS1.1 support\n- Add TFTP mode to search for files on tftp servers\n\n## 3.3\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 5,
                  "endLine": 41,
                  "endColumn": 11,
                  "snippet": {
                    "text": "## 3.4\n\n- Enable TLS1.0 and TLS1.1 support\n- Add TFTP mode to search for files on tftp servers\n\n## 3.3\n\n",
                    "rendered": {
                      "text": "## 3.4\n\n- Enable TLS1.0 and TLS1.1 support\n- Add TFTP mode to search for files on tftp servers\n\n## 3.3\n\n",
                      "markdown": "`## 3.4\n\n- Enable TLS1.0 and TLS1.1 support\n- Add TFTP mode to search for files on tftp servers\n\n## 3.3\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/README.md"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 1,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "- Virtual Host names on target web servers.\n- Open Amazon S3 buckets\n- Open Google Cloud buckets\n- TFTP servers\n\n## Tags, Statuses, etc\n\n",
                    "rendered": {
                      "text": "- Virtual Host names on target web servers.\n- Open Amazon S3 buckets\n- Open Google Cloud buckets\n- TFTP servers\n\n## Tags, Statuses, etc\n\n",
                      "markdown": "`- Virtual Host names on target web servers.\n- Open Amazon S3 buckets\n- Open Google Cloud buckets\n- TFTP servers\n\n## Tags, Statuses, etc\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/libgobuster/helpers_test.go"
                },
                "region": {
                  "startLine": 153,
                  "startColumn": 20,
                  "endLine": 153,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t// order is random\n\tfor _, i := range v2 {\n\t\tif !strings.Contains(z, fmt.Sprint(i)) {\n\t\t\tt.Fatalf(\"Did not find value %q in %q\", i, z)\n\t\t}\n\t}\n}\n",
                    "rendered": {
                      "text": "\t// order is random\n\tfor _, i := range v2 {\n\t\tif !strings.Contains(z, fmt.Sprint(i)) {\n\t\t\tt.Fatalf(\"Did not find value %q in %q\", i, z)\n\t\t}\n\t}\n}\n",
                      "markdown": "`\t// order is random\n\tfor _, i := range v2 {\n\t\tif !strings.Contains(z, fmt.Sprint(i)) {\n\t\t\tt.Fatalf(\"Did not find value %q in %q\", i, z)\n\t\t}\n\t}\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/libgobuster/helpers_test.go"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 20,
                  "endLine": 142,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t// order is random\n\tfor _, i := range v {\n\t\tif !strings.Contains(z, i) {\n\t\t\tt.Fatalf(\"Did not find value %q in %q\", i, z)\n\t\t}\n\t}\n\n",
                    "rendered": {
                      "text": "\t// order is random\n\tfor _, i := range v {\n\t\tif !strings.Contains(z, i) {\n\t\t\tt.Fatalf(\"Did not find value %q in %q\", i, z)\n\t\t}\n\t}\n\n",
                      "markdown": "`\t// order is random\n\tfor _, i := range v {\n\t\tif !strings.Contains(z, i) {\n\t\t\tt.Fatalf(\"Did not find value %q in %q\", i, z)\n\t\t}\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/libgobuster/helpers_test.go"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 19,
                  "endLine": 124,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\tv2 := []int{1, 2312, 123121, 999, -99}\n\ty.AddRange(v2)\n\tif !y.ContainsAny(v2) {\n\t\tt.Fatalf(\"Did not find any\")\n\t}\n\n\t// test not found\n",
                    "rendered": {
                      "text": "\tv2 := []int{1, 2312, 123121, 999, -99}\n\ty.AddRange(v2)\n\tif !y.ContainsAny(v2) {\n\t\tt.Fatalf(\"Did not find any\")\n\t}\n\n\t// test not found\n",
                      "markdown": "`\tv2 := []int{1, 2312, 123121, 999, -99}\n\ty.AddRange(v2)\n\tif !y.ContainsAny(v2) {\n\t\tt.Fatalf(\"Did not find any\")\n\t}\n\n\t// test not found\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/libgobuster/helpers_test.go"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 19,
                  "endLine": 112,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\tv := []string{\"string1\", \"string2\", \"1234\", \"5678\"}\n\tx.AddRange(v)\n\tif !x.ContainsAny(v) {\n\t\tt.Fatalf(\"Did not find any\")\n\t}\n\n\t// test not found\n",
                    "rendered": {
                      "text": "\tv := []string{\"string1\", \"string2\", \"1234\", \"5678\"}\n\tx.AddRange(v)\n\tif !x.ContainsAny(v) {\n\t\tt.Fatalf(\"Did not find any\")\n\t}\n\n\t// test not found\n",
                      "markdown": "`\tv := []string{\"string1\", \"string2\", \"1234\", \"5678\"}\n\tx.AddRange(v)\n\tif !x.ContainsAny(v) {\n\t\tt.Fatalf(\"Did not find any\")\n\t}\n\n\t// test not found\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/libgobuster/helpers_test.go"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 20,
                  "endLine": 101,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\ty.AddRange(v2)\n\tfor _, i := range v2 {\n\t\tif !y.Contains(i) {\n\t\t\tt.Fatalf(\"Did not find value %d in array. %v\", i, y.Set)\n\t\t}\n\t}\n}\n",
                    "rendered": {
                      "text": "\ty.AddRange(v2)\n\tfor _, i := range v2 {\n\t\tif !y.Contains(i) {\n\t\t\tt.Fatalf(\"Did not find value %d in array. %v\", i, y.Set)\n\t\t}\n\t}\n}\n",
                      "markdown": "`\ty.AddRange(v2)\n\tfor _, i := range v2 {\n\t\tif !y.Contains(i) {\n\t\t\tt.Fatalf(\"Did not find value %d in array. %v\", i, y.Set)\n\t\t}\n\t}\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/libgobuster/helpers_test.go"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 20,
                  "endLine": 92,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\tx.AddRange(v)\n\tfor _, i := range v {\n\t\tif !x.Contains(i) {\n\t\t\tt.Fatalf(\"Did not find value %s in array. %v\", i, x.Set)\n\t\t}\n\t}\n\n",
                    "rendered": {
                      "text": "\tx.AddRange(v)\n\tfor _, i := range v {\n\t\tif !x.Contains(i) {\n\t\t\tt.Fatalf(\"Did not find value %s in array. %v\", i, x.Set)\n\t\t}\n\t}\n\n",
                      "markdown": "`\tx.AddRange(v)\n\tfor _, i := range v {\n\t\tif !x.Contains(i) {\n\t\t\tt.Fatalf(\"Did not find value %s in array. %v\", i, x.Set)\n\t\t}\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/gobusterdns/options.go"
                },
                "region": {
                  "startLine": 15,
                  "endLine": 15,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tWildcardForced bool\n\tResolver       string\n\tNoFQDN         bool\n\tTimeout        time.Duration\n}\n\n// NewOptionsDNS returns a new initialized OptionsDNS\n",
                    "rendered": {
                      "text": "\tWildcardForced bool\n\tResolver       string\n\tNoFQDN         bool\n\tTimeout        time.Duration\n}\n\n// NewOptionsDNS returns a new initialized OptionsDNS\n",
                      "markdown": "`\tWildcardForced bool\n\tResolver       string\n\tNoFQDN         bool\n\tTimeout        time.Duration\n}\n\n// NewOptionsDNS returns a new initialized OptionsDNS\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/gobusterfuzz/gobusterfuzz.go"
                },
                "region": {
                  "startLine": 127,
                  "startColumn": 38,
                  "endLine": 127,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\tvar size int64\n\tfor i := 1; i <= tries; i++ {\n\t\tvar err error\n\t\tstatusCode, size, _, _, err = d.http.Request(ctx, url, requestOptions)\n\t\tif err != nil {\n\t\t\t// check if it's a timeout and if we should try again and try again\n\t\t\t// otherwise the timeout error is raised\n",
                    "rendered": {
                      "text": "\tvar size int64\n\tfor i := 1; i <= tries; i++ {\n\t\tvar err error\n\t\tstatusCode, size, _, _, err = d.http.Request(ctx, url, requestOptions)\n\t\tif err != nil {\n\t\t\t// check if it's a timeout and if we should try again and try again\n\t\t\t// otherwise the timeout error is raised\n",
                      "markdown": "`\tvar size int64\n\tfor i := 1; i <= tries; i++ {\n\t\tvar err error\n\t\tstatusCode, size, _, _, err = d.http.Request(ctx, url, requestOptions)\n\t\tif err != nil {\n\t\t\t// check if it's a timeout and if we should try again and try again\n\t\t\t// otherwise the timeout error is raised\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/gobusterfuzz/gobusterfuzz.go"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 73,
                  "endLine": 114,
                  "endColumn": 81,
                  "snippet": {
                    "text": "\t// fuzzing of basic auth\n\tif strings.Contains(d.options.Username, FuzzKeyword) || strings.Contains(d.options.Password, FuzzKeyword) {\n\t\trequestOptions.UpdatedBasicAuthUsername = strings.ReplaceAll(d.options.Username, FuzzKeyword, word)\n\t\trequestOptions.UpdatedBasicAuthPassword = strings.ReplaceAll(d.options.Password, FuzzKeyword, word)\n\t}\n\n\ttries := 1\n",
                    "rendered": {
                      "text": "\t// fuzzing of basic auth\n\tif strings.Contains(d.options.Username, FuzzKeyword) || strings.Contains(d.options.Password, FuzzKeyword) {\n\t\trequestOptions.UpdatedBasicAuthUsername = strings.ReplaceAll(d.options.Username, FuzzKeyword, word)\n\t\trequestOptions.UpdatedBasicAuthPassword = strings.ReplaceAll(d.options.Password, FuzzKeyword, word)\n\t}\n\n\ttries := 1\n",
                      "markdown": "`\t// fuzzing of basic auth\n\tif strings.Contains(d.options.Username, FuzzKeyword) || strings.Contains(d.options.Password, FuzzKeyword) {\n\t\trequestOptions.UpdatedBasicAuthUsername = strings.ReplaceAll(d.options.Username, FuzzKeyword, word)\n\t\trequestOptions.UpdatedBasicAuthPassword = strings.ReplaceAll(d.options.Password, FuzzKeyword, word)\n\t}\n\n\ttries := 1\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/gobusterfuzz/gobusterfuzz.go"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 33,
                  "endLine": 114,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\t// fuzzing of basic auth\n\tif strings.Contains(d.options.Username, FuzzKeyword) || strings.Contains(d.options.Password, FuzzKeyword) {\n\t\trequestOptions.UpdatedBasicAuthUsername = strings.ReplaceAll(d.options.Username, FuzzKeyword, word)\n\t\trequestOptions.UpdatedBasicAuthPassword = strings.ReplaceAll(d.options.Password, FuzzKeyword, word)\n\t}\n\n\ttries := 1\n",
                    "rendered": {
                      "text": "\t// fuzzing of basic auth\n\tif strings.Contains(d.options.Username, FuzzKeyword) || strings.Contains(d.options.Password, FuzzKeyword) {\n\t\trequestOptions.UpdatedBasicAuthUsername = strings.ReplaceAll(d.options.Username, FuzzKeyword, word)\n\t\trequestOptions.UpdatedBasicAuthPassword = strings.ReplaceAll(d.options.Password, FuzzKeyword, word)\n\t}\n\n\ttries := 1\n",
                      "markdown": "`\t// fuzzing of basic auth\n\tif strings.Contains(d.options.Username, FuzzKeyword) || strings.Contains(d.options.Password, FuzzKeyword) {\n\t\trequestOptions.UpdatedBasicAuthUsername = strings.ReplaceAll(d.options.Username, FuzzKeyword, word)\n\t\trequestOptions.UpdatedBasicAuthPassword = strings.ReplaceAll(d.options.Password, FuzzKeyword, word)\n\t}\n\n\ttries := 1\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/gobusterfuzz/gobusterfuzz.go"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 84,
                  "endLine": 112,
                  "endColumn": 92,
                  "snippet": {
                    "text": "\t}\n\n\t// fuzzing of basic auth\n\tif strings.Contains(d.options.Username, FuzzKeyword) || strings.Contains(d.options.Password, FuzzKeyword) {\n\t\trequestOptions.UpdatedBasicAuthUsername = strings.ReplaceAll(d.options.Username, FuzzKeyword, word)\n\t\trequestOptions.UpdatedBasicAuthPassword = strings.ReplaceAll(d.options.Password, FuzzKeyword, word)\n\t}\n",
                    "rendered": {
                      "text": "\t}\n\n\t// fuzzing of basic auth\n\tif strings.Contains(d.options.Username, FuzzKeyword) || strings.Contains(d.options.Password, FuzzKeyword) {\n\t\trequestOptions.UpdatedBasicAuthUsername = strings.ReplaceAll(d.options.Username, FuzzKeyword, word)\n\t\trequestOptions.UpdatedBasicAuthPassword = strings.ReplaceAll(d.options.Password, FuzzKeyword, word)\n\t}\n",
                      "markdown": "`\t}\n\n\t// fuzzing of basic auth\n\tif strings.Contains(d.options.Username, FuzzKeyword) || strings.Contains(d.options.Password, FuzzKeyword) {\n\t\trequestOptions.UpdatedBasicAuthUsername = strings.ReplaceAll(d.options.Username, FuzzKeyword, word)\n\t\trequestOptions.UpdatedBasicAuthPassword = strings.ReplaceAll(d.options.Password, FuzzKeyword, word)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/gobusterfuzz/gobusterfuzz.go"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 30,
                  "endLine": 64,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\t\tBasicHTTPOptions:      basicOptions,\n\t\tFollowRedirect:        opts.FollowRedirect,\n\t\tUsername:              opts.Username,\n\t\tPassword:              opts.Password,\n\t\tHeaders:               opts.Headers,\n\t\tNoCanonicalizeHeaders: opts.NoCanonicalizeHeaders,\n\t\tCookies:               opts.Cookies,\n",
                    "rendered": {
                      "text": "\t\tBasicHTTPOptions:      basicOptions,\n\t\tFollowRedirect:        opts.FollowRedirect,\n\t\tUsername:              opts.Username,\n\t\tPassword:              opts.Password,\n\t\tHeaders:               opts.Headers,\n\t\tNoCanonicalizeHeaders: opts.NoCanonicalizeHeaders,\n\t\tCookies:               opts.Cookies,\n",
                      "markdown": "`\t\tBasicHTTPOptions:      basicOptions,\n\t\tFollowRedirect:        opts.FollowRedirect,\n\t\tUsername:              opts.Username,\n\t\tPassword:              opts.Password,\n\t\tHeaders:               opts.Headers,\n\t\tNoCanonicalizeHeaders: opts.NoCanonicalizeHeaders,\n\t\tCookies:               opts.Cookies,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/gobusterfuzz/gobusterfuzz.go"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 2,
                  "endLine": 64,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t\tBasicHTTPOptions:      basicOptions,\n\t\tFollowRedirect:        opts.FollowRedirect,\n\t\tUsername:              opts.Username,\n\t\tPassword:              opts.Password,\n\t\tHeaders:               opts.Headers,\n\t\tNoCanonicalizeHeaders: opts.NoCanonicalizeHeaders,\n\t\tCookies:               opts.Cookies,\n",
                    "rendered": {
                      "text": "\t\tBasicHTTPOptions:      basicOptions,\n\t\tFollowRedirect:        opts.FollowRedirect,\n\t\tUsername:              opts.Username,\n\t\tPassword:              opts.Password,\n\t\tHeaders:               opts.Headers,\n\t\tNoCanonicalizeHeaders: opts.NoCanonicalizeHeaders,\n\t\tCookies:               opts.Cookies,\n",
                      "markdown": "`\t\tBasicHTTPOptions:      basicOptions,\n\t\tFollowRedirect:        opts.FollowRedirect,\n\t\tUsername:              opts.Username,\n\t\tPassword:              opts.Password,\n\t\tHeaders:               opts.Headers,\n\t\tNoCanonicalizeHeaders: opts.NoCanonicalizeHeaders,\n\t\tCookies:               opts.Cookies,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/gobusterfuzz/gobusterfuzz.go"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 51,
                  "endLine": 133,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\t\t\t// otherwise the timeout error is raised\n\t\t\tif netErr, ok := err.(net.Error); ok && netErr.Timeout() && i != tries {\n\t\t\t\tcontinue\n\t\t\t} else if strings.Contains(err.Error(), \"invalid control character in URL\") {\n\t\t\t\t// put error in error chan so it's printed out and ignore it\n\t\t\t\t// so gobuster will not quit\n\t\t\t\tprogress.ErrorChan <- err\n",
                    "rendered": {
                      "text": "\t\t\t// otherwise the timeout error is raised\n\t\t\tif netErr, ok := err.(net.Error); ok && netErr.Timeout() && i != tries {\n\t\t\t\tcontinue\n\t\t\t} else if strings.Contains(err.Error(), \"invalid control character in URL\") {\n\t\t\t\t// put error in error chan so it's printed out and ignore it\n\t\t\t\t// so gobuster will not quit\n\t\t\t\tprogress.ErrorChan <- err\n",
                      "markdown": "`\t\t\t// otherwise the timeout error is raised\n\t\t\tif netErr, ok := err.(net.Error); ok && netErr.Timeout() && i != tries {\n\t\t\t\tcontinue\n\t\t\t} else if strings.Contains(err.Error(), \"invalid control character in URL\") {\n\t\t\t\t// put error in error chan so it's printed out and ignore it\n\t\t\t\t// so gobuster will not quit\n\t\t\t\tprogress.ErrorChan <- err\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/gobusterfuzz/gobusterfuzz.go"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 19,
                  "endLine": 130,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\t\tstatusCode, size, _, _, err = d.http.Request(ctx, url, requestOptions)\n\t\tif err != nil {\n\t\t\t// check if it's a timeout and if we should try again and try again\n\t\t\t// otherwise the timeout error is raised\n\t\t\tif netErr, ok := err.(net.Error); ok && netErr.Timeout() && i != tries {\n\t\t\t\tcontinue\n\t\t\t} else if strings.Contains(err.Error(), \"invalid control character in URL\") {\n",
                    "rendered": {
                      "text": "\t\tstatusCode, size, _, _, err = d.http.Request(ctx, url, requestOptions)\n\t\tif err != nil {\n\t\t\t// check if it's a timeout and if we should try again and try again\n\t\t\t// otherwise the timeout error is raised\n\t\t\tif netErr, ok := err.(net.Error); ok && netErr.Timeout() && i != tries {\n\t\t\t\tcontinue\n\t\t\t} else if strings.Contains(err.Error(), \"invalid control character in URL\") {\n",
                      "markdown": "`\t\tstatusCode, size, _, _, err = d.http.Request(ctx, url, requestOptions)\n\t\tif err != nil {\n\t\t\t// check if it's a timeout and if we should try again and try again\n\t\t\t// otherwise the timeout error is raised\n\t\t\tif netErr, ok := err.(net.Error); ok && netErr.Timeout() && i != tries {\n\t\t\t\tcontinue\n\t\t\t} else if strings.Contains(err.Error(), \"invalid control character in URL\") {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/gobusterfuzz/gobusterfuzz.go"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 21,
                  "endLine": 129,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\tvar err error\n\t\tstatusCode, size, _, _, err = d.http.Request(ctx, url, requestOptions)\n\t\tif err != nil {\n\t\t\t// check if it's a timeout and if we should try again and try again\n\t\t\t// otherwise the timeout error is raised\n\t\t\tif netErr, ok := err.(net.Error); ok && netErr.Timeout() && i != tries {\n\t\t\t\tcontinue\n",
                    "rendered": {
                      "text": "\t\tvar err error\n\t\tstatusCode, size, _, _, err = d.http.Request(ctx, url, requestOptions)\n\t\tif err != nil {\n\t\t\t// check if it's a timeout and if we should try again and try again\n\t\t\t// otherwise the timeout error is raised\n\t\t\tif netErr, ok := err.(net.Error); ok && netErr.Timeout() && i != tries {\n\t\t\t\tcontinue\n",
                      "markdown": "`\t\tvar err error\n\t\tstatusCode, size, _, _, err = d.http.Request(ctx, url, requestOptions)\n\t\tif err != nil {\n\t\t\t// check if it's a timeout and if we should try again and try again\n\t\t\t// otherwise the timeout error is raised\n\t\t\tif netErr, ok := err.(net.Error); ok && netErr.Timeout() && i != tries {\n\t\t\t\tcontinue\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/cli/cmd/dns.go"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 7,
                  "endLine": 2,
                  "snippet": {
                    "text": "package cmd\n\nimport (\n\t\"errors\"\n\t\"fmt\"\n",
                    "rendered": {
                      "text": "package cmd\n\nimport (\n\t\"errors\"\n\t\"fmt\"\n",
                      "markdown": "`package cmd\n\nimport (\n\t\"errors\"\n\t\"fmt\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/cli/cmd/dns.go"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 51,
                  "endLine": 100,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\t}\n\n\tcmdDNS.Flags().StringP(\"domain\", \"d\", \"\", \"The target domain\")\n\tcmdDNS.Flags().BoolP(\"show-ips\", \"i\", false, \"Show IP addresses\")\n\tcmdDNS.Flags().BoolP(\"show-cname\", \"c\", false, \"Show CNAME records (cannot be used with '-i' option)\")\n\tcmdDNS.Flags().DurationP(\"timeout\", \"\", time.Second, \"DNS resolver timeout\")\n\tcmdDNS.Flags().BoolP(\"wildcard\", \"\", false, \"Force continued operation when wildcard found\")\n",
                    "rendered": {
                      "text": "\t}\n\n\tcmdDNS.Flags().StringP(\"domain\", \"d\", \"\", \"The target domain\")\n\tcmdDNS.Flags().BoolP(\"show-ips\", \"i\", false, \"Show IP addresses\")\n\tcmdDNS.Flags().BoolP(\"show-cname\", \"c\", false, \"Show CNAME records (cannot be used with '-i' option)\")\n\tcmdDNS.Flags().DurationP(\"timeout\", \"\", time.Second, \"DNS resolver timeout\")\n\tcmdDNS.Flags().BoolP(\"wildcard\", \"\", false, \"Force continued operation when wildcard found\")\n",
                      "markdown": "`\t}\n\n\tcmdDNS.Flags().StringP(\"domain\", \"d\", \"\", \"The target domain\")\n\tcmdDNS.Flags().BoolP(\"show-ips\", \"i\", false, \"Show IP addresses\")\n\tcmdDNS.Flags().BoolP(\"show-cname\", \"c\", false, \"Show CNAME records (cannot be used with '-i' option)\")\n\tcmdDNS.Flags().DurationP(\"timeout\", \"\", time.Second, \"DNS resolver timeout\")\n\tcmdDNS.Flags().BoolP(\"wildcard\", \"\", false, \"Force continued operation when wildcard found\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/gobustervhost/result.go"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 21,
                  "endLine": 48,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n\tstatusCode := statusCodeColor(fmt.Sprintf(\"Status: %d\", r.StatusCode))\n\n\tlocation := r.Header.Get(\"Location\")\n\tlocationString := \"\"\n\tif location != \"\" {\n\t\tlocationString = blue(fmt.Sprintf(\" [--> %s]\", location))\n",
                    "rendered": {
                      "text": "\n\tstatusCode := statusCodeColor(fmt.Sprintf(\"Status: %d\", r.StatusCode))\n\n\tlocation := r.Header.Get(\"Location\")\n\tlocationString := \"\"\n\tif location != \"\" {\n\t\tlocationString = blue(fmt.Sprintf(\" [--> %s]\", location))\n",
                      "markdown": "`\n\tstatusCode := statusCodeColor(fmt.Sprintf(\"Status: %d\", r.StatusCode))\n\n\tlocation := r.Header.Get(\"Location\")\n\tlocationString := \"\"\n\tif location != \"\" {\n\t\tlocationString = blue(fmt.Sprintf(\" [--> %s]\", location))\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/gobustervhost/result.go"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 19,
                  "endLine": 44,
                  "snippet": {
                    "text": "\t} else if r.StatusCode >= 400 && r.StatusCode < 500 {\n\t\tstatusCodeColor = yellow\n\t} else if r.StatusCode >= 500 && r.StatusCode < 600 {\n\t\tstatusCodeColor = red\n\t}\n\n\tstatusCode := statusCodeColor(fmt.Sprintf(\"Status: %d\", r.StatusCode))\n\n",
                    "rendered": {
                      "text": "\t} else if r.StatusCode >= 400 && r.StatusCode < 500 {\n\t\tstatusCodeColor = yellow\n\t} else if r.StatusCode >= 500 && r.StatusCode < 600 {\n\t\tstatusCodeColor = red\n\t}\n\n\tstatusCode := statusCodeColor(fmt.Sprintf(\"Status: %d\", r.StatusCode))\n\n",
                      "markdown": "`\t} else if r.StatusCode >= 400 && r.StatusCode < 500 {\n\t\tstatusCodeColor = yellow\n\t} else if r.StatusCode >= 500 && r.StatusCode < 600 {\n\t\tstatusCodeColor = red\n\t}\n\n\tstatusCode := statusCodeColor(fmt.Sprintf(\"Status: %d\", r.StatusCode))\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/gobustervhost/result.go"
                },
                "region": {
                  "startLine": 15,
                  "endLine": 15,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tyellow = color.New(color.FgYellow).SprintFunc()\n\tgreen  = color.New(color.FgGreen).SprintFunc()\n\tblue   = color.New(color.FgBlue).SprintFunc()\n\tred    = color.New(color.FgRed).SprintFunc()\n\tcyan   = color.New(color.FgCyan).SprintFunc()\n)\n\n",
                    "rendered": {
                      "text": "\tyellow = color.New(color.FgYellow).SprintFunc()\n\tgreen  = color.New(color.FgGreen).SprintFunc()\n\tblue   = color.New(color.FgBlue).SprintFunc()\n\tred    = color.New(color.FgRed).SprintFunc()\n\tcyan   = color.New(color.FgCyan).SprintFunc()\n)\n\n",
                      "markdown": "`\tyellow = color.New(color.FgYellow).SprintFunc()\n\tgreen  = color.New(color.FgGreen).SprintFunc()\n\tblue   = color.New(color.FgBlue).SprintFunc()\n\tred    = color.New(color.FgRed).SprintFunc()\n\tcyan   = color.New(color.FgCyan).SprintFunc()\n)\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/gobustertftp/options.go"
                },
                "region": {
                  "startLine": 10,
                  "endLine": 10,
                  "endColumn": 9,
                  "snippet": {
                    "text": "// OptionsTFTP holds all options for the tftp plugin\ntype OptionsTFTP struct {\n\tServer  string\n\tTimeout time.Duration\n}\n\n// NewOptionsTFTP returns a new initialized OptionsTFTP\n",
                    "rendered": {
                      "text": "// OptionsTFTP holds all options for the tftp plugin\ntype OptionsTFTP struct {\n\tServer  string\n\tTimeout time.Duration\n}\n\n// NewOptionsTFTP returns a new initialized OptionsTFTP\n",
                      "markdown": "`// OptionsTFTP holds all options for the tftp plugin\ntype OptionsTFTP struct {\n\tServer  string\n\tTimeout time.Duration\n}\n\n// NewOptionsTFTP returns a new initialized OptionsTFTP\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.github/workflows/docker.yml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 10,
                  "endLine": 33,
                  "endColumn": 18,
                  "snippet": {
                    "text": "        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.GITHUB_TOKEN }}\n\n      - name: Build and push\n        uses: docker/build-push-action@v4\n",
                    "rendered": {
                      "text": "        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.GITHUB_TOKEN }}\n\n      - name: Build and push\n        uses: docker/build-push-action@v4\n",
                      "markdown": "`        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.GITHUB_TOKEN }}\n\n      - name: Build and push\n        uses: docker/build-push-action@v4\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.github/workflows/docker.yml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 20,
                  "endLine": 25,
                  "endColumn": 28,
                  "snippet": {
                    "text": "      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v2\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v2\n\n      - name: Login to GitHub Container Registry\n",
                    "rendered": {
                      "text": "      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v2\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v2\n\n      - name: Login to GitHub Container Registry\n",
                      "markdown": "`      - name: Set up QEMU\n        uses: docker/setup-qemu-action@v2\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@v2\n\n      - name: Login to GitHub Container Registry\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.github/workflows/docker.yml"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 11,
                  "endLine": 1,
                  "endColumn": 19,
                  "snippet": {
                    "text": "name: Build Docker Images\n\non:\n  push:\n",
                    "rendered": {
                      "text": "name: Build Docker Images\n\non:\n  push:\n",
                      "markdown": "`name: Build Docker Images\n\non:\n  push:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.github/dependabot.yml"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 23,
                  "endLine": 2,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# To get started with Dependabot version updates, you'll need to specify which\n# package ecosystems to update and where the package manifests are located.\n# Please see the documentation for all configuration options:\n# https://help.github.com/github/administering-a-repository/configuration-options-for-dependency-updates\n\n",
                    "rendered": {
                      "text": "# To get started with Dependabot version updates, you'll need to specify which\n# package ecosystems to update and where the package manifests are located.\n# Please see the documentation for all configuration options:\n# https://help.github.com/github/administering-a-repository/configuration-options-for-dependency-updates\n\n",
                      "markdown": "`# To get started with Dependabot version updates, you'll need to specify which\n# package ecosystems to update and where the package manifests are located.\n# Please see the documentation for all configuration options:\n# https://help.github.com/github/administering-a-repository/configuration-options-for-dependency-updates\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/cli/cmd/s3.go"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 7,
                  "endLine": 2,
                  "snippet": {
                    "text": "package cmd\n\nimport (\n\t\"fmt\"\n\n",
                    "rendered": {
                      "text": "package cmd\n\nimport (\n\t\"fmt\"\n\n",
                      "markdown": "`package cmd\n\nimport (\n\t\"fmt\"\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 12,
                  "endLine": 21,
                  "endColumn": 17,
                  "snippet": {
                    "text": "          fetch-depth: 0\n\n      - name: Fetch all tags\n        run: git fetch --force --tags\n\n      - name: Set up Go\n        uses: actions/setup-go@v4\n",
                    "rendered": {
                      "text": "          fetch-depth: 0\n\n      - name: Fetch all tags\n        run: git fetch --force --tags\n\n      - name: Set up Go\n        uses: actions/setup-go@v4\n",
                      "markdown": "`          fetch-depth: 0\n\n      - name: Fetch all tags\n        run: git fetch --force --tags\n\n      - name: Set up Go\n        uses: actions/setup-go@v4\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/cli/cmd/root.go"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 7,
                  "endLine": 2,
                  "snippet": {
                    "text": "package cmd\n\nimport (\n\t\"bufio\"\n\t\"context\"\n",
                    "rendered": {
                      "text": "package cmd\n\nimport (\n\t\"bufio\"\n\t\"context\"\n",
                      "markdown": "`package cmd\n\nimport (\n\t\"bufio\"\n\t\"context\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/libgobuster/http_test.go"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 22,
                  "endLine": 106,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\t\tb.Fatalf(\"Got Error: %v\", err)\n\t}\n\tfor x := 0; x < b.N; x++ {\n\t\t_, _, _, _, err := c.Request(context.Background(), h.URL, RequestOptions{ReturnBody: true})\n\t\tif err != nil {\n\t\t\tb.Fatalf(\"Got Error: %v\", err)\n\t\t}\n",
                    "rendered": {
                      "text": "\t\tb.Fatalf(\"Got Error: %v\", err)\n\t}\n\tfor x := 0; x < b.N; x++ {\n\t\t_, _, _, _, err := c.Request(context.Background(), h.URL, RequestOptions{ReturnBody: true})\n\t\tif err != nil {\n\t\t\tb.Fatalf(\"Got Error: %v\", err)\n\t\t}\n",
                      "markdown": "`\t\tb.Fatalf(\"Got Error: %v\", err)\n\t}\n\tfor x := 0; x < b.N; x++ {\n\t\t_, _, _, _, err := c.Request(context.Background(), h.URL, RequestOptions{ReturnBody: true})\n\t\tif err != nil {\n\t\t\tb.Fatalf(\"Got Error: %v\", err)\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/libgobuster/http_test.go"
                },
                "region": {
                  "startLine": 86,
                  "startColumn": 22,
                  "endLine": 86,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\t\tb.Fatalf(\"Got Error: %v\", err)\n\t}\n\tfor x := 0; x < b.N; x++ {\n\t\t_, _, _, _, err := c.Request(context.Background(), h.URL, RequestOptions{ReturnBody: false})\n\t\tif err != nil {\n\t\t\tb.Fatalf(\"Got Error: %v\", err)\n\t\t}\n",
                    "rendered": {
                      "text": "\t\tb.Fatalf(\"Got Error: %v\", err)\n\t}\n\tfor x := 0; x < b.N; x++ {\n\t\t_, _, _, _, err := c.Request(context.Background(), h.URL, RequestOptions{ReturnBody: false})\n\t\tif err != nil {\n\t\t\tb.Fatalf(\"Got Error: %v\", err)\n\t\t}\n",
                      "markdown": "`\t\tb.Fatalf(\"Got Error: %v\", err)\n\t}\n\tfor x := 0; x < b.N; x++ {\n\t\t_, _, _, _, err := c.Request(context.Background(), h.URL, RequestOptions{ReturnBody: false})\n\t\tif err != nil {\n\t\t\tb.Fatalf(\"Got Error: %v\", err)\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/libgobuster/http_test.go"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 34,
                  "endLine": 58,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\tif err != nil {\n\t\tt.Fatalf(\"Got Error: %v\", err)\n\t}\n\tstatus, length, _, body, err := c.Request(context.Background(), h.URL, RequestOptions{ReturnBody: true})\n\tif err != nil {\n\t\tt.Fatalf(\"Got Error: %v\", err)\n\t}\n",
                    "rendered": {
                      "text": "\tif err != nil {\n\t\tt.Fatalf(\"Got Error: %v\", err)\n\t}\n\tstatus, length, _, body, err := c.Request(context.Background(), h.URL, RequestOptions{ReturnBody: true})\n\tif err != nil {\n\t\tt.Fatalf(\"Got Error: %v\", err)\n\t}\n",
                      "markdown": "`\tif err != nil {\n\t\tt.Fatalf(\"Got Error: %v\", err)\n\t}\n\tstatus, length, _, body, err := c.Request(context.Background(), h.URL, RequestOptions{ReturnBody: true})\n\tif err != nil {\n\t\tt.Fatalf(\"Got Error: %v\", err)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/libgobuster/http_test.go"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 21,
                  "endLine": 31,
                  "endColumn": 85,
                  "snippet": {
                    "text": "}\n\nfunc randomString(length int) (string, error) {\n\tvar letter = []byte(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\")\n\tletterLen := len(letter)\n\n\tb := make([]byte, length)\n",
                    "rendered": {
                      "text": "}\n\nfunc randomString(length int) (string, error) {\n\tvar letter = []byte(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\")\n\tletterLen := len(letter)\n\n\tb := make([]byte, length)\n",
                      "markdown": "`}\n\nfunc randomString(length int) (string, error) {\n\tvar letter = []byte(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\")\n\tletterLen := len(letter)\n\n\tb := make([]byte, length)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/cli/cmd/gcs.go"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 7,
                  "endLine": 2,
                  "snippet": {
                    "text": "package cmd\n\nimport (\n\t\"fmt\"\n\n",
                    "rendered": {
                      "text": "package cmd\n\nimport (\n\t\"fmt\"\n\n",
                      "markdown": "`package cmd\n\nimport (\n\t\"fmt\"\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/cli/cmd/fuzz.go"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 32,
                  "endLine": 143,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\t\treturn true\n\t}\n\n\tif strings.Contains(pluginopts.Password, gobusterfuzz.FuzzKeyword) {\n\t\treturn true\n\t}\n\n",
                    "rendered": {
                      "text": "\t\treturn true\n\t}\n\n\tif strings.Contains(pluginopts.Password, gobusterfuzz.FuzzKeyword) {\n\t\treturn true\n\t}\n\n",
                      "markdown": "`\t\treturn true\n\t}\n\n\tif strings.Contains(pluginopts.Password, gobusterfuzz.FuzzKeyword) {\n\t\treturn true\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/cli/cmd/fuzz.go"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 32,
                  "endLine": 57,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\tif err != nil {\n\t\treturn nil, nil, err\n\t}\n\tpluginOpts.Password = httpOpts.Password\n\tpluginOpts.URL = httpOpts.URL\n\tpluginOpts.UserAgent = httpOpts.UserAgent\n\tpluginOpts.Username = httpOpts.Username\n",
                    "rendered": {
                      "text": "\tif err != nil {\n\t\treturn nil, nil, err\n\t}\n\tpluginOpts.Password = httpOpts.Password\n\tpluginOpts.URL = httpOpts.URL\n\tpluginOpts.UserAgent = httpOpts.UserAgent\n\tpluginOpts.Username = httpOpts.Username\n",
                      "markdown": "`\tif err != nil {\n\t\treturn nil, nil, err\n\t}\n\tpluginOpts.Password = httpOpts.Password\n\tpluginOpts.URL = httpOpts.URL\n\tpluginOpts.UserAgent = httpOpts.UserAgent\n\tpluginOpts.Username = httpOpts.Username\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/cli/cmd/fuzz.go"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 12,
                  "endLine": 57,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\tif err != nil {\n\t\treturn nil, nil, err\n\t}\n\tpluginOpts.Password = httpOpts.Password\n\tpluginOpts.URL = httpOpts.URL\n\tpluginOpts.UserAgent = httpOpts.UserAgent\n\tpluginOpts.Username = httpOpts.Username\n",
                    "rendered": {
                      "text": "\tif err != nil {\n\t\treturn nil, nil, err\n\t}\n\tpluginOpts.Password = httpOpts.Password\n\tpluginOpts.URL = httpOpts.URL\n\tpluginOpts.UserAgent = httpOpts.UserAgent\n\tpluginOpts.Username = httpOpts.Username\n",
                      "markdown": "`\tif err != nil {\n\t\treturn nil, nil, err\n\t}\n\tpluginOpts.Password = httpOpts.Password\n\tpluginOpts.URL = httpOpts.URL\n\tpluginOpts.UserAgent = httpOpts.UserAgent\n\tpluginOpts.Username = httpOpts.Username\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/cli/cmd/fuzz.go"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 7,
                  "endLine": 2,
                  "snippet": {
                    "text": "package cmd\n\nimport (\n\t\"errors\"\n\t\"fmt\"\n",
                    "rendered": {
                      "text": "package cmd\n\nimport (\n\t\"errors\"\n\t\"fmt\"\n",
                      "markdown": "`package cmd\n\nimport (\n\t\"errors\"\n\t\"fmt\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/cli/cmd/dir_test.go"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 7,
                  "endLine": 2,
                  "snippet": {
                    "text": "package cmd\n\nimport (\n\t\"context\"\n\t\"fmt\"\n",
                    "rendered": {
                      "text": "package cmd\n\nimport (\n\t\"context\"\n\t\"fmt\"\n",
                      "markdown": "`package cmd\n\nimport (\n\t\"context\"\n\t\"fmt\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/gobusterdir/gobusterdir.go"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 43,
                  "endLine": 201,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\tvar header http.Header\n\tfor i := 1; i <= tries; i++ {\n\t\tvar err error\n\t\tstatusCode, size, header, _, err = d.http.Request(ctx, url, libgobuster.RequestOptions{})\n\t\tif err != nil {\n\t\t\t// check if it's a timeout and if we should try again and try again\n\t\t\t// otherwise the timeout error is raised\n",
                    "rendered": {
                      "text": "\tvar header http.Header\n\tfor i := 1; i <= tries; i++ {\n\t\tvar err error\n\t\tstatusCode, size, header, _, err = d.http.Request(ctx, url, libgobuster.RequestOptions{})\n\t\tif err != nil {\n\t\t\t// check if it's a timeout and if we should try again and try again\n\t\t\t// otherwise the timeout error is raised\n",
                      "markdown": "`\tvar header http.Header\n\tfor i := 1; i <= tries; i++ {\n\t\tvar err error\n\t\tstatusCode, size, header, _, err = d.http.Request(ctx, url, libgobuster.RequestOptions{})\n\t\tif err != nil {\n\t\t\t// check if it's a timeout and if we should try again and try again\n\t\t\t// otherwise the timeout error is raised\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/gobusterdir/gobusterdir.go"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 50,
                  "endLine": 111,
                  "endColumn": 59,
                  "snippet": {
                    "text": "\t\turl = fmt.Sprintf(\"%s/\", url)\n\t}\n\n\twildcardResp, wildcardLength, _, _, err := d.http.Request(ctx, url, libgobuster.RequestOptions{})\n\tif err != nil {\n\t\treturn err\n\t}\n",
                    "rendered": {
                      "text": "\t\turl = fmt.Sprintf(\"%s/\", url)\n\t}\n\n\twildcardResp, wildcardLength, _, _, err := d.http.Request(ctx, url, libgobuster.RequestOptions{})\n\tif err != nil {\n\t\treturn err\n\t}\n",
                      "markdown": "`\t\turl = fmt.Sprintf(\"%s/\", url)\n\t}\n\n\twildcardResp, wildcardLength, _, _, err := d.http.Request(ctx, url, libgobuster.RequestOptions{})\n\tif err != nil {\n\t\treturn err\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/gobusterdir/gobusterdir.go"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 26,
                  "endLine": 100,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\t\td.options.URL = fmt.Sprintf(\"%s/\", d.options.URL)\n\t}\n\n\t_, _, _, _, err := d.http.Request(ctx, d.options.URL, libgobuster.RequestOptions{})\n\tif err != nil {\n\t\treturn fmt.Errorf(\"unable to connect to %s: %w\", d.options.URL, err)\n\t}\n",
                    "rendered": {
                      "text": "\t\td.options.URL = fmt.Sprintf(\"%s/\", d.options.URL)\n\t}\n\n\t_, _, _, _, err := d.http.Request(ctx, d.options.URL, libgobuster.RequestOptions{})\n\tif err != nil {\n\t\treturn fmt.Errorf(\"unable to connect to %s: %w\", d.options.URL, err)\n\t}\n",
                      "markdown": "`\t\td.options.URL = fmt.Sprintf(\"%s/\", d.options.URL)\n\t}\n\n\t_, _, _, _, err := d.http.Request(ctx, d.options.URL, libgobuster.RequestOptions{})\n\tif err != nil {\n\t\treturn fmt.Errorf(\"unable to connect to %s: %w\", d.options.URL, err)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/gobusterdir/gobusterdir.go"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 30,
                  "endLine": 72,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\t\tBasicHTTPOptions:      basicOptions,\n\t\tFollowRedirect:        opts.FollowRedirect,\n\t\tUsername:              opts.Username,\n\t\tPassword:              opts.Password,\n\t\tHeaders:               opts.Headers,\n\t\tNoCanonicalizeHeaders: opts.NoCanonicalizeHeaders,\n\t\tCookies:               opts.Cookies,\n",
                    "rendered": {
                      "text": "\t\tBasicHTTPOptions:      basicOptions,\n\t\tFollowRedirect:        opts.FollowRedirect,\n\t\tUsername:              opts.Username,\n\t\tPassword:              opts.Password,\n\t\tHeaders:               opts.Headers,\n\t\tNoCanonicalizeHeaders: opts.NoCanonicalizeHeaders,\n\t\tCookies:               opts.Cookies,\n",
                      "markdown": "`\t\tBasicHTTPOptions:      basicOptions,\n\t\tFollowRedirect:        opts.FollowRedirect,\n\t\tUsername:              opts.Username,\n\t\tPassword:              opts.Password,\n\t\tHeaders:               opts.Headers,\n\t\tNoCanonicalizeHeaders: opts.NoCanonicalizeHeaders,\n\t\tCookies:               opts.Cookies,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/gobusterdir/gobusterdir.go"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 2,
                  "endLine": 72,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t\tBasicHTTPOptions:      basicOptions,\n\t\tFollowRedirect:        opts.FollowRedirect,\n\t\tUsername:              opts.Username,\n\t\tPassword:              opts.Password,\n\t\tHeaders:               opts.Headers,\n\t\tNoCanonicalizeHeaders: opts.NoCanonicalizeHeaders,\n\t\tCookies:               opts.Cookies,\n",
                    "rendered": {
                      "text": "\t\tBasicHTTPOptions:      basicOptions,\n\t\tFollowRedirect:        opts.FollowRedirect,\n\t\tUsername:              opts.Username,\n\t\tPassword:              opts.Password,\n\t\tHeaders:               opts.Headers,\n\t\tNoCanonicalizeHeaders: opts.NoCanonicalizeHeaders,\n\t\tCookies:               opts.Cookies,\n",
                      "markdown": "`\t\tBasicHTTPOptions:      basicOptions,\n\t\tFollowRedirect:        opts.FollowRedirect,\n\t\tUsername:              opts.Username,\n\t\tPassword:              opts.Password,\n\t\tHeaders:               opts.Headers,\n\t\tNoCanonicalizeHeaders: opts.NoCanonicalizeHeaders,\n\t\tCookies:               opts.Cookies,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/gobusterdir/gobusterdir.go"
                },
                "region": {
                  "startLine": 207,
                  "startColumn": 51,
                  "endLine": 207,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\t\t\t// otherwise the timeout error is raised\n\t\t\tif netErr, ok := err.(net.Error); ok && netErr.Timeout() && i != tries {\n\t\t\t\tcontinue\n\t\t\t} else if strings.Contains(err.Error(), \"invalid control character in URL\") {\n\t\t\t\t// put error in error chan so it's printed out and ignore it\n\t\t\t\t// so gobuster will not quit\n\t\t\t\tprogress.ErrorChan <- err\n",
                    "rendered": {
                      "text": "\t\t\t// otherwise the timeout error is raised\n\t\t\tif netErr, ok := err.(net.Error); ok && netErr.Timeout() && i != tries {\n\t\t\t\tcontinue\n\t\t\t} else if strings.Contains(err.Error(), \"invalid control character in URL\") {\n\t\t\t\t// put error in error chan so it's printed out and ignore it\n\t\t\t\t// so gobuster will not quit\n\t\t\t\tprogress.ErrorChan <- err\n",
                      "markdown": "`\t\t\t// otherwise the timeout error is raised\n\t\t\tif netErr, ok := err.(net.Error); ok && netErr.Timeout() && i != tries {\n\t\t\t\tcontinue\n\t\t\t} else if strings.Contains(err.Error(), \"invalid control character in URL\") {\n\t\t\t\t// put error in error chan so it's printed out and ignore it\n\t\t\t\t// so gobuster will not quit\n\t\t\t\tprogress.ErrorChan <- err\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/gobusterdir/gobusterdir.go"
                },
                "region": {
                  "startLine": 204,
                  "startColumn": 19,
                  "endLine": 204,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\t\tstatusCode, size, header, _, err = d.http.Request(ctx, url, libgobuster.RequestOptions{})\n\t\tif err != nil {\n\t\t\t// check if it's a timeout and if we should try again and try again\n\t\t\t// otherwise the timeout error is raised\n\t\t\tif netErr, ok := err.(net.Error); ok && netErr.Timeout() && i != tries {\n\t\t\t\tcontinue\n\t\t\t} else if strings.Contains(err.Error(), \"invalid control character in URL\") {\n",
                    "rendered": {
                      "text": "\t\tstatusCode, size, header, _, err = d.http.Request(ctx, url, libgobuster.RequestOptions{})\n\t\tif err != nil {\n\t\t\t// check if it's a timeout and if we should try again and try again\n\t\t\t// otherwise the timeout error is raised\n\t\t\tif netErr, ok := err.(net.Error); ok && netErr.Timeout() && i != tries {\n\t\t\t\tcontinue\n\t\t\t} else if strings.Contains(err.Error(), \"invalid control character in URL\") {\n",
                      "markdown": "`\t\tstatusCode, size, header, _, err = d.http.Request(ctx, url, libgobuster.RequestOptions{})\n\t\tif err != nil {\n\t\t\t// check if it's a timeout and if we should try again and try again\n\t\t\t// otherwise the timeout error is raised\n\t\t\tif netErr, ok := err.(net.Error); ok && netErr.Timeout() && i != tries {\n\t\t\t\tcontinue\n\t\t\t} else if strings.Contains(err.Error(), \"invalid control character in URL\") {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/gobusterdir/gobusterdir.go"
                },
                "region": {
                  "startLine": 203,
                  "startColumn": 21,
                  "endLine": 203,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\tvar err error\n\t\tstatusCode, size, header, _, err = d.http.Request(ctx, url, libgobuster.RequestOptions{})\n\t\tif err != nil {\n\t\t\t// check if it's a timeout and if we should try again and try again\n\t\t\t// otherwise the timeout error is raised\n\t\t\tif netErr, ok := err.(net.Error); ok && netErr.Timeout() && i != tries {\n\t\t\t\tcontinue\n",
                    "rendered": {
                      "text": "\t\tvar err error\n\t\tstatusCode, size, header, _, err = d.http.Request(ctx, url, libgobuster.RequestOptions{})\n\t\tif err != nil {\n\t\t\t// check if it's a timeout and if we should try again and try again\n\t\t\t// otherwise the timeout error is raised\n\t\t\tif netErr, ok := err.(net.Error); ok && netErr.Timeout() && i != tries {\n\t\t\t\tcontinue\n",
                      "markdown": "`\t\tvar err error\n\t\tstatusCode, size, header, _, err = d.http.Request(ctx, url, libgobuster.RequestOptions{})\n\t\tif err != nil {\n\t\t\t// check if it's a timeout and if we should try again and try again\n\t\t\t// otherwise the timeout error is raised\n\t\t\tif netErr, ok := err.(net.Error); ok && netErr.Timeout() && i != tries {\n\t\t\t\tcontinue\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/gobusterdir/result.go"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 21,
                  "endLine": 85,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t\t}\n\t}\n\n\tlocation := r.Header.Get(\"Location\")\n\tif location != \"\" {\n\t\tblue(buf, \" [--> %s]\", location)\n\t}\n",
                    "rendered": {
                      "text": "\t\t}\n\t}\n\n\tlocation := r.Header.Get(\"Location\")\n\tif location != \"\" {\n\t\tblue(buf, \" [--> %s]\", location)\n\t}\n",
                      "markdown": "`\t\t}\n\t}\n\n\tlocation := r.Header.Get(\"Location\")\n\tif location != \"\" {\n\t\tblue(buf, \" [--> %s]\", location)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/gobusterdir/result.go"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 10,
                  "endLine": 74,
                  "snippet": {
                    "text": "\t\t} else if r.StatusCode >= 400 && r.StatusCode < 500 {\n\t\t\tcolor = yellow\n\t\t} else if r.StatusCode >= 500 && r.StatusCode < 600 {\n\t\t\tcolor = red\n\t\t}\n\n\t\tcolor(buf, \" (Status: %d)\", r.StatusCode)\n\t}\n",
                    "rendered": {
                      "text": "\t\t} else if r.StatusCode >= 400 && r.StatusCode < 500 {\n\t\t\tcolor = yellow\n\t\t} else if r.StatusCode >= 500 && r.StatusCode < 600 {\n\t\t\tcolor = red\n\t\t}\n\n\t\tcolor(buf, \" (Status: %d)\", r.StatusCode)\n\t}\n",
                      "markdown": "`\t\t} else if r.StatusCode >= 400 && r.StatusCode < 500 {\n\t\t\tcolor = yellow\n\t\t} else if r.StatusCode >= 500 && r.StatusCode < 600 {\n\t\t\tcolor = red\n\t\t}\n\n\t\tcolor(buf, \" (Status: %d)\", r.StatusCode)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/gobusterdir/result.go"
                },
                "region": {
                  "startLine": 16,
                  "endLine": 16,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tyellow = color.New(color.FgYellow).FprintfFunc()\n\tgreen  = color.New(color.FgGreen).FprintfFunc()\n\tblue   = color.New(color.FgBlue).FprintfFunc()\n\tred    = color.New(color.FgRed).FprintfFunc()\n\tcyan   = color.New(color.FgCyan).FprintfFunc()\n)\n\n",
                    "rendered": {
                      "text": "\tyellow = color.New(color.FgYellow).FprintfFunc()\n\tgreen  = color.New(color.FgGreen).FprintfFunc()\n\tblue   = color.New(color.FgBlue).FprintfFunc()\n\tred    = color.New(color.FgRed).FprintfFunc()\n\tcyan   = color.New(color.FgCyan).FprintfFunc()\n)\n\n",
                      "markdown": "`\tyellow = color.New(color.FgYellow).FprintfFunc()\n\tgreen  = color.New(color.FgGreen).FprintfFunc()\n\tblue   = color.New(color.FgBlue).FprintfFunc()\n\tred    = color.New(color.FgRed).FprintfFunc()\n\tcyan   = color.New(color.FgCyan).FprintfFunc()\n)\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/gobusters3/gobusters3.go"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 38,
                  "endLine": 96,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\tvar body []byte\n\tfor i := 1; i <= tries; i++ {\n\t\tvar err error\n\t\tstatusCode, _, _, body, err = s.http.Request(ctx, bucketURL, libgobuster.RequestOptions{ReturnBody: true})\n\t\tif err != nil {\n\t\t\t// check if it's a timeout and if we should try again and try again\n\t\t\t// otherwise the timeout error is raised\n",
                    "rendered": {
                      "text": "\tvar body []byte\n\tfor i := 1; i <= tries; i++ {\n\t\tvar err error\n\t\tstatusCode, _, _, body, err = s.http.Request(ctx, bucketURL, libgobuster.RequestOptions{ReturnBody: true})\n\t\tif err != nil {\n\t\t\t// check if it's a timeout and if we should try again and try again\n\t\t\t// otherwise the timeout error is raised\n",
                      "markdown": "`\tvar body []byte\n\tfor i := 1; i <= tries; i++ {\n\t\tvar err error\n\t\tstatusCode, _, _, body, err = s.http.Request(ctx, bucketURL, libgobuster.RequestOptions{ReturnBody: true})\n\t\tif err != nil {\n\t\t\t// check if it's a timeout and if we should try again and try again\n\t\t\t// otherwise the timeout error is raised\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/gobusters3/gobusters3.go"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 51,
                  "endLine": 102,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\t\t\t// otherwise the timeout error is raised\n\t\t\tif netErr, ok := err.(net.Error); ok && netErr.Timeout() && i != tries {\n\t\t\t\tcontinue\n\t\t\t} else if strings.Contains(err.Error(), \"invalid control character in URL\") {\n\t\t\t\t// put error in error chan so it's printed out and ignore it\n\t\t\t\t// so gobuster will not quit\n\t\t\t\tprogress.ErrorChan <- err\n",
                    "rendered": {
                      "text": "\t\t\t// otherwise the timeout error is raised\n\t\t\tif netErr, ok := err.(net.Error); ok && netErr.Timeout() && i != tries {\n\t\t\t\tcontinue\n\t\t\t} else if strings.Contains(err.Error(), \"invalid control character in URL\") {\n\t\t\t\t// put error in error chan so it's printed out and ignore it\n\t\t\t\t// so gobuster will not quit\n\t\t\t\tprogress.ErrorChan <- err\n",
                      "markdown": "`\t\t\t// otherwise the timeout error is raised\n\t\t\tif netErr, ok := err.(net.Error); ok && netErr.Timeout() && i != tries {\n\t\t\t\tcontinue\n\t\t\t} else if strings.Contains(err.Error(), \"invalid control character in URL\") {\n\t\t\t\t// put error in error chan so it's printed out and ignore it\n\t\t\t\t// so gobuster will not quit\n\t\t\t\tprogress.ErrorChan <- err\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/gobusters3/gobusters3.go"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 19,
                  "endLine": 99,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\t\tstatusCode, _, _, body, err = s.http.Request(ctx, bucketURL, libgobuster.RequestOptions{ReturnBody: true})\n\t\tif err != nil {\n\t\t\t// check if it's a timeout and if we should try again and try again\n\t\t\t// otherwise the timeout error is raised\n\t\t\tif netErr, ok := err.(net.Error); ok && netErr.Timeout() && i != tries {\n\t\t\t\tcontinue\n\t\t\t} else if strings.Contains(err.Error(), \"invalid control character in URL\") {\n",
                    "rendered": {
                      "text": "\t\tstatusCode, _, _, body, err = s.http.Request(ctx, bucketURL, libgobuster.RequestOptions{ReturnBody: true})\n\t\tif err != nil {\n\t\t\t// check if it's a timeout and if we should try again and try again\n\t\t\t// otherwise the timeout error is raised\n\t\t\tif netErr, ok := err.(net.Error); ok && netErr.Timeout() && i != tries {\n\t\t\t\tcontinue\n\t\t\t} else if strings.Contains(err.Error(), \"invalid control character in URL\") {\n",
                      "markdown": "`\t\tstatusCode, _, _, body, err = s.http.Request(ctx, bucketURL, libgobuster.RequestOptions{ReturnBody: true})\n\t\tif err != nil {\n\t\t\t// check if it's a timeout and if we should try again and try again\n\t\t\t// otherwise the timeout error is raised\n\t\t\tif netErr, ok := err.(net.Error); ok && netErr.Timeout() && i != tries {\n\t\t\t\tcontinue\n\t\t\t} else if strings.Contains(err.Error(), \"invalid control character in URL\") {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/gobusters3/gobusters3.go"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 21,
                  "endLine": 98,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\tvar err error\n\t\tstatusCode, _, _, body, err = s.http.Request(ctx, bucketURL, libgobuster.RequestOptions{ReturnBody: true})\n\t\tif err != nil {\n\t\t\t// check if it's a timeout and if we should try again and try again\n\t\t\t// otherwise the timeout error is raised\n\t\t\tif netErr, ok := err.(net.Error); ok && netErr.Timeout() && i != tries {\n\t\t\t\tcontinue\n",
                    "rendered": {
                      "text": "\t\tvar err error\n\t\tstatusCode, _, _, body, err = s.http.Request(ctx, bucketURL, libgobuster.RequestOptions{ReturnBody: true})\n\t\tif err != nil {\n\t\t\t// check if it's a timeout and if we should try again and try again\n\t\t\t// otherwise the timeout error is raised\n\t\t\tif netErr, ok := err.(net.Error); ok && netErr.Timeout() && i != tries {\n\t\t\t\tcontinue\n",
                      "markdown": "`\t\tvar err error\n\t\tstatusCode, _, _, body, err = s.http.Request(ctx, bucketURL, libgobuster.RequestOptions{ReturnBody: true})\n\t\tif err != nil {\n\t\t\t// check if it's a timeout and if we should try again and try again\n\t\t\t// otherwise the timeout error is raised\n\t\t\tif netErr, ok := err.(net.Error); ok && netErr.Timeout() && i != tries {\n\t\t\t\tcontinue\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/cli/cmd/version.go"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 7,
                  "endLine": 2,
                  "snippet": {
                    "text": "package cmd\n\nimport (\n\t\"fmt\"\n\n",
                    "rendered": {
                      "text": "package cmd\n\nimport (\n\t\"fmt\"\n\n",
                      "markdown": "`package cmd\n\nimport (\n\t\"fmt\"\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/cli/cmd/http.go"
                },
                "region": {
                  "startLine": 254,
                  "startColumn": 56,
                  "endLine": 254,
                  "endColumn": 64,
                  "snippet": {
                    "text": "\t}\n\t// if it's still empty bail out\n\tif options.Username != \"\" && options.Password == \"\" {\n\t\treturn options, fmt.Errorf(\"username was provided but password is missing\")\n\t}\n\n\treturn options, nil\n",
                    "rendered": {
                      "text": "\t}\n\t// if it's still empty bail out\n\tif options.Username != \"\" && options.Password == \"\" {\n\t\treturn options, fmt.Errorf(\"username was provided but password is missing\")\n\t}\n\n\treturn options, nil\n",
                      "markdown": "`\t}\n\t// if it's still empty bail out\n\tif options.Username != \"\" && options.Password == \"\" {\n\t\treturn options, fmt.Errorf(\"username was provided but password is missing\")\n\t}\n\n\treturn options, nil\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/cli/cmd/http.go"
                },
                "region": {
                  "startLine": 253,
                  "startColumn": 38,
                  "endLine": 253,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\t\toptions.Password = string(passBytes)\n\t}\n\t// if it's still empty bail out\n\tif options.Username != \"\" && options.Password == \"\" {\n\t\treturn options, fmt.Errorf(\"username was provided but password is missing\")\n\t}\n\n",
                    "rendered": {
                      "text": "\t\toptions.Password = string(passBytes)\n\t}\n\t// if it's still empty bail out\n\tif options.Username != \"\" && options.Password == \"\" {\n\t\treturn options, fmt.Errorf(\"username was provided but password is missing\")\n\t}\n\n",
                      "markdown": "`\t\toptions.Password = string(passBytes)\n\t}\n\t// if it's still empty bail out\n\tif options.Username != \"\" && options.Password == \"\" {\n\t\treturn options, fmt.Errorf(\"username was provided but password is missing\")\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/cli/cmd/http.go"
                },
                "region": {
                  "startLine": 250,
                  "startColumn": 10,
                  "endLine": 250,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t\tif err != nil {\n\t\t\treturn options, fmt.Errorf(\"username given but reading of password failed\")\n\t\t}\n\t\toptions.Password = string(passBytes)\n\t}\n\t// if it's still empty bail out\n\tif options.Username != \"\" && options.Password == \"\" {\n",
                    "rendered": {
                      "text": "\t\tif err != nil {\n\t\t\treturn options, fmt.Errorf(\"username given but reading of password failed\")\n\t\t}\n\t\toptions.Password = string(passBytes)\n\t}\n\t// if it's still empty bail out\n\tif options.Username != \"\" && options.Password == \"\" {\n",
                      "markdown": "`\t\tif err != nil {\n\t\t\treturn options, fmt.Errorf(\"username given but reading of password failed\")\n\t\t}\n\t\toptions.Password = string(passBytes)\n\t}\n\t// if it's still empty bail out\n\tif options.Username != \"\" && options.Password == \"\" {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/cli/cmd/http.go"
                },
                "region": {
                  "startLine": 248,
                  "startColumn": 61,
                  "endLine": 248,
                  "endColumn": 69,
                  "snippet": {
                    "text": "\t\t// this means that formatting/printing after doesn't look bad.\n\t\tfmt.Println(\"\")\n\t\tif err != nil {\n\t\t\treturn options, fmt.Errorf(\"username given but reading of password failed\")\n\t\t}\n\t\toptions.Password = string(passBytes)\n\t}\n",
                    "rendered": {
                      "text": "\t\t// this means that formatting/printing after doesn't look bad.\n\t\tfmt.Println(\"\")\n\t\tif err != nil {\n\t\t\treturn options, fmt.Errorf(\"username given but reading of password failed\")\n\t\t}\n\t\toptions.Password = string(passBytes)\n\t}\n",
                      "markdown": "`\t\t// this means that formatting/printing after doesn't look bad.\n\t\tfmt.Println(\"\")\n\t\tif err != nil {\n\t\t\treturn options, fmt.Errorf(\"username given but reading of password failed\")\n\t\t}\n\t\toptions.Password = string(passBytes)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/cli/cmd/http.go"
                },
                "region": {
                  "startLine": 243,
                  "startColumn": 29,
                  "endLine": 243,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif options.Username != \"\" && options.Password == \"\" {\n\t\tfmt.Printf(\"[?] Auth Password: \")\n\t\t// please don't remove the int cast here as it is sadly needed on windows :/\n\t\tpassBytes, err := term.ReadPassword(int(syscall.Stdin)) //nolint:unconvert\n\t\t// print a newline to simulate the newline that was entered\n\t\t// this means that formatting/printing after doesn't look bad.\n\t\tfmt.Println(\"\")\n",
                    "rendered": {
                      "text": "\tif options.Username != \"\" && options.Password == \"\" {\n\t\tfmt.Printf(\"[?] Auth Password: \")\n\t\t// please don't remove the int cast here as it is sadly needed on windows :/\n\t\tpassBytes, err := term.ReadPassword(int(syscall.Stdin)) //nolint:unconvert\n\t\t// print a newline to simulate the newline that was entered\n\t\t// this means that formatting/printing after doesn't look bad.\n\t\tfmt.Println(\"\")\n",
                      "markdown": "`\tif options.Username != \"\" && options.Password == \"\" {\n\t\tfmt.Printf(\"[?] Auth Password: \")\n\t\t// please don't remove the int cast here as it is sadly needed on windows :/\n\t\tpassBytes, err := term.ReadPassword(int(syscall.Stdin)) //nolint:unconvert\n\t\t// print a newline to simulate the newline that was entered\n\t\t// this means that formatting/printing after doesn't look bad.\n\t\tfmt.Println(\"\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/cli/cmd/http.go"
                },
                "region": {
                  "startLine": 241,
                  "startColumn": 23,
                  "endLine": 241,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\n\t// Prompt for PW if not provided\n\tif options.Username != \"\" && options.Password == \"\" {\n\t\tfmt.Printf(\"[?] Auth Password: \")\n\t\t// please don't remove the int cast here as it is sadly needed on windows :/\n\t\tpassBytes, err := term.ReadPassword(int(syscall.Stdin)) //nolint:unconvert\n\t\t// print a newline to simulate the newline that was entered\n",
                    "rendered": {
                      "text": "\n\t// Prompt for PW if not provided\n\tif options.Username != \"\" && options.Password == \"\" {\n\t\tfmt.Printf(\"[?] Auth Password: \")\n\t\t// please don't remove the int cast here as it is sadly needed on windows :/\n\t\tpassBytes, err := term.ReadPassword(int(syscall.Stdin)) //nolint:unconvert\n\t\t// print a newline to simulate the newline that was entered\n",
                      "markdown": "`\n\t// Prompt for PW if not provided\n\tif options.Username != \"\" && options.Password == \"\" {\n\t\tfmt.Printf(\"[?] Auth Password: \")\n\t\t// please don't remove the int cast here as it is sadly needed on windows :/\n\t\tpassBytes, err := term.ReadPassword(int(syscall.Stdin)) //nolint:unconvert\n\t\t// print a newline to simulate the newline that was entered\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/cli/cmd/http.go"
                },
                "region": {
                  "startLine": 240,
                  "startColumn": 38,
                  "endLine": 240,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\toptions.NoCanonicalizeHeaders = noCanonHeaders\n\n\t// Prompt for PW if not provided\n\tif options.Username != \"\" && options.Password == \"\" {\n\t\tfmt.Printf(\"[?] Auth Password: \")\n\t\t// please don't remove the int cast here as it is sadly needed on windows :/\n\t\tpassBytes, err := term.ReadPassword(int(syscall.Stdin)) //nolint:unconvert\n",
                    "rendered": {
                      "text": "\toptions.NoCanonicalizeHeaders = noCanonHeaders\n\n\t// Prompt for PW if not provided\n\tif options.Username != \"\" && options.Password == \"\" {\n\t\tfmt.Printf(\"[?] Auth Password: \")\n\t\t// please don't remove the int cast here as it is sadly needed on windows :/\n\t\tpassBytes, err := term.ReadPassword(int(syscall.Stdin)) //nolint:unconvert\n",
                      "markdown": "`\toptions.NoCanonicalizeHeaders = noCanonHeaders\n\n\t// Prompt for PW if not provided\n\tif options.Username != \"\" && options.Password == \"\" {\n\t\tfmt.Printf(\"[?] Auth Password: \")\n\t\t// please don't remove the int cast here as it is sadly needed on windows :/\n\t\tpassBytes, err := term.ReadPassword(int(syscall.Stdin)) //nolint:unconvert\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/cli/cmd/http.go"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 48,
                  "endLine": 201,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\n\toptions.Password, err = cmd.Flags().GetString(\"password\")\n\tif err != nil {\n\t\treturn options, fmt.Errorf(\"invalid value for password: %w\", err)\n\t}\n\n\toptions.FollowRedirect, err = cmd.Flags().GetBool(\"follow-redirect\")\n",
                    "rendered": {
                      "text": "\n\toptions.Password, err = cmd.Flags().GetString(\"password\")\n\tif err != nil {\n\t\treturn options, fmt.Errorf(\"invalid value for password: %w\", err)\n\t}\n\n\toptions.FollowRedirect, err = cmd.Flags().GetBool(\"follow-redirect\")\n",
                      "markdown": "`\n\toptions.Password, err = cmd.Flags().GetString(\"password\")\n\tif err != nil {\n\t\treturn options, fmt.Errorf(\"invalid value for password: %w\", err)\n\t}\n\n\toptions.FollowRedirect, err = cmd.Flags().GetBool(\"follow-redirect\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/cli/cmd/http.go"
                },
                "region": {
                  "startLine": 199,
                  "startColumn": 48,
                  "endLine": 199,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\t\treturn options, fmt.Errorf(\"invalid value for username: %w\", err)\n\t}\n\n\toptions.Password, err = cmd.Flags().GetString(\"password\")\n\tif err != nil {\n\t\treturn options, fmt.Errorf(\"invalid value for password: %w\", err)\n\t}\n",
                    "rendered": {
                      "text": "\t\treturn options, fmt.Errorf(\"invalid value for username: %w\", err)\n\t}\n\n\toptions.Password, err = cmd.Flags().GetString(\"password\")\n\tif err != nil {\n\t\treturn options, fmt.Errorf(\"invalid value for password: %w\", err)\n\t}\n",
                      "markdown": "`\t\treturn options, fmt.Errorf(\"invalid value for username: %w\", err)\n\t}\n\n\toptions.Password, err = cmd.Flags().GetString(\"password\")\n\tif err != nil {\n\t\treturn options, fmt.Errorf(\"invalid value for password: %w\", err)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/cli/cmd/http.go"
                },
                "region": {
                  "startLine": 199,
                  "startColumn": 9,
                  "endLine": 199,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t\treturn options, fmt.Errorf(\"invalid value for username: %w\", err)\n\t}\n\n\toptions.Password, err = cmd.Flags().GetString(\"password\")\n\tif err != nil {\n\t\treturn options, fmt.Errorf(\"invalid value for password: %w\", err)\n\t}\n",
                    "rendered": {
                      "text": "\t\treturn options, fmt.Errorf(\"invalid value for username: %w\", err)\n\t}\n\n\toptions.Password, err = cmd.Flags().GetString(\"password\")\n\tif err != nil {\n\t\treturn options, fmt.Errorf(\"invalid value for password: %w\", err)\n\t}\n",
                      "markdown": "`\t\treturn options, fmt.Errorf(\"invalid value for username: %w\", err)\n\t}\n\n\toptions.Password, err = cmd.Flags().GetString(\"password\")\n\tif err != nil {\n\t\treturn options, fmt.Errorf(\"invalid value for password: %w\", err)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/cli/cmd/http.go"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 64,
                  "endLine": 112,
                  "endColumn": 72,
                  "snippet": {
                    "text": "\t}\n\tp12Pass, err := cmd.Flags().GetString(\"client-cert-p12-password\")\n\tif err != nil {\n\t\treturn options, fmt.Errorf(\"invalid value for client-cert-p12-password: %w\", err)\n\t}\n\n\tif pemFile != \"\" && p12File != \"\" {\n",
                    "rendered": {
                      "text": "\t}\n\tp12Pass, err := cmd.Flags().GetString(\"client-cert-p12-password\")\n\tif err != nil {\n\t\treturn options, fmt.Errorf(\"invalid value for client-cert-p12-password: %w\", err)\n\t}\n\n\tif pemFile != \"\" && p12File != \"\" {\n",
                      "markdown": "`\t}\n\tp12Pass, err := cmd.Flags().GetString(\"client-cert-p12-password\")\n\tif err != nil {\n\t\treturn options, fmt.Errorf(\"invalid value for client-cert-p12-password: %w\", err)\n\t}\n\n\tif pemFile != \"\" && p12File != \"\" {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/cli/cmd/http.go"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 56,
                  "endLine": 110,
                  "endColumn": 64,
                  "snippet": {
                    "text": "\tif err != nil {\n\t\treturn options, fmt.Errorf(\"invalid value for client-cert-p12: %w\", err)\n\t}\n\tp12Pass, err := cmd.Flags().GetString(\"client-cert-p12-password\")\n\tif err != nil {\n\t\treturn options, fmt.Errorf(\"invalid value for client-cert-p12-password: %w\", err)\n\t}\n",
                    "rendered": {
                      "text": "\tif err != nil {\n\t\treturn options, fmt.Errorf(\"invalid value for client-cert-p12: %w\", err)\n\t}\n\tp12Pass, err := cmd.Flags().GetString(\"client-cert-p12-password\")\n\tif err != nil {\n\t\treturn options, fmt.Errorf(\"invalid value for client-cert-p12-password: %w\", err)\n\t}\n",
                      "markdown": "`\tif err != nil {\n\t\treturn options, fmt.Errorf(\"invalid value for client-cert-p12: %w\", err)\n\t}\n\tp12Pass, err := cmd.Flags().GetString(\"client-cert-p12-password\")\n\tif err != nil {\n\t\treturn options, fmt.Errorf(\"invalid value for client-cert-p12-password: %w\", err)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/cli/cmd/http.go"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 43,
                  "endLine": 40,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\tcmd.Flags().StringP(\"url\", \"u\", \"\", \"The target URL\")\n\tcmd.Flags().StringP(\"cookies\", \"c\", \"\", \"Cookies to use for the requests\")\n\tcmd.Flags().StringP(\"username\", \"U\", \"\", \"Username for Basic Auth\")\n\tcmd.Flags().StringP(\"password\", \"P\", \"\", \"Password for Basic Auth\")\n\tcmd.Flags().BoolP(\"follow-redirect\", \"r\", false, \"Follow redirects\")\n\tcmd.Flags().StringArrayP(\"headers\", \"H\", []string{\"\"}, \"Specify HTTP headers, -H 'Header1: val1' -H 'Header2: val2'\")\n\tcmd.Flags().BoolP(\"no-canonicalize-headers\", \"\", false, \"Do not canonicalize HTTP header names. If set header names are sent as is.\")\n",
                    "rendered": {
                      "text": "\tcmd.Flags().StringP(\"url\", \"u\", \"\", \"The target URL\")\n\tcmd.Flags().StringP(\"cookies\", \"c\", \"\", \"Cookies to use for the requests\")\n\tcmd.Flags().StringP(\"username\", \"U\", \"\", \"Username for Basic Auth\")\n\tcmd.Flags().StringP(\"password\", \"P\", \"\", \"Password for Basic Auth\")\n\tcmd.Flags().BoolP(\"follow-redirect\", \"r\", false, \"Follow redirects\")\n\tcmd.Flags().StringArrayP(\"headers\", \"H\", []string{\"\"}, \"Specify HTTP headers, -H 'Header1: val1' -H 'Header2: val2'\")\n\tcmd.Flags().BoolP(\"no-canonicalize-headers\", \"\", false, \"Do not canonicalize HTTP header names. If set header names are sent as is.\")\n",
                      "markdown": "`\tcmd.Flags().StringP(\"url\", \"u\", \"\", \"The target URL\")\n\tcmd.Flags().StringP(\"cookies\", \"c\", \"\", \"Cookies to use for the requests\")\n\tcmd.Flags().StringP(\"username\", \"U\", \"\", \"Username for Basic Auth\")\n\tcmd.Flags().StringP(\"password\", \"P\", \"\", \"Password for Basic Auth\")\n\tcmd.Flags().BoolP(\"follow-redirect\", \"r\", false, \"Follow redirects\")\n\tcmd.Flags().StringArrayP(\"headers\", \"H\", []string{\"\"}, \"Specify HTTP headers, -H 'Header1: val1' -H 'Header2: val2'\")\n\tcmd.Flags().BoolP(\"no-canonicalize-headers\", \"\", false, \"Do not canonicalize HTTP header names. If set header names are sent as is.\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/cli/cmd/http.go"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 22,
                  "endLine": 40,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\tcmd.Flags().StringP(\"url\", \"u\", \"\", \"The target URL\")\n\tcmd.Flags().StringP(\"cookies\", \"c\", \"\", \"Cookies to use for the requests\")\n\tcmd.Flags().StringP(\"username\", \"U\", \"\", \"Username for Basic Auth\")\n\tcmd.Flags().StringP(\"password\", \"P\", \"\", \"Password for Basic Auth\")\n\tcmd.Flags().BoolP(\"follow-redirect\", \"r\", false, \"Follow redirects\")\n\tcmd.Flags().StringArrayP(\"headers\", \"H\", []string{\"\"}, \"Specify HTTP headers, -H 'Header1: val1' -H 'Header2: val2'\")\n\tcmd.Flags().BoolP(\"no-canonicalize-headers\", \"\", false, \"Do not canonicalize HTTP header names. If set header names are sent as is.\")\n",
                    "rendered": {
                      "text": "\tcmd.Flags().StringP(\"url\", \"u\", \"\", \"The target URL\")\n\tcmd.Flags().StringP(\"cookies\", \"c\", \"\", \"Cookies to use for the requests\")\n\tcmd.Flags().StringP(\"username\", \"U\", \"\", \"Username for Basic Auth\")\n\tcmd.Flags().StringP(\"password\", \"P\", \"\", \"Password for Basic Auth\")\n\tcmd.Flags().BoolP(\"follow-redirect\", \"r\", false, \"Follow redirects\")\n\tcmd.Flags().StringArrayP(\"headers\", \"H\", []string{\"\"}, \"Specify HTTP headers, -H 'Header1: val1' -H 'Header2: val2'\")\n\tcmd.Flags().BoolP(\"no-canonicalize-headers\", \"\", false, \"Do not canonicalize HTTP header names. If set header names are sent as is.\")\n",
                      "markdown": "`\tcmd.Flags().StringP(\"url\", \"u\", \"\", \"The target URL\")\n\tcmd.Flags().StringP(\"cookies\", \"c\", \"\", \"Cookies to use for the requests\")\n\tcmd.Flags().StringP(\"username\", \"U\", \"\", \"Username for Basic Auth\")\n\tcmd.Flags().StringP(\"password\", \"P\", \"\", \"Password for Basic Auth\")\n\tcmd.Flags().BoolP(\"follow-redirect\", \"r\", false, \"Follow redirects\")\n\tcmd.Flags().StringArrayP(\"headers\", \"H\", []string{\"\"}, \"Specify HTTP headers, -H 'Header1: val1' -H 'Header2: val2'\")\n\tcmd.Flags().BoolP(\"no-canonicalize-headers\", \"\", false, \"Do not canonicalize HTTP header names. If set header names are sent as is.\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/cli/cmd/http.go"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 62,
                  "endLine": 32,
                  "endColumn": 70,
                  "snippet": {
                    "text": "\tcmd.Flags().StringP(\"client-cert-pem\", \"\", \"\", \"public key in PEM format for optional TLS client certificates\")\n\tcmd.Flags().StringP(\"client-cert-pem-key\", \"\", \"\", \"private key in PEM format for optional TLS client certificates (this key needs to have no password)\")\n\tcmd.Flags().StringP(\"client-cert-p12\", \"\", \"\", \"a p12 file to use for options TLS client certificates\")\n\tcmd.Flags().StringP(\"client-cert-p12-password\", \"\", \"\", \"the password to the p12 file\")\n}\n\nfunc addCommonHTTPOptions(cmd *cobra.Command) error {\n",
                    "rendered": {
                      "text": "\tcmd.Flags().StringP(\"client-cert-pem\", \"\", \"\", \"public key in PEM format for optional TLS client certificates\")\n\tcmd.Flags().StringP(\"client-cert-pem-key\", \"\", \"\", \"private key in PEM format for optional TLS client certificates (this key needs to have no password)\")\n\tcmd.Flags().StringP(\"client-cert-p12\", \"\", \"\", \"a p12 file to use for options TLS client certificates\")\n\tcmd.Flags().StringP(\"client-cert-p12-password\", \"\", \"\", \"the password to the p12 file\")\n}\n\nfunc addCommonHTTPOptions(cmd *cobra.Command) error {\n",
                      "markdown": "`\tcmd.Flags().StringP(\"client-cert-pem\", \"\", \"\", \"public key in PEM format for optional TLS client certificates\")\n\tcmd.Flags().StringP(\"client-cert-pem-key\", \"\", \"\", \"private key in PEM format for optional TLS client certificates (this key needs to have no password)\")\n\tcmd.Flags().StringP(\"client-cert-p12\", \"\", \"\", \"a p12 file to use for options TLS client certificates\")\n\tcmd.Flags().StringP(\"client-cert-p12-password\", \"\", \"\", \"the password to the p12 file\")\n}\n\nfunc addCommonHTTPOptions(cmd *cobra.Command) error {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/cli/cmd/http.go"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 38,
                  "endLine": 32,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\tcmd.Flags().StringP(\"client-cert-pem\", \"\", \"\", \"public key in PEM format for optional TLS client certificates\")\n\tcmd.Flags().StringP(\"client-cert-pem-key\", \"\", \"\", \"private key in PEM format for optional TLS client certificates (this key needs to have no password)\")\n\tcmd.Flags().StringP(\"client-cert-p12\", \"\", \"\", \"a p12 file to use for options TLS client certificates\")\n\tcmd.Flags().StringP(\"client-cert-p12-password\", \"\", \"\", \"the password to the p12 file\")\n}\n\nfunc addCommonHTTPOptions(cmd *cobra.Command) error {\n",
                    "rendered": {
                      "text": "\tcmd.Flags().StringP(\"client-cert-pem\", \"\", \"\", \"public key in PEM format for optional TLS client certificates\")\n\tcmd.Flags().StringP(\"client-cert-pem-key\", \"\", \"\", \"private key in PEM format for optional TLS client certificates (this key needs to have no password)\")\n\tcmd.Flags().StringP(\"client-cert-p12\", \"\", \"\", \"a p12 file to use for options TLS client certificates\")\n\tcmd.Flags().StringP(\"client-cert-p12-password\", \"\", \"\", \"the password to the p12 file\")\n}\n\nfunc addCommonHTTPOptions(cmd *cobra.Command) error {\n",
                      "markdown": "`\tcmd.Flags().StringP(\"client-cert-pem\", \"\", \"\", \"public key in PEM format for optional TLS client certificates\")\n\tcmd.Flags().StringP(\"client-cert-pem-key\", \"\", \"\", \"private key in PEM format for optional TLS client certificates (this key needs to have no password)\")\n\tcmd.Flags().StringP(\"client-cert-p12\", \"\", \"\", \"a p12 file to use for options TLS client certificates\")\n\tcmd.Flags().StringP(\"client-cert-p12-password\", \"\", \"\", \"the password to the p12 file\")\n}\n\nfunc addCommonHTTPOptions(cmd *cobra.Command) error {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/cli/cmd/http.go"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 143,
                  "endLine": 30,
                  "endColumn": 151,
                  "snippet": {
                    "text": "\tcmd.Flags().IntP(\"retry-attempts\", \"\", 3, \"Times to retry on request timeout\")\n\t// client certificates, either pem or p12\n\tcmd.Flags().StringP(\"client-cert-pem\", \"\", \"\", \"public key in PEM format for optional TLS client certificates\")\n\tcmd.Flags().StringP(\"client-cert-pem-key\", \"\", \"\", \"private key in PEM format for optional TLS client certificates (this key needs to have no password)\")\n\tcmd.Flags().StringP(\"client-cert-p12\", \"\", \"\", \"a p12 file to use for options TLS client certificates\")\n\tcmd.Flags().StringP(\"client-cert-p12-password\", \"\", \"\", \"the password to the p12 file\")\n}\n",
                    "rendered": {
                      "text": "\tcmd.Flags().IntP(\"retry-attempts\", \"\", 3, \"Times to retry on request timeout\")\n\t// client certificates, either pem or p12\n\tcmd.Flags().StringP(\"client-cert-pem\", \"\", \"\", \"public key in PEM format for optional TLS client certificates\")\n\tcmd.Flags().StringP(\"client-cert-pem-key\", \"\", \"\", \"private key in PEM format for optional TLS client certificates (this key needs to have no password)\")\n\tcmd.Flags().StringP(\"client-cert-p12\", \"\", \"\", \"a p12 file to use for options TLS client certificates\")\n\tcmd.Flags().StringP(\"client-cert-p12-password\", \"\", \"\", \"the password to the p12 file\")\n}\n",
                      "markdown": "`\tcmd.Flags().IntP(\"retry-attempts\", \"\", 3, \"Times to retry on request timeout\")\n\t// client certificates, either pem or p12\n\tcmd.Flags().StringP(\"client-cert-pem\", \"\", \"\", \"public key in PEM format for optional TLS client certificates\")\n\tcmd.Flags().StringP(\"client-cert-pem-key\", \"\", \"\", \"private key in PEM format for optional TLS client certificates (this key needs to have no password)\")\n\tcmd.Flags().StringP(\"client-cert-p12\", \"\", \"\", \"a p12 file to use for options TLS client certificates\")\n\tcmd.Flags().StringP(\"client-cert-p12-password\", \"\", \"\", \"the password to the p12 file\")\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/cli/cmd/http.go"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 7,
                  "endLine": 2,
                  "snippet": {
                    "text": "package cmd\n\nimport (\n\t\"crypto/tls\"\n\t\"encoding/pem\"\n",
                    "rendered": {
                      "text": "package cmd\n\nimport (\n\t\"crypto/tls\"\n\t\"encoding/pem\"\n",
                      "markdown": "`package cmd\n\nimport (\n\t\"crypto/tls\"\n\t\"encoding/pem\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/cli/cmd/vhost_test.go"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 7,
                  "endLine": 2,
                  "snippet": {
                    "text": "package cmd\n\nimport (\n\t\"context\"\n\t\"fmt\"\n",
                    "rendered": {
                      "text": "package cmd\n\nimport (\n\t\"context\"\n\t\"fmt\"\n",
                      "markdown": "`package cmd\n\nimport (\n\t\"context\"\n\t\"fmt\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/gobustervhost/gobustervhost.go"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 46,
                  "endLine": 133,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\tvar body []byte\n\tfor i := 1; i <= tries; i++ {\n\t\tvar err error\n\t\tstatusCode, size, header, body, err = v.http.Request(ctx, v.options.URL, libgobuster.RequestOptions{Host: subdomain, ReturnBody: true})\n\t\tif err != nil {\n\t\t\t// check if it's a timeout and if we should try again and try again\n\t\t\t// otherwise the timeout error is raised\n",
                    "rendered": {
                      "text": "\tvar body []byte\n\tfor i := 1; i <= tries; i++ {\n\t\tvar err error\n\t\tstatusCode, size, header, body, err = v.http.Request(ctx, v.options.URL, libgobuster.RequestOptions{Host: subdomain, ReturnBody: true})\n\t\tif err != nil {\n\t\t\t// check if it's a timeout and if we should try again and try again\n\t\t\t// otherwise the timeout error is raised\n",
                      "markdown": "`\tvar body []byte\n\tfor i := 1; i <= tries; i++ {\n\t\tvar err error\n\t\tstatusCode, size, header, body, err = v.http.Request(ctx, v.options.URL, libgobuster.RequestOptions{Host: subdomain, ReturnBody: true})\n\t\tif err != nil {\n\t\t\t// check if it's a timeout and if we should try again and try again\n\t\t\t// otherwise the timeout error is raised\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/gobustervhost/gobustervhost.go"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 28,
                  "endLine": 103,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\n\t// request non existent vhost for abnormalBody\n\tsubdomain := fmt.Sprintf(\"%s.%s\", uuid.New(), v.domain)\n\t_, _, _, body, err = v.http.Request(ctx, v.options.URL, libgobuster.RequestOptions{Host: subdomain, ReturnBody: true})\n\tif err != nil {\n\t\treturn fmt.Errorf(\"unable to connect to %s: %w\", v.options.URL, err)\n\t}\n",
                    "rendered": {
                      "text": "\n\t// request non existent vhost for abnormalBody\n\tsubdomain := fmt.Sprintf(\"%s.%s\", uuid.New(), v.domain)\n\t_, _, _, body, err = v.http.Request(ctx, v.options.URL, libgobuster.RequestOptions{Host: subdomain, ReturnBody: true})\n\tif err != nil {\n\t\treturn fmt.Errorf(\"unable to connect to %s: %w\", v.options.URL, err)\n\t}\n",
                      "markdown": "`\n\t// request non existent vhost for abnormalBody\n\tsubdomain := fmt.Sprintf(\"%s.%s\", uuid.New(), v.domain)\n\t_, _, _, body, err = v.http.Request(ctx, v.options.URL, libgobuster.RequestOptions{Host: subdomain, ReturnBody: true})\n\tif err != nil {\n\t\treturn fmt.Errorf(\"unable to connect to %s: %w\", v.options.URL, err)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/gobustervhost/gobustervhost.go"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 29,
                  "endLine": 95,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\t}\n\n\t// request default vhost for normalBody\n\t_, _, _, body, err := v.http.Request(ctx, v.options.URL, libgobuster.RequestOptions{ReturnBody: true})\n\tif err != nil {\n\t\treturn fmt.Errorf(\"unable to connect to %s: %w\", v.options.URL, err)\n\t}\n",
                    "rendered": {
                      "text": "\t}\n\n\t// request default vhost for normalBody\n\t_, _, _, body, err := v.http.Request(ctx, v.options.URL, libgobuster.RequestOptions{ReturnBody: true})\n\tif err != nil {\n\t\treturn fmt.Errorf(\"unable to connect to %s: %w\", v.options.URL, err)\n\t}\n",
                      "markdown": "`\t}\n\n\t// request default vhost for normalBody\n\t_, _, _, body, err := v.http.Request(ctx, v.options.URL, libgobuster.RequestOptions{ReturnBody: true})\n\tif err != nil {\n\t\treturn fmt.Errorf(\"unable to connect to %s: %w\", v.options.URL, err)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/gobustervhost/gobustervhost.go"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 30,
                  "endLine": 57,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\t\tBasicHTTPOptions:      basicOptions,\n\t\tFollowRedirect:        opts.FollowRedirect,\n\t\tUsername:              opts.Username,\n\t\tPassword:              opts.Password,\n\t\tHeaders:               opts.Headers,\n\t\tNoCanonicalizeHeaders: opts.NoCanonicalizeHeaders,\n\t\tCookies:               opts.Cookies,\n",
                    "rendered": {
                      "text": "\t\tBasicHTTPOptions:      basicOptions,\n\t\tFollowRedirect:        opts.FollowRedirect,\n\t\tUsername:              opts.Username,\n\t\tPassword:              opts.Password,\n\t\tHeaders:               opts.Headers,\n\t\tNoCanonicalizeHeaders: opts.NoCanonicalizeHeaders,\n\t\tCookies:               opts.Cookies,\n",
                      "markdown": "`\t\tBasicHTTPOptions:      basicOptions,\n\t\tFollowRedirect:        opts.FollowRedirect,\n\t\tUsername:              opts.Username,\n\t\tPassword:              opts.Password,\n\t\tHeaders:               opts.Headers,\n\t\tNoCanonicalizeHeaders: opts.NoCanonicalizeHeaders,\n\t\tCookies:               opts.Cookies,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/gobustervhost/gobustervhost.go"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 2,
                  "endLine": 57,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t\tBasicHTTPOptions:      basicOptions,\n\t\tFollowRedirect:        opts.FollowRedirect,\n\t\tUsername:              opts.Username,\n\t\tPassword:              opts.Password,\n\t\tHeaders:               opts.Headers,\n\t\tNoCanonicalizeHeaders: opts.NoCanonicalizeHeaders,\n\t\tCookies:               opts.Cookies,\n",
                    "rendered": {
                      "text": "\t\tBasicHTTPOptions:      basicOptions,\n\t\tFollowRedirect:        opts.FollowRedirect,\n\t\tUsername:              opts.Username,\n\t\tPassword:              opts.Password,\n\t\tHeaders:               opts.Headers,\n\t\tNoCanonicalizeHeaders: opts.NoCanonicalizeHeaders,\n\t\tCookies:               opts.Cookies,\n",
                      "markdown": "`\t\tBasicHTTPOptions:      basicOptions,\n\t\tFollowRedirect:        opts.FollowRedirect,\n\t\tUsername:              opts.Username,\n\t\tPassword:              opts.Password,\n\t\tHeaders:               opts.Headers,\n\t\tNoCanonicalizeHeaders: opts.NoCanonicalizeHeaders,\n\t\tCookies:               opts.Cookies,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/gobustervhost/gobustervhost.go"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 51,
                  "endLine": 139,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\t\t\t// otherwise the timeout error is raised\n\t\t\tif netErr, ok := err.(net.Error); ok && netErr.Timeout() && i != tries {\n\t\t\t\tcontinue\n\t\t\t} else if strings.Contains(err.Error(), \"invalid control character in URL\") {\n\t\t\t\t// put error in error chan so it's printed out and ignore it\n\t\t\t\t// so gobuster will not quit\n\t\t\t\tprogress.ErrorChan <- err\n",
                    "rendered": {
                      "text": "\t\t\t// otherwise the timeout error is raised\n\t\t\tif netErr, ok := err.(net.Error); ok && netErr.Timeout() && i != tries {\n\t\t\t\tcontinue\n\t\t\t} else if strings.Contains(err.Error(), \"invalid control character in URL\") {\n\t\t\t\t// put error in error chan so it's printed out and ignore it\n\t\t\t\t// so gobuster will not quit\n\t\t\t\tprogress.ErrorChan <- err\n",
                      "markdown": "`\t\t\t// otherwise the timeout error is raised\n\t\t\tif netErr, ok := err.(net.Error); ok && netErr.Timeout() && i != tries {\n\t\t\t\tcontinue\n\t\t\t} else if strings.Contains(err.Error(), \"invalid control character in URL\") {\n\t\t\t\t// put error in error chan so it's printed out and ignore it\n\t\t\t\t// so gobuster will not quit\n\t\t\t\tprogress.ErrorChan <- err\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/gobustervhost/gobustervhost.go"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 19,
                  "endLine": 136,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\t\tstatusCode, size, header, body, err = v.http.Request(ctx, v.options.URL, libgobuster.RequestOptions{Host: subdomain, ReturnBody: true})\n\t\tif err != nil {\n\t\t\t// check if it's a timeout and if we should try again and try again\n\t\t\t// otherwise the timeout error is raised\n\t\t\tif netErr, ok := err.(net.Error); ok && netErr.Timeout() && i != tries {\n\t\t\t\tcontinue\n\t\t\t} else if strings.Contains(err.Error(), \"invalid control character in URL\") {\n",
                    "rendered": {
                      "text": "\t\tstatusCode, size, header, body, err = v.http.Request(ctx, v.options.URL, libgobuster.RequestOptions{Host: subdomain, ReturnBody: true})\n\t\tif err != nil {\n\t\t\t// check if it's a timeout and if we should try again and try again\n\t\t\t// otherwise the timeout error is raised\n\t\t\tif netErr, ok := err.(net.Error); ok && netErr.Timeout() && i != tries {\n\t\t\t\tcontinue\n\t\t\t} else if strings.Contains(err.Error(), \"invalid control character in URL\") {\n",
                      "markdown": "`\t\tstatusCode, size, header, body, err = v.http.Request(ctx, v.options.URL, libgobuster.RequestOptions{Host: subdomain, ReturnBody: true})\n\t\tif err != nil {\n\t\t\t// check if it's a timeout and if we should try again and try again\n\t\t\t// otherwise the timeout error is raised\n\t\t\tif netErr, ok := err.(net.Error); ok && netErr.Timeout() && i != tries {\n\t\t\t\tcontinue\n\t\t\t} else if strings.Contains(err.Error(), \"invalid control character in URL\") {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/gobustervhost/gobustervhost.go"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 21,
                  "endLine": 135,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\tvar err error\n\t\tstatusCode, size, header, body, err = v.http.Request(ctx, v.options.URL, libgobuster.RequestOptions{Host: subdomain, ReturnBody: true})\n\t\tif err != nil {\n\t\t\t// check if it's a timeout and if we should try again and try again\n\t\t\t// otherwise the timeout error is raised\n\t\t\tif netErr, ok := err.(net.Error); ok && netErr.Timeout() && i != tries {\n\t\t\t\tcontinue\n",
                    "rendered": {
                      "text": "\t\tvar err error\n\t\tstatusCode, size, header, body, err = v.http.Request(ctx, v.options.URL, libgobuster.RequestOptions{Host: subdomain, ReturnBody: true})\n\t\tif err != nil {\n\t\t\t// check if it's a timeout and if we should try again and try again\n\t\t\t// otherwise the timeout error is raised\n\t\t\tif netErr, ok := err.(net.Error); ok && netErr.Timeout() && i != tries {\n\t\t\t\tcontinue\n",
                      "markdown": "`\t\tvar err error\n\t\tstatusCode, size, header, body, err = v.http.Request(ctx, v.options.URL, libgobuster.RequestOptions{Host: subdomain, ReturnBody: true})\n\t\tif err != nil {\n\t\t\t// check if it's a timeout and if we should try again and try again\n\t\t\t// otherwise the timeout error is raised\n\t\t\tif netErr, ok := err.(net.Error); ok && netErr.Timeout() && i != tries {\n\t\t\t\tcontinue\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/cli/cmd/vhost.go"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 32,
                  "endLine": 47,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\tif err != nil {\n\t\treturn nil, nil, err\n\t}\n\tpluginOpts.Password = httpOpts.Password\n\tpluginOpts.URL = httpOpts.URL\n\tpluginOpts.UserAgent = httpOpts.UserAgent\n\tpluginOpts.Username = httpOpts.Username\n",
                    "rendered": {
                      "text": "\tif err != nil {\n\t\treturn nil, nil, err\n\t}\n\tpluginOpts.Password = httpOpts.Password\n\tpluginOpts.URL = httpOpts.URL\n\tpluginOpts.UserAgent = httpOpts.UserAgent\n\tpluginOpts.Username = httpOpts.Username\n",
                      "markdown": "`\tif err != nil {\n\t\treturn nil, nil, err\n\t}\n\tpluginOpts.Password = httpOpts.Password\n\tpluginOpts.URL = httpOpts.URL\n\tpluginOpts.UserAgent = httpOpts.UserAgent\n\tpluginOpts.Username = httpOpts.Username\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/cli/cmd/vhost.go"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 12,
                  "endLine": 47,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\tif err != nil {\n\t\treturn nil, nil, err\n\t}\n\tpluginOpts.Password = httpOpts.Password\n\tpluginOpts.URL = httpOpts.URL\n\tpluginOpts.UserAgent = httpOpts.UserAgent\n\tpluginOpts.Username = httpOpts.Username\n",
                    "rendered": {
                      "text": "\tif err != nil {\n\t\treturn nil, nil, err\n\t}\n\tpluginOpts.Password = httpOpts.Password\n\tpluginOpts.URL = httpOpts.URL\n\tpluginOpts.UserAgent = httpOpts.UserAgent\n\tpluginOpts.Username = httpOpts.Username\n",
                      "markdown": "`\tif err != nil {\n\t\treturn nil, nil, err\n\t}\n\tpluginOpts.Password = httpOpts.Password\n\tpluginOpts.URL = httpOpts.URL\n\tpluginOpts.UserAgent = httpOpts.UserAgent\n\tpluginOpts.Username = httpOpts.Username\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/cli/cmd/vhost.go"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 147,
                  "endLine": 98,
                  "endColumn": 155,
                  "snippet": {
                    "text": "ude the following content lengths (completely ignores the status). You can separate multiple lengths by comma and it also supports ranges like 203-206\")\n\tcmdVhost.Flags().String(\"domain\", \"\", \"the domain to append when using an IP address as URL. If left empty and you specify a domain based URL the hostname from the URL is extracted\")\n\n\tcmdVhost.PersistentPreRun = func(cmd *cobra.Command, args []string) {\n\t\tconfigureGlobalOptions()\n\t}\n\n\trootCmd.AddCommand(cmdVhost)\n}\n",
                    "rendered": {
                      "text": "ude the following content lengths (completely ignores the status). You can separate multiple lengths by comma and it also supports ranges like 203-206\")\n\tcmdVhost.Flags().String(\"domain\", \"\", \"the domain to append when using an IP address as URL. If left empty and you specify a domain based URL the hostname from the URL is extracted\")\n\n\tcmdVhost.PersistentPreRun = func(cmd *cobra.Command, args []string) {\n\t\tconfigureGlobalOptions()\n\t}\n\n\trootCmd.AddCommand(cmdVhost)\n}\n",
                      "markdown": "`ude the following content lengths (completely ignores the status). You can separate multiple lengths by comma and it also supports ranges like 203-206\")\n\tcmdVhost.Flags().String(\"domain\", \"\", \"the domain to append when using an IP address as URL. If left empty and you specify a domain based URL the hostname from the URL is extracted\")\n\n\tcmdVhost.PersistentPreRun = func(cmd *cobra.Command, args []string) {\n\t\tconfigureGlobalOptions()\n\t}\n\n\trootCmd.AddCommand(cmdVhost)\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/cli/cmd/vhost.go"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 7,
                  "endLine": 2,
                  "snippet": {
                    "text": "package cmd\n\nimport (\n\t\"fmt\"\n\t\"log\"\n",
                    "rendered": {
                      "text": "package cmd\n\nimport (\n\t\"fmt\"\n\t\"log\"\n",
                      "markdown": "`package cmd\n\nimport (\n\t\"fmt\"\n\t\"log\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/cli/cmd/vhost.go"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 74,
                  "endLine": 98,
                  "endColumn": 78,
                  "snippet": {
                    "text": "d in the wordlist.\")\n\tcmdVhost.Flags().String(\"exclude-length\", \"\", \"exclude the following content lengths (completely ignores the status). You can separate multiple lengths by comma and it also supports ranges like 203-206\")\n\tcmdVhost.Flags().String(\"domain\", \"\", \"the domain to append when using an IP address as URL. If left empty and you specify a domain based URL the hostname from the URL is extracted\")\n\n\tcmdVhost.PersistentPreRun = func(cmd *cobra.Command, args []string) {\n\t\tconfigureGlobalOptions()\n\t}\n\n\trootCmd.AddCommand(cmdVhost)\n}\n",
                    "rendered": {
                      "text": "d in the wordlist.\")\n\tcmdVhost.Flags().String(\"exclude-length\", \"\", \"exclude the following content lengths (completely ignores the status). You can separate multiple lengths by comma and it also supports ranges like 203-206\")\n\tcmdVhost.Flags().String(\"domain\", \"\", \"the domain to append when using an IP address as URL. If left empty and you specify a domain based URL the hostname from the URL is extracted\")\n\n\tcmdVhost.PersistentPreRun = func(cmd *cobra.Command, args []string) {\n\t\tconfigureGlobalOptions()\n\t}\n\n\trootCmd.AddCommand(cmdVhost)\n}\n",
                      "markdown": "`d in the wordlist.\")\n\tcmdVhost.Flags().String(\"exclude-length\", \"\", \"exclude the following content lengths (completely ignores the status). You can separate multiple lengths by comma and it also supports ranges like 203-206\")\n\tcmdVhost.Flags().String(\"domain\", \"\", \"the domain to append when using an IP address as URL. If left empty and you specify a domain based URL the hostname from the URL is extracted\")\n\n\tcmdVhost.PersistentPreRun = func(cmd *cobra.Command, args []string) {\n\t\tconfigureGlobalOptions()\n\t}\n\n\trootCmd.AddCommand(cmdVhost)\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/cli/cmd/vhost.go"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 72,
                  "endLine": 90,
                  "endColumn": 76,
                  "snippet": {
                    "text": "func init() {\n\tcmdVhost = &cobra.Command{\n\t\tUse:   \"vhost\",\n\t\tShort: \"Uses VHOST enumeration mode (you most probably want to use the IP address as the URL parameter)\",\n\t\tRunE:  runVhost,\n\t}\n\tif err := addCommonHTTPOptions(cmdVhost); err != nil {\n",
                    "rendered": {
                      "text": "func init() {\n\tcmdVhost = &cobra.Command{\n\t\tUse:   \"vhost\",\n\t\tShort: \"Uses VHOST enumeration mode (you most probably want to use the IP address as the URL parameter)\",\n\t\tRunE:  runVhost,\n\t}\n\tif err := addCommonHTTPOptions(cmdVhost); err != nil {\n",
                      "markdown": "`func init() {\n\tcmdVhost = &cobra.Command{\n\t\tUse:   \"vhost\",\n\t\tShort: \"Uses VHOST enumeration mode (you most probably want to use the IP address as the URL parameter)\",\n\t\tRunE:  runVhost,\n\t}\n\tif err := addCommonHTTPOptions(cmdVhost); err != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.goreleaser.yaml"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 38,
                  "endLine": 2,
                  "endColumn": 42,
                  "snippet": {
                    "text": "# This is an example .goreleaser.yml file with some sensible defaults.\n# Make sure to check the documentation at https://goreleaser.com\nbefore:\n  hooks:\n    # You may remove this if you don't use go modules.\n",
                    "rendered": {
                      "text": "# This is an example .goreleaser.yml file with some sensible defaults.\n# Make sure to check the documentation at https://goreleaser.com\nbefore:\n  hooks:\n    # You may remove this if you don't use go modules.\n",
                      "markdown": "`# This is an example .goreleaser.yml file with some sensible defaults.\n# Make sure to check the documentation at https://goreleaser.com\nbefore:\n  hooks:\n    # You may remove this if you don't use go modules.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/gobusterdns/gobusterdns.go"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 74,
                  "endLine": 25,
                  "endColumn": 78,
                  "snippet": {
                    "text": "\n// Error is the implementation of the error interface\nfunc (e *ErrWildcard) Error() string {\n\treturn fmt.Sprintf(\"the DNS Server returned the same IP for every domain. IP address(es) returned: %s\", e.wildcardIps.Stringify())\n}\n\n// GobusterDNS is the main type to implement the interface\n",
                    "rendered": {
                      "text": "\n// Error is the implementation of the error interface\nfunc (e *ErrWildcard) Error() string {\n\treturn fmt.Sprintf(\"the DNS Server returned the same IP for every domain. IP address(es) returned: %s\", e.wildcardIps.Stringify())\n}\n\n// GobusterDNS is the main type to implement the interface\n",
                      "markdown": "`\n// Error is the implementation of the error interface\nfunc (e *ErrWildcard) Error() string {\n\treturn fmt.Sprintf(\"the DNS Server returned the same IP for every domain. IP address(es) returned: %s\", e.wildcardIps.Stringify())\n}\n\n// GobusterDNS is the main type to implement the interface\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/gobusterdns/gobusterdns.go"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 53,
                  "endLine": 25,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\n// Error is the implementation of the error interface\nfunc (e *ErrWildcard) Error() string {\n\treturn fmt.Sprintf(\"the DNS Server returned the same IP for every domain. IP address(es) returned: %s\", e.wildcardIps.Stringify())\n}\n\n// GobusterDNS is the main type to implement the interface\n",
                    "rendered": {
                      "text": "\n// Error is the implementation of the error interface\nfunc (e *ErrWildcard) Error() string {\n\treturn fmt.Sprintf(\"the DNS Server returned the same IP for every domain. IP address(es) returned: %s\", e.wildcardIps.Stringify())\n}\n\n// GobusterDNS is the main type to implement the interface\n",
                      "markdown": "`\n// Error is the implementation of the error interface\nfunc (e *ErrWildcard) Error() string {\n\treturn fmt.Sprintf(\"the DNS Server returned the same IP for every domain. IP address(es) returned: %s\", e.wildcardIps.Stringify())\n}\n\n// GobusterDNS is the main type to implement the interface\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/gobustertftp/result.go"
                },
                "region": {
                  "startLine": 11,
                  "endLine": 11,
                  "endColumn": 5,
                  "snippet": {
                    "text": ")\n\nvar (\n\tred   = color.New(color.FgRed).FprintfFunc()\n\tgreen = color.New(color.FgGreen).FprintfFunc()\n)\n\n",
                    "rendered": {
                      "text": ")\n\nvar (\n\tred   = color.New(color.FgRed).FprintfFunc()\n\tgreen = color.New(color.FgGreen).FprintfFunc()\n)\n\n",
                      "markdown": "`)\n\nvar (\n\tred   = color.New(color.FgRed).FprintfFunc()\n\tgreen = color.New(color.FgGreen).FprintfFunc()\n)\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/cli/cmd/tftp.go"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 7,
                  "endLine": 2,
                  "snippet": {
                    "text": "package cmd\n\nimport (\n\t\"fmt\"\n\t\"log\"\n",
                    "rendered": {
                      "text": "package cmd\n\nimport (\n\t\"fmt\"\n\t\"log\"\n",
                      "markdown": "`package cmd\n\nimport (\n\t\"fmt\"\n\t\"log\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/cli/cmd/tftp.go"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 55,
                  "endLine": 69,
                  "endColumn": 61,
                  "snippet": {
                    "text": "\t\tRunE:  runTFTP,\n\t}\n\n\tcmdTFTP.Flags().StringP(\"server\", \"s\", \"\", \"The target TFTP server\")\n\tcmdTFTP.Flags().DurationP(\"timeout\", \"\", time.Second, \"TFTP timeout\")\n\tif err := cmdTFTP.MarkFlagRequired(\"server\"); err != nil {\n\t\tlog.Fatalf(\"error on marking flag as required: %v\", err)\n",
                    "rendered": {
                      "text": "\t\tRunE:  runTFTP,\n\t}\n\n\tcmdTFTP.Flags().StringP(\"server\", \"s\", \"\", \"The target TFTP server\")\n\tcmdTFTP.Flags().DurationP(\"timeout\", \"\", time.Second, \"TFTP timeout\")\n\tif err := cmdTFTP.MarkFlagRequired(\"server\"); err != nil {\n\t\tlog.Fatalf(\"error on marking flag as required: %v\", err)\n",
                      "markdown": "`\t\tRunE:  runTFTP,\n\t}\n\n\tcmdTFTP.Flags().StringP(\"server\", \"s\", \"\", \"The target TFTP server\")\n\tcmdTFTP.Flags().DurationP(\"timeout\", \"\", time.Second, \"TFTP timeout\")\n\tif err := cmdTFTP.MarkFlagRequired(\"server\"); err != nil {\n\t\tlog.Fatalf(\"error on marking flag as required: %v\", err)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/cli/cmd/tftp.go"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 14,
                  "endLine": 65,
                  "endColumn": 20,
                  "snippet": {
                    "text": "func init() {\n\tcmdTFTP = &cobra.Command{\n\t\tUse:   \"tftp\",\n\t\tShort: \"Uses TFTP enumeration mode\",\n\t\tRunE:  runTFTP,\n\t}\n\n",
                    "rendered": {
                      "text": "func init() {\n\tcmdTFTP = &cobra.Command{\n\t\tUse:   \"tftp\",\n\t\tShort: \"Uses TFTP enumeration mode\",\n\t\tRunE:  runTFTP,\n\t}\n\n",
                      "markdown": "`func init() {\n\tcmdTFTP = &cobra.Command{\n\t\tUse:   \"tftp\",\n\t\tShort: \"Uses TFTP enumeration mode\",\n\t\tRunE:  runTFTP,\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/Dockerfile"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 6,
                  "endLine": 16,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\nRUN mkdir -p /app \\\n    && adduser -D gobuster \\\n    && chown -R gobuster:gobuster /app\n\nUSER gobuster\nWORKDIR /app\n",
                    "rendered": {
                      "text": "\nRUN mkdir -p /app \\\n    && adduser -D gobuster \\\n    && chown -R gobuster:gobuster /app\n\nUSER gobuster\nWORKDIR /app\n",
                      "markdown": "`\nRUN mkdir -p /app \\\n    && adduser -D gobuster \\\n    && chown -R gobuster:gobuster /app\n\nUSER gobuster\nWORKDIR /app\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/Dockerfile"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 12,
                  "endLine": 3,
                  "endColumn": 4,
                  "snippet": {
                    "text": "FROM golang:latest AS build-env\nWORKDIR /src\nENV CGO_ENABLED=0\nCOPY go.mod /src/\nRUN go mod download\nCOPY . .\n",
                    "rendered": {
                      "text": "FROM golang:latest AS build-env\nWORKDIR /src\nENV CGO_ENABLED=0\nCOPY go.mod /src/\nRUN go mod download\nCOPY . .\n",
                      "markdown": "`FROM golang:latest AS build-env\nWORKDIR /src\nENV CGO_ENABLED=0\nCOPY go.mod /src/\nRUN go mod download\nCOPY . .\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/libgobuster/http.go"
                },
                "region": {
                  "startLine": 195,
                  "startColumn": 43,
                  "endLine": 195,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\tif opts.UpdatedBasicAuthUsername != \"\" {\n\t\treq.SetBasicAuth(opts.UpdatedBasicAuthUsername, opts.UpdatedBasicAuthPassword)\n\t} else if client.username != \"\" {\n\t\treq.SetBasicAuth(client.username, client.password)\n\t}\n\n\tresp, err := client.client.Do(req)\n",
                    "rendered": {
                      "text": "\tif opts.UpdatedBasicAuthUsername != \"\" {\n\t\treq.SetBasicAuth(opts.UpdatedBasicAuthUsername, opts.UpdatedBasicAuthPassword)\n\t} else if client.username != \"\" {\n\t\treq.SetBasicAuth(client.username, client.password)\n\t}\n\n\tresp, err := client.client.Do(req)\n",
                      "markdown": "`\tif opts.UpdatedBasicAuthUsername != \"\" {\n\t\treq.SetBasicAuth(opts.UpdatedBasicAuthUsername, opts.UpdatedBasicAuthPassword)\n\t} else if client.username != \"\" {\n\t\treq.SetBasicAuth(client.username, client.password)\n\t}\n\n\tresp, err := client.client.Do(req)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/libgobuster/http.go"
                },
                "region": {
                  "startLine": 193,
                  "startColumn": 71,
                  "endLine": 193,
                  "endColumn": 79,
                  "snippet": {
                    "text": "\t}\n\n\tif opts.UpdatedBasicAuthUsername != \"\" {\n\t\treq.SetBasicAuth(opts.UpdatedBasicAuthUsername, opts.UpdatedBasicAuthPassword)\n\t} else if client.username != \"\" {\n\t\treq.SetBasicAuth(client.username, client.password)\n\t}\n",
                    "rendered": {
                      "text": "\t}\n\n\tif opts.UpdatedBasicAuthUsername != \"\" {\n\t\treq.SetBasicAuth(opts.UpdatedBasicAuthUsername, opts.UpdatedBasicAuthPassword)\n\t} else if client.username != \"\" {\n\t\treq.SetBasicAuth(client.username, client.password)\n\t}\n",
                      "markdown": "`\t}\n\n\tif opts.UpdatedBasicAuthUsername != \"\" {\n\t\treq.SetBasicAuth(opts.UpdatedBasicAuthUsername, opts.UpdatedBasicAuthPassword)\n\t} else if client.username != \"\" {\n\t\treq.SetBasicAuth(client.username, client.password)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/libgobuster/http.go"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 23,
                  "endLine": 90,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\t\t\tTLSClientConfig:     &tlsConfig,\n\t\t}}\n\tclient.username = opt.Username\n\tclient.password = opt.Password\n\tclient.userAgent = opt.UserAgent\n\tclient.defaultUserAgent = DefaultUserAgent()\n\tclient.headers = opt.Headers\n",
                    "rendered": {
                      "text": "\t\t\tTLSClientConfig:     &tlsConfig,\n\t\t}}\n\tclient.username = opt.Username\n\tclient.password = opt.Password\n\tclient.userAgent = opt.UserAgent\n\tclient.defaultUserAgent = DefaultUserAgent()\n\tclient.headers = opt.Headers\n",
                      "markdown": "`\t\t\tTLSClientConfig:     &tlsConfig,\n\t\t}}\n\tclient.username = opt.Username\n\tclient.password = opt.Password\n\tclient.userAgent = opt.UserAgent\n\tclient.defaultUserAgent = DefaultUserAgent()\n\tclient.headers = opt.Headers\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/libgobuster/http.go"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 8,
                  "endLine": 90,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\t\t\tTLSClientConfig:     &tlsConfig,\n\t\t}}\n\tclient.username = opt.Username\n\tclient.password = opt.Password\n\tclient.userAgent = opt.UserAgent\n\tclient.defaultUserAgent = DefaultUserAgent()\n\tclient.headers = opt.Headers\n",
                    "rendered": {
                      "text": "\t\t\tTLSClientConfig:     &tlsConfig,\n\t\t}}\n\tclient.username = opt.Username\n\tclient.password = opt.Password\n\tclient.userAgent = opt.UserAgent\n\tclient.defaultUserAgent = DefaultUserAgent()\n\tclient.headers = opt.Headers\n",
                      "markdown": "`\t\t\tTLSClientConfig:     &tlsConfig,\n\t\t}}\n\tclient.username = opt.Username\n\tclient.password = opt.Password\n\tclient.userAgent = opt.UserAgent\n\tclient.defaultUserAgent = DefaultUserAgent()\n\tclient.headers = opt.Headers\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/libgobuster/http.go"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 17,
                  "endLine": 41,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\tReturnBody               bool\n\tModifiedHeaders          []HTTPHeader\n\tUpdatedBasicAuthUsername string\n\tUpdatedBasicAuthPassword string\n}\n\n// NewHTTPClient returns a new HTTPClient\n",
                    "rendered": {
                      "text": "\tReturnBody               bool\n\tModifiedHeaders          []HTTPHeader\n\tUpdatedBasicAuthUsername string\n\tUpdatedBasicAuthPassword string\n}\n\n// NewHTTPClient returns a new HTTPClient\n",
                      "markdown": "`\tReturnBody               bool\n\tModifiedHeaders          []HTTPHeader\n\tUpdatedBasicAuthUsername string\n\tUpdatedBasicAuthPassword string\n}\n\n// NewHTTPClient returns a new HTTPClient\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/libgobuster/http.go"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 1,
                  "endLine": 26,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tuserAgent             string\n\tdefaultUserAgent      string\n\tusername              string\n\tpassword              string\n\theaders               []HTTPHeader\n\tnoCanonicalizeHeaders bool\n\tcookies               string\n",
                    "rendered": {
                      "text": "\tuserAgent             string\n\tdefaultUserAgent      string\n\tusername              string\n\tpassword              string\n\theaders               []HTTPHeader\n\tnoCanonicalizeHeaders bool\n\tcookies               string\n",
                      "markdown": "`\tuserAgent             string\n\tdefaultUserAgent      string\n\tusername              string\n\tpassword              string\n\theaders               []HTTPHeader\n\tnoCanonicalizeHeaders bool\n\tcookies               string\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/libgobuster/useragents.go"
                },
                "region": {
                  "startLine": 1964,
                  "startColumn": 78,
                  "endLine": 1964,
                  "endColumn": 83,
                  "snippet": {
                    "text": " Gecko/20050221 Firefox/1.0\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.5) Gecko/20050210 Firefox/1.0 (Debian package 1.0+dfsg.1-6)\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.5) Gecko/20041218 Firefox/1.0\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.5) Gecko/20041215 Firefox/1.0 Red Hat/1.0-12.EL4\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.5) Gecko/20041204 Firefox/1.0 (Debian package 1.0.x.2-1)\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.5) Gecko/20041128 Firefox/1.0 (Debian package 1.0-4)\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.5) Gecko/20041117 Fire",
                    "rendered": {
                      "text": " Gecko/20050221 Firefox/1.0\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.5) Gecko/20050210 Firefox/1.0 (Debian package 1.0+dfsg.1-6)\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.5) Gecko/20041218 Firefox/1.0\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.5) Gecko/20041215 Firefox/1.0 Red Hat/1.0-12.EL4\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.5) Gecko/20041204 Firefox/1.0 (Debian package 1.0.x.2-1)\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.5) Gecko/20041128 Firefox/1.0 (Debian package 1.0-4)\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.5) Gecko/20041117 Fire",
                      "markdown": "` Gecko/20050221 Firefox/1.0\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.5) Gecko/20050210 Firefox/1.0 (Debian package 1.0+dfsg.1-6)\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.5) Gecko/20041218 Firefox/1.0\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.5) Gecko/20041215 Firefox/1.0 Red Hat/1.0-12.EL4\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.5) Gecko/20041204 Firefox/1.0 (Debian package 1.0.x.2-1)\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.5) Gecko/20041128 Firefox/1.0 (Debian package 1.0-4)\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.5) Gecko/20041117 Fire`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/libgobuster/useragents.go"
                },
                "region": {
                  "startLine": 1862,
                  "startColumn": 67,
                  "endLine": 1862,
                  "endColumn": 72,
                  "snippet": {
                    "text": "1.0.6)\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.10) Gecko/20050720 Fedora/1.0.6-1.1.fc4.k12ltsp.4.4.0 Firefox/1.0.6\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.10) Gecko/20050720 Fedora/1.0.6-1.1.fc3 Firefox/1.0.6\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.10) Gecko/20050719 Red Hat/1.0.6-1.4.1 Firefox/1.0.6\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.10) Gecko/20050716 Firefox/1.0.6\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.10) Gecko/20050715 Firefox/1.0.6 SUSE/1.0.6-16\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.9) Gecko/20050711 Firefox/1.0.5\",\n\t\"M",
                    "rendered": {
                      "text": "1.0.6)\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.10) Gecko/20050720 Fedora/1.0.6-1.1.fc4.k12ltsp.4.4.0 Firefox/1.0.6\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.10) Gecko/20050720 Fedora/1.0.6-1.1.fc3 Firefox/1.0.6\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.10) Gecko/20050719 Red Hat/1.0.6-1.4.1 Firefox/1.0.6\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.10) Gecko/20050716 Firefox/1.0.6\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.10) Gecko/20050715 Firefox/1.0.6 SUSE/1.0.6-16\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.9) Gecko/20050711 Firefox/1.0.5\",\n\t\"M",
                      "markdown": "`1.0.6)\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.10) Gecko/20050720 Fedora/1.0.6-1.1.fc4.k12ltsp.4.4.0 Firefox/1.0.6\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.10) Gecko/20050720 Fedora/1.0.6-1.1.fc3 Firefox/1.0.6\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.10) Gecko/20050719 Red Hat/1.0.6-1.4.1 Firefox/1.0.6\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.10) Gecko/20050716 Firefox/1.0.6\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.10) Gecko/20050715 Firefox/1.0.6 SUSE/1.0.6-16\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.9) Gecko/20050711 Firefox/1.0.5\",\n\t\"M`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/libgobuster/useragents.go"
                },
                "region": {
                  "startLine": 1814,
                  "startColumn": 67,
                  "endLine": 1814,
                  "endColumn": 72,
                  "snippet": {
                    "text": "S; rv:1.8b4) Gecko/20050908 Firefox/1.4\",\n\t\"Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.8b4) Gecko/20050908 Firefox/1.4\",\n\t\"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.21) Gecko/20090403 Firefox/1.1.16\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.13) Gecko/20060413 Red Hat/1.0.8-1.4.1 Firefox/1.0.8\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.13) Gecko/20060411 Firefox/1.0.8 SUSE/1.0.8-0.2\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.10) Gecko/20060410 Firefox/1.0.8 Mandriva/1.0.6-16.5.20060mdk (2006.0)\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-GB; rv:1.",
                    "rendered": {
                      "text": "S; rv:1.8b4) Gecko/20050908 Firefox/1.4\",\n\t\"Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.8b4) Gecko/20050908 Firefox/1.4\",\n\t\"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.21) Gecko/20090403 Firefox/1.1.16\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.13) Gecko/20060413 Red Hat/1.0.8-1.4.1 Firefox/1.0.8\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.13) Gecko/20060411 Firefox/1.0.8 SUSE/1.0.8-0.2\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.10) Gecko/20060410 Firefox/1.0.8 Mandriva/1.0.6-16.5.20060mdk (2006.0)\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-GB; rv:1.",
                      "markdown": "`S; rv:1.8b4) Gecko/20050908 Firefox/1.4\",\n\t\"Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.8b4) Gecko/20050908 Firefox/1.4\",\n\t\"Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.21) Gecko/20090403 Firefox/1.1.16\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.13) Gecko/20060413 Red Hat/1.0.8-1.4.1 Firefox/1.0.8\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.13) Gecko/20060411 Firefox/1.0.8 SUSE/1.0.8-0.2\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.10) Gecko/20060410 Firefox/1.0.8 Mandriva/1.0.6-16.5.20060mdk (2006.0)\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-GB; rv:1.`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/libgobuster/useragents.go"
                },
                "region": {
                  "startLine": 1771,
                  "startColumn": 68,
                  "endLine": 1771,
                  "endColumn": 73,
                  "snippet": {
                    "text": "Linux i686; it; rv:1.8.0.1) Gecko/20060124 Firefox/1.5.0.1\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; fr; rv:1.8.0.1) Gecko/20060124 Firefox/1.5.0.1\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; es-ES; rv:1.8.0.1) Gecko/20060124 Firefox/1.5.0.1\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.7) Gecko/20060911 Red Hat/1.5.0.7-0.1.el4 Firefox/1.5.0.1 pango-text\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.1) Gecko/20060404 Firefox/1.5.0.1\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.1) Gecko/20060324 Ubuntu/dapper Firefox/1.5.0.1\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.1) Gecko/200",
                    "rendered": {
                      "text": "Linux i686; it; rv:1.8.0.1) Gecko/20060124 Firefox/1.5.0.1\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; fr; rv:1.8.0.1) Gecko/20060124 Firefox/1.5.0.1\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; es-ES; rv:1.8.0.1) Gecko/20060124 Firefox/1.5.0.1\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.7) Gecko/20060911 Red Hat/1.5.0.7-0.1.el4 Firefox/1.5.0.1 pango-text\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.1) Gecko/20060404 Firefox/1.5.0.1\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.1) Gecko/20060324 Ubuntu/dapper Firefox/1.5.0.1\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.1) Gecko/200",
                      "markdown": "`Linux i686; it; rv:1.8.0.1) Gecko/20060124 Firefox/1.5.0.1\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; fr; rv:1.8.0.1) Gecko/20060124 Firefox/1.5.0.1\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; es-ES; rv:1.8.0.1) Gecko/20060124 Firefox/1.5.0.1\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.7) Gecko/20060911 Red Hat/1.5.0.7-0.1.el4 Firefox/1.5.0.1 pango-text\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.1) Gecko/20060404 Firefox/1.5.0.1\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.1) Gecko/20060324 Ubuntu/dapper Firefox/1.5.0.1\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.1) Gecko/200`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/libgobuster/useragents.go"
                },
                "region": {
                  "startLine": 1747,
                  "startColumn": 69,
                  "endLine": 1747,
                  "endColumn": 74,
                  "snippet": {
                    "text": ".0 (X11; U; Linux i686; en-US; rv:1.8.0.10) Gecko/20070226 Fedora/1.5.0.10-1.fc6 Firefox/1.5.0.10 pango-text\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.10) Gecko/20070223 CentOS/1.5.0.10-0.1.el4.centos Firefox/1.5.0.10\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.10) Gecko/20070221 Red Hat/1.5.0.10-0.1.el4 Firefox/1.5.0.10\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.10) Gecko/20070216 Firefox/1.5.0.10\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.10) Gecko/20060911 SUSE/1.5.0.10-0.2 Firefox/1.5.0.10\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-CA; rv:1.8.0.10) Gecko/200",
                    "rendered": {
                      "text": ".0 (X11; U; Linux i686; en-US; rv:1.8.0.10) Gecko/20070226 Fedora/1.5.0.10-1.fc6 Firefox/1.5.0.10 pango-text\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.10) Gecko/20070223 CentOS/1.5.0.10-0.1.el4.centos Firefox/1.5.0.10\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.10) Gecko/20070221 Red Hat/1.5.0.10-0.1.el4 Firefox/1.5.0.10\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.10) Gecko/20070216 Firefox/1.5.0.10\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.10) Gecko/20060911 SUSE/1.5.0.10-0.2 Firefox/1.5.0.10\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-CA; rv:1.8.0.10) Gecko/200",
                      "markdown": "`.0 (X11; U; Linux i686; en-US; rv:1.8.0.10) Gecko/20070226 Fedora/1.5.0.10-1.fc6 Firefox/1.5.0.10 pango-text\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.10) Gecko/20070223 CentOS/1.5.0.10-0.1.el4.centos Firefox/1.5.0.10\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.10) Gecko/20070221 Red Hat/1.5.0.10-0.1.el4 Firefox/1.5.0.10\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.10) Gecko/20070216 Firefox/1.5.0.10\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.10) Gecko/20060911 SUSE/1.5.0.10-0.2 Firefox/1.5.0.10\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-CA; rv:1.8.0.10) Gecko/200`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/libgobuster/useragents.go"
                },
                "region": {
                  "startLine": 1744,
                  "startColumn": 69,
                  "endLine": 1744,
                  "endColumn": 74,
                  "snippet": {
                    "text": "\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.10) Gecko/20070409 CentOS/1.5.0.10-2.el5.centos Firefox/1.5.0.10\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.10) Gecko/20070302 Ubuntu/dapper-security Firefox/1.5.0.10\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.10) Gecko/20070226 Red Hat/1.5.0.10-0.1.el4 Firefox/1.5.0.10\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.10) Gecko/20070226 Fedora/1.5.0.10-1.fc6 Firefox/1.5.0.10 pango-text\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.10) Gecko/20070223 CentOS/1.5.0.10-0.1.el4.centos Firefox/1.5.0.10\",\n\t\"Mozilla/5.0 (X11",
                    "rendered": {
                      "text": "\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.10) Gecko/20070409 CentOS/1.5.0.10-2.el5.centos Firefox/1.5.0.10\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.10) Gecko/20070302 Ubuntu/dapper-security Firefox/1.5.0.10\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.10) Gecko/20070226 Red Hat/1.5.0.10-0.1.el4 Firefox/1.5.0.10\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.10) Gecko/20070226 Fedora/1.5.0.10-1.fc6 Firefox/1.5.0.10 pango-text\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.10) Gecko/20070223 CentOS/1.5.0.10-0.1.el4.centos Firefox/1.5.0.10\",\n\t\"Mozilla/5.0 (X11",
                      "markdown": "`\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.10) Gecko/20070409 CentOS/1.5.0.10-2.el5.centos Firefox/1.5.0.10\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.10) Gecko/20070302 Ubuntu/dapper-security Firefox/1.5.0.10\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.10) Gecko/20070226 Red Hat/1.5.0.10-0.1.el4 Firefox/1.5.0.10\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.10) Gecko/20070226 Fedora/1.5.0.10-1.fc6 Firefox/1.5.0.10 pango-text\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.10) Gecko/20070223 CentOS/1.5.0.10-0.1.el4.centos Firefox/1.5.0.10\",\n\t\"Mozilla/5.0 (X11`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/libgobuster/useragents.go"
                },
                "region": {
                  "startLine": 1702,
                  "startColumn": 69,
                  "endLine": 1702,
                  "endColumn": 74,
                  "snippet": {
                    "text": "\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.12) Gecko/20070719 CentOS/1.5.0.12-0.3.el4.centos Firefox/1.5.0.12\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.12) Gecko/20070530 Fedora/1.5.0.12-1.fc6 Firefox/1.5.0.12\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.12) Gecko/20070529 Red Hat/1.5.0.12-0.1.el4 Firefox/1.5.0.12\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-GB; rv:1.8.0.12) Gecko/20070718 Fedora/1.5.0.12-4.fc6 Firefox/1.5.0.12\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; de; rv:1.8.0.12) Gecko/20070731 Ubuntu/dapper-security Firefox/1.5.0.12\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; de; r",
                    "rendered": {
                      "text": "\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.12) Gecko/20070719 CentOS/1.5.0.12-0.3.el4.centos Firefox/1.5.0.12\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.12) Gecko/20070530 Fedora/1.5.0.12-1.fc6 Firefox/1.5.0.12\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.12) Gecko/20070529 Red Hat/1.5.0.12-0.1.el4 Firefox/1.5.0.12\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-GB; rv:1.8.0.12) Gecko/20070718 Fedora/1.5.0.12-4.fc6 Firefox/1.5.0.12\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; de; rv:1.8.0.12) Gecko/20070731 Ubuntu/dapper-security Firefox/1.5.0.12\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; de; r",
                      "markdown": "`\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.12) Gecko/20070719 CentOS/1.5.0.12-0.3.el4.centos Firefox/1.5.0.12\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.12) Gecko/20070530 Fedora/1.5.0.12-1.fc6 Firefox/1.5.0.12\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.12) Gecko/20070529 Red Hat/1.5.0.12-0.1.el4 Firefox/1.5.0.12\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-GB; rv:1.8.0.12) Gecko/20070718 Fedora/1.5.0.12-4.fc6 Firefox/1.5.0.12\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; de; rv:1.8.0.12) Gecko/20070731 Ubuntu/dapper-security Firefox/1.5.0.12\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; de; r`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/libgobuster/useragents.go"
                },
                "region": {
                  "startLine": 1695,
                  "startColumn": 71,
                  "endLine": 1695,
                  "endColumn": 76,
                  "snippet": {
                    "text": "Linux i686; en-US; rv:1.8.0.13pre) Gecko/20080207 Ubuntu/dapper-security Firefox/1.5.0.13pre\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.8.0.12) Gecko/20080419 CentOS/1.5.0.12-0.15.el4.centos Firefox/1.5.0.12 pango-text\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.8.0.12) Gecko/20070718 Red Hat/1.5.0.12-3.el5 Firefox/1.5.0.12\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.8.0.12) Gecko/20070530 Fedora/1.5.0.12-1.fc6 Firefox/1.5.0.12\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; pl; rv:1.8.0.12) Gecko/20070508 Firefox/1.5.0.12\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.8.0.12) Gecko/20070",
                    "rendered": {
                      "text": "Linux i686; en-US; rv:1.8.0.13pre) Gecko/20080207 Ubuntu/dapper-security Firefox/1.5.0.13pre\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.8.0.12) Gecko/20080419 CentOS/1.5.0.12-0.15.el4.centos Firefox/1.5.0.12 pango-text\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.8.0.12) Gecko/20070718 Red Hat/1.5.0.12-3.el5 Firefox/1.5.0.12\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.8.0.12) Gecko/20070530 Fedora/1.5.0.12-1.fc6 Firefox/1.5.0.12\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; pl; rv:1.8.0.12) Gecko/20070508 Firefox/1.5.0.12\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.8.0.12) Gecko/20070",
                      "markdown": "`Linux i686; en-US; rv:1.8.0.13pre) Gecko/20080207 Ubuntu/dapper-security Firefox/1.5.0.13pre\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.8.0.12) Gecko/20080419 CentOS/1.5.0.12-0.15.el4.centos Firefox/1.5.0.12 pango-text\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.8.0.12) Gecko/20070718 Red Hat/1.5.0.12-3.el5 Firefox/1.5.0.12\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.8.0.12) Gecko/20070530 Fedora/1.5.0.12-1.fc6 Firefox/1.5.0.12\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; pl; rv:1.8.0.12) Gecko/20070508 Firefox/1.5.0.12\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.8.0.12) Gecko/20070`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/libgobuster/useragents.go"
                },
                "region": {
                  "startLine": 1630,
                  "startColumn": 77,
                  "endLine": 1630,
                  "endColumn": 82,
                  "snippet": {
                    "text": "0.5\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-GB; rv:1.8.0.5) Gecko/20060731 Ubuntu/dapper-security Firefox/1.5.0.5\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; de; rv:1.8.0.5) Gecko/20060731 Ubuntu/dapper-security Firefox/1.5.0.5\",\n\t\"Mozilla/5.0 (X11; U; Linux i686 (x86_64); en-US; rv:1.8.0.5) Gecko/20060726 Red Hat/1.5.0.5-0.el4.1 Firefox/1.5.0.5 pango-text\",\n\t\"Mozilla/5.0 (X11; U; OpenBSD i386; en-US; rv:1.8.0.4) Gecko/20060628 Firefox/1.5.0.4\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.8.0.4) Gecko/20060608 Ubuntu/dapper-security Firefox/1.5.0.4\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; ru; rv:1.8.0.4)",
                    "rendered": {
                      "text": "0.5\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-GB; rv:1.8.0.5) Gecko/20060731 Ubuntu/dapper-security Firefox/1.5.0.5\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; de; rv:1.8.0.5) Gecko/20060731 Ubuntu/dapper-security Firefox/1.5.0.5\",\n\t\"Mozilla/5.0 (X11; U; Linux i686 (x86_64); en-US; rv:1.8.0.5) Gecko/20060726 Red Hat/1.5.0.5-0.el4.1 Firefox/1.5.0.5 pango-text\",\n\t\"Mozilla/5.0 (X11; U; OpenBSD i386; en-US; rv:1.8.0.4) Gecko/20060628 Firefox/1.5.0.4\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.8.0.4) Gecko/20060608 Ubuntu/dapper-security Firefox/1.5.0.4\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; ru; rv:1.8.0.4)",
                      "markdown": "`0.5\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-GB; rv:1.8.0.5) Gecko/20060731 Ubuntu/dapper-security Firefox/1.5.0.5\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; de; rv:1.8.0.5) Gecko/20060731 Ubuntu/dapper-security Firefox/1.5.0.5\",\n\t\"Mozilla/5.0 (X11; U; Linux i686 (x86_64); en-US; rv:1.8.0.5) Gecko/20060726 Red Hat/1.5.0.5-0.el4.1 Firefox/1.5.0.5 pango-text\",\n\t\"Mozilla/5.0 (X11; U; OpenBSD i386; en-US; rv:1.8.0.4) Gecko/20060628 Firefox/1.5.0.4\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.8.0.4) Gecko/20060608 Ubuntu/dapper-security Firefox/1.5.0.4\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; ru; rv:1.8.0.4)`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/libgobuster/useragents.go"
                },
                "region": {
                  "startLine": 1539,
                  "startColumn": 68,
                  "endLine": 1539,
                  "endColumn": 73,
                  "snippet": {
                    "text": ".9\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.9) Gecko/20061221 Fedora/1.5.0.9-1.fc5 Firefox/1.5.0.9\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.9) Gecko/20061219 Fedora/1.5.0.9-1.fc6 Firefox/1.5.0.9 pango-text\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.9) Gecko/20061215 Red Hat/1.5.0.9-0.1.el4 Firefox/1.5.0.9\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.9) Gecko/20060911 SUSE/1.5.0.9-3.2 Firefox/1.5.0.9\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.9) Gecko/20060911 SUSE/1.5.0.9-0.2 Firefox/1.5.0.9\",\n\t\"Mozilla/5.0 (X11; U; Linux i686 (x86_64); en-US; rv:",
                    "rendered": {
                      "text": ".9\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.9) Gecko/20061221 Fedora/1.5.0.9-1.fc5 Firefox/1.5.0.9\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.9) Gecko/20061219 Fedora/1.5.0.9-1.fc6 Firefox/1.5.0.9 pango-text\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.9) Gecko/20061215 Red Hat/1.5.0.9-0.1.el4 Firefox/1.5.0.9\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.9) Gecko/20060911 SUSE/1.5.0.9-3.2 Firefox/1.5.0.9\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.9) Gecko/20060911 SUSE/1.5.0.9-0.2 Firefox/1.5.0.9\",\n\t\"Mozilla/5.0 (X11; U; Linux i686 (x86_64); en-US; rv:",
                      "markdown": "`.9\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.9) Gecko/20061221 Fedora/1.5.0.9-1.fc5 Firefox/1.5.0.9\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.9) Gecko/20061219 Fedora/1.5.0.9-1.fc6 Firefox/1.5.0.9 pango-text\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.9) Gecko/20061215 Red Hat/1.5.0.9-0.1.el4 Firefox/1.5.0.9\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.9) Gecko/20060911 SUSE/1.5.0.9-3.2 Firefox/1.5.0.9\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.9) Gecko/20060911 SUSE/1.5.0.9-0.2 Firefox/1.5.0.9\",\n\t\"Mozilla/5.0 (X11; U; Linux i686 (x86_64); en-US; rv:`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/libgobuster/useragents.go"
                },
                "region": {
                  "startLine": 947,
                  "startColumn": 68,
                  "endLine": 947,
                  "endColumn": 73,
                  "snippet": {
                    "text": "/3.0.14\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.14) Gecko/2009090216 Ubuntu/9.04 (jaunty) Firefox/3.0.14 GTB5\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; de; rv:1.9.0.14) Gecko/2009090216 Ubuntu/9.04 (jaunty) Firefox/3.0.14\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; de; rv:1.9.0.14) Gecko/2009082505 Red Hat/3.0.14-1.el5_4 Firefox/3.0.14\",\n\t\"Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.0.14) Gecko/2009082707 Firefox/3.0.14 (.NET CLR 3.5.30729)\",\n\t\"Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US; rv:1.9.0.14) Gecko/2009082707 Firefox/3.0.14 ( .NET CLR 3.5.30729)\",\n\t\"Mozilla/5.0 (Windows; U; ",
                    "rendered": {
                      "text": "/3.0.14\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.14) Gecko/2009090216 Ubuntu/9.04 (jaunty) Firefox/3.0.14 GTB5\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; de; rv:1.9.0.14) Gecko/2009090216 Ubuntu/9.04 (jaunty) Firefox/3.0.14\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; de; rv:1.9.0.14) Gecko/2009082505 Red Hat/3.0.14-1.el5_4 Firefox/3.0.14\",\n\t\"Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.0.14) Gecko/2009082707 Firefox/3.0.14 (.NET CLR 3.5.30729)\",\n\t\"Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US; rv:1.9.0.14) Gecko/2009082707 Firefox/3.0.14 ( .NET CLR 3.5.30729)\",\n\t\"Mozilla/5.0 (Windows; U; ",
                      "markdown": "`/3.0.14\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.14) Gecko/2009090216 Ubuntu/9.04 (jaunty) Firefox/3.0.14 GTB5\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; de; rv:1.9.0.14) Gecko/2009090216 Ubuntu/9.04 (jaunty) Firefox/3.0.14\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; de; rv:1.9.0.14) Gecko/2009082505 Red Hat/3.0.14-1.el5_4 Firefox/3.0.14\",\n\t\"Mozilla/5.0 (Windows; U; Windows NT 6.1; en-US; rv:1.9.0.14) Gecko/2009082707 Firefox/3.0.14 (.NET CLR 3.5.30729)\",\n\t\"Mozilla/5.0 (Windows; U; Windows NT 6.0; en-US; rv:1.9.0.14) Gecko/2009082707 Firefox/3.0.14 ( .NET CLR 3.5.30729)\",\n\t\"Mozilla/5.0 (Windows; U; `"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/libgobuster/useragents.go"
                },
                "region": {
                  "startLine": 907,
                  "startColumn": 70,
                  "endLine": 907,
                  "endColumn": 75,
                  "snippet": {
                    "text": "irefox/3.0.2\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.2) Gecko/2008092313 Ubuntu/1.4.0 (hardy) Firefox/3.0.2\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.2) Gecko/2008092000 Ubuntu/8.04 (hardy) Firefox/3.0.2\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.2) Gecko/2008091816 Red Hat/3.0.2-3.el5 Firefox/3.0.2\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-GB; rv:1.9.0.2) Gecko/2008092313 Ubuntu/8.04 (hardy) Firefox/3.0.2\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; de; rv:1.9.0.2) Gecko/2008092313 Ubuntu/8.04 (hardy) Firefox/3.0.2\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.1pre) ",
                    "rendered": {
                      "text": "irefox/3.0.2\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.2) Gecko/2008092313 Ubuntu/1.4.0 (hardy) Firefox/3.0.2\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.2) Gecko/2008092000 Ubuntu/8.04 (hardy) Firefox/3.0.2\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.2) Gecko/2008091816 Red Hat/3.0.2-3.el5 Firefox/3.0.2\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-GB; rv:1.9.0.2) Gecko/2008092313 Ubuntu/8.04 (hardy) Firefox/3.0.2\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; de; rv:1.9.0.2) Gecko/2008092313 Ubuntu/8.04 (hardy) Firefox/3.0.2\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.1pre) ",
                      "markdown": "`irefox/3.0.2\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.2) Gecko/2008092313 Ubuntu/1.4.0 (hardy) Firefox/3.0.2\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.2) Gecko/2008092000 Ubuntu/8.04 (hardy) Firefox/3.0.2\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.2) Gecko/2008091816 Red Hat/3.0.2-3.el5 Firefox/3.0.2\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-GB; rv:1.9.0.2) Gecko/2008092313 Ubuntu/8.04 (hardy) Firefox/3.0.2\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; de; rv:1.9.0.2) Gecko/2008092313 Ubuntu/8.04 (hardy) Firefox/3.0.2\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.1pre) `"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/libgobuster/useragents.go"
                },
                "region": {
                  "startLine": 862,
                  "startColumn": 67,
                  "endLine": 862,
                  "endColumn": 72,
                  "snippet": {
                    "text": "0.4-4.6 Firefox/3.0.4\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.9.0.4) Gecko/2008111317 Ubuntu/8.04 (hardy) Firefox/3.0.4\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.9.0.11) Gecko/2009060309 Ubuntu/8.04 (hardy) Firefox/3.0.4\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; it; rv:1.9.0.4) Gecko/2008111217 Red Hat Firefox/3.0.4\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.0.4) Gecko/2008111317 Ubuntu/8.04 (hardy) Firefox/3.0.4\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.0.4) Gecko/2008111317 Linux Mint/5 (Elyssa) Firefox/3.0.4\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.7) Gecko/2009",
                    "rendered": {
                      "text": "0.4-4.6 Firefox/3.0.4\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.9.0.4) Gecko/2008111317 Ubuntu/8.04 (hardy) Firefox/3.0.4\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.9.0.11) Gecko/2009060309 Ubuntu/8.04 (hardy) Firefox/3.0.4\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; it; rv:1.9.0.4) Gecko/2008111217 Red Hat Firefox/3.0.4\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.0.4) Gecko/2008111317 Ubuntu/8.04 (hardy) Firefox/3.0.4\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.0.4) Gecko/2008111317 Linux Mint/5 (Elyssa) Firefox/3.0.4\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.7) Gecko/2009",
                      "markdown": "`0.4-4.6 Firefox/3.0.4\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.9.0.4) Gecko/2008111317 Ubuntu/8.04 (hardy) Firefox/3.0.4\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; nl; rv:1.9.0.11) Gecko/2009060309 Ubuntu/8.04 (hardy) Firefox/3.0.4\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; it; rv:1.9.0.4) Gecko/2008111217 Red Hat Firefox/3.0.4\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.0.4) Gecko/2008111317 Ubuntu/8.04 (hardy) Firefox/3.0.4\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; es-AR; rv:1.9.0.4) Gecko/2008111317 Linux Mint/5 (Elyssa) Firefox/3.0.4\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.7) Gecko/2009`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/libgobuster/useragents.go"
                },
                "region": {
                  "startLine": 851,
                  "startColumn": 72,
                  "endLine": 851,
                  "endColumn": 77,
                  "snippet": {
                    "text": "cko/2008111710 Firefox/3.0.4\",\n\t\"Mozilla/5.0 (X11; U; SunOS i86pc; en-US; rv:1.9.0.4) Gecko/2008111710 Firefox/3.0.4\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; es-ES; rv:1.9.0.4) Gecko/2008111217 Fedora/3.0.4-1.fc10 Firefox/3.0.4\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; es-AR; rv:1.9.0.4) Gecko/2008110510 Red Hat/3.0.4-1.el5_2 Firefox/3.0.4\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.0.6) Gecko/2009020407 Firefox/3.0.4 (Debian-3.0.6-1)\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.0.4) Gecko/2008120512 Gentoo Firefox/3.0.4\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; cs-CZ; rv:1.9.0.4) Gecko/20",
                    "rendered": {
                      "text": "cko/2008111710 Firefox/3.0.4\",\n\t\"Mozilla/5.0 (X11; U; SunOS i86pc; en-US; rv:1.9.0.4) Gecko/2008111710 Firefox/3.0.4\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; es-ES; rv:1.9.0.4) Gecko/2008111217 Fedora/3.0.4-1.fc10 Firefox/3.0.4\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; es-AR; rv:1.9.0.4) Gecko/2008110510 Red Hat/3.0.4-1.el5_2 Firefox/3.0.4\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.0.6) Gecko/2009020407 Firefox/3.0.4 (Debian-3.0.6-1)\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.0.4) Gecko/2008120512 Gentoo Firefox/3.0.4\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; cs-CZ; rv:1.9.0.4) Gecko/20",
                      "markdown": "`cko/2008111710 Firefox/3.0.4\",\n\t\"Mozilla/5.0 (X11; U; SunOS i86pc; en-US; rv:1.9.0.4) Gecko/2008111710 Firefox/3.0.4\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; es-ES; rv:1.9.0.4) Gecko/2008111217 Fedora/3.0.4-1.fc10 Firefox/3.0.4\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; es-AR; rv:1.9.0.4) Gecko/2008110510 Red Hat/3.0.4-1.el5_2 Firefox/3.0.4\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.0.6) Gecko/2009020407 Firefox/3.0.4 (Debian-3.0.6-1)\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.0.4) Gecko/2008120512 Gentoo Firefox/3.0.4\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; cs-CZ; rv:1.9.0.4) Gecko/20`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/libgobuster/useragents.go"
                },
                "region": {
                  "startLine": 791,
                  "startColumn": 72,
                  "endLine": 791,
                  "endColumn": 77,
                  "snippet": {
                    "text": "irefox/3.0.7\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; fr; rv:1.9.0.7) Gecko/2009030423 Ubuntu/8.10 (intrepid) Firefox/3.0.7\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; es-ES; rv:1.9.0.7) Gecko/2009022800 SUSE/3.0.7-1.4 Firefox/3.0.7\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.0.7) Gecko/2009032606 Red Hat/3.0.7-1.el5 Firefox/3.0.7\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.0.7) Gecko/2009032319 Gentoo Firefox/3.0.7\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.0.7) Gecko/2009031802 Gentoo Firefox/3.0.7\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.0.7) Gecko/2009031120 Man",
                    "rendered": {
                      "text": "irefox/3.0.7\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; fr; rv:1.9.0.7) Gecko/2009030423 Ubuntu/8.10 (intrepid) Firefox/3.0.7\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; es-ES; rv:1.9.0.7) Gecko/2009022800 SUSE/3.0.7-1.4 Firefox/3.0.7\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.0.7) Gecko/2009032606 Red Hat/3.0.7-1.el5 Firefox/3.0.7\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.0.7) Gecko/2009032319 Gentoo Firefox/3.0.7\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.0.7) Gecko/2009031802 Gentoo Firefox/3.0.7\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.0.7) Gecko/2009031120 Man",
                      "markdown": "`irefox/3.0.7\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; fr; rv:1.9.0.7) Gecko/2009030423 Ubuntu/8.10 (intrepid) Firefox/3.0.7\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; es-ES; rv:1.9.0.7) Gecko/2009022800 SUSE/3.0.7-1.4 Firefox/3.0.7\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.0.7) Gecko/2009032606 Red Hat/3.0.7-1.el5 Firefox/3.0.7\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.0.7) Gecko/2009032319 Gentoo Firefox/3.0.7\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.0.7) Gecko/2009031802 Gentoo Firefox/3.0.7\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.0.7) Gecko/2009031120 Man`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/libgobuster/useragents.go"
                },
                "region": {
                  "startLine": 758,
                  "startColumn": 70,
                  "endLine": 758,
                  "endColumn": 75,
                  "snippet": {
                    "text": ".9\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.9) Gecko/2009042113 Ubuntu/8.10 (intrepid) Firefox/3.0.9 GTB5\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.9) Gecko/2009042113 Linux Mint/6 (Felicia) Firefox/3.0.9\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.9) Gecko/2009041408 Red Hat/3.0.9-1.el5 Firefox/3.0.9\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.9) Gecko/2009040820 Firefox/3.0.9\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; de; rv:1.9.0.9) Gecko/2009042113 Ubuntu/9.04 (jaunty) Firefox/3.0.9\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; de; rv:1.9.0.9) Gecko/2009042113 Ubuntu/8",
                    "rendered": {
                      "text": ".9\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.9) Gecko/2009042113 Ubuntu/8.10 (intrepid) Firefox/3.0.9 GTB5\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.9) Gecko/2009042113 Linux Mint/6 (Felicia) Firefox/3.0.9\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.9) Gecko/2009041408 Red Hat/3.0.9-1.el5 Firefox/3.0.9\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.9) Gecko/2009040820 Firefox/3.0.9\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; de; rv:1.9.0.9) Gecko/2009042113 Ubuntu/9.04 (jaunty) Firefox/3.0.9\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; de; rv:1.9.0.9) Gecko/2009042113 Ubuntu/8",
                      "markdown": "`.9\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.9) Gecko/2009042113 Ubuntu/8.10 (intrepid) Firefox/3.0.9 GTB5\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.9) Gecko/2009042113 Linux Mint/6 (Felicia) Firefox/3.0.9\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.9) Gecko/2009041408 Red Hat/3.0.9-1.el5 Firefox/3.0.9\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.0.9) Gecko/2009040820 Firefox/3.0.9\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; de; rv:1.9.0.9) Gecko/2009042113 Ubuntu/9.04 (jaunty) Firefox/3.0.9\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; de; rv:1.9.0.9) Gecko/2009042113 Ubuntu/8`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/libgobuster/useragents.go"
                },
                "region": {
                  "startLine": 380,
                  "startColumn": 71,
                  "endLine": 380,
                  "endColumn": 76,
                  "snippet": {
                    "text": ".13\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-NZ; rv:1.9.2.13) Gecko/20101206 Ubuntu/10.10 (maverick) Firefox/3.6.13\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.9.2.13) Gecko/20101206 Ubuntu/9.10 (karmic) Firefox/3.6.13\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.9.2.13) Gecko/20101206 Red Hat/3.6-2.el5 Firefox/3.6.13\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; da-DK; rv:1.9.2.13) Gecko/20101206 Ubuntu/10.10 (maverick) Firefox/3.6.13\",\n\t\"Mozilla/5.0 (X11; U; Linux MIPS32 1074Kf CPS QuadCore; en-US; rv:1.9.2.13) Gecko/20110103 Fedora/3.6.13-1.fc14 Firefox/3.6.13\",\n\t\"Mozilla/5.0 (X11; U; Lin",
                    "rendered": {
                      "text": ".13\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-NZ; rv:1.9.2.13) Gecko/20101206 Ubuntu/10.10 (maverick) Firefox/3.6.13\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.9.2.13) Gecko/20101206 Ubuntu/9.10 (karmic) Firefox/3.6.13\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.9.2.13) Gecko/20101206 Red Hat/3.6-2.el5 Firefox/3.6.13\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; da-DK; rv:1.9.2.13) Gecko/20101206 Ubuntu/10.10 (maverick) Firefox/3.6.13\",\n\t\"Mozilla/5.0 (X11; U; Linux MIPS32 1074Kf CPS QuadCore; en-US; rv:1.9.2.13) Gecko/20110103 Fedora/3.6.13-1.fc14 Firefox/3.6.13\",\n\t\"Mozilla/5.0 (X11; U; Lin",
                      "markdown": "`.13\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-NZ; rv:1.9.2.13) Gecko/20101206 Ubuntu/10.10 (maverick) Firefox/3.6.13\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.9.2.13) Gecko/20101206 Ubuntu/9.10 (karmic) Firefox/3.6.13\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.9.2.13) Gecko/20101206 Red Hat/3.6-2.el5 Firefox/3.6.13\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; da-DK; rv:1.9.2.13) Gecko/20101206 Ubuntu/10.10 (maverick) Firefox/3.6.13\",\n\t\"Mozilla/5.0 (X11; U; Linux MIPS32 1074Kf CPS QuadCore; en-US; rv:1.9.2.13) Gecko/20110103 Fedora/3.6.13-1.fc14 Firefox/3.6.13\",\n\t\"Mozilla/5.0 (X11; U; Lin`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/libgobuster/useragents.go"
                },
                "region": {
                  "startLine": 376,
                  "startColumn": 71,
                  "endLine": 376,
                  "endColumn": 76,
                  "snippet": {
                    "text": ".13) Gecko/20101203 Firefox/3.6.13\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.13) Gecko/20101223 Gentoo Firefox/3.6.13\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.13) Gecko/20101219 Gentoo Firefox/3.6.13\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.13) Gecko/20101206 Red Hat/3.6-3.el4 Firefox/3.6.13\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.13) Gecko/20101206 Firefox/3.6.13\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-NZ; rv:1.9.2.13) Gecko/20101206 Ubuntu/10.10 (maverick) Firefox/3.6.13\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.9.2.13) Gecko/2010",
                    "rendered": {
                      "text": ".13) Gecko/20101203 Firefox/3.6.13\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.13) Gecko/20101223 Gentoo Firefox/3.6.13\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.13) Gecko/20101219 Gentoo Firefox/3.6.13\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.13) Gecko/20101206 Red Hat/3.6-3.el4 Firefox/3.6.13\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.13) Gecko/20101206 Firefox/3.6.13\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-NZ; rv:1.9.2.13) Gecko/20101206 Ubuntu/10.10 (maverick) Firefox/3.6.13\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.9.2.13) Gecko/2010",
                      "markdown": "`.13) Gecko/20101203 Firefox/3.6.13\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.13) Gecko/20101223 Gentoo Firefox/3.6.13\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.13) Gecko/20101219 Gentoo Firefox/3.6.13\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.13) Gecko/20101206 Red Hat/3.6-3.el4 Firefox/3.6.13\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.13) Gecko/20101206 Firefox/3.6.13\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-NZ; rv:1.9.2.13) Gecko/20101206 Ubuntu/10.10 (maverick) Firefox/3.6.13\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-GB; rv:1.9.2.13) Gecko/2010`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/libgobuster/useragents.go"
                },
                "region": {
                  "startLine": 308,
                  "startColumn": 71,
                  "endLine": 308,
                  "endColumn": 76,
                  "snippet": {
                    "text": "0.10 (maverick) Firefox/3.6.21\",\n\t\"Mozilla/5.0 (X11; U; OpenBSD i386; en-US; rv:1.9.2.20) Gecko/20110803 Firefox/3.6.20\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; it; rv:1.9.2.20) Gecko/20110805 Ubuntu/10.04 (lucid) Firefox/3.6.20\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.20) Gecko/20110804 Red Hat/3.6-2.el5 Firefox/3.6.20\",\n\t\"Mozilla/5.0 (Windows; U; Windows NT 6.0; hu; rv:1.9.2.20) Gecko/20110803 Firefox/3.6.20\",\n\t\"Mozilla/5.0 (Windows; U; Windows NT 6.0; de; rv:1.9.2.20) Gecko/20110803 Firefox/3.6.20\",\n\t\"Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.9.2.20) Gecko/20110803 Firefox",
                    "rendered": {
                      "text": "0.10 (maverick) Firefox/3.6.21\",\n\t\"Mozilla/5.0 (X11; U; OpenBSD i386; en-US; rv:1.9.2.20) Gecko/20110803 Firefox/3.6.20\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; it; rv:1.9.2.20) Gecko/20110805 Ubuntu/10.04 (lucid) Firefox/3.6.20\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.20) Gecko/20110804 Red Hat/3.6-2.el5 Firefox/3.6.20\",\n\t\"Mozilla/5.0 (Windows; U; Windows NT 6.0; hu; rv:1.9.2.20) Gecko/20110803 Firefox/3.6.20\",\n\t\"Mozilla/5.0 (Windows; U; Windows NT 6.0; de; rv:1.9.2.20) Gecko/20110803 Firefox/3.6.20\",\n\t\"Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.9.2.20) Gecko/20110803 Firefox",
                      "markdown": "`0.10 (maverick) Firefox/3.6.21\",\n\t\"Mozilla/5.0 (X11; U; OpenBSD i386; en-US; rv:1.9.2.20) Gecko/20110803 Firefox/3.6.20\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; it; rv:1.9.2.20) Gecko/20110805 Ubuntu/10.04 (lucid) Firefox/3.6.20\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.20) Gecko/20110804 Red Hat/3.6-2.el5 Firefox/3.6.20\",\n\t\"Mozilla/5.0 (Windows; U; Windows NT 6.0; hu; rv:1.9.2.20) Gecko/20110803 Firefox/3.6.20\",\n\t\"Mozilla/5.0 (Windows; U; Windows NT 6.0; de; rv:1.9.2.20) Gecko/20110803 Firefox/3.6.20\",\n\t\"Mozilla/5.0 (Windows; U; Windows NT 5.2; en-US; rv:1.9.2.20) Gecko/20110803 Firefox`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/libgobuster/useragents.go"
                },
                "region": {
                  "startLine": 210,
                  "startColumn": 68,
                  "endLine": 210,
                  "endColumn": 73,
                  "snippet": {
                    "text": "2 Firefox/3.6a1pre\",\n\t\"Mozilla/5.0 (Windows; U; Windows NT 5.1; ja; rv:1.9.2a1pre) Gecko/20090402 Firefox/3.6a1pre (.NET CLR 3.5.30729)\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.9) Gecko/20100915 Gentoo Firefox/3.6.9\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.2.9) Gecko/20100827 Red Hat/3.6.9-2.el6 Firefox/3.6.9\",\n\t\"Mozilla/5.0 (X11; U; FreeBSD i386; en-US; rv:1.9.2.9) Gecko/20100913 Firefox/3.6.9\",\n\t\"Mozilla/5.0 (Windows; U; Windows NT 6.1; rv:1.9.2.9) Gecko/20100913 Firefox/3.6.9\",\n\t\"Mozilla/5.0 (Windows; U; Windows NT 6.0; en-GB; rv:1.9.2.9) Gecko/20100824 Firefox/3.6.9 ( .N",
                    "rendered": {
                      "text": "2 Firefox/3.6a1pre\",\n\t\"Mozilla/5.0 (Windows; U; Windows NT 5.1; ja; rv:1.9.2a1pre) Gecko/20090402 Firefox/3.6a1pre (.NET CLR 3.5.30729)\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.9) Gecko/20100915 Gentoo Firefox/3.6.9\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.2.9) Gecko/20100827 Red Hat/3.6.9-2.el6 Firefox/3.6.9\",\n\t\"Mozilla/5.0 (X11; U; FreeBSD i386; en-US; rv:1.9.2.9) Gecko/20100913 Firefox/3.6.9\",\n\t\"Mozilla/5.0 (Windows; U; Windows NT 6.1; rv:1.9.2.9) Gecko/20100913 Firefox/3.6.9\",\n\t\"Mozilla/5.0 (Windows; U; Windows NT 6.0; en-GB; rv:1.9.2.9) Gecko/20100824 Firefox/3.6.9 ( .N",
                      "markdown": "`2 Firefox/3.6a1pre\",\n\t\"Mozilla/5.0 (Windows; U; Windows NT 5.1; ja; rv:1.9.2a1pre) Gecko/20090402 Firefox/3.6a1pre (.NET CLR 3.5.30729)\",\n\t\"Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.9) Gecko/20100915 Gentoo Firefox/3.6.9\",\n\t\"Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.2.9) Gecko/20100827 Red Hat/3.6.9-2.el6 Firefox/3.6.9\",\n\t\"Mozilla/5.0 (X11; U; FreeBSD i386; en-US; rv:1.9.2.9) Gecko/20100913 Firefox/3.6.9\",\n\t\"Mozilla/5.0 (Windows; U; Windows NT 6.1; rv:1.9.2.9) Gecko/20100913 Firefox/3.6.9\",\n\t\"Mozilla/5.0 (Windows; U; Windows NT 6.0; en-GB; rv:1.9.2.9) Gecko/20100824 Firefox/3.6.9 ( .N`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/gobustergcs/gobustersgcs.go"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 38,
                  "endLine": 97,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\tvar body []byte\n\tfor i := 1; i <= tries; i++ {\n\t\tvar err error\n\t\tstatusCode, _, _, body, err = s.http.Request(ctx, bucketURL, libgobuster.RequestOptions{ReturnBody: true})\n\t\tif err != nil {\n\t\t\t// check if it's a timeout and if we should try again and try again\n\t\t\t// otherwise the timeout error is raised\n",
                    "rendered": {
                      "text": "\tvar body []byte\n\tfor i := 1; i <= tries; i++ {\n\t\tvar err error\n\t\tstatusCode, _, _, body, err = s.http.Request(ctx, bucketURL, libgobuster.RequestOptions{ReturnBody: true})\n\t\tif err != nil {\n\t\t\t// check if it's a timeout and if we should try again and try again\n\t\t\t// otherwise the timeout error is raised\n",
                      "markdown": "`\tvar body []byte\n\tfor i := 1; i <= tries; i++ {\n\t\tvar err error\n\t\tstatusCode, _, _, body, err = s.http.Request(ctx, bucketURL, libgobuster.RequestOptions{ReturnBody: true})\n\t\tif err != nil {\n\t\t\t// check if it's a timeout and if we should try again and try again\n\t\t\t// otherwise the timeout error is raised\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/gobustergcs/gobustersgcs.go"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 51,
                  "endLine": 103,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\t\t\t// otherwise the timeout error is raised\n\t\t\tif netErr, ok := err.(net.Error); ok && netErr.Timeout() && i != tries {\n\t\t\t\tcontinue\n\t\t\t} else if strings.Contains(err.Error(), \"invalid control character in URL\") {\n\t\t\t\t// put error in error chan so it's printed out and ignore it\n\t\t\t\t// so gobuster will not quit\n\t\t\t\tprogress.ErrorChan <- err\n",
                    "rendered": {
                      "text": "\t\t\t// otherwise the timeout error is raised\n\t\t\tif netErr, ok := err.(net.Error); ok && netErr.Timeout() && i != tries {\n\t\t\t\tcontinue\n\t\t\t} else if strings.Contains(err.Error(), \"invalid control character in URL\") {\n\t\t\t\t// put error in error chan so it's printed out and ignore it\n\t\t\t\t// so gobuster will not quit\n\t\t\t\tprogress.ErrorChan <- err\n",
                      "markdown": "`\t\t\t// otherwise the timeout error is raised\n\t\t\tif netErr, ok := err.(net.Error); ok && netErr.Timeout() && i != tries {\n\t\t\t\tcontinue\n\t\t\t} else if strings.Contains(err.Error(), \"invalid control character in URL\") {\n\t\t\t\t// put error in error chan so it's printed out and ignore it\n\t\t\t\t// so gobuster will not quit\n\t\t\t\tprogress.ErrorChan <- err\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/gobustergcs/gobustersgcs.go"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 19,
                  "endLine": 100,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\t\tstatusCode, _, _, body, err = s.http.Request(ctx, bucketURL, libgobuster.RequestOptions{ReturnBody: true})\n\t\tif err != nil {\n\t\t\t// check if it's a timeout and if we should try again and try again\n\t\t\t// otherwise the timeout error is raised\n\t\t\tif netErr, ok := err.(net.Error); ok && netErr.Timeout() && i != tries {\n\t\t\t\tcontinue\n\t\t\t} else if strings.Contains(err.Error(), \"invalid control character in URL\") {\n",
                    "rendered": {
                      "text": "\t\tstatusCode, _, _, body, err = s.http.Request(ctx, bucketURL, libgobuster.RequestOptions{ReturnBody: true})\n\t\tif err != nil {\n\t\t\t// check if it's a timeout and if we should try again and try again\n\t\t\t// otherwise the timeout error is raised\n\t\t\tif netErr, ok := err.(net.Error); ok && netErr.Timeout() && i != tries {\n\t\t\t\tcontinue\n\t\t\t} else if strings.Contains(err.Error(), \"invalid control character in URL\") {\n",
                      "markdown": "`\t\tstatusCode, _, _, body, err = s.http.Request(ctx, bucketURL, libgobuster.RequestOptions{ReturnBody: true})\n\t\tif err != nil {\n\t\t\t// check if it's a timeout and if we should try again and try again\n\t\t\t// otherwise the timeout error is raised\n\t\t\tif netErr, ok := err.(net.Error); ok && netErr.Timeout() && i != tries {\n\t\t\t\tcontinue\n\t\t\t} else if strings.Contains(err.Error(), \"invalid control character in URL\") {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/gobustergcs/gobustersgcs.go"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 21,
                  "endLine": 99,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\tvar err error\n\t\tstatusCode, _, _, body, err = s.http.Request(ctx, bucketURL, libgobuster.RequestOptions{ReturnBody: true})\n\t\tif err != nil {\n\t\t\t// check if it's a timeout and if we should try again and try again\n\t\t\t// otherwise the timeout error is raised\n\t\t\tif netErr, ok := err.(net.Error); ok && netErr.Timeout() && i != tries {\n\t\t\t\tcontinue\n",
                    "rendered": {
                      "text": "\t\tvar err error\n\t\tstatusCode, _, _, body, err = s.http.Request(ctx, bucketURL, libgobuster.RequestOptions{ReturnBody: true})\n\t\tif err != nil {\n\t\t\t// check if it's a timeout and if we should try again and try again\n\t\t\t// otherwise the timeout error is raised\n\t\t\tif netErr, ok := err.(net.Error); ok && netErr.Timeout() && i != tries {\n\t\t\t\tcontinue\n",
                      "markdown": "`\t\tvar err error\n\t\tstatusCode, _, _, body, err = s.http.Request(ctx, bucketURL, libgobuster.RequestOptions{ReturnBody: true})\n\t\tif err != nil {\n\t\t\t// check if it's a timeout and if we should try again and try again\n\t\t\t// otherwise the timeout error is raised\n\t\t\tif netErr, ok := err.(net.Error); ok && netErr.Timeout() && i != tries {\n\t\t\t\tcontinue\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/cli/cmd/dir.go"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 32,
                  "endLine": 52,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\tif err != nil {\n\t\treturn nil, nil, err\n\t}\n\tpluginOpts.Password = httpOpts.Password\n\tpluginOpts.URL = httpOpts.URL\n\tpluginOpts.UserAgent = httpOpts.UserAgent\n\tpluginOpts.Username = httpOpts.Username\n",
                    "rendered": {
                      "text": "\tif err != nil {\n\t\treturn nil, nil, err\n\t}\n\tpluginOpts.Password = httpOpts.Password\n\tpluginOpts.URL = httpOpts.URL\n\tpluginOpts.UserAgent = httpOpts.UserAgent\n\tpluginOpts.Username = httpOpts.Username\n",
                      "markdown": "`\tif err != nil {\n\t\treturn nil, nil, err\n\t}\n\tpluginOpts.Password = httpOpts.Password\n\tpluginOpts.URL = httpOpts.URL\n\tpluginOpts.UserAgent = httpOpts.UserAgent\n\tpluginOpts.Username = httpOpts.Username\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/cli/cmd/dir.go"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 12,
                  "endLine": 52,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\tif err != nil {\n\t\treturn nil, nil, err\n\t}\n\tpluginOpts.Password = httpOpts.Password\n\tpluginOpts.URL = httpOpts.URL\n\tpluginOpts.UserAgent = httpOpts.UserAgent\n\tpluginOpts.Username = httpOpts.Username\n",
                    "rendered": {
                      "text": "\tif err != nil {\n\t\treturn nil, nil, err\n\t}\n\tpluginOpts.Password = httpOpts.Password\n\tpluginOpts.URL = httpOpts.URL\n\tpluginOpts.UserAgent = httpOpts.UserAgent\n\tpluginOpts.Username = httpOpts.Username\n",
                      "markdown": "`\tif err != nil {\n\t\treturn nil, nil, err\n\t}\n\tpluginOpts.Password = httpOpts.Password\n\tpluginOpts.URL = httpOpts.URL\n\tpluginOpts.UserAgent = httpOpts.UserAgent\n\tpluginOpts.Username = httpOpts.Username\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/cli/cmd/dir.go"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 7,
                  "endLine": 2,
                  "snippet": {
                    "text": "package cmd\n\nimport (\n\t\"errors\"\n\t\"fmt\"\n",
                    "rendered": {
                      "text": "package cmd\n\nimport (\n\t\"errors\"\n\t\"fmt\"\n",
                      "markdown": "`package cmd\n\nimport (\n\t\"errors\"\n\t\"fmt\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/Makefile"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\tgo mod tidy -v\n\n.PHONY: all\nall: fmt update linux windows test lint\n\n.PHONY: test\ntest:\n",
                    "rendered": {
                      "text": "\tgo mod tidy -v\n\n.PHONY: all\nall: fmt update linux windows test lint\n\n.PHONY: test\ntest:\n",
                      "markdown": "`\tgo mod tidy -v\n\n.PHONY: all\nall: fmt update linux windows test lint\n\n.PHONY: test\ntest:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/Makefile"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 7,
                  "endLine": 16,
                  "snippet": {
                    "text": "fmt:\n\tgo fmt ./...\n\n.PHONY: update\nupdate:\n\tgo get -u\n\tgo mod tidy -v\n\n",
                    "rendered": {
                      "text": "fmt:\n\tgo fmt ./...\n\n.PHONY: update\nupdate:\n\tgo get -u\n\tgo mod tidy -v\n\n",
                      "markdown": "`fmt:\n\tgo fmt ./...\n\n.PHONY: update\nupdate:\n\tgo get -u\n\tgo mod tidy -v\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/Makefile"
                },
                "region": {
                  "startLine": 41,
                  "endLine": 41,
                  "endColumn": 5,
                  "snippet": {
                    "text": "tag:\n\t@[ \"${TAG}\" ] && echo \"Tagging a new version ${TAG}\" || ( echo \"TAG is not set\"; exit 1 )\n\tgit tag -a \"${TAG}\" -m \"${TAG}\"\n\tgit push origin \"${TAG}\"\n",
                    "rendered": {
                      "text": "tag:\n\t@[ \"${TAG}\" ] && echo \"Tagging a new version ${TAG}\" || ( echo \"TAG is not set\"; exit 1 )\n\tgit tag -a \"${TAG}\" -m \"${TAG}\"\n\tgit push origin \"${TAG}\"\n",
                      "markdown": "`tag:\n\t@[ \"${TAG}\" ] && echo \"Tagging a new version ${TAG}\" || ( echo \"TAG is not set\"; exit 1 )\n\tgit tag -a \"${TAG}\" -m \"${TAG}\"\n\tgit push origin \"${TAG}\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/Makefile"
                },
                "region": {
                  "startLine": 40,
                  "endLine": 40,
                  "endColumn": 5,
                  "snippet": {
                    "text": ".PHONY: tag\ntag:\n\t@[ \"${TAG}\" ] && echo \"Tagging a new version ${TAG}\" || ( echo \"TAG is not set\"; exit 1 )\n\tgit tag -a \"${TAG}\" -m \"${TAG}\"\n\tgit push origin \"${TAG}\"\n",
                    "rendered": {
                      "text": ".PHONY: tag\ntag:\n\t@[ \"${TAG}\" ] && echo \"Tagging a new version ${TAG}\" || ( echo \"TAG is not set\"; exit 1 )\n\tgit tag -a \"${TAG}\" -m \"${TAG}\"\n\tgit push origin \"${TAG}\"\n",
                      "markdown": "`.PHONY: tag\ntag:\n\t@[ \"${TAG}\" ] && echo \"Tagging a new version ${TAG}\" || ( echo \"TAG is not set\"; exit 1 )\n\tgit tag -a \"${TAG}\" -m \"${TAG}\"\n\tgit push origin \"${TAG}\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/Makefile"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 6,
                  "endLine": 35,
                  "endColumn": 11,
                  "snippet": {
                    "text": ".PHONY: lint-update\nlint-update:\n\tcurl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $$(go env GOPATH)/bin\n\t$$(go env GOPATH)/bin/golangci-lint --version\n\n.PHONY: tag\ntag:\n",
                    "rendered": {
                      "text": ".PHONY: lint-update\nlint-update:\n\tcurl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $$(go env GOPATH)/bin\n\t$$(go env GOPATH)/bin/golangci-lint --version\n\n.PHONY: tag\ntag:\n",
                      "markdown": "`.PHONY: lint-update\nlint-update:\n\tcurl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $$(go env GOPATH)/bin\n\t$$(go env GOPATH)/bin/golangci-lint --version\n\n.PHONY: tag\ntag:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/Makefile"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 106,
                  "endLine": 34,
                  "endColumn": 111,
                  "snippet": {
                    "text": "\n.PHONY: lint-update\nlint-update:\n\tcurl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $$(go env GOPATH)/bin\n\t$$(go env GOPATH)/bin/golangci-lint --version\n\n.PHONY: tag\n",
                    "rendered": {
                      "text": "\n.PHONY: lint-update\nlint-update:\n\tcurl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $$(go env GOPATH)/bin\n\t$$(go env GOPATH)/bin/golangci-lint --version\n\n.PHONY: tag\n",
                      "markdown": "`\n.PHONY: lint-update\nlint-update:\n\tcurl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $$(go env GOPATH)/bin\n\t$$(go env GOPATH)/bin/golangci-lint --version\n\n.PHONY: tag\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/Makefile"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\n.PHONY: lint-update\nlint-update:\n\tcurl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $$(go env GOPATH)/bin\n\t$$(go env GOPATH)/bin/golangci-lint --version\n\n.PHONY: tag\n",
                    "rendered": {
                      "text": "\n.PHONY: lint-update\nlint-update:\n\tcurl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $$(go env GOPATH)/bin\n\t$$(go env GOPATH)/bin/golangci-lint --version\n\n.PHONY: tag\n",
                      "markdown": "`\n.PHONY: lint-update\nlint-update:\n\tcurl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $$(go env GOPATH)/bin\n\t$$(go env GOPATH)/bin/golangci-lint --version\n\n.PHONY: tag\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/Makefile"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 7,
                  "endLine": 29,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\n.PHONY: lint\nlint:\n\t\"$$(go env GOPATH)/bin/golangci-lint\" run ./...\n\tgo mod tidy\n\n.PHONY: lint-update\n",
                    "rendered": {
                      "text": "\n.PHONY: lint\nlint:\n\t\"$$(go env GOPATH)/bin/golangci-lint\" run ./...\n\tgo mod tidy\n\n.PHONY: lint-update\n",
                      "markdown": "`\n.PHONY: lint\nlint:\n\t\"$$(go env GOPATH)/bin/golangci-lint\" run ./...\n\tgo mod tidy\n\n.PHONY: lint-update\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/Makefile"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 4,
                  "endLine": 21,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tgo mod tidy -v\n\n.PHONY: all\nall: fmt update linux windows test lint\n\n.PHONY: test\ntest:\n",
                    "rendered": {
                      "text": "\tgo mod tidy -v\n\n.PHONY: all\nall: fmt update linux windows test lint\n\n.PHONY: test\ntest:\n",
                      "markdown": "`\tgo mod tidy -v\n\n.PHONY: all\nall: fmt update linux windows test lint\n\n.PHONY: test\ntest:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/Makefile"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 3,
                  "endLine": 13,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n.PHONY: fmt\nfmt:\n\tgo fmt ./...\n\n.PHONY: update\nupdate:\n",
                    "rendered": {
                      "text": "\n.PHONY: fmt\nfmt:\n\tgo fmt ./...\n\n.PHONY: update\nupdate:\n",
                      "markdown": "`\n.PHONY: fmt\nfmt:\n\tgo fmt ./...\n\n.PHONY: update\nupdate:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/gobuster.zip/Makefile"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 7,
                  "endLine": 12,
                  "snippet": {
                    "text": "windows:\n\tGOOS=windows GOARCH=amd64 CGO_ENABLED=0 go build -o ./gobuster.exe\n\n.PHONY: fmt\nfmt:\n\tgo fmt ./...\n\n.PHONY: update\n",
                    "rendered": {
                      "text": "windows:\n\tGOOS=windows GOARCH=amd64 CGO_ENABLED=0 go build -o ./gobuster.exe\n\n.PHONY: fmt\nfmt:\n\tgo fmt ./...\n\n.PHONY: update\n",
                      "markdown": "`windows:\n\tGOOS=windows GOARCH=amd64 CGO_ENABLED=0 go build -o ./gobuster.exe\n\n.PHONY: fmt\nfmt:\n\tgo fmt ./...\n\n.PHONY: update\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}