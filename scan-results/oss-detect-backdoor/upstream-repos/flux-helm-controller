{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/tests/fuzz/oss_fuzz_run.sh"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 59,
                  "endLine": 20,
                  "endColumn": 65,
                  "snippet": {
                    "text": "set -euxo pipefail\n\n# run each fuzzer once to ensure they are working properly\nfind /out -type f -iname \"fuzz*\" -exec echo {} -runs=1 \\; | bash -e\n",
                    "rendered": {
                      "text": "set -euxo pipefail\n\n# run each fuzzer once to ensure they are working properly\nfind /out -type f -iname \"fuzz*\" -exec echo {} -runs=1 \\; | bash -e\n",
                      "markdown": "`set -euxo pipefail\n\n# run each fuzzer once to ensure they are working properly\nfind /out -type f -iname \"fuzz*\" -exec echo {} -runs=1 \\; | bash -e\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/tests/fuzz/oss_fuzz_run.sh"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 38,
                  "endLine": 8,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/tests/fuzz/oss_fuzz_run.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\n# Copyright 2022 The Flux authors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\n# Copyright 2022 The Flux authors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n",
                      "markdown": "`#!/usr/bin/env bash\n\n# Copyright 2022 The Flux authors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/tests/fuzz/oss_fuzz_run.sh"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 59,
                  "endLine": 20,
                  "endColumn": 65,
                  "snippet": {
                    "text": "set -euxo pipefail\n\n# run each fuzzer once to ensure they are working properly\nfind /out -type f -iname \"fuzz*\" -exec echo {} -runs=1 \\; | bash -e\n",
                    "rendered": {
                      "text": "set -euxo pipefail\n\n# run each fuzzer once to ensure they are working properly\nfind /out -type f -iname \"fuzz*\" -exec echo {} -runs=1 \\; | bash -e\n",
                      "markdown": "`set -euxo pipefail\n\n# run each fuzzer once to ensure they are working properly\nfind /out -type f -iname \"fuzz*\" -exec echo {} -runs=1 \\; | bash -e\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/tests/fuzz/oss_fuzz_run.sh"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 58,
                  "endLine": 20,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nset -euxo pipefail\n\n# run each fuzzer once to ensure they are working properly\nfind /out -type f -iname \"fuzz*\" -exec echo {} -runs=1 \\; | bash -e\n",
                    "rendered": {
                      "text": "\nset -euxo pipefail\n\n# run each fuzzer once to ensure they are working properly\nfind /out -type f -iname \"fuzz*\" -exec echo {} -runs=1 \\; | bash -e\n",
                      "markdown": "`\nset -euxo pipefail\n\n# run each fuzzer once to ensure they are working properly\nfind /out -type f -iname \"fuzz*\" -exec echo {} -runs=1 \\; | bash -e\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/tests/fuzz/oss_fuzz_run.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\n# Copyright 2022 The Flux authors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\n# Copyright 2022 The Flux authors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n",
                      "markdown": "`#!/usr/bin/env bash\n\n# Copyright 2022 The Flux authors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/tests/fuzz/Dockerfile.builder"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 3,
                  "endLine": 13,
                  "endColumn": 9,
                  "snippet": {
                    "text": "ENV FLUX_CI=true\n\nCOPY ./ $SRC\nRUN wget https://raw.githubusercontent.com/google/oss-fuzz/master/projects/fluxcd/build.sh -O $SRC/build.sh\n\nWORKDIR $SRC\n",
                    "rendered": {
                      "text": "ENV FLUX_CI=true\n\nCOPY ./ $SRC\nRUN wget https://raw.githubusercontent.com/google/oss-fuzz/master/projects/fluxcd/build.sh -O $SRC/build.sh\n\nWORKDIR $SRC\n",
                      "markdown": "`ENV FLUX_CI=true\n\nCOPY ./ $SRC\nRUN wget https://raw.githubusercontent.com/google/oss-fuzz/master/projects/fluxcd/build.sh -O $SRC/build.sh\n\nWORKDIR $SRC\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/tests/fuzz/Dockerfile.builder"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 53,
                  "endLine": 10,
                  "endColumn": 4,
                  "snippet": {
                    "text": "    && tar -C temp-go/ -xzf go1.23.0.linux-amd64.tar.gz \\\n    && mv temp-go/go/* /root/.go/\n\nENV SRC=$GOPATH/src/github.com/fluxcd/helm-controller\nENV FLUX_CI=true\n\nCOPY ./ $SRC\nRUN wget https://raw.githubusercontent.com/google/oss-fuzz/master/projects/fluxcd/build.sh -O $SRC/build.sh\n",
                    "rendered": {
                      "text": "    && tar -C temp-go/ -xzf go1.23.0.linux-amd64.tar.gz \\\n    && mv temp-go/go/* /root/.go/\n\nENV SRC=$GOPATH/src/github.com/fluxcd/helm-controller\nENV FLUX_CI=true\n\nCOPY ./ $SRC\nRUN wget https://raw.githubusercontent.com/google/oss-fuzz/master/projects/fluxcd/build.sh -O $SRC/build.sh\n",
                      "markdown": "`    && tar -C temp-go/ -xzf go1.23.0.linux-amd64.tar.gz \\\n    && mv temp-go/go/* /root/.go/\n\nENV SRC=$GOPATH/src/github.com/fluxcd/helm-controller\nENV FLUX_CI=true\n\nCOPY ./ $SRC\nRUN wget https://raw.githubusercontent.com/google/oss-fuzz/master/projects/fluxcd/build.sh -O $SRC/build.sh\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/tests/fuzz/Dockerfile.builder"
                },
                "region": {
                  "startLine": 8,
                  "endLine": 9,
                  "endColumn": 4,
                  "snippet": {
                    "text": "    && rm -rf /root/.go/* \\\n    && tar -C temp-go/ -xzf go1.23.0.linux-amd64.tar.gz \\\n    && mv temp-go/go/* /root/.go/\n\nENV SRC=$GOPATH/src/github.com/fluxcd/helm-controller\nENV FLUX_CI=true\n\nCOPY ./ $SRC\n",
                    "rendered": {
                      "text": "    && rm -rf /root/.go/* \\\n    && tar -C temp-go/ -xzf go1.23.0.linux-amd64.tar.gz \\\n    && mv temp-go/go/* /root/.go/\n\nENV SRC=$GOPATH/src/github.com/fluxcd/helm-controller\nENV FLUX_CI=true\n\nCOPY ./ $SRC\n",
                      "markdown": "`    && rm -rf /root/.go/* \\\n    && tar -C temp-go/ -xzf go1.23.0.linux-amd64.tar.gz \\\n    && mv temp-go/go/* /root/.go/\n\nENV SRC=$GOPATH/src/github.com/fluxcd/helm-controller\nENV FLUX_CI=true\n\nCOPY ./ $SRC\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/tests/fuzz/Dockerfile.builder"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 6,
                  "endLine": 7,
                  "endColumn": 10,
                  "snippet": {
                    "text": "    && mkdir temp-go \\\n    && rm -rf /root/.go/* \\\n    && tar -C temp-go/ -xzf go1.23.0.linux-amd64.tar.gz \\\n    && mv temp-go/go/* /root/.go/\n\nENV SRC=$GOPATH/src/github.com/fluxcd/helm-controller\nENV FLUX_CI=true\n",
                    "rendered": {
                      "text": "    && mkdir temp-go \\\n    && rm -rf /root/.go/* \\\n    && tar -C temp-go/ -xzf go1.23.0.linux-amd64.tar.gz \\\n    && mv temp-go/go/* /root/.go/\n\nENV SRC=$GOPATH/src/github.com/fluxcd/helm-controller\nENV FLUX_CI=true\n",
                      "markdown": "`    && mkdir temp-go \\\n    && rm -rf /root/.go/* \\\n    && tar -C temp-go/ -xzf go1.23.0.linux-amd64.tar.gz \\\n    && mv temp-go/go/* /root/.go/\n\nENV SRC=$GOPATH/src/github.com/fluxcd/helm-controller\nENV FLUX_CI=true\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/tests/fuzz/Dockerfile.builder"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 6,
                  "endLine": 6,
                  "endColumn": 11,
                  "snippet": {
                    "text": "RUN wget https://go.dev/dl/go1.23.0.linux-amd64.tar.gz \\\n    && mkdir temp-go \\\n    && rm -rf /root/.go/* \\\n    && tar -C temp-go/ -xzf go1.23.0.linux-amd64.tar.gz \\\n    && mv temp-go/go/* /root/.go/\n\nENV SRC=$GOPATH/src/github.com/fluxcd/helm-controller\n",
                    "rendered": {
                      "text": "RUN wget https://go.dev/dl/go1.23.0.linux-amd64.tar.gz \\\n    && mkdir temp-go \\\n    && rm -rf /root/.go/* \\\n    && tar -C temp-go/ -xzf go1.23.0.linux-amd64.tar.gz \\\n    && mv temp-go/go/* /root/.go/\n\nENV SRC=$GOPATH/src/github.com/fluxcd/helm-controller\n",
                      "markdown": "`RUN wget https://go.dev/dl/go1.23.0.linux-amd64.tar.gz \\\n    && mkdir temp-go \\\n    && rm -rf /root/.go/* \\\n    && tar -C temp-go/ -xzf go1.23.0.linux-amd64.tar.gz \\\n    && mv temp-go/go/* /root/.go/\n\nENV SRC=$GOPATH/src/github.com/fluxcd/helm-controller\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/tests/fuzz/Dockerfile.builder"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 3,
                  "endLine": 3,
                  "endColumn": 9,
                  "snippet": {
                    "text": "FROM gcr.io/oss-fuzz-base/base-builder-go\n\nRUN wget https://go.dev/dl/go1.23.0.linux-amd64.tar.gz \\\n    && mkdir temp-go \\\n    && rm -rf /root/.go/* \\\n    && tar -C temp-go/ -xzf go1.23.0.linux-amd64.tar.gz \\\n",
                    "rendered": {
                      "text": "FROM gcr.io/oss-fuzz-base/base-builder-go\n\nRUN wget https://go.dev/dl/go1.23.0.linux-amd64.tar.gz \\\n    && mkdir temp-go \\\n    && rm -rf /root/.go/* \\\n    && tar -C temp-go/ -xzf go1.23.0.linux-amd64.tar.gz \\\n",
                      "markdown": "`FROM gcr.io/oss-fuzz-base/base-builder-go\n\nRUN wget https://go.dev/dl/go1.23.0.linux-amd64.tar.gz \\\n    && mkdir temp-go \\\n    && rm -rf /root/.go/* \\\n    && tar -C temp-go/ -xzf go1.23.0.linux-amd64.tar.gz \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/rbac/role.yaml"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 3,
                  "endLine": 44,
                  "snippet": {
                    "text": "  verbs:\n  - get\n  - patch\n  - update\n- apiGroups:\n  - source.toolkit.fluxcd.io\n  resources:\n  - helmcharts\n",
                    "rendered": {
                      "text": "  verbs:\n  - get\n  - patch\n  - update\n- apiGroups:\n  - source.toolkit.fluxcd.io\n  resources:\n  - helmcharts\n",
                      "markdown": "`  verbs:\n  - get\n  - patch\n  - update\n- apiGroups:\n  - source.toolkit.fluxcd.io\n  resources:\n  - helmcharts\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/rbac/role.yaml"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 3,
                  "endLine": 36,
                  "snippet": {
                    "text": "  - delete\n  - get\n  - patch\n  - update\n- apiGroups:\n  - helm.toolkit.fluxcd.io\n  resources:\n  - helmreleases/status\n",
                    "rendered": {
                      "text": "  - delete\n  - get\n  - patch\n  - update\n- apiGroups:\n  - helm.toolkit.fluxcd.io\n  resources:\n  - helmreleases/status\n",
                      "markdown": "`  - delete\n  - get\n  - patch\n  - update\n- apiGroups:\n  - helm.toolkit.fluxcd.io\n  resources:\n  - helmreleases/status\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/rbac/role.yaml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 3,
                  "endLine": 25,
                  "snippet": {
                    "text": "  - get\n  - list\n  - patch\n  - update\n  - watch\n- apiGroups:\n  - helm.toolkit.fluxcd.io\n  resources:\n",
                    "rendered": {
                      "text": "  - get\n  - list\n  - patch\n  - update\n  - watch\n- apiGroups:\n  - helm.toolkit.fluxcd.io\n  resources:\n",
                      "markdown": "`  - get\n  - list\n  - patch\n  - update\n  - watch\n- apiGroups:\n  - helm.toolkit.fluxcd.io\n  resources:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/rbac/role.yaml"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 3,
                  "endLine": 53,
                  "snippet": {
                    "text": "  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - source.toolkit.fluxcd.io\n  resources:\n  - helmcharts/status\n",
                    "rendered": {
                      "text": "  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - source.toolkit.fluxcd.io\n  resources:\n  - helmcharts/status\n",
                      "markdown": "`  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - source.toolkit.fluxcd.io\n  resources:\n  - helmcharts/status\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/rbac/role.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 3,
                  "endLine": 26,
                  "snippet": {
                    "text": "  - list\n  - patch\n  - update\n  - watch\n- apiGroups:\n  - helm.toolkit.fluxcd.io\n  resources:\n  - helmreleases/finalizers\n",
                    "rendered": {
                      "text": "  - list\n  - patch\n  - update\n  - watch\n- apiGroups:\n  - helm.toolkit.fluxcd.io\n  resources:\n  - helmreleases/finalizers\n",
                      "markdown": "`  - list\n  - patch\n  - update\n  - watch\n- apiGroups:\n  - helm.toolkit.fluxcd.io\n  resources:\n  - helmreleases/finalizers\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/rbac/helmrelease_viewer_role.yaml"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 3,
                  "endLine": 15,
                  "snippet": {
                    "text": "  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - helm.toolkit.fluxcd.io\n  resources:\n  - helmreleases/status\n",
                    "rendered": {
                      "text": "  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - helm.toolkit.fluxcd.io\n  resources:\n  - helmreleases/status\n",
                      "markdown": "`  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - helm.toolkit.fluxcd.io\n  resources:\n  - helmreleases/status\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 1789,
                  "startColumn": 22,
                  "endLine": 1790,
                  "snippet": {
                    "text": "For practical information about this field, see\n[forcing a release](#forcing-a-release).\n\n### Last Handled Reset At\n\nThe helm-controller reports the last `reconcile.fluxcd.io/resetAt`\nannotation value it acted on in the `.status.lastHandledResetAt` field.\n\n",
                    "rendered": {
                      "text": "For practical information about this field, see\n[forcing a release](#forcing-a-release).\n\n### Last Handled Reset At\n\nThe helm-controller reports the last `reconcile.fluxcd.io/resetAt`\nannotation value it acted on in the `.status.lastHandledResetAt` field.\n\n",
                      "markdown": "`For practical information about this field, see\n[forcing a release](#forcing-a-release).\n\n### Last Handled Reset At\n\nThe helm-controller reports the last `reconcile.fluxcd.io/resetAt`\nannotation value it acted on in the `.status.lastHandledResetAt` field.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 1781,
                  "startColumn": 22,
                  "endLine": 1782,
                  "snippet": {
                    "text": "For practical information about this field, see\n[triggering a reconcile](#triggering-a-reconcile).\n\n### Last Handled Force At\n\nThe helm-controller reports the last `reconcile.fluxcd.io/forceAt`\nannotation value it acted on in the `.status.lastHandledForceAt` field.\n\n",
                    "rendered": {
                      "text": "For practical information about this field, see\n[triggering a reconcile](#triggering-a-reconcile).\n\n### Last Handled Force At\n\nThe helm-controller reports the last `reconcile.fluxcd.io/forceAt`\nannotation value it acted on in the `.status.lastHandledForceAt` field.\n\n",
                      "markdown": "`For practical information about this field, see\n[triggering a reconcile](#triggering-a-reconcile).\n\n### Last Handled Force At\n\nThe helm-controller reports the last `reconcile.fluxcd.io/forceAt`\nannotation value it acted on in the `.status.lastHandledForceAt` field.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 1773,
                  "startColumn": 26,
                  "endLine": 1774,
                  "snippet": {
                    "text": "This field is used by the controller to determine the active remediation\nstrategy for the HelmRelease.\n\n### Last Handled Reconcile At\n\nThe helm-controller reports the last `reconcile.fluxcd.io/requestedAt`\nannotation value it acted on in the `.status.lastHandledReconcileAt` field.\n\n",
                    "rendered": {
                      "text": "This field is used by the controller to determine the active remediation\nstrategy for the HelmRelease.\n\n### Last Handled Reconcile At\n\nThe helm-controller reports the last `reconcile.fluxcd.io/requestedAt`\nannotation value it acted on in the `.status.lastHandledReconcileAt` field.\n\n",
                      "markdown": "`This field is used by the controller to determine the active remediation\nstrategy for the HelmRelease.\n\n### Last Handled Reconcile At\n\nThe helm-controller reports the last `reconcile.fluxcd.io/requestedAt`\nannotation value it acted on in the `.status.lastHandledReconcileAt` field.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 1689,
                  "startColumn": 7,
                  "endLine": 1689,
                  "endColumn": 11,
                  "snippet": {
                    "text": "son: InstallFailed` | `reason: UpgradeFailed` | `reason: TestFailed` | `reason: RollbackSucceeded` | `reason: UninstallSucceeded` | `reason: RollbackFailed` | `reason: UninstallFailed` | `reason: <arbitrary error>`\n\nNote that a HelmRelease can be [reconciling](#reconciling-helmrelease) while\nfailing at the same time. For example, due to a new release attempt after\nremediating a failed Helm action. When a reconciliation fails, the `Reconciling`\nCondition reason would be `ProgressingWithRetry`. When the reconciliation is\nperformed again after the failure, the reason is updated to `Progressing`.\n\n###",
                    "rendered": {
                      "text": "son: InstallFailed` | `reason: UpgradeFailed` | `reason: TestFailed` | `reason: RollbackSucceeded` | `reason: UninstallSucceeded` | `reason: RollbackFailed` | `reason: UninstallFailed` | `reason: <arbitrary error>`\n\nNote that a HelmRelease can be [reconciling](#reconciling-helmrelease) while\nfailing at the same time. For example, due to a new release attempt after\nremediating a failed Helm action. When a reconciliation fails, the `Reconciling`\nCondition reason would be `ProgressingWithRetry`. When the reconciliation is\nperformed again after the failure, the reason is updated to `Progressing`.\n\n###",
                      "markdown": "`son: InstallFailed` | `reason: UpgradeFailed` | `reason: TestFailed` | `reason: RollbackSucceeded` | `reason: UninstallSucceeded` | `reason: RollbackFailed` | `reason: UninstallFailed` | `reason: <arbitrary error>`\n\nNote that a HelmRelease can be [reconciling](#reconciling-helmrelease) while\nfailing at the same time. For example, due to a new release attempt after\nremediating a failed Helm action. When a reconciliation fails, the `Reconciling`\nCondition reason would be `ProgressingWithRetry`. When the reconciliation is\nperformed again after the failure, the reason is updated to `Progressing`.\n\n###`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 1591,
                  "startColumn": 38,
                  "endLine": 1591,
                  "endColumn": 42,
                  "snippet": {
                    "text": "- `reason: Progressing` | `reason: ProgressingWithRetry`\n\nThe Condition `message` is updated during the course of the reconciliation to\nreport the Helm action being performed at any particular moment.\n\nThe Condition has a [\"negative polarity\"](https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties),\nand is only present on the HelmRelease while the status is `\"True\"`.\n",
                    "rendered": {
                      "text": "- `reason: Progressing` | `reason: ProgressingWithRetry`\n\nThe Condition `message` is updated during the course of the reconciliation to\nreport the Helm action being performed at any particular moment.\n\nThe Condition has a [\"negative polarity\"](https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties),\nand is only present on the HelmRelease while the status is `\"True\"`.\n",
                      "markdown": "`- `reason: Progressing` | `reason: ProgressingWithRetry`\n\nThe Condition `message` is updated during the course of the reconciliation to\nreport the Helm action being performed at any particular moment.\n\nThe Condition has a [\"negative polarity\"](https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties),\nand is only present on the HelmRelease while the status is `\"True\"`.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 1260,
                  "startColumn": 57,
                  "endLine": 1260,
                  "endColumn": 65,
                  "snippet": {
                    "text": "until they succeed and unblock the uninstallation. The Helm uninstall error\nwill be present in the status of HelmRelease. This can be used to identify which\nhook is failing. If the hook failure persists, to run uninstall without the\nhooks, equivalent of running `helm uninstall --no-hooks`, update the HelmRelease\nto set `.spec.uninstall.disableHooks` to `true`.\n\n```yaml\n",
                    "rendered": {
                      "text": "until they succeed and unblock the uninstallation. The Helm uninstall error\nwill be present in the status of HelmRelease. This can be used to identify which\nhook is failing. If the hook failure persists, to run uninstall without the\nhooks, equivalent of running `helm uninstall --no-hooks`, update the HelmRelease\nto set `.spec.uninstall.disableHooks` to `true`.\n\n```yaml\n",
                      "markdown": "`until they succeed and unblock the uninstallation. The Helm uninstall error\nwill be present in the status of HelmRelease. This can be used to identify which\nhook is failing. If the hook failure persists, to run uninstall without the\nhooks, equivalent of running `helm uninstall --no-hooks`, update the HelmRelease\nto set `.spec.uninstall.disableHooks` to `true`.\n\n```yaml\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 1243,
                  "startColumn": 22,
                  "endLine": 1243,
                  "endColumn": 26,
                  "snippet": {
                    "text": "HelmRelease object will remain in a failed state until the uninstall succeeds.\nOnce uninstall is successful, the HelmRelease object will get deleted.\n\nIf resources get stuck at deletion due to some dependency on some other\nresource or policy, the controller will keep retrying to delete the resources.\nThe HelmRelease object will remain in a failed state. Once the cause of resource\ndeletion issue is resolved by intervention, HelmRelease uninstallation will\n",
                    "rendered": {
                      "text": "HelmRelease object will remain in a failed state until the uninstall succeeds.\nOnce uninstall is successful, the HelmRelease object will get deleted.\n\nIf resources get stuck at deletion due to some dependency on some other\nresource or policy, the controller will keep retrying to delete the resources.\nThe HelmRelease object will remain in a failed state. Once the cause of resource\ndeletion issue is resolved by intervention, HelmRelease uninstallation will\n",
                      "markdown": "`HelmRelease object will remain in a failed state until the uninstall succeeds.\nOnce uninstall is successful, the HelmRelease object will get deleted.\n\nIf resources get stuck at deletion due to some dependency on some other\nresource or policy, the controller will keep retrying to delete the resources.\nThe HelmRelease object will remain in a failed state. Once the cause of resource\ndeletion issue is resolved by intervention, HelmRelease uninstallation will\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 1232,
                  "endLine": 1233,
                  "endColumn": 3,
                  "snippet": {
                    "text": "```\n\n### Handling failed uninstall\n\nAt times, a Helm uninstall may fail due to the resource deletion taking a long\ntime, resources getting stuck in deleting phase due to some resource delete\npolicy in the cluster or some failing delete hooks. Depending on the scenario,\nthis can be handled in a few different ways.\n",
                    "rendered": {
                      "text": "```\n\n### Handling failed uninstall\n\nAt times, a Helm uninstall may fail due to the resource deletion taking a long\ntime, resources getting stuck in deleting phase due to some resource delete\npolicy in the cluster or some failing delete hooks. Depending on the scenario,\nthis can be handled in a few different ways.\n",
                      "markdown": "````\n\n### Handling failed uninstall\n\nAt times, a Helm uninstall may fail due to the resource deletion taking a long\ntime, resources getting stuck in deleting phase due to some resource delete\npolicy in the cluster or some failing delete hooks. Depending on the scenario,\nthis can be handled in a few different ways.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 1139,
                  "startColumn": 42,
                  "endLine": 1139,
                  "endColumn": 46,
                  "snippet": {
                    "text": "      retries: -1\n```\n\nThe Cluster and HelmRelease can be created at the same time as long as the\n[install remediation configuration](#install-remediation) is set to a\nforgiving number of `.retries`. The HelmRelease will then eventually succeed\nin installing the Helm chart once the cluster is available.\n",
                    "rendered": {
                      "text": "      retries: -1\n```\n\nThe Cluster and HelmRelease can be created at the same time as long as the\n[install remediation configuration](#install-remediation) is set to a\nforgiving number of `.retries`. The HelmRelease will then eventually succeed\nin installing the Helm chart once the cluster is available.\n",
                      "markdown": "`      retries: -1\n```\n\nThe Cluster and HelmRelease can be created at the same time as long as the\n[install remediation configuration](#install-remediation) is set to a\nforgiving number of `.retries`. The HelmRelease will then eventually succeed\nin installing the Helm chart once the cluster is available.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 978,
                  "startColumn": 21,
                  "endLine": 979,
                  "snippet": {
                    "text": "    crds: CreateReplace\n```\n\n### Role-based access control\n\nBy default, a HelmRelease runs under the cluster admin account and can create,\nmodify, and delete cluster level objects (ClusterRoles, ClusterRoleBindings,\nCustomResourceDefinitions, etc.) and namespaced objects (Deployments, Ingresses,\n",
                    "rendered": {
                      "text": "    crds: CreateReplace\n```\n\n### Role-based access control\n\nBy default, a HelmRelease runs under the cluster admin account and can create,\nmodify, and delete cluster level objects (ClusterRoles, ClusterRoleBindings,\nCustomResourceDefinitions, etc.) and namespaced objects (Deployments, Ingresses,\n",
                      "markdown": "`    crds: CreateReplace\n```\n\n### Role-based access control\n\nBy default, a HelmRelease runs under the cluster admin account and can create,\nmodify, and delete cluster level objects (ClusterRoles, ClusterRoleBindings,\nCustomResourceDefinitions, etc.) and namespaced objects (Deployments, Ingresses,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 951,
                  "startColumn": 27,
                  "endLine": 951,
                  "endColumn": 35,
                  "snippet": {
                    "text": "- `CreateReplace`: Create new CRDs, update (replace) existing ones, but **do\n  not** delete CRDs which no longer exist in the current Helm chart.\n\nFor example, if you want to update CRDs when installing and upgrading a Helm\nchart, you can set the `.spec.install.crds` and `.spec.upgrade.crds` policies to\n`CreateReplace`:\n\n",
                    "rendered": {
                      "text": "- `CreateReplace`: Create new CRDs, update (replace) existing ones, but **do\n  not** delete CRDs which no longer exist in the current Helm chart.\n\nFor example, if you want to update CRDs when installing and upgrading a Helm\nchart, you can set the `.spec.install.crds` and `.spec.upgrade.crds` policies to\n`CreateReplace`:\n\n",
                      "markdown": "`- `CreateReplace`: Create new CRDs, update (replace) existing ones, but **do\n  not** delete CRDs which no longer exist in the current Helm chart.\n\nFor example, if you want to update CRDs when installing and upgrading a Helm\nchart, you can set the `.spec.install.crds` and `.spec.upgrade.crds` policies to\n`CreateReplace`:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 948,
                  "startColumn": 35,
                  "endLine": 948,
                  "endColumn": 43,
                  "snippet": {
                    "text": "  for `.spec.upgrade.crds`.\n- `Create`: Create CRDs if they do not exist, but do not upgrade or delete them.\n  This is the default value for `.spec.install.crds`.\n- `CreateReplace`: Create new CRDs, update (replace) existing ones, but **do\n  not** delete CRDs which no longer exist in the current Helm chart.\n\nFor example, if you want to update CRDs when installing and upgrading a Helm\n",
                    "rendered": {
                      "text": "  for `.spec.upgrade.crds`.\n- `Create`: Create CRDs if they do not exist, but do not upgrade or delete them.\n  This is the default value for `.spec.install.crds`.\n- `CreateReplace`: Create new CRDs, update (replace) existing ones, but **do\n  not** delete CRDs which no longer exist in the current Helm chart.\n\nFor example, if you want to update CRDs when installing and upgrading a Helm\n",
                      "markdown": "`  for `.spec.upgrade.crds`.\n- `Create`: Create CRDs if they do not exist, but do not upgrade or delete them.\n  This is the default value for `.spec.install.crds`.\n- `CreateReplace`: Create new CRDs, update (replace) existing ones, but **do\n  not** delete CRDs which no longer exist in the current Helm chart.\n\nFor example, if you want to update CRDs when installing and upgrading a Helm\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 925,
                  "startColumn": 21,
                  "endLine": 925,
                  "endColumn": 25,
                  "snippet": {
                    "text": "(CRDs) as part of a chart. However, it has no native support for\n[upgrading CRDs](https://helm.sh/docs/chart_best_practices/custom_resource_definitions/#some-caveats-and-explanations):\n\n> There is no support at this time for upgrading or deleting CRDs using Helm.\n> This was an explicit decision after much community discussion due to the\n> danger for unintentional data loss. Furthermore, there is currently no\n> community consensus around how to handle CRDs and their lifecycle. As this\n",
                    "rendered": {
                      "text": "(CRDs) as part of a chart. However, it has no native support for\n[upgrading CRDs](https://helm.sh/docs/chart_best_practices/custom_resource_definitions/#some-caveats-and-explanations):\n\n> There is no support at this time for upgrading or deleting CRDs using Helm.\n> This was an explicit decision after much community discussion due to the\n> danger for unintentional data loss. Furthermore, there is currently no\n> community consensus around how to handle CRDs and their lifecycle. As this\n",
                      "markdown": "`(CRDs) as part of a chart. However, it has no native support for\n[upgrading CRDs](https://helm.sh/docs/chart_best_practices/custom_resource_definitions/#some-caveats-and-explanations):\n\n> There is no support at this time for upgrading or deleting CRDs using Helm.\n> This was an explicit decision after much community discussion due to the\n> danger for unintentional data loss. Furthermore, there is currently no\n> community consensus around how to handle CRDs and their lifecycle. As this\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 910,
                  "startColumn": 45,
                  "endLine": 910,
                  "endColumn": 49,
                  "snippet": {
                    "text": "remediate the failure, and the Helm release will be left in a failed state.\nTo ensure the Helm release is brought back to the last known good state or\nuninstalled, `.remediateLastFailure` can be set to `true`.\nFor Helm upgrades, this defaults to `true` if at least one retry is configured.\n\nWhen a new release configuration or Helm chart is detected, the controller will\nreset the failure counters and attempt to install or upgrade the release again.\n",
                    "rendered": {
                      "text": "remediate the failure, and the Helm release will be left in a failed state.\nTo ensure the Helm release is brought back to the last known good state or\nuninstalled, `.remediateLastFailure` can be set to `true`.\nFor Helm upgrades, this defaults to `true` if at least one retry is configured.\n\nWhen a new release configuration or Helm chart is detected, the controller will\nreset the failure counters and attempt to install or upgrade the release again.\n",
                      "markdown": "`remediate the failure, and the Helm release will be left in a failed state.\nTo ensure the Helm release is brought back to the last known good state or\nuninstalled, `.remediateLastFailure` can be set to `true`.\nFor Helm upgrades, this defaults to `true` if at least one retry is configured.\n\nWhen a new release configuration or Helm chart is detected, the controller will\nreset the failure counters and attempt to install or upgrade the release again.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 862,
                  "startColumn": 10,
                  "endLine": 862,
                  "endColumn": 14,
                  "snippet": {
                    "text": "matches the desired state.\n\nAfter successfully reconciling the object, the controller requeues it for\ninspection at the specified interval. The value must be in a [Go recognized\nduration string format](https://pkg.go.dev/time#ParseDuration), e.g. `10m0s`\nto reconcile the object every ten minutes.\n\n",
                    "rendered": {
                      "text": "matches the desired state.\n\nAfter successfully reconciling the object, the controller requeues it for\ninspection at the specified interval. The value must be in a [Go recognized\nduration string format](https://pkg.go.dev/time#ParseDuration), e.g. `10m0s`\nto reconcile the object every ten minutes.\n\n",
                      "markdown": "`matches the desired state.\n\nAfter successfully reconciling the object, the controller requeues it for\ninspection at the specified interval. The value must be in a [Go recognized\nduration string format](https://pkg.go.dev/time#ParseDuration), e.g. `10m0s`\nto reconcile the object every ten minutes.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 857,
                  "startColumn": 64,
                  "endLine": 857,
                  "endColumn": 68,
                  "snippet": {
                    "text": "\n### Interval\n\n`.spec.interval` is a required field that specifies the interval at which the\nHelmRelease is reconciled, i.e. the controller ensures the current Helm release\nmatches the desired state.\n\n",
                    "rendered": {
                      "text": "\n### Interval\n\n`.spec.interval` is a required field that specifies the interval at which the\nHelmRelease is reconciled, i.e. the controller ensures the current Helm release\nmatches the desired state.\n\n",
                      "markdown": "`\n### Interval\n\n`.spec.interval` is a required field that specifies the interval at which the\nHelmRelease is reconciled, i.e. the controller ensures the current Helm release\nmatches the desired state.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 810,
                  "startColumn": 8,
                  "endLine": 810,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\n`.spec.kubeConfig.secretRef.name` is an optional field to specify the name of\na Secret containing a KubeConfig. If specified, the Helm operations will be\ntargeted at the default cluster specified in this KubeConfig instead of using\nthe in-cluster Service Account.\n\nThe Secret defined in the `.secretRef` must exist in the same namespace as the\n",
                    "rendered": {
                      "text": "\n`.spec.kubeConfig.secretRef.name` is an optional field to specify the name of\na Secret containing a KubeConfig. If specified, the Helm operations will be\ntargeted at the default cluster specified in this KubeConfig instead of using\nthe in-cluster Service Account.\n\nThe Secret defined in the `.secretRef` must exist in the same namespace as the\n",
                      "markdown": "`\n`.spec.kubeConfig.secretRef.name` is an optional field to specify the name of\na Secret containing a KubeConfig. If specified, the Helm operations will be\ntargeted at the default cluster specified in this KubeConfig instead of using\nthe in-cluster Service Account.\n\nThe Secret defined in the `.secretRef` must exist in the same namespace as the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 784,
                  "startColumn": 32,
                  "endLine": 784,
                  "endColumn": 36,
                  "snippet": {
                    "text": "Post renderers are applied in the order given, and persisted by Helm to the\nmanifest for the release in the storage.\n\n**Note:** [Helm has a limitation at present](https://github.com/helm/helm/issues/7891),\nwhich prevents post renderers from being applied to chart hooks.\n\n```yaml\n",
                    "rendered": {
                      "text": "Post renderers are applied in the order given, and persisted by Helm to the\nmanifest for the release in the storage.\n\n**Note:** [Helm has a limitation at present](https://github.com/helm/helm/issues/7891),\nwhich prevents post renderers from being applied to chart hooks.\n\n```yaml\n",
                      "markdown": "`Post renderers are applied in the order given, and persisted by Helm to the\nmanifest for the release in the storage.\n\n**Note:** [Helm has a limitation at present](https://github.com/helm/helm/issues/7891),\nwhich prevents post renderers from being applied to chart hooks.\n\n```yaml\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 685,
                  "endLine": 686,
                  "endColumn": 3,
                  "snippet": {
                    "text": "Furthermore, when `.spec.driftDetection.mode` is set to `enabled`, the\ncontroller will attempt to correct the drift by creating and patching the\nresources based on the server-side dry-run apply result.\n\nAt the end of the correction attempt, it will emit a Kubernetes Event with a\nsummary of the changes it made and any failures it encountered. In case of a\nfailure, it will continue to detect and correct drift until the desired state\nhas been reached, or a new Helm action is triggered (due to e.g. a change to\n",
                    "rendered": {
                      "text": "Furthermore, when `.spec.driftDetection.mode` is set to `enabled`, the\ncontroller will attempt to correct the drift by creating and patching the\nresources based on the server-side dry-run apply result.\n\nAt the end of the correction attempt, it will emit a Kubernetes Event with a\nsummary of the changes it made and any failures it encountered. In case of a\nfailure, it will continue to detect and correct drift until the desired state\nhas been reached, or a new Helm action is triggered (due to e.g. a change to\n",
                      "markdown": "`Furthermore, when `.spec.driftDetection.mode` is set to `enabled`, the\ncontroller will attempt to correct the drift by creating and patching the\nresources based on the server-side dry-run apply result.\n\nAt the end of the correction attempt, it will emit a Kubernetes Event with a\nsummary of the changes it made and any failures it encountered. In case of a\nfailure, it will continue to detect and correct drift until the desired state\nhas been reached, or a new Helm action is triggered (due to e.g. a change to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 76,
                  "endLine": 430,
                  "snippet": {
                    "text": "  value can be found. Defaults to `values.yaml` when omitted.\n- `targetPath` (Optional): The YAML dot notation path at which the value should\n  be merged. When set, the valuesKey is expected to be a single flat value.\n  Defaults to empty when omitted, which results in the values getting merged at\n  the root.\n- `optional` (Optional): Whether this values reference is optional. When\n  `true`, a not found error for the values reference is ignored, but any\n  `valuesKey`, `targetPath` or transient error will still result in a\n",
                    "rendered": {
                      "text": "  value can be found. Defaults to `values.yaml` when omitted.\n- `targetPath` (Optional): The YAML dot notation path at which the value should\n  be merged. When set, the valuesKey is expected to be a single flat value.\n  Defaults to empty when omitted, which results in the values getting merged at\n  the root.\n- `optional` (Optional): Whether this values reference is optional. When\n  `true`, a not found error for the values reference is ignored, but any\n  `valuesKey`, `targetPath` or transient error will still result in a\n",
                      "markdown": "`  value can be found. Defaults to `values.yaml` when omitted.\n- `targetPath` (Optional): The YAML dot notation path at which the value should\n  be merged. When set, the valuesKey is expected to be a single flat value.\n  Defaults to empty when omitted, which results in the values getting merged at\n  the root.\n- `optional` (Optional): Whether this values reference is optional. When\n  `true`, a not found error for the values reference is ignored, but any\n  `valuesKey`, `targetPath` or transient error will still result in a\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 427,
                  "startColumn": 53,
                  "endLine": 427,
                  "endColumn": 57,
                  "snippet": {
                    "text": "  the HelmRelease.\n- `valuesKey` (Optional): The `.data` key where the values.yaml or a specific\n  value can be found. Defaults to `values.yaml` when omitted.\n- `targetPath` (Optional): The YAML dot notation path at which the value should\n  be merged. When set, the valuesKey is expected to be a single flat value.\n  Defaults to empty when omitted, which results in the values getting merged at\n  the root.\n",
                    "rendered": {
                      "text": "  the HelmRelease.\n- `valuesKey` (Optional): The `.data` key where the values.yaml or a specific\n  value can be found. Defaults to `values.yaml` when omitted.\n- `targetPath` (Optional): The YAML dot notation path at which the value should\n  be merged. When set, the valuesKey is expected to be a single flat value.\n  Defaults to empty when omitted, which results in the values getting merged at\n  the root.\n",
                      "markdown": "`  the HelmRelease.\n- `valuesKey` (Optional): The `.data` key where the values.yaml or a specific\n  value can be found. Defaults to `values.yaml` when omitted.\n- `targetPath` (Optional): The YAML dot notation path at which the value should\n  be merged. When set, the valuesKey is expected to be a single flat value.\n  Defaults to empty when omitted, which results in the values getting merged at\n  the root.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 397,
                  "startColumn": 48,
                  "endLine": 397,
                  "endColumn": 52,
                  "snippet": {
                    "text": "```\n\n**Note:** This does not account for upgrade ordering. Kubernetes only allows\napplying one resource (HelmRelease in this case) at a time, so there is no\nway for the controller to know when a dependency HelmRelease may be updated.\nAlso, circular dependencies between HelmRelease resources must be avoided,\notherwise the interdependent HelmRelease resources will never be reconciled.\n",
                    "rendered": {
                      "text": "```\n\n**Note:** This does not account for upgrade ordering. Kubernetes only allows\napplying one resource (HelmRelease in this case) at a time, so there is no\nway for the controller to know when a dependency HelmRelease may be updated.\nAlso, circular dependencies between HelmRelease resources must be avoided,\notherwise the interdependent HelmRelease resources will never be reconciled.\n",
                      "markdown": "````\n\n**Note:** This does not account for upgrade ordering. Kubernetes only allows\napplying one resource (HelmRelease in this case) at a time, so there is no\nway for the controller to know when a dependency HelmRelease may be updated.\nAlso, circular dependencies between HelmRelease resources must be avoided,\notherwise the interdependent HelmRelease resources will never be reconciled.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 44,
                  "endLine": 83,
                  "endColumn": 48,
                  "snippet": {
                    "text": "  the [drift detection configuration](#drift-detection). If it has, the\n  controller will [correct the drift](#drift-correction) by re-applying the\n  desired state.\n- The controller will repeat the above steps at the interval defined by\n  `.spec.interval`, or when the configuration changes in a way that affects the\n  desired state of the Helm release (e.g. a new chart version or values).\n\n",
                    "rendered": {
                      "text": "  the [drift detection configuration](#drift-detection). If it has, the\n  controller will [correct the drift](#drift-correction) by re-applying the\n  desired state.\n- The controller will repeat the above steps at the interval defined by\n  `.spec.interval`, or when the configuration changes in a way that affects the\n  desired state of the Helm release (e.g. a new chart version or values).\n\n",
                      "markdown": "`  the [drift detection configuration](#drift-detection). If it has, the\n  controller will [correct the drift](#drift-correction) by re-applying the\n  desired state.\n- The controller will repeat the above steps at the interval defined by\n  `.spec.interval`, or when the configuration changes in a way that affects the\n  desired state of the Helm release (e.g. a new chart version or values).\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 1498,
                  "startColumn": 29,
                  "endLine": 1498,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\nThe HelmRelease shows the history of Helm releases it has performed up to the\nprevious successful release as a list in the `.status.history` of the resource.\nThe history is ordered by the time of the release, with the most recent release\nfirst.\n\nWhen [Helm tests](#test-configuration) are enabled, the history will also\n",
                    "rendered": {
                      "text": "\nThe HelmRelease shows the history of Helm releases it has performed up to the\nprevious successful release as a list in the `.status.history` of the resource.\nThe history is ordered by the time of the release, with the most recent release\nfirst.\n\nWhen [Helm tests](#test-configuration) are enabled, the history will also\n",
                      "markdown": "`\nThe HelmRelease shows the history of Helm releases it has performed up to the\nprevious successful release as a list in the `.status.history` of the resource.\nThe history is ordered by the time of the release, with the most recent release\nfirst.\n\nWhen [Helm tests](#test-configuration) are enabled, the history will also\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 1416,
                  "startColumn": 15,
                  "endLine": 1416,
                  "endColumn": 24,
                  "snippet": {
                    "text": "        Phase:           Failed\n      podinfo-grpc-test-rzg5v:\n      podinfo-jwt-test-7k1hv:\n      Podinfo - Service - Test - Bgoeg:\n    Version:                      1\n...\nEvents:\n",
                    "rendered": {
                      "text": "        Phase:           Failed\n      podinfo-grpc-test-rzg5v:\n      podinfo-jwt-test-7k1hv:\n      Podinfo - Service - Test - Bgoeg:\n    Version:                      1\n...\nEvents:\n",
                      "markdown": "`        Phase:           Failed\n      podinfo-grpc-test-rzg5v:\n      podinfo-jwt-test-7k1hv:\n      Podinfo - Service - Test - Bgoeg:\n    Version:                      1\n...\nEvents:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 1296,
                  "startColumn": 8,
                  "endLine": 1296,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\n### Suspending and resuming\n\nWhen you find yourself in a situation where you temporarily want to pause the\nreconciliation of a HelmRelease, you can suspend it using the\n[`.spec.suspend` field](#suspend).\n\n",
                    "rendered": {
                      "text": "\n### Suspending and resuming\n\nWhen you find yourself in a situation where you temporarily want to pause the\nreconciliation of a HelmRelease, you can suspend it using the\n[`.spec.suspend` field](#suspend).\n\n",
                      "markdown": "`\n### Suspending and resuming\n\nWhen you find yourself in a situation where you temporarily want to pause the\nreconciliation of a HelmRelease, you can suspend it using the\n[`.spec.suspend` field](#suspend).\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 1251,
                  "startColumn": 78,
                  "endLine": 1252,
                  "endColumn": 5,
                  "snippet": {
                    "text": "deletion issue can't be resolved, the HelmRelease can be force deleted by\nmanually deleting the [Helm storage\nsecret](https://helm.sh/docs/topics/advanced/#storage-backends) from the\nrespective release namespace. When the controller retries uninstall and cannot\nfind the release, it assumes that the release has been deleted, Helm uninstall\nsucceeds and the HelmRelease object gets deleted. This leaves behind all the\nrelease resources. They have to be manually deleted.\n\n",
                    "rendered": {
                      "text": "deletion issue can't be resolved, the HelmRelease can be force deleted by\nmanually deleting the [Helm storage\nsecret](https://helm.sh/docs/topics/advanced/#storage-backends) from the\nrespective release namespace. When the controller retries uninstall and cannot\nfind the release, it assumes that the release has been deleted, Helm uninstall\nsucceeds and the HelmRelease object gets deleted. This leaves behind all the\nrelease resources. They have to be manually deleted.\n\n",
                      "markdown": "`deletion issue can't be resolved, the HelmRelease can be force deleted by\nmanually deleting the [Helm storage\nsecret](https://helm.sh/docs/topics/advanced/#storage-backends) from the\nrespective release namespace. When the controller retries uninstall and cannot\nfind the release, it assumes that the release has been deleted, Helm uninstall\nsucceeds and the HelmRelease object gets deleted. This leaves behind all the\nrelease resources. They have to be manually deleted.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 1145,
                  "startColumn": 8,
                  "endLine": 1145,
                  "endColumn": 17,
                  "snippet": {
                    "text": "in installing the Helm chart once the cluster is available.\n\nIf you want to target clusters created by other means than Cluster-API, you can\ncreate a Service Account with the necessary permissions on the target cluster,\ngenerate a KubeConfig for that account, and then create a Secret on the cluster\nwhere helm-controller is running. For example:\n\n",
                    "rendered": {
                      "text": "in installing the Helm chart once the cluster is available.\n\nIf you want to target clusters created by other means than Cluster-API, you can\ncreate a Service Account with the necessary permissions on the target cluster,\ngenerate a KubeConfig for that account, and then create a Secret on the cluster\nwhere helm-controller is running. For example:\n\n",
                      "markdown": "`in installing the Helm chart once the cluster is available.\n\nIf you want to target clusters created by other means than Cluster-API, you can\ncreate a Service Account with the necessary permissions on the target cluster,\ngenerate a KubeConfig for that account, and then create a Secret on the cluster\nwhere helm-controller is running. For example:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 1139,
                  "startColumn": 54,
                  "endLine": 1139,
                  "endColumn": 60,
                  "snippet": {
                    "text": "      retries: -1\n```\n\nThe Cluster and HelmRelease can be created at the same time as long as the\n[install remediation configuration](#install-remediation) is set to a\nforgiving number of `.retries`. The HelmRelease will then eventually succeed\nin installing the Helm chart once the cluster is available.\n",
                    "rendered": {
                      "text": "      retries: -1\n```\n\nThe Cluster and HelmRelease can be created at the same time as long as the\n[install remediation configuration](#install-remediation) is set to a\nforgiving number of `.retries`. The HelmRelease will then eventually succeed\nin installing the Helm chart once the cluster is available.\n",
                      "markdown": "`      retries: -1\n```\n\nThe Cluster and HelmRelease can be created at the same time as long as the\n[install remediation configuration](#install-remediation) is set to a\nforgiving number of `.retries`. The HelmRelease will then eventually succeed\nin installing the Helm chart once the cluster is available.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 1072,
                  "startColumn": 22,
                  "endLine": 1072,
                  "endColumn": 31,
                  "snippet": {
                    "text": "`--default-service-account` flag.\n\nWhen the flag is set, HelmReleases which do not have a `.spec.serviceAccountName`\nspecified will use the Service Account name provided by\n`--default-service-account=<name>` in the namespace of the HelmRelease object.\n\nFor further best practices on securing helm-controller, see our\n",
                    "rendered": {
                      "text": "`--default-service-account` flag.\n\nWhen the flag is set, HelmReleases which do not have a `.spec.serviceAccountName`\nspecified will use the Service Account name provided by\n`--default-service-account=<name>` in the namespace of the HelmRelease object.\n\nFor further best practices on securing helm-controller, see our\n",
                      "markdown": "``--default-service-account` flag.\n\nWhen the flag is set, HelmReleases which do not have a `.spec.serviceAccountName`\nspecified will use the Service Account name provided by\n`--default-service-account=<name>` in the namespace of the HelmRelease object.\n\nFor further best practices on securing helm-controller, see our\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 1061,
                  "startColumn": 23,
                  "endLine": 1061,
                  "endColumn": 32,
                  "snippet": {
                    "text": "```\n\nWhen the controller reconciles the `podinfo` HelmRelease, it will impersonate\nthe `webapp-reconciler` Service Account. If the chart contains cluster level\nobjects like CustomResourceDefinitions, the reconciliation will fail since the\naccount it runs under has no permissions to alter objects outside the\n`webapp` namespace.\n",
                    "rendered": {
                      "text": "```\n\nWhen the controller reconciles the `podinfo` HelmRelease, it will impersonate\nthe `webapp-reconciler` Service Account. If the chart contains cluster level\nobjects like CustomResourceDefinitions, the reconciliation will fail since the\naccount it runs under has no permissions to alter objects outside the\n`webapp` namespace.\n",
                      "markdown": "````\n\nWhen the controller reconciles the `podinfo` HelmRelease, it will impersonate\nthe `webapp-reconciler` Service Account. If the chart contains cluster level\nobjects like CustomResourceDefinitions, the reconciliation will fail since the\naccount it runs under has no permissions to alter objects outside the\n`webapp` namespace.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 1040,
                  "startColumn": 3,
                  "endLine": 1040,
                  "endColumn": 12,
                  "snippet": {
                    "text": "be created by a cluster administrator and preferably be managed by a\n[Kustomization](https://fluxcd.io/flux/components/kustomize/kustomizations/).\n\nThe Service Account can then be referenced in the HelmRelease:\n\n```yaml\n---\n",
                    "rendered": {
                      "text": "be created by a cluster administrator and preferably be managed by a\n[Kustomization](https://fluxcd.io/flux/components/kustomize/kustomizations/).\n\nThe Service Account can then be referenced in the HelmRelease:\n\n```yaml\n---\n",
                      "markdown": "`be created by a cluster administrator and preferably be managed by a\n[Kustomization](https://fluxcd.io/flux/components/kustomize/kustomizations/).\n\nThe Service Account can then be referenced in the HelmRelease:\n\n```yaml\n---\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 995,
                  "startColumn": 26,
                  "endLine": 995,
                  "endColumn": 35,
                  "snippet": {
                    "text": "you can create a Service Account with a RoleBinding that grants access only to\nthat namespace.\n\nFor example, the following Service Account and RoleBinding restricts the\nHelmRelease to the `webapp` namespace:\n\n```yaml\n",
                    "rendered": {
                      "text": "you can create a Service Account with a RoleBinding that grants access only to\nthat namespace.\n\nFor example, the following Service Account and RoleBinding restricts the\nHelmRelease to the `webapp` namespace:\n\n```yaml\n",
                      "markdown": "`you can create a Service Account with a RoleBinding that grants access only to\nthat namespace.\n\nFor example, the following Service Account and RoleBinding restricts the\nHelmRelease to the `webapp` namespace:\n\n```yaml\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 992,
                  "startColumn": 16,
                  "endLine": 992,
                  "endColumn": 25,
                  "snippet": {
                    "text": "[`.spec.serviceAccountName`](#service-account-reference).\n\nAssuming you want to restrict a group of HelmReleases to a single namespace,\nyou can create a Service Account with a RoleBinding that grants access only to\nthat namespace.\n\nFor example, the following Service Account and RoleBinding restricts the\n",
                    "rendered": {
                      "text": "[`.spec.serviceAccountName`](#service-account-reference).\n\nAssuming you want to restrict a group of HelmReleases to a single namespace,\nyou can create a Service Account with a RoleBinding that grants access only to\nthat namespace.\n\nFor example, the following Service Account and RoleBinding restricts the\n",
                      "markdown": "`[`.spec.serviceAccountName`](#service-account-reference).\n\nAssuming you want to restrict a group of HelmReleases to a single namespace,\nyou can create a Service Account with a RoleBinding that grants access only to\nthat namespace.\n\nFor example, the following Service Account and RoleBinding restricts the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 987,
                  "startColumn": 63,
                  "endLine": 987,
                  "endColumn": 72,
                  "snippet": {
                    "text": "\nFor certain HelmReleases, a cluster administrator may wish to restrict the\npermissions of the HelmRelease to a specific namespace or to a specific set of\nnamespaced objects. To restrict a HelmRelease, one can assign a Service Account\nunder which the reconciliation is performed using\n[`.spec.serviceAccountName`](#service-account-reference).\n\n",
                    "rendered": {
                      "text": "\nFor certain HelmReleases, a cluster administrator may wish to restrict the\npermissions of the HelmRelease to a specific namespace or to a specific set of\nnamespaced objects. To restrict a HelmRelease, one can assign a Service Account\nunder which the reconciliation is performed using\n[`.spec.serviceAccountName`](#service-account-reference).\n\n",
                      "markdown": "`\nFor certain HelmReleases, a cluster administrator may wish to restrict the\npermissions of the HelmRelease to a specific namespace or to a specific set of\nnamespaced objects. To restrict a HelmRelease, one can assign a Service Account\nunder which the reconciliation is performed using\n[`.spec.serviceAccountName`](#service-account-reference).\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 985,
                  "startColumn": 53,
                  "endLine": 985,
                  "endColumn": 59,
                  "snippet": {
                    "text": "CustomResourceDefinitions, etc.) and namespaced objects (Deployments, Ingresses,\netc.)\n\nFor certain HelmReleases, a cluster administrator may wish to restrict the\npermissions of the HelmRelease to a specific namespace or to a specific set of\nnamespaced objects. To restrict a HelmRelease, one can assign a Service Account\nunder which the reconciliation is performed using\n",
                    "rendered": {
                      "text": "CustomResourceDefinitions, etc.) and namespaced objects (Deployments, Ingresses,\netc.)\n\nFor certain HelmReleases, a cluster administrator may wish to restrict the\npermissions of the HelmRelease to a specific namespace or to a specific set of\nnamespaced objects. To restrict a HelmRelease, one can assign a Service Account\nunder which the reconciliation is performed using\n",
                      "markdown": "`CustomResourceDefinitions, etc.) and namespaced objects (Deployments, Ingresses,\netc.)\n\nFor certain HelmReleases, a cluster administrator may wish to restrict the\npermissions of the HelmRelease to a specific namespace or to a specific set of\nnamespaced objects. To restrict a HelmRelease, one can assign a Service Account\nunder which the reconciliation is performed using\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 925,
                  "startColumn": 29,
                  "endLine": 925,
                  "endColumn": 35,
                  "snippet": {
                    "text": "(CRDs) as part of a chart. However, it has no native support for\n[upgrading CRDs](https://helm.sh/docs/chart_best_practices/custom_resource_definitions/#some-caveats-and-explanations):\n\n> There is no support at this time for upgrading or deleting CRDs using Helm.\n> This was an explicit decision after much community discussion due to the\n> danger for unintentional data loss. Furthermore, there is currently no\n> community consensus around how to handle CRDs and their lifecycle. As this\n",
                    "rendered": {
                      "text": "(CRDs) as part of a chart. However, it has no native support for\n[upgrading CRDs](https://helm.sh/docs/chart_best_practices/custom_resource_definitions/#some-caveats-and-explanations):\n\n> There is no support at this time for upgrading or deleting CRDs using Helm.\n> This was an explicit decision after much community discussion due to the\n> danger for unintentional data loss. Furthermore, there is currently no\n> community consensus around how to handle CRDs and their lifecycle. As this\n",
                      "markdown": "`(CRDs) as part of a chart. However, it has no native support for\n[upgrading CRDs](https://helm.sh/docs/chart_best_practices/custom_resource_definitions/#some-caveats-and-explanations):\n\n> There is no support at this time for upgrading or deleting CRDs using Helm.\n> This was an explicit decision after much community discussion due to the\n> danger for unintentional data loss. Furthermore, there is currently no\n> community consensus around how to handle CRDs and their lifecycle. As this\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 895,
                  "startColumn": 4,
                  "endLine": 895,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n### Configuring failure handling\n\nFrom time to time, a Helm installation, upgrade, or accompanying [Helm test](#test-configuration)\nmay fail. When this happens, by default no action is taken, and the release is\nleft in a failed state. However, several automatic failure remediation options\ncan be set via [`.spec.install.remediation`](#install-remediation) and\n",
                    "rendered": {
                      "text": "\n### Configuring failure handling\n\nFrom time to time, a Helm installation, upgrade, or accompanying [Helm test](#test-configuration)\nmay fail. When this happens, by default no action is taken, and the release is\nleft in a failed state. However, several automatic failure remediation options\ncan be set via [`.spec.install.remediation`](#install-remediation) and\n",
                      "markdown": "`\n### Configuring failure handling\n\nFrom time to time, a Helm installation, upgrade, or accompanying [Helm test](#test-configuration)\nmay fail. When this happens, by default no action is taken, and the release is\nleft in a failed state. However, several automatic failure remediation options\ncan be set via [`.spec.install.remediation`](#install-remediation) and\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 880,
                  "startColumn": 18,
                  "endLine": 880,
                  "endColumn": 27,
                  "snippet": {
                    "text": "`.spec.timeout` is an optional field to specify a timeout for a Helm action like\ninstall, upgrade or rollback. The value must be in a\n[Go recognized duration string format](https://pkg.go.dev/time#ParseDuration),\ne.g. `5m30s` for a timeout of five minutes and thirty seconds. The default\nvalue is `5m0s`.\n\n### Suspend\n",
                    "rendered": {
                      "text": "`.spec.timeout` is an optional field to specify a timeout for a Helm action like\ninstall, upgrade or rollback. The value must be in a\n[Go recognized duration string format](https://pkg.go.dev/time#ParseDuration),\ne.g. `5m30s` for a timeout of five minutes and thirty seconds. The default\nvalue is `5m0s`.\n\n### Suspend\n",
                      "markdown": "``.spec.timeout` is an optional field to specify a timeout for a Helm action like\ninstall, upgrade or rollback. The value must be in a\n[Go recognized duration string format](https://pkg.go.dev/time#ParseDuration),\ne.g. `5m30s` for a timeout of five minutes and thirty seconds. The default\nvalue is `5m0s`.\n\n### Suspend\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 877,
                  "startColumn": 49,
                  "endLine": 877,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\n### Timeout\n\n`.spec.timeout` is an optional field to specify a timeout for a Helm action like\ninstall, upgrade or rollback. The value must be in a\n[Go recognized duration string format](https://pkg.go.dev/time#ParseDuration),\ne.g. `5m30s` for a timeout of five minutes and thirty seconds. The default\n",
                    "rendered": {
                      "text": "\n### Timeout\n\n`.spec.timeout` is an optional field to specify a timeout for a Helm action like\ninstall, upgrade or rollback. The value must be in a\n[Go recognized duration string format](https://pkg.go.dev/time#ParseDuration),\ne.g. `5m30s` for a timeout of five minutes and thirty seconds. The default\n",
                      "markdown": "`\n### Timeout\n\n`.spec.timeout` is an optional field to specify a timeout for a Helm action like\ninstall, upgrade or rollback. The value must be in a\n[Go recognized duration string format](https://pkg.go.dev/time#ParseDuration),\ne.g. `5m30s` for a timeout of five minutes and thirty seconds. The default\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 875,
                  "startColumn": 3,
                  "endLine": 876,
                  "snippet": {
                    "text": "set up with the same interval. For more information, please refer to the \n[helm-controller configuration options](https://fluxcd.io/flux/components/helm/options/).\n\n### Timeout\n\n`.spec.timeout` is an optional field to specify a timeout for a Helm action like\ninstall, upgrade or rollback. The value must be in a\n[Go recognized duration string format](https://pkg.go.dev/time#ParseDuration),\n",
                    "rendered": {
                      "text": "set up with the same interval. For more information, please refer to the \n[helm-controller configuration options](https://fluxcd.io/flux/components/helm/options/).\n\n### Timeout\n\n`.spec.timeout` is an optional field to specify a timeout for a Helm action like\ninstall, upgrade or rollback. The value must be in a\n[Go recognized duration string format](https://pkg.go.dev/time#ParseDuration),\n",
                      "markdown": "`set up with the same interval. For more information, please refer to the \n[helm-controller configuration options](https://fluxcd.io/flux/components/helm/options/).\n\n### Timeout\n\n`.spec.timeout` is an optional field to specify a timeout for a Helm action like\ninstall, upgrade or rollback. The value must be in a\n[Go recognized duration string format](https://pkg.go.dev/time#ParseDuration),\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 840,
                  "startColumn": 50,
                  "endLine": 840,
                  "endColumn": 59,
                  "snippet": {
                    "text": "of helm-controller.\n\nWhen both `.spec.kubeConfig` and a [Service Account reference](#service-account-reference)\nare specified, the controller will impersonate the Service Account on the\ntarget cluster.\n\nThe Helm storage is stored on the remote cluster in a namespace that equals to\n",
                    "rendered": {
                      "text": "of helm-controller.\n\nWhen both `.spec.kubeConfig` and a [Service Account reference](#service-account-reference)\nare specified, the controller will impersonate the Service Account on the\ntarget cluster.\n\nThe Helm storage is stored on the remote cluster in a namespace that equals to\n",
                      "markdown": "`of helm-controller.\n\nWhen both `.spec.kubeConfig` and a [Service Account reference](#service-account-reference)\nare specified, the controller will impersonate the Service Account on the\ntarget cluster.\n\nThe Helm storage is stored on the remote cluster in a namespace that equals to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 811,
                  "startColumn": 14,
                  "endLine": 811,
                  "endColumn": 23,
                  "snippet": {
                    "text": "`.spec.kubeConfig.secretRef.name` is an optional field to specify the name of\na Secret containing a KubeConfig. If specified, the Helm operations will be\ntargeted at the default cluster specified in this KubeConfig instead of using\nthe in-cluster Service Account.\n\nThe Secret defined in the `.secretRef` must exist in the same namespace as the\nHelmRelease. On every reconciliation, the KubeConfig bytes will be loaded from\n",
                    "rendered": {
                      "text": "`.spec.kubeConfig.secretRef.name` is an optional field to specify the name of\na Secret containing a KubeConfig. If specified, the Helm operations will be\ntargeted at the default cluster specified in this KubeConfig instead of using\nthe in-cluster Service Account.\n\nThe Secret defined in the `.secretRef` must exist in the same namespace as the\nHelmRelease. On every reconciliation, the KubeConfig bytes will be loaded from\n",
                      "markdown": "``.spec.kubeConfig.secretRef.name` is an optional field to specify the name of\na Secret containing a KubeConfig. If specified, the Helm operations will be\ntargeted at the default cluster specified in this KubeConfig instead of using\nthe in-cluster Service Account.\n\nThe Secret defined in the `.secretRef` must exist in the same namespace as the\nHelmRelease. On every reconciliation, the KubeConfig bytes will be loaded from\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 650,
                  "startColumn": 25,
                  "endLine": 650,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the uninstalltion of the release.\n  Defaults to the [global timeout value](#timeout).\n- `.deletionPropagation` (Optional): The [deletion propagation policy](https://kubernetes.io/docs/tasks/administer-cluster/use-cascading-deletion/)\n  when a Helm uninstall is performed. Valid values are `background`,\n  `foreground` and `orphan`. Defaults to `background`.\n",
                    "rendered": {
                      "text": "\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the uninstalltion of the release.\n  Defaults to the [global timeout value](#timeout).\n- `.deletionPropagation` (Optional): The [deletion propagation policy](https://kubernetes.io/docs/tasks/administer-cluster/use-cascading-deletion/)\n  when a Helm uninstall is performed. Valid values are `background`,\n  `foreground` and `orphan`. Defaults to `background`.\n",
                      "markdown": "`\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the uninstalltion of the release.\n  Defaults to the [global timeout value](#timeout).\n- `.deletionPropagation` (Optional): The [deletion propagation policy](https://kubernetes.io/docs/tasks/administer-cluster/use-cascading-deletion/)\n  when a Helm uninstall is performed. Valid values are `background`,\n  `foreground` and `orphan`. Defaults to `background`.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 648,
                  "startColumn": 28,
                  "endLine": 648,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\nThe field offers the following subfields:\n\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the uninstalltion of the release.\n  Defaults to the [global timeout value](#timeout).\n- `.deletionPropagation` (Optional): The [deletion propagation policy](https://kubernetes.io/docs/tasks/administer-cluster/use-cascading-deletion/)\n",
                    "rendered": {
                      "text": "\nThe field offers the following subfields:\n\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the uninstalltion of the release.\n  Defaults to the [global timeout value](#timeout).\n- `.deletionPropagation` (Optional): The [deletion propagation policy](https://kubernetes.io/docs/tasks/administer-cluster/use-cascading-deletion/)\n",
                      "markdown": "`\nThe field offers the following subfields:\n\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the uninstalltion of the release.\n  Defaults to the [global timeout value](#timeout).\n- `.deletionPropagation` (Optional): The [deletion propagation policy](https://kubernetes.io/docs/tasks/administer-cluster/use-cascading-deletion/)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 624,
                  "startColumn": 25,
                  "endLine": 624,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the rollback of the release.\n  Defaults to the [global timeout value](#timeout).\n- `.cleanupOnFail` (Optional): Allows deletion of new resources created during\n  the rollback of the release when it fails. Defaults to `false`.\n- `.disableHooks` (Optional): Prevents [chart hooks](https://helm.sh/docs/topics/charts_hooks/)\n",
                    "rendered": {
                      "text": "\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the rollback of the release.\n  Defaults to the [global timeout value](#timeout).\n- `.cleanupOnFail` (Optional): Allows deletion of new resources created during\n  the rollback of the release when it fails. Defaults to `false`.\n- `.disableHooks` (Optional): Prevents [chart hooks](https://helm.sh/docs/topics/charts_hooks/)\n",
                      "markdown": "`\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the rollback of the release.\n  Defaults to the [global timeout value](#timeout).\n- `.cleanupOnFail` (Optional): Allows deletion of new resources created during\n  the rollback of the release when it fails. Defaults to `false`.\n- `.disableHooks` (Optional): Prevents [chart hooks](https://helm.sh/docs/topics/charts_hooks/)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 622,
                  "startColumn": 28,
                  "endLine": 622,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\nThe field offers the following subfields:\n\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the rollback of the release.\n  Defaults to the [global timeout value](#timeout).\n- `.cleanupOnFail` (Optional): Allows deletion of new resources created during\n",
                    "rendered": {
                      "text": "\nThe field offers the following subfields:\n\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the rollback of the release.\n  Defaults to the [global timeout value](#timeout).\n- `.cleanupOnFail` (Optional): Allows deletion of new resources created during\n",
                      "markdown": "`\nThe field offers the following subfields:\n\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the rollback of the release.\n  Defaults to the [global timeout value](#timeout).\n- `.cleanupOnFail` (Optional): Allows deletion of new resources created during\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 528,
                  "startColumn": 25,
                  "endLine": 528,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the upgrade of the release.\n  Defaults to the [global timeout value](#timeout).\n- `.crds` (Optional): The Custom Resource Definition upgrade policy to use.\n  Valid values are `Skip`, `Create` and `CreateReplace`. Default is `Skip`.\n  Refer to [Custom Resource Definition lifecycle](#controlling-the-lifecycle-of-custom-resource-definitions)\n",
                    "rendered": {
                      "text": "\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the upgrade of the release.\n  Defaults to the [global timeout value](#timeout).\n- `.crds` (Optional): The Custom Resource Definition upgrade policy to use.\n  Valid values are `Skip`, `Create` and `CreateReplace`. Default is `Skip`.\n  Refer to [Custom Resource Definition lifecycle](#controlling-the-lifecycle-of-custom-resource-definitions)\n",
                      "markdown": "`\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the upgrade of the release.\n  Defaults to the [global timeout value](#timeout).\n- `.crds` (Optional): The Custom Resource Definition upgrade policy to use.\n  Valid values are `Skip`, `Create` and `CreateReplace`. Default is `Skip`.\n  Refer to [Custom Resource Definition lifecycle](#controlling-the-lifecycle-of-custom-resource-definitions)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 526,
                  "startColumn": 28,
                  "endLine": 526,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\nThe field offers the following subfields:\n\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the upgrade of the release.\n  Defaults to the [global timeout value](#timeout).\n- `.crds` (Optional): The Custom Resource Definition upgrade policy to use.\n",
                    "rendered": {
                      "text": "\nThe field offers the following subfields:\n\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the upgrade of the release.\n  Defaults to the [global timeout value](#timeout).\n- `.crds` (Optional): The Custom Resource Definition upgrade policy to use.\n",
                      "markdown": "`\nThe field offers the following subfields:\n\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the upgrade of the release.\n  Defaults to the [global timeout value](#timeout).\n- `.crds` (Optional): The Custom Resource Definition upgrade policy to use.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 479,
                  "startColumn": 25,
                  "endLine": 479,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the installation of the chart.\n  Defaults to the [global timeout value](#timeout).\n- `.crds` (Optional): The Custom Resource Definition install policy to use.\n  Valid values are `Skip`, `Create` and `CreateReplace`. Default is `Create`,\n  which will create Custom Resource Definitions when they do not exist. Refer\n",
                    "rendered": {
                      "text": "\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the installation of the chart.\n  Defaults to the [global timeout value](#timeout).\n- `.crds` (Optional): The Custom Resource Definition install policy to use.\n  Valid values are `Skip`, `Create` and `CreateReplace`. Default is `Create`,\n  which will create Custom Resource Definitions when they do not exist. Refer\n",
                      "markdown": "`\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the installation of the chart.\n  Defaults to the [global timeout value](#timeout).\n- `.crds` (Optional): The Custom Resource Definition install policy to use.\n  Valid values are `Skip`, `Create` and `CreateReplace`. Default is `Create`,\n  which will create Custom Resource Definitions when they do not exist. Refer\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 477,
                  "startColumn": 28,
                  "endLine": 477,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\nThe field offers the following subfields:\n\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the installation of the chart.\n  Defaults to the [global timeout value](#timeout).\n- `.crds` (Optional): The Custom Resource Definition install policy to use.\n",
                    "rendered": {
                      "text": "\nThe field offers the following subfields:\n\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the installation of the chart.\n  Defaults to the [global timeout value](#timeout).\n- `.crds` (Optional): The Custom Resource Definition install policy to use.\n",
                      "markdown": "`\nThe field offers the following subfields:\n\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the installation of the chart.\n  Defaults to the [global timeout value](#timeout).\n- `.crds` (Optional): The Custom Resource Definition install policy to use.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 338,
                  "startColumn": 67,
                  "endLine": 339,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n### Service Account reference\n\n`.spec.serviceAccountName` is an optional field used to specify the\nService Account to be impersonated while reconciling the HelmRelease.\nFor more information, refer to [Role-based access control](#role-based-access-control).\n\n### Persistent client\n",
                    "rendered": {
                      "text": "\n### Service Account reference\n\n`.spec.serviceAccountName` is an optional field used to specify the\nService Account to be impersonated while reconciling the HelmRelease.\nFor more information, refer to [Role-based access control](#role-based-access-control).\n\n### Persistent client\n",
                      "markdown": "`\n### Service Account reference\n\n`.spec.serviceAccountName` is an optional field used to specify the\nService Account to be impersonated while reconciling the HelmRelease.\nFor more information, refer to [Role-based access control](#role-based-access-control).\n\n### Persistent client\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 336,
                  "startColumn": 3,
                  "endLine": 336,
                  "endColumn": 12,
                  "snippet": {
                    "text": "`helm get` commands to inspect a release, the `-n` flag should target the\nstorage namespace of the HelmRelease.\n\n### Service Account reference\n\n`.spec.serviceAccountName` is an optional field used to specify the\nService Account to be impersonated while reconciling the HelmRelease.\n",
                    "rendered": {
                      "text": "`helm get` commands to inspect a release, the `-n` flag should target the\nstorage namespace of the HelmRelease.\n\n### Service Account reference\n\n`.spec.serviceAccountName` is an optional field used to specify the\nService Account to be impersonated while reconciling the HelmRelease.\n",
                      "markdown": "``helm get` commands to inspect a release, the `-n` flag should target the\nstorage namespace of the HelmRelease.\n\n### Service Account reference\n\n`.spec.serviceAccountName` is an optional field used to specify the\nService Account to be impersonated while reconciling the HelmRelease.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 305,
                  "startColumn": 78,
                  "endLine": 306,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\n**Note:** When the composition exceeds the maximum length of 53 characters, the\nname is shortened by hashing the release name with SHA-256. The resulting name\nis then composed of the first 40 characters of the release name, followed by a\ndash (`-`), followed by the first 12 characters of the hash. For example,\n`a-very-lengthy-target-namespace-with-a-nice-object-name` becomes\n`a-very-lengthy-target-namespace-with-a-nic-97af5d7f41f3`.\n\n",
                    "rendered": {
                      "text": "\n**Note:** When the composition exceeds the maximum length of 53 characters, the\nname is shortened by hashing the release name with SHA-256. The resulting name\nis then composed of the first 40 characters of the release name, followed by a\ndash (`-`), followed by the first 12 characters of the hash. For example,\n`a-very-lengthy-target-namespace-with-a-nice-object-name` becomes\n`a-very-lengthy-target-namespace-with-a-nic-97af5d7f41f3`.\n\n",
                      "markdown": "`\n**Note:** When the composition exceeds the maximum length of 53 characters, the\nname is shortened by hashing the release name with SHA-256. The resulting name\nis then composed of the first 40 characters of the release name, followed by a\ndash (`-`), followed by the first 12 characters of the hash. For example,\n`a-very-lengthy-target-namespace-with-a-nice-object-name` becomes\n`a-very-lengthy-target-namespace-with-a-nic-97af5d7f41f3`.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 18,
                  "endLine": 147,
                  "endColumn": 27,
                  "snippet": {
                    "text": "           Last Completed:  2023-12-04T14:17:45Z\n           Last Started:    2023-12-04T14:17:42Z\n           Phase:           Succeeded\n         Podinfo - Service - Test - Uibss:\n           Last Completed:           2023-12-04T14:17:47Z\n           Last Started:             2023-12-04T14:17:45Z\n           Phase:                    Succeeded\n",
                    "rendered": {
                      "text": "           Last Completed:  2023-12-04T14:17:45Z\n           Last Started:    2023-12-04T14:17:42Z\n           Phase:           Succeeded\n         Podinfo - Service - Test - Uibss:\n           Last Completed:           2023-12-04T14:17:47Z\n           Last Started:             2023-12-04T14:17:45Z\n           Phase:                    Succeeded\n",
                      "markdown": "`           Last Completed:  2023-12-04T14:17:45Z\n           Last Started:    2023-12-04T14:17:42Z\n           Phase:           Succeeded\n         Podinfo - Service - Test - Uibss:\n           Last Completed:           2023-12-04T14:17:47Z\n           Last Started:             2023-12-04T14:17:45Z\n           Phase:                    Succeeded\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2/helmreleases.md"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 47,
                  "endLine": 67,
                  "endColumn": 54,
                  "snippet": {
                    "text": "  named `podinfo` is created, pointing to the Helm repository from which the \n  podinfo chart can be installed.\n- A HelmRelease named `podinfo` is created, that will create a [HelmChart](https://fluxcd.io/flux/components/source/helmcharts/) object\n  from [the `.spec.chart`](#chart-template) and watch it for Artifact changes.\n- The controller will fetch the chart from the HelmChart's Artifact and use it\n  together with the `.spec.releaseName` and `.spec.values` to confirm if the\n  Helm release exists and is up-to-date.\n",
                    "rendered": {
                      "text": "  named `podinfo` is created, pointing to the Helm repository from which the \n  podinfo chart can be installed.\n- A HelmRelease named `podinfo` is created, that will create a [HelmChart](https://fluxcd.io/flux/components/source/helmcharts/) object\n  from [the `.spec.chart`](#chart-template) and watch it for Artifact changes.\n- The controller will fetch the chart from the HelmChart's Artifact and use it\n  together with the `.spec.releaseName` and `.spec.values` to confirm if the\n  Helm release exists and is up-to-date.\n",
                      "markdown": "`  named `podinfo` is created, pointing to the Helm repository from which the \n  podinfo chart can be installed.\n- A HelmRelease named `podinfo` is created, that will create a [HelmChart](https://fluxcd.io/flux/components/source/helmcharts/) object\n  from [the `.spec.chart`](#chart-template) and watch it for Artifact changes.\n- The controller will fetch the chart from the HelmChart's Artifact and use it\n  together with the `.spec.releaseName` and `.spec.values` to confirm if the\n  Helm release exists and is up-to-date.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/api/v2/helmrelease_types.go"
                },
                "region": {
                  "startLine": 888,
                  "endLine": 888,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// DisableHooks prevents hooks from running during the Helm rollback action.\n\t// +optional\n",
                    "rendered": {
                      "text": "\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// DisableHooks prevents hooks from running during the Helm rollback action.\n\t// +optional\n",
                      "markdown": "`\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// DisableHooks prevents hooks from running during the Helm rollback action.\n\t// +optional\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/api/v2/helmrelease_types.go"
                },
                "region": {
                  "startLine": 840,
                  "endLine": 840,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// DisableWait disables the waiting for resources to be ready after a Helm\n\t// rollback has been performed.\n",
                    "rendered": {
                      "text": "\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// DisableWait disables the waiting for resources to be ready after a Helm\n\t// rollback has been performed.\n",
                      "markdown": "`\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// DisableWait disables the waiting for resources to be ready after a Helm\n\t// rollback has been performed.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/api/v2/helmrelease_types.go"
                },
                "region": {
                  "startLine": 789,
                  "endLine": 789,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// IgnoreFailures tells the controller to skip remediation when the Helm tests\n\t// are run but fail. Can be overwritten for tests run after install or upgrade\n",
                    "rendered": {
                      "text": "\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// IgnoreFailures tells the controller to skip remediation when the Helm tests\n\t// are run but fail. Can be overwritten for tests run after install or upgrade\n",
                      "markdown": "`\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// IgnoreFailures tells the controller to skip remediation when the Helm tests\n\t// are run but fail. Can be overwritten for tests run after install or upgrade\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/api/v2/helmrelease_types.go"
                },
                "region": {
                  "startLine": 606,
                  "endLine": 606,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// Remediation holds the remediation configuration for when the Helm upgrade\n\t// action for the HelmRelease fails. The default is to not perform any action.\n",
                    "rendered": {
                      "text": "\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// Remediation holds the remediation configuration for when the Helm upgrade\n\t// action for the HelmRelease fails. The default is to not perform any action.\n",
                      "markdown": "`\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// Remediation holds the remediation configuration for when the Helm upgrade\n\t// action for the HelmRelease fails. The default is to not perform any action.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/api/v2/helmrelease_types.go"
                },
                "region": {
                  "startLine": 428,
                  "endLine": 428,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// Remediation holds the remediation configuration for when the Helm install\n\t// action for the HelmRelease fails. The default is to not perform any action.\n",
                    "rendered": {
                      "text": "\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// Remediation holds the remediation configuration for when the Helm install\n\t// action for the HelmRelease fails. The default is to not perform any action.\n",
                      "markdown": "`\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// Remediation holds the remediation configuration for when the Helm install\n\t// action for the HelmRelease fails. The default is to not perform any action.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/api/v2/helmrelease_types.go"
                },
                "region": {
                  "startLine": 135,
                  "endLine": 135,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// MaxHistory is the number of revisions saved by Helm for this HelmRelease.\n\t// Use '0' for an unlimited number of revisions; defaults to '5'.\n",
                    "rendered": {
                      "text": "\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// MaxHistory is the number of revisions saved by Helm for this HelmRelease.\n\t// Use '0' for an unlimited number of revisions; defaults to '5'.\n",
                      "markdown": "`\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// MaxHistory is the number of revisions saved by Helm for this HelmRelease.\n\t// Use '0' for an unlimited number of revisions; defaults to '5'.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/testdata/charts/crds/v2/Chart.yaml"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 24,
                  "snippet": {
                    "text": "version: 1.0.0\n\n# This is the version number of the application being deployed. This version number should be\n# incremented each time you make changes to the application. Versions are not expected to\n# follow Semantic Versioning. They should reflect the version the application is using.\nappVersion: 1.0.0\n",
                    "rendered": {
                      "text": "version: 1.0.0\n\n# This is the version number of the application being deployed. This version number should be\n# incremented each time you make changes to the application. Versions are not expected to\n# follow Semantic Versioning. They should reflect the version the application is using.\nappVersion: 1.0.0\n",
                      "markdown": "`version: 1.0.0\n\n# This is the version number of the application being deployed. This version number should be\n# incremented each time you make changes to the application. Versions are not expected to\n# follow Semantic Versioning. They should reflect the version the application is using.\nappVersion: 1.0.0\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/testdata/charts/crds/v2/Chart.yaml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 75,
                  "endLine": 15,
                  "endColumn": 81,
                  "snippet": {
                    "text": "# pipeline. Library charts do not define any templates and therefore cannot be deployed.\ntype: application\n\n# This is the chart version. This version number should be incremented each time you make changes\n# to the chart and its templates, including the app version.\n# Versions are expected to follow Semantic Versioning (https://semver.org/)\nversion: 1.0.0\n",
                    "rendered": {
                      "text": "# pipeline. Library charts do not define any templates and therefore cannot be deployed.\ntype: application\n\n# This is the chart version. This version number should be incremented each time you make changes\n# to the chart and its templates, including the app version.\n# Versions are expected to follow Semantic Versioning (https://semver.org/)\nversion: 1.0.0\n",
                      "markdown": "`# pipeline. Library charts do not define any templates and therefore cannot be deployed.\ntype: application\n\n# This is the chart version. This version number should be incremented each time you make changes\n# to the chart and its templates, including the app version.\n# Versions are expected to follow Semantic Versioning (https://semver.org/)\nversion: 1.0.0\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2alpha1/helmreleases.md"
                },
                "region": {
                  "startLine": 778,
                  "startColumn": 10,
                  "endLine": 778,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\nOne can also opt-in to remediation of the last failure (when no retries remain) by setting\n`spec.<action>.remediation.remediateLastFailure` to `true`. For upgrades, this defaults\nto true if at least one retry is configured.\n\n```yaml\napiVersion: helm.fluxcd.io/v2alpha1\n",
                    "rendered": {
                      "text": "\nOne can also opt-in to remediation of the last failure (when no retries remain) by setting\n`spec.<action>.remediation.remediateLastFailure` to `true`. For upgrades, this defaults\nto true if at least one retry is configured.\n\n```yaml\napiVersion: helm.fluxcd.io/v2alpha1\n",
                      "markdown": "`\nOne can also opt-in to remediation of the last failure (when no retries remain) by setting\n`spec.<action>.remediation.remediateLastFailure` to `true`. For upgrades, this defaults\nto true if at least one retry is configured.\n\n```yaml\napiVersion: helm.fluxcd.io/v2alpha1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2alpha1/helmreleases.md"
                },
                "region": {
                  "startLine": 720,
                  "startColumn": 52,
                  "endLine": 720,
                  "endColumn": 56,
                  "snippet": {
                    "text": "```\n\n> **Note** that this does not account for upgrade ordering. Kubernetes only allows\n> applying one resource (`HelmRelease` in this case) at a time, so there is no way for the\n> controller to know when a dependency `HelmRelease` may be updated. Also, circular\n> dependencies between `HelmRelease` resources must be avoided, otherwise the\n> interdependent `HelmRelease` resources will never be reconciled.\n",
                    "rendered": {
                      "text": "```\n\n> **Note** that this does not account for upgrade ordering. Kubernetes only allows\n> applying one resource (`HelmRelease` in this case) at a time, so there is no way for the\n> controller to know when a dependency `HelmRelease` may be updated. Also, circular\n> dependencies between `HelmRelease` resources must be avoided, otherwise the\n> interdependent `HelmRelease` resources will never be reconciled.\n",
                      "markdown": "````\n\n> **Note** that this does not account for upgrade ordering. Kubernetes only allows\n> applying one resource (`HelmRelease` in this case) at a time, so there is no way for the\n> controller to know when a dependency `HelmRelease` may be updated. Also, circular\n> dependencies between `HelmRelease` resources must be avoided, otherwise the\n> interdependent `HelmRelease` resources will never be reconciled.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2alpha1/helmreleases.md"
                },
                "region": {
                  "startLine": 621,
                  "startColumn": 40,
                  "endLine": 621,
                  "endColumn": 44,
                  "snippet": {
                    "text": "If the latest Helm release revision was not made by the helm-controller, it may not match the\ndesired state, so an upgrade is made in this case as well.\n\nThe `spec.interval` tells the reconciler at which interval to reconcile the release. The\ninterval time units are `s`, `m` and `h` e.g. `interval: 5m`, the minimum value should be 60 seconds.\n\nThe reconciler can be told to reconcile the `HelmRelease` outside of the specified interval\n",
                    "rendered": {
                      "text": "If the latest Helm release revision was not made by the helm-controller, it may not match the\ndesired state, so an upgrade is made in this case as well.\n\nThe `spec.interval` tells the reconciler at which interval to reconcile the release. The\ninterval time units are `s`, `m` and `h` e.g. `interval: 5m`, the minimum value should be 60 seconds.\n\nThe reconciler can be told to reconcile the `HelmRelease` outside of the specified interval\n",
                      "markdown": "`If the latest Helm release revision was not made by the helm-controller, it may not match the\ndesired state, so an upgrade is made in this case as well.\n\nThe `spec.interval` tells the reconciler at which interval to reconcile the release. The\ninterval time units are `s`, `m` and `h` e.g. `interval: 5m`, the minimum value should be 60 seconds.\n\nThe reconciler can be told to reconcile the `HelmRelease` outside of the specified interval\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2alpha1/helmreleases.md"
                },
                "region": {
                  "startLine": 595,
                  "startColumn": 31,
                  "endLine": 595,
                  "endColumn": 35,
                  "snippet": {
                    "text": "- `targetPath` _(Optional)_: The YAML dot notation path at which the\n   value should be merged. When set, the `valuesKey` is expected to be\n   a single flat value. Defaults to `None` when omitted, which results\n   in the values getting merged at the root.\n- `optional` _(Optional)_: Whether this values reference is optional. When `true`,\n   a not found error for the values reference is ignored, but any valuesKey, targetPath or\n   transient error will still result in a reconciliation failure. Defaults to `false`\n",
                    "rendered": {
                      "text": "- `targetPath` _(Optional)_: The YAML dot notation path at which the\n   value should be merged. When set, the `valuesKey` is expected to be\n   a single flat value. Defaults to `None` when omitted, which results\n   in the values getting merged at the root.\n- `optional` _(Optional)_: Whether this values reference is optional. When `true`,\n   a not found error for the values reference is ignored, but any valuesKey, targetPath or\n   transient error will still result in a reconciliation failure. Defaults to `false`\n",
                      "markdown": "`- `targetPath` _(Optional)_: The YAML dot notation path at which the\n   value should be merged. When set, the `valuesKey` is expected to be\n   a single flat value. Defaults to `None` when omitted, which results\n   in the values getting merged at the root.\n- `optional` _(Optional)_: Whether this values reference is optional. When `true`,\n   a not found error for the values reference is ignored, but any valuesKey, targetPath or\n   transient error will still result in a reconciliation failure. Defaults to `false`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2alpha1/helmreleases.md"
                },
                "region": {
                  "startLine": 592,
                  "startColumn": 55,
                  "endLine": 592,
                  "endColumn": 59,
                  "snippet": {
                    "text": "  `HelmRelease`.\n- `valuesKey` _(Optional)_: The data key where the values.yaml or a\n   specific value can be found. Defaults to `values.yaml` when omitted.\n- `targetPath` _(Optional)_: The YAML dot notation path at which the\n   value should be merged. When set, the `valuesKey` is expected to be\n   a single flat value. Defaults to `None` when omitted, which results\n   in the values getting merged at the root.\n",
                    "rendered": {
                      "text": "  `HelmRelease`.\n- `valuesKey` _(Optional)_: The data key where the values.yaml or a\n   specific value can be found. Defaults to `values.yaml` when omitted.\n- `targetPath` _(Optional)_: The YAML dot notation path at which the\n   value should be merged. When set, the `valuesKey` is expected to be\n   a single flat value. Defaults to `None` when omitted, which results\n   in the values getting merged at the root.\n",
                      "markdown": "`  `HelmRelease`.\n- `valuesKey` _(Optional)_: The data key where the values.yaml or a\n   specific value can be found. Defaults to `values.yaml` when omitted.\n- `targetPath` _(Optional)_: The YAML dot notation path at which the\n   value should be merged. When set, the `valuesKey` is expected to be\n   a single flat value. Defaults to `None` when omitted, which results\n   in the values getting merged at the root.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2alpha1/helmreleases.md"
                },
                "region": {
                  "startLine": 556,
                  "startColumn": 42,
                  "endLine": 556,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\n* The name of the chart as made available by the `HelmRepository`\n  (without any aliases), for example: `podinfo`\n* The relative path the chart can be found at in the `GitRepository`,\n  for example: `./charts/podinfo`\n\nThe `chart.spec.version` can be a fixed semver, or any semver range\n",
                    "rendered": {
                      "text": "\n* The name of the chart as made available by the `HelmRepository`\n  (without any aliases), for example: `podinfo`\n* The relative path the chart can be found at in the `GitRepository`,\n  for example: `./charts/podinfo`\n\nThe `chart.spec.version` can be a fixed semver, or any semver range\n",
                      "markdown": "`\n* The name of the chart as made available by the `HelmRepository`\n  (without any aliases), for example: `podinfo`\n* The relative path the chart can be found at in the `GitRepository`,\n  for example: `./charts/podinfo`\n\nThe `chart.spec.version` can be a fixed semver, or any semver range\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2alpha1/helmreleases.md"
                },
                "region": {
                  "startLine": 376,
                  "startColumn": 46,
                  "endLine": 376,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\n\t// TargetPath is the YAML dot notation path the value should be merged at. When\n\t// set, the ValuesKey is expected to be a single flat value. Defaults to 'None',\n\t// which results in the values getting merged at the root.\n\t// +optional\n\tTargetPath string `json:\"targetPath,omitempty\"`\n\n",
                    "rendered": {
                      "text": "\n\t// TargetPath is the YAML dot notation path the value should be merged at. When\n\t// set, the ValuesKey is expected to be a single flat value. Defaults to 'None',\n\t// which results in the values getting merged at the root.\n\t// +optional\n\tTargetPath string `json:\"targetPath,omitempty\"`\n\n",
                      "markdown": "`\n\t// TargetPath is the YAML dot notation path the value should be merged at. When\n\t// set, the ValuesKey is expected to be a single flat value. Defaults to 'None',\n\t// which results in the values getting merged at the root.\n\t// +optional\n\tTargetPath string `json:\"targetPath,omitempty\"`\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2alpha1/helmreleases.md"
                },
                "region": {
                  "startLine": 329,
                  "startColumn": 26,
                  "endLine": 329,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n```go\n// CrossNamespaceObjectReference contains enough information to let you locate the\n// typed referenced object at cluster level.\ntype CrossNamespaceObjectReference struct {\n\t// APIVersion of the referent.\n\t// +optional\n",
                    "rendered": {
                      "text": "\n```go\n// CrossNamespaceObjectReference contains enough information to let you locate the\n// typed referenced object at cluster level.\ntype CrossNamespaceObjectReference struct {\n\t// APIVersion of the referent.\n\t// +optional\n",
                      "markdown": "`\n```go\n// CrossNamespaceObjectReference contains enough information to let you locate the\n// typed referenced object at cluster level.\ntype CrossNamespaceObjectReference struct {\n\t// APIVersion of the referent.\n\t// +optional\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2alpha1/helmreleases.md"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 12,
                  "endLine": 115,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\t// +required\n\tSourceRef CrossNamespaceObjectReference `json:\"sourceRef\"`\n\n\t// Interval at which to check the v1alpha1.Source for updates. Defaults to\n\t// 'HelmReleaseSpec.Interval'.\n\t// +optional\n\tInterval *metav1.Duration `json:\"interval,omitempty\"`\n",
                    "rendered": {
                      "text": "\t// +required\n\tSourceRef CrossNamespaceObjectReference `json:\"sourceRef\"`\n\n\t// Interval at which to check the v1alpha1.Source for updates. Defaults to\n\t// 'HelmReleaseSpec.Interval'.\n\t// +optional\n\tInterval *metav1.Duration `json:\"interval,omitempty\"`\n",
                      "markdown": "`\t// +required\n\tSourceRef CrossNamespaceObjectReference `json:\"sourceRef\"`\n\n\t// Interval at which to check the v1alpha1.Source for updates. Defaults to\n\t// 'HelmReleaseSpec.Interval'.\n\t// +optional\n\tInterval *metav1.Duration `json:\"interval,omitempty\"`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2alpha1/helmreleases.md"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 48,
                  "endLine": 102,
                  "endColumn": 52,
                  "snippet": {
                    "text": "// HelmChartTemplateSpec defines the template from which the controller will\n// generate a v1alpha1.HelmChartSpec object.\ntype HelmChartTemplateSpec struct {\n\t// The name or path the Helm chart is available at in the SourceRef.\n\t// +required\n\tChart string `json:\"chart\"`\n\n",
                    "rendered": {
                      "text": "// HelmChartTemplateSpec defines the template from which the controller will\n// generate a v1alpha1.HelmChartSpec object.\ntype HelmChartTemplateSpec struct {\n\t// The name or path the Helm chart is available at in the SourceRef.\n\t// +required\n\tChart string `json:\"chart\"`\n\n",
                      "markdown": "`// HelmChartTemplateSpec defines the template from which the controller will\n// generate a v1alpha1.HelmChartSpec object.\ntype HelmChartTemplateSpec struct {\n\t// The name or path the Helm chart is available at in the SourceRef.\n\t// +required\n\tChart string `json:\"chart\"`\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2alpha1/helmreleases.md"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 12,
                  "endLine": 20,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\t// +required\n\tChart HelmChartTemplate `json:\"chart\"`\n\n\t// Interval at which to reconcile the Helm release.\n\t// +required\n\tInterval metav1.Duration `json:\"interval\"`\n\n",
                    "rendered": {
                      "text": "\t// +required\n\tChart HelmChartTemplate `json:\"chart\"`\n\n\t// Interval at which to reconcile the Helm release.\n\t// +required\n\tInterval metav1.Duration `json:\"interval\"`\n\n",
                      "markdown": "`\t// +required\n\tChart HelmChartTemplate `json:\"chart\"`\n\n\t// Interval at which to reconcile the Helm release.\n\t// +required\n\tInterval metav1.Duration `json:\"interval\"`\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2alpha1/helmreleases.md"
                },
                "region": {
                  "startLine": 764,
                  "startColumn": 12,
                  "endLine": 764,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\n### Configuring failure remediation\n\nFrom time to time a Helm install/upgrade and accompanying [Helm test](#configuring-helm-test-actions)\nmay fail. When this occurs, by default no action is taken, and the release is left in a failed state.\nHowever, several automatic failure remediation options can be set via\n`spec.install.remediation` and `spec.upgrade.remediation`.\n",
                    "rendered": {
                      "text": "\n### Configuring failure remediation\n\nFrom time to time a Helm install/upgrade and accompanying [Helm test](#configuring-helm-test-actions)\nmay fail. When this occurs, by default no action is taken, and the release is left in a failed state.\nHowever, several automatic failure remediation options can be set via\n`spec.install.remediation` and `spec.upgrade.remediation`.\n",
                      "markdown": "`\n### Configuring failure remediation\n\nFrom time to time a Helm install/upgrade and accompanying [Helm test](#configuring-helm-test-actions)\nmay fail. When this occurs, by default no action is taken, and the release is left in a failed state.\nHowever, several automatic failure remediation options can be set via\n`spec.install.remediation` and `spec.upgrade.remediation`.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2alpha1/helmreleases.md"
                },
                "region": {
                  "startLine": 764,
                  "startColumn": 4,
                  "endLine": 764,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n### Configuring failure remediation\n\nFrom time to time a Helm install/upgrade and accompanying [Helm test](#configuring-helm-test-actions)\nmay fail. When this occurs, by default no action is taken, and the release is left in a failed state.\nHowever, several automatic failure remediation options can be set via\n`spec.install.remediation` and `spec.upgrade.remediation`.\n",
                    "rendered": {
                      "text": "\n### Configuring failure remediation\n\nFrom time to time a Helm install/upgrade and accompanying [Helm test](#configuring-helm-test-actions)\nmay fail. When this occurs, by default no action is taken, and the release is left in a failed state.\nHowever, several automatic failure remediation options can be set via\n`spec.install.remediation` and `spec.upgrade.remediation`.\n",
                      "markdown": "`\n### Configuring failure remediation\n\nFrom time to time a Helm install/upgrade and accompanying [Helm test](#configuring-helm-test-actions)\nmay fail. When this occurs, by default no action is taken, and the release is left in a failed state.\nHowever, several automatic failure remediation options can be set via\n`spec.install.remediation` and `spec.upgrade.remediation`.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2alpha1/helmreleases.md"
                },
                "region": {
                  "startLine": 633,
                  "startColumn": 3,
                  "endLine": 633,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\nReconciliation can be suspended by setting `spec.suspend` to `true`.\n\nThe timeout for any individual Kubernetes operation (like Jobs for hooks) during the performance\nof Helm actions can be configured via `spec.timeout` and can be overridden per action\nvia `spec.<action>.timeout`.\n\n",
                    "rendered": {
                      "text": "\nReconciliation can be suspended by setting `spec.suspend` to `true`.\n\nThe timeout for any individual Kubernetes operation (like Jobs for hooks) during the performance\nof Helm actions can be configured via `spec.timeout` and can be overridden per action\nvia `spec.<action>.timeout`.\n\n",
                      "markdown": "`\nReconciliation can be suspended by setting `spec.suspend` to `true`.\n\nThe timeout for any individual Kubernetes operation (like Jobs for hooks) during the performance\nof Helm actions can be configured via `spec.timeout` and can be overridden per action\nvia `spec.<action>.timeout`.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2alpha1/helmreleases.md"
                },
                "region": {
                  "startLine": 622,
                  "startColumn": 8,
                  "endLine": 622,
                  "endColumn": 14,
                  "snippet": {
                    "text": "desired state, so an upgrade is made in this case as well.\n\nThe `spec.interval` tells the reconciler at which interval to reconcile the release. The\ninterval time units are `s`, `m` and `h` e.g. `interval: 5m`, the minimum value should be 60 seconds.\n\nThe reconciler can be told to reconcile the `HelmRelease` outside of the specified interval\nby annotating the object with a `fluxcd.io/reconcileAt` annotation. For example:\n",
                    "rendered": {
                      "text": "desired state, so an upgrade is made in this case as well.\n\nThe `spec.interval` tells the reconciler at which interval to reconcile the release. The\ninterval time units are `s`, `m` and `h` e.g. `interval: 5m`, the minimum value should be 60 seconds.\n\nThe reconciler can be told to reconcile the `HelmRelease` outside of the specified interval\nby annotating the object with a `fluxcd.io/reconcileAt` annotation. For example:\n",
                      "markdown": "`desired state, so an upgrade is made in this case as well.\n\nThe `spec.interval` tells the reconciler at which interval to reconcile the release. The\ninterval time units are `s`, `m` and `h` e.g. `interval: 5m`, the minimum value should be 60 seconds.\n\nThe reconciler can be told to reconcile the `HelmRelease` outside of the specified interval\nby annotating the object with a `fluxcd.io/reconcileAt` annotation. For example:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2alpha1/helmreleases.md"
                },
                "region": {
                  "startLine": 610,
                  "startColumn": 15,
                  "endLine": 610,
                  "endColumn": 21,
                  "snippet": {
                    "text": "## Reconciliation\n\nIf no Helm release with the matching namespace/name is found it will be installed. It will\nbe upgraded any time the desired state is updated, which consists of:\n\n* `spec` (and thus `metadata.generation`)\n* Latest `HelmChart` revision available\n",
                    "rendered": {
                      "text": "## Reconciliation\n\nIf no Helm release with the matching namespace/name is found it will be installed. It will\nbe upgraded any time the desired state is updated, which consists of:\n\n* `spec` (and thus `metadata.generation`)\n* Latest `HelmChart` revision available\n",
                      "markdown": "`## Reconciliation\n\nIf no Helm release with the matching namespace/name is found it will be installed. It will\nbe upgraded any time the desired state is updated, which consists of:\n\n* `spec` (and thus `metadata.generation`)\n* Latest `HelmChart` revision available\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2alpha1/helmreleases.md"
                },
                "region": {
                  "startLine": 312,
                  "endLine": 312,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t// Jobs for hooks) during the performance of a Helm uninstall action. Defaults\n\t// to 'HelmReleaseSpec.Timeout'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// DisableHooks prevents hooks from running during the Helm rollback action.\n\t// +optional\n",
                    "rendered": {
                      "text": "\t// Jobs for hooks) during the performance of a Helm uninstall action. Defaults\n\t// to 'HelmReleaseSpec.Timeout'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// DisableHooks prevents hooks from running during the Helm rollback action.\n\t// +optional\n",
                      "markdown": "`\t// Jobs for hooks) during the performance of a Helm uninstall action. Defaults\n\t// to 'HelmReleaseSpec.Timeout'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// DisableHooks prevents hooks from running during the Helm rollback action.\n\t// +optional\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2alpha1/helmreleases.md"
                },
                "region": {
                  "startLine": 308,
                  "startColumn": 18,
                  "endLine": 308,
                  "endColumn": 24,
                  "snippet": {
                    "text": "// Uninstall holds the configuration for Helm uninstall actions for this\n// HelmRelease.\ntype Uninstall struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm uninstall action. Defaults\n\t// to 'HelmReleaseSpec.Timeout'.\n\t// +optional\n",
                    "rendered": {
                      "text": "// Uninstall holds the configuration for Helm uninstall actions for this\n// HelmRelease.\ntype Uninstall struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm uninstall action. Defaults\n\t// to 'HelmReleaseSpec.Timeout'.\n\t// +optional\n",
                      "markdown": "`// Uninstall holds the configuration for Helm uninstall actions for this\n// HelmRelease.\ntype Uninstall struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm uninstall action. Defaults\n\t// to 'HelmReleaseSpec.Timeout'.\n\t// +optional\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2alpha1/helmreleases.md"
                },
                "region": {
                  "startLine": 308,
                  "startColumn": 3,
                  "endLine": 308,
                  "endColumn": 12,
                  "snippet": {
                    "text": "// Uninstall holds the configuration for Helm uninstall actions for this\n// HelmRelease.\ntype Uninstall struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm uninstall action. Defaults\n\t// to 'HelmReleaseSpec.Timeout'.\n\t// +optional\n",
                    "rendered": {
                      "text": "// Uninstall holds the configuration for Helm uninstall actions for this\n// HelmRelease.\ntype Uninstall struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm uninstall action. Defaults\n\t// to 'HelmReleaseSpec.Timeout'.\n\t// +optional\n",
                      "markdown": "`// Uninstall holds the configuration for Helm uninstall actions for this\n// HelmRelease.\ntype Uninstall struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm uninstall action. Defaults\n\t// to 'HelmReleaseSpec.Timeout'.\n\t// +optional\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2alpha1/helmreleases.md"
                },
                "region": {
                  "startLine": 280,
                  "endLine": 280,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t// Jobs for hooks) during the performance of a Helm rollback action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// DisableWait disables the waiting for resources to be ready after a Helm\n\t// rollback has been performed.\n",
                    "rendered": {
                      "text": "\t// Jobs for hooks) during the performance of a Helm rollback action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// DisableWait disables the waiting for resources to be ready after a Helm\n\t// rollback has been performed.\n",
                      "markdown": "`\t// Jobs for hooks) during the performance of a Helm rollback action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// DisableWait disables the waiting for resources to be ready after a Helm\n\t// rollback has been performed.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2alpha1/helmreleases.md"
                },
                "region": {
                  "startLine": 276,
                  "startColumn": 18,
                  "endLine": 276,
                  "endColumn": 24,
                  "snippet": {
                    "text": "// Rollback holds the configuration for Helm rollback actions for this\n// HelmRelease.\ntype Rollback struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm rollback action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n",
                    "rendered": {
                      "text": "// Rollback holds the configuration for Helm rollback actions for this\n// HelmRelease.\ntype Rollback struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm rollback action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n",
                      "markdown": "`// Rollback holds the configuration for Helm rollback actions for this\n// HelmRelease.\ntype Rollback struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm rollback action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2alpha1/helmreleases.md"
                },
                "region": {
                  "startLine": 276,
                  "startColumn": 3,
                  "endLine": 276,
                  "endColumn": 12,
                  "snippet": {
                    "text": "// Rollback holds the configuration for Helm rollback actions for this\n// HelmRelease.\ntype Rollback struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm rollback action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n",
                    "rendered": {
                      "text": "// Rollback holds the configuration for Helm rollback actions for this\n// HelmRelease.\ntype Rollback struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm rollback action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n",
                      "markdown": "`// Rollback holds the configuration for Helm rollback actions for this\n// HelmRelease.\ntype Rollback struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm rollback action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2alpha1/helmreleases.md"
                },
                "region": {
                  "startLine": 264,
                  "endLine": 264,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t// Timeout is the time to wait for any individual Kubernetes operation during\n\t// the performance of a Helm test action. Defaults to 'HelmReleaseSpec.Timeout'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// IgnoreFailures tells the controller to skip remediation when the Helm tests\n\t// are run but fail. Can be overwritten for tests run after install or upgrade\n",
                    "rendered": {
                      "text": "\t// Timeout is the time to wait for any individual Kubernetes operation during\n\t// the performance of a Helm test action. Defaults to 'HelmReleaseSpec.Timeout'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// IgnoreFailures tells the controller to skip remediation when the Helm tests\n\t// are run but fail. Can be overwritten for tests run after install or upgrade\n",
                      "markdown": "`\t// Timeout is the time to wait for any individual Kubernetes operation during\n\t// the performance of a Helm test action. Defaults to 'HelmReleaseSpec.Timeout'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// IgnoreFailures tells the controller to skip remediation when the Helm tests\n\t// are run but fail. Can be overwritten for tests run after install or upgrade\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2alpha1/helmreleases.md"
                },
                "region": {
                  "startLine": 261,
                  "startColumn": 18,
                  "endLine": 261,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t// +optional\n\tEnable bool `json:\"enable,omitempty\"`\n\n\t// Timeout is the time to wait for any individual Kubernetes operation during\n\t// the performance of a Helm test action. Defaults to 'HelmReleaseSpec.Timeout'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n",
                    "rendered": {
                      "text": "\t// +optional\n\tEnable bool `json:\"enable,omitempty\"`\n\n\t// Timeout is the time to wait for any individual Kubernetes operation during\n\t// the performance of a Helm test action. Defaults to 'HelmReleaseSpec.Timeout'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n",
                      "markdown": "`\t// +optional\n\tEnable bool `json:\"enable,omitempty\"`\n\n\t// Timeout is the time to wait for any individual Kubernetes operation during\n\t// the performance of a Helm test action. Defaults to 'HelmReleaseSpec.Timeout'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2alpha1/helmreleases.md"
                },
                "region": {
                  "startLine": 261,
                  "startColumn": 3,
                  "endLine": 261,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t// +optional\n\tEnable bool `json:\"enable,omitempty\"`\n\n\t// Timeout is the time to wait for any individual Kubernetes operation during\n\t// the performance of a Helm test action. Defaults to 'HelmReleaseSpec.Timeout'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n",
                    "rendered": {
                      "text": "\t// +optional\n\tEnable bool `json:\"enable,omitempty\"`\n\n\t// Timeout is the time to wait for any individual Kubernetes operation during\n\t// the performance of a Helm test action. Defaults to 'HelmReleaseSpec.Timeout'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n",
                      "markdown": "`\t// +optional\n\tEnable bool `json:\"enable,omitempty\"`\n\n\t// Timeout is the time to wait for any individual Kubernetes operation during\n\t// the performance of a Helm test action. Defaults to 'HelmReleaseSpec.Timeout'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2alpha1/helmreleases.md"
                },
                "region": {
                  "startLine": 192,
                  "endLine": 192,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t// Jobs for hooks) during the performance of a Helm upgrade action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// Remediation holds the remediation configuration for when the Helm upgrade\n\t// action for the HelmRelease fails. The default is to not perform any action.\n",
                    "rendered": {
                      "text": "\t// Jobs for hooks) during the performance of a Helm upgrade action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// Remediation holds the remediation configuration for when the Helm upgrade\n\t// action for the HelmRelease fails. The default is to not perform any action.\n",
                      "markdown": "`\t// Jobs for hooks) during the performance of a Helm upgrade action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// Remediation holds the remediation configuration for when the Helm upgrade\n\t// action for the HelmRelease fails. The default is to not perform any action.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2alpha1/helmreleases.md"
                },
                "region": {
                  "startLine": 188,
                  "startColumn": 18,
                  "endLine": 188,
                  "endColumn": 24,
                  "snippet": {
                    "text": "// Upgrade holds the configuration for Helm upgrade actions for this\n// HelmRelease.\ntype Upgrade struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm upgrade action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n",
                    "rendered": {
                      "text": "// Upgrade holds the configuration for Helm upgrade actions for this\n// HelmRelease.\ntype Upgrade struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm upgrade action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n",
                      "markdown": "`// Upgrade holds the configuration for Helm upgrade actions for this\n// HelmRelease.\ntype Upgrade struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm upgrade action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2alpha1/helmreleases.md"
                },
                "region": {
                  "startLine": 188,
                  "startColumn": 3,
                  "endLine": 188,
                  "endColumn": 12,
                  "snippet": {
                    "text": "// Upgrade holds the configuration for Helm upgrade actions for this\n// HelmRelease.\ntype Upgrade struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm upgrade action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n",
                    "rendered": {
                      "text": "// Upgrade holds the configuration for Helm upgrade actions for this\n// HelmRelease.\ntype Upgrade struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm upgrade action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n",
                      "markdown": "`// Upgrade holds the configuration for Helm upgrade actions for this\n// HelmRelease.\ntype Upgrade struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm upgrade action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2alpha1/helmreleases.md"
                },
                "region": {
                  "startLine": 133,
                  "endLine": 133,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t// Jobs for hooks) during the performance of a Helm install action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// Remediation holds the remediation configuration for when the Helm install\n\t// action for the HelmRelease fails. The default is to not perform any action.\n",
                    "rendered": {
                      "text": "\t// Jobs for hooks) during the performance of a Helm install action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// Remediation holds the remediation configuration for when the Helm install\n\t// action for the HelmRelease fails. The default is to not perform any action.\n",
                      "markdown": "`\t// Jobs for hooks) during the performance of a Helm install action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// Remediation holds the remediation configuration for when the Helm install\n\t// action for the HelmRelease fails. The default is to not perform any action.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2alpha1/helmreleases.md"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 18,
                  "endLine": 129,
                  "endColumn": 24,
                  "snippet": {
                    "text": "// Install holds the configuration for Helm install actions performed for this\n// HelmRelease.\ntype Install struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm install action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n",
                    "rendered": {
                      "text": "// Install holds the configuration for Helm install actions performed for this\n// HelmRelease.\ntype Install struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm install action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n",
                      "markdown": "`// Install holds the configuration for Helm install actions performed for this\n// HelmRelease.\ntype Install struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm install action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2alpha1/helmreleases.md"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 3,
                  "endLine": 129,
                  "endColumn": 12,
                  "snippet": {
                    "text": "// Install holds the configuration for Helm install actions performed for this\n// HelmRelease.\ntype Install struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm install action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n",
                    "rendered": {
                      "text": "// Install holds the configuration for Helm install actions performed for this\n// HelmRelease.\ntype Install struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm install action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n",
                      "markdown": "`// Install holds the configuration for Helm install actions performed for this\n// HelmRelease.\ntype Install struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm install action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2alpha1/helmreleases.md"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t// Timeout is the time to wait for any individual Kubernetes operation (like Jobs\n\t// for hooks) during the performance of a Helm action. Defaults to '5m0s'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// MaxHistory is the number of revisions saved by Helm for this HelmRelease.\n\t// Use '0' for an unlimited number of revisions; defaults to '10'.\n",
                    "rendered": {
                      "text": "\t// Timeout is the time to wait for any individual Kubernetes operation (like Jobs\n\t// for hooks) during the performance of a Helm action. Defaults to '5m0s'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// MaxHistory is the number of revisions saved by Helm for this HelmRelease.\n\t// Use '0' for an unlimited number of revisions; defaults to '10'.\n",
                      "markdown": "`\t// Timeout is the time to wait for any individual Kubernetes operation (like Jobs\n\t// for hooks) during the performance of a Helm action. Defaults to '5m0s'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// MaxHistory is the number of revisions saved by Helm for this HelmRelease.\n\t// Use '0' for an unlimited number of revisions; defaults to '10'.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2alpha1/helmreleases.md"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 18,
                  "endLine": 51,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t// +optional\n\tDependsOn []dependency.CrossNamespaceDependencyReference `json:\"dependsOn,omitempty\"`\n\n\t// Timeout is the time to wait for any individual Kubernetes operation (like Jobs\n\t// for hooks) during the performance of a Helm action. Defaults to '5m0s'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n",
                    "rendered": {
                      "text": "\t// +optional\n\tDependsOn []dependency.CrossNamespaceDependencyReference `json:\"dependsOn,omitempty\"`\n\n\t// Timeout is the time to wait for any individual Kubernetes operation (like Jobs\n\t// for hooks) during the performance of a Helm action. Defaults to '5m0s'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n",
                      "markdown": "`\t// +optional\n\tDependsOn []dependency.CrossNamespaceDependencyReference `json:\"dependsOn,omitempty\"`\n\n\t// Timeout is the time to wait for any individual Kubernetes operation (like Jobs\n\t// for hooks) during the performance of a Helm action. Defaults to '5m0s'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2alpha1/helmreleases.md"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 3,
                  "endLine": 51,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t// +optional\n\tDependsOn []dependency.CrossNamespaceDependencyReference `json:\"dependsOn,omitempty\"`\n\n\t// Timeout is the time to wait for any individual Kubernetes operation (like Jobs\n\t// for hooks) during the performance of a Helm action. Defaults to '5m0s'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n",
                    "rendered": {
                      "text": "\t// +optional\n\tDependsOn []dependency.CrossNamespaceDependencyReference `json:\"dependsOn,omitempty\"`\n\n\t// Timeout is the time to wait for any individual Kubernetes operation (like Jobs\n\t// for hooks) during the performance of a Helm action. Defaults to '5m0s'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n",
                      "markdown": "`\t// +optional\n\tDependsOn []dependency.CrossNamespaceDependencyReference `json:\"dependsOn,omitempty\"`\n\n\t// Timeout is the time to wait for any individual Kubernetes operation (like Jobs\n\t// for hooks) during the performance of a Helm action. Defaults to '5m0s'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 16,
                  "endLine": 149,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t// binaries and credentials to the Pod that is responsible for reconciling\n\t// the HelmRelease.\n\t// +required\n\tSecretRef meta.SecretKeyReference `json:\"secretRef,omitempty\"`\n}\n\n// HelmChartTemplate defines the template from which the controller will\n",
                    "rendered": {
                      "text": "\t// binaries and credentials to the Pod that is responsible for reconciling\n\t// the HelmRelease.\n\t// +required\n\tSecretRef meta.SecretKeyReference `json:\"secretRef,omitempty\"`\n}\n\n// HelmChartTemplate defines the template from which the controller will\n",
                      "markdown": "`\t// binaries and credentials to the Pod that is responsible for reconciling\n\t// the HelmRelease.\n\t// +required\n\tSecretRef meta.SecretKeyReference `json:\"secretRef,omitempty\"`\n}\n\n// HelmChartTemplate defines the template from which the controller will\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 1413,
                  "startColumn": 15,
                  "endLine": 1413,
                  "endColumn": 19,
                  "snippet": {
                    "text": "                value: disabled\n          - target:\n              # Ignore these objects from Flux diff as they are mutated at apply time but not\n              # at dry-run time\n              kind: PrometheusRule\n            patch: |\n              - op: add\n",
                    "rendered": {
                      "text": "                value: disabled\n          - target:\n              # Ignore these objects from Flux diff as they are mutated at apply time but not\n              # at dry-run time\n              kind: PrometheusRule\n            patch: |\n              - op: add\n",
                      "markdown": "`                value: disabled\n          - target:\n              # Ignore these objects from Flux diff as they are mutated at apply time but not\n              # at dry-run time\n              kind: PrometheusRule\n            patch: |\n              - op: add\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 1412,
                  "startColumn": 71,
                  "endLine": 1412,
                  "endColumn": 75,
                  "snippet": {
                    "text": "                path: /metadata/annotations/helm.toolkit.fluxcd.io~1driftDetection\n                value: disabled\n          - target:\n              # Ignore these objects from Flux diff as they are mutated at apply time but not\n              # at dry-run time\n              kind: PrometheusRule\n            patch: |\n",
                    "rendered": {
                      "text": "                path: /metadata/annotations/helm.toolkit.fluxcd.io~1driftDetection\n                value: disabled\n          - target:\n              # Ignore these objects from Flux diff as they are mutated at apply time but not\n              # at dry-run time\n              kind: PrometheusRule\n            patch: |\n",
                      "markdown": "`                path: /metadata/annotations/helm.toolkit.fluxcd.io~1driftDetection\n                value: disabled\n          - target:\n              # Ignore these objects from Flux diff as they are mutated at apply time but not\n              # at dry-run time\n              kind: PrometheusRule\n            patch: |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 1300,
                  "startColumn": 34,
                  "endLine": 1300,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\n- `Skip` Skip CRDs do neither install nor replace (update) any CRDs.\n- `Create` Only create new CRDs which do not yet exist, neither update nor delete any existing CRDs.\n- `CreateReplace` Create new CRDs, update (replace) existing ones, but do **not** delete CRDs which\n  no longer exist in the current helm release.\n\n**Example**:\n",
                    "rendered": {
                      "text": "\n- `Skip` Skip CRDs do neither install nor replace (update) any CRDs.\n- `Create` Only create new CRDs which do not yet exist, neither update nor delete any existing CRDs.\n- `CreateReplace` Create new CRDs, update (replace) existing ones, but do **not** delete CRDs which\n  no longer exist in the current helm release.\n\n**Example**:\n",
                      "markdown": "`\n- `Skip` Skip CRDs do neither install nor replace (update) any CRDs.\n- `Create` Only create new CRDs which do not yet exist, neither update nor delete any existing CRDs.\n- `CreateReplace` Create new CRDs, update (replace) existing ones, but do **not** delete CRDs which\n  no longer exist in the current helm release.\n\n**Example**:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 1299,
                  "startColumn": 63,
                  "endLine": 1299,
                  "endColumn": 71,
                  "snippet": {
                    "text": "The following CRD upgrade policies are supported:\n\n- `Skip` Skip CRDs do neither install nor replace (update) any CRDs.\n- `Create` Only create new CRDs which do not yet exist, neither update nor delete any existing CRDs.\n- `CreateReplace` Create new CRDs, update (replace) existing ones, but do **not** delete CRDs which\n  no longer exist in the current helm release.\n\n",
                    "rendered": {
                      "text": "The following CRD upgrade policies are supported:\n\n- `Skip` Skip CRDs do neither install nor replace (update) any CRDs.\n- `Create` Only create new CRDs which do not yet exist, neither update nor delete any existing CRDs.\n- `CreateReplace` Create new CRDs, update (replace) existing ones, but do **not** delete CRDs which\n  no longer exist in the current helm release.\n\n",
                      "markdown": "`The following CRD upgrade policies are supported:\n\n- `Skip` Skip CRDs do neither install nor replace (update) any CRDs.\n- `Create` Only create new CRDs which do not yet exist, neither update nor delete any existing CRDs.\n- `CreateReplace` Create new CRDs, update (replace) existing ones, but do **not** delete CRDs which\n  no longer exist in the current helm release.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 1281,
                  "startColumn": 21,
                  "endLine": 1281,
                  "endColumn": 25,
                  "snippet": {
                    "text": "t [installing CRDs](https://helm.sh/docs/chart_best_practices/custom_resource_definitions/#method-1-let-helm-do-it-for-you),\nbut it has no native support for [upgrading CRDs](https://helm.sh/docs/chart_best_practices/custom_resource_definitions/#some-caveats-and-explanations):\n\n> There is no support at this time for upgrading or deleting CRDs using Helm.\n> This was an explicit decision after much community discussion due to the danger for unintentional\n> data loss. Furthermore, there is currently no community consensus around how to handle CRDs and\n> their lifecycle. As this evolves, Helm will add",
                    "rendered": {
                      "text": "t [installing CRDs](https://helm.sh/docs/chart_best_practices/custom_resource_definitions/#method-1-let-helm-do-it-for-you),\nbut it has no native support for [upgrading CRDs](https://helm.sh/docs/chart_best_practices/custom_resource_definitions/#some-caveats-and-explanations):\n\n> There is no support at this time for upgrading or deleting CRDs using Helm.\n> This was an explicit decision after much community discussion due to the danger for unintentional\n> data loss. Furthermore, there is currently no community consensus around how to handle CRDs and\n> their lifecycle. As this evolves, Helm will add",
                      "markdown": "`t [installing CRDs](https://helm.sh/docs/chart_best_practices/custom_resource_definitions/#method-1-let-helm-do-it-for-you),\nbut it has no native support for [upgrading CRDs](https://helm.sh/docs/chart_best_practices/custom_resource_definitions/#some-caveats-and-explanations):\n\n> There is no support at this time for upgrading or deleting CRDs using Helm.\n> This was an explicit decision after much community discussion due to the danger for unintentional\n> data loss. Furthermore, there is currently no community consensus around how to handle CRDs and\n> their lifecycle. As this evolves, Helm will add`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 1186,
                  "startColumn": 42,
                  "endLine": 1186,
                  "endColumn": 46,
                  "snippet": {
                    "text": "      retries: -1\n```\n\nThe Cluster and HelmRelease can be created at the same time if the install remediation\nconfiguration is set to a forgiving amount of retries. The HelmRelease will then eventually\nreconcile once the cluster is available.\n\n",
                    "rendered": {
                      "text": "      retries: -1\n```\n\nThe Cluster and HelmRelease can be created at the same time if the install remediation\nconfiguration is set to a forgiving amount of retries. The HelmRelease will then eventually\nreconcile once the cluster is available.\n\n",
                      "markdown": "`      retries: -1\n```\n\nThe Cluster and HelmRelease can be created at the same time if the install remediation\nconfiguration is set to a forgiving amount of retries. The HelmRelease will then eventually\nreconcile once the cluster is available.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 1031,
                  "startColumn": 54,
                  "endLine": 1031,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\nBy default, a `HelmRelease` runs under the cluster admin account and can create, modify, delete cluster level objects\n(cluster roles, cluster role binding, CRDs, etc) and namespaced objects (deployments, ingresses, etc).\nFor certain `HelmReleases` a cluster admin may wish to control what types of Kubernetes objects can\nbe reconciled and under which namespace.\nTo restrict a `HelmRelease`, one can assign a service account under which the reconciliation is performed.\n\n",
                    "rendered": {
                      "text": "\nBy default, a `HelmRelease` runs under the cluster admin account and can create, modify, delete cluster level objects\n(cluster roles, cluster role binding, CRDs, etc) and namespaced objects (deployments, ingresses, etc).\nFor certain `HelmReleases` a cluster admin may wish to control what types of Kubernetes objects can\nbe reconciled and under which namespace.\nTo restrict a `HelmRelease`, one can assign a service account under which the reconciliation is performed.\n\n",
                      "markdown": "`\nBy default, a `HelmRelease` runs under the cluster admin account and can create, modify, delete cluster level objects\n(cluster roles, cluster role binding, CRDs, etc) and namespaced objects (deployments, ingresses, etc).\nFor certain `HelmReleases` a cluster admin may wish to control what types of Kubernetes objects can\nbe reconciled and under which namespace.\nTo restrict a `HelmRelease`, one can assign a service account under which the reconciliation is performed.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 1027,
                  "startColumn": 20,
                  "endLine": 1028,
                  "snippet": {
                    "text": "        memory: 64Mi\n```\n\n## Role-based access control\n\nBy default, a `HelmRelease` runs under the cluster admin account and can create, modify, delete cluster level objects\n(cluster roles, cluster role binding, CRDs, etc) and namespaced objects (deployments, ingresses, etc).\nFor certain `HelmReleases` a cluster admin may wish to control what types of Kubernetes objects can\n",
                    "rendered": {
                      "text": "        memory: 64Mi\n```\n\n## Role-based access control\n\nBy default, a `HelmRelease` runs under the cluster admin account and can create, modify, delete cluster level objects\n(cluster roles, cluster role binding, CRDs, etc) and namespaced objects (deployments, ingresses, etc).\nFor certain `HelmReleases` a cluster admin may wish to control what types of Kubernetes objects can\n",
                      "markdown": "`        memory: 64Mi\n```\n\n## Role-based access control\n\nBy default, a `HelmRelease` runs under the cluster admin account and can create, modify, delete cluster level objects\n(cluster roles, cluster role binding, CRDs, etc) and namespaced objects (deployments, ingresses, etc).\nFor certain `HelmReleases` a cluster admin may wish to control what types of Kubernetes objects can\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 995,
                  "startColumn": 10,
                  "endLine": 995,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\nOne can also opt-in to remediation of the last failure (when no retries remain) by setting\n`spec.<action>.remediation.remediateLastFailure` to `true`. For upgrades, this defaults\nto true if at least one retry is configured.\n\n```yaml\napiVersion: helm.toolkit.fluxcd.io/v2beta1\n",
                    "rendered": {
                      "text": "\nOne can also opt-in to remediation of the last failure (when no retries remain) by setting\n`spec.<action>.remediation.remediateLastFailure` to `true`. For upgrades, this defaults\nto true if at least one retry is configured.\n\n```yaml\napiVersion: helm.toolkit.fluxcd.io/v2beta1\n",
                      "markdown": "`\nOne can also opt-in to remediation of the last failure (when no retries remain) by setting\n`spec.<action>.remediation.remediateLastFailure` to `true`. For upgrades, this defaults\nto true if at least one retry is configured.\n\n```yaml\napiVersion: helm.toolkit.fluxcd.io/v2beta1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 935,
                  "startColumn": 52,
                  "endLine": 935,
                  "endColumn": 56,
                  "snippet": {
                    "text": "```\n\n> **Note** that this does not account for upgrade ordering. Kubernetes only allows\n> applying one resource (`HelmRelease` in this case) at a time, so there is no way for the\n> controller to know when a dependency `HelmRelease` may be updated. Also, circular\n> dependencies between `HelmRelease` resources must be avoided, otherwise the\n> interdependent `HelmRelease` resources will never be reconciled.\n",
                    "rendered": {
                      "text": "```\n\n> **Note** that this does not account for upgrade ordering. Kubernetes only allows\n> applying one resource (`HelmRelease` in this case) at a time, so there is no way for the\n> controller to know when a dependency `HelmRelease` may be updated. Also, circular\n> dependencies between `HelmRelease` resources must be avoided, otherwise the\n> interdependent `HelmRelease` resources will never be reconciled.\n",
                      "markdown": "````\n\n> **Note** that this does not account for upgrade ordering. Kubernetes only allows\n> applying one resource (`HelmRelease` in this case) at a time, so there is no way for the\n> controller to know when a dependency `HelmRelease` may be updated. Also, circular\n> dependencies between `HelmRelease` resources must be avoided, otherwise the\n> interdependent `HelmRelease` resources will never be reconciled.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 824,
                  "startColumn": 40,
                  "endLine": 824,
                  "endColumn": 44,
                  "snippet": {
                    "text": "If the latest Helm release revision was not made by the helm-controller, it may not match the\ndesired state, so an upgrade is made in this case as well.\n\nThe `spec.interval` tells the reconciler at which interval to reconcile the release. The\ninterval time units are `s`, `m` and `h` e.g. `interval: 5m`, the minimum value should be 60 seconds.\n\n**Note:** The controller can be configured to apply a jitter to the interval in\n",
                    "rendered": {
                      "text": "If the latest Helm release revision was not made by the helm-controller, it may not match the\ndesired state, so an upgrade is made in this case as well.\n\nThe `spec.interval` tells the reconciler at which interval to reconcile the release. The\ninterval time units are `s`, `m` and `h` e.g. `interval: 5m`, the minimum value should be 60 seconds.\n\n**Note:** The controller can be configured to apply a jitter to the interval in\n",
                      "markdown": "`If the latest Helm release revision was not made by the helm-controller, it may not match the\ndesired state, so an upgrade is made in this case as well.\n\nThe `spec.interval` tells the reconciler at which interval to reconcile the release. The\ninterval time units are `s`, `m` and `h` e.g. `interval: 5m`, the minimum value should be 60 seconds.\n\n**Note:** The controller can be configured to apply a jitter to the interval in\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 798,
                  "startColumn": 30,
                  "endLine": 798,
                  "endColumn": 34,
                  "snippet": {
                    "text": "- `targetPath` _(Optional)_: The YAML dot notation path at which the\n  value should be merged. When set, the `valuesKey` is expected to be\n  a single flat value. Defaults to `None` when omitted, which results\n  in the values getting merged at the root.\n- `optional` _(Optional)_: Whether this values reference is optional. When `true`,\n  a not found error for the values reference is ignored, but any valuesKey, targetPath or\n  transient error will still result in a reconciliation failure. Defaults to `false`\n",
                    "rendered": {
                      "text": "- `targetPath` _(Optional)_: The YAML dot notation path at which the\n  value should be merged. When set, the `valuesKey` is expected to be\n  a single flat value. Defaults to `None` when omitted, which results\n  in the values getting merged at the root.\n- `optional` _(Optional)_: Whether this values reference is optional. When `true`,\n  a not found error for the values reference is ignored, but any valuesKey, targetPath or\n  transient error will still result in a reconciliation failure. Defaults to `false`\n",
                      "markdown": "`- `targetPath` _(Optional)_: The YAML dot notation path at which the\n  value should be merged. When set, the `valuesKey` is expected to be\n  a single flat value. Defaults to `None` when omitted, which results\n  in the values getting merged at the root.\n- `optional` _(Optional)_: Whether this values reference is optional. When `true`,\n  a not found error for the values reference is ignored, but any valuesKey, targetPath or\n  transient error will still result in a reconciliation failure. Defaults to `false`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 795,
                  "startColumn": 55,
                  "endLine": 795,
                  "endColumn": 59,
                  "snippet": {
                    "text": "  `HelmRelease`.\n- `valuesKey` _(Optional)_: The data key where the values.yaml or a\n  specific value can be found. Defaults to `values.yaml` when omitted.\n- `targetPath` _(Optional)_: The YAML dot notation path at which the\n  value should be merged. When set, the `valuesKey` is expected to be\n  a single flat value. Defaults to `None` when omitted, which results\n  in the values getting merged at the root.\n",
                    "rendered": {
                      "text": "  `HelmRelease`.\n- `valuesKey` _(Optional)_: The data key where the values.yaml or a\n  specific value can be found. Defaults to `values.yaml` when omitted.\n- `targetPath` _(Optional)_: The YAML dot notation path at which the\n  value should be merged. When set, the `valuesKey` is expected to be\n  a single flat value. Defaults to `None` when omitted, which results\n  in the values getting merged at the root.\n",
                      "markdown": "`  `HelmRelease`.\n- `valuesKey` _(Optional)_: The data key where the values.yaml or a\n  specific value can be found. Defaults to `values.yaml` when omitted.\n- `targetPath` _(Optional)_: The YAML dot notation path at which the\n  value should be merged. When set, the `valuesKey` is expected to be\n  a single flat value. Defaults to `None` when omitted, which results\n  in the values getting merged at the root.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 756,
                  "startColumn": 42,
                  "endLine": 756,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\n- The name of the chart as made available by the `HelmRepository`\n  (without any aliases), for example: `podinfo`\n- The relative path the chart can be found at in the `GitRepository`,\n  for example: `./charts/podinfo`\n\nThe `chart.spec.version` can be a fixed semver, or any semver range\n",
                    "rendered": {
                      "text": "\n- The name of the chart as made available by the `HelmRepository`\n  (without any aliases), for example: `podinfo`\n- The relative path the chart can be found at in the `GitRepository`,\n  for example: `./charts/podinfo`\n\nThe `chart.spec.version` can be a fixed semver, or any semver range\n",
                      "markdown": "`\n- The name of the chart as made available by the `HelmRepository`\n  (without any aliases), for example: `podinfo`\n- The relative path the chart can be found at in the `GitRepository`,\n  for example: `./charts/podinfo`\n\nThe `chart.spec.version` can be a fixed semver, or any semver range\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 572,
                  "startColumn": 46,
                  "endLine": 572,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\n\t// TargetPath is the YAML dot notation path the value should be merged at. When\n\t// set, the ValuesKey is expected to be a single flat value. Defaults to 'None',\n\t// which results in the values getting merged at the root.\n\t// +optional\n\tTargetPath string `json:\"targetPath,omitempty\"`\n\n",
                    "rendered": {
                      "text": "\n\t// TargetPath is the YAML dot notation path the value should be merged at. When\n\t// set, the ValuesKey is expected to be a single flat value. Defaults to 'None',\n\t// which results in the values getting merged at the root.\n\t// +optional\n\tTargetPath string `json:\"targetPath,omitempty\"`\n\n",
                      "markdown": "`\n\t// TargetPath is the YAML dot notation path the value should be merged at. When\n\t// set, the ValuesKey is expected to be a single flat value. Defaults to 'None',\n\t// which results in the values getting merged at the root.\n\t// +optional\n\tTargetPath string `json:\"targetPath,omitempty\"`\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 525,
                  "startColumn": 26,
                  "endLine": 525,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n```go\n// CrossNamespaceObjectReference contains enough information to let you locate the\n// typed referenced object at cluster level.\ntype CrossNamespaceObjectReference struct {\n\t// APIVersion of the referent.\n\t// +optional\n",
                    "rendered": {
                      "text": "\n```go\n// CrossNamespaceObjectReference contains enough information to let you locate the\n// typed referenced object at cluster level.\ntype CrossNamespaceObjectReference struct {\n\t// APIVersion of the referent.\n\t// +optional\n",
                      "markdown": "`\n```go\n// CrossNamespaceObjectReference contains enough information to let you locate the\n// typed referenced object at cluster level.\ntype CrossNamespaceObjectReference struct {\n\t// APIVersion of the referent.\n\t// +optional\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 199,
                  "startColumn": 12,
                  "endLine": 199,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\t// +required\n\tSourceRef CrossNamespaceObjectReference `json:\"sourceRef\"`\n\n\t// Interval at which to check the v1beta1.Source for updates. Defaults to\n\t// 'HelmReleaseSpec.Interval'.\n\t// +optional\n\tInterval *metav1.Duration `json:\"interval,omitempty\"`\n",
                    "rendered": {
                      "text": "\t// +required\n\tSourceRef CrossNamespaceObjectReference `json:\"sourceRef\"`\n\n\t// Interval at which to check the v1beta1.Source for updates. Defaults to\n\t// 'HelmReleaseSpec.Interval'.\n\t// +optional\n\tInterval *metav1.Duration `json:\"interval,omitempty\"`\n",
                      "markdown": "`\t// +required\n\tSourceRef CrossNamespaceObjectReference `json:\"sourceRef\"`\n\n\t// Interval at which to check the v1beta1.Source for updates. Defaults to\n\t// 'HelmReleaseSpec.Interval'.\n\t// +optional\n\tInterval *metav1.Duration `json:\"interval,omitempty\"`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 185,
                  "startColumn": 48,
                  "endLine": 185,
                  "endColumn": 52,
                  "snippet": {
                    "text": "// HelmChartTemplateSpec defines the template from which the controller will\n// generate a v1beta1.HelmChartSpec object.\ntype HelmChartTemplateSpec struct {\n\t// The name or path the Helm chart is available at in the SourceRef.\n\t// +required\n\tChart string `json:\"chart\"`\n\n",
                    "rendered": {
                      "text": "// HelmChartTemplateSpec defines the template from which the controller will\n// generate a v1beta1.HelmChartSpec object.\ntype HelmChartTemplateSpec struct {\n\t// The name or path the Helm chart is available at in the SourceRef.\n\t// +required\n\tChart string `json:\"chart\"`\n\n",
                      "markdown": "`// HelmChartTemplateSpec defines the template from which the controller will\n// generate a v1beta1.HelmChartSpec object.\ntype HelmChartTemplateSpec struct {\n\t// The name or path the Helm chart is available at in the SourceRef.\n\t// +required\n\tChart string `json:\"chart\"`\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 66,
                  "endLine": 118,
                  "endColumn": 70,
                  "snippet": {
                    "text": "\n\t// KubeConfig for reconciling the HelmRelease on a remote cluster.\n\t// When used in combination with HelmReleaseSpec.ServiceAccountName,\n\t// forces the controller to act on behalf of that Service Account at the\n\t// target cluster.\n\t// If the --default-service-account flag is set, its value will be used as\n\t// a controller level fallback for when HelmReleaseSpec.ServiceAccountName\n",
                    "rendered": {
                      "text": "\n\t// KubeConfig for reconciling the HelmRelease on a remote cluster.\n\t// When used in combination with HelmReleaseSpec.ServiceAccountName,\n\t// forces the controller to act on behalf of that Service Account at the\n\t// target cluster.\n\t// If the --default-service-account flag is set, its value will be used as\n\t// a controller level fallback for when HelmReleaseSpec.ServiceAccountName\n",
                      "markdown": "`\n\t// KubeConfig for reconciling the HelmRelease on a remote cluster.\n\t// When used in combination with HelmReleaseSpec.ServiceAccountName,\n\t// forces the controller to act on behalf of that Service Account at the\n\t// target cluster.\n\t// If the --default-service-account flag is set, its value will be used as\n\t// a controller level fallback for when HelmReleaseSpec.ServiceAccountName\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 12,
                  "endLine": 22,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\t// +required\n\tChart HelmChartTemplate `json:\"chart\"`\n\n\t// Interval at which to reconcile the Helm release.\n\t// This interval is approximate and may be subject to jitter to ensure\n\t// efficient use of resources.\n\t// +required\n",
                    "rendered": {
                      "text": "\t// +required\n\tChart HelmChartTemplate `json:\"chart\"`\n\n\t// Interval at which to reconcile the Helm release.\n\t// This interval is approximate and may be subject to jitter to ensure\n\t// efficient use of resources.\n\t// +required\n",
                      "markdown": "`\t// +required\n\tChart HelmChartTemplate `json:\"chart\"`\n\n\t// Interval at which to reconcile the Helm release.\n\t// This interval is approximate and may be subject to jitter to ensure\n\t// efficient use of resources.\n\t// +required\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 1413,
                  "startColumn": 26,
                  "endLine": 1414,
                  "snippet": {
                    "text": "                value: disabled\n          - target:\n              # Ignore these objects from Flux diff as they are mutated at apply time but not\n              # at dry-run time\n              kind: PrometheusRule\n            patch: |\n              - op: add\n                path: /metadata/annotations/helm.toolkit.fluxcd.io~1driftDetection\n",
                    "rendered": {
                      "text": "                value: disabled\n          - target:\n              # Ignore these objects from Flux diff as they are mutated at apply time but not\n              # at dry-run time\n              kind: PrometheusRule\n            patch: |\n              - op: add\n                path: /metadata/annotations/helm.toolkit.fluxcd.io~1driftDetection\n",
                      "markdown": "`                value: disabled\n          - target:\n              # Ignore these objects from Flux diff as they are mutated at apply time but not\n              # at dry-run time\n              kind: PrometheusRule\n            patch: |\n              - op: add\n                path: /metadata/annotations/helm.toolkit.fluxcd.io~1driftDetection\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 1412,
                  "startColumn": 80,
                  "endLine": 1412,
                  "endColumn": 86,
                  "snippet": {
                    "text": "                path: /metadata/annotations/helm.toolkit.fluxcd.io~1driftDetection\n                value: disabled\n          - target:\n              # Ignore these objects from Flux diff as they are mutated at apply time but not\n              # at dry-run time\n              kind: PrometheusRule\n            patch: |\n",
                    "rendered": {
                      "text": "                path: /metadata/annotations/helm.toolkit.fluxcd.io~1driftDetection\n                value: disabled\n          - target:\n              # Ignore these objects from Flux diff as they are mutated at apply time but not\n              # at dry-run time\n              kind: PrometheusRule\n            patch: |\n",
                      "markdown": "`                path: /metadata/annotations/helm.toolkit.fluxcd.io~1driftDetection\n                value: disabled\n          - target:\n              # Ignore these objects from Flux diff as they are mutated at apply time but not\n              # at dry-run time\n              kind: PrometheusRule\n            patch: |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 1412,
                  "startColumn": 46,
                  "endLine": 1412,
                  "endColumn": 52,
                  "snippet": {
                    "text": "                path: /metadata/annotations/helm.toolkit.fluxcd.io~1driftDetection\n                value: disabled\n          - target:\n              # Ignore these objects from Flux diff as they are mutated at apply time but not\n              # at dry-run time\n              kind: PrometheusRule\n            patch: |\n",
                    "rendered": {
                      "text": "                path: /metadata/annotations/helm.toolkit.fluxcd.io~1driftDetection\n                value: disabled\n          - target:\n              # Ignore these objects from Flux diff as they are mutated at apply time but not\n              # at dry-run time\n              kind: PrometheusRule\n            patch: |\n",
                      "markdown": "`                path: /metadata/annotations/helm.toolkit.fluxcd.io~1driftDetection\n                value: disabled\n          - target:\n              # Ignore these objects from Flux diff as they are mutated at apply time but not\n              # at dry-run time\n              kind: PrometheusRule\n            patch: |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 1404,
                  "startColumn": 46,
                  "endLine": 1404,
                  "endColumn": 52,
                  "snippet": {
                    "text": "    - kustomize:\n        patches:\n          - target:\n              # Ignore these objects from Flux diff as they are mutated from chart hooks\n              kind: (ValidatingWebhookConfiguration|MutatingWebhookConfiguration)\n              name: kube-prometheus-stack-admission\n            patch: |\n",
                    "rendered": {
                      "text": "    - kustomize:\n        patches:\n          - target:\n              # Ignore these objects from Flux diff as they are mutated from chart hooks\n              kind: (ValidatingWebhookConfiguration|MutatingWebhookConfiguration)\n              name: kube-prometheus-stack-admission\n            patch: |\n",
                      "markdown": "`    - kustomize:\n        patches:\n          - target:\n              # Ignore these objects from Flux diff as they are mutated from chart hooks\n              kind: (ValidatingWebhookConfiguration|MutatingWebhookConfiguration)\n              name: kube-prometheus-stack-admission\n            patch: |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 1281,
                  "startColumn": 29,
                  "endLine": 1281,
                  "endColumn": 35,
                  "snippet": {
                    "text": "lling CRDs](https://helm.sh/docs/chart_best_practices/custom_resource_definitions/#method-1-let-helm-do-it-for-you),\nbut it has no native support for [upgrading CRDs](https://helm.sh/docs/chart_best_practices/custom_resource_definitions/#some-caveats-and-explanations):\n\n> There is no support at this time for upgrading or deleting CRDs using Helm.\n> This was an explicit decision after much community discussion due to the danger for unintentional\n> data loss. Furthermore, there is currently no community consensus around how to handle CRDs and\n> their lifecycle. As this evolves, Helm will add support f",
                    "rendered": {
                      "text": "lling CRDs](https://helm.sh/docs/chart_best_practices/custom_resource_definitions/#method-1-let-helm-do-it-for-you),\nbut it has no native support for [upgrading CRDs](https://helm.sh/docs/chart_best_practices/custom_resource_definitions/#some-caveats-and-explanations):\n\n> There is no support at this time for upgrading or deleting CRDs using Helm.\n> This was an explicit decision after much community discussion due to the danger for unintentional\n> data loss. Furthermore, there is currently no community consensus around how to handle CRDs and\n> their lifecycle. As this evolves, Helm will add support f",
                      "markdown": "`lling CRDs](https://helm.sh/docs/chart_best_practices/custom_resource_definitions/#method-1-let-helm-do-it-for-you),\nbut it has no native support for [upgrading CRDs](https://helm.sh/docs/chart_best_practices/custom_resource_definitions/#some-caveats-and-explanations):\n\n> There is no support at this time for upgrading or deleting CRDs using Helm.\n> This was an explicit decision after much community discussion due to the danger for unintentional\n> data loss. Furthermore, there is currently no community consensus around how to handle CRDs and\n> their lifecycle. As this evolves, Helm will add support f`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 1205,
                  "startColumn": 35,
                  "endLine": 1205,
                  "endColumn": 44,
                  "snippet": {
                    "text": "> a custom, per-provider installation of helm-controller.\n\nWhen both `spec.kubeConfig` and `spec.ServiceAccountName` are specified,\nthe controller will impersonate the service account on the target cluster.\n\n## Post Renderers\n\n",
                    "rendered": {
                      "text": "> a custom, per-provider installation of helm-controller.\n\nWhen both `spec.kubeConfig` and `spec.ServiceAccountName` are specified,\nthe controller will impersonate the service account on the target cluster.\n\n## Post Renderers\n\n",
                      "markdown": "`> a custom, per-provider installation of helm-controller.\n\nWhen both `spec.kubeConfig` and `spec.ServiceAccountName` are specified,\nthe controller will impersonate the service account on the target cluster.\n\n## Post Renderers\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 1190,
                  "startColumn": 6,
                  "endLine": 1190,
                  "endColumn": 12,
                  "snippet": {
                    "text": "configuration is set to a forgiving amount of retries. The HelmRelease will then eventually\nreconcile once the cluster is available.\n\nIf you wish to target clusters created by other means than CAPI, you can create a ServiceAccount\non the remote cluster, generate a KubeConfig for that account, and then create a secret on the\ncluster where helm-controller is running e.g.:\n\n",
                    "rendered": {
                      "text": "configuration is set to a forgiving amount of retries. The HelmRelease will then eventually\nreconcile once the cluster is available.\n\nIf you wish to target clusters created by other means than CAPI, you can create a ServiceAccount\non the remote cluster, generate a KubeConfig for that account, and then create a secret on the\ncluster where helm-controller is running e.g.:\n\n",
                      "markdown": "`configuration is set to a forgiving amount of retries. The HelmRelease will then eventually\nreconcile once the cluster is available.\n\nIf you wish to target clusters created by other means than CAPI, you can create a ServiceAccount\non the remote cluster, generate a KubeConfig for that account, and then create a secret on the\ncluster where helm-controller is running e.g.:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 1186,
                  "startColumn": 54,
                  "endLine": 1186,
                  "endColumn": 60,
                  "snippet": {
                    "text": "      retries: -1\n```\n\nThe Cluster and HelmRelease can be created at the same time if the install remediation\nconfiguration is set to a forgiving amount of retries. The HelmRelease will then eventually\nreconcile once the cluster is available.\n\n",
                    "rendered": {
                      "text": "      retries: -1\n```\n\nThe Cluster and HelmRelease can be created at the same time if the install remediation\nconfiguration is set to a forgiving amount of retries. The HelmRelease will then eventually\nreconcile once the cluster is available.\n\n",
                      "markdown": "`      retries: -1\n```\n\nThe Cluster and HelmRelease can be created at the same time if the install remediation\nconfiguration is set to a forgiving amount of retries. The HelmRelease will then eventually\nreconcile once the cluster is available.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 1107,
                  "startColumn": 12,
                  "endLine": 1107,
                  "endColumn": 21,
                  "snippet": {
                    "text": "`--default-service-account` flag.\n\nWhen the flag is set, all HelmReleases which don't have `spec.serviceAccountName` specified\nwill use the service account name provided by `--default-service-account=<SA Name>`\nin the namespace of the object.\n\n## Remote Clusters / Cluster-API\n",
                    "rendered": {
                      "text": "`--default-service-account` flag.\n\nWhen the flag is set, all HelmReleases which don't have `spec.serviceAccountName` specified\nwill use the service account name provided by `--default-service-account=<SA Name>`\nin the namespace of the object.\n\n## Remote Clusters / Cluster-API\n",
                      "markdown": "``--default-service-account` flag.\n\nWhen the flag is set, all HelmReleases which don't have `spec.serviceAccountName` specified\nwill use the service account name provided by `--default-service-account=<SA Name>`\nin the namespace of the object.\n\n## Remote Clusters / Cluster-API\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 1076,
                  "startColumn": 13,
                  "endLine": 1076,
                  "endColumn": 18,
                  "snippet": {
                    "text": "```\n\n> **Note** that the namespace, RBAC and service account manifests should be\n> placed in a Git source and applied with a Kustomization.\n\nCreate a `HelmRelease` that prevents altering the cluster state outside of the `webapp` namespace:\n\n",
                    "rendered": {
                      "text": "```\n\n> **Note** that the namespace, RBAC and service account manifests should be\n> placed in a Git source and applied with a Kustomization.\n\nCreate a `HelmRelease` that prevents altering the cluster state outside of the `webapp` namespace:\n\n",
                      "markdown": "````\n\n> **Note** that the namespace, RBAC and service account manifests should be\n> placed in a Git source and applied with a Kustomization.\n\nCreate a `HelmRelease` that prevents altering the cluster state outside of the `webapp` namespace:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 1075,
                  "startColumn": 39,
                  "endLine": 1075,
                  "endColumn": 48,
                  "snippet": {
                    "text": "    namespace: webapp\n```\n\n> **Note** that the namespace, RBAC and service account manifests should be\n> placed in a Git source and applied with a Kustomization.\n\nCreate a `HelmRelease` that prevents altering the cluster state outside of the `webapp` namespace:\n",
                    "rendered": {
                      "text": "    namespace: webapp\n```\n\n> **Note** that the namespace, RBAC and service account manifests should be\n> placed in a Git source and applied with a Kustomization.\n\nCreate a `HelmRelease` that prevents altering the cluster state outside of the `webapp` namespace:\n",
                      "markdown": "`    namespace: webapp\n```\n\n> **Note** that the namespace, RBAC and service account manifests should be\n> placed in a Git source and applied with a Kustomization.\n\nCreate a `HelmRelease` that prevents altering the cluster state outside of the `webapp` namespace:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 1033,
                  "startColumn": 45,
                  "endLine": 1033,
                  "endColumn": 54,
                  "snippet": {
                    "text": "(cluster roles, cluster role binding, CRDs, etc) and namespaced objects (deployments, ingresses, etc).\nFor certain `HelmReleases` a cluster admin may wish to control what types of Kubernetes objects can\nbe reconciled and under which namespace.\nTo restrict a `HelmRelease`, one can assign a service account under which the reconciliation is performed.\n\nAssuming you want to restrict a group of `HelmReleases` to a single namespace, you can create an account\nwith a role binding that grants access only to that namespace:\n",
                    "rendered": {
                      "text": "(cluster roles, cluster role binding, CRDs, etc) and namespaced objects (deployments, ingresses, etc).\nFor certain `HelmReleases` a cluster admin may wish to control what types of Kubernetes objects can\nbe reconciled and under which namespace.\nTo restrict a `HelmRelease`, one can assign a service account under which the reconciliation is performed.\n\nAssuming you want to restrict a group of `HelmReleases` to a single namespace, you can create an account\nwith a role binding that grants access only to that namespace:\n",
                      "markdown": "`(cluster roles, cluster role binding, CRDs, etc) and namespaced objects (deployments, ingresses, etc).\nFor certain `HelmReleases` a cluster admin may wish to control what types of Kubernetes objects can\nbe reconciled and under which namespace.\nTo restrict a `HelmRelease`, one can assign a service account under which the reconciliation is performed.\n\nAssuming you want to restrict a group of `HelmReleases` to a single namespace, you can create an account\nwith a role binding that grants access only to that namespace:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 1031,
                  "startColumn": 46,
                  "endLine": 1031,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\nBy default, a `HelmRelease` runs under the cluster admin account and can create, modify, delete cluster level objects\n(cluster roles, cluster role binding, CRDs, etc) and namespaced objects (deployments, ingresses, etc).\nFor certain `HelmReleases` a cluster admin may wish to control what types of Kubernetes objects can\nbe reconciled and under which namespace.\nTo restrict a `HelmRelease`, one can assign a service account under which the reconciliation is performed.\n\n",
                    "rendered": {
                      "text": "\nBy default, a `HelmRelease` runs under the cluster admin account and can create, modify, delete cluster level objects\n(cluster roles, cluster role binding, CRDs, etc) and namespaced objects (deployments, ingresses, etc).\nFor certain `HelmReleases` a cluster admin may wish to control what types of Kubernetes objects can\nbe reconciled and under which namespace.\nTo restrict a `HelmRelease`, one can assign a service account under which the reconciliation is performed.\n\n",
                      "markdown": "`\nBy default, a `HelmRelease` runs under the cluster admin account and can create, modify, delete cluster level objects\n(cluster roles, cluster role binding, CRDs, etc) and namespaced objects (deployments, ingresses, etc).\nFor certain `HelmReleases` a cluster admin may wish to control what types of Kubernetes objects can\nbe reconciled and under which namespace.\nTo restrict a `HelmRelease`, one can assign a service account under which the reconciliation is performed.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 981,
                  "startColumn": 12,
                  "endLine": 981,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\n### Configuring failure remediation\n\nFrom time to time a Helm install/upgrade and accompanying [Helm test](#configuring-helm-test-actions)\nmay fail. When this occurs, by default no action is taken, and the release is left in a failed state.\nHowever, several automatic failure remediation options can be set via\n`spec.install.remediation` and `spec.upgrade.remediation`.\n",
                    "rendered": {
                      "text": "\n### Configuring failure remediation\n\nFrom time to time a Helm install/upgrade and accompanying [Helm test](#configuring-helm-test-actions)\nmay fail. When this occurs, by default no action is taken, and the release is left in a failed state.\nHowever, several automatic failure remediation options can be set via\n`spec.install.remediation` and `spec.upgrade.remediation`.\n",
                      "markdown": "`\n### Configuring failure remediation\n\nFrom time to time a Helm install/upgrade and accompanying [Helm test](#configuring-helm-test-actions)\nmay fail. When this occurs, by default no action is taken, and the release is left in a failed state.\nHowever, several automatic failure remediation options can be set via\n`spec.install.remediation` and `spec.upgrade.remediation`.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 981,
                  "startColumn": 4,
                  "endLine": 981,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n### Configuring failure remediation\n\nFrom time to time a Helm install/upgrade and accompanying [Helm test](#configuring-helm-test-actions)\nmay fail. When this occurs, by default no action is taken, and the release is left in a failed state.\nHowever, several automatic failure remediation options can be set via\n`spec.install.remediation` and `spec.upgrade.remediation`.\n",
                    "rendered": {
                      "text": "\n### Configuring failure remediation\n\nFrom time to time a Helm install/upgrade and accompanying [Helm test](#configuring-helm-test-actions)\nmay fail. When this occurs, by default no action is taken, and the release is left in a failed state.\nHowever, several automatic failure remediation options can be set via\n`spec.install.remediation` and `spec.upgrade.remediation`.\n",
                      "markdown": "`\n### Configuring failure remediation\n\nFrom time to time a Helm install/upgrade and accompanying [Helm test](#configuring-helm-test-actions)\nmay fail. When this occurs, by default no action is taken, and the release is left in a failed state.\nHowever, several automatic failure remediation options can be set via\n`spec.install.remediation` and `spec.upgrade.remediation`.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 841,
                  "startColumn": 3,
                  "endLine": 841,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\nReconciliation can be suspended by setting `spec.suspend` to `true`.\n\nThe timeout for any individual Kubernetes operation (like Jobs for hooks) during the performance\nof Helm actions can be configured via `spec.timeout` and can be overridden per action\nvia `spec.<action>.timeout`.\n\n",
                    "rendered": {
                      "text": "\nReconciliation can be suspended by setting `spec.suspend` to `true`.\n\nThe timeout for any individual Kubernetes operation (like Jobs for hooks) during the performance\nof Helm actions can be configured via `spec.timeout` and can be overridden per action\nvia `spec.<action>.timeout`.\n\n",
                      "markdown": "`\nReconciliation can be suspended by setting `spec.suspend` to `true`.\n\nThe timeout for any individual Kubernetes operation (like Jobs for hooks) during the performance\nof Helm actions can be configured via `spec.timeout` and can be overridden per action\nvia `spec.<action>.timeout`.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 825,
                  "startColumn": 8,
                  "endLine": 825,
                  "endColumn": 14,
                  "snippet": {
                    "text": "desired state, so an upgrade is made in this case as well.\n\nThe `spec.interval` tells the reconciler at which interval to reconcile the release. The\ninterval time units are `s`, `m` and `h` e.g. `interval: 5m`, the minimum value should be 60 seconds.\n\n**Note:** The controller can be configured to apply a jitter to the interval in\norder to distribute the load more evenly when multiple HelmRelease objects are\n",
                    "rendered": {
                      "text": "desired state, so an upgrade is made in this case as well.\n\nThe `spec.interval` tells the reconciler at which interval to reconcile the release. The\ninterval time units are `s`, `m` and `h` e.g. `interval: 5m`, the minimum value should be 60 seconds.\n\n**Note:** The controller can be configured to apply a jitter to the interval in\norder to distribute the load more evenly when multiple HelmRelease objects are\n",
                      "markdown": "`desired state, so an upgrade is made in this case as well.\n\nThe `spec.interval` tells the reconciler at which interval to reconcile the release. The\ninterval time units are `s`, `m` and `h` e.g. `interval: 5m`, the minimum value should be 60 seconds.\n\n**Note:** The controller can be configured to apply a jitter to the interval in\norder to distribute the load more evenly when multiple HelmRelease objects are\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 813,
                  "startColumn": 15,
                  "endLine": 813,
                  "endColumn": 21,
                  "snippet": {
                    "text": "## Reconciliation\n\nIf no Helm release with the matching namespace/name is found it will be installed. It will\nbe upgraded any time the desired state is updated, which consists of:\n\n- `spec` (and thus `metadata.generation`)\n- Latest `HelmChart` revision available\n",
                    "rendered": {
                      "text": "## Reconciliation\n\nIf no Helm release with the matching namespace/name is found it will be installed. It will\nbe upgraded any time the desired state is updated, which consists of:\n\n- `spec` (and thus `metadata.generation`)\n- Latest `HelmChart` revision available\n",
                      "markdown": "`## Reconciliation\n\nIf no Helm release with the matching namespace/name is found it will be installed. It will\nbe upgraded any time the desired state is updated, which consists of:\n\n- `spec` (and thus `metadata.generation`)\n- Latest `HelmChart` revision available\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 472,
                  "endLine": 472,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t// Jobs for hooks) during the performance of a Helm uninstall action. Defaults\n\t// to 'HelmReleaseSpec.Timeout'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// DisableHooks prevents hooks from running during the Helm rollback action.\n\t// +optional\n",
                    "rendered": {
                      "text": "\t// Jobs for hooks) during the performance of a Helm uninstall action. Defaults\n\t// to 'HelmReleaseSpec.Timeout'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// DisableHooks prevents hooks from running during the Helm rollback action.\n\t// +optional\n",
                      "markdown": "`\t// Jobs for hooks) during the performance of a Helm uninstall action. Defaults\n\t// to 'HelmReleaseSpec.Timeout'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// DisableHooks prevents hooks from running during the Helm rollback action.\n\t// +optional\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 468,
                  "startColumn": 18,
                  "endLine": 468,
                  "endColumn": 24,
                  "snippet": {
                    "text": "// Uninstall holds the configuration for Helm uninstall actions for this\n// HelmRelease.\ntype Uninstall struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm uninstall action. Defaults\n\t// to 'HelmReleaseSpec.Timeout'.\n\t// +optional\n",
                    "rendered": {
                      "text": "// Uninstall holds the configuration for Helm uninstall actions for this\n// HelmRelease.\ntype Uninstall struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm uninstall action. Defaults\n\t// to 'HelmReleaseSpec.Timeout'.\n\t// +optional\n",
                      "markdown": "`// Uninstall holds the configuration for Helm uninstall actions for this\n// HelmRelease.\ntype Uninstall struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm uninstall action. Defaults\n\t// to 'HelmReleaseSpec.Timeout'.\n\t// +optional\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 468,
                  "startColumn": 3,
                  "endLine": 468,
                  "endColumn": 12,
                  "snippet": {
                    "text": "// Uninstall holds the configuration for Helm uninstall actions for this\n// HelmRelease.\ntype Uninstall struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm uninstall action. Defaults\n\t// to 'HelmReleaseSpec.Timeout'.\n\t// +optional\n",
                    "rendered": {
                      "text": "// Uninstall holds the configuration for Helm uninstall actions for this\n// HelmRelease.\ntype Uninstall struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm uninstall action. Defaults\n\t// to 'HelmReleaseSpec.Timeout'.\n\t// +optional\n",
                      "markdown": "`// Uninstall holds the configuration for Helm uninstall actions for this\n// HelmRelease.\ntype Uninstall struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm uninstall action. Defaults\n\t// to 'HelmReleaseSpec.Timeout'.\n\t// +optional\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 435,
                  "endLine": 435,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t// Jobs for hooks) during the performance of a Helm rollback action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// DisableWait disables the waiting for resources to be ready after a Helm\n\t// rollback has been performed.\n",
                    "rendered": {
                      "text": "\t// Jobs for hooks) during the performance of a Helm rollback action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// DisableWait disables the waiting for resources to be ready after a Helm\n\t// rollback has been performed.\n",
                      "markdown": "`\t// Jobs for hooks) during the performance of a Helm rollback action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// DisableWait disables the waiting for resources to be ready after a Helm\n\t// rollback has been performed.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 431,
                  "startColumn": 18,
                  "endLine": 431,
                  "endColumn": 24,
                  "snippet": {
                    "text": "// Rollback holds the configuration for Helm rollback actions for this\n// HelmRelease.\ntype Rollback struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm rollback action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n",
                    "rendered": {
                      "text": "// Rollback holds the configuration for Helm rollback actions for this\n// HelmRelease.\ntype Rollback struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm rollback action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n",
                      "markdown": "`// Rollback holds the configuration for Helm rollback actions for this\n// HelmRelease.\ntype Rollback struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm rollback action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 431,
                  "startColumn": 3,
                  "endLine": 431,
                  "endColumn": 12,
                  "snippet": {
                    "text": "// Rollback holds the configuration for Helm rollback actions for this\n// HelmRelease.\ntype Rollback struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm rollback action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n",
                    "rendered": {
                      "text": "// Rollback holds the configuration for Helm rollback actions for this\n// HelmRelease.\ntype Rollback struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm rollback action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n",
                      "markdown": "`// Rollback holds the configuration for Helm rollback actions for this\n// HelmRelease.\ntype Rollback struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm rollback action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 419,
                  "endLine": 419,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t// Timeout is the time to wait for any individual Kubernetes operation during\n\t// the performance of a Helm test action. Defaults to 'HelmReleaseSpec.Timeout'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// IgnoreFailures tells the controller to skip remediation when the Helm tests\n\t// are run but fail. Can be overwritten for tests run after install or upgrade\n",
                    "rendered": {
                      "text": "\t// Timeout is the time to wait for any individual Kubernetes operation during\n\t// the performance of a Helm test action. Defaults to 'HelmReleaseSpec.Timeout'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// IgnoreFailures tells the controller to skip remediation when the Helm tests\n\t// are run but fail. Can be overwritten for tests run after install or upgrade\n",
                      "markdown": "`\t// Timeout is the time to wait for any individual Kubernetes operation during\n\t// the performance of a Helm test action. Defaults to 'HelmReleaseSpec.Timeout'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// IgnoreFailures tells the controller to skip remediation when the Helm tests\n\t// are run but fail. Can be overwritten for tests run after install or upgrade\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 416,
                  "startColumn": 18,
                  "endLine": 416,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t// +optional\n\tEnable bool `json:\"enable,omitempty\"`\n\n\t// Timeout is the time to wait for any individual Kubernetes operation during\n\t// the performance of a Helm test action. Defaults to 'HelmReleaseSpec.Timeout'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n",
                    "rendered": {
                      "text": "\t// +optional\n\tEnable bool `json:\"enable,omitempty\"`\n\n\t// Timeout is the time to wait for any individual Kubernetes operation during\n\t// the performance of a Helm test action. Defaults to 'HelmReleaseSpec.Timeout'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n",
                      "markdown": "`\t// +optional\n\tEnable bool `json:\"enable,omitempty\"`\n\n\t// Timeout is the time to wait for any individual Kubernetes operation during\n\t// the performance of a Helm test action. Defaults to 'HelmReleaseSpec.Timeout'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 416,
                  "startColumn": 3,
                  "endLine": 416,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t// +optional\n\tEnable bool `json:\"enable,omitempty\"`\n\n\t// Timeout is the time to wait for any individual Kubernetes operation during\n\t// the performance of a Helm test action. Defaults to 'HelmReleaseSpec.Timeout'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n",
                    "rendered": {
                      "text": "\t// +optional\n\tEnable bool `json:\"enable,omitempty\"`\n\n\t// Timeout is the time to wait for any individual Kubernetes operation during\n\t// the performance of a Helm test action. Defaults to 'HelmReleaseSpec.Timeout'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n",
                      "markdown": "`\t// +optional\n\tEnable bool `json:\"enable,omitempty\"`\n\n\t// Timeout is the time to wait for any individual Kubernetes operation during\n\t// the performance of a Helm test action. Defaults to 'HelmReleaseSpec.Timeout'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 322,
                  "endLine": 322,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t// Jobs for hooks) during the performance of a Helm upgrade action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// Remediation holds the remediation configuration for when the Helm upgrade\n\t// action for the HelmRelease fails. The default is to not perform any action.\n",
                    "rendered": {
                      "text": "\t// Jobs for hooks) during the performance of a Helm upgrade action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// Remediation holds the remediation configuration for when the Helm upgrade\n\t// action for the HelmRelease fails. The default is to not perform any action.\n",
                      "markdown": "`\t// Jobs for hooks) during the performance of a Helm upgrade action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// Remediation holds the remediation configuration for when the Helm upgrade\n\t// action for the HelmRelease fails. The default is to not perform any action.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 318,
                  "startColumn": 18,
                  "endLine": 318,
                  "endColumn": 24,
                  "snippet": {
                    "text": "// Upgrade holds the configuration for Helm upgrade actions for this\n// HelmRelease.\ntype Upgrade struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm upgrade action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n",
                    "rendered": {
                      "text": "// Upgrade holds the configuration for Helm upgrade actions for this\n// HelmRelease.\ntype Upgrade struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm upgrade action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n",
                      "markdown": "`// Upgrade holds the configuration for Helm upgrade actions for this\n// HelmRelease.\ntype Upgrade struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm upgrade action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 318,
                  "startColumn": 3,
                  "endLine": 318,
                  "endColumn": 12,
                  "snippet": {
                    "text": "// Upgrade holds the configuration for Helm upgrade actions for this\n// HelmRelease.\ntype Upgrade struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm upgrade action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n",
                    "rendered": {
                      "text": "// Upgrade holds the configuration for Helm upgrade actions for this\n// HelmRelease.\ntype Upgrade struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm upgrade action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n",
                      "markdown": "`// Upgrade holds the configuration for Helm upgrade actions for this\n// HelmRelease.\ntype Upgrade struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm upgrade action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 227,
                  "endLine": 227,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t// Jobs for hooks) during the performance of a Helm install action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// Remediation holds the remediation configuration for when the Helm install\n\t// action for the HelmRelease fails. The default is to not perform any action.\n",
                    "rendered": {
                      "text": "\t// Jobs for hooks) during the performance of a Helm install action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// Remediation holds the remediation configuration for when the Helm install\n\t// action for the HelmRelease fails. The default is to not perform any action.\n",
                      "markdown": "`\t// Jobs for hooks) during the performance of a Helm install action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// Remediation holds the remediation configuration for when the Helm install\n\t// action for the HelmRelease fails. The default is to not perform any action.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 223,
                  "startColumn": 18,
                  "endLine": 223,
                  "endColumn": 24,
                  "snippet": {
                    "text": "// Install holds the configuration for Helm install actions performed for this\n// HelmRelease.\ntype Install struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm install action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n",
                    "rendered": {
                      "text": "// Install holds the configuration for Helm install actions performed for this\n// HelmRelease.\ntype Install struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm install action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n",
                      "markdown": "`// Install holds the configuration for Helm install actions performed for this\n// HelmRelease.\ntype Install struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm install action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 223,
                  "startColumn": 3,
                  "endLine": 223,
                  "endColumn": 12,
                  "snippet": {
                    "text": "// Install holds the configuration for Helm install actions performed for this\n// HelmRelease.\ntype Install struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm install action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n",
                    "rendered": {
                      "text": "// Install holds the configuration for Helm install actions performed for this\n// HelmRelease.\ntype Install struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm install action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n",
                      "markdown": "`// Install holds the configuration for Helm install actions performed for this\n// HelmRelease.\ntype Install struct {\n\t// Timeout is the time to wait for any individual Kubernetes operation (like\n\t// Jobs for hooks) during the performance of a Helm install action. Defaults to\n\t// 'HelmReleaseSpec.Timeout'.\n\t// +optional\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 30,
                  "endLine": 126,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\t// +optional\n\tKubeConfig *KubeConfig `json:\"kubeConfig,omitempty\"`\n\n\t// The name of the Kubernetes service account to impersonate\n\t// when reconciling this HelmRelease.\n\t// +optional\n\tServiceAccountName string `json:\"serviceAccountName,omitempty\"`\n",
                    "rendered": {
                      "text": "\t// +optional\n\tKubeConfig *KubeConfig `json:\"kubeConfig,omitempty\"`\n\n\t// The name of the Kubernetes service account to impersonate\n\t// when reconciling this HelmRelease.\n\t// +optional\n\tServiceAccountName string `json:\"serviceAccountName,omitempty\"`\n",
                      "markdown": "`\t// +optional\n\tKubeConfig *KubeConfig `json:\"kubeConfig,omitempty\"`\n\n\t// The name of the Kubernetes service account to impersonate\n\t// when reconciling this HelmRelease.\n\t// +optional\n\tServiceAccountName string `json:\"serviceAccountName,omitempty\"`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 50,
                  "endLine": 118,
                  "endColumn": 59,
                  "snippet": {
                    "text": "\n\t// KubeConfig for reconciling the HelmRelease on a remote cluster.\n\t// When used in combination with HelmReleaseSpec.ServiceAccountName,\n\t// forces the controller to act on behalf of that Service Account at the\n\t// target cluster.\n\t// If the --default-service-account flag is set, its value will be used as\n\t// a controller level fallback for when HelmReleaseSpec.ServiceAccountName\n",
                    "rendered": {
                      "text": "\n\t// KubeConfig for reconciling the HelmRelease on a remote cluster.\n\t// When used in combination with HelmReleaseSpec.ServiceAccountName,\n\t// forces the controller to act on behalf of that Service Account at the\n\t// target cluster.\n\t// If the --default-service-account flag is set, its value will be used as\n\t// a controller level fallback for when HelmReleaseSpec.ServiceAccountName\n",
                      "markdown": "`\n\t// KubeConfig for reconciling the HelmRelease on a remote cluster.\n\t// When used in combination with HelmReleaseSpec.ServiceAccountName,\n\t// forces the controller to act on behalf of that Service Account at the\n\t// target cluster.\n\t// If the --default-service-account flag is set, its value will be used as\n\t// a controller level fallback for when HelmReleaseSpec.ServiceAccountName\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 66,
                  "endLine": 66,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t// Timeout is the time to wait for any individual Kubernetes operation (like Jobs\n\t// for hooks) during the performance of a Helm action. Defaults to '5m0s'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// MaxHistory is the number of revisions saved by Helm for this HelmRelease.\n\t// Use '0' for an unlimited number of revisions; defaults to '10'.\n",
                    "rendered": {
                      "text": "\t// Timeout is the time to wait for any individual Kubernetes operation (like Jobs\n\t// for hooks) during the performance of a Helm action. Defaults to '5m0s'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// MaxHistory is the number of revisions saved by Helm for this HelmRelease.\n\t// Use '0' for an unlimited number of revisions; defaults to '10'.\n",
                      "markdown": "`\t// Timeout is the time to wait for any individual Kubernetes operation (like Jobs\n\t// for hooks) during the performance of a Helm action. Defaults to '5m0s'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// MaxHistory is the number of revisions saved by Helm for this HelmRelease.\n\t// Use '0' for an unlimited number of revisions; defaults to '10'.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t// +optional\n\tDependsOn []dependency.CrossNamespaceDependencyReference `json:\"dependsOn,omitempty\"`\n\n\t// Timeout is the time to wait for any individual Kubernetes operation (like Jobs\n\t// for hooks) during the performance of a Helm action. Defaults to '5m0s'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n",
                    "rendered": {
                      "text": "\t// +optional\n\tDependsOn []dependency.CrossNamespaceDependencyReference `json:\"dependsOn,omitempty\"`\n\n\t// Timeout is the time to wait for any individual Kubernetes operation (like Jobs\n\t// for hooks) during the performance of a Helm action. Defaults to '5m0s'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n",
                      "markdown": "`\t// +optional\n\tDependsOn []dependency.CrossNamespaceDependencyReference `json:\"dependsOn,omitempty\"`\n\n\t// Timeout is the time to wait for any individual Kubernetes operation (like Jobs\n\t// for hooks) during the performance of a Helm action. Defaults to '5m0s'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta1/helmreleases.md"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 3,
                  "endLine": 63,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t// +optional\n\tDependsOn []dependency.CrossNamespaceDependencyReference `json:\"dependsOn,omitempty\"`\n\n\t// Timeout is the time to wait for any individual Kubernetes operation (like Jobs\n\t// for hooks) during the performance of a Helm action. Defaults to '5m0s'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n",
                    "rendered": {
                      "text": "\t// +optional\n\tDependsOn []dependency.CrossNamespaceDependencyReference `json:\"dependsOn,omitempty\"`\n\n\t// Timeout is the time to wait for any individual Kubernetes operation (like Jobs\n\t// for hooks) during the performance of a Helm action. Defaults to '5m0s'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n",
                      "markdown": "`\t// +optional\n\tDependsOn []dependency.CrossNamespaceDependencyReference `json:\"dependsOn,omitempty\"`\n\n\t// Timeout is the time to wait for any individual Kubernetes operation (like Jobs\n\t// for hooks) during the performance of a Helm action. Defaults to '5m0s'.\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 1683,
                  "startColumn": 22,
                  "endLine": 1684,
                  "snippet": {
                    "text": "For practical information about this field, see\n[forcing a release](#forcing-a-release).\n\n### Last Handled Reset At\n\nThe helm-controller reports the last `reconcile.fluxcd.io/resetAt`\nannotation value it acted on in the `.status.lastHandledResetAt` field.\n\n",
                    "rendered": {
                      "text": "For practical information about this field, see\n[forcing a release](#forcing-a-release).\n\n### Last Handled Reset At\n\nThe helm-controller reports the last `reconcile.fluxcd.io/resetAt`\nannotation value it acted on in the `.status.lastHandledResetAt` field.\n\n",
                      "markdown": "`For practical information about this field, see\n[forcing a release](#forcing-a-release).\n\n### Last Handled Reset At\n\nThe helm-controller reports the last `reconcile.fluxcd.io/resetAt`\nannotation value it acted on in the `.status.lastHandledResetAt` field.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 1675,
                  "startColumn": 22,
                  "endLine": 1676,
                  "snippet": {
                    "text": "For practical information about this field, see\n[triggering a reconcile](#triggering-a-reconcile).\n\n### Last Handled Force At\n\nThe helm-controller reports the last `reconcile.fluxcd.io/forceAt`\nannotation value it acted on in the `.status.lastHandledForceAt` field.\n\n",
                    "rendered": {
                      "text": "For practical information about this field, see\n[triggering a reconcile](#triggering-a-reconcile).\n\n### Last Handled Force At\n\nThe helm-controller reports the last `reconcile.fluxcd.io/forceAt`\nannotation value it acted on in the `.status.lastHandledForceAt` field.\n\n",
                      "markdown": "`For practical information about this field, see\n[triggering a reconcile](#triggering-a-reconcile).\n\n### Last Handled Force At\n\nThe helm-controller reports the last `reconcile.fluxcd.io/forceAt`\nannotation value it acted on in the `.status.lastHandledForceAt` field.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 1667,
                  "startColumn": 26,
                  "endLine": 1668,
                  "snippet": {
                    "text": "This field is used by the controller to determine the active remediation\nstrategy for the HelmRelease.\n\n### Last Handled Reconcile At\n\nThe helm-controller reports the last `reconcile.fluxcd.io/requestedAt`\nannotation value it acted on in the `.status.lastHandledReconcileAt` field.\n\n",
                    "rendered": {
                      "text": "This field is used by the controller to determine the active remediation\nstrategy for the HelmRelease.\n\n### Last Handled Reconcile At\n\nThe helm-controller reports the last `reconcile.fluxcd.io/requestedAt`\nannotation value it acted on in the `.status.lastHandledReconcileAt` field.\n\n",
                      "markdown": "`This field is used by the controller to determine the active remediation\nstrategy for the HelmRelease.\n\n### Last Handled Reconcile At\n\nThe helm-controller reports the last `reconcile.fluxcd.io/requestedAt`\nannotation value it acted on in the `.status.lastHandledReconcileAt` field.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 1601,
                  "startColumn": 7,
                  "endLine": 1601,
                  "endColumn": 11,
                  "snippet": {
                    "text": "son: InstallFailed` | `reason: UpgradeFailed` | `reason: TestFailed` | `reason: RollbackSucceeded` | `reason: UninstallSucceeded` | `reason: RollbackFailed` | `reason: UninstallFailed` | `reason: <arbitrary error>`\n\nNote that a HelmRelease can be [reconciling](#reconciling-helmrelease) while\nfailing at the same time. For example, due to a new release attempt after\nremediating a failed Helm action. When a reconciliation fails, the `Reconciling`\nCondition reason would be `ProgressingWithRetry`. When the reconciliation is\nperformed again after the failure, the reason is updated to `Progressing`.\n\n###",
                    "rendered": {
                      "text": "son: InstallFailed` | `reason: UpgradeFailed` | `reason: TestFailed` | `reason: RollbackSucceeded` | `reason: UninstallSucceeded` | `reason: RollbackFailed` | `reason: UninstallFailed` | `reason: <arbitrary error>`\n\nNote that a HelmRelease can be [reconciling](#reconciling-helmrelease) while\nfailing at the same time. For example, due to a new release attempt after\nremediating a failed Helm action. When a reconciliation fails, the `Reconciling`\nCondition reason would be `ProgressingWithRetry`. When the reconciliation is\nperformed again after the failure, the reason is updated to `Progressing`.\n\n###",
                      "markdown": "`son: InstallFailed` | `reason: UpgradeFailed` | `reason: TestFailed` | `reason: RollbackSucceeded` | `reason: UninstallSucceeded` | `reason: RollbackFailed` | `reason: UninstallFailed` | `reason: <arbitrary error>`\n\nNote that a HelmRelease can be [reconciling](#reconciling-helmrelease) while\nfailing at the same time. For example, due to a new release attempt after\nremediating a failed Helm action. When a reconciliation fails, the `Reconciling`\nCondition reason would be `ProgressingWithRetry`. When the reconciliation is\nperformed again after the failure, the reason is updated to `Progressing`.\n\n###`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 1503,
                  "startColumn": 38,
                  "endLine": 1503,
                  "endColumn": 42,
                  "snippet": {
                    "text": "- `reason: Progressing` | `reason: ProgressingWithRetry`\n\nThe Condition `message` is updated during the course of the reconciliation to\nreport the Helm action being performed at any particular moment.\n\nThe Condition has a [\"negative polarity\"](https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties),\nand is only present on the HelmRelease while the status is `\"True\"`.\n",
                    "rendered": {
                      "text": "- `reason: Progressing` | `reason: ProgressingWithRetry`\n\nThe Condition `message` is updated during the course of the reconciliation to\nreport the Helm action being performed at any particular moment.\n\nThe Condition has a [\"negative polarity\"](https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties),\nand is only present on the HelmRelease while the status is `\"True\"`.\n",
                      "markdown": "`- `reason: Progressing` | `reason: ProgressingWithRetry`\n\nThe Condition `message` is updated during the course of the reconciliation to\nreport the Helm action being performed at any particular moment.\n\nThe Condition has a [\"negative polarity\"](https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties),\nand is only present on the HelmRelease while the status is `\"True\"`.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 1131,
                  "startColumn": 42,
                  "endLine": 1131,
                  "endColumn": 46,
                  "snippet": {
                    "text": "      retries: -1\n```\n\nThe Cluster and HelmRelease can be created at the same time as long as the\n[install remediation configuration](#install-remediation) is set to a\nforgiving number of `.retries`. The HelmRelease will then eventually succeed\nin installing the Helm chart once the cluster is available.\n",
                    "rendered": {
                      "text": "      retries: -1\n```\n\nThe Cluster and HelmRelease can be created at the same time as long as the\n[install remediation configuration](#install-remediation) is set to a\nforgiving number of `.retries`. The HelmRelease will then eventually succeed\nin installing the Helm chart once the cluster is available.\n",
                      "markdown": "`      retries: -1\n```\n\nThe Cluster and HelmRelease can be created at the same time as long as the\n[install remediation configuration](#install-remediation) is set to a\nforgiving number of `.retries`. The HelmRelease will then eventually succeed\nin installing the Helm chart once the cluster is available.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 970,
                  "startColumn": 21,
                  "endLine": 971,
                  "snippet": {
                    "text": "    crds: CreateReplace\n```\n\n### Role-based access control\n\nBy default, a HelmRelease runs under the cluster admin account and can create,\nmodify, and delete cluster level objects (ClusterRoles, ClusterRoleBindings,\nCustomResourceDefinitions, etc.) and namespaced objects (Deployments, Ingresses,\n",
                    "rendered": {
                      "text": "    crds: CreateReplace\n```\n\n### Role-based access control\n\nBy default, a HelmRelease runs under the cluster admin account and can create,\nmodify, and delete cluster level objects (ClusterRoles, ClusterRoleBindings,\nCustomResourceDefinitions, etc.) and namespaced objects (Deployments, Ingresses,\n",
                      "markdown": "`    crds: CreateReplace\n```\n\n### Role-based access control\n\nBy default, a HelmRelease runs under the cluster admin account and can create,\nmodify, and delete cluster level objects (ClusterRoles, ClusterRoleBindings,\nCustomResourceDefinitions, etc.) and namespaced objects (Deployments, Ingresses,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 943,
                  "startColumn": 27,
                  "endLine": 943,
                  "endColumn": 35,
                  "snippet": {
                    "text": "- `CreateReplace`: Create new CRDs, update (replace) existing ones, but **do\n  not** delete CRDs which no longer exist in the current Helm chart.\n\nFor example, if you want to update CRDs when installing and upgrading a Helm\nchart, you can set the `.spec.install.crds` and `.spec.upgrade.crds` policies to\n`CreateReplace`:\n\n",
                    "rendered": {
                      "text": "- `CreateReplace`: Create new CRDs, update (replace) existing ones, but **do\n  not** delete CRDs which no longer exist in the current Helm chart.\n\nFor example, if you want to update CRDs when installing and upgrading a Helm\nchart, you can set the `.spec.install.crds` and `.spec.upgrade.crds` policies to\n`CreateReplace`:\n\n",
                      "markdown": "`- `CreateReplace`: Create new CRDs, update (replace) existing ones, but **do\n  not** delete CRDs which no longer exist in the current Helm chart.\n\nFor example, if you want to update CRDs when installing and upgrading a Helm\nchart, you can set the `.spec.install.crds` and `.spec.upgrade.crds` policies to\n`CreateReplace`:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 940,
                  "startColumn": 35,
                  "endLine": 940,
                  "endColumn": 43,
                  "snippet": {
                    "text": "  for `.spec.upgrade.crds`.\n- `Create`: Create CRDs if they do not exist, but do not upgrade or delete them.\n  This is the default value for `.spec.install.crds`.\n- `CreateReplace`: Create new CRDs, update (replace) existing ones, but **do\n  not** delete CRDs which no longer exist in the current Helm chart.\n\nFor example, if you want to update CRDs when installing and upgrading a Helm\n",
                    "rendered": {
                      "text": "  for `.spec.upgrade.crds`.\n- `Create`: Create CRDs if they do not exist, but do not upgrade or delete them.\n  This is the default value for `.spec.install.crds`.\n- `CreateReplace`: Create new CRDs, update (replace) existing ones, but **do\n  not** delete CRDs which no longer exist in the current Helm chart.\n\nFor example, if you want to update CRDs when installing and upgrading a Helm\n",
                      "markdown": "`  for `.spec.upgrade.crds`.\n- `Create`: Create CRDs if they do not exist, but do not upgrade or delete them.\n  This is the default value for `.spec.install.crds`.\n- `CreateReplace`: Create new CRDs, update (replace) existing ones, but **do\n  not** delete CRDs which no longer exist in the current Helm chart.\n\nFor example, if you want to update CRDs when installing and upgrading a Helm\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 917,
                  "startColumn": 21,
                  "endLine": 917,
                  "endColumn": 25,
                  "snippet": {
                    "text": "(CRDs) as part of a chart. However, it has no native support for\n[upgrading CRDs](https://helm.sh/docs/chart_best_practices/custom_resource_definitions/#some-caveats-and-explanations):\n\n> There is no support at this time for upgrading or deleting CRDs using Helm.\n> This was an explicit decision after much community discussion due to the\n> danger for unintentional data loss. Furthermore, there is currently no\n> community consensus around how to handle CRDs and their lifecycle. As this\n",
                    "rendered": {
                      "text": "(CRDs) as part of a chart. However, it has no native support for\n[upgrading CRDs](https://helm.sh/docs/chart_best_practices/custom_resource_definitions/#some-caveats-and-explanations):\n\n> There is no support at this time for upgrading or deleting CRDs using Helm.\n> This was an explicit decision after much community discussion due to the\n> danger for unintentional data loss. Furthermore, there is currently no\n> community consensus around how to handle CRDs and their lifecycle. As this\n",
                      "markdown": "`(CRDs) as part of a chart. However, it has no native support for\n[upgrading CRDs](https://helm.sh/docs/chart_best_practices/custom_resource_definitions/#some-caveats-and-explanations):\n\n> There is no support at this time for upgrading or deleting CRDs using Helm.\n> This was an explicit decision after much community discussion due to the\n> danger for unintentional data loss. Furthermore, there is currently no\n> community consensus around how to handle CRDs and their lifecycle. As this\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 902,
                  "startColumn": 45,
                  "endLine": 902,
                  "endColumn": 49,
                  "snippet": {
                    "text": "remediate the failure, and the Helm release will be left in a failed state.\nTo ensure the Helm release is brought back to the last known good state or\nuninstalled, `.remediateLastFailure` can be set to `true`.\nFor Helm upgrades, this defaults to `true` if at least one retry is configured.\n\nWhen a new release configuration or Helm chart is detected, the controller will\nreset the failure counters and attempt to install or upgrade the release again.\n",
                    "rendered": {
                      "text": "remediate the failure, and the Helm release will be left in a failed state.\nTo ensure the Helm release is brought back to the last known good state or\nuninstalled, `.remediateLastFailure` can be set to `true`.\nFor Helm upgrades, this defaults to `true` if at least one retry is configured.\n\nWhen a new release configuration or Helm chart is detected, the controller will\nreset the failure counters and attempt to install or upgrade the release again.\n",
                      "markdown": "`remediate the failure, and the Helm release will be left in a failed state.\nTo ensure the Helm release is brought back to the last known good state or\nuninstalled, `.remediateLastFailure` can be set to `true`.\nFor Helm upgrades, this defaults to `true` if at least one retry is configured.\n\nWhen a new release configuration or Helm chart is detected, the controller will\nreset the failure counters and attempt to install or upgrade the release again.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 854,
                  "startColumn": 10,
                  "endLine": 854,
                  "endColumn": 14,
                  "snippet": {
                    "text": "matches the desired state.\n\nAfter successfully reconciling the object, the controller requeues it for\ninspection at the specified interval. The value must be in a [Go recognized\nduration string format](https://pkg.go.dev/time#ParseDuration), e.g. `10m0s`\nto reconcile the object every ten minutes.\n\n",
                    "rendered": {
                      "text": "matches the desired state.\n\nAfter successfully reconciling the object, the controller requeues it for\ninspection at the specified interval. The value must be in a [Go recognized\nduration string format](https://pkg.go.dev/time#ParseDuration), e.g. `10m0s`\nto reconcile the object every ten minutes.\n\n",
                      "markdown": "`matches the desired state.\n\nAfter successfully reconciling the object, the controller requeues it for\ninspection at the specified interval. The value must be in a [Go recognized\nduration string format](https://pkg.go.dev/time#ParseDuration), e.g. `10m0s`\nto reconcile the object every ten minutes.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 849,
                  "startColumn": 64,
                  "endLine": 849,
                  "endColumn": 68,
                  "snippet": {
                    "text": "\n### Interval\n\n`.spec.interval` is a required field that specifies the interval at which the\nHelmRelease is reconciled, i.e. the controller ensures the current Helm release\nmatches the desired state.\n\n",
                    "rendered": {
                      "text": "\n### Interval\n\n`.spec.interval` is a required field that specifies the interval at which the\nHelmRelease is reconciled, i.e. the controller ensures the current Helm release\nmatches the desired state.\n\n",
                      "markdown": "`\n### Interval\n\n`.spec.interval` is a required field that specifies the interval at which the\nHelmRelease is reconciled, i.e. the controller ensures the current Helm release\nmatches the desired state.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 802,
                  "startColumn": 8,
                  "endLine": 802,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\n`.spec.kubeConfig.secretRef.name` is an optional field to specify the name of\na Secret containing a KubeConfig. If specified, the Helm operations will be\ntargeted at the default cluster specified in this KubeConfig instead of using\nthe in-cluster Service Account.\n\nThe Secret defined in the `.secretRef` must exist in the same namespace as the\n",
                    "rendered": {
                      "text": "\n`.spec.kubeConfig.secretRef.name` is an optional field to specify the name of\na Secret containing a KubeConfig. If specified, the Helm operations will be\ntargeted at the default cluster specified in this KubeConfig instead of using\nthe in-cluster Service Account.\n\nThe Secret defined in the `.secretRef` must exist in the same namespace as the\n",
                      "markdown": "`\n`.spec.kubeConfig.secretRef.name` is an optional field to specify the name of\na Secret containing a KubeConfig. If specified, the Helm operations will be\ntargeted at the default cluster specified in this KubeConfig instead of using\nthe in-cluster Service Account.\n\nThe Secret defined in the `.secretRef` must exist in the same namespace as the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 776,
                  "startColumn": 32,
                  "endLine": 776,
                  "endColumn": 36,
                  "snippet": {
                    "text": "Post renderers are applied in the order given, and persisted by Helm to the\nmanifest for the release in the storage.\n\n**Note:** [Helm has a limitation at present](https://github.com/helm/helm/issues/7891),\nwhich prevents post renderers from being applied to chart hooks.\n\n```yaml\n",
                    "rendered": {
                      "text": "Post renderers are applied in the order given, and persisted by Helm to the\nmanifest for the release in the storage.\n\n**Note:** [Helm has a limitation at present](https://github.com/helm/helm/issues/7891),\nwhich prevents post renderers from being applied to chart hooks.\n\n```yaml\n",
                      "markdown": "`Post renderers are applied in the order given, and persisted by Helm to the\nmanifest for the release in the storage.\n\n**Note:** [Helm has a limitation at present](https://github.com/helm/helm/issues/7891),\nwhich prevents post renderers from being applied to chart hooks.\n\n```yaml\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 677,
                  "endLine": 678,
                  "endColumn": 3,
                  "snippet": {
                    "text": "Furthermore, when `.spec.driftDetection.mode` is set to `enabled`, the\ncontroller will attempt to correct the drift by creating and patching the\nresources based on the server-side dry-run apply result.\n\nAt the end of the correction attempt, it will emit a Kubernetes Event with a\nsummary of the changes it made and any failures it encountered. In case of a\nfailure, it will continue to detect and correct drift until the desired state\nhas been reached, or a new Helm action is triggered (due to e.g. a change to\n",
                    "rendered": {
                      "text": "Furthermore, when `.spec.driftDetection.mode` is set to `enabled`, the\ncontroller will attempt to correct the drift by creating and patching the\nresources based on the server-side dry-run apply result.\n\nAt the end of the correction attempt, it will emit a Kubernetes Event with a\nsummary of the changes it made and any failures it encountered. In case of a\nfailure, it will continue to detect and correct drift until the desired state\nhas been reached, or a new Helm action is triggered (due to e.g. a change to\n",
                      "markdown": "`Furthermore, when `.spec.driftDetection.mode` is set to `enabled`, the\ncontroller will attempt to correct the drift by creating and patching the\nresources based on the server-side dry-run apply result.\n\nAt the end of the correction attempt, it will emit a Kubernetes Event with a\nsummary of the changes it made and any failures it encountered. In case of a\nfailure, it will continue to detect and correct drift until the desired state\nhas been reached, or a new Helm action is triggered (due to e.g. a change to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 425,
                  "startColumn": 76,
                  "endLine": 426,
                  "snippet": {
                    "text": "  value can be found. Defaults to `values.yaml` when omitted.\n- `targetPath` (Optional): The YAML dot notation path at which the value should\n  be merged. When set, the valuesKey is expected to be a single flat value.\n  Defaults to empty when omitted, which results in the values getting merged at\n  the root.\n- `optional` (Optional): Whether this values reference is optional. When\n  `true`, a not found error for the values reference is ignored, but any\n  `valuesKey`, `targetPath` or transient error will still result in a\n",
                    "rendered": {
                      "text": "  value can be found. Defaults to `values.yaml` when omitted.\n- `targetPath` (Optional): The YAML dot notation path at which the value should\n  be merged. When set, the valuesKey is expected to be a single flat value.\n  Defaults to empty when omitted, which results in the values getting merged at\n  the root.\n- `optional` (Optional): Whether this values reference is optional. When\n  `true`, a not found error for the values reference is ignored, but any\n  `valuesKey`, `targetPath` or transient error will still result in a\n",
                      "markdown": "`  value can be found. Defaults to `values.yaml` when omitted.\n- `targetPath` (Optional): The YAML dot notation path at which the value should\n  be merged. When set, the valuesKey is expected to be a single flat value.\n  Defaults to empty when omitted, which results in the values getting merged at\n  the root.\n- `optional` (Optional): Whether this values reference is optional. When\n  `true`, a not found error for the values reference is ignored, but any\n  `valuesKey`, `targetPath` or transient error will still result in a\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 423,
                  "startColumn": 53,
                  "endLine": 423,
                  "endColumn": 57,
                  "snippet": {
                    "text": "  the HelmRelease.\n- `valuesKey` (Optional): The `.data` key where the values.yaml or a specific\n  value can be found. Defaults to `values.yaml` when omitted.\n- `targetPath` (Optional): The YAML dot notation path at which the value should\n  be merged. When set, the valuesKey is expected to be a single flat value.\n  Defaults to empty when omitted, which results in the values getting merged at\n  the root.\n",
                    "rendered": {
                      "text": "  the HelmRelease.\n- `valuesKey` (Optional): The `.data` key where the values.yaml or a specific\n  value can be found. Defaults to `values.yaml` when omitted.\n- `targetPath` (Optional): The YAML dot notation path at which the value should\n  be merged. When set, the valuesKey is expected to be a single flat value.\n  Defaults to empty when omitted, which results in the values getting merged at\n  the root.\n",
                      "markdown": "`  the HelmRelease.\n- `valuesKey` (Optional): The `.data` key where the values.yaml or a specific\n  value can be found. Defaults to `values.yaml` when omitted.\n- `targetPath` (Optional): The YAML dot notation path at which the value should\n  be merged. When set, the valuesKey is expected to be a single flat value.\n  Defaults to empty when omitted, which results in the values getting merged at\n  the root.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 393,
                  "startColumn": 48,
                  "endLine": 393,
                  "endColumn": 52,
                  "snippet": {
                    "text": "```\n\n**Note:** This does not account for upgrade ordering. Kubernetes only allows\napplying one resource (HelmRelease in this case) at a time, so there is no\nway for the controller to know when a dependency HelmRelease may be updated.\nAlso, circular dependencies between HelmRelease resources must be avoided,\notherwise the interdependent HelmRelease resources will never be reconciled.\n",
                    "rendered": {
                      "text": "```\n\n**Note:** This does not account for upgrade ordering. Kubernetes only allows\napplying one resource (HelmRelease in this case) at a time, so there is no\nway for the controller to know when a dependency HelmRelease may be updated.\nAlso, circular dependencies between HelmRelease resources must be avoided,\notherwise the interdependent HelmRelease resources will never be reconciled.\n",
                      "markdown": "````\n\n**Note:** This does not account for upgrade ordering. Kubernetes only allows\napplying one resource (HelmRelease in this case) at a time, so there is no\nway for the controller to know when a dependency HelmRelease may be updated.\nAlso, circular dependencies between HelmRelease resources must be avoided,\notherwise the interdependent HelmRelease resources will never be reconciled.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 44,
                  "endLine": 83,
                  "endColumn": 48,
                  "snippet": {
                    "text": "  the [drift detection configuration](#drift-detection). If it has, the\n  controller will [correct the drift](#drift-correction) by re-applying the\n  desired state.\n- The controller will repeat the above steps at the interval defined by\n  `.spec.interval`, or when the configuration changes in a way that affects the\n  desired state of the Helm release (e.g. a new chart version or values).\n\n",
                    "rendered": {
                      "text": "  the [drift detection configuration](#drift-detection). If it has, the\n  controller will [correct the drift](#drift-correction) by re-applying the\n  desired state.\n- The controller will repeat the above steps at the interval defined by\n  `.spec.interval`, or when the configuration changes in a way that affects the\n  desired state of the Helm release (e.g. a new chart version or values).\n\n",
                      "markdown": "`  the [drift detection configuration](#drift-detection). If it has, the\n  controller will [correct the drift](#drift-correction) by re-applying the\n  desired state.\n- The controller will repeat the above steps at the interval defined by\n  `.spec.interval`, or when the configuration changes in a way that affects the\n  desired state of the Helm release (e.g. a new chart version or values).\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 1398,
                  "startColumn": 29,
                  "endLine": 1398,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\nThe HelmRelease shows the history of Helm releases it has performed up to the\nprevious successful release as a list in the `.status.history` of the resource.\nThe history is ordered by the time of the release, with the most recent release\nfirst.\n\nWhen [Helm tests](#test-configuration) are enabled, the history will also\n",
                    "rendered": {
                      "text": "\nThe HelmRelease shows the history of Helm releases it has performed up to the\nprevious successful release as a list in the `.status.history` of the resource.\nThe history is ordered by the time of the release, with the most recent release\nfirst.\n\nWhen [Helm tests](#test-configuration) are enabled, the history will also\n",
                      "markdown": "`\nThe HelmRelease shows the history of Helm releases it has performed up to the\nprevious successful release as a list in the `.status.history` of the resource.\nThe history is ordered by the time of the release, with the most recent release\nfirst.\n\nWhen [Helm tests](#test-configuration) are enabled, the history will also\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 1354,
                  "startColumn": 15,
                  "endLine": 1354,
                  "endColumn": 24,
                  "snippet": {
                    "text": "        Phase:           Failed\n      podinfo-grpc-test-rzg5v:\n      podinfo-jwt-test-7k1hv:\n      Podinfo - Service - Test - Bgoeg:\n    Version:                      1\n...\nEvents:\n",
                    "rendered": {
                      "text": "        Phase:           Failed\n      podinfo-grpc-test-rzg5v:\n      podinfo-jwt-test-7k1hv:\n      Podinfo - Service - Test - Bgoeg:\n    Version:                      1\n...\nEvents:\n",
                      "markdown": "`        Phase:           Failed\n      podinfo-grpc-test-rzg5v:\n      podinfo-jwt-test-7k1hv:\n      Podinfo - Service - Test - Bgoeg:\n    Version:                      1\n...\nEvents:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 1234,
                  "startColumn": 8,
                  "endLine": 1234,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\n### Suspending and resuming\n\nWhen you find yourself in a situation where you temporarily want to pause the\nreconciliation of a HelmRelease, you can suspend it using the\n[`.spec.suspend` field](#suspend).\n\n",
                    "rendered": {
                      "text": "\n### Suspending and resuming\n\nWhen you find yourself in a situation where you temporarily want to pause the\nreconciliation of a HelmRelease, you can suspend it using the\n[`.spec.suspend` field](#suspend).\n\n",
                      "markdown": "`\n### Suspending and resuming\n\nWhen you find yourself in a situation where you temporarily want to pause the\nreconciliation of a HelmRelease, you can suspend it using the\n[`.spec.suspend` field](#suspend).\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 1137,
                  "startColumn": 8,
                  "endLine": 1137,
                  "endColumn": 17,
                  "snippet": {
                    "text": "in installing the Helm chart once the cluster is available.\n\nIf you want to target clusters created by other means than Cluster-API, you can\ncreate a Service Account with the necessary permissions on the target cluster,\ngenerate a KubeConfig for that account, and then create a Secret on the cluster\nwhere helm-controller is running. For example:\n\n",
                    "rendered": {
                      "text": "in installing the Helm chart once the cluster is available.\n\nIf you want to target clusters created by other means than Cluster-API, you can\ncreate a Service Account with the necessary permissions on the target cluster,\ngenerate a KubeConfig for that account, and then create a Secret on the cluster\nwhere helm-controller is running. For example:\n\n",
                      "markdown": "`in installing the Helm chart once the cluster is available.\n\nIf you want to target clusters created by other means than Cluster-API, you can\ncreate a Service Account with the necessary permissions on the target cluster,\ngenerate a KubeConfig for that account, and then create a Secret on the cluster\nwhere helm-controller is running. For example:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 1131,
                  "startColumn": 54,
                  "endLine": 1131,
                  "endColumn": 60,
                  "snippet": {
                    "text": "      retries: -1\n```\n\nThe Cluster and HelmRelease can be created at the same time as long as the\n[install remediation configuration](#install-remediation) is set to a\nforgiving number of `.retries`. The HelmRelease will then eventually succeed\nin installing the Helm chart once the cluster is available.\n",
                    "rendered": {
                      "text": "      retries: -1\n```\n\nThe Cluster and HelmRelease can be created at the same time as long as the\n[install remediation configuration](#install-remediation) is set to a\nforgiving number of `.retries`. The HelmRelease will then eventually succeed\nin installing the Helm chart once the cluster is available.\n",
                      "markdown": "`      retries: -1\n```\n\nThe Cluster and HelmRelease can be created at the same time as long as the\n[install remediation configuration](#install-remediation) is set to a\nforgiving number of `.retries`. The HelmRelease will then eventually succeed\nin installing the Helm chart once the cluster is available.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 1064,
                  "startColumn": 22,
                  "endLine": 1064,
                  "endColumn": 31,
                  "snippet": {
                    "text": "`--default-service-account` flag.\n\nWhen the flag is set, HelmReleases which do not have a `.spec.serviceAccountName`\nspecified will use the Service Account name provided by\n`--default-service-account=<name>` in the namespace of the HelmRelease object.\n\nFor further best practices on securing helm-controller, see our\n",
                    "rendered": {
                      "text": "`--default-service-account` flag.\n\nWhen the flag is set, HelmReleases which do not have a `.spec.serviceAccountName`\nspecified will use the Service Account name provided by\n`--default-service-account=<name>` in the namespace of the HelmRelease object.\n\nFor further best practices on securing helm-controller, see our\n",
                      "markdown": "``--default-service-account` flag.\n\nWhen the flag is set, HelmReleases which do not have a `.spec.serviceAccountName`\nspecified will use the Service Account name provided by\n`--default-service-account=<name>` in the namespace of the HelmRelease object.\n\nFor further best practices on securing helm-controller, see our\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 1053,
                  "startColumn": 23,
                  "endLine": 1053,
                  "endColumn": 32,
                  "snippet": {
                    "text": "```\n\nWhen the controller reconciles the `podinfo` HelmRelease, it will impersonate\nthe `webapp-reconciler` Service Account. If the chart contains cluster level\nobjects like CustomResourceDefinitions, the reconciliation will fail since the\naccount it runs under has no permissions to alter objects outside the\n`webapp` namespace.\n",
                    "rendered": {
                      "text": "```\n\nWhen the controller reconciles the `podinfo` HelmRelease, it will impersonate\nthe `webapp-reconciler` Service Account. If the chart contains cluster level\nobjects like CustomResourceDefinitions, the reconciliation will fail since the\naccount it runs under has no permissions to alter objects outside the\n`webapp` namespace.\n",
                      "markdown": "````\n\nWhen the controller reconciles the `podinfo` HelmRelease, it will impersonate\nthe `webapp-reconciler` Service Account. If the chart contains cluster level\nobjects like CustomResourceDefinitions, the reconciliation will fail since the\naccount it runs under has no permissions to alter objects outside the\n`webapp` namespace.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 1032,
                  "startColumn": 3,
                  "endLine": 1032,
                  "endColumn": 12,
                  "snippet": {
                    "text": "be created by a cluster administrator and preferably be managed by a\n[Kustomization](https://fluxcd.io/flux/components/kustomize/kustomizations/).\n\nThe Service Account can then be referenced in the HelmRelease:\n\n```yaml\n---\n",
                    "rendered": {
                      "text": "be created by a cluster administrator and preferably be managed by a\n[Kustomization](https://fluxcd.io/flux/components/kustomize/kustomizations/).\n\nThe Service Account can then be referenced in the HelmRelease:\n\n```yaml\n---\n",
                      "markdown": "`be created by a cluster administrator and preferably be managed by a\n[Kustomization](https://fluxcd.io/flux/components/kustomize/kustomizations/).\n\nThe Service Account can then be referenced in the HelmRelease:\n\n```yaml\n---\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 987,
                  "startColumn": 26,
                  "endLine": 987,
                  "endColumn": 35,
                  "snippet": {
                    "text": "you can create a Service Account with a RoleBinding that grants access only to\nthat namespace.\n\nFor example, the following Service Account and RoleBinding restricts the\nHelmRelease to the `webapp` namespace:\n\n```yaml\n",
                    "rendered": {
                      "text": "you can create a Service Account with a RoleBinding that grants access only to\nthat namespace.\n\nFor example, the following Service Account and RoleBinding restricts the\nHelmRelease to the `webapp` namespace:\n\n```yaml\n",
                      "markdown": "`you can create a Service Account with a RoleBinding that grants access only to\nthat namespace.\n\nFor example, the following Service Account and RoleBinding restricts the\nHelmRelease to the `webapp` namespace:\n\n```yaml\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 984,
                  "startColumn": 16,
                  "endLine": 984,
                  "endColumn": 25,
                  "snippet": {
                    "text": "[`.spec.serviceAccountName`](#service-account-reference).\n\nAssuming you want to restrict a group of HelmReleases to a single namespace,\nyou can create a Service Account with a RoleBinding that grants access only to\nthat namespace.\n\nFor example, the following Service Account and RoleBinding restricts the\n",
                    "rendered": {
                      "text": "[`.spec.serviceAccountName`](#service-account-reference).\n\nAssuming you want to restrict a group of HelmReleases to a single namespace,\nyou can create a Service Account with a RoleBinding that grants access only to\nthat namespace.\n\nFor example, the following Service Account and RoleBinding restricts the\n",
                      "markdown": "`[`.spec.serviceAccountName`](#service-account-reference).\n\nAssuming you want to restrict a group of HelmReleases to a single namespace,\nyou can create a Service Account with a RoleBinding that grants access only to\nthat namespace.\n\nFor example, the following Service Account and RoleBinding restricts the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 979,
                  "startColumn": 63,
                  "endLine": 979,
                  "endColumn": 72,
                  "snippet": {
                    "text": "\nFor certain HelmReleases, a cluster administrator may wish to restrict the\npermissions of the HelmRelease to a specific namespace or to a specific set of\nnamespaced objects. To restrict a HelmRelease, one can assign a Service Account\nunder which the reconciliation is performed using\n[`.spec.serviceAccountName`](#service-account-reference).\n\n",
                    "rendered": {
                      "text": "\nFor certain HelmReleases, a cluster administrator may wish to restrict the\npermissions of the HelmRelease to a specific namespace or to a specific set of\nnamespaced objects. To restrict a HelmRelease, one can assign a Service Account\nunder which the reconciliation is performed using\n[`.spec.serviceAccountName`](#service-account-reference).\n\n",
                      "markdown": "`\nFor certain HelmReleases, a cluster administrator may wish to restrict the\npermissions of the HelmRelease to a specific namespace or to a specific set of\nnamespaced objects. To restrict a HelmRelease, one can assign a Service Account\nunder which the reconciliation is performed using\n[`.spec.serviceAccountName`](#service-account-reference).\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 977,
                  "startColumn": 53,
                  "endLine": 977,
                  "endColumn": 59,
                  "snippet": {
                    "text": "CustomResourceDefinitions, etc.) and namespaced objects (Deployments, Ingresses,\netc.)\n\nFor certain HelmReleases, a cluster administrator may wish to restrict the\npermissions of the HelmRelease to a specific namespace or to a specific set of\nnamespaced objects. To restrict a HelmRelease, one can assign a Service Account\nunder which the reconciliation is performed using\n",
                    "rendered": {
                      "text": "CustomResourceDefinitions, etc.) and namespaced objects (Deployments, Ingresses,\netc.)\n\nFor certain HelmReleases, a cluster administrator may wish to restrict the\npermissions of the HelmRelease to a specific namespace or to a specific set of\nnamespaced objects. To restrict a HelmRelease, one can assign a Service Account\nunder which the reconciliation is performed using\n",
                      "markdown": "`CustomResourceDefinitions, etc.) and namespaced objects (Deployments, Ingresses,\netc.)\n\nFor certain HelmReleases, a cluster administrator may wish to restrict the\npermissions of the HelmRelease to a specific namespace or to a specific set of\nnamespaced objects. To restrict a HelmRelease, one can assign a Service Account\nunder which the reconciliation is performed using\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 917,
                  "startColumn": 29,
                  "endLine": 917,
                  "endColumn": 35,
                  "snippet": {
                    "text": "(CRDs) as part of a chart. However, it has no native support for\n[upgrading CRDs](https://helm.sh/docs/chart_best_practices/custom_resource_definitions/#some-caveats-and-explanations):\n\n> There is no support at this time for upgrading or deleting CRDs using Helm.\n> This was an explicit decision after much community discussion due to the\n> danger for unintentional data loss. Furthermore, there is currently no\n> community consensus around how to handle CRDs and their lifecycle. As this\n",
                    "rendered": {
                      "text": "(CRDs) as part of a chart. However, it has no native support for\n[upgrading CRDs](https://helm.sh/docs/chart_best_practices/custom_resource_definitions/#some-caveats-and-explanations):\n\n> There is no support at this time for upgrading or deleting CRDs using Helm.\n> This was an explicit decision after much community discussion due to the\n> danger for unintentional data loss. Furthermore, there is currently no\n> community consensus around how to handle CRDs and their lifecycle. As this\n",
                      "markdown": "`(CRDs) as part of a chart. However, it has no native support for\n[upgrading CRDs](https://helm.sh/docs/chart_best_practices/custom_resource_definitions/#some-caveats-and-explanations):\n\n> There is no support at this time for upgrading or deleting CRDs using Helm.\n> This was an explicit decision after much community discussion due to the\n> danger for unintentional data loss. Furthermore, there is currently no\n> community consensus around how to handle CRDs and their lifecycle. As this\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 887,
                  "startColumn": 4,
                  "endLine": 887,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n### Configuring failure handling\n\nFrom time to time, a Helm installation, upgrade, or accompanying [Helm test](#test-configuration)\nmay fail. When this happens, by default no action is taken, and the release is\nleft in a failed state. However, several automatic failure remediation options\ncan be set via [`.spec.install.remediation`](#install-remediation) and\n",
                    "rendered": {
                      "text": "\n### Configuring failure handling\n\nFrom time to time, a Helm installation, upgrade, or accompanying [Helm test](#test-configuration)\nmay fail. When this happens, by default no action is taken, and the release is\nleft in a failed state. However, several automatic failure remediation options\ncan be set via [`.spec.install.remediation`](#install-remediation) and\n",
                      "markdown": "`\n### Configuring failure handling\n\nFrom time to time, a Helm installation, upgrade, or accompanying [Helm test](#test-configuration)\nmay fail. When this happens, by default no action is taken, and the release is\nleft in a failed state. However, several automatic failure remediation options\ncan be set via [`.spec.install.remediation`](#install-remediation) and\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 872,
                  "startColumn": 18,
                  "endLine": 872,
                  "endColumn": 27,
                  "snippet": {
                    "text": "`.spec.timeout` is an optional field to specify a timeout for a Helm action like\ninstall, upgrade or rollback. The value must be in a\n[Go recognized duration string format](https://pkg.go.dev/time#ParseDuration),\ne.g. `5m30s` for a timeout of five minutes and thirty seconds. The default\nvalue is `5m0s`.\n\n### Suspend\n",
                    "rendered": {
                      "text": "`.spec.timeout` is an optional field to specify a timeout for a Helm action like\ninstall, upgrade or rollback. The value must be in a\n[Go recognized duration string format](https://pkg.go.dev/time#ParseDuration),\ne.g. `5m30s` for a timeout of five minutes and thirty seconds. The default\nvalue is `5m0s`.\n\n### Suspend\n",
                      "markdown": "``.spec.timeout` is an optional field to specify a timeout for a Helm action like\ninstall, upgrade or rollback. The value must be in a\n[Go recognized duration string format](https://pkg.go.dev/time#ParseDuration),\ne.g. `5m30s` for a timeout of five minutes and thirty seconds. The default\nvalue is `5m0s`.\n\n### Suspend\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 869,
                  "startColumn": 49,
                  "endLine": 869,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\n### Timeout\n\n`.spec.timeout` is an optional field to specify a timeout for a Helm action like\ninstall, upgrade or rollback. The value must be in a\n[Go recognized duration string format](https://pkg.go.dev/time#ParseDuration),\ne.g. `5m30s` for a timeout of five minutes and thirty seconds. The default\n",
                    "rendered": {
                      "text": "\n### Timeout\n\n`.spec.timeout` is an optional field to specify a timeout for a Helm action like\ninstall, upgrade or rollback. The value must be in a\n[Go recognized duration string format](https://pkg.go.dev/time#ParseDuration),\ne.g. `5m30s` for a timeout of five minutes and thirty seconds. The default\n",
                      "markdown": "`\n### Timeout\n\n`.spec.timeout` is an optional field to specify a timeout for a Helm action like\ninstall, upgrade or rollback. The value must be in a\n[Go recognized duration string format](https://pkg.go.dev/time#ParseDuration),\ne.g. `5m30s` for a timeout of five minutes and thirty seconds. The default\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 867,
                  "startColumn": 3,
                  "endLine": 868,
                  "snippet": {
                    "text": "set up with the same interval. For more information, please refer to the \n[helm-controller configuration options](https://fluxcd.io/flux/components/helm/options/).\n\n### Timeout\n\n`.spec.timeout` is an optional field to specify a timeout for a Helm action like\ninstall, upgrade or rollback. The value must be in a\n[Go recognized duration string format](https://pkg.go.dev/time#ParseDuration),\n",
                    "rendered": {
                      "text": "set up with the same interval. For more information, please refer to the \n[helm-controller configuration options](https://fluxcd.io/flux/components/helm/options/).\n\n### Timeout\n\n`.spec.timeout` is an optional field to specify a timeout for a Helm action like\ninstall, upgrade or rollback. The value must be in a\n[Go recognized duration string format](https://pkg.go.dev/time#ParseDuration),\n",
                      "markdown": "`set up with the same interval. For more information, please refer to the \n[helm-controller configuration options](https://fluxcd.io/flux/components/helm/options/).\n\n### Timeout\n\n`.spec.timeout` is an optional field to specify a timeout for a Helm action like\ninstall, upgrade or rollback. The value must be in a\n[Go recognized duration string format](https://pkg.go.dev/time#ParseDuration),\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 832,
                  "startColumn": 50,
                  "endLine": 832,
                  "endColumn": 59,
                  "snippet": {
                    "text": "of helm-controller.\n\nWhen both `.spec.kubeConfig` and a [Service Account reference](#service-account-reference)\nare specified, the controller will impersonate the Service Account on the\ntarget cluster.\n\nThe Helm storage is stored on the remote cluster in a namespace that equals to\n",
                    "rendered": {
                      "text": "of helm-controller.\n\nWhen both `.spec.kubeConfig` and a [Service Account reference](#service-account-reference)\nare specified, the controller will impersonate the Service Account on the\ntarget cluster.\n\nThe Helm storage is stored on the remote cluster in a namespace that equals to\n",
                      "markdown": "`of helm-controller.\n\nWhen both `.spec.kubeConfig` and a [Service Account reference](#service-account-reference)\nare specified, the controller will impersonate the Service Account on the\ntarget cluster.\n\nThe Helm storage is stored on the remote cluster in a namespace that equals to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 803,
                  "startColumn": 14,
                  "endLine": 803,
                  "endColumn": 23,
                  "snippet": {
                    "text": "`.spec.kubeConfig.secretRef.name` is an optional field to specify the name of\na Secret containing a KubeConfig. If specified, the Helm operations will be\ntargeted at the default cluster specified in this KubeConfig instead of using\nthe in-cluster Service Account.\n\nThe Secret defined in the `.secretRef` must exist in the same namespace as the\nHelmRelease. On every reconciliation, the KubeConfig bytes will be loaded from\n",
                    "rendered": {
                      "text": "`.spec.kubeConfig.secretRef.name` is an optional field to specify the name of\na Secret containing a KubeConfig. If specified, the Helm operations will be\ntargeted at the default cluster specified in this KubeConfig instead of using\nthe in-cluster Service Account.\n\nThe Secret defined in the `.secretRef` must exist in the same namespace as the\nHelmRelease. On every reconciliation, the KubeConfig bytes will be loaded from\n",
                      "markdown": "``.spec.kubeConfig.secretRef.name` is an optional field to specify the name of\na Secret containing a KubeConfig. If specified, the Helm operations will be\ntargeted at the default cluster specified in this KubeConfig instead of using\nthe in-cluster Service Account.\n\nThe Secret defined in the `.secretRef` must exist in the same namespace as the\nHelmRelease. On every reconciliation, the KubeConfig bytes will be loaded from\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 642,
                  "startColumn": 25,
                  "endLine": 642,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the uninstalltion of the release.\n  Defaults to the [global timeout value](#timeout).\n- `.deletionPropagation` (Optional): The [deletion propagation policy](https://kubernetes.io/docs/tasks/administer-cluster/use-cascading-deletion/)\n  when a Helm uninstall is performed. Valid values are `background`,\n  `foreground` and `orphan`. Defaults to `background`.\n",
                    "rendered": {
                      "text": "\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the uninstalltion of the release.\n  Defaults to the [global timeout value](#timeout).\n- `.deletionPropagation` (Optional): The [deletion propagation policy](https://kubernetes.io/docs/tasks/administer-cluster/use-cascading-deletion/)\n  when a Helm uninstall is performed. Valid values are `background`,\n  `foreground` and `orphan`. Defaults to `background`.\n",
                      "markdown": "`\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the uninstalltion of the release.\n  Defaults to the [global timeout value](#timeout).\n- `.deletionPropagation` (Optional): The [deletion propagation policy](https://kubernetes.io/docs/tasks/administer-cluster/use-cascading-deletion/)\n  when a Helm uninstall is performed. Valid values are `background`,\n  `foreground` and `orphan`. Defaults to `background`.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 640,
                  "startColumn": 28,
                  "endLine": 640,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\nThe field offers the following subfields:\n\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the uninstalltion of the release.\n  Defaults to the [global timeout value](#timeout).\n- `.deletionPropagation` (Optional): The [deletion propagation policy](https://kubernetes.io/docs/tasks/administer-cluster/use-cascading-deletion/)\n",
                    "rendered": {
                      "text": "\nThe field offers the following subfields:\n\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the uninstalltion of the release.\n  Defaults to the [global timeout value](#timeout).\n- `.deletionPropagation` (Optional): The [deletion propagation policy](https://kubernetes.io/docs/tasks/administer-cluster/use-cascading-deletion/)\n",
                      "markdown": "`\nThe field offers the following subfields:\n\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the uninstalltion of the release.\n  Defaults to the [global timeout value](#timeout).\n- `.deletionPropagation` (Optional): The [deletion propagation policy](https://kubernetes.io/docs/tasks/administer-cluster/use-cascading-deletion/)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 616,
                  "startColumn": 25,
                  "endLine": 616,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the rollback of the release.\n  Defaults to the [global timeout value](#timeout).\n- `.cleanupOnFail` (Optional): Allows deletion of new resources created during\n  the rollback of the release when it fails. Defaults to `false`.\n- `.disableHooks` (Optional): Prevents [chart hooks](https://helm.sh/docs/topics/charts_hooks/)\n",
                    "rendered": {
                      "text": "\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the rollback of the release.\n  Defaults to the [global timeout value](#timeout).\n- `.cleanupOnFail` (Optional): Allows deletion of new resources created during\n  the rollback of the release when it fails. Defaults to `false`.\n- `.disableHooks` (Optional): Prevents [chart hooks](https://helm.sh/docs/topics/charts_hooks/)\n",
                      "markdown": "`\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the rollback of the release.\n  Defaults to the [global timeout value](#timeout).\n- `.cleanupOnFail` (Optional): Allows deletion of new resources created during\n  the rollback of the release when it fails. Defaults to `false`.\n- `.disableHooks` (Optional): Prevents [chart hooks](https://helm.sh/docs/topics/charts_hooks/)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 614,
                  "startColumn": 28,
                  "endLine": 614,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\nThe field offers the following subfields:\n\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the rollback of the release.\n  Defaults to the [global timeout value](#timeout).\n- `.cleanupOnFail` (Optional): Allows deletion of new resources created during\n",
                    "rendered": {
                      "text": "\nThe field offers the following subfields:\n\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the rollback of the release.\n  Defaults to the [global timeout value](#timeout).\n- `.cleanupOnFail` (Optional): Allows deletion of new resources created during\n",
                      "markdown": "`\nThe field offers the following subfields:\n\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the rollback of the release.\n  Defaults to the [global timeout value](#timeout).\n- `.cleanupOnFail` (Optional): Allows deletion of new resources created during\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 522,
                  "startColumn": 25,
                  "endLine": 522,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the upgrade of the release.\n  Defaults to the [global timeout value](#timeout).\n- `.crds` (Optional): The Custom Resource Definition upgrade policy to use.\n  Valid values are `Skip`, `Create` and `CreateReplace`. Default is `Skip`.\n  Refer to [Custom Resource Definition lifecycle](#controlling-the-lifecycle-of-custom-resource-definitions)\n",
                    "rendered": {
                      "text": "\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the upgrade of the release.\n  Defaults to the [global timeout value](#timeout).\n- `.crds` (Optional): The Custom Resource Definition upgrade policy to use.\n  Valid values are `Skip`, `Create` and `CreateReplace`. Default is `Skip`.\n  Refer to [Custom Resource Definition lifecycle](#controlling-the-lifecycle-of-custom-resource-definitions)\n",
                      "markdown": "`\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the upgrade of the release.\n  Defaults to the [global timeout value](#timeout).\n- `.crds` (Optional): The Custom Resource Definition upgrade policy to use.\n  Valid values are `Skip`, `Create` and `CreateReplace`. Default is `Skip`.\n  Refer to [Custom Resource Definition lifecycle](#controlling-the-lifecycle-of-custom-resource-definitions)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 520,
                  "startColumn": 28,
                  "endLine": 520,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\nThe field offers the following subfields:\n\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the upgrade of the release.\n  Defaults to the [global timeout value](#timeout).\n- `.crds` (Optional): The Custom Resource Definition upgrade policy to use.\n",
                    "rendered": {
                      "text": "\nThe field offers the following subfields:\n\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the upgrade of the release.\n  Defaults to the [global timeout value](#timeout).\n- `.crds` (Optional): The Custom Resource Definition upgrade policy to use.\n",
                      "markdown": "`\nThe field offers the following subfields:\n\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the upgrade of the release.\n  Defaults to the [global timeout value](#timeout).\n- `.crds` (Optional): The Custom Resource Definition upgrade policy to use.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 475,
                  "startColumn": 25,
                  "endLine": 475,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the installation of the chart.\n  Defaults to the [global timeout value](#timeout).\n- `.crds` (Optional): The Custom Resource Definition install policy to use.\n  Valid values are `Skip`, `Create` and `CreateReplace`. Default is `Create`,\n  which will create Custom Resource Definitions when they do not exist. Refer\n",
                    "rendered": {
                      "text": "\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the installation of the chart.\n  Defaults to the [global timeout value](#timeout).\n- `.crds` (Optional): The Custom Resource Definition install policy to use.\n  Valid values are `Skip`, `Create` and `CreateReplace`. Default is `Create`,\n  which will create Custom Resource Definitions when they do not exist. Refer\n",
                      "markdown": "`\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the installation of the chart.\n  Defaults to the [global timeout value](#timeout).\n- `.crds` (Optional): The Custom Resource Definition install policy to use.\n  Valid values are `Skip`, `Create` and `CreateReplace`. Default is `Create`,\n  which will create Custom Resource Definitions when they do not exist. Refer\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 473,
                  "startColumn": 28,
                  "endLine": 473,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\nThe field offers the following subfields:\n\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the installation of the chart.\n  Defaults to the [global timeout value](#timeout).\n- `.crds` (Optional): The Custom Resource Definition install policy to use.\n",
                    "rendered": {
                      "text": "\nThe field offers the following subfields:\n\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the installation of the chart.\n  Defaults to the [global timeout value](#timeout).\n- `.crds` (Optional): The Custom Resource Definition install policy to use.\n",
                      "markdown": "`\nThe field offers the following subfields:\n\n- `.timeout` (Optional): The time to wait for any individual Kubernetes\n  operation (like Jobs for hooks) during the installation of the chart.\n  Defaults to the [global timeout value](#timeout).\n- `.crds` (Optional): The Custom Resource Definition install policy to use.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 334,
                  "startColumn": 67,
                  "endLine": 335,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n### Service Account reference\n\n`.spec.serviceAccountName` is an optional field used to specify the\nService Account to be impersonated while reconciling the HelmRelease.\nFor more information, refer to [Role-based access control](#role-based-access-control).\n\n### Persistent client\n",
                    "rendered": {
                      "text": "\n### Service Account reference\n\n`.spec.serviceAccountName` is an optional field used to specify the\nService Account to be impersonated while reconciling the HelmRelease.\nFor more information, refer to [Role-based access control](#role-based-access-control).\n\n### Persistent client\n",
                      "markdown": "`\n### Service Account reference\n\n`.spec.serviceAccountName` is an optional field used to specify the\nService Account to be impersonated while reconciling the HelmRelease.\nFor more information, refer to [Role-based access control](#role-based-access-control).\n\n### Persistent client\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 332,
                  "startColumn": 3,
                  "endLine": 332,
                  "endColumn": 12,
                  "snippet": {
                    "text": "`helm get` commands to inspect a release, the `-n` flag should target the\nstorage namespace of the HelmRelease.\n\n### Service Account reference\n\n`.spec.serviceAccountName` is an optional field used to specify the\nService Account to be impersonated while reconciling the HelmRelease.\n",
                    "rendered": {
                      "text": "`helm get` commands to inspect a release, the `-n` flag should target the\nstorage namespace of the HelmRelease.\n\n### Service Account reference\n\n`.spec.serviceAccountName` is an optional field used to specify the\nService Account to be impersonated while reconciling the HelmRelease.\n",
                      "markdown": "``helm get` commands to inspect a release, the `-n` flag should target the\nstorage namespace of the HelmRelease.\n\n### Service Account reference\n\n`.spec.serviceAccountName` is an optional field used to specify the\nService Account to be impersonated while reconciling the HelmRelease.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 301,
                  "startColumn": 78,
                  "endLine": 302,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\n**Note:** When the composition exceeds the maximum length of 53 characters, the\nname is shortened by hashing the release name with SHA-256. The resulting name\nis then composed of the first 40 characters of the release name, followed by a\ndash (`-`), followed by the first 12 characters of the hash. For example,\n`a-very-lengthy-target-namespace-with-a-nice-object-name` becomes\n`a-very-lengthy-target-namespace-with-a-nic-97af5d7f41f3`.\n\n",
                    "rendered": {
                      "text": "\n**Note:** When the composition exceeds the maximum length of 53 characters, the\nname is shortened by hashing the release name with SHA-256. The resulting name\nis then composed of the first 40 characters of the release name, followed by a\ndash (`-`), followed by the first 12 characters of the hash. For example,\n`a-very-lengthy-target-namespace-with-a-nice-object-name` becomes\n`a-very-lengthy-target-namespace-with-a-nic-97af5d7f41f3`.\n\n",
                      "markdown": "`\n**Note:** When the composition exceeds the maximum length of 53 characters, the\nname is shortened by hashing the release name with SHA-256. The resulting name\nis then composed of the first 40 characters of the release name, followed by a\ndash (`-`), followed by the first 12 characters of the hash. For example,\n`a-very-lengthy-target-namespace-with-a-nice-object-name` becomes\n`a-very-lengthy-target-namespace-with-a-nic-97af5d7f41f3`.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 18,
                  "endLine": 147,
                  "endColumn": 27,
                  "snippet": {
                    "text": "           Last Completed:  2023-12-04T14:17:45Z\n           Last Started:    2023-12-04T14:17:42Z\n           Phase:           Succeeded\n         Podinfo - Service - Test - Uibss:\n           Last Completed:           2023-12-04T14:17:47Z\n           Last Started:             2023-12-04T14:17:45Z\n           Phase:                    Succeeded\n",
                    "rendered": {
                      "text": "           Last Completed:  2023-12-04T14:17:45Z\n           Last Started:    2023-12-04T14:17:42Z\n           Phase:           Succeeded\n         Podinfo - Service - Test - Uibss:\n           Last Completed:           2023-12-04T14:17:47Z\n           Last Started:             2023-12-04T14:17:45Z\n           Phase:                    Succeeded\n",
                      "markdown": "`           Last Completed:  2023-12-04T14:17:45Z\n           Last Started:    2023-12-04T14:17:42Z\n           Phase:           Succeeded\n         Podinfo - Service - Test - Uibss:\n           Last Completed:           2023-12-04T14:17:47Z\n           Last Started:             2023-12-04T14:17:45Z\n           Phase:                    Succeeded\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/v2beta2/helmreleases.md"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 47,
                  "endLine": 67,
                  "endColumn": 54,
                  "snippet": {
                    "text": "  named `podinfo` is created, pointing to the Helm repository from which the \n  podinfo chart can be installed.\n- A HelmRelease named `podinfo` is created, that will create a [HelmChart](https://fluxcd.io/flux/components/source/helmcharts/) object\n  from [the `.spec.chart`](#chart-template) and watch it for Artifact changes.\n- The controller will fetch the chart from the HelmChart's Artifact and use it\n  together with the `.spec.releaseName` and `.spec.values` to confirm if the\n  Helm release exists and is up-to-date.\n",
                    "rendered": {
                      "text": "  named `podinfo` is created, pointing to the Helm repository from which the \n  podinfo chart can be installed.\n- A HelmRelease named `podinfo` is created, that will create a [HelmChart](https://fluxcd.io/flux/components/source/helmcharts/) object\n  from [the `.spec.chart`](#chart-template) and watch it for Artifact changes.\n- The controller will fetch the chart from the HelmChart's Artifact and use it\n  together with the `.spec.releaseName` and `.spec.values` to confirm if the\n  Helm release exists and is up-to-date.\n",
                      "markdown": "`  named `podinfo` is created, pointing to the Helm repository from which the \n  podinfo chart can be installed.\n- A HelmRelease named `podinfo` is created, that will create a [HelmChart](https://fluxcd.io/flux/components/source/helmcharts/) object\n  from [the `.spec.chart`](#chart-template) and watch it for Artifact changes.\n- The controller will fetch the chart from the HelmChart's Artifact and use it\n  together with the `.spec.releaseName` and `.spec.values` to confirm if the\n  Helm release exists and is up-to-date.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/README.md"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 11,
                  "endLine": 61,
                  "endColumn": 20,
                  "snippet": {
                    "text": " Helm Controller          | Helm Operator      |\n| ------------------------------------------------------------------- | ------------------------ | ------------------ |\n| Helm install, upgrade, test, rollback, uninstall                    | :heavy_check_mark:       | :heavy_check_mark: |\n| Extensive control over configuration of individual actions          | :heavy_check_mark:       | :x:                |\n| Helm charts from Helm repositories                                  | :heavy_check_mark:       | :heavy_check_mark: |\n| Helm charts from Git repositories                                   | :heavy_c",
                    "rendered": {
                      "text": " Helm Controller          | Helm Operator      |\n| ------------------------------------------------------------------- | ------------------------ | ------------------ |\n| Helm install, upgrade, test, rollback, uninstall                    | :heavy_check_mark:       | :heavy_check_mark: |\n| Extensive control over configuration of individual actions          | :heavy_check_mark:       | :x:                |\n| Helm charts from Helm repositories                                  | :heavy_check_mark:       | :heavy_check_mark: |\n| Helm charts from Git repositories                                   | :heavy_c",
                      "markdown": "` Helm Controller          | Helm Operator      |\n| ------------------------------------------------------------------- | ------------------------ | ------------------ |\n| Helm install, upgrade, test, rollback, uninstall                    | :heavy_check_mark:       | :heavy_check_mark: |\n| Extensive control over configuration of individual actions          | :heavy_check_mark:       | :x:                |\n| Helm charts from Helm repositories                                  | :heavy_check_mark:       | :heavy_check_mark: |\n| Helm charts from Git repositories                                   | :heavy_c`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/README.md"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 45,
                  "endLine": 54,
                  "endColumn": 49,
                  "snippet": {
                    "text": "Alerting can be configured with a Kubernetes custom resource that specifies a webhook address, and a\ngroup of `HelmRelease` resources to be monitored using the [notification-controller](https://github.com/fluxcd/notification-controller).\n\nThe API design of the controller can be found at [helm.toolkit.fluxcd.io/v2](./v2/helmreleases.md).\n\n## Backward compatibility\n\n",
                    "rendered": {
                      "text": "Alerting can be configured with a Kubernetes custom resource that specifies a webhook address, and a\ngroup of `HelmRelease` resources to be monitored using the [notification-controller](https://github.com/fluxcd/notification-controller).\n\nThe API design of the controller can be found at [helm.toolkit.fluxcd.io/v2](./v2/helmreleases.md).\n\n## Backward compatibility\n\n",
                      "markdown": "`Alerting can be configured with a Kubernetes custom resource that specifies a webhook address, and a\ngroup of `HelmRelease` resources to be monitored using the [notification-controller](https://github.com/fluxcd/notification-controller).\n\nThe API design of the controller can be found at [helm.toolkit.fluxcd.io/v2](./v2/helmreleases.md).\n\n## Backward compatibility\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/README.md"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 23,
                  "snippet": {
                    "text": "_check_mark:       | :heavy_check_mark: |\n| Extensive control over configuration of individual actions          | :heavy_check_mark:       | :x:                |\n| Helm charts from Helm repositories                                  | :heavy_check_mark:       | :heavy_check_mark: |\n| Helm charts from Git repositories                                   | :heavy_check_mark:       | :heavy_check_mark: |\n| Helm uninstall on resource removal                                  | :heavy_check_mark:       | :heavy_check_mark: |\n| Conditional run of actions (i.e. rolling back after test failure)   | :heavy_chec",
                    "rendered": {
                      "text": "_check_mark:       | :heavy_check_mark: |\n| Extensive control over configuration of individual actions          | :heavy_check_mark:       | :x:                |\n| Helm charts from Helm repositories                                  | :heavy_check_mark:       | :heavy_check_mark: |\n| Helm charts from Git repositories                                   | :heavy_check_mark:       | :heavy_check_mark: |\n| Helm uninstall on resource removal                                  | :heavy_check_mark:       | :heavy_check_mark: |\n| Conditional run of actions (i.e. rolling back after test failure)   | :heavy_chec",
                      "markdown": "`_check_mark:       | :heavy_check_mark: |\n| Extensive control over configuration of individual actions          | :heavy_check_mark:       | :x:                |\n| Helm charts from Helm repositories                                  | :heavy_check_mark:       | :heavy_check_mark: |\n| Helm charts from Git repositories                                   | :heavy_check_mark:       | :heavy_check_mark: |\n| Helm uninstall on resource removal                                  | :heavy_check_mark:       | :heavy_check_mark: |\n| Conditional run of actions (i.e. rolling back after test failure)   | :heavy_chec`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/README.md"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 47,
                  "endLine": 22,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\nWhen operating a cluster, different teams may wish to receive notifications about the status of\ntheir Helm releases. For example, the on-call team would receive alerts about all failures in\nthe prod namespace, while the frontend team may wish to be alerted when a new version of the\nfrontend chart was released, no matter the namespace.\n\n## Design\n",
                    "rendered": {
                      "text": "\nWhen operating a cluster, different teams may wish to receive notifications about the status of\ntheir Helm releases. For example, the on-call team would receive alerts about all failures in\nthe prod namespace, while the frontend team may wish to be alerted when a new version of the\nfrontend chart was released, no matter the namespace.\n\n## Design\n",
                      "markdown": "`\nWhen operating a cluster, different teams may wish to receive notifications about the status of\ntheir Helm releases. For example, the on-call team would receive alerts about all failures in\nthe prod namespace, while the frontend team may wish to be alerted when a new version of the\nfrontend chart was released, no matter the namespace.\n\n## Design\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/README.md"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 45,
                  "endLine": 20,
                  "endColumn": 51,
                  "snippet": {
                    "text": "When dealing with an incident, one may wish to suspend the reconciliation of some Helm releases,\nwithout having to stop the reconciler and affect the whole cluster.\n\nWhen operating a cluster, different teams may wish to receive notifications about the status of\ntheir Helm releases. For example, the on-call team would receive alerts about all failures in\nthe prod namespace, while the frontend team may wish to be alerted when a new version of the\nfrontend chart was released, no matter the namespace.\n",
                    "rendered": {
                      "text": "When dealing with an incident, one may wish to suspend the reconciliation of some Helm releases,\nwithout having to stop the reconciler and affect the whole cluster.\n\nWhen operating a cluster, different teams may wish to receive notifications about the status of\ntheir Helm releases. For example, the on-call team would receive alerts about all failures in\nthe prod namespace, while the frontend team may wish to be alerted when a new version of the\nfrontend chart was released, no matter the namespace.\n",
                      "markdown": "`When dealing with an incident, one may wish to suspend the reconciliation of some Helm releases,\nwithout having to stop the reconciler and affect the whole cluster.\n\nWhen operating a cluster, different teams may wish to receive notifications about the status of\ntheir Helm releases. For example, the on-call team would receive alerts about all failures in\nthe prod namespace, while the frontend team may wish to be alerted when a new version of the\nfrontend chart was released, no matter the namespace.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/README.md"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 38,
                  "endLine": 17,
                  "endColumn": 44,
                  "snippet": {
                    "text": "[Custom Resource Definitions are managed in a separate chart](https://helm.sh/docs/chart_best_practices/custom_resource_definitions/#method-2-separate-charts)\nand this chart needs to be installed first.\n\nWhen dealing with an incident, one may wish to suspend the reconciliation of some Helm releases,\nwithout having to stop the reconciler and affect the whole cluster.\n\nWhen operating a cluster, different teams may wish to receive notifications about the status of\n",
                    "rendered": {
                      "text": "[Custom Resource Definitions are managed in a separate chart](https://helm.sh/docs/chart_best_practices/custom_resource_definitions/#method-2-separate-charts)\nand this chart needs to be installed first.\n\nWhen dealing with an incident, one may wish to suspend the reconciliation of some Helm releases,\nwithout having to stop the reconciler and affect the whole cluster.\n\nWhen operating a cluster, different teams may wish to receive notifications about the status of\n",
                      "markdown": "`[Custom Resource Definitions are managed in a separate chart](https://helm.sh/docs/chart_best_practices/custom_resource_definitions/#method-2-separate-charts)\nand this chart needs to be installed first.\n\nWhen dealing with an incident, one may wish to suspend the reconciliation of some Helm releases,\nwithout having to stop the reconciler and affect the whole cluster.\n\nWhen operating a cluster, different teams may wish to receive notifications about the status of\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/README.md"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 31,
                  "endLine": 12,
                  "endColumn": 40,
                  "snippet": {
                    "text": "install, upgrade, uninstall, rollback, test) and continuously reconcile the state of Helm releases.\n\nWhen provisioning a new cluster, one may wish to install Helm releases in a specific order, for\nexample because one relies on a service mesh admission controller managed by a `HelmRelease` and\nthe proxy injector must be functional before deploying applications into the mesh, or when\n[Custom Resource Definitions are managed in a separate chart](https://helm.sh/docs/chart_best_practices/custom_resource_definitions/#method-2-separate-charts)\nand this chart needs to be installed first.\n",
                    "rendered": {
                      "text": "install, upgrade, uninstall, rollback, test) and continuously reconcile the state of Helm releases.\n\nWhen provisioning a new cluster, one may wish to install Helm releases in a specific order, for\nexample because one relies on a service mesh admission controller managed by a `HelmRelease` and\nthe proxy injector must be functional before deploying applications into the mesh, or when\n[Custom Resource Definitions are managed in a separate chart](https://helm.sh/docs/chart_best_practices/custom_resource_definitions/#method-2-separate-charts)\nand this chart needs to be installed first.\n",
                      "markdown": "`install, upgrade, uninstall, rollback, test) and continuously reconcile the state of Helm releases.\n\nWhen provisioning a new cluster, one may wish to install Helm releases in a specific order, for\nexample because one relies on a service mesh admission controller managed by a `HelmRelease` and\nthe proxy injector must be functional before deploying applications into the mesh, or when\n[Custom Resource Definitions are managed in a separate chart](https://helm.sh/docs/chart_best_practices/custom_resource_definitions/#method-2-separate-charts)\nand this chart needs to be installed first.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/spec/README.md"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 40,
                  "endLine": 11,
                  "endColumn": 46,
                  "snippet": {
                    "text": "ly manage Helm chart releases with Kubernetes manifests.\n\n## Motivation\n\nThe main goal is to provide an automated operator that can perform Helm actions (e.g.\ninstall, upgrade, uninstall, rollback, test) and continuously reconcile the state of Helm releases.\n\nWhen provisioning a new cluster, one may wish to install Helm releases in a specific order, for\nexample because one relies on a service mesh admission controller managed by a `HelmRelease` and\nthe proxy injector must be functional before deploying applications into the mesh, or when\n[Custom Resource Definitions are managed in a separate chart](",
                    "rendered": {
                      "text": "ly manage Helm chart releases with Kubernetes manifests.\n\n## Motivation\n\nThe main goal is to provide an automated operator that can perform Helm actions (e.g.\ninstall, upgrade, uninstall, rollback, test) and continuously reconcile the state of Helm releases.\n\nWhen provisioning a new cluster, one may wish to install Helm releases in a specific order, for\nexample because one relies on a service mesh admission controller managed by a `HelmRelease` and\nthe proxy injector must be functional before deploying applications into the mesh, or when\n[Custom Resource Definitions are managed in a separate chart](",
                      "markdown": "`ly manage Helm chart releases with Kubernetes manifests.\n\n## Motivation\n\nThe main goal is to provide an automated operator that can perform Helm actions (e.g.\ninstall, upgrade, uninstall, rollback, test) and continuously reconcile the state of Helm releases.\n\nWhen provisioning a new cluster, one may wish to install Helm releases in a specific order, for\nexample because one relies on a service mesh admission controller managed by a `HelmRelease` and\nthe proxy injector must be functional before deploying applications into the mesh, or when\n[Custom Resource Definitions are managed in a separate chart](`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/api/v2/annotations_test.go"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 44,
                  "endLine": 76,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\t\t}\n\n\t\tif obj.Status.LastHandledForceAt != \"b\" {\n\t\t\tt.Error(\"ShouldHandleForceRequest did not update LastHandledForceAt\")\n\t\t}\n\t})\n}\n",
                    "rendered": {
                      "text": "\t\t}\n\n\t\tif obj.Status.LastHandledForceAt != \"b\" {\n\t\t\tt.Error(\"ShouldHandleForceRequest did not update LastHandledForceAt\")\n\t\t}\n\t})\n}\n",
                      "markdown": "`\t\t}\n\n\t\tif obj.Status.LastHandledForceAt != \"b\" {\n\t\t\tt.Error(\"ShouldHandleForceRequest did not update LastHandledForceAt\")\n\t\t}\n\t})\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/api/v2/annotations_test.go"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 44,
                  "endLine": 49,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\t\t}\n\n\t\tif obj.Status.LastHandledResetAt != \"b\" {\n\t\t\tt.Error(\"ShouldHandleResetRequest did not update LastHandledResetAt\")\n\t\t}\n\t})\n}\n",
                    "rendered": {
                      "text": "\t\t}\n\n\t\tif obj.Status.LastHandledResetAt != \"b\" {\n\t\t\tt.Error(\"ShouldHandleResetRequest did not update LastHandledResetAt\")\n\t\t}\n\t})\n}\n",
                      "markdown": "`\t\t}\n\n\t\tif obj.Status.LastHandledResetAt != \"b\" {\n\t\t\tt.Error(\"ShouldHandleResetRequest did not update LastHandledResetAt\")\n\t\t}\n\t})\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/rbac/leader_election_role.yaml"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 7,
                  "endLine": 43,
                  "snippet": {
                    "text": "      - list\n      - watch\n      - create\n      - update\n      - patch\n      - delete",
                    "rendered": {
                      "text": "      - list\n      - watch\n      - create\n      - update\n      - patch\n      - delete",
                      "markdown": "`      - list\n      - watch\n      - create\n      - update\n      - patch\n      - delete`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/rbac/leader_election_role.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 7,
                  "endLine": 26,
                  "snippet": {
                    "text": "      - configmaps/status\n    verbs:\n      - get\n      - update\n      - patch\n  - apiGroups:\n      - \"\"\n    resources:\n",
                    "rendered": {
                      "text": "      - configmaps/status\n    verbs:\n      - get\n      - update\n      - patch\n  - apiGroups:\n      - \"\"\n    resources:\n",
                      "markdown": "`      - configmaps/status\n    verbs:\n      - get\n      - update\n      - patch\n  - apiGroups:\n      - \"\"\n    resources:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/rbac/leader_election_role.yaml"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 7,
                  "endLine": 17,
                  "snippet": {
                    "text": "      - list\n      - watch\n      - create\n      - update\n      - patch\n      - delete\n  - apiGroups:\n      - \"\"\n",
                    "rendered": {
                      "text": "      - list\n      - watch\n      - create\n      - update\n      - patch\n      - delete\n  - apiGroups:\n      - \"\"\n",
                      "markdown": "`      - list\n      - watch\n      - create\n      - update\n      - patch\n      - delete\n  - apiGroups:\n      - \"\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/rbac/leader_election_role.yaml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 7,
                  "endLine": 41,
                  "snippet": {
                    "text": "    verbs:\n      - get\n      - list\n      - watch\n      - create\n      - update\n      - patch\n      - delete",
                    "rendered": {
                      "text": "    verbs:\n      - get\n      - list\n      - watch\n      - create\n      - update\n      - patch\n      - delete",
                      "markdown": "`    verbs:\n      - get\n      - list\n      - watch\n      - create\n      - update\n      - patch\n      - delete`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/rbac/leader_election_role.yaml"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 7,
                  "endLine": 15,
                  "snippet": {
                    "text": "    verbs:\n      - get\n      - list\n      - watch\n      - create\n      - update\n      - patch\n      - delete\n",
                    "rendered": {
                      "text": "    verbs:\n      - get\n      - list\n      - watch\n      - create\n      - update\n      - patch\n      - delete\n",
                      "markdown": "`    verbs:\n      - get\n      - list\n      - watch\n      - create\n      - update\n      - patch\n      - delete\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2beta1/helm.md"
                },
                "region": {
                  "startLine": 2274,
                  "startColumn": 42,
                  "endLine": 2274,
                  "endColumn": 46,
                  "snippet": {
                    "text": "<em>(Optional)</em>\n<p>TargetPath is the YAML dot notation path the value should be merged at. When\nset, the ValuesKey is expected to be a single flat value. Defaults to &lsquo;None&rsquo;,\nwhich results in the values getting merged at the root.</p>\n</td>\n</tr>\n<tr>\n",
                    "rendered": {
                      "text": "<em>(Optional)</em>\n<p>TargetPath is the YAML dot notation path the value should be merged at. When\nset, the ValuesKey is expected to be a single flat value. Defaults to &lsquo;None&rsquo;,\nwhich results in the values getting merged at the root.</p>\n</td>\n</tr>\n<tr>\n",
                      "markdown": "`<em>(Optional)</em>\n<p>TargetPath is the YAML dot notation path the value should be merged at. When\nset, the ValuesKey is expected to be a single flat value. Defaults to &lsquo;None&rsquo;,\nwhich results in the values getting merged at the root.</p>\n</td>\n</tr>\n<tr>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2beta1/helm.md"
                },
                "region": {
                  "startLine": 924,
                  "startColumn": 62,
                  "endLine": 924,
                  "endColumn": 66,
                  "snippet": {
                    "text": "<em>(Optional)</em>\n<p>KubeConfig for reconciling the HelmRelease on a remote cluster.\nWhen used in combination with HelmReleaseSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when HelmReleaseSpec.ServiceAccountName\n",
                    "rendered": {
                      "text": "<em>(Optional)</em>\n<p>KubeConfig for reconciling the HelmRelease on a remote cluster.\nWhen used in combination with HelmReleaseSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when HelmReleaseSpec.ServiceAccountName\n",
                      "markdown": "`<em>(Optional)</em>\n<p>KubeConfig for reconciling the HelmRelease on a remote cluster.\nWhen used in combination with HelmReleaseSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when HelmReleaseSpec.ServiceAccountName\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2beta1/helm.md"
                },
                "region": {
                  "startLine": 906,
                  "startColumn": 11,
                  "endLine": 906,
                  "endColumn": 15,
                  "snippet": {
                    "text": "</em>\n</td>\n<td>\n<p>Interval at which to reconcile the Helm release.\nThis interval is approximate and may be subject to jitter to ensure\nefficient use of resources.</p>\n</td>\n",
                    "rendered": {
                      "text": "</em>\n</td>\n<td>\n<p>Interval at which to reconcile the Helm release.\nThis interval is approximate and may be subject to jitter to ensure\nefficient use of resources.</p>\n</td>\n",
                      "markdown": "`</em>\n</td>\n<td>\n<p>Interval at which to reconcile the Helm release.\nThis interval is approximate and may be subject to jitter to ensure\nefficient use of resources.</p>\n</td>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2beta1/helm.md"
                },
                "region": {
                  "startLine": 747,
                  "startColumn": 11,
                  "endLine": 747,
                  "endColumn": 15,
                  "snippet": {
                    "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Interval at which to check the v1beta2.Source for updates. Defaults to\n&lsquo;HelmReleaseSpec.Interval&rsquo;.</p>\n</td>\n</tr>\n",
                    "rendered": {
                      "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Interval at which to check the v1beta2.Source for updates. Defaults to\n&lsquo;HelmReleaseSpec.Interval&rsquo;.</p>\n</td>\n</tr>\n",
                      "markdown": "`</td>\n<td>\n<em>(Optional)</em>\n<p>Interval at which to check the v1beta2.Source for updates. Defaults to\n&lsquo;HelmReleaseSpec.Interval&rsquo;.</p>\n</td>\n</tr>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2beta1/helm.md"
                },
                "region": {
                  "startLine": 707,
                  "startColumn": 47,
                  "endLine": 707,
                  "endColumn": 51,
                  "snippet": {
                    "text": "</em>\n</td>\n<td>\n<p>The name or path the Helm chart is available at in the SourceRef.</p>\n</td>\n</tr>\n<tr>\n",
                    "rendered": {
                      "text": "</em>\n</td>\n<td>\n<p>The name or path the Helm chart is available at in the SourceRef.</p>\n</td>\n</tr>\n<tr>\n",
                      "markdown": "`</em>\n</td>\n<td>\n<p>The name or path the Helm chart is available at in the SourceRef.</p>\n</td>\n</tr>\n<tr>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2beta1/helm.md"
                },
                "region": {
                  "startLine": 556,
                  "startColumn": 11,
                  "endLine": 556,
                  "endColumn": 15,
                  "snippet": {
                    "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Interval at which to check the v1beta2.Source for updates. Defaults to\n&lsquo;HelmReleaseSpec.Interval&rsquo;.</p>\n</td>\n</tr>\n",
                    "rendered": {
                      "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Interval at which to check the v1beta2.Source for updates. Defaults to\n&lsquo;HelmReleaseSpec.Interval&rsquo;.</p>\n</td>\n</tr>\n",
                      "markdown": "`</td>\n<td>\n<em>(Optional)</em>\n<p>Interval at which to check the v1beta2.Source for updates. Defaults to\n&lsquo;HelmReleaseSpec.Interval&rsquo;.</p>\n</td>\n</tr>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2beta1/helm.md"
                },
                "region": {
                  "startLine": 516,
                  "startColumn": 47,
                  "endLine": 516,
                  "endColumn": 51,
                  "snippet": {
                    "text": "</em>\n</td>\n<td>\n<p>The name or path the Helm chart is available at in the SourceRef.</p>\n</td>\n</tr>\n<tr>\n",
                    "rendered": {
                      "text": "</em>\n</td>\n<td>\n<p>The name or path the Helm chart is available at in the SourceRef.</p>\n</td>\n</tr>\n<tr>\n",
                      "markdown": "`</em>\n</td>\n<td>\n<p>The name or path the Helm chart is available at in the SourceRef.</p>\n</td>\n</tr>\n<tr>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2beta1/helm.md"
                },
                "region": {
                  "startLine": 397,
                  "startColumn": 27,
                  "endLine": 397,
                  "endColumn": 31,
                  "snippet": {
                    "text": "<a href=\"#helm.toolkit.fluxcd.io/v2beta1.HelmChartTemplateSpec\">HelmChartTemplateSpec</a>)\n</p>\n<p>CrossNamespaceObjectReference contains enough information to let you locate\nthe typed referenced object at cluster level.</p>\n<div class=\"md-typeset__scrollwrap\">\n<div class=\"md-typeset__table\">\n<table>\n",
                    "rendered": {
                      "text": "<a href=\"#helm.toolkit.fluxcd.io/v2beta1.HelmChartTemplateSpec\">HelmChartTemplateSpec</a>)\n</p>\n<p>CrossNamespaceObjectReference contains enough information to let you locate\nthe typed referenced object at cluster level.</p>\n<div class=\"md-typeset__scrollwrap\">\n<div class=\"md-typeset__table\">\n<table>\n",
                      "markdown": "`<a href=\"#helm.toolkit.fluxcd.io/v2beta1.HelmChartTemplateSpec\">HelmChartTemplateSpec</a>)\n</p>\n<p>CrossNamespaceObjectReference contains enough information to let you locate\nthe typed referenced object at cluster level.</p>\n<div class=\"md-typeset__scrollwrap\">\n<div class=\"md-typeset__table\">\n<table>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2beta1/helm.md"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 62,
                  "endLine": 113,
                  "endColumn": 66,
                  "snippet": {
                    "text": "<em>(Optional)</em>\n<p>KubeConfig for reconciling the HelmRelease on a remote cluster.\nWhen used in combination with HelmReleaseSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when HelmReleaseSpec.ServiceAccountName\n",
                    "rendered": {
                      "text": "<em>(Optional)</em>\n<p>KubeConfig for reconciling the HelmRelease on a remote cluster.\nWhen used in combination with HelmReleaseSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when HelmReleaseSpec.ServiceAccountName\n",
                      "markdown": "`<em>(Optional)</em>\n<p>KubeConfig for reconciling the HelmRelease on a remote cluster.\nWhen used in combination with HelmReleaseSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when HelmReleaseSpec.ServiceAccountName\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2beta1/helm.md"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 11,
                  "endLine": 95,
                  "endColumn": 15,
                  "snippet": {
                    "text": "</em>\n</td>\n<td>\n<p>Interval at which to reconcile the Helm release.\nThis interval is approximate and may be subject to jitter to ensure\nefficient use of resources.</p>\n</td>\n",
                    "rendered": {
                      "text": "</em>\n</td>\n<td>\n<p>Interval at which to reconcile the Helm release.\nThis interval is approximate and may be subject to jitter to ensure\nefficient use of resources.</p>\n</td>\n",
                      "markdown": "`</em>\n</td>\n<td>\n<p>Interval at which to reconcile the Helm release.\nThis interval is approximate and may be subject to jitter to ensure\nefficient use of resources.</p>\n</td>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2beta1/helm.md"
                },
                "region": {
                  "startLine": 1993,
                  "startColumn": 17,
                  "endLine": 1993,
                  "endColumn": 23,
                  "snippet": {
                    "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like\nJobs for hooks) during the performance of a Helm upgrade action. Defaults to\n&lsquo;HelmReleaseSpec.Timeout&rsquo;.</p>\n</td>\n",
                    "rendered": {
                      "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like\nJobs for hooks) during the performance of a Helm upgrade action. Defaults to\n&lsquo;HelmReleaseSpec.Timeout&rsquo;.</p>\n</td>\n",
                      "markdown": "`</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like\nJobs for hooks) during the performance of a Helm upgrade action. Defaults to\n&lsquo;HelmReleaseSpec.Timeout&rsquo;.</p>\n</td>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2beta1/helm.md"
                },
                "region": {
                  "startLine": 1904,
                  "startColumn": 17,
                  "endLine": 1904,
                  "endColumn": 23,
                  "snippet": {
                    "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like\nJobs for hooks) during the performance of a Helm uninstall action. Defaults\nto &lsquo;HelmReleaseSpec.Timeout&rsquo;.</p>\n</td>\n",
                    "rendered": {
                      "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like\nJobs for hooks) during the performance of a Helm uninstall action. Defaults\nto &lsquo;HelmReleaseSpec.Timeout&rsquo;.</p>\n</td>\n",
                      "markdown": "`</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like\nJobs for hooks) during the performance of a Helm uninstall action. Defaults\nto &lsquo;HelmReleaseSpec.Timeout&rsquo;.</p>\n</td>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2beta1/helm.md"
                },
                "region": {
                  "startLine": 1853,
                  "startColumn": 17,
                  "endLine": 1853,
                  "endColumn": 23,
                  "snippet": {
                    "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation during\nthe performance of a Helm test action. Defaults to &lsquo;HelmReleaseSpec.Timeout&rsquo;.</p>\n</td>\n</tr>\n",
                    "rendered": {
                      "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation during\nthe performance of a Helm test action. Defaults to &lsquo;HelmReleaseSpec.Timeout&rsquo;.</p>\n</td>\n</tr>\n",
                      "markdown": "`</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation during\nthe performance of a Helm test action. Defaults to &lsquo;HelmReleaseSpec.Timeout&rsquo;.</p>\n</td>\n</tr>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2beta1/helm.md"
                },
                "region": {
                  "startLine": 1728,
                  "startColumn": 17,
                  "endLine": 1728,
                  "endColumn": 23,
                  "snippet": {
                    "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like\nJobs for hooks) during the performance of a Helm rollback action. Defaults to\n&lsquo;HelmReleaseSpec.Timeout&rsquo;.</p>\n</td>\n",
                    "rendered": {
                      "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like\nJobs for hooks) during the performance of a Helm rollback action. Defaults to\n&lsquo;HelmReleaseSpec.Timeout&rsquo;.</p>\n</td>\n",
                      "markdown": "`</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like\nJobs for hooks) during the performance of a Helm rollback action. Defaults to\n&lsquo;HelmReleaseSpec.Timeout&rsquo;.</p>\n</td>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2beta1/helm.md"
                },
                "region": {
                  "startLine": 1369,
                  "startColumn": 17,
                  "endLine": 1369,
                  "endColumn": 23,
                  "snippet": {
                    "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like\nJobs for hooks) during the performance of a Helm install action. Defaults to\n&lsquo;HelmReleaseSpec.Timeout&rsquo;.</p>\n</td>\n",
                    "rendered": {
                      "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like\nJobs for hooks) during the performance of a Helm install action. Defaults to\n&lsquo;HelmReleaseSpec.Timeout&rsquo;.</p>\n</td>\n",
                      "markdown": "`</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like\nJobs for hooks) during the performance of a Helm install action. Defaults to\n&lsquo;HelmReleaseSpec.Timeout&rsquo;.</p>\n</td>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2beta1/helm.md"
                },
                "region": {
                  "startLine": 1036,
                  "startColumn": 29,
                  "endLine": 1036,
                  "endColumn": 38,
                  "snippet": {
                    "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>The name of the Kubernetes service account to impersonate\nwhen reconciling this HelmRelease.</p>\n</td>\n</tr>\n",
                    "rendered": {
                      "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>The name of the Kubernetes service account to impersonate\nwhen reconciling this HelmRelease.</p>\n</td>\n</tr>\n",
                      "markdown": "`</td>\n<td>\n<em>(Optional)</em>\n<p>The name of the Kubernetes service account to impersonate\nwhen reconciling this HelmRelease.</p>\n</td>\n</tr>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2beta1/helm.md"
                },
                "region": {
                  "startLine": 1010,
                  "startColumn": 17,
                  "endLine": 1010,
                  "endColumn": 23,
                  "snippet": {
                    "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like Jobs\nfor hooks) during the performance of a Helm action. Defaults to &lsquo;5m0s&rsquo;.</p>\n</td>\n</tr>\n",
                    "rendered": {
                      "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like Jobs\nfor hooks) during the performance of a Helm action. Defaults to &lsquo;5m0s&rsquo;.</p>\n</td>\n</tr>\n",
                      "markdown": "`</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like Jobs\nfor hooks) during the performance of a Helm action. Defaults to &lsquo;5m0s&rsquo;.</p>\n</td>\n</tr>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2beta1/helm.md"
                },
                "region": {
                  "startLine": 924,
                  "startColumn": 46,
                  "endLine": 924,
                  "endColumn": 55,
                  "snippet": {
                    "text": "<em>(Optional)</em>\n<p>KubeConfig for reconciling the HelmRelease on a remote cluster.\nWhen used in combination with HelmReleaseSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when HelmReleaseSpec.ServiceAccountName\n",
                    "rendered": {
                      "text": "<em>(Optional)</em>\n<p>KubeConfig for reconciling the HelmRelease on a remote cluster.\nWhen used in combination with HelmReleaseSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when HelmReleaseSpec.ServiceAccountName\n",
                      "markdown": "`<em>(Optional)</em>\n<p>KubeConfig for reconciling the HelmRelease on a remote cluster.\nWhen used in combination with HelmReleaseSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when HelmReleaseSpec.ServiceAccountName\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2beta1/helm.md"
                },
                "region": {
                  "startLine": 225,
                  "startColumn": 29,
                  "endLine": 225,
                  "endColumn": 38,
                  "snippet": {
                    "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>The name of the Kubernetes service account to impersonate\nwhen reconciling this HelmRelease.</p>\n</td>\n</tr>\n",
                    "rendered": {
                      "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>The name of the Kubernetes service account to impersonate\nwhen reconciling this HelmRelease.</p>\n</td>\n</tr>\n",
                      "markdown": "`</td>\n<td>\n<em>(Optional)</em>\n<p>The name of the Kubernetes service account to impersonate\nwhen reconciling this HelmRelease.</p>\n</td>\n</tr>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2beta1/helm.md"
                },
                "region": {
                  "startLine": 199,
                  "startColumn": 17,
                  "endLine": 199,
                  "endColumn": 23,
                  "snippet": {
                    "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like Jobs\nfor hooks) during the performance of a Helm action. Defaults to &lsquo;5m0s&rsquo;.</p>\n</td>\n</tr>\n",
                    "rendered": {
                      "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like Jobs\nfor hooks) during the performance of a Helm action. Defaults to &lsquo;5m0s&rsquo;.</p>\n</td>\n</tr>\n",
                      "markdown": "`</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like Jobs\nfor hooks) during the performance of a Helm action. Defaults to &lsquo;5m0s&rsquo;.</p>\n</td>\n</tr>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2beta1/helm.md"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 46,
                  "endLine": 113,
                  "endColumn": 55,
                  "snippet": {
                    "text": "<em>(Optional)</em>\n<p>KubeConfig for reconciling the HelmRelease on a remote cluster.\nWhen used in combination with HelmReleaseSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when HelmReleaseSpec.ServiceAccountName\n",
                    "rendered": {
                      "text": "<em>(Optional)</em>\n<p>KubeConfig for reconciling the HelmRelease on a remote cluster.\nWhen used in combination with HelmReleaseSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when HelmReleaseSpec.ServiceAccountName\n",
                      "markdown": "`<em>(Optional)</em>\n<p>KubeConfig for reconciling the HelmRelease on a remote cluster.\nWhen used in combination with HelmReleaseSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when HelmReleaseSpec.ServiceAccountName\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2beta2/helm.md"
                },
                "region": {
                  "startLine": 2978,
                  "startColumn": 42,
                  "endLine": 2978,
                  "endColumn": 46,
                  "snippet": {
                    "text": "<em>(Optional)</em>\n<p>TargetPath is the YAML dot notation path the value should be merged at. When\nset, the ValuesKey is expected to be a single flat value. Defaults to &lsquo;None&rsquo;,\nwhich results in the values getting merged at the root.</p>\n</td>\n</tr>\n<tr>\n",
                    "rendered": {
                      "text": "<em>(Optional)</em>\n<p>TargetPath is the YAML dot notation path the value should be merged at. When\nset, the ValuesKey is expected to be a single flat value. Defaults to &lsquo;None&rsquo;,\nwhich results in the values getting merged at the root.</p>\n</td>\n</tr>\n<tr>\n",
                      "markdown": "`<em>(Optional)</em>\n<p>TargetPath is the YAML dot notation path the value should be merged at. When\nset, the ValuesKey is expected to be a single flat value. Defaults to &lsquo;None&rsquo;,\nwhich results in the values getting merged at the root.</p>\n</td>\n</tr>\n<tr>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2beta2/helm.md"
                },
                "region": {
                  "startLine": 1167,
                  "startColumn": 62,
                  "endLine": 1167,
                  "endColumn": 66,
                  "snippet": {
                    "text": "<em>(Optional)</em>\n<p>KubeConfig for reconciling the HelmRelease on a remote cluster.\nWhen used in combination with HelmReleaseSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when HelmReleaseSpec.ServiceAccountName\n",
                    "rendered": {
                      "text": "<em>(Optional)</em>\n<p>KubeConfig for reconciling the HelmRelease on a remote cluster.\nWhen used in combination with HelmReleaseSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when HelmReleaseSpec.ServiceAccountName\n",
                      "markdown": "`<em>(Optional)</em>\n<p>KubeConfig for reconciling the HelmRelease on a remote cluster.\nWhen used in combination with HelmReleaseSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when HelmReleaseSpec.ServiceAccountName\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2beta2/helm.md"
                },
                "region": {
                  "startLine": 1151,
                  "startColumn": 11,
                  "endLine": 1151,
                  "endColumn": 15,
                  "snippet": {
                    "text": "</em>\n</td>\n<td>\n<p>Interval at which to reconcile the Helm release.</p>\n</td>\n</tr>\n<tr>\n",
                    "rendered": {
                      "text": "</em>\n</td>\n<td>\n<p>Interval at which to reconcile the Helm release.</p>\n</td>\n</tr>\n<tr>\n",
                      "markdown": "`</em>\n</td>\n<td>\n<p>Interval at which to reconcile the Helm release.</p>\n</td>\n</tr>\n<tr>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2beta2/helm.md"
                },
                "region": {
                  "startLine": 963,
                  "startColumn": 11,
                  "endLine": 963,
                  "endColumn": 15,
                  "snippet": {
                    "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Interval at which to check the v1.Source for updates. Defaults to\n&lsquo;HelmReleaseSpec.Interval&rsquo;.</p>\n</td>\n</tr>\n",
                    "rendered": {
                      "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Interval at which to check the v1.Source for updates. Defaults to\n&lsquo;HelmReleaseSpec.Interval&rsquo;.</p>\n</td>\n</tr>\n",
                      "markdown": "`</td>\n<td>\n<em>(Optional)</em>\n<p>Interval at which to check the v1.Source for updates. Defaults to\n&lsquo;HelmReleaseSpec.Interval&rsquo;.</p>\n</td>\n</tr>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2beta2/helm.md"
                },
                "region": {
                  "startLine": 923,
                  "startColumn": 47,
                  "endLine": 923,
                  "endColumn": 51,
                  "snippet": {
                    "text": "</em>\n</td>\n<td>\n<p>The name or path the Helm chart is available at in the SourceRef.</p>\n</td>\n</tr>\n<tr>\n",
                    "rendered": {
                      "text": "</em>\n</td>\n<td>\n<p>The name or path the Helm chart is available at in the SourceRef.</p>\n</td>\n</tr>\n<tr>\n",
                      "markdown": "`</em>\n</td>\n<td>\n<p>The name or path the Helm chart is available at in the SourceRef.</p>\n</td>\n</tr>\n<tr>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2beta2/helm.md"
                },
                "region": {
                  "startLine": 759,
                  "startColumn": 11,
                  "endLine": 759,
                  "endColumn": 15,
                  "snippet": {
                    "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Interval at which to check the v1.Source for updates. Defaults to\n&lsquo;HelmReleaseSpec.Interval&rsquo;.</p>\n</td>\n</tr>\n",
                    "rendered": {
                      "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Interval at which to check the v1.Source for updates. Defaults to\n&lsquo;HelmReleaseSpec.Interval&rsquo;.</p>\n</td>\n</tr>\n",
                      "markdown": "`</td>\n<td>\n<em>(Optional)</em>\n<p>Interval at which to check the v1.Source for updates. Defaults to\n&lsquo;HelmReleaseSpec.Interval&rsquo;.</p>\n</td>\n</tr>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2beta2/helm.md"
                },
                "region": {
                  "startLine": 719,
                  "startColumn": 47,
                  "endLine": 719,
                  "endColumn": 51,
                  "snippet": {
                    "text": "</em>\n</td>\n<td>\n<p>The name or path the Helm chart is available at in the SourceRef.</p>\n</td>\n</tr>\n<tr>\n",
                    "rendered": {
                      "text": "</em>\n</td>\n<td>\n<p>The name or path the Helm chart is available at in the SourceRef.</p>\n</td>\n</tr>\n<tr>\n",
                      "markdown": "`</em>\n</td>\n<td>\n<p>The name or path the Helm chart is available at in the SourceRef.</p>\n</td>\n</tr>\n<tr>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2beta2/helm.md"
                },
                "region": {
                  "startLine": 495,
                  "startColumn": 27,
                  "endLine": 495,
                  "endColumn": 31,
                  "snippet": {
                    "text": "<a href=\"#helm.toolkit.fluxcd.io/v2beta2.HelmReleaseSpec\">HelmReleaseSpec</a>)\n</p>\n<p>CrossNamespaceSourceReference contains enough information to let you locate\nthe typed referenced object at cluster level.</p>\n<div class=\"md-typeset__scrollwrap\">\n<div class=\"md-typeset__table\">\n<table>\n",
                    "rendered": {
                      "text": "<a href=\"#helm.toolkit.fluxcd.io/v2beta2.HelmReleaseSpec\">HelmReleaseSpec</a>)\n</p>\n<p>CrossNamespaceSourceReference contains enough information to let you locate\nthe typed referenced object at cluster level.</p>\n<div class=\"md-typeset__scrollwrap\">\n<div class=\"md-typeset__table\">\n<table>\n",
                      "markdown": "`<a href=\"#helm.toolkit.fluxcd.io/v2beta2.HelmReleaseSpec\">HelmReleaseSpec</a>)\n</p>\n<p>CrossNamespaceSourceReference contains enough information to let you locate\nthe typed referenced object at cluster level.</p>\n<div class=\"md-typeset__scrollwrap\">\n<div class=\"md-typeset__table\">\n<table>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2beta2/helm.md"
                },
                "region": {
                  "startLine": 427,
                  "startColumn": 27,
                  "endLine": 427,
                  "endColumn": 31,
                  "snippet": {
                    "text": "<a href=\"#helm.toolkit.fluxcd.io/v2beta2.HelmChartTemplateSpec\">HelmChartTemplateSpec</a>)\n</p>\n<p>CrossNamespaceObjectReference contains enough information to let you locate\nthe typed referenced object at cluster level.</p>\n<div class=\"md-typeset__scrollwrap\">\n<div class=\"md-typeset__table\">\n<table>\n",
                    "rendered": {
                      "text": "<a href=\"#helm.toolkit.fluxcd.io/v2beta2.HelmChartTemplateSpec\">HelmChartTemplateSpec</a>)\n</p>\n<p>CrossNamespaceObjectReference contains enough information to let you locate\nthe typed referenced object at cluster level.</p>\n<div class=\"md-typeset__scrollwrap\">\n<div class=\"md-typeset__table\">\n<table>\n",
                      "markdown": "`<a href=\"#helm.toolkit.fluxcd.io/v2beta2.HelmChartTemplateSpec\">HelmChartTemplateSpec</a>)\n</p>\n<p>CrossNamespaceObjectReference contains enough information to let you locate\nthe typed referenced object at cluster level.</p>\n<div class=\"md-typeset__scrollwrap\">\n<div class=\"md-typeset__table\">\n<table>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2beta2/helm.md"
                },
                "region": {
                  "startLine": 127,
                  "startColumn": 62,
                  "endLine": 127,
                  "endColumn": 66,
                  "snippet": {
                    "text": "<em>(Optional)</em>\n<p>KubeConfig for reconciling the HelmRelease on a remote cluster.\nWhen used in combination with HelmReleaseSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when HelmReleaseSpec.ServiceAccountName\n",
                    "rendered": {
                      "text": "<em>(Optional)</em>\n<p>KubeConfig for reconciling the HelmRelease on a remote cluster.\nWhen used in combination with HelmReleaseSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when HelmReleaseSpec.ServiceAccountName\n",
                      "markdown": "`<em>(Optional)</em>\n<p>KubeConfig for reconciling the HelmRelease on a remote cluster.\nWhen used in combination with HelmReleaseSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when HelmReleaseSpec.ServiceAccountName\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2beta2/helm.md"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 11,
                  "endLine": 111,
                  "endColumn": 15,
                  "snippet": {
                    "text": "</em>\n</td>\n<td>\n<p>Interval at which to reconcile the Helm release.</p>\n</td>\n</tr>\n<tr>\n",
                    "rendered": {
                      "text": "</em>\n</td>\n<td>\n<p>Interval at which to reconcile the Helm release.</p>\n</td>\n</tr>\n<tr>\n",
                      "markdown": "`</em>\n</td>\n<td>\n<p>Interval at which to reconcile the Helm release.</p>\n</td>\n</tr>\n<tr>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2beta2/helm.md"
                },
                "region": {
                  "startLine": 2699,
                  "startColumn": 17,
                  "endLine": 2699,
                  "endColumn": 23,
                  "snippet": {
                    "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like\nJobs for hooks) during the performance of a Helm upgrade action. Defaults to\n&lsquo;HelmReleaseSpec.Timeout&rsquo;.</p>\n</td>\n",
                    "rendered": {
                      "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like\nJobs for hooks) during the performance of a Helm upgrade action. Defaults to\n&lsquo;HelmReleaseSpec.Timeout&rsquo;.</p>\n</td>\n",
                      "markdown": "`</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like\nJobs for hooks) during the performance of a Helm upgrade action. Defaults to\n&lsquo;HelmReleaseSpec.Timeout&rsquo;.</p>\n</td>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2beta2/helm.md"
                },
                "region": {
                  "startLine": 2610,
                  "startColumn": 17,
                  "endLine": 2610,
                  "endColumn": 23,
                  "snippet": {
                    "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like\nJobs for hooks) during the performance of a Helm uninstall action. Defaults\nto &lsquo;HelmReleaseSpec.Timeout&rsquo;.</p>\n</td>\n",
                    "rendered": {
                      "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like\nJobs for hooks) during the performance of a Helm uninstall action. Defaults\nto &lsquo;HelmReleaseSpec.Timeout&rsquo;.</p>\n</td>\n",
                      "markdown": "`</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like\nJobs for hooks) during the performance of a Helm uninstall action. Defaults\nto &lsquo;HelmReleaseSpec.Timeout&rsquo;.</p>\n</td>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2beta2/helm.md"
                },
                "region": {
                  "startLine": 2562,
                  "startColumn": 23,
                  "endLine": 2562,
                  "endColumn": 29,
                  "snippet": {
                    "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>LastCompleted is the time the test hook last completed.</p>\n</td>\n</tr>\n<tr>\n",
                    "rendered": {
                      "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>LastCompleted is the time the test hook last completed.</p>\n</td>\n</tr>\n<tr>\n",
                      "markdown": "`</td>\n<td>\n<em>(Optional)</em>\n<p>LastCompleted is the time the test hook last completed.</p>\n</td>\n</tr>\n<tr>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2beta2/helm.md"
                },
                "region": {
                  "startLine": 2548,
                  "startColumn": 21,
                  "endLine": 2548,
                  "endColumn": 27,
                  "snippet": {
                    "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>LastStarted is the time the test hook was last started.</p>\n</td>\n</tr>\n<tr>\n",
                    "rendered": {
                      "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>LastStarted is the time the test hook was last started.</p>\n</td>\n</tr>\n<tr>\n",
                      "markdown": "`</td>\n<td>\n<em>(Optional)</em>\n<p>LastStarted is the time the test hook was last started.</p>\n</td>\n</tr>\n<tr>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2beta2/helm.md"
                },
                "region": {
                  "startLine": 2484,
                  "startColumn": 17,
                  "endLine": 2484,
                  "endColumn": 23,
                  "snippet": {
                    "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation during\nthe performance of a Helm test action. Defaults to &lsquo;HelmReleaseSpec.Timeout&rsquo;.</p>\n</td>\n</tr>\n",
                    "rendered": {
                      "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation during\nthe performance of a Helm test action. Defaults to &lsquo;HelmReleaseSpec.Timeout&rsquo;.</p>\n</td>\n</tr>\n",
                      "markdown": "`</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation during\nthe performance of a Helm test action. Defaults to &lsquo;HelmReleaseSpec.Timeout&rsquo;.</p>\n</td>\n</tr>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2beta2/helm.md"
                },
                "region": {
                  "startLine": 2161,
                  "startColumn": 17,
                  "endLine": 2161,
                  "endColumn": 23,
                  "snippet": {
                    "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like\nJobs for hooks) during the performance of a Helm rollback action. Defaults to\n&lsquo;HelmReleaseSpec.Timeout&rsquo;.</p>\n</td>\n",
                    "rendered": {
                      "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like\nJobs for hooks) during the performance of a Helm rollback action. Defaults to\n&lsquo;HelmReleaseSpec.Timeout&rsquo;.</p>\n</td>\n",
                      "markdown": "`</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like\nJobs for hooks) during the performance of a Helm rollback action. Defaults to\n&lsquo;HelmReleaseSpec.Timeout&rsquo;.</p>\n</td>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2beta2/helm.md"
                },
                "region": {
                  "startLine": 1793,
                  "startColumn": 17,
                  "endLine": 1793,
                  "endColumn": 23,
                  "snippet": {
                    "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like\nJobs for hooks) during the performance of a Helm install action. Defaults to\n&lsquo;HelmReleaseSpec.Timeout&rsquo;.</p>\n</td>\n",
                    "rendered": {
                      "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like\nJobs for hooks) during the performance of a Helm install action. Defaults to\n&lsquo;HelmReleaseSpec.Timeout&rsquo;.</p>\n</td>\n",
                      "markdown": "`</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like\nJobs for hooks) during the performance of a Helm install action. Defaults to\n&lsquo;HelmReleaseSpec.Timeout&rsquo;.</p>\n</td>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2beta2/helm.md"
                },
                "region": {
                  "startLine": 1279,
                  "startColumn": 29,
                  "endLine": 1279,
                  "endColumn": 38,
                  "snippet": {
                    "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>The name of the Kubernetes service account to impersonate\nwhen reconciling this HelmRelease.</p>\n</td>\n</tr>\n",
                    "rendered": {
                      "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>The name of the Kubernetes service account to impersonate\nwhen reconciling this HelmRelease.</p>\n</td>\n</tr>\n",
                      "markdown": "`</td>\n<td>\n<em>(Optional)</em>\n<p>The name of the Kubernetes service account to impersonate\nwhen reconciling this HelmRelease.</p>\n</td>\n</tr>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2beta2/helm.md"
                },
                "region": {
                  "startLine": 1253,
                  "startColumn": 17,
                  "endLine": 1253,
                  "endColumn": 23,
                  "snippet": {
                    "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like Jobs\nfor hooks) during the performance of a Helm action. Defaults to &lsquo;5m0s&rsquo;.</p>\n</td>\n</tr>\n",
                    "rendered": {
                      "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like Jobs\nfor hooks) during the performance of a Helm action. Defaults to &lsquo;5m0s&rsquo;.</p>\n</td>\n</tr>\n",
                      "markdown": "`</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like Jobs\nfor hooks) during the performance of a Helm action. Defaults to &lsquo;5m0s&rsquo;.</p>\n</td>\n</tr>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2beta2/helm.md"
                },
                "region": {
                  "startLine": 1167,
                  "startColumn": 46,
                  "endLine": 1167,
                  "endColumn": 55,
                  "snippet": {
                    "text": "<em>(Optional)</em>\n<p>KubeConfig for reconciling the HelmRelease on a remote cluster.\nWhen used in combination with HelmReleaseSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when HelmReleaseSpec.ServiceAccountName\n",
                    "rendered": {
                      "text": "<em>(Optional)</em>\n<p>KubeConfig for reconciling the HelmRelease on a remote cluster.\nWhen used in combination with HelmReleaseSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when HelmReleaseSpec.ServiceAccountName\n",
                      "markdown": "`<em>(Optional)</em>\n<p>KubeConfig for reconciling the HelmRelease on a remote cluster.\nWhen used in combination with HelmReleaseSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when HelmReleaseSpec.ServiceAccountName\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2beta2/helm.md"
                },
                "region": {
                  "startLine": 239,
                  "startColumn": 29,
                  "endLine": 239,
                  "endColumn": 38,
                  "snippet": {
                    "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>The name of the Kubernetes service account to impersonate\nwhen reconciling this HelmRelease.</p>\n</td>\n</tr>\n",
                    "rendered": {
                      "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>The name of the Kubernetes service account to impersonate\nwhen reconciling this HelmRelease.</p>\n</td>\n</tr>\n",
                      "markdown": "`</td>\n<td>\n<em>(Optional)</em>\n<p>The name of the Kubernetes service account to impersonate\nwhen reconciling this HelmRelease.</p>\n</td>\n</tr>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2beta2/helm.md"
                },
                "region": {
                  "startLine": 213,
                  "startColumn": 17,
                  "endLine": 213,
                  "endColumn": 23,
                  "snippet": {
                    "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like Jobs\nfor hooks) during the performance of a Helm action. Defaults to &lsquo;5m0s&rsquo;.</p>\n</td>\n</tr>\n",
                    "rendered": {
                      "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like Jobs\nfor hooks) during the performance of a Helm action. Defaults to &lsquo;5m0s&rsquo;.</p>\n</td>\n</tr>\n",
                      "markdown": "`</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like Jobs\nfor hooks) during the performance of a Helm action. Defaults to &lsquo;5m0s&rsquo;.</p>\n</td>\n</tr>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2beta2/helm.md"
                },
                "region": {
                  "startLine": 127,
                  "startColumn": 46,
                  "endLine": 127,
                  "endColumn": 55,
                  "snippet": {
                    "text": "<em>(Optional)</em>\n<p>KubeConfig for reconciling the HelmRelease on a remote cluster.\nWhen used in combination with HelmReleaseSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when HelmReleaseSpec.ServiceAccountName\n",
                    "rendered": {
                      "text": "<em>(Optional)</em>\n<p>KubeConfig for reconciling the HelmRelease on a remote cluster.\nWhen used in combination with HelmReleaseSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when HelmReleaseSpec.ServiceAccountName\n",
                      "markdown": "`<em>(Optional)</em>\n<p>KubeConfig for reconciling the HelmRelease on a remote cluster.\nWhen used in combination with HelmReleaseSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when HelmReleaseSpec.ServiceAccountName\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2/helm.md"
                },
                "region": {
                  "startLine": 2955,
                  "startColumn": 42,
                  "endLine": 2955,
                  "endColumn": 46,
                  "snippet": {
                    "text": "<em>(Optional)</em>\n<p>TargetPath is the YAML dot notation path the value should be merged at. When\nset, the ValuesKey is expected to be a single flat value. Defaults to &lsquo;None&rsquo;,\nwhich results in the values getting merged at the root.</p>\n</td>\n</tr>\n<tr>\n",
                    "rendered": {
                      "text": "<em>(Optional)</em>\n<p>TargetPath is the YAML dot notation path the value should be merged at. When\nset, the ValuesKey is expected to be a single flat value. Defaults to &lsquo;None&rsquo;,\nwhich results in the values getting merged at the root.</p>\n</td>\n</tr>\n<tr>\n",
                      "markdown": "`<em>(Optional)</em>\n<p>TargetPath is the YAML dot notation path the value should be merged at. When\nset, the ValuesKey is expected to be a single flat value. Defaults to &lsquo;None&rsquo;,\nwhich results in the values getting merged at the root.</p>\n</td>\n</tr>\n<tr>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2/helm.md"
                },
                "region": {
                  "startLine": 1137,
                  "startColumn": 62,
                  "endLine": 1137,
                  "endColumn": 66,
                  "snippet": {
                    "text": "<em>(Optional)</em>\n<p>KubeConfig for reconciling the HelmRelease on a remote cluster.\nWhen used in combination with HelmReleaseSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when HelmReleaseSpec.ServiceAccountName\n",
                    "rendered": {
                      "text": "<em>(Optional)</em>\n<p>KubeConfig for reconciling the HelmRelease on a remote cluster.\nWhen used in combination with HelmReleaseSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when HelmReleaseSpec.ServiceAccountName\n",
                      "markdown": "`<em>(Optional)</em>\n<p>KubeConfig for reconciling the HelmRelease on a remote cluster.\nWhen used in combination with HelmReleaseSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when HelmReleaseSpec.ServiceAccountName\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2/helm.md"
                },
                "region": {
                  "startLine": 1121,
                  "startColumn": 11,
                  "endLine": 1121,
                  "endColumn": 15,
                  "snippet": {
                    "text": "</em>\n</td>\n<td>\n<p>Interval at which to reconcile the Helm release.</p>\n</td>\n</tr>\n<tr>\n",
                    "rendered": {
                      "text": "</em>\n</td>\n<td>\n<p>Interval at which to reconcile the Helm release.</p>\n</td>\n</tr>\n<tr>\n",
                      "markdown": "`</em>\n</td>\n<td>\n<p>Interval at which to reconcile the Helm release.</p>\n</td>\n</tr>\n<tr>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2/helm.md"
                },
                "region": {
                  "startLine": 948,
                  "startColumn": 11,
                  "endLine": 948,
                  "endColumn": 15,
                  "snippet": {
                    "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Interval at which to check the v1.Source for updates. Defaults to\n&lsquo;HelmReleaseSpec.Interval&rsquo;.</p>\n</td>\n</tr>\n",
                    "rendered": {
                      "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Interval at which to check the v1.Source for updates. Defaults to\n&lsquo;HelmReleaseSpec.Interval&rsquo;.</p>\n</td>\n</tr>\n",
                      "markdown": "`</td>\n<td>\n<em>(Optional)</em>\n<p>Interval at which to check the v1.Source for updates. Defaults to\n&lsquo;HelmReleaseSpec.Interval&rsquo;.</p>\n</td>\n</tr>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2/helm.md"
                },
                "region": {
                  "startLine": 908,
                  "startColumn": 47,
                  "endLine": 908,
                  "endColumn": 51,
                  "snippet": {
                    "text": "</em>\n</td>\n<td>\n<p>The name or path the Helm chart is available at in the SourceRef.</p>\n</td>\n</tr>\n<tr>\n",
                    "rendered": {
                      "text": "</em>\n</td>\n<td>\n<p>The name or path the Helm chart is available at in the SourceRef.</p>\n</td>\n</tr>\n<tr>\n",
                      "markdown": "`</em>\n</td>\n<td>\n<p>The name or path the Helm chart is available at in the SourceRef.</p>\n</td>\n</tr>\n<tr>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2/helm.md"
                },
                "region": {
                  "startLine": 759,
                  "startColumn": 11,
                  "endLine": 759,
                  "endColumn": 15,
                  "snippet": {
                    "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Interval at which to check the v1.Source for updates. Defaults to\n&lsquo;HelmReleaseSpec.Interval&rsquo;.</p>\n</td>\n</tr>\n",
                    "rendered": {
                      "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Interval at which to check the v1.Source for updates. Defaults to\n&lsquo;HelmReleaseSpec.Interval&rsquo;.</p>\n</td>\n</tr>\n",
                      "markdown": "`</td>\n<td>\n<em>(Optional)</em>\n<p>Interval at which to check the v1.Source for updates. Defaults to\n&lsquo;HelmReleaseSpec.Interval&rsquo;.</p>\n</td>\n</tr>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2/helm.md"
                },
                "region": {
                  "startLine": 719,
                  "startColumn": 47,
                  "endLine": 719,
                  "endColumn": 51,
                  "snippet": {
                    "text": "</em>\n</td>\n<td>\n<p>The name or path the Helm chart is available at in the SourceRef.</p>\n</td>\n</tr>\n<tr>\n",
                    "rendered": {
                      "text": "</em>\n</td>\n<td>\n<p>The name or path the Helm chart is available at in the SourceRef.</p>\n</td>\n</tr>\n<tr>\n",
                      "markdown": "`</em>\n</td>\n<td>\n<p>The name or path the Helm chart is available at in the SourceRef.</p>\n</td>\n</tr>\n<tr>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2/helm.md"
                },
                "region": {
                  "startLine": 495,
                  "startColumn": 27,
                  "endLine": 495,
                  "endColumn": 31,
                  "snippet": {
                    "text": "<a href=\"#helm.toolkit.fluxcd.io/v2.HelmReleaseSpec\">HelmReleaseSpec</a>)\n</p>\n<p>CrossNamespaceSourceReference contains enough information to let you locate\nthe typed referenced object at cluster level.</p>\n<div class=\"md-typeset__scrollwrap\">\n<div class=\"md-typeset__table\">\n<table>\n",
                    "rendered": {
                      "text": "<a href=\"#helm.toolkit.fluxcd.io/v2.HelmReleaseSpec\">HelmReleaseSpec</a>)\n</p>\n<p>CrossNamespaceSourceReference contains enough information to let you locate\nthe typed referenced object at cluster level.</p>\n<div class=\"md-typeset__scrollwrap\">\n<div class=\"md-typeset__table\">\n<table>\n",
                      "markdown": "`<a href=\"#helm.toolkit.fluxcd.io/v2.HelmReleaseSpec\">HelmReleaseSpec</a>)\n</p>\n<p>CrossNamespaceSourceReference contains enough information to let you locate\nthe typed referenced object at cluster level.</p>\n<div class=\"md-typeset__scrollwrap\">\n<div class=\"md-typeset__table\">\n<table>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2/helm.md"
                },
                "region": {
                  "startLine": 427,
                  "startColumn": 27,
                  "endLine": 427,
                  "endColumn": 31,
                  "snippet": {
                    "text": "<a href=\"#helm.toolkit.fluxcd.io/v2.HelmChartTemplateSpec\">HelmChartTemplateSpec</a>)\n</p>\n<p>CrossNamespaceObjectReference contains enough information to let you locate\nthe typed referenced object at cluster level.</p>\n<div class=\"md-typeset__scrollwrap\">\n<div class=\"md-typeset__table\">\n<table>\n",
                    "rendered": {
                      "text": "<a href=\"#helm.toolkit.fluxcd.io/v2.HelmChartTemplateSpec\">HelmChartTemplateSpec</a>)\n</p>\n<p>CrossNamespaceObjectReference contains enough information to let you locate\nthe typed referenced object at cluster level.</p>\n<div class=\"md-typeset__scrollwrap\">\n<div class=\"md-typeset__table\">\n<table>\n",
                      "markdown": "`<a href=\"#helm.toolkit.fluxcd.io/v2.HelmChartTemplateSpec\">HelmChartTemplateSpec</a>)\n</p>\n<p>CrossNamespaceObjectReference contains enough information to let you locate\nthe typed referenced object at cluster level.</p>\n<div class=\"md-typeset__scrollwrap\">\n<div class=\"md-typeset__table\">\n<table>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2/helm.md"
                },
                "region": {
                  "startLine": 127,
                  "startColumn": 62,
                  "endLine": 127,
                  "endColumn": 66,
                  "snippet": {
                    "text": "<em>(Optional)</em>\n<p>KubeConfig for reconciling the HelmRelease on a remote cluster.\nWhen used in combination with HelmReleaseSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when HelmReleaseSpec.ServiceAccountName\n",
                    "rendered": {
                      "text": "<em>(Optional)</em>\n<p>KubeConfig for reconciling the HelmRelease on a remote cluster.\nWhen used in combination with HelmReleaseSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when HelmReleaseSpec.ServiceAccountName\n",
                      "markdown": "`<em>(Optional)</em>\n<p>KubeConfig for reconciling the HelmRelease on a remote cluster.\nWhen used in combination with HelmReleaseSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when HelmReleaseSpec.ServiceAccountName\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2/helm.md"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 11,
                  "endLine": 111,
                  "endColumn": 15,
                  "snippet": {
                    "text": "</em>\n</td>\n<td>\n<p>Interval at which to reconcile the Helm release.</p>\n</td>\n</tr>\n<tr>\n",
                    "rendered": {
                      "text": "</em>\n</td>\n<td>\n<p>Interval at which to reconcile the Helm release.</p>\n</td>\n</tr>\n<tr>\n",
                      "markdown": "`</em>\n</td>\n<td>\n<p>Interval at which to reconcile the Helm release.</p>\n</td>\n</tr>\n<tr>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2/helm.md"
                },
                "region": {
                  "startLine": 2663,
                  "startColumn": 17,
                  "endLine": 2663,
                  "endColumn": 23,
                  "snippet": {
                    "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like\nJobs for hooks) during the performance of a Helm upgrade action. Defaults to\n&lsquo;HelmReleaseSpec.Timeout&rsquo;.</p>\n</td>\n",
                    "rendered": {
                      "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like\nJobs for hooks) during the performance of a Helm upgrade action. Defaults to\n&lsquo;HelmReleaseSpec.Timeout&rsquo;.</p>\n</td>\n",
                      "markdown": "`</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like\nJobs for hooks) during the performance of a Helm upgrade action. Defaults to\n&lsquo;HelmReleaseSpec.Timeout&rsquo;.</p>\n</td>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2/helm.md"
                },
                "region": {
                  "startLine": 2574,
                  "startColumn": 17,
                  "endLine": 2574,
                  "endColumn": 23,
                  "snippet": {
                    "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like\nJobs for hooks) during the performance of a Helm uninstall action. Defaults\nto &lsquo;HelmReleaseSpec.Timeout&rsquo;.</p>\n</td>\n",
                    "rendered": {
                      "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like\nJobs for hooks) during the performance of a Helm uninstall action. Defaults\nto &lsquo;HelmReleaseSpec.Timeout&rsquo;.</p>\n</td>\n",
                      "markdown": "`</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like\nJobs for hooks) during the performance of a Helm uninstall action. Defaults\nto &lsquo;HelmReleaseSpec.Timeout&rsquo;.</p>\n</td>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2/helm.md"
                },
                "region": {
                  "startLine": 2526,
                  "startColumn": 23,
                  "endLine": 2526,
                  "endColumn": 29,
                  "snippet": {
                    "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>LastCompleted is the time the test hook last completed.</p>\n</td>\n</tr>\n<tr>\n",
                    "rendered": {
                      "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>LastCompleted is the time the test hook last completed.</p>\n</td>\n</tr>\n<tr>\n",
                      "markdown": "`</td>\n<td>\n<em>(Optional)</em>\n<p>LastCompleted is the time the test hook last completed.</p>\n</td>\n</tr>\n<tr>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2/helm.md"
                },
                "region": {
                  "startLine": 2512,
                  "startColumn": 21,
                  "endLine": 2512,
                  "endColumn": 27,
                  "snippet": {
                    "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>LastStarted is the time the test hook was last started.</p>\n</td>\n</tr>\n<tr>\n",
                    "rendered": {
                      "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>LastStarted is the time the test hook was last started.</p>\n</td>\n</tr>\n<tr>\n",
                      "markdown": "`</td>\n<td>\n<em>(Optional)</em>\n<p>LastStarted is the time the test hook was last started.</p>\n</td>\n</tr>\n<tr>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2/helm.md"
                },
                "region": {
                  "startLine": 2448,
                  "startColumn": 17,
                  "endLine": 2448,
                  "endColumn": 23,
                  "snippet": {
                    "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation during\nthe performance of a Helm test action. Defaults to &lsquo;HelmReleaseSpec.Timeout&rsquo;.</p>\n</td>\n</tr>\n",
                    "rendered": {
                      "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation during\nthe performance of a Helm test action. Defaults to &lsquo;HelmReleaseSpec.Timeout&rsquo;.</p>\n</td>\n</tr>\n",
                      "markdown": "`</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation during\nthe performance of a Helm test action. Defaults to &lsquo;HelmReleaseSpec.Timeout&rsquo;.</p>\n</td>\n</tr>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2/helm.md"
                },
                "region": {
                  "startLine": 2113,
                  "startColumn": 17,
                  "endLine": 2113,
                  "endColumn": 23,
                  "snippet": {
                    "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like\nJobs for hooks) during the performance of a Helm rollback action. Defaults to\n&lsquo;HelmReleaseSpec.Timeout&rsquo;.</p>\n</td>\n",
                    "rendered": {
                      "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like\nJobs for hooks) during the performance of a Helm rollback action. Defaults to\n&lsquo;HelmReleaseSpec.Timeout&rsquo;.</p>\n</td>\n",
                      "markdown": "`</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like\nJobs for hooks) during the performance of a Helm rollback action. Defaults to\n&lsquo;HelmReleaseSpec.Timeout&rsquo;.</p>\n</td>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2/helm.md"
                },
                "region": {
                  "startLine": 1762,
                  "startColumn": 17,
                  "endLine": 1762,
                  "endColumn": 23,
                  "snippet": {
                    "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like\nJobs for hooks) during the performance of a Helm install action. Defaults to\n&lsquo;HelmReleaseSpec.Timeout&rsquo;.</p>\n</td>\n",
                    "rendered": {
                      "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like\nJobs for hooks) during the performance of a Helm install action. Defaults to\n&lsquo;HelmReleaseSpec.Timeout&rsquo;.</p>\n</td>\n",
                      "markdown": "`</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like\nJobs for hooks) during the performance of a Helm install action. Defaults to\n&lsquo;HelmReleaseSpec.Timeout&rsquo;.</p>\n</td>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2/helm.md"
                },
                "region": {
                  "startLine": 1249,
                  "startColumn": 29,
                  "endLine": 1249,
                  "endColumn": 38,
                  "snippet": {
                    "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>The name of the Kubernetes service account to impersonate\nwhen reconciling this HelmRelease.</p>\n</td>\n</tr>\n",
                    "rendered": {
                      "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>The name of the Kubernetes service account to impersonate\nwhen reconciling this HelmRelease.</p>\n</td>\n</tr>\n",
                      "markdown": "`</td>\n<td>\n<em>(Optional)</em>\n<p>The name of the Kubernetes service account to impersonate\nwhen reconciling this HelmRelease.</p>\n</td>\n</tr>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2/helm.md"
                },
                "region": {
                  "startLine": 1223,
                  "startColumn": 17,
                  "endLine": 1223,
                  "endColumn": 23,
                  "snippet": {
                    "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like Jobs\nfor hooks) during the performance of a Helm action. Defaults to &lsquo;5m0s&rsquo;.</p>\n</td>\n</tr>\n",
                    "rendered": {
                      "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like Jobs\nfor hooks) during the performance of a Helm action. Defaults to &lsquo;5m0s&rsquo;.</p>\n</td>\n</tr>\n",
                      "markdown": "`</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like Jobs\nfor hooks) during the performance of a Helm action. Defaults to &lsquo;5m0s&rsquo;.</p>\n</td>\n</tr>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2/helm.md"
                },
                "region": {
                  "startLine": 1137,
                  "startColumn": 46,
                  "endLine": 1137,
                  "endColumn": 55,
                  "snippet": {
                    "text": "<em>(Optional)</em>\n<p>KubeConfig for reconciling the HelmRelease on a remote cluster.\nWhen used in combination with HelmReleaseSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when HelmReleaseSpec.ServiceAccountName\n",
                    "rendered": {
                      "text": "<em>(Optional)</em>\n<p>KubeConfig for reconciling the HelmRelease on a remote cluster.\nWhen used in combination with HelmReleaseSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when HelmReleaseSpec.ServiceAccountName\n",
                      "markdown": "`<em>(Optional)</em>\n<p>KubeConfig for reconciling the HelmRelease on a remote cluster.\nWhen used in combination with HelmReleaseSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when HelmReleaseSpec.ServiceAccountName\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2/helm.md"
                },
                "region": {
                  "startLine": 239,
                  "startColumn": 29,
                  "endLine": 239,
                  "endColumn": 38,
                  "snippet": {
                    "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>The name of the Kubernetes service account to impersonate\nwhen reconciling this HelmRelease.</p>\n</td>\n</tr>\n",
                    "rendered": {
                      "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>The name of the Kubernetes service account to impersonate\nwhen reconciling this HelmRelease.</p>\n</td>\n</tr>\n",
                      "markdown": "`</td>\n<td>\n<em>(Optional)</em>\n<p>The name of the Kubernetes service account to impersonate\nwhen reconciling this HelmRelease.</p>\n</td>\n</tr>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2/helm.md"
                },
                "region": {
                  "startLine": 213,
                  "startColumn": 17,
                  "endLine": 213,
                  "endColumn": 23,
                  "snippet": {
                    "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like Jobs\nfor hooks) during the performance of a Helm action. Defaults to &lsquo;5m0s&rsquo;.</p>\n</td>\n</tr>\n",
                    "rendered": {
                      "text": "</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like Jobs\nfor hooks) during the performance of a Helm action. Defaults to &lsquo;5m0s&rsquo;.</p>\n</td>\n</tr>\n",
                      "markdown": "`</td>\n<td>\n<em>(Optional)</em>\n<p>Timeout is the time to wait for any individual Kubernetes operation (like Jobs\nfor hooks) during the performance of a Helm action. Defaults to &lsquo;5m0s&rsquo;.</p>\n</td>\n</tr>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/docs/api/v2/helm.md"
                },
                "region": {
                  "startLine": 127,
                  "startColumn": 46,
                  "endLine": 127,
                  "endColumn": 55,
                  "snippet": {
                    "text": "<em>(Optional)</em>\n<p>KubeConfig for reconciling the HelmRelease on a remote cluster.\nWhen used in combination with HelmReleaseSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when HelmReleaseSpec.ServiceAccountName\n",
                    "rendered": {
                      "text": "<em>(Optional)</em>\n<p>KubeConfig for reconciling the HelmRelease on a remote cluster.\nWhen used in combination with HelmReleaseSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when HelmReleaseSpec.ServiceAccountName\n",
                      "markdown": "`<em>(Optional)</em>\n<p>KubeConfig for reconciling the HelmRelease on a remote cluster.\nWhen used in combination with HelmReleaseSpec.ServiceAccountName,\nforces the controller to act on behalf of that Service Account at the\ntarget cluster.\nIf the &ndash;default-service-account flag is set, its value will be used as\na controller level fallback for when HelmReleaseSpec.ServiceAccountName\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/api/v2beta2/helmrelease_types.go"
                },
                "region": {
                  "startLine": 901,
                  "endLine": 901,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// DisableHooks prevents hooks from running during the Helm rollback action.\n\t// +optional\n",
                    "rendered": {
                      "text": "\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// DisableHooks prevents hooks from running during the Helm rollback action.\n\t// +optional\n",
                      "markdown": "`\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// DisableHooks prevents hooks from running during the Helm rollback action.\n\t// +optional\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/api/v2beta2/helmrelease_types.go"
                },
                "region": {
                  "startLine": 853,
                  "endLine": 853,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// DisableWait disables the waiting for resources to be ready after a Helm\n\t// rollback has been performed.\n",
                    "rendered": {
                      "text": "\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// DisableWait disables the waiting for resources to be ready after a Helm\n\t// rollback has been performed.\n",
                      "markdown": "`\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// DisableWait disables the waiting for resources to be ready after a Helm\n\t// rollback has been performed.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/api/v2beta2/helmrelease_types.go"
                },
                "region": {
                  "startLine": 802,
                  "endLine": 802,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// IgnoreFailures tells the controller to skip remediation when the Helm tests\n\t// are run but fail. Can be overwritten for tests run after install or upgrade\n",
                    "rendered": {
                      "text": "\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// IgnoreFailures tells the controller to skip remediation when the Helm tests\n\t// are run but fail. Can be overwritten for tests run after install or upgrade\n",
                      "markdown": "`\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// IgnoreFailures tells the controller to skip remediation when the Helm tests\n\t// are run but fail. Can be overwritten for tests run after install or upgrade\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/api/v2beta2/helmrelease_types.go"
                },
                "region": {
                  "startLine": 624,
                  "endLine": 624,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// Remediation holds the remediation configuration for when the Helm upgrade\n\t// action for the HelmRelease fails. The default is to not perform any action.\n",
                    "rendered": {
                      "text": "\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// Remediation holds the remediation configuration for when the Helm upgrade\n\t// action for the HelmRelease fails. The default is to not perform any action.\n",
                      "markdown": "`\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// Remediation holds the remediation configuration for when the Helm upgrade\n\t// action for the HelmRelease fails. The default is to not perform any action.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/api/v2beta2/helmrelease_types.go"
                },
                "region": {
                  "startLine": 451,
                  "endLine": 451,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// Remediation holds the remediation configuration for when the Helm install\n\t// action for the HelmRelease fails. The default is to not perform any action.\n",
                    "rendered": {
                      "text": "\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// Remediation holds the remediation configuration for when the Helm install\n\t// action for the HelmRelease fails. The default is to not perform any action.\n",
                      "markdown": "`\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// Remediation holds the remediation configuration for when the Helm install\n\t// action for the HelmRelease fails. The default is to not perform any action.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/api/v2beta2/helmrelease_types.go"
                },
                "region": {
                  "startLine": 150,
                  "endLine": 150,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// MaxHistory is the number of revisions saved by Helm for this HelmRelease.\n\t// Use '0' for an unlimited number of revisions; defaults to '5'.\n",
                    "rendered": {
                      "text": "\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// MaxHistory is the number of revisions saved by Helm for this HelmRelease.\n\t// Use '0' for an unlimited number of revisions; defaults to '5'.\n",
                      "markdown": "`\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// MaxHistory is the number of revisions saved by Helm for this HelmRelease.\n\t// Use '0' for an unlimited number of revisions; defaults to '5'.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/kube/config.go"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 154,
                  "endLine": 64,
                  "endColumn": 163,
                  "snippet": {
                    "text": "\t\tkubeConfig = secret.Data[DefaultKubeConfigSecretKeyExt]\n\tdefault:\n\t\t// User did not specify a key, and the 'value' key was not defined.\n\t\treturn nil, fmt.Errorf(\"KubeConfig secret '%s' does not contain a '%s' or '%s' key with data\", secretName, DefaultKubeConfigSecretKey, DefaultKubeConfigSecretKeyExt)\n\t}\n\n\tcfg, err := clientcmd.RESTConfigFromKubeConfig(kubeConfig)\n",
                    "rendered": {
                      "text": "\t\tkubeConfig = secret.Data[DefaultKubeConfigSecretKeyExt]\n\tdefault:\n\t\t// User did not specify a key, and the 'value' key was not defined.\n\t\treturn nil, fmt.Errorf(\"KubeConfig secret '%s' does not contain a '%s' or '%s' key with data\", secretName, DefaultKubeConfigSecretKey, DefaultKubeConfigSecretKeyExt)\n\t}\n\n\tcfg, err := clientcmd.RESTConfigFromKubeConfig(kubeConfig)\n",
                      "markdown": "`\t\tkubeConfig = secret.Data[DefaultKubeConfigSecretKeyExt]\n\tdefault:\n\t\t// User did not specify a key, and the 'value' key was not defined.\n\t\treturn nil, fmt.Errorf(\"KubeConfig secret '%s' does not contain a '%s' or '%s' key with data\", secretName, DefaultKubeConfigSecretKey, DefaultKubeConfigSecretKeyExt)\n\t}\n\n\tcfg, err := clientcmd.RESTConfigFromKubeConfig(kubeConfig)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/kube/config.go"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 126,
                  "endLine": 64,
                  "endColumn": 135,
                  "snippet": {
                    "text": "\t\tkubeConfig = secret.Data[DefaultKubeConfigSecretKeyExt]\n\tdefault:\n\t\t// User did not specify a key, and the 'value' key was not defined.\n\t\treturn nil, fmt.Errorf(\"KubeConfig secret '%s' does not contain a '%s' or '%s' key with data\", secretName, DefaultKubeConfigSecretKey, DefaultKubeConfigSecretKeyExt)\n\t}\n\n\tcfg, err := clientcmd.RESTConfigFromKubeConfig(kubeConfig)\n",
                    "rendered": {
                      "text": "\t\tkubeConfig = secret.Data[DefaultKubeConfigSecretKeyExt]\n\tdefault:\n\t\t// User did not specify a key, and the 'value' key was not defined.\n\t\treturn nil, fmt.Errorf(\"KubeConfig secret '%s' does not contain a '%s' or '%s' key with data\", secretName, DefaultKubeConfigSecretKey, DefaultKubeConfigSecretKeyExt)\n\t}\n\n\tcfg, err := clientcmd.RESTConfigFromKubeConfig(kubeConfig)\n",
                      "markdown": "`\t\tkubeConfig = secret.Data[DefaultKubeConfigSecretKeyExt]\n\tdefault:\n\t\t// User did not specify a key, and the 'value' key was not defined.\n\t\treturn nil, fmt.Errorf(\"KubeConfig secret '%s' does not contain a '%s' or '%s' key with data\", secretName, DefaultKubeConfigSecretKey, DefaultKubeConfigSecretKeyExt)\n\t}\n\n\tcfg, err := clientcmd.RESTConfigFromKubeConfig(kubeConfig)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/kube/config.go"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 44,
                  "endLine": 61,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\tcase secret.Data[DefaultKubeConfigSecretKey] != nil:\n\t\tkubeConfig = secret.Data[DefaultKubeConfigSecretKey]\n\tcase secret.Data[DefaultKubeConfigSecretKeyExt] != nil:\n\t\tkubeConfig = secret.Data[DefaultKubeConfigSecretKeyExt]\n\tdefault:\n\t\t// User did not specify a key, and the 'value' key was not defined.\n\t\treturn nil, fmt.Errorf(\"KubeConfig secret '%s' does not contain a '%s' or '%s' key with data\", secretName, DefaultKubeConfigSecretKey, DefaultKubeConfigSecretKeyExt)\n",
                    "rendered": {
                      "text": "\tcase secret.Data[DefaultKubeConfigSecretKey] != nil:\n\t\tkubeConfig = secret.Data[DefaultKubeConfigSecretKey]\n\tcase secret.Data[DefaultKubeConfigSecretKeyExt] != nil:\n\t\tkubeConfig = secret.Data[DefaultKubeConfigSecretKeyExt]\n\tdefault:\n\t\t// User did not specify a key, and the 'value' key was not defined.\n\t\treturn nil, fmt.Errorf(\"KubeConfig secret '%s' does not contain a '%s' or '%s' key with data\", secretName, DefaultKubeConfigSecretKey, DefaultKubeConfigSecretKeyExt)\n",
                      "markdown": "`\tcase secret.Data[DefaultKubeConfigSecretKey] != nil:\n\t\tkubeConfig = secret.Data[DefaultKubeConfigSecretKey]\n\tcase secret.Data[DefaultKubeConfigSecretKeyExt] != nil:\n\t\tkubeConfig = secret.Data[DefaultKubeConfigSecretKeyExt]\n\tdefault:\n\t\t// User did not specify a key, and the 'value' key was not defined.\n\t\treturn nil, fmt.Errorf(\"KubeConfig secret '%s' does not contain a '%s' or '%s' key with data\", secretName, DefaultKubeConfigSecretKey, DefaultKubeConfigSecretKeyExt)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/kube/config.go"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 35,
                  "endLine": 60,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t}\n\tcase secret.Data[DefaultKubeConfigSecretKey] != nil:\n\t\tkubeConfig = secret.Data[DefaultKubeConfigSecretKey]\n\tcase secret.Data[DefaultKubeConfigSecretKeyExt] != nil:\n\t\tkubeConfig = secret.Data[DefaultKubeConfigSecretKeyExt]\n\tdefault:\n\t\t// User did not specify a key, and the 'value' key was not defined.\n",
                    "rendered": {
                      "text": "\t\t}\n\tcase secret.Data[DefaultKubeConfigSecretKey] != nil:\n\t\tkubeConfig = secret.Data[DefaultKubeConfigSecretKey]\n\tcase secret.Data[DefaultKubeConfigSecretKeyExt] != nil:\n\t\tkubeConfig = secret.Data[DefaultKubeConfigSecretKeyExt]\n\tdefault:\n\t\t// User did not specify a key, and the 'value' key was not defined.\n",
                      "markdown": "`\t\t}\n\tcase secret.Data[DefaultKubeConfigSecretKey] != nil:\n\t\tkubeConfig = secret.Data[DefaultKubeConfigSecretKey]\n\tcase secret.Data[DefaultKubeConfigSecretKeyExt] != nil:\n\t\tkubeConfig = secret.Data[DefaultKubeConfigSecretKeyExt]\n\tdefault:\n\t\t// User did not specify a key, and the 'value' key was not defined.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/kube/config.go"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 44,
                  "endLine": 59,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\t\t\treturn nil, fmt.Errorf(\"KubeConfig secret '%s' does not contain a '%s' key with data\", secretName, key)\n\t\t}\n\tcase secret.Data[DefaultKubeConfigSecretKey] != nil:\n\t\tkubeConfig = secret.Data[DefaultKubeConfigSecretKey]\n\tcase secret.Data[DefaultKubeConfigSecretKeyExt] != nil:\n\t\tkubeConfig = secret.Data[DefaultKubeConfigSecretKeyExt]\n\tdefault:\n",
                    "rendered": {
                      "text": "\t\t\treturn nil, fmt.Errorf(\"KubeConfig secret '%s' does not contain a '%s' key with data\", secretName, key)\n\t\t}\n\tcase secret.Data[DefaultKubeConfigSecretKey] != nil:\n\t\tkubeConfig = secret.Data[DefaultKubeConfigSecretKey]\n\tcase secret.Data[DefaultKubeConfigSecretKeyExt] != nil:\n\t\tkubeConfig = secret.Data[DefaultKubeConfigSecretKeyExt]\n\tdefault:\n",
                      "markdown": "`\t\t\treturn nil, fmt.Errorf(\"KubeConfig secret '%s' does not contain a '%s' key with data\", secretName, key)\n\t\t}\n\tcase secret.Data[DefaultKubeConfigSecretKey] != nil:\n\t\tkubeConfig = secret.Data[DefaultKubeConfigSecretKey]\n\tcase secret.Data[DefaultKubeConfigSecretKeyExt] != nil:\n\t\tkubeConfig = secret.Data[DefaultKubeConfigSecretKeyExt]\n\tdefault:\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/kube/config.go"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 35,
                  "endLine": 58,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\tif kubeConfig == nil {\n\t\t\treturn nil, fmt.Errorf(\"KubeConfig secret '%s' does not contain a '%s' key with data\", secretName, key)\n\t\t}\n\tcase secret.Data[DefaultKubeConfigSecretKey] != nil:\n\t\tkubeConfig = secret.Data[DefaultKubeConfigSecretKey]\n\tcase secret.Data[DefaultKubeConfigSecretKeyExt] != nil:\n\t\tkubeConfig = secret.Data[DefaultKubeConfigSecretKeyExt]\n",
                    "rendered": {
                      "text": "\t\tif kubeConfig == nil {\n\t\t\treturn nil, fmt.Errorf(\"KubeConfig secret '%s' does not contain a '%s' key with data\", secretName, key)\n\t\t}\n\tcase secret.Data[DefaultKubeConfigSecretKey] != nil:\n\t\tkubeConfig = secret.Data[DefaultKubeConfigSecretKey]\n\tcase secret.Data[DefaultKubeConfigSecretKeyExt] != nil:\n\t\tkubeConfig = secret.Data[DefaultKubeConfigSecretKeyExt]\n",
                      "markdown": "`\t\tif kubeConfig == nil {\n\t\t\treturn nil, fmt.Errorf(\"KubeConfig secret '%s' does not contain a '%s' key with data\", secretName, key)\n\t\t}\n\tcase secret.Data[DefaultKubeConfigSecretKey] != nil:\n\t\tkubeConfig = secret.Data[DefaultKubeConfigSecretKey]\n\tcase secret.Data[DefaultKubeConfigSecretKeyExt] != nil:\n\t\tkubeConfig = secret.Data[DefaultKubeConfigSecretKeyExt]\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/kube/config.go"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 50,
                  "endLine": 36,
                  "endColumn": 59,
                  "snippet": {
                    "text": "\t// DefaultKubeConfigSecretKeyExt is the default data key ConfigFromSecret\n\t// looks at when no data key is provided, and DefaultKubeConfigSecretKey\n\t// does not exist.\n\tDefaultKubeConfigSecretKeyExt = DefaultKubeConfigSecretKey + \".yaml\"\n)\n\n// ConfigFromSecret returns the KubeConfig data from the provided key in the\n",
                    "rendered": {
                      "text": "\t// DefaultKubeConfigSecretKeyExt is the default data key ConfigFromSecret\n\t// looks at when no data key is provided, and DefaultKubeConfigSecretKey\n\t// does not exist.\n\tDefaultKubeConfigSecretKeyExt = DefaultKubeConfigSecretKey + \".yaml\"\n)\n\n// ConfigFromSecret returns the KubeConfig data from the provided key in the\n",
                      "markdown": "`\t// DefaultKubeConfigSecretKeyExt is the default data key ConfigFromSecret\n\t// looks at when no data key is provided, and DefaultKubeConfigSecretKey\n\t// does not exist.\n\tDefaultKubeConfigSecretKeyExt = DefaultKubeConfigSecretKey + \".yaml\"\n)\n\n// ConfigFromSecret returns the KubeConfig data from the provided key in the\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/kube/config.go"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 18,
                  "endLine": 36,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t// DefaultKubeConfigSecretKeyExt is the default data key ConfigFromSecret\n\t// looks at when no data key is provided, and DefaultKubeConfigSecretKey\n\t// does not exist.\n\tDefaultKubeConfigSecretKeyExt = DefaultKubeConfigSecretKey + \".yaml\"\n)\n\n// ConfigFromSecret returns the KubeConfig data from the provided key in the\n",
                    "rendered": {
                      "text": "\t// DefaultKubeConfigSecretKeyExt is the default data key ConfigFromSecret\n\t// looks at when no data key is provided, and DefaultKubeConfigSecretKey\n\t// does not exist.\n\tDefaultKubeConfigSecretKeyExt = DefaultKubeConfigSecretKey + \".yaml\"\n)\n\n// ConfigFromSecret returns the KubeConfig data from the provided key in the\n",
                      "markdown": "`\t// DefaultKubeConfigSecretKeyExt is the default data key ConfigFromSecret\n\t// looks at when no data key is provided, and DefaultKubeConfigSecretKey\n\t// does not exist.\n\tDefaultKubeConfigSecretKeyExt = DefaultKubeConfigSecretKey + \".yaml\"\n)\n\n// ConfigFromSecret returns the KubeConfig data from the provided key in the\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/kube/config.go"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 64,
                  "endLine": 34,
                  "endColumn": 73,
                  "snippet": {
                    "text": "\t// looks at when no data key is provided.\n\tDefaultKubeConfigSecretKey = \"value\"\n\t// DefaultKubeConfigSecretKeyExt is the default data key ConfigFromSecret\n\t// looks at when no data key is provided, and DefaultKubeConfigSecretKey\n\t// does not exist.\n\tDefaultKubeConfigSecretKeyExt = DefaultKubeConfigSecretKey + \".yaml\"\n)\n",
                    "rendered": {
                      "text": "\t// looks at when no data key is provided.\n\tDefaultKubeConfigSecretKey = \"value\"\n\t// DefaultKubeConfigSecretKeyExt is the default data key ConfigFromSecret\n\t// looks at when no data key is provided, and DefaultKubeConfigSecretKey\n\t// does not exist.\n\tDefaultKubeConfigSecretKeyExt = DefaultKubeConfigSecretKey + \".yaml\"\n)\n",
                      "markdown": "`\t// looks at when no data key is provided.\n\tDefaultKubeConfigSecretKey = \"value\"\n\t// DefaultKubeConfigSecretKeyExt is the default data key ConfigFromSecret\n\t// looks at when no data key is provided, and DefaultKubeConfigSecretKey\n\t// does not exist.\n\tDefaultKubeConfigSecretKeyExt = DefaultKubeConfigSecretKey + \".yaml\"\n)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/kube/config.go"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 21,
                  "endLine": 33,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t// DefaultKubeConfigSecretKey is the default data key ConfigFromSecret\n\t// looks at when no data key is provided.\n\tDefaultKubeConfigSecretKey = \"value\"\n\t// DefaultKubeConfigSecretKeyExt is the default data key ConfigFromSecret\n\t// looks at when no data key is provided, and DefaultKubeConfigSecretKey\n\t// does not exist.\n\tDefaultKubeConfigSecretKeyExt = DefaultKubeConfigSecretKey + \".yaml\"\n",
                    "rendered": {
                      "text": "\t// DefaultKubeConfigSecretKey is the default data key ConfigFromSecret\n\t// looks at when no data key is provided.\n\tDefaultKubeConfigSecretKey = \"value\"\n\t// DefaultKubeConfigSecretKeyExt is the default data key ConfigFromSecret\n\t// looks at when no data key is provided, and DefaultKubeConfigSecretKey\n\t// does not exist.\n\tDefaultKubeConfigSecretKeyExt = DefaultKubeConfigSecretKey + \".yaml\"\n",
                      "markdown": "`\t// DefaultKubeConfigSecretKey is the default data key ConfigFromSecret\n\t// looks at when no data key is provided.\n\tDefaultKubeConfigSecretKey = \"value\"\n\t// DefaultKubeConfigSecretKeyExt is the default data key ConfigFromSecret\n\t// looks at when no data key is provided, and DefaultKubeConfigSecretKey\n\t// does not exist.\n\tDefaultKubeConfigSecretKeyExt = DefaultKubeConfigSecretKey + \".yaml\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/kube/config.go"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 18,
                  "endLine": 32,
                  "endColumn": 27,
                  "snippet": {
                    "text": "const (\n\t// DefaultKubeConfigSecretKey is the default data key ConfigFromSecret\n\t// looks at when no data key is provided.\n\tDefaultKubeConfigSecretKey = \"value\"\n\t// DefaultKubeConfigSecretKeyExt is the default data key ConfigFromSecret\n\t// looks at when no data key is provided, and DefaultKubeConfigSecretKey\n\t// does not exist.\n",
                    "rendered": {
                      "text": "const (\n\t// DefaultKubeConfigSecretKey is the default data key ConfigFromSecret\n\t// looks at when no data key is provided.\n\tDefaultKubeConfigSecretKey = \"value\"\n\t// DefaultKubeConfigSecretKeyExt is the default data key ConfigFromSecret\n\t// looks at when no data key is provided, and DefaultKubeConfigSecretKey\n\t// does not exist.\n",
                      "markdown": "`const (\n\t// DefaultKubeConfigSecretKey is the default data key ConfigFromSecret\n\t// looks at when no data key is provided.\n\tDefaultKubeConfigSecretKey = \"value\"\n\t// DefaultKubeConfigSecretKeyExt is the default data key ConfigFromSecret\n\t// looks at when no data key is provided, and DefaultKubeConfigSecretKey\n\t// does not exist.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/kube/config.go"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 21,
                  "endLine": 30,
                  "endColumn": 30,
                  "snippet": {
                    "text": ")\n\nconst (\n\t// DefaultKubeConfigSecretKey is the default data key ConfigFromSecret\n\t// looks at when no data key is provided.\n\tDefaultKubeConfigSecretKey = \"value\"\n\t// DefaultKubeConfigSecretKeyExt is the default data key ConfigFromSecret\n",
                    "rendered": {
                      "text": ")\n\nconst (\n\t// DefaultKubeConfigSecretKey is the default data key ConfigFromSecret\n\t// looks at when no data key is provided.\n\tDefaultKubeConfigSecretKey = \"value\"\n\t// DefaultKubeConfigSecretKeyExt is the default data key ConfigFromSecret\n",
                      "markdown": "`)\n\nconst (\n\t// DefaultKubeConfigSecretKey is the default data key ConfigFromSecret\n\t// looks at when no data key is provided.\n\tDefaultKubeConfigSecretKey = \"value\"\n\t// DefaultKubeConfigSecretKeyExt is the default data key ConfigFromSecret\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/kube/config.go"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 9,
                  "endLine": 31,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\nconst (\n\t// DefaultKubeConfigSecretKey is the default data key ConfigFromSecret\n\t// looks at when no data key is provided.\n\tDefaultKubeConfigSecretKey = \"value\"\n\t// DefaultKubeConfigSecretKeyExt is the default data key ConfigFromSecret\n\t// looks at when no data key is provided, and DefaultKubeConfigSecretKey\n",
                    "rendered": {
                      "text": "\nconst (\n\t// DefaultKubeConfigSecretKey is the default data key ConfigFromSecret\n\t// looks at when no data key is provided.\n\tDefaultKubeConfigSecretKey = \"value\"\n\t// DefaultKubeConfigSecretKeyExt is the default data key ConfigFromSecret\n\t// looks at when no data key is provided, and DefaultKubeConfigSecretKey\n",
                      "markdown": "`\nconst (\n\t// DefaultKubeConfigSecretKey is the default data key ConfigFromSecret\n\t// looks at when no data key is provided.\n\tDefaultKubeConfigSecretKey = \"value\"\n\t// DefaultKubeConfigSecretKeyExt is the default data key ConfigFromSecret\n\t// looks at when no data key is provided, and DefaultKubeConfigSecretKey\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/kube/impersonate_test.go"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 1,
                  "endLine": 47,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\tDefaultServiceAccountName = \"default\"\n\t\tnamespace := \"test\"\n\t\tserviceAccount := \"different\"\n\t\texpect := \"system:serviceaccount:\" + namespace + \":\" + serviceAccount\n\n\t\tcfg := &rest.Config{}\n\t\tname := SetImpersonationConfig(cfg, namespace, serviceAccount)\n",
                    "rendered": {
                      "text": "\t\tDefaultServiceAccountName = \"default\"\n\t\tnamespace := \"test\"\n\t\tserviceAccount := \"different\"\n\t\texpect := \"system:serviceaccount:\" + namespace + \":\" + serviceAccount\n\n\t\tcfg := &rest.Config{}\n\t\tname := SetImpersonationConfig(cfg, namespace, serviceAccount)\n",
                      "markdown": "`\t\tDefaultServiceAccountName = \"default\"\n\t\tnamespace := \"test\"\n\t\tserviceAccount := \"different\"\n\t\texpect := \"system:serviceaccount:\" + namespace + \":\" + serviceAccount\n\n\t\tcfg := &rest.Config{}\n\t\tname := SetImpersonationConfig(cfg, namespace, serviceAccount)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/kube/impersonate_test.go"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 1,
                  "endLine": 32,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n\t\tDefaultServiceAccountName = \"default\"\n\t\tnamespace := \"test\"\n\t\texpect := \"system:serviceaccount:\" + namespace + \":\" + DefaultServiceAccountName\n\n\t\tcfg := &rest.Config{}\n\t\tname := SetImpersonationConfig(cfg, namespace, \"\")\n",
                    "rendered": {
                      "text": "\n\t\tDefaultServiceAccountName = \"default\"\n\t\tnamespace := \"test\"\n\t\texpect := \"system:serviceaccount:\" + namespace + \":\" + DefaultServiceAccountName\n\n\t\tcfg := &rest.Config{}\n\t\tname := SetImpersonationConfig(cfg, namespace, \"\")\n",
                      "markdown": "`\n\t\tDefaultServiceAccountName = \"default\"\n\t\tnamespace := \"test\"\n\t\texpect := \"system:serviceaccount:\" + namespace + \":\" + DefaultServiceAccountName\n\n\t\tcfg := &rest.Config{}\n\t\tname := SetImpersonationConfig(cfg, namespace, \"\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 3879,
                  "startColumn": 14,
                  "endLine": 3879,
                  "endColumn": 22,
                  "snippet": {
                    "text": "    #     http_config:\n    #       basic_auth:\n    #         username: some_user\n    #         password: some_pass\n    #     static_configs:\n    #       - alertmanager.thanos.io\n    #     scheme: http\n",
                    "rendered": {
                      "text": "    #     http_config:\n    #       basic_auth:\n    #         username: some_user\n    #         password: some_pass\n    #     static_configs:\n    #       - alertmanager.thanos.io\n    #     scheme: http\n",
                      "markdown": "`    #     http_config:\n    #       basic_auth:\n    #         username: some_user\n    #         password: some_pass\n    #     static_configs:\n    #       - alertmanager.thanos.io\n    #     scheme: http\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 1001,
                  "startColumn": 15,
                  "endLine": 1001,
                  "endColumn": 23,
                  "snippet": {
                    "text": "  # - name: prometheus-sample\n  #   access: proxy\n  #   basicAuth: true\n  #   basicAuthPassword: pass\n  #   basicAuthUser: daco\n  #   editable: false\n  #   jsonData:\n",
                    "rendered": {
                      "text": "  # - name: prometheus-sample\n  #   access: proxy\n  #   basicAuth: true\n  #   basicAuthPassword: pass\n  #   basicAuthUser: daco\n  #   editable: false\n  #   jsonData:\n",
                      "markdown": "`  # - name: prometheus-sample\n  #   access: proxy\n  #   basicAuth: true\n  #   basicAuthPassword: pass\n  #   basicAuthUser: daco\n  #   editable: false\n  #   jsonData:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 879,
                  "startColumn": 7,
                  "endLine": 879,
                  "endColumn": 15,
                  "snippet": {
                    "text": "  ##\n  defaultDashboardsTimezone: utc\n\n  adminPassword: prom-operator\n\n  rbac:\n    ## If true, Grafana PSPs will be created\n",
                    "rendered": {
                      "text": "  ##\n  defaultDashboardsTimezone: utc\n\n  adminPassword: prom-operator\n\n  rbac:\n    ## If true, Grafana PSPs will be created\n",
                      "markdown": "`  ##\n  defaultDashboardsTimezone: utc\n\n  adminPassword: prom-operator\n\n  rbac:\n    ## If true, Grafana PSPs will be created\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 3945,
                  "startColumn": 46,
                  "endLine": 3945,
                  "endColumn": 54,
                  "snippet": {
                    "text": "    ## If anti-affinity is enabled sets the topologyKey to use for anti-affinity.\n    ## This can be changed to, for example, failure-domain.beta.kubernetes.io/zone\n    ##\n    podAntiAffinityTopologyKey: kubernetes.io/hostname\n\n    ## Assign custom affinity rules to the thanosRuler instance\n    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/\n",
                    "rendered": {
                      "text": "    ## If anti-affinity is enabled sets the topologyKey to use for anti-affinity.\n    ## This can be changed to, for example, failure-domain.beta.kubernetes.io/zone\n    ##\n    podAntiAffinityTopologyKey: kubernetes.io/hostname\n\n    ## Assign custom affinity rules to the thanosRuler instance\n    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/\n",
                      "markdown": "`    ## If anti-affinity is enabled sets the topologyKey to use for anti-affinity.\n    ## This can be changed to, for example, failure-domain.beta.kubernetes.io/zone\n    ##\n    podAntiAffinityTopologyKey: kubernetes.io/hostname\n\n    ## Assign custom affinity rules to the thanosRuler instance\n    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 3269,
                  "startColumn": 32,
                  "endLine": 3269,
                  "endColumn": 40,
                  "snippet": {
                    "text": "    #     regex: (.*)\n    #     replacement: ${1}\n    #   metric_relabel_configs:\n    #   - regex: (kubernetes_io_hostname|failure_domain_beta_kubernetes_io_region|beta_kubernetes_io_os|beta_kubernetes_io_arch|beta_kubernetes_io_instance_type|failure_domain_beta_kubernetes_io_zone)\n    #     action: labeldrop\n    #\n    ## If scrape config contains a repetitive section, you may want to use a template.\n",
                    "rendered": {
                      "text": "    #     regex: (.*)\n    #     replacement: ${1}\n    #   metric_relabel_configs:\n    #   - regex: (kubernetes_io_hostname|failure_domain_beta_kubernetes_io_region|beta_kubernetes_io_os|beta_kubernetes_io_arch|beta_kubernetes_io_instance_type|failure_domain_beta_kubernetes_io_zone)\n    #     action: labeldrop\n    #\n    ## If scrape config contains a repetitive section, you may want to use a template.\n",
                      "markdown": "`    #     regex: (.*)\n    #     replacement: ${1}\n    #   metric_relabel_configs:\n    #   - regex: (kubernetes_io_hostname|failure_domain_beta_kubernetes_io_region|beta_kubernetes_io_os|beta_kubernetes_io_arch|beta_kubernetes_io_instance_type|failure_domain_beta_kubernetes_io_zone)\n    #     action: labeldrop\n    #\n    ## If scrape config contains a repetitive section, you may want to use a template.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 3166,
                  "startColumn": 46,
                  "endLine": 3166,
                  "endColumn": 54,
                  "snippet": {
                    "text": "    ## If anti-affinity is enabled sets the topologyKey to use for anti-affinity.\n    ## This can be changed to, for example, failure-domain.beta.kubernetes.io/zone\n    ##\n    podAntiAffinityTopologyKey: kubernetes.io/hostname\n\n    ## Assign custom affinity rules to the prometheus instance\n    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/\n",
                    "rendered": {
                      "text": "    ## If anti-affinity is enabled sets the topologyKey to use for anti-affinity.\n    ## This can be changed to, for example, failure-domain.beta.kubernetes.io/zone\n    ##\n    podAntiAffinityTopologyKey: kubernetes.io/hostname\n\n    ## Assign custom affinity rules to the prometheus instance\n    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/\n",
                      "markdown": "`    ## If anti-affinity is enabled sets the topologyKey to use for anti-affinity.\n    ## This can be changed to, for example, failure-domain.beta.kubernetes.io/zone\n    ##\n    podAntiAffinityTopologyKey: kubernetes.io/hostname\n\n    ## Assign custom affinity rules to the prometheus instance\n    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2732,
                  "startColumn": 25,
                  "endLine": 2732,
                  "endColumn": 33,
                  "snippet": {
                    "text": "    annotations: {}\n    labels: {}\n\n    ## Final form of the hostname for each per replica ingress is\n    ## {{ ingressPerReplica.hostPrefix }}-{{ $replicaNumber }}.{{ ingressPerReplica.hostDomain }}\n    ##\n    ## Prefix for the per replica ingress that will have `-$replicaNumber`\n",
                    "rendered": {
                      "text": "    annotations: {}\n    labels: {}\n\n    ## Final form of the hostname for each per replica ingress is\n    ## {{ ingressPerReplica.hostPrefix }}-{{ $replicaNumber }}.{{ ingressPerReplica.hostDomain }}\n    ##\n    ## Prefix for the per replica ingress that will have `-$replicaNumber`\n",
                      "markdown": "`    annotations: {}\n    labels: {}\n\n    ## Final form of the hostname for each per replica ingress is\n    ## {{ ingressPerReplica.hostPrefix }}-{{ $replicaNumber }}.{{ ingressPerReplica.hostDomain }}\n    ##\n    ## Prefix for the per replica ingress that will have `-$replicaNumber`\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 730,
                  "startColumn": 46,
                  "endLine": 730,
                  "endColumn": 54,
                  "snippet": {
                    "text": "    ## If anti-affinity is enabled sets the topologyKey to use for anti-affinity.\n    ## This can be changed to, for example, failure-domain.beta.kubernetes.io/zone\n    ##\n    podAntiAffinityTopologyKey: kubernetes.io/hostname\n\n    ## Assign custom affinity rules to the alertmanager instance\n    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/\n",
                    "rendered": {
                      "text": "    ## If anti-affinity is enabled sets the topologyKey to use for anti-affinity.\n    ## This can be changed to, for example, failure-domain.beta.kubernetes.io/zone\n    ##\n    podAntiAffinityTopologyKey: kubernetes.io/hostname\n\n    ## Assign custom affinity rules to the alertmanager instance\n    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/\n",
                      "markdown": "`    ## If anti-affinity is enabled sets the topologyKey to use for anti-affinity.\n    ## This can be changed to, for example, failure-domain.beta.kubernetes.io/zone\n    ##\n    podAntiAffinityTopologyKey: kubernetes.io/hostname\n\n    ## Assign custom affinity rules to the alertmanager instance\n    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 392,
                  "startColumn": 25,
                  "endLine": 392,
                  "endColumn": 33,
                  "snippet": {
                    "text": "    annotations: {}\n    labels: {}\n\n    ## Final form of the hostname for each per replica ingress is\n    ## {{ ingressPerReplica.hostPrefix }}-{{ $replicaNumber }}.{{ ingressPerReplica.hostDomain }}\n    ##\n    ## Prefix for the per replica ingress that will have `-$replicaNumber`\n",
                    "rendered": {
                      "text": "    annotations: {}\n    labels: {}\n\n    ## Final form of the hostname for each per replica ingress is\n    ## {{ ingressPerReplica.hostPrefix }}-{{ $replicaNumber }}.{{ ingressPerReplica.hostDomain }}\n    ##\n    ## Prefix for the per replica ingress that will have `-$replicaNumber`\n",
                      "markdown": "`    annotations: {}\n    labels: {}\n\n    ## Final form of the hostname for each per replica ingress is\n    ## {{ ingressPerReplica.hostPrefix }}-{{ $replicaNumber }}.{{ ingressPerReplica.hostDomain }}\n    ##\n    ## Prefix for the per replica ingress that will have `-$replicaNumber`\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 3707,
                  "startColumn": 27,
                  "endLine": 3707,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    ## Only used if service.type is 'NodePort'\n    ##\n    nodePort: 30905\n    ## List of IP addresses at which the Prometheus server service is available\n    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\n    ##\n\n",
                    "rendered": {
                      "text": "    ## Only used if service.type is 'NodePort'\n    ##\n    nodePort: 30905\n    ## List of IP addresses at which the Prometheus server service is available\n    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\n    ##\n\n",
                      "markdown": "`    ## Only used if service.type is 'NodePort'\n    ##\n    nodePort: 30905\n    ## List of IP addresses at which the Prometheus server service is available\n    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\n    ##\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 3547,
                  "startColumn": 15,
                  "endLine": 3547,
                  "endColumn": 19,
                  "snippet": {
                    "text": "    ##\n    #   bearerTokenFile: \"\"\n\n    ## Interval at which metrics should be scraped\n    ##\n    #   interval: 30s\n\n",
                    "rendered": {
                      "text": "    ##\n    #   bearerTokenFile: \"\"\n\n    ## Interval at which metrics should be scraped\n    ##\n    #   interval: 30s\n\n",
                      "markdown": "`    ##\n    #   bearerTokenFile: \"\"\n\n    ## Interval at which metrics should be scraped\n    ##\n    #   interval: 30s\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 3375,
                  "startColumn": 36,
                  "endLine": 3375,
                  "endColumn": 44,
                  "snippet": {
                    "text": "    # objectStorageConfigFile: /var/secrets/object-store.yaml\n\n    ## Containers allows injecting additional containers. This is meant to allow adding an authentication proxy to a Prometheus pod.\n    ## if using proxy extraContainer update targetPort with proxy container port\n    containers: []\n    # containers:\n    # - name: oauth-proxy\n",
                    "rendered": {
                      "text": "    # objectStorageConfigFile: /var/secrets/object-store.yaml\n\n    ## Containers allows injecting additional containers. This is meant to allow adding an authentication proxy to a Prometheus pod.\n    ## if using proxy extraContainer update targetPort with proxy container port\n    containers: []\n    # containers:\n    # - name: oauth-proxy\n",
                      "markdown": "`    # objectStorageConfigFile: /var/secrets/object-store.yaml\n\n    ## Containers allows injecting additional containers. This is meant to allow adding an authentication proxy to a Prometheus pod.\n    ## if using proxy extraContainer update targetPort with proxy container port\n    containers: []\n    # containers:\n    # - name: oauth-proxy\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2954,
                  "startColumn": 19,
                  "endLine": 2954,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    ##\n    prometheusExternalLabelNameClear: false\n\n    ## External URL at which Prometheus will be reachable.\n    ##\n    externalUrl: \"\"\n\n",
                    "rendered": {
                      "text": "    ##\n    prometheusExternalLabelNameClear: false\n\n    ## External URL at which Prometheus will be reachable.\n    ##\n    externalUrl: \"\"\n\n",
                      "markdown": "`    ##\n    prometheusExternalLabelNameClear: false\n\n    ## External URL at which Prometheus will be reachable.\n    ##\n    externalUrl: \"\"\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2555,
                  "startColumn": 27,
                  "endLine": 2555,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    ## To be used with a proxy extraContainer port\n    targetPort: 9090\n\n    ## List of IP addresses at which the Prometheus server service is available\n    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\n    ##\n    externalIPs: []\n",
                    "rendered": {
                      "text": "    ## To be used with a proxy extraContainer port\n    targetPort: 9090\n\n    ## List of IP addresses at which the Prometheus server service is available\n    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\n    ##\n    externalIPs: []\n",
                      "markdown": "`    ## To be used with a proxy extraContainer port\n    targetPort: 9090\n\n    ## List of IP addresses at which the Prometheus server service is available\n    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\n    ##\n    externalIPs: []\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2138,
                  "startColumn": 27,
                  "endLine": 2138,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    ##\n    type: ClusterIP\n\n    ## List of IP addresses at which the Prometheus server service is available\n    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\n    ##\n    externalIPs: []\n",
                    "rendered": {
                      "text": "    ##\n    type: ClusterIP\n\n    ## List of IP addresses at which the Prometheus server service is available\n    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\n    ##\n    externalIPs: []\n",
                      "markdown": "`    ##\n    type: ClusterIP\n\n    ## List of IP addresses at which the Prometheus server service is available\n    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\n    ##\n    externalIPs: []\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 440,
                  "startColumn": 27,
                  "endLine": 440,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    ## Only used if service.type is 'NodePort'\n    ##\n    nodePort: 30903\n    ## List of IP addresses at which the Prometheus server service is available\n    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\n    ##\n\n",
                    "rendered": {
                      "text": "    ## Only used if service.type is 'NodePort'\n    ##\n    nodePort: 30903\n    ## List of IP addresses at which the Prometheus server service is available\n    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\n    ##\n\n",
                      "markdown": "`    ## Only used if service.type is 'NodePort'\n    ##\n    nodePort: 30903\n    ## List of IP addresses at which the Prometheus server service is available\n    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\n    ##\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 310,
                  "startColumn": 72,
                  "endLine": 311,
                  "snippet": {
                    "text": "  ## Alertmanager template files to format alerts\n  ## By default, templateFiles are placed in /etc/alertmanager/config/ and if\n  ## they have a .tmpl file suffix will be loaded. See config.templates above\n  ## to change, add other suffixes. If adding other suffixes, be sure to update\n  ## config.templates above to include those suffixes.\n  ## ref: https://prometheus.io/docs/alerting/notifications/\n  ##      https://prometheus.io/docs/alerting/notification_examples/\n  ##\n",
                    "rendered": {
                      "text": "  ## Alertmanager template files to format alerts\n  ## By default, templateFiles are placed in /etc/alertmanager/config/ and if\n  ## they have a .tmpl file suffix will be loaded. See config.templates above\n  ## to change, add other suffixes. If adding other suffixes, be sure to update\n  ## config.templates above to include those suffixes.\n  ## ref: https://prometheus.io/docs/alerting/notifications/\n  ##      https://prometheus.io/docs/alerting/notification_examples/\n  ##\n",
                      "markdown": "`  ## Alertmanager template files to format alerts\n  ## By default, templateFiles are placed in /etc/alertmanager/config/ and if\n  ## they have a .tmpl file suffix will be loaded. See config.templates above\n  ## to change, add other suffixes. If adding other suffixes, be sure to update\n  ## config.templates above to include those suffixes.\n  ## ref: https://prometheus.io/docs/alerting/notifications/\n  ##      https://prometheus.io/docs/alerting/notification_examples/\n  ##\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 3936,
                  "startColumn": 119,
                  "endLine": 3936,
                  "endColumn": 125,
                  "snippet": {
                    "text": "    #   memory: 400Mi\n\n    ## Pod anti-affinity can prevent the scheduler from placing Prometheus replicas on the same node.\n    ## The default value \"soft\" means that the scheduler should *prefer* to not schedule two replica pods onto the same node but no guarantee is provided.\n    ## The value \"hard\" means that the scheduler is *required* to not schedule two replica pods onto the same node.\n    ## The value \"\" will disable pod anti-affinity so that no anti-affinity rules will be configured.\n    ##\n",
                    "rendered": {
                      "text": "    #   memory: 400Mi\n\n    ## Pod anti-affinity can prevent the scheduler from placing Prometheus replicas on the same node.\n    ## The default value \"soft\" means that the scheduler should *prefer* to not schedule two replica pods onto the same node but no guarantee is provided.\n    ## The value \"hard\" means that the scheduler is *required* to not schedule two replica pods onto the same node.\n    ## The value \"\" will disable pod anti-affinity so that no anti-affinity rules will be configured.\n    ##\n",
                      "markdown": "`    #   memory: 400Mi\n\n    ## Pod anti-affinity can prevent the scheduler from placing Prometheus replicas on the same node.\n    ## The default value \"soft\" means that the scheduler should *prefer* to not schedule two replica pods onto the same node but no guarantee is provided.\n    ## The value \"hard\" means that the scheduler is *required* to not schedule two replica pods onto the same node.\n    ## The value \"\" will disable pod anti-affinity so that no anti-affinity rules will be configured.\n    ##\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 3850,
                  "startColumn": 6,
                  "endLine": 3850,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    ## running cluster equal to the expected size.\n    replicas: 1\n\n    ## Time duration ThanosRuler shall retain data for. Default is '24h', and must match the regular expression\n    ## [0-9]+(ms|s|m|h) (milliseconds seconds minutes hours).\n    ##\n    retention: 24h\n",
                    "rendered": {
                      "text": "    ## running cluster equal to the expected size.\n    replicas: 1\n\n    ## Time duration ThanosRuler shall retain data for. Default is '24h', and must match the regular expression\n    ## [0-9]+(ms|s|m|h) (milliseconds seconds minutes hours).\n    ##\n    retention: 24h\n",
                      "markdown": "`    ## running cluster equal to the expected size.\n    replicas: 1\n\n    ## Time duration ThanosRuler shall retain data for. Default is '24h', and must match the regular expression\n    ## [0-9]+(ms|s|m|h) (milliseconds seconds minutes hours).\n    ##\n    retention: 24h\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 3722,
                  "startColumn": 6,
                  "endLine": 3722,
                  "endColumn": 15,
                  "snippet": {
                    "text": "    ##\n    externalTrafficPolicy: Cluster\n\n    ## Service type\n    ##\n    type: ClusterIP\n\n",
                    "rendered": {
                      "text": "    ##\n    externalTrafficPolicy: Cluster\n\n    ## Service type\n    ##\n    type: ClusterIP\n\n",
                      "markdown": "`    ##\n    externalTrafficPolicy: Cluster\n\n    ## Service type\n    ##\n    type: ClusterIP\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 3718,
                  "startColumn": 22,
                  "endLine": 3718,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    loadBalancerIP: \"\"\n    loadBalancerSourceRanges: []\n\n    ## Denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints\n    ##\n    externalTrafficPolicy: Cluster\n\n",
                    "rendered": {
                      "text": "    loadBalancerIP: \"\"\n    loadBalancerSourceRanges: []\n\n    ## Denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints\n    ##\n    externalTrafficPolicy: Cluster\n\n",
                      "markdown": "`    loadBalancerIP: \"\"\n    loadBalancerSourceRanges: []\n\n    ## Denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints\n    ##\n    externalTrafficPolicy: Cluster\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 3711,
                  "startColumn": 47,
                  "endLine": 3712,
                  "snippet": {
                    "text": "    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\n    ##\n\n    ## Additional ports to open for ThanosRuler service\n    additionalPorts: []\n\n    externalIPs: []\n    loadBalancerIP: \"\"\n",
                    "rendered": {
                      "text": "    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\n    ##\n\n    ## Additional ports to open for ThanosRuler service\n    additionalPorts: []\n\n    externalIPs: []\n    loadBalancerIP: \"\"\n",
                      "markdown": "`    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\n    ##\n\n    ## Additional ports to open for ThanosRuler service\n    additionalPorts: []\n\n    externalIPs: []\n    loadBalancerIP: \"\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 3707,
                  "startColumn": 58,
                  "endLine": 3707,
                  "endColumn": 67,
                  "snippet": {
                    "text": "    ## Only used if service.type is 'NodePort'\n    ##\n    nodePort: 30905\n    ## List of IP addresses at which the Prometheus server service is available\n    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\n    ##\n\n",
                    "rendered": {
                      "text": "    ## Only used if service.type is 'NodePort'\n    ##\n    nodePort: 30905\n    ## List of IP addresses at which the Prometheus server service is available\n    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\n    ##\n\n",
                      "markdown": "`    ## Only used if service.type is 'NodePort'\n    ##\n    nodePort: 30905\n    ## List of IP addresses at which the Prometheus server service is available\n    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\n    ##\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 3707,
                  "startColumn": 14,
                  "endLine": 3707,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    ## Only used if service.type is 'NodePort'\n    ##\n    nodePort: 30905\n    ## List of IP addresses at which the Prometheus server service is available\n    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\n    ##\n\n",
                    "rendered": {
                      "text": "    ## Only used if service.type is 'NodePort'\n    ##\n    nodePort: 30905\n    ## List of IP addresses at which the Prometheus server service is available\n    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\n    ##\n\n",
                      "markdown": "`    ## Only used if service.type is 'NodePort'\n    ##\n    nodePort: 30905\n    ## List of IP addresses at which the Prometheus server service is available\n    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\n    ##\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 3703,
                  "startColumn": 29,
                  "endLine": 3704,
                  "snippet": {
                    "text": "    ## To be used with a proxy extraContainer port\n    ##\n    targetPort: 10902\n    ## Port to expose on each node\n    ## Only used if service.type is 'NodePort'\n    ##\n    nodePort: 30905\n    ## List of IP addresses at which the Prometheus server service is available\n",
                    "rendered": {
                      "text": "    ## To be used with a proxy extraContainer port\n    ##\n    targetPort: 10902\n    ## Port to expose on each node\n    ## Only used if service.type is 'NodePort'\n    ##\n    nodePort: 30905\n    ## List of IP addresses at which the Prometheus server service is available\n",
                      "markdown": "`    ## To be used with a proxy extraContainer port\n    ##\n    targetPort: 10902\n    ## Port to expose on each node\n    ## Only used if service.type is 'NodePort'\n    ##\n    nodePort: 30905\n    ## List of IP addresses at which the Prometheus server service is available\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 3697,
                  "startColumn": 27,
                  "endLine": 3697,
                  "endColumn": 36,
                  "snippet": {
                    "text": "    labels: {}\n    clusterIP: \"\"\n\n    ## Port for ThanosRuler Service to listen on\n    ##\n    port: 10902\n    ## To be used with a proxy extraContainer port\n",
                    "rendered": {
                      "text": "    labels: {}\n    clusterIP: \"\"\n\n    ## Port for ThanosRuler Service to listen on\n    ##\n    port: 10902\n    ## To be used with a proxy extraContainer port\n",
                      "markdown": "`    labels: {}\n    clusterIP: \"\"\n\n    ## Port for ThanosRuler Service to listen on\n    ##\n    port: 10902\n    ## To be used with a proxy extraContainer port\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 3690,
                  "startColumn": 34,
                  "endLine": 3691,
                  "snippet": {
                    "text": "    #   hosts:\n    #   - thanosruler.example.com\n\n  ## Configuration for ThanosRuler service\n  ##\n  service:\n    annotations: {}\n    labels: {}\n",
                    "rendered": {
                      "text": "    #   hosts:\n    #   - thanosruler.example.com\n\n  ## Configuration for ThanosRuler service\n  ##\n  service:\n    annotations: {}\n    labels: {}\n",
                      "markdown": "`    #   hosts:\n    #   - thanosruler.example.com\n\n  ## Configuration for ThanosRuler service\n  ##\n  service:\n    annotations: {}\n    labels: {}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 3639,
                  "startColumn": 4,
                  "endLine": 3639,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  ##\n  annotations: {}\n\n  ## Service account for ThanosRuler to use.\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\n  ##\n  serviceAccount:\n",
                    "rendered": {
                      "text": "  ##\n  annotations: {}\n\n  ## Service account for ThanosRuler to use.\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\n  ##\n  serviceAccount:\n",
                      "markdown": "`  ##\n  annotations: {}\n\n  ## Service account for ThanosRuler to use.\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\n  ##\n  serviceAccount:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 3535,
                  "startColumn": 29,
                  "endLine": 3535,
                  "endColumn": 38,
                  "snippet": {
                    "text": "    ## Endpoints of the selected service to be monitored\n    ##\n    # endpoints: []\n    ## Name of the endpoint's service port\n    ## Mutually exclusive with targetPort\n    # - port: \"\"\n\n",
                    "rendered": {
                      "text": "    ## Endpoints of the selected service to be monitored\n    ##\n    # endpoints: []\n    ## Name of the endpoint's service port\n    ## Mutually exclusive with targetPort\n    # - port: \"\"\n\n",
                      "markdown": "`    ## Endpoints of the selected service to be monitored\n    ##\n    # endpoints: []\n    ## Name of the endpoint's service port\n    ## Mutually exclusive with targetPort\n    # - port: \"\"\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 3532,
                  "startColumn": 32,
                  "endLine": 3532,
                  "endColumn": 41,
                  "snippet": {
                    "text": "    ##\n    # matchNames: []\n\n    ## Endpoints of the selected service to be monitored\n    ##\n    # endpoints: []\n    ## Name of the endpoint's service port\n",
                    "rendered": {
                      "text": "    ##\n    # matchNames: []\n\n    ## Endpoints of the selected service to be monitored\n    ##\n    # endpoints: []\n    ## Name of the endpoint's service port\n",
                      "markdown": "`    ##\n    # matchNames: []\n\n    ## Endpoints of the selected service to be monitored\n    ##\n    # endpoints: []\n    ## Name of the endpoint's service port\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 3509,
                  "startColumn": 45,
                  "endLine": 3509,
                  "endColumn": 54,
                  "snippet": {
                    "text": "    ##\n    # jobLabel: \"\"\n\n    ## labels to transfer from the kubernetes service to the target\n    ##\n    # targetLabels: []\n\n",
                    "rendered": {
                      "text": "    ##\n    # jobLabel: \"\"\n\n    ## labels to transfer from the kubernetes service to the target\n    ##\n    # targetLabels: []\n\n",
                      "markdown": "`    ##\n    # jobLabel: \"\"\n\n    ## labels to transfer from the kubernetes service to the target\n    ##\n    # targetLabels: []\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 3505,
                  "startColumn": 36,
                  "endLine": 3505,
                  "endColumn": 45,
                  "snippet": {
                    "text": "    # additionalLabels: {}\n\n    ## Service label for use in assembling a job name of the form <label value>-<port>\n    ## If no label is specified, the service name is used.\n    ##\n    # jobLabel: \"\"\n\n",
                    "rendered": {
                      "text": "    # additionalLabels: {}\n\n    ## Service label for use in assembling a job name of the form <label value>-<port>\n    ## If no label is specified, the service name is used.\n    ##\n    # jobLabel: \"\"\n\n",
                      "markdown": "`    # additionalLabels: {}\n\n    ## Service label for use in assembling a job name of the form <label value>-<port>\n    ## If no label is specified, the service name is used.\n    ##\n    # jobLabel: \"\"\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 3504,
                  "startColumn": 6,
                  "endLine": 3504,
                  "endColumn": 15,
                  "snippet": {
                    "text": "    ##\n    # additionalLabels: {}\n\n    ## Service label for use in assembling a job name of the form <label value>-<port>\n    ## If no label is specified, the service name is used.\n    ##\n    # jobLabel: \"\"\n",
                    "rendered": {
                      "text": "    ##\n    # additionalLabels: {}\n\n    ## Service label for use in assembling a job name of the form <label value>-<port>\n    ## If no label is specified, the service name is used.\n    ##\n    # jobLabel: \"\"\n",
                      "markdown": "`    ##\n    # additionalLabels: {}\n\n    ## Service label for use in assembling a job name of the form <label value>-<port>\n    ## If no label is specified, the service name is used.\n    ##\n    # jobLabel: \"\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 3476,
                  "startColumn": 41,
                  "endLine": 3476,
                  "endColumn": 45,
                  "snippet": {
                    "text": "    # When hostNetwork is enabled, this will set dnsPolicy to ClusterFirstWithHostNet automatically.\n    hostNetwork: false\n\n    # HostAlias holds the mapping between IP and hostnames that will be injected\n    # as an entry in the pod’s hosts file.\n    hostAliases: []\n    #  - ip: 10.10.0.100\n",
                    "rendered": {
                      "text": "    # When hostNetwork is enabled, this will set dnsPolicy to ClusterFirstWithHostNet automatically.\n    hostNetwork: false\n\n    # HostAlias holds the mapping between IP and hostnames that will be injected\n    # as an entry in the pod’s hosts file.\n    hostAliases: []\n    #  - ip: 10.10.0.100\n",
                      "markdown": "`    # When hostNetwork is enabled, this will set dnsPolicy to ClusterFirstWithHostNet automatically.\n    hostNetwork: false\n\n    # HostAlias holds the mapping between IP and hostnames that will be injected\n    # as an entry in the pod’s hosts file.\n    hostAliases: []\n    #  - ip: 10.10.0.100\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 3471,
                  "startColumn": 72,
                  "endLine": 3471,
                  "endColumn": 76,
                  "snippet": {
                    "text": "    minReadySeconds: 0\n\n    # Required for use in managed kubernetes clusters (such as AWS EKS) with custom CNI (such as calico),\n    # because control-plane managed by AWS cannot communicate with pods' IP CIDR and admission webhooks are not working\n    # Use the host's network namespace if true. Make sure to understand the security implications if you want to enable it.\n    # When hostNetwork is enabled, this will set dnsPolicy to ClusterFirstWithHostNet automatically.\n    hostNetwork: false\n",
                    "rendered": {
                      "text": "    minReadySeconds: 0\n\n    # Required for use in managed kubernetes clusters (such as AWS EKS) with custom CNI (such as calico),\n    # because control-plane managed by AWS cannot communicate with pods' IP CIDR and admission webhooks are not working\n    # Use the host's network namespace if true. Make sure to understand the security implications if you want to enable it.\n    # When hostNetwork is enabled, this will set dnsPolicy to ClusterFirstWithHostNet automatically.\n    hostNetwork: false\n",
                      "markdown": "`    minReadySeconds: 0\n\n    # Required for use in managed kubernetes clusters (such as AWS EKS) with custom CNI (such as calico),\n    # because control-plane managed by AWS cannot communicate with pods' IP CIDR and admission webhooks are not working\n    # Use the host's network namespace if true. Make sure to understand the security implications if you want to enable it.\n    # When hostNetwork is enabled, this will set dnsPolicy to ClusterFirstWithHostNet automatically.\n    hostNetwork: false\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 3398,
                  "startColumn": 78,
                  "endLine": 3398,
                  "endColumn": 87,
                  "snippet": {
                    "text": "    ##\n    portName: \"http-web\"\n\n    ## ArbitraryFSAccessThroughSMs configures whether configuration based on a service monitor can access arbitrary files\n    ## on the file system of the Prometheus container e.g. bearer token files.\n    arbitraryFSAccessThroughSMs: false\n\n",
                    "rendered": {
                      "text": "    ##\n    portName: \"http-web\"\n\n    ## ArbitraryFSAccessThroughSMs configures whether configuration based on a service monitor can access arbitrary files\n    ## on the file system of the Prometheus container e.g. bearer token files.\n    arbitraryFSAccessThroughSMs: false\n\n",
                      "markdown": "`    ##\n    portName: \"http-web\"\n\n    ## ArbitraryFSAccessThroughSMs configures whether configuration based on a service monitor can access arbitrary files\n    ## on the file system of the Prometheus container e.g. bearer token files.\n    arbitraryFSAccessThroughSMs: false\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 3265,
                  "startColumn": 22,
                  "endLine": 3266,
                  "snippet": {
                    "text": "    #     regex: .*mst.*\n    #   - source_labels: [__meta_kubernetes_node_name]\n    #     action: replace\n    #     targetLabel: node\n    #     regex: (.*)\n    #     replacement: ${1}\n    #   metric_relabel_configs:\n    #   - regex: (kubernetes_io_hostname|failure_domain_beta_kubernetes_io_region|beta_kubernetes_io_os|beta_kubernetes_io_arch|beta_kubernetes_io_instance_type|failure_domain_beta_kubernetes_io_zone)\n",
                    "rendered": {
                      "text": "    #     regex: .*mst.*\n    #   - source_labels: [__meta_kubernetes_node_name]\n    #     action: replace\n    #     targetLabel: node\n    #     regex: (.*)\n    #     replacement: ${1}\n    #   metric_relabel_configs:\n    #   - regex: (kubernetes_io_hostname|failure_domain_beta_kubernetes_io_region|beta_kubernetes_io_os|beta_kubernetes_io_arch|beta_kubernetes_io_instance_type|failure_domain_beta_kubernetes_io_zone)\n",
                      "markdown": "`    #     regex: .*mst.*\n    #   - source_labels: [__meta_kubernetes_node_name]\n    #     action: replace\n    #     targetLabel: node\n    #     regex: (.*)\n    #     replacement: ${1}\n    #   metric_relabel_configs:\n    #   - regex: (kubernetes_io_hostname|failure_domain_beta_kubernetes_io_region|beta_kubernetes_io_os|beta_kubernetes_io_arch|beta_kubernetes_io_instance_type|failure_domain_beta_kubernetes_io_zone)\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 3246,
                  "startColumn": 17,
                  "endLine": 3247,
                  "snippet": {
                    "text": "    additionalScrapeConfigs: []\n    # - job_name: kube-etcd\n    #   kubernetes_sd_configs:\n    #     - role: node\n    #   scheme: https\n    #   tls_config:\n    #     ca_file:   /etc/prometheus/secrets/etcd-client-cert/etcd-ca\n    #     cert_file: /etc/prometheus/secrets/etcd-client-cert/etcd-client\n",
                    "rendered": {
                      "text": "    additionalScrapeConfigs: []\n    # - job_name: kube-etcd\n    #   kubernetes_sd_configs:\n    #     - role: node\n    #   scheme: https\n    #   tls_config:\n    #     ca_file:   /etc/prometheus/secrets/etcd-client-cert/etcd-ca\n    #     cert_file: /etc/prometheus/secrets/etcd-client-cert/etcd-client\n",
                      "markdown": "`    additionalScrapeConfigs: []\n    # - job_name: kube-etcd\n    #   kubernetes_sd_configs:\n    #     - role: node\n    #   scheme: https\n    #   tls_config:\n    #     ca_file:   /etc/prometheus/secrets/etcd-client-cert/etcd-ca\n    #     cert_file: /etc/prometheus/secrets/etcd-client-cert/etcd-client\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 3240,
                  "startColumn": 50,
                  "endLine": 3240,
                  "endColumn": 56,
                  "snippet": {
                    "text": "    ## scrape configs are going to break Prometheus after the upgrade.\n    ## AdditionalScrapeConfigs can be defined as a list or as a templated string.\n    ##\n    ## The scrape configuration example below will find master nodes, provided they have the name .*mst.*, relabel the\n    ## port to 2379 and allow etcd scraping provided it is running on all Kubernetes master nodes\n    ##\n    additionalScrapeConfigs: []\n",
                    "rendered": {
                      "text": "    ## scrape configs are going to break Prometheus after the upgrade.\n    ## AdditionalScrapeConfigs can be defined as a list or as a templated string.\n    ##\n    ## The scrape configuration example below will find master nodes, provided they have the name .*mst.*, relabel the\n    ## port to 2379 and allow etcd scraping provided it is running on all Kubernetes master nodes\n    ##\n    additionalScrapeConfigs: []\n",
                      "markdown": "`    ## scrape configs are going to break Prometheus after the upgrade.\n    ## AdditionalScrapeConfigs can be defined as a list or as a templated string.\n    ##\n    ## The scrape configuration example below will find master nodes, provided they have the name .*mst.*, relabel the\n    ## port to 2379 and allow etcd scraping provided it is running on all Kubernetes master nodes\n    ##\n    additionalScrapeConfigs: []\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 3158,
                  "startColumn": 119,
                  "endLine": 3158,
                  "endColumn": 125,
                  "snippet": {
                    "text": "    #   k8s-app: prometheus\n\n    ## Pod anti-affinity can prevent the scheduler from placing Prometheus replicas on the same node.\n    ## The default value \"soft\" means that the scheduler should *prefer* to not schedule two replica pods onto the same node but no guarantee is provided.\n    ## The value \"hard\" means that the scheduler is *required* to not schedule two replica pods onto the same node.\n    ## The value \"\" will disable pod anti-affinity so that no anti-affinity rules will be configured.\n    podAntiAffinity: \"\"\n",
                    "rendered": {
                      "text": "    #   k8s-app: prometheus\n\n    ## Pod anti-affinity can prevent the scheduler from placing Prometheus replicas on the same node.\n    ## The default value \"soft\" means that the scheduler should *prefer* to not schedule two replica pods onto the same node but no guarantee is provided.\n    ## The value \"hard\" means that the scheduler is *required* to not schedule two replica pods onto the same node.\n    ## The value \"\" will disable pod anti-affinity so that no anti-affinity rules will be configured.\n    podAntiAffinity: \"\"\n",
                      "markdown": "`    #   k8s-app: prometheus\n\n    ## Pod anti-affinity can prevent the scheduler from placing Prometheus replicas on the same node.\n    ## The default value \"soft\" means that the scheduler should *prefer* to not schedule two replica pods onto the same node but no guarantee is provided.\n    ## The value \"hard\" means that the scheduler is *required* to not schedule two replica pods onto the same node.\n    ## The value \"\" will disable pod anti-affinity so that no anti-affinity rules will be configured.\n    podAntiAffinity: \"\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2930,
                  "startColumn": 36,
                  "endLine": 2930,
                  "endColumn": 42,
                  "snippet": {
                    "text": "    #   bearerTokenFile: \"\"\n    #   apiVersion: v2\n\n    ## External labels to add to any time series or alerts when communicating with external systems\n    ##\n    externalLabels: {}\n\n",
                    "rendered": {
                      "text": "    #   bearerTokenFile: \"\"\n    #   apiVersion: v2\n\n    ## External labels to add to any time series or alerts when communicating with external systems\n    ##\n    externalLabels: {}\n\n",
                      "markdown": "`    #   bearerTokenFile: \"\"\n    #   apiVersion: v2\n\n    ## External labels to add to any time series or alerts when communicating with external systems\n    ##\n    externalLabels: {}\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2895,
                  "startColumn": 31,
                  "endLine": 2895,
                  "endColumn": 37,
                  "snippet": {
                    "text": "      tag: v2.45.0\n      sha: \"\"\n\n    ## Tolerations for use with node taints\n    ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/\n    ##\n    tolerations: []\n",
                    "rendered": {
                      "text": "      tag: v2.45.0\n      sha: \"\"\n\n    ## Tolerations for use with node taints\n    ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/\n    ##\n    tolerations: []\n",
                      "markdown": "`      tag: v2.45.0\n      sha: \"\"\n\n    ## Tolerations for use with node taints\n    ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/\n    ##\n    tolerations: []\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2860,
                  "startColumn": 114,
                  "endLine": 2860,
                  "endColumn": 120,
                  "snippet": {
                    "text": "    ##\n    listenLocal: false\n\n    ## EnableAdminAPI enables Prometheus the administrative HTTP API which includes functionality such as deleting time series.\n    ## This is disabled by default.\n    ## ref: https://prometheus.io/docs/prometheus/latest/querying/api/#tsdb-admin-apis\n    ##\n",
                    "rendered": {
                      "text": "    ##\n    listenLocal: false\n\n    ## EnableAdminAPI enables Prometheus the administrative HTTP API which includes functionality such as deleting time series.\n    ## This is disabled by default.\n    ## ref: https://prometheus.io/docs/prometheus/latest/querying/api/#tsdb-admin-apis\n    ##\n",
                      "markdown": "`    ##\n    listenLocal: false\n\n    ## EnableAdminAPI enables Prometheus the administrative HTTP API which includes functionality such as deleting time series.\n    ## This is disabled by default.\n    ## ref: https://prometheus.io/docs/prometheus/latest/querying/api/#tsdb-admin-apis\n    ##\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2719,
                  "startColumn": 83,
                  "endLine": 2720,
                  "snippet": {
                    "text": "      #   hosts:\n    #     - prometheus.example.com\n\n  ## Configuration for creating an Ingress that will map to each Prometheus replica service\n  ## prometheus.servicePerReplica must be enabled\n  ##\n  ingressPerReplica:\n    enabled: false\n",
                    "rendered": {
                      "text": "      #   hosts:\n    #     - prometheus.example.com\n\n  ## Configuration for creating an Ingress that will map to each Prometheus replica service\n  ## prometheus.servicePerReplica must be enabled\n  ##\n  ingressPerReplica:\n    enabled: false\n",
                      "markdown": "`      #   hosts:\n    #     - prometheus.example.com\n\n  ## Configuration for creating an Ingress that will map to each Prometheus replica service\n  ## prometheus.servicePerReplica must be enabled\n  ##\n  ingressPerReplica:\n    enabled: false\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2692,
                  "startColumn": 60,
                  "endLine": 2693,
                  "snippet": {
                    "text": "    annotations: {}\n    labels: {}\n\n    ## Redirect ingress to an additional defined port on the service\n    # servicePort: 8081\n\n    ## Hostnames.\n    ## Must be provided if Ingress is enabled.\n",
                    "rendered": {
                      "text": "    annotations: {}\n    labels: {}\n\n    ## Redirect ingress to an additional defined port on the service\n    # servicePort: 8081\n\n    ## Hostnames.\n    ## Must be provided if Ingress is enabled.\n",
                      "markdown": "`    annotations: {}\n    labels: {}\n\n    ## Redirect ingress to an additional defined port on the service\n    # servicePort: 8081\n\n    ## Hostnames.\n    ## Must be provided if Ingress is enabled.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2643,
                  "startColumn": 29,
                  "endLine": 2644,
                  "snippet": {
                    "text": "    labels: {}\n    servicePort: 10901\n\n    ## Port to expose on each node\n    ## Only used if service.type is 'NodePort'\n    ##\n    nodePort: 30901\n\n",
                    "rendered": {
                      "text": "    labels: {}\n    servicePort: 10901\n\n    ## Port to expose on each node\n    ## Only used if service.type is 'NodePort'\n    ##\n    nodePort: 30901\n\n",
                      "markdown": "`    labels: {}\n    servicePort: 10901\n\n    ## Port to expose on each node\n    ## Only used if service.type is 'NodePort'\n    ##\n    nodePort: 30901\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2617,
                  "startColumn": 6,
                  "endLine": 2617,
                  "endColumn": 15,
                  "snippet": {
                    "text": "    ##\n    externalTrafficPolicy: Cluster\n\n    ## Service type\n    ##\n    type: ClusterIP\n\n",
                    "rendered": {
                      "text": "    ##\n    externalTrafficPolicy: Cluster\n\n    ## Service type\n    ##\n    type: ClusterIP\n\n",
                      "markdown": "`    ##\n    externalTrafficPolicy: Cluster\n\n    ## Service type\n    ##\n    type: ClusterIP\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2613,
                  "startColumn": 22,
                  "endLine": 2613,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    ## Only used if servicePerReplica.type is \"LoadBalancer\"\n    loadBalancerSourceRanges: []\n\n    ## Denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints\n    ##\n    externalTrafficPolicy: Cluster\n\n",
                    "rendered": {
                      "text": "    ## Only used if servicePerReplica.type is \"LoadBalancer\"\n    loadBalancerSourceRanges: []\n\n    ## Denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints\n    ##\n    externalTrafficPolicy: Cluster\n\n",
                      "markdown": "`    ## Only used if servicePerReplica.type is \"LoadBalancer\"\n    loadBalancerSourceRanges: []\n\n    ## Denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints\n    ##\n    externalTrafficPolicy: Cluster\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2609,
                  "startColumn": 26,
                  "endLine": 2609,
                  "endColumn": 30,
                  "snippet": {
                    "text": "    ##\n    nodePort: 30091\n\n    ## Loadbalancer source IP ranges\n    ## Only used if servicePerReplica.type is \"LoadBalancer\"\n    loadBalancerSourceRanges: []\n\n",
                    "rendered": {
                      "text": "    ##\n    nodePort: 30091\n\n    ## Loadbalancer source IP ranges\n    ## Only used if servicePerReplica.type is \"LoadBalancer\"\n    loadBalancerSourceRanges: []\n\n",
                      "markdown": "`    ##\n    nodePort: 30091\n\n    ## Loadbalancer source IP ranges\n    ## Only used if servicePerReplica.type is \"LoadBalancer\"\n    loadBalancerSourceRanges: []\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2604,
                  "startColumn": 29,
                  "endLine": 2605,
                  "snippet": {
                    "text": "    ## To be used with a proxy extraContainer port\n    targetPort: 9090\n\n    ## Port to expose on each node\n    ## Only used if servicePerReplica.type is 'NodePort'\n    ##\n    nodePort: 30091\n\n",
                    "rendered": {
                      "text": "    ## To be used with a proxy extraContainer port\n    targetPort: 9090\n\n    ## Port to expose on each node\n    ## Only used if servicePerReplica.type is 'NodePort'\n    ##\n    nodePort: 30091\n\n",
                      "markdown": "`    ## To be used with a proxy extraContainer port\n    targetPort: 9090\n\n    ## Port to expose on each node\n    ## Only used if servicePerReplica.type is 'NodePort'\n    ##\n    nodePort: 30091\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2597,
                  "startColumn": 26,
                  "endLine": 2597,
                  "endColumn": 35,
                  "snippet": {
                    "text": "    enabled: false\n    annotations: {}\n\n    ## Port for Prometheus Service per replica to listen on\n    ##\n    port: 9090\n\n",
                    "rendered": {
                      "text": "    enabled: false\n    annotations: {}\n\n    ## Port for Prometheus Service per replica to listen on\n    ##\n    port: 9090\n\n",
                      "markdown": "`    enabled: false\n    annotations: {}\n\n    ## Port for Prometheus Service per replica to listen on\n    ##\n    port: 9090\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2591,
                  "startColumn": 42,
                  "endLine": 2591,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\n    sessionAffinity: \"\"\n\n  ## Configuration for creating a separate Service for each statefulset Prometheus replica\n  ##\n  servicePerReplica:\n    enabled: false\n",
                    "rendered": {
                      "text": "\n    sessionAffinity: \"\"\n\n  ## Configuration for creating a separate Service for each statefulset Prometheus replica\n  ##\n  servicePerReplica:\n    enabled: false\n",
                      "markdown": "`\n    sessionAffinity: \"\"\n\n  ## Configuration for creating a separate Service for each statefulset Prometheus replica\n  ##\n  servicePerReplica:\n    enabled: false\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2578,
                  "startColumn": 39,
                  "endLine": 2579,
                  "snippet": {
                    "text": "    ##\n    type: ClusterIP\n\n    ## Additional port to define in the Service\n    additionalPorts: []\n    # additionalPorts:\n    # - name: authenticated\n    #   port: 8081\n",
                    "rendered": {
                      "text": "    ##\n    type: ClusterIP\n\n    ## Additional port to define in the Service\n    additionalPorts: []\n    # additionalPorts:\n    # - name: authenticated\n    #   port: 8081\n",
                      "markdown": "`    ##\n    type: ClusterIP\n\n    ## Additional port to define in the Service\n    additionalPorts: []\n    # additionalPorts:\n    # - name: authenticated\n    #   port: 8081\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2574,
                  "startColumn": 6,
                  "endLine": 2574,
                  "endColumn": 15,
                  "snippet": {
                    "text": "    ##\n    externalTrafficPolicy: Cluster\n\n    ## Service type\n    ##\n    type: ClusterIP\n\n",
                    "rendered": {
                      "text": "    ##\n    externalTrafficPolicy: Cluster\n\n    ## Service type\n    ##\n    type: ClusterIP\n\n",
                      "markdown": "`    ##\n    externalTrafficPolicy: Cluster\n\n    ## Service type\n    ##\n    type: ClusterIP\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2570,
                  "startColumn": 22,
                  "endLine": 2570,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    loadBalancerIP: \"\"\n    loadBalancerSourceRanges: []\n\n    ## Denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints\n    ##\n    externalTrafficPolicy: Cluster\n\n",
                    "rendered": {
                      "text": "    loadBalancerIP: \"\"\n    loadBalancerSourceRanges: []\n\n    ## Denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints\n    ##\n    externalTrafficPolicy: Cluster\n\n",
                      "markdown": "`    loadBalancerIP: \"\"\n    loadBalancerSourceRanges: []\n\n    ## Denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints\n    ##\n    externalTrafficPolicy: Cluster\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2565,
                  "startColumn": 19,
                  "endLine": 2566,
                  "snippet": {
                    "text": "    ##\n    nodePort: 30090\n\n    ## Loadbalancer IP\n    ## Only use if service.type is \"LoadBalancer\"\n    loadBalancerIP: \"\"\n    loadBalancerSourceRanges: []\n\n",
                    "rendered": {
                      "text": "    ##\n    nodePort: 30090\n\n    ## Loadbalancer IP\n    ## Only use if service.type is \"LoadBalancer\"\n    loadBalancerIP: \"\"\n    loadBalancerSourceRanges: []\n\n",
                      "markdown": "`    ##\n    nodePort: 30090\n\n    ## Loadbalancer IP\n    ## Only use if service.type is \"LoadBalancer\"\n    loadBalancerIP: \"\"\n    loadBalancerSourceRanges: []\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2560,
                  "startColumn": 29,
                  "endLine": 2561,
                  "snippet": {
                    "text": "    ##\n    externalIPs: []\n\n    ## Port to expose on each node\n    ## Only used if service.type is 'NodePort'\n    ##\n    nodePort: 30090\n\n",
                    "rendered": {
                      "text": "    ##\n    externalIPs: []\n\n    ## Port to expose on each node\n    ## Only used if service.type is 'NodePort'\n    ##\n    nodePort: 30090\n\n",
                      "markdown": "`    ##\n    externalIPs: []\n\n    ## Port to expose on each node\n    ## Only used if service.type is 'NodePort'\n    ##\n    nodePort: 30090\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2555,
                  "startColumn": 58,
                  "endLine": 2555,
                  "endColumn": 67,
                  "snippet": {
                    "text": "    ## To be used with a proxy extraContainer port\n    targetPort: 9090\n\n    ## List of IP addresses at which the Prometheus server service is available\n    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\n    ##\n    externalIPs: []\n",
                    "rendered": {
                      "text": "    ## To be used with a proxy extraContainer port\n    targetPort: 9090\n\n    ## List of IP addresses at which the Prometheus server service is available\n    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\n    ##\n    externalIPs: []\n",
                      "markdown": "`    ## To be used with a proxy extraContainer port\n    targetPort: 9090\n\n    ## List of IP addresses at which the Prometheus server service is available\n    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\n    ##\n    externalIPs: []\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2555,
                  "startColumn": 14,
                  "endLine": 2555,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    ## To be used with a proxy extraContainer port\n    targetPort: 9090\n\n    ## List of IP addresses at which the Prometheus server service is available\n    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\n    ##\n    externalIPs: []\n",
                    "rendered": {
                      "text": "    ## To be used with a proxy extraContainer port\n    targetPort: 9090\n\n    ## List of IP addresses at which the Prometheus server service is available\n    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\n    ##\n    externalIPs: []\n",
                      "markdown": "`    ## To be used with a proxy extraContainer port\n    targetPort: 9090\n\n    ## List of IP addresses at which the Prometheus server service is available\n    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\n    ##\n    externalIPs: []\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2548,
                  "startColumn": 26,
                  "endLine": 2548,
                  "endColumn": 35,
                  "snippet": {
                    "text": "    labels: {}\n    clusterIP: \"\"\n\n    ## Port for Prometheus Service to listen on\n    ##\n    port: 9090\n\n",
                    "rendered": {
                      "text": "    labels: {}\n    clusterIP: \"\"\n\n    ## Port for Prometheus Service to listen on\n    ##\n    port: 9090\n\n",
                      "markdown": "`    labels: {}\n    clusterIP: \"\"\n\n    ## Port for Prometheus Service to listen on\n    ##\n    port: 9090\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2541,
                  "startColumn": 33,
                  "endLine": 2542,
                  "snippet": {
                    "text": "    nodePort: 30901\n    httpNodePort: 30902\n\n  ## Configuration for Prometheus service\n  ##\n  service:\n    annotations: {}\n    labels: {}\n",
                    "rendered": {
                      "text": "    nodePort: 30901\n    httpNodePort: 30902\n\n  ## Configuration for Prometheus service\n  ##\n  service:\n    annotations: {}\n    labels: {}\n",
                      "markdown": "`    nodePort: 30901\n    httpNodePort: 30902\n\n  ## Configuration for Prometheus service\n  ##\n  service:\n    annotations: {}\n    labels: {}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2536,
                  "startColumn": 29,
                  "endLine": 2537,
                  "snippet": {
                    "text": "    ##\n    type: LoadBalancer\n\n    ## Port to expose on each node\n    ##\n    nodePort: 30901\n    httpNodePort: 30902\n\n",
                    "rendered": {
                      "text": "    ##\n    type: LoadBalancer\n\n    ## Port to expose on each node\n    ##\n    nodePort: 30901\n    httpNodePort: 30902\n\n",
                      "markdown": "`    ##\n    type: LoadBalancer\n\n    ## Port to expose on each node\n    ##\n    nodePort: 30901\n    httpNodePort: 30902\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2532,
                  "startColumn": 6,
                  "endLine": 2532,
                  "endColumn": 15,
                  "snippet": {
                    "text": "    ##\n    externalTrafficPolicy: Cluster\n\n    ## Service type\n    ##\n    type: LoadBalancer\n\n",
                    "rendered": {
                      "text": "    ##\n    externalTrafficPolicy: Cluster\n\n    ## Service type\n    ##\n    type: LoadBalancer\n\n",
                      "markdown": "`    ##\n    externalTrafficPolicy: Cluster\n\n    ## Service type\n    ##\n    type: LoadBalancer\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2528,
                  "startColumn": 22,
                  "endLine": 2528,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    httpPort: 10902\n    targetHttpPort: \"http\"\n\n    ## Denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints\n    ##\n    externalTrafficPolicy: Cluster\n\n",
                    "rendered": {
                      "text": "    httpPort: 10902\n    targetHttpPort: \"http\"\n\n    ## Denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints\n    ##\n    externalTrafficPolicy: Cluster\n\n",
                      "markdown": "`    httpPort: 10902\n    targetHttpPort: \"http\"\n\n    ## Denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints\n    ##\n    externalTrafficPolicy: Cluster\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2510,
                  "startColumn": 27,
                  "endLine": 2510,
                  "endColumn": 36,
                  "snippet": {
                    "text": "    relabelings: []\n\n  # Service for external access to sidecar\n  # Enabling this creates a service to expose thanos-sidecar outside the cluster.\n  thanosServiceExternal:\n    enabled: false\n    annotations: {}\n",
                    "rendered": {
                      "text": "    relabelings: []\n\n  # Service for external access to sidecar\n  # Enabling this creates a service to expose thanos-sidecar outside the cluster.\n  thanosServiceExternal:\n    enabled: false\n    annotations: {}\n",
                      "markdown": "`    relabelings: []\n\n  # Service for external access to sidecar\n  # Enabling this creates a service to expose thanos-sidecar outside the cluster.\n  thanosServiceExternal:\n    enabled: false\n    annotations: {}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2509,
                  "startColumn": 3,
                  "endLine": 2509,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    ## relabel configs to apply to samples before ingestion.\n    relabelings: []\n\n  # Service for external access to sidecar\n  # Enabling this creates a service to expose thanos-sidecar outside the cluster.\n  thanosServiceExternal:\n    enabled: false\n",
                    "rendered": {
                      "text": "    ## relabel configs to apply to samples before ingestion.\n    relabelings: []\n\n  # Service for external access to sidecar\n  # Enabling this creates a service to expose thanos-sidecar outside the cluster.\n  thanosServiceExternal:\n    enabled: false\n",
                      "markdown": "`    ## relabel configs to apply to samples before ingestion.\n    relabelings: []\n\n  # Service for external access to sidecar\n  # Enabling this creates a service to expose thanos-sidecar outside the cluster.\n  thanosServiceExternal:\n    enabled: false\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2479,
                  "startColumn": 38,
                  "endLine": 2479,
                  "endColumn": 47,
                  "snippet": {
                    "text": "    # Default is to make this a headless service (\"None\")\n    clusterIP: \"None\"\n\n    ## Port to expose on each node, if service type is NodePort\n    ##\n    nodePort: 30901\n    httpNodePort: 30902\n",
                    "rendered": {
                      "text": "    # Default is to make this a headless service (\"None\")\n    clusterIP: \"None\"\n\n    ## Port to expose on each node, if service type is NodePort\n    ##\n    nodePort: 30901\n    httpNodePort: 30902\n",
                      "markdown": "`    # Default is to make this a headless service (\"None\")\n    clusterIP: \"None\"\n\n    ## Port to expose on each node, if service type is NodePort\n    ##\n    nodePort: 30901\n    httpNodePort: 30902\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2476,
                  "startColumn": 40,
                  "endLine": 2476,
                  "endColumn": 49,
                  "snippet": {
                    "text": "    targetHttpPort: \"http\"\n\n    ## ClusterIP to assign\n    # Default is to make this a headless service (\"None\")\n    clusterIP: \"None\"\n\n    ## Port to expose on each node, if service type is NodePort\n",
                    "rendered": {
                      "text": "    targetHttpPort: \"http\"\n\n    ## ClusterIP to assign\n    # Default is to make this a headless service (\"None\")\n    clusterIP: \"None\"\n\n    ## Port to expose on each node, if service type is NodePort\n",
                      "markdown": "`    targetHttpPort: \"http\"\n\n    ## ClusterIP to assign\n    # Default is to make this a headless service (\"None\")\n    clusterIP: \"None\"\n\n    ## Port to expose on each node, if service type is NodePort\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2461,
                  "startColumn": 6,
                  "endLine": 2461,
                  "endColumn": 15,
                  "snippet": {
                    "text": "    ##\n    externalTrafficPolicy: Cluster\n\n    ## Service type\n    ##\n    type: ClusterIP\n\n",
                    "rendered": {
                      "text": "    ##\n    externalTrafficPolicy: Cluster\n\n    ## Service type\n    ##\n    type: ClusterIP\n\n",
                      "markdown": "`    ##\n    externalTrafficPolicy: Cluster\n\n    ## Service type\n    ##\n    type: ClusterIP\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2457,
                  "startColumn": 22,
                  "endLine": 2457,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    annotations: {}\n    labels: {}\n\n    ## Denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints\n    ##\n    externalTrafficPolicy: Cluster\n\n",
                    "rendered": {
                      "text": "    annotations: {}\n    labels: {}\n\n    ## Denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints\n    ##\n    externalTrafficPolicy: Cluster\n\n",
                      "markdown": "`    annotations: {}\n    labels: {}\n\n    ## Denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints\n    ##\n    externalTrafficPolicy: Cluster\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2447,
                  "startColumn": 22,
                  "endLine": 2447,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    name: \"\"\n    annotations: {}\n\n  # Service for thanos service discovery on sidecar\n  # Enable this can make Thanos Query can use\n  # `--store=dnssrv+_grpc._tcp.${kube-prometheus-stack.fullname}-thanos-discovery.${namespace}.svc.cluster.local` to discovery\n  # Thanos sidecar on prometheus nodes\n",
                    "rendered": {
                      "text": "    name: \"\"\n    annotations: {}\n\n  # Service for thanos service discovery on sidecar\n  # Enable this can make Thanos Query can use\n  # `--store=dnssrv+_grpc._tcp.${kube-prometheus-stack.fullname}-thanos-discovery.${namespace}.svc.cluster.local` to discovery\n  # Thanos sidecar on prometheus nodes\n",
                      "markdown": "`    name: \"\"\n    annotations: {}\n\n  # Service for thanos service discovery on sidecar\n  # Enable this can make Thanos Query can use\n  # `--store=dnssrv+_grpc._tcp.${kube-prometheus-stack.fullname}-thanos-discovery.${namespace}.svc.cluster.local` to discovery\n  # Thanos sidecar on prometheus nodes\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2447,
                  "startColumn": 3,
                  "endLine": 2447,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    name: \"\"\n    annotations: {}\n\n  # Service for thanos service discovery on sidecar\n  # Enable this can make Thanos Query can use\n  # `--store=dnssrv+_grpc._tcp.${kube-prometheus-stack.fullname}-thanos-discovery.${namespace}.svc.cluster.local` to discovery\n  # Thanos sidecar on prometheus nodes\n",
                    "rendered": {
                      "text": "    name: \"\"\n    annotations: {}\n\n  # Service for thanos service discovery on sidecar\n  # Enable this can make Thanos Query can use\n  # `--store=dnssrv+_grpc._tcp.${kube-prometheus-stack.fullname}-thanos-discovery.${namespace}.svc.cluster.local` to discovery\n  # Thanos sidecar on prometheus nodes\n",
                      "markdown": "`    name: \"\"\n    annotations: {}\n\n  # Service for thanos service discovery on sidecar\n  # Enable this can make Thanos Query can use\n  # `--store=dnssrv+_grpc._tcp.${kube-prometheus-stack.fullname}-thanos-discovery.${namespace}.svc.cluster.local` to discovery\n  # Thanos sidecar on prometheus nodes\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2439,
                  "startColumn": 4,
                  "endLine": 2439,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    #   matchLabels:\n    #     app: prometheus\n\n  ## Service account for Prometheuses to use.\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\n  ##\n  serviceAccount:\n",
                    "rendered": {
                      "text": "    #   matchLabels:\n    #     app: prometheus\n\n  ## Service account for Prometheuses to use.\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\n  ##\n  serviceAccount:\n",
                      "markdown": "`    #   matchLabels:\n    #     app: prometheus\n\n  ## Service account for Prometheuses to use.\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\n  ##\n  serviceAccount:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2249,
                  "startColumn": 29,
                  "endLine": 2249,
                  "endColumn": 35,
                  "snippet": {
                    "text": "  ##\n  nodeSelector: {}\n\n  ## Tolerations for use with node taints\n  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/\n  ##\n  tolerations: []\n",
                    "rendered": {
                      "text": "  ##\n  nodeSelector: {}\n\n  ## Tolerations for use with node taints\n  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/\n  ##\n  tolerations: []\n",
                      "markdown": "`  ##\n  nodeSelector: {}\n\n  ## Tolerations for use with node taints\n  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/\n  ##\n  tolerations: []\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2240,
                  "startColumn": 70,
                  "endLine": 2240,
                  "endColumn": 74,
                  "snippet": {
                    "text": "  #   memory: 100Mi\n\n  # Required for use in managed kubernetes clusters (such as AWS EKS) with custom CNI (such as calico),\n  # because control-plane managed by AWS cannot communicate with pods' IP CIDR and admission webhooks are not working\n  ##\n  hostNetwork: false\n\n",
                    "rendered": {
                      "text": "  #   memory: 100Mi\n\n  # Required for use in managed kubernetes clusters (such as AWS EKS) with custom CNI (such as calico),\n  # because control-plane managed by AWS cannot communicate with pods' IP CIDR and admission webhooks are not working\n  ##\n  hostNetwork: false\n\n",
                      "markdown": "`  #   memory: 100Mi\n\n  # Required for use in managed kubernetes clusters (such as AWS EKS) with custom CNI (such as calico),\n  # because control-plane managed by AWS cannot communicate with pods' IP CIDR and admission webhooks are not working\n  ##\n  hostNetwork: false\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2208,
                  "startColumn": 64,
                  "endLine": 2208,
                  "endColumn": 73,
                  "snippet": {
                    "text": "    ##\n    labelValueLengthLimit: 0\n\n    ## Scrape timeout. If not set, the Prometheus default scrape timeout is used.\n    scrapeTimeout: \"\"\n    selfMonitor: true\n\n",
                    "rendered": {
                      "text": "    ##\n    labelValueLengthLimit: 0\n\n    ## Scrape timeout. If not set, the Prometheus default scrape timeout is used.\n    scrapeTimeout: \"\"\n    selfMonitor: true\n\n",
                      "markdown": "`    ##\n    labelValueLengthLimit: 0\n\n    ## Scrape timeout. If not set, the Prometheus default scrape timeout is used.\n    scrapeTimeout: \"\"\n    selfMonitor: true\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2169,
                  "startColumn": 53,
                  "endLine": 2169,
                  "endColumn": 62,
                  "snippet": {
                    "text": "  ## Decrease log verbosity to errors only\n  # logLevel: error\n\n  ## If true, the operator will create and maintain a service for scraping kubelets\n  ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/helm/prometheus-operator/README.md\n  ##\n  kubeletService:\n",
                    "rendered": {
                      "text": "  ## Decrease log verbosity to errors only\n  # logLevel: error\n\n  ## If true, the operator will create and maintain a service for scraping kubelets\n  ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/helm/prometheus-operator/README.md\n  ##\n  kubeletService:\n",
                      "markdown": "`  ## Decrease log verbosity to errors only\n  # logLevel: error\n\n  ## If true, the operator will create and maintain a service for scraping kubelets\n  ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/helm/prometheus-operator/README.md\n  ##\n  kubeletService:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2138,
                  "startColumn": 58,
                  "endLine": 2138,
                  "endColumn": 67,
                  "snippet": {
                    "text": "    ##\n    type: ClusterIP\n\n    ## List of IP addresses at which the Prometheus server service is available\n    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\n    ##\n    externalIPs: []\n",
                    "rendered": {
                      "text": "    ##\n    type: ClusterIP\n\n    ## List of IP addresses at which the Prometheus server service is available\n    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\n    ##\n    externalIPs: []\n",
                      "markdown": "`    ##\n    type: ClusterIP\n\n    ## List of IP addresses at which the Prometheus server service is available\n    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\n    ##\n    externalIPs: []\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2138,
                  "startColumn": 14,
                  "endLine": 2138,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    ##\n    type: ClusterIP\n\n    ## List of IP addresses at which the Prometheus server service is available\n    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\n    ##\n    externalIPs: []\n",
                    "rendered": {
                      "text": "    ##\n    type: ClusterIP\n\n    ## List of IP addresses at which the Prometheus server service is available\n    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\n    ##\n    externalIPs: []\n",
                      "markdown": "`    ##\n    type: ClusterIP\n\n    ## List of IP addresses at which the Prometheus server service is available\n    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\n    ##\n    externalIPs: []\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2133,
                  "startColumn": 6,
                  "endLine": 2133,
                  "endColumn": 15,
                  "snippet": {
                    "text": "    ##\n    externalTrafficPolicy: Cluster\n\n    ## Service type\n    ## NodePort, ClusterIP, LoadBalancer\n    ##\n    type: ClusterIP\n",
                    "rendered": {
                      "text": "    ##\n    externalTrafficPolicy: Cluster\n\n    ## Service type\n    ## NodePort, ClusterIP, LoadBalancer\n    ##\n    type: ClusterIP\n",
                      "markdown": "`    ##\n    externalTrafficPolicy: Cluster\n\n    ## Service type\n    ## NodePort, ClusterIP, LoadBalancer\n    ##\n    type: ClusterIP\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2129,
                  "startColumn": 22,
                  "endLine": 2129,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    loadBalancerIP: \"\"\n    loadBalancerSourceRanges: []\n\n    ## Denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints\n    ##\n    externalTrafficPolicy: Cluster\n\n",
                    "rendered": {
                      "text": "    loadBalancerIP: \"\"\n    loadBalancerSourceRanges: []\n\n    ## Denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints\n    ##\n    externalTrafficPolicy: Cluster\n\n",
                      "markdown": "`    loadBalancerIP: \"\"\n    loadBalancerSourceRanges: []\n\n    ## Denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints\n    ##\n    externalTrafficPolicy: Cluster\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2123,
                  "startColumn": 19,
                  "endLine": 2124,
                  "snippet": {
                    "text": "    ##\n    additionalPorts: []\n\n    ## Loadbalancer IP\n    ## Only use if service.type is \"LoadBalancer\"\n    ##\n    loadBalancerIP: \"\"\n    loadBalancerSourceRanges: []\n",
                    "rendered": {
                      "text": "    ##\n    additionalPorts: []\n\n    ## Loadbalancer IP\n    ## Only use if service.type is \"LoadBalancer\"\n    ##\n    loadBalancerIP: \"\"\n    loadBalancerSourceRanges: []\n",
                      "markdown": "`    ##\n    additionalPorts: []\n\n    ## Loadbalancer IP\n    ## Only use if service.type is \"LoadBalancer\"\n    ##\n    loadBalancerIP: \"\"\n    loadBalancerSourceRanges: []\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2118,
                  "startColumn": 46,
                  "endLine": 2119,
                  "snippet": {
                    "text": "\n    nodePortTls: 30443\n\n    ## Additional ports to open for Prometheus service\n    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#multi-port-services\n    ##\n    additionalPorts: []\n\n",
                    "rendered": {
                      "text": "\n    nodePortTls: 30443\n\n    ## Additional ports to open for Prometheus service\n    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#multi-port-services\n    ##\n    additionalPorts: []\n\n",
                      "markdown": "`\n    nodePortTls: 30443\n\n    ## Additional ports to open for Prometheus service\n    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#multi-port-services\n    ##\n    additionalPorts: []\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2111,
                  "startColumn": 29,
                  "endLine": 2112,
                  "snippet": {
                    "text": "    labels: {}\n    clusterIP: \"\"\n\n    ## Port to expose on each node\n    ## Only used if service.type is 'NodePort'\n    ##\n    nodePort: 30080\n\n",
                    "rendered": {
                      "text": "    labels: {}\n    clusterIP: \"\"\n\n    ## Port to expose on each node\n    ## Only used if service.type is 'NodePort'\n    ##\n    nodePort: 30080\n\n",
                      "markdown": "`    labels: {}\n    clusterIP: \"\"\n\n    ## Port to expose on each node\n    ## Only used if service.type is 'NodePort'\n    ##\n    nodePort: 30080\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2104,
                  "startColumn": 42,
                  "endLine": 2105,
                  "snippet": {
                    "text": "    create: true\n    name: \"\"\n\n  ## Configuration for Prometheus operator service\n  ##\n  service:\n    annotations: {}\n    labels: {}\n",
                    "rendered": {
                      "text": "    create: true\n    name: \"\"\n\n  ## Configuration for Prometheus operator service\n  ##\n  service:\n    annotations: {}\n    labels: {}\n",
                      "markdown": "`    create: true\n    name: \"\"\n\n  ## Configuration for Prometheus operator service\n  ##\n  service:\n    annotations: {}\n    labels: {}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 2097,
                  "startColumn": 4,
                  "endLine": 2097,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    # cilium:\n    #   egress:\n\n  ## Service account for Alertmanager to use.\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\n  ##\n  serviceAccount:\n",
                    "rendered": {
                      "text": "    # cilium:\n    #   egress:\n\n  ## Service account for Alertmanager to use.\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\n  ##\n  serviceAccount:\n",
                      "markdown": "`    # cilium:\n    #   egress:\n\n  ## Service account for Alertmanager to use.\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\n  ##\n  serviceAccount:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 1992,
                  "startColumn": 21,
                  "endLine": 1992,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    caBundle: \"\"\n    ## If enabled, generate a self-signed certificate, then patch the webhook configurations with the generated data.\n    ## On chart upgrades (or if the secret exists) the cert will not be re-generated. You can use this to provide your own\n    ## certs ahead of time if you wish.\n    ##\n    annotations: {}\n    #   argocd.argoproj.io/hook: PreSync\n",
                    "rendered": {
                      "text": "    caBundle: \"\"\n    ## If enabled, generate a self-signed certificate, then patch the webhook configurations with the generated data.\n    ## On chart upgrades (or if the secret exists) the cert will not be re-generated. You can use this to provide your own\n    ## certs ahead of time if you wish.\n    ##\n    annotations: {}\n    #   argocd.argoproj.io/hook: PreSync\n",
                      "markdown": "`    caBundle: \"\"\n    ## If enabled, generate a self-signed certificate, then patch the webhook configurations with the generated data.\n    ## On chart upgrades (or if the secret exists) the cert will not be re-generated. You can use this to provide your own\n    ## certs ahead of time if you wish.\n    ##\n    annotations: {}\n    #   argocd.argoproj.io/hook: PreSync\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 1931,
                  "startColumn": 92,
                  "endLine": 1931,
                  "endColumn": 101,
                  "snippet": {
                    "text": "      ##\n      labelValueLengthLimit: 0\n\n      ## How long until a scrape request times out. If not set, the Prometheus default scape timeout is used.\n      ##\n      scrapeTimeout: \"\"\n\n",
                    "rendered": {
                      "text": "      ##\n      labelValueLengthLimit: 0\n\n      ## How long until a scrape request times out. If not set, the Prometheus default scape timeout is used.\n      ##\n      scrapeTimeout: \"\"\n\n",
                      "markdown": "`      ##\n      labelValueLengthLimit: 0\n\n      ## How long until a scrape request times out. If not set, the Prometheus default scape timeout is used.\n      ##\n      scrapeTimeout: \"\"\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 1882,
                  "startColumn": 9,
                  "endLine": 1882,
                  "endColumn": 15,
                  "snippet": {
                    "text": "  selfMonitor:\n    enabled: false\n\n## Deploy node exporter as a daemonset to all nodes\n##\nnodeExporter:\n  enabled: true\n",
                    "rendered": {
                      "text": "  selfMonitor:\n    enabled: false\n\n## Deploy node exporter as a daemonset to all nodes\n##\nnodeExporter:\n  enabled: true\n",
                      "markdown": "`  selfMonitor:\n    enabled: false\n\n## Deploy node exporter as a daemonset to all nodes\n##\nnodeExporter:\n  enabled: true\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 1848,
                  "startColumn": 66,
                  "endLine": 1848,
                  "endColumn": 75,
                  "snippet": {
                    "text": "      ##\n      labelValueLengthLimit: 0\n\n      ## Scrape Timeout. If not set, the Prometheus default scrape timeout is used.\n      ##\n      scrapeTimeout: \"\"\n\n",
                    "rendered": {
                      "text": "      ##\n      labelValueLengthLimit: 0\n\n      ## Scrape Timeout. If not set, the Prometheus default scrape timeout is used.\n      ##\n      scrapeTimeout: \"\"\n\n",
                      "markdown": "`      ##\n      labelValueLengthLimit: 0\n\n      ## Scrape Timeout. If not set, the Prometheus default scrape timeout is used.\n      ##\n      scrapeTimeout: \"\"\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 1176,
                  "startColumn": 55,
                  "endLine": 1177,
                  "snippet": {
                    "text": "    ##\n    probes: true\n\n    ## Enable scraping /metrics/resource from kubelet's service\n    ## This is disabled by default because container metrics are already exposed by cAdvisor\n    ##\n    resource: false\n    # From kubernetes 1.18, /metrics/resource/v1alpha1 renamed to /metrics/resource\n",
                    "rendered": {
                      "text": "    ##\n    probes: true\n\n    ## Enable scraping /metrics/resource from kubelet's service\n    ## This is disabled by default because container metrics are already exposed by cAdvisor\n    ##\n    resource: false\n    # From kubernetes 1.18, /metrics/resource/v1alpha1 renamed to /metrics/resource\n",
                      "markdown": "`    ##\n    probes: true\n\n    ## Enable scraping /metrics/resource from kubelet's service\n    ## This is disabled by default because container metrics are already exposed by cAdvisor\n    ##\n    resource: false\n    # From kubernetes 1.18, /metrics/resource/v1alpha1 renamed to /metrics/resource\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 1172,
                  "startColumn": 53,
                  "endLine": 1173,
                  "snippet": {
                    "text": "    ##\n    cAdvisor: true\n\n    ## Enable scraping /metrics/probes from kubelet's service\n    ##\n    probes: true\n\n    ## Enable scraping /metrics/resource from kubelet's service\n",
                    "rendered": {
                      "text": "    ##\n    cAdvisor: true\n\n    ## Enable scraping /metrics/probes from kubelet's service\n    ##\n    probes: true\n\n    ## Enable scraping /metrics/resource from kubelet's service\n",
                      "markdown": "`    ##\n    cAdvisor: true\n\n    ## Enable scraping /metrics/probes from kubelet's service\n    ##\n    probes: true\n\n    ## Enable scraping /metrics/resource from kubelet's service\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 1168,
                  "startColumn": 55,
                  "endLine": 1169,
                  "snippet": {
                    "text": "    ##\n    https: true\n\n    ## Enable scraping /metrics/cadvisor from kubelet's service\n    ##\n    cAdvisor: true\n\n    ## Enable scraping /metrics/probes from kubelet's service\n",
                    "rendered": {
                      "text": "    ##\n    https: true\n\n    ## Enable scraping /metrics/cadvisor from kubelet's service\n    ##\n    cAdvisor: true\n\n    ## Enable scraping /metrics/probes from kubelet's service\n",
                      "markdown": "`    ##\n    https: true\n\n    ## Enable scraping /metrics/cadvisor from kubelet's service\n    ##\n    cAdvisor: true\n\n    ## Enable scraping /metrics/probes from kubelet's service\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 967,
                  "startColumn": 27,
                  "endLine": 967,
                  "endColumn": 36,
                  "snippet": {
                    "text": "      httpMethod: POST\n\n      ## Create datasource for each Pod of Prometheus StatefulSet;\n      ## this uses headless service `prometheus-operated` which is\n      ## created by Prometheus Operator\n      ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/0fee93e12dc7c2ea1218f19ae25ec6b893460590/pkg/prometheus/statefulset.go#L255-L286\n      createPrometheusReplicasDatasources: false\n",
                    "rendered": {
                      "text": "      httpMethod: POST\n\n      ## Create datasource for each Pod of Prometheus StatefulSet;\n      ## this uses headless service `prometheus-operated` which is\n      ## created by Prometheus Operator\n      ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/0fee93e12dc7c2ea1218f19ae25ec6b893460590/pkg/prometheus/statefulset.go#L255-L286\n      createPrometheusReplicasDatasources: false\n",
                      "markdown": "`      httpMethod: POST\n\n      ## Create datasource for each Pod of Prometheus StatefulSet;\n      ## this uses headless service `prometheus-operated` which is\n      ## created by Prometheus Operator\n      ## ref: https://github.com/prometheus-operator/prometheus-operator/blob/0fee93e12dc7c2ea1218f19ae25ec6b893460590/pkg/prometheus/statefulset.go#L255-L286\n      createPrometheusReplicasDatasources: false\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 953,
                  "startColumn": 27,
                  "endLine": 953,
                  "endColumn": 36,
                  "snippet": {
                    "text": "      ##\n      # url: http://prometheus-stack-prometheus:9090/\n\n      ## Prometheus request timeout in seconds\n      # timeout: 30\n\n      # If not defined, will use prometheus.prometheusSpec.scrapeInterval or its default\n",
                    "rendered": {
                      "text": "      ##\n      # url: http://prometheus-stack-prometheus:9090/\n\n      ## Prometheus request timeout in seconds\n      # timeout: 30\n\n      # If not defined, will use prometheus.prometheusSpec.scrapeInterval or its default\n",
                      "markdown": "`      ##\n      # url: http://prometheus-stack-prometheus:9090/\n\n      ## Prometheus request timeout in seconds\n      # timeout: 30\n\n      # If not defined, will use prometheus.prometheusSpec.scrapeInterval or its default\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 834,
                  "startColumn": 45,
                  "endLine": 834,
                  "endColumn": 51,
                  "snippet": {
                    "text": "    clusterPeerTimeout: \"\"\n\n    ## clusterPushpullInterval determines interval between pushpull attempts.\n    ## Needs to be specified as GoDuration, a time duration that can be parsed by Go’s time.ParseDuration() (e.g. 45ms, 30s, 1m, 1h20m15s)\n    clusterPushpullInterval: \"\"\n\n    ## ForceEnableClusterMode ensures Alertmanager does not deactivate the cluster mode when running with a single replica.\n",
                    "rendered": {
                      "text": "    clusterPeerTimeout: \"\"\n\n    ## clusterPushpullInterval determines interval between pushpull attempts.\n    ## Needs to be specified as GoDuration, a time duration that can be parsed by Go’s time.ParseDuration() (e.g. 45ms, 30s, 1m, 1h20m15s)\n    clusterPushpullInterval: \"\"\n\n    ## ForceEnableClusterMode ensures Alertmanager does not deactivate the cluster mode when running with a single replica.\n",
                      "markdown": "`    clusterPeerTimeout: \"\"\n\n    ## clusterPushpullInterval determines interval between pushpull attempts.\n    ## Needs to be specified as GoDuration, a time duration that can be parsed by Go’s time.ParseDuration() (e.g. 45ms, 30s, 1m, 1h20m15s)\n    clusterPushpullInterval: \"\"\n\n    ## ForceEnableClusterMode ensures Alertmanager does not deactivate the cluster mode when running with a single replica.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 830,
                  "startColumn": 45,
                  "endLine": 830,
                  "endColumn": 51,
                  "snippet": {
                    "text": "    clusterGossipInterval: \"\"\n\n    ## clusterPeerTimeout determines timeout for cluster peering.\n    ## Needs to be specified as GoDuration, a time duration that can be parsed by Go’s time.ParseDuration() (e.g. 45ms, 30s, 1m, 1h20m15s)\n    clusterPeerTimeout: \"\"\n\n    ## clusterPushpullInterval determines interval between pushpull attempts.\n",
                    "rendered": {
                      "text": "    clusterGossipInterval: \"\"\n\n    ## clusterPeerTimeout determines timeout for cluster peering.\n    ## Needs to be specified as GoDuration, a time duration that can be parsed by Go’s time.ParseDuration() (e.g. 45ms, 30s, 1m, 1h20m15s)\n    clusterPeerTimeout: \"\"\n\n    ## clusterPushpullInterval determines interval between pushpull attempts.\n",
                      "markdown": "`    clusterGossipInterval: \"\"\n\n    ## clusterPeerTimeout determines timeout for cluster peering.\n    ## Needs to be specified as GoDuration, a time duration that can be parsed by Go’s time.ParseDuration() (e.g. 45ms, 30s, 1m, 1h20m15s)\n    clusterPeerTimeout: \"\"\n\n    ## clusterPushpullInterval determines interval between pushpull attempts.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 829,
                  "startColumn": 36,
                  "endLine": 829,
                  "endColumn": 45,
                  "snippet": {
                    "text": "    ## Needs to be specified as GoDuration, a time duration that can be parsed by Go’s time.ParseDuration() (e.g. 45ms, 30s, 1m, 1h20m15s)\n    clusterGossipInterval: \"\"\n\n    ## clusterPeerTimeout determines timeout for cluster peering.\n    ## Needs to be specified as GoDuration, a time duration that can be parsed by Go’s time.ParseDuration() (e.g. 45ms, 30s, 1m, 1h20m15s)\n    clusterPeerTimeout: \"\"\n\n",
                    "rendered": {
                      "text": "    ## Needs to be specified as GoDuration, a time duration that can be parsed by Go’s time.ParseDuration() (e.g. 45ms, 30s, 1m, 1h20m15s)\n    clusterGossipInterval: \"\"\n\n    ## clusterPeerTimeout determines timeout for cluster peering.\n    ## Needs to be specified as GoDuration, a time duration that can be parsed by Go’s time.ParseDuration() (e.g. 45ms, 30s, 1m, 1h20m15s)\n    clusterPeerTimeout: \"\"\n\n",
                      "markdown": "`    ## Needs to be specified as GoDuration, a time duration that can be parsed by Go’s time.ParseDuration() (e.g. 45ms, 30s, 1m, 1h20m15s)\n    clusterGossipInterval: \"\"\n\n    ## clusterPeerTimeout determines timeout for cluster peering.\n    ## Needs to be specified as GoDuration, a time duration that can be parsed by Go’s time.ParseDuration() (e.g. 45ms, 30s, 1m, 1h20m15s)\n    clusterPeerTimeout: \"\"\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 826,
                  "startColumn": 45,
                  "endLine": 826,
                  "endColumn": 51,
                  "snippet": {
                    "text": "    clusterAdvertiseAddress: false\n\n    ## clusterGossipInterval determines interval between gossip attempts.\n    ## Needs to be specified as GoDuration, a time duration that can be parsed by Go’s time.ParseDuration() (e.g. 45ms, 30s, 1m, 1h20m15s)\n    clusterGossipInterval: \"\"\n\n    ## clusterPeerTimeout determines timeout for cluster peering.\n",
                    "rendered": {
                      "text": "    clusterAdvertiseAddress: false\n\n    ## clusterGossipInterval determines interval between gossip attempts.\n    ## Needs to be specified as GoDuration, a time duration that can be parsed by Go’s time.ParseDuration() (e.g. 45ms, 30s, 1m, 1h20m15s)\n    clusterGossipInterval: \"\"\n\n    ## clusterPeerTimeout determines timeout for cluster peering.\n",
                      "markdown": "`    clusterAdvertiseAddress: false\n\n    ## clusterGossipInterval determines interval between gossip attempts.\n    ## Needs to be specified as GoDuration, a time duration that can be parsed by Go’s time.ParseDuration() (e.g. 45ms, 30s, 1m, 1h20m15s)\n    clusterGossipInterval: \"\"\n\n    ## clusterPeerTimeout determines timeout for cluster peering.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 721,
                  "startColumn": 119,
                  "endLine": 721,
                  "endColumn": 125,
                  "snippet": {
                    "text": "    #   memory: 400Mi\n\n    ## Pod anti-affinity can prevent the scheduler from placing Prometheus replicas on the same node.\n    ## The default value \"soft\" means that the scheduler should *prefer* to not schedule two replica pods onto the same node but no guarantee is provided.\n    ## The value \"hard\" means that the scheduler is *required* to not schedule two replica pods onto the same node.\n    ## The value \"\" will disable pod anti-affinity so that no anti-affinity rules will be configured.\n    ##\n",
                    "rendered": {
                      "text": "    #   memory: 400Mi\n\n    ## Pod anti-affinity can prevent the scheduler from placing Prometheus replicas on the same node.\n    ## The default value \"soft\" means that the scheduler should *prefer* to not schedule two replica pods onto the same node but no guarantee is provided.\n    ## The value \"hard\" means that the scheduler is *required* to not schedule two replica pods onto the same node.\n    ## The value \"\" will disable pod anti-affinity so that no anti-affinity rules will be configured.\n    ##\n",
                      "markdown": "`    #   memory: 400Mi\n\n    ## Pod anti-affinity can prevent the scheduler from placing Prometheus replicas on the same node.\n    ## The default value \"soft\" means that the scheduler should *prefer* to not schedule two replica pods onto the same node but no guarantee is provided.\n    ## The value \"hard\" means that the scheduler is *required* to not schedule two replica pods onto the same node.\n    ## The value \"\" will disable pod anti-affinity so that no anti-affinity rules will be configured.\n    ##\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 669,
                  "startColumn": 6,
                  "endLine": 669,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    ## running cluster equal to the expected size.\n    replicas: 1\n\n    ## Time duration Alertmanager shall retain data for. Default is '120h', and must match the regular expression\n    ## [0-9]+(ms|s|m|h) (milliseconds seconds minutes hours).\n    ##\n    retention: 120h\n",
                    "rendered": {
                      "text": "    ## running cluster equal to the expected size.\n    replicas: 1\n\n    ## Time duration Alertmanager shall retain data for. Default is '120h', and must match the regular expression\n    ## [0-9]+(ms|s|m|h) (milliseconds seconds minutes hours).\n    ##\n    retention: 120h\n",
                      "markdown": "`    ## running cluster equal to the expected size.\n    replicas: 1\n\n    ## Time duration Alertmanager shall retain data for. Default is '120h', and must match the regular expression\n    ## [0-9]+(ms|s|m|h) (milliseconds seconds minutes hours).\n    ##\n    retention: 120h\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 643,
                  "startColumn": 38,
                  "endLine": 643,
                  "endColumn": 43,
                  "snippet": {
                    "text": "    #   matchLabels:\n    #     alertmanagerconfig: enabled\n\n    ## AlermanagerConfig to be used as top level configuration\n    ##\n    alertmanagerConfiguration: {}\n    ## Example with select a global alertmanagerconfig\n",
                    "rendered": {
                      "text": "    #   matchLabels:\n    #     alertmanagerconfig: enabled\n\n    ## AlermanagerConfig to be used as top level configuration\n    ##\n    alertmanagerConfiguration: {}\n    ## Example with select a global alertmanagerconfig\n",
                      "markdown": "`    #   matchLabels:\n    #     alertmanagerconfig: enabled\n\n    ## AlermanagerConfig to be used as top level configuration\n    ##\n    alertmanagerConfiguration: {}\n    ## Example with select a global alertmanagerconfig\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 494,
                  "startColumn": 6,
                  "endLine": 494,
                  "endColumn": 15,
                  "snippet": {
                    "text": "    ##\n    externalTrafficPolicy: Cluster\n\n    ## Service type\n    ##\n    type: ClusterIP\n\n",
                    "rendered": {
                      "text": "    ##\n    externalTrafficPolicy: Cluster\n\n    ## Service type\n    ##\n    type: ClusterIP\n\n",
                      "markdown": "`    ##\n    externalTrafficPolicy: Cluster\n\n    ## Service type\n    ##\n    type: ClusterIP\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 490,
                  "startColumn": 22,
                  "endLine": 490,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    ## Only used if servicePerReplica.type is \"LoadBalancer\"\n    loadBalancerSourceRanges: []\n\n    ## Denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints\n    ##\n    externalTrafficPolicy: Cluster\n\n",
                    "rendered": {
                      "text": "    ## Only used if servicePerReplica.type is \"LoadBalancer\"\n    loadBalancerSourceRanges: []\n\n    ## Denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints\n    ##\n    externalTrafficPolicy: Cluster\n\n",
                      "markdown": "`    ## Only used if servicePerReplica.type is \"LoadBalancer\"\n    loadBalancerSourceRanges: []\n\n    ## Denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints\n    ##\n    externalTrafficPolicy: Cluster\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 486,
                  "startColumn": 26,
                  "endLine": 486,
                  "endColumn": 30,
                  "snippet": {
                    "text": "    ##\n    nodePort: 30904\n\n    ## Loadbalancer source IP ranges\n    ## Only used if servicePerReplica.type is \"LoadBalancer\"\n    loadBalancerSourceRanges: []\n\n",
                    "rendered": {
                      "text": "    ##\n    nodePort: 30904\n\n    ## Loadbalancer source IP ranges\n    ## Only used if servicePerReplica.type is \"LoadBalancer\"\n    loadBalancerSourceRanges: []\n\n",
                      "markdown": "`    ##\n    nodePort: 30904\n\n    ## Loadbalancer source IP ranges\n    ## Only used if servicePerReplica.type is \"LoadBalancer\"\n    loadBalancerSourceRanges: []\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 481,
                  "startColumn": 29,
                  "endLine": 482,
                  "snippet": {
                    "text": "    ## To be used with a proxy extraContainer port\n    targetPort: 9093\n\n    ## Port to expose on each node\n    ## Only used if servicePerReplica.type is 'NodePort'\n    ##\n    nodePort: 30904\n\n",
                    "rendered": {
                      "text": "    ## To be used with a proxy extraContainer port\n    targetPort: 9093\n\n    ## Port to expose on each node\n    ## Only used if servicePerReplica.type is 'NodePort'\n    ##\n    nodePort: 30904\n\n",
                      "markdown": "`    ## To be used with a proxy extraContainer port\n    targetPort: 9093\n\n    ## Port to expose on each node\n    ## Only used if servicePerReplica.type is 'NodePort'\n    ##\n    nodePort: 30904\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 474,
                  "startColumn": 28,
                  "endLine": 474,
                  "endColumn": 37,
                  "snippet": {
                    "text": "    enabled: false\n    annotations: {}\n\n    ## Port for Alertmanager Service per replica to listen on\n    ##\n    port: 9093\n\n",
                    "rendered": {
                      "text": "    enabled: false\n    annotations: {}\n\n    ## Port for Alertmanager Service per replica to listen on\n    ##\n    port: 9093\n\n",
                      "markdown": "`    enabled: false\n    annotations: {}\n\n    ## Port for Alertmanager Service per replica to listen on\n    ##\n    port: 9093\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 468,
                  "startColumn": 42,
                  "endLine": 468,
                  "endColumn": 51,
                  "snippet": {
                    "text": "    ##\n    type: ClusterIP\n\n  ## Configuration for creating a separate Service for each statefulset Alertmanager replica\n  ##\n  servicePerReplica:\n    enabled: false\n",
                    "rendered": {
                      "text": "    ##\n    type: ClusterIP\n\n  ## Configuration for creating a separate Service for each statefulset Alertmanager replica\n  ##\n  servicePerReplica:\n    enabled: false\n",
                      "markdown": "`    ##\n    type: ClusterIP\n\n  ## Configuration for creating a separate Service for each statefulset Alertmanager replica\n  ##\n  servicePerReplica:\n    enabled: false\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 464,
                  "startColumn": 6,
                  "endLine": 464,
                  "endColumn": 15,
                  "snippet": {
                    "text": "    ##\n    sessionAffinity: \"\"\n\n    ## Service type\n    ##\n    type: ClusterIP\n\n",
                    "rendered": {
                      "text": "    ##\n    sessionAffinity: \"\"\n\n    ## Service type\n    ##\n    type: ClusterIP\n\n",
                      "markdown": "`    ##\n    sessionAffinity: \"\"\n\n    ## Service type\n    ##\n    type: ClusterIP\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 459,
                  "startColumn": 105,
                  "endLine": 460,
                  "snippet": {
                    "text": "    ##\n    externalTrafficPolicy: Cluster\n\n    ## If you want to make sure that connections from a particular client are passed to the same Pod each time\n    ## Accepts 'ClientIP' or ''\n    ##\n    sessionAffinity: \"\"\n\n",
                    "rendered": {
                      "text": "    ##\n    externalTrafficPolicy: Cluster\n\n    ## If you want to make sure that connections from a particular client are passed to the same Pod each time\n    ## Accepts 'ClientIP' or ''\n    ##\n    sessionAffinity: \"\"\n\n",
                      "markdown": "`    ##\n    externalTrafficPolicy: Cluster\n\n    ## If you want to make sure that connections from a particular client are passed to the same Pod each time\n    ## Accepts 'ClientIP' or ''\n    ##\n    sessionAffinity: \"\"\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 455,
                  "startColumn": 22,
                  "endLine": 455,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    loadBalancerIP: \"\"\n    loadBalancerSourceRanges: []\n\n    ## Denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints\n    ##\n    externalTrafficPolicy: Cluster\n\n",
                    "rendered": {
                      "text": "    loadBalancerIP: \"\"\n    loadBalancerSourceRanges: []\n\n    ## Denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints\n    ##\n    externalTrafficPolicy: Cluster\n\n",
                      "markdown": "`    loadBalancerIP: \"\"\n    loadBalancerSourceRanges: []\n\n    ## Denotes if this Service desires to route external traffic to node-local or cluster-wide endpoints\n    ##\n    externalTrafficPolicy: Cluster\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 444,
                  "startColumn": 48,
                  "endLine": 445,
                  "snippet": {
                    "text": "    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\n    ##\n\n    ## Additional ports to open for Alertmanager service\n    additionalPorts: []\n    # additionalPorts:\n    # - name: authenticated\n    #   port: 8081\n",
                    "rendered": {
                      "text": "    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\n    ##\n\n    ## Additional ports to open for Alertmanager service\n    additionalPorts: []\n    # additionalPorts:\n    # - name: authenticated\n    #   port: 8081\n",
                      "markdown": "`    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\n    ##\n\n    ## Additional ports to open for Alertmanager service\n    additionalPorts: []\n    # additionalPorts:\n    # - name: authenticated\n    #   port: 8081\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 440,
                  "startColumn": 58,
                  "endLine": 440,
                  "endColumn": 67,
                  "snippet": {
                    "text": "    ## Only used if service.type is 'NodePort'\n    ##\n    nodePort: 30903\n    ## List of IP addresses at which the Prometheus server service is available\n    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\n    ##\n\n",
                    "rendered": {
                      "text": "    ## Only used if service.type is 'NodePort'\n    ##\n    nodePort: 30903\n    ## List of IP addresses at which the Prometheus server service is available\n    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\n    ##\n\n",
                      "markdown": "`    ## Only used if service.type is 'NodePort'\n    ##\n    nodePort: 30903\n    ## List of IP addresses at which the Prometheus server service is available\n    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\n    ##\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 440,
                  "startColumn": 14,
                  "endLine": 440,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    ## Only used if service.type is 'NodePort'\n    ##\n    nodePort: 30903\n    ## List of IP addresses at which the Prometheus server service is available\n    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\n    ##\n\n",
                    "rendered": {
                      "text": "    ## Only used if service.type is 'NodePort'\n    ##\n    nodePort: 30903\n    ## List of IP addresses at which the Prometheus server service is available\n    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\n    ##\n\n",
                      "markdown": "`    ## Only used if service.type is 'NodePort'\n    ##\n    nodePort: 30903\n    ## List of IP addresses at which the Prometheus server service is available\n    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\n    ##\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 436,
                  "startColumn": 29,
                  "endLine": 437,
                  "snippet": {
                    "text": "    ## To be used with a proxy extraContainer port\n    ##\n    targetPort: 9093\n    ## Port to expose on each node\n    ## Only used if service.type is 'NodePort'\n    ##\n    nodePort: 30903\n    ## List of IP addresses at which the Prometheus server service is available\n",
                    "rendered": {
                      "text": "    ## To be used with a proxy extraContainer port\n    ##\n    targetPort: 9093\n    ## Port to expose on each node\n    ## Only used if service.type is 'NodePort'\n    ##\n    nodePort: 30903\n    ## List of IP addresses at which the Prometheus server service is available\n",
                      "markdown": "`    ## To be used with a proxy extraContainer port\n    ##\n    targetPort: 9093\n    ## Port to expose on each node\n    ## Only used if service.type is 'NodePort'\n    ##\n    nodePort: 30903\n    ## List of IP addresses at which the Prometheus server service is available\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 28,
                  "endLine": 430,
                  "endColumn": 37,
                  "snippet": {
                    "text": "    labels: {}\n    clusterIP: \"\"\n\n    ## Port for Alertmanager Service to listen on\n    ##\n    port: 9093\n    ## To be used with a proxy extraContainer port\n",
                    "rendered": {
                      "text": "    labels: {}\n    clusterIP: \"\"\n\n    ## Port for Alertmanager Service to listen on\n    ##\n    port: 9093\n    ## To be used with a proxy extraContainer port\n",
                      "markdown": "`    labels: {}\n    clusterIP: \"\"\n\n    ## Port for Alertmanager Service to listen on\n    ##\n    port: 9093\n    ## To be used with a proxy extraContainer port\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 423,
                  "startColumn": 35,
                  "endLine": 424,
                  "snippet": {
                    "text": "      ##\n      prefix: \"alertmanager\"\n\n  ## Configuration for Alertmanager service\n  ##\n  service:\n    annotations: {}\n    labels: {}\n",
                    "rendered": {
                      "text": "      ##\n      prefix: \"alertmanager\"\n\n  ## Configuration for Alertmanager service\n  ##\n  service:\n    annotations: {}\n    labels: {}\n",
                      "markdown": "`      ##\n      prefix: \"alertmanager\"\n\n  ## Configuration for Alertmanager service\n  ##\n  service:\n    annotations: {}\n    labels: {}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 379,
                  "startColumn": 85,
                  "endLine": 380,
                  "snippet": {
                    "text": "  secret:\n    annotations: {}\n\n  ## Configuration for creating an Ingress that will map to each Alertmanager replica service\n  ## alertmanager.servicePerReplica must be enabled\n  ##\n  ingressPerReplica:\n    enabled: false\n",
                    "rendered": {
                      "text": "  secret:\n    annotations: {}\n\n  ## Configuration for creating an Ingress that will map to each Alertmanager replica service\n  ## alertmanager.servicePerReplica must be enabled\n  ##\n  ingressPerReplica:\n    enabled: false\n",
                      "markdown": "`  secret:\n    annotations: {}\n\n  ## Configuration for creating an Ingress that will map to each Alertmanager replica service\n  ## alertmanager.servicePerReplica must be enabled\n  ##\n  ingressPerReplica:\n    enabled: false\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 348,
                  "startColumn": 38,
                  "endLine": 348,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\n    ## Override ingress to a different defined port on the service\n    # servicePort: 8081\n    ## Override ingress to a different service then the default, this is useful if you need to\n    ## point to a specific instance of the alertmanager (eg kube-prometheus-stack-alertmanager-0)\n    # serviceName: kube-prometheus-stack-alertmanager-0\n\n",
                    "rendered": {
                      "text": "\n    ## Override ingress to a different defined port on the service\n    # servicePort: 8081\n    ## Override ingress to a different service then the default, this is useful if you need to\n    ## point to a specific instance of the alertmanager (eg kube-prometheus-stack-alertmanager-0)\n    # serviceName: kube-prometheus-stack-alertmanager-0\n\n",
                      "markdown": "`\n    ## Override ingress to a different defined port on the service\n    # servicePort: 8081\n    ## Override ingress to a different service then the default, this is useful if you need to\n    ## point to a specific instance of the alertmanager (eg kube-prometheus-stack-alertmanager-0)\n    # serviceName: kube-prometheus-stack-alertmanager-0\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 346,
                  "startColumn": 58,
                  "endLine": 347,
                  "snippet": {
                    "text": "\n    labels: {}\n\n    ## Override ingress to a different defined port on the service\n    # servicePort: 8081\n    ## Override ingress to a different service then the default, this is useful if you need to\n    ## point to a specific instance of the alertmanager (eg kube-prometheus-stack-alertmanager-0)\n    # serviceName: kube-prometheus-stack-alertmanager-0\n",
                    "rendered": {
                      "text": "\n    labels: {}\n\n    ## Override ingress to a different defined port on the service\n    # servicePort: 8081\n    ## Override ingress to a different service then the default, this is useful if you need to\n    ## point to a specific instance of the alertmanager (eg kube-prometheus-stack-alertmanager-0)\n    # serviceName: kube-prometheus-stack-alertmanager-0\n",
                      "markdown": "`\n    labels: {}\n\n    ## Override ingress to a different defined port on the service\n    # servicePort: 8081\n    ## Override ingress to a different service then the default, this is useful if you need to\n    ## point to a specific instance of the alertmanager (eg kube-prometheus-stack-alertmanager-0)\n    # serviceName: kube-prometheus-stack-alertmanager-0\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 228,
                  "startColumn": 4,
                  "endLine": 228,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  ##\n  apiVersion: v2\n\n  ## Service account for Alertmanager to use.\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\n  ##\n  serviceAccount:\n",
                    "rendered": {
                      "text": "  ##\n  apiVersion: v2\n\n  ## Service account for Alertmanager to use.\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\n  ##\n  serviceAccount:\n",
                      "markdown": "`  ##\n  apiVersion: v2\n\n  ## Service account for Alertmanager to use.\n  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/\n  ##\n  serviceAccount:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/yaml/testdata/values.yaml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 49,
                  "endLine": 15,
                  "endColumn": 57,
                  "snippet": {
                    "text": "##\nnamespaceOverride: \"\"\n\n## Provide a k8s version to auto dashboard import script example: kubeTargetVersionOverride: 1.16.6\n##\nkubeTargetVersionOverride: \"\"\n\n",
                    "rendered": {
                      "text": "##\nnamespaceOverride: \"\"\n\n## Provide a k8s version to auto dashboard import script example: kubeTargetVersionOverride: 1.16.6\n##\nkubeTargetVersionOverride: \"\"\n\n",
                      "markdown": "`##\nnamespaceOverride: \"\"\n\n## Provide a k8s version to auto dashboard import script example: kubeTargetVersionOverride: 1.16.6\n##\nkubeTargetVersionOverride: \"\"\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/cmp/simple_unstructured_test.go"
                },
                "region": {
                  "startLine": 261,
                  "startColumn": 7,
                  "endLine": 262,
                  "endColumn": 3,
                  "snippet": {
                    "text": "\t}{\n\t\t{name: \"trims space\", diffs: []string{\" at start\", \"in\\nbetween\", \"at end\\n\"}, want: `at start\nin\nbetween\nat end`},\n\t\t{name: \"joins with newline\", diffs: []string{\"a\", \"b\", \"c\"}, want: `a\nb\nc`},\n",
                    "rendered": {
                      "text": "\t}{\n\t\t{name: \"trims space\", diffs: []string{\" at start\", \"in\\nbetween\", \"at end\\n\"}, want: `at start\nin\nbetween\nat end`},\n\t\t{name: \"joins with newline\", diffs: []string{\"a\", \"b\", \"c\"}, want: `a\nb\nc`},\n",
                      "markdown": "`\t}{\n\t\t{name: \"trims space\", diffs: []string{\" at start\", \"in\\nbetween\", \"at end\\n\"}, want: `at start\nin\nbetween\nat end`},\n\t\t{name: \"joins with newline\", diffs: []string{\"a\", \"b\", \"c\"}, want: `a\nb\nc`},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/cmp/simple_unstructured_test.go"
                },
                "region": {
                  "startLine": 259,
                  "startColumn": 41,
                  "endLine": 259,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\t\tdiffs []string\n\t\twant  string\n\t}{\n\t\t{name: \"trims space\", diffs: []string{\" at start\", \"in\\nbetween\", \"at end\\n\"}, want: `at start\nin\nbetween\nat end`},\n",
                    "rendered": {
                      "text": "\t\tdiffs []string\n\t\twant  string\n\t}{\n\t\t{name: \"trims space\", diffs: []string{\" at start\", \"in\\nbetween\", \"at end\\n\"}, want: `at start\nin\nbetween\nat end`},\n",
                      "markdown": "`\t\tdiffs []string\n\t\twant  string\n\t}{\n\t\t{name: \"trims space\", diffs: []string{\" at start\", \"in\\nbetween\", \"at end\\n\"}, want: `at start\nin\nbetween\nat end`},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/uninstall_remediation_test.go"
                },
                "region": {
                  "startLine": 334,
                  "startColumn": 50,
                  "endLine": 334,
                  "endColumn": 70,
                  "snippet": {
                    "text": "\t\t\t\tobj.Status = tt.status(releases)\n\t\t\t}\n\n\t\t\tgetter, err := RESTClientGetterFromManager(testEnv.Manager, obj.GetReleaseNamespace())\n\t\t\tg.Expect(err).ToNot(HaveOccurred())\n\n\t\t\tcfg, err := action.NewConfigFactory(getter,\n",
                    "rendered": {
                      "text": "\t\t\t\tobj.Status = tt.status(releases)\n\t\t\t}\n\n\t\t\tgetter, err := RESTClientGetterFromManager(testEnv.Manager, obj.GetReleaseNamespace())\n\t\t\tg.Expect(err).ToNot(HaveOccurred())\n\n\t\t\tcfg, err := action.NewConfigFactory(getter,\n",
                      "markdown": "`\t\t\t\tobj.Status = tt.status(releases)\n\t\t\t}\n\n\t\t\tgetter, err := RESTClientGetterFromManager(testEnv.Manager, obj.GetReleaseNamespace())\n\t\t\tg.Expect(err).ToNot(HaveOccurred())\n\n\t\t\tcfg, err := action.NewConfigFactory(getter,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/uninstall_remediation_test.go"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 37,
                  "endLine": 49,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\nfunc TestUninstallRemediation_Reconcile(t *testing.T) {\n\tvar (\n\t\tmockUpdateErr = fmt.Errorf(\"storage update error\")\n\t\tmockDeleteErr = fmt.Errorf(\"storage delete error\")\n\t)\n\n",
                    "rendered": {
                      "text": "\nfunc TestUninstallRemediation_Reconcile(t *testing.T) {\n\tvar (\n\t\tmockUpdateErr = fmt.Errorf(\"storage update error\")\n\t\tmockDeleteErr = fmt.Errorf(\"storage delete error\")\n\t)\n\n",
                      "markdown": "`\nfunc TestUninstallRemediation_Reconcile(t *testing.T) {\n\tvar (\n\t\tmockUpdateErr = fmt.Errorf(\"storage update error\")\n\t\tmockDeleteErr = fmt.Errorf(\"storage delete error\")\n\t)\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/test_test.go"
                },
                "region": {
                  "startLine": 304,
                  "startColumn": 50,
                  "endLine": 304,
                  "endColumn": 70,
                  "snippet": {
                    "text": "\t\t\t\tobj.Status = tt.status(releases)\n\t\t\t}\n\n\t\t\tgetter, err := RESTClientGetterFromManager(testEnv.Manager, obj.GetReleaseNamespace())\n\t\t\tg.Expect(err).ToNot(HaveOccurred())\n\n\t\t\tcfg, err := action.NewConfigFactory(getter,\n",
                    "rendered": {
                      "text": "\t\t\t\tobj.Status = tt.status(releases)\n\t\t\t}\n\n\t\t\tgetter, err := RESTClientGetterFromManager(testEnv.Manager, obj.GetReleaseNamespace())\n\t\t\tg.Expect(err).ToNot(HaveOccurred())\n\n\t\t\tcfg, err := action.NewConfigFactory(getter,\n",
                      "markdown": "`\t\t\t\tobj.Status = tt.status(releases)\n\t\t\t}\n\n\t\t\tgetter, err := RESTClientGetterFromManager(testEnv.Manager, obj.GetReleaseNamespace())\n\t\t\tg.Expect(err).ToNot(HaveOccurred())\n\n\t\t\tcfg, err := action.NewConfigFactory(getter,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/test_test.go"
                },
                "region": {
                  "startLine": 402,
                  "startColumn": 1,
                  "endLine": 402,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n\t\tobs := release.ObserveRelease(rls)\n\t\tobs.OCIDigest = \"sha256:fcdc2b0de1581a3633ada4afee3f918f6eaa5b5ab38c3fef03d5b48d3f85d9f6\"\n\t\texpect := release.ObservedToSnapshot(obs)\n\t\texpect.SetTestHooks(release.TestHooksFromRelease(rls))\n\n\t\tobserveTest(obj)(rls)\n",
                    "rendered": {
                      "text": "\n\t\tobs := release.ObserveRelease(rls)\n\t\tobs.OCIDigest = \"sha256:fcdc2b0de1581a3633ada4afee3f918f6eaa5b5ab38c3fef03d5b48d3f85d9f6\"\n\t\texpect := release.ObservedToSnapshot(obs)\n\t\texpect.SetTestHooks(release.TestHooksFromRelease(rls))\n\n\t\tobserveTest(obj)(rls)\n",
                      "markdown": "`\n\t\tobs := release.ObserveRelease(rls)\n\t\tobs.OCIDigest = \"sha256:fcdc2b0de1581a3633ada4afee3f918f6eaa5b5ab38c3fef03d5b48d3f85d9f6\"\n\t\texpect := release.ObservedToSnapshot(obs)\n\t\texpect.SetTestHooks(release.TestHooksFromRelease(rls))\n\n\t\tobserveTest(obj)(rls)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/test_test.go"
                },
                "region": {
                  "startLine": 370,
                  "startColumn": 1,
                  "endLine": 370,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\t\tVersion:   1,\n\t\t}, testutil.ReleaseWithHooks(testHookFixtures))\n\n\t\texpect := release.ObservedToSnapshot(release.ObserveRelease(rls))\n\t\texpect.SetTestHooks(release.TestHooksFromRelease(rls))\n\n\t\tobserveTest(obj)(rls)\n",
                    "rendered": {
                      "text": "\t\t\tVersion:   1,\n\t\t}, testutil.ReleaseWithHooks(testHookFixtures))\n\n\t\texpect := release.ObservedToSnapshot(release.ObserveRelease(rls))\n\t\texpect.SetTestHooks(release.TestHooksFromRelease(rls))\n\n\t\tobserveTest(obj)(rls)\n",
                      "markdown": "`\t\t\tVersion:   1,\n\t\t}, testutil.ReleaseWithHooks(testHookFixtures))\n\n\t\texpect := release.ObservedToSnapshot(release.ObserveRelease(rls))\n\t\texpect.SetTestHooks(release.TestHooksFromRelease(rls))\n\n\t\tobserveTest(obj)(rls)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/rollback_remediation_test.go"
                },
                "region": {
                  "startLine": 328,
                  "startColumn": 50,
                  "endLine": 328,
                  "endColumn": 70,
                  "snippet": {
                    "text": "\t\t\t\tobj.Status = tt.status(releases)\n\t\t\t}\n\n\t\t\tgetter, err := RESTClientGetterFromManager(testEnv.Manager, obj.GetReleaseNamespace())\n\t\t\tg.Expect(err).ToNot(HaveOccurred())\n\n\t\t\tcfg, err := action.NewConfigFactory(getter,\n",
                    "rendered": {
                      "text": "\t\t\t\tobj.Status = tt.status(releases)\n\t\t\t}\n\n\t\t\tgetter, err := RESTClientGetterFromManager(testEnv.Manager, obj.GetReleaseNamespace())\n\t\t\tg.Expect(err).ToNot(HaveOccurred())\n\n\t\t\tcfg, err := action.NewConfigFactory(getter,\n",
                      "markdown": "`\t\t\t\tobj.Status = tt.status(releases)\n\t\t\t}\n\n\t\t\tgetter, err := RESTClientGetterFromManager(testEnv.Manager, obj.GetReleaseNamespace())\n\t\t\tg.Expect(err).ToNot(HaveOccurred())\n\n\t\t\tcfg, err := action.NewConfigFactory(getter,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/rollback_remediation_test.go"
                },
                "region": {
                  "startLine": 619,
                  "startColumn": 21,
                  "endLine": 619,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\t}))\n\t})\n\n\tt.Run(\"rollback with update to previous deployed with OCI Digest\", func(t *testing.T) {\n\t\tg := NewWithT(t)\n\n\t\tprevious := &v2.Snapshot{\n",
                    "rendered": {
                      "text": "\t\t}))\n\t})\n\n\tt.Run(\"rollback with update to previous deployed with OCI Digest\", func(t *testing.T) {\n\t\tg := NewWithT(t)\n\n\t\tprevious := &v2.Snapshot{\n",
                      "markdown": "`\t\t}))\n\t})\n\n\tt.Run(\"rollback with update to previous deployed with OCI Digest\", func(t *testing.T) {\n\t\tg := NewWithT(t)\n\n\t\tprevious := &v2.Snapshot{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/rollback_remediation_test.go"
                },
                "region": {
                  "startLine": 574,
                  "startColumn": 21,
                  "endLine": 574,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\t}))\n\t})\n\n\tt.Run(\"rollback with update to previous deployed copies existing test hooks\", func(t *testing.T) {\n\t\tg := NewWithT(t)\n\n\t\tprevious := &v2.Snapshot{\n",
                    "rendered": {
                      "text": "\t\t}))\n\t})\n\n\tt.Run(\"rollback with update to previous deployed copies existing test hooks\", func(t *testing.T) {\n\t\tg := NewWithT(t)\n\n\t\tprevious := &v2.Snapshot{\n",
                      "markdown": "`\t\t}))\n\t})\n\n\tt.Run(\"rollback with update to previous deployed copies existing test hooks\", func(t *testing.T) {\n\t\tg := NewWithT(t)\n\n\t\tprevious := &v2.Snapshot{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/rollback_remediation_test.go"
                },
                "region": {
                  "startLine": 535,
                  "startColumn": 21,
                  "endLine": 535,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\t}))\n\t})\n\n\tt.Run(\"rollback with update to previous deployed\", func(t *testing.T) {\n\t\tg := NewWithT(t)\n\n\t\tprevious := &v2.Snapshot{\n",
                    "rendered": {
                      "text": "\t\t}))\n\t})\n\n\tt.Run(\"rollback with update to previous deployed\", func(t *testing.T) {\n\t\tg := NewWithT(t)\n\n\t\tprevious := &v2.Snapshot{\n",
                      "markdown": "`\t\t}))\n\t})\n\n\tt.Run(\"rollback with update to previous deployed\", func(t *testing.T) {\n\t\tg := NewWithT(t)\n\n\t\tprevious := &v2.Snapshot{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/rollback_remediation_test.go"
                },
                "region": {
                  "startLine": 287,
                  "startColumn": 13,
                  "endLine": 287,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\t\t\t*conditions.FalseCondition(meta.ReadyCondition, v2.RollbackFailedReason,\n\t\t\t\t\t\"storage update error\"),\n\t\t\t\t*conditions.FalseCondition(v2.RemediatedCondition, v2.RollbackFailedReason,\n\t\t\t\t\t\"storage update error\"),\n\t\t\t},\n\t\t\texpectHistory: func(releases []*helmrelease.Release) v2.Snapshots {\n\t\t\t\treturn v2.Snapshots{\n",
                    "rendered": {
                      "text": "\t\t\t\t*conditions.FalseCondition(meta.ReadyCondition, v2.RollbackFailedReason,\n\t\t\t\t\t\"storage update error\"),\n\t\t\t\t*conditions.FalseCondition(v2.RemediatedCondition, v2.RollbackFailedReason,\n\t\t\t\t\t\"storage update error\"),\n\t\t\t},\n\t\t\texpectHistory: func(releases []*helmrelease.Release) v2.Snapshots {\n\t\t\t\treturn v2.Snapshots{\n",
                      "markdown": "`\t\t\t\t*conditions.FalseCondition(meta.ReadyCondition, v2.RollbackFailedReason,\n\t\t\t\t\t\"storage update error\"),\n\t\t\t\t*conditions.FalseCondition(v2.RemediatedCondition, v2.RollbackFailedReason,\n\t\t\t\t\t\"storage update error\"),\n\t\t\t},\n\t\t\texpectHistory: func(releases []*helmrelease.Release) v2.Snapshots {\n\t\t\t\treturn v2.Snapshots{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/rollback_remediation_test.go"
                },
                "region": {
                  "startLine": 285,
                  "startColumn": 13,
                  "endLine": 285,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\t\t},\n\t\t\texpectConditions: []metav1.Condition{\n\t\t\t\t*conditions.FalseCondition(meta.ReadyCondition, v2.RollbackFailedReason,\n\t\t\t\t\t\"storage update error\"),\n\t\t\t\t*conditions.FalseCondition(v2.RemediatedCondition, v2.RollbackFailedReason,\n\t\t\t\t\t\"storage update error\"),\n\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t\t},\n\t\t\texpectConditions: []metav1.Condition{\n\t\t\t\t*conditions.FalseCondition(meta.ReadyCondition, v2.RollbackFailedReason,\n\t\t\t\t\t\"storage update error\"),\n\t\t\t\t*conditions.FalseCondition(v2.RemediatedCondition, v2.RollbackFailedReason,\n\t\t\t\t\t\"storage update error\"),\n\t\t\t},\n",
                      "markdown": "`\t\t\t},\n\t\t\texpectConditions: []metav1.Condition{\n\t\t\t\t*conditions.FalseCondition(meta.ReadyCondition, v2.RollbackFailedReason,\n\t\t\t\t\t\"storage update error\"),\n\t\t\t\t*conditions.FalseCondition(v2.RemediatedCondition, v2.RollbackFailedReason,\n\t\t\t\t\t\"storage update error\"),\n\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/rollback_remediation_test.go"
                },
                "region": {
                  "startLine": 250,
                  "startColumn": 31,
                  "endLine": 250,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\t\t\texpectFailures: 1,\n\t\t},\n\t\t{\n\t\t\tname: \"rollback with storage update error\",\n\t\t\tdriver: func(driver helmdriver.Driver) helmdriver.Driver {\n\t\t\t\treturn &storage.Failing{\n\t\t\t\t\tDriver:    driver,\n",
                    "rendered": {
                      "text": "\t\t\texpectFailures: 1,\n\t\t},\n\t\t{\n\t\t\tname: \"rollback with storage update error\",\n\t\t\tdriver: func(driver helmdriver.Driver) helmdriver.Driver {\n\t\t\t\treturn &storage.Failing{\n\t\t\t\t\tDriver:    driver,\n",
                      "markdown": "`\t\t\texpectFailures: 1,\n\t\t},\n\t\t{\n\t\t\tname: \"rollback with storage update error\",\n\t\t\tdriver: func(driver helmdriver.Driver) helmdriver.Driver {\n\t\t\t\treturn &storage.Failing{\n\t\t\t\t\tDriver:    driver,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/rollback_remediation_test.go"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 37,
                  "endLine": 52,
                  "endColumn": 45,
                  "snippet": {
                    "text": "func TestRollbackRemediation_Reconcile(t *testing.T) {\n\tvar (\n\t\tmockCreateErr = fmt.Errorf(\"storage create error\")\n\t\tmockUpdateErr = fmt.Errorf(\"storage update error\")\n\t)\n\n\ttests := []struct {\n",
                    "rendered": {
                      "text": "func TestRollbackRemediation_Reconcile(t *testing.T) {\n\tvar (\n\t\tmockCreateErr = fmt.Errorf(\"storage create error\")\n\t\tmockUpdateErr = fmt.Errorf(\"storage update error\")\n\t)\n\n\ttests := []struct {\n",
                      "markdown": "`func TestRollbackRemediation_Reconcile(t *testing.T) {\n\tvar (\n\t\tmockCreateErr = fmt.Errorf(\"storage create error\")\n\t\tmockUpdateErr = fmt.Errorf(\"storage update error\")\n\t)\n\n\ttests := []struct {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/rollback_remediation_test.go"
                },
                "region": {
                  "startLine": 653,
                  "startColumn": 1,
                  "endLine": 653,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\t})\n\t\tobs := release.ObserveRelease(rls)\n\t\tobs.OCIDigest = \"sha256:fcdc2b0de1581a3633ada4afee3f918f6eaa5b5ab38c3fef03d5b48d3f85d9f6\"\n\t\texpect := release.ObservedToSnapshot(obs)\n\n\t\tobserveRollback(obj)(rls)\n\t\tg.Expect(obj.Status.History).To(testutil.Equal(v2.Snapshots{\n",
                    "rendered": {
                      "text": "\t\t})\n\t\tobs := release.ObserveRelease(rls)\n\t\tobs.OCIDigest = \"sha256:fcdc2b0de1581a3633ada4afee3f918f6eaa5b5ab38c3fef03d5b48d3f85d9f6\"\n\t\texpect := release.ObservedToSnapshot(obs)\n\n\t\tobserveRollback(obj)(rls)\n\t\tg.Expect(obj.Status.History).To(testutil.Equal(v2.Snapshots{\n",
                      "markdown": "`\t\t})\n\t\tobs := release.ObserveRelease(rls)\n\t\tobs.OCIDigest = \"sha256:fcdc2b0de1581a3633ada4afee3f918f6eaa5b5ab38c3fef03d5b48d3f85d9f6\"\n\t\texpect := release.ObservedToSnapshot(obs)\n\n\t\tobserveRollback(obj)(rls)\n\t\tg.Expect(obj.Status.History).To(testutil.Equal(v2.Snapshots{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/rollback_remediation_test.go"
                },
                "region": {
                  "startLine": 609,
                  "startColumn": 1,
                  "endLine": 609,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\t\tVersion:   previous.Version,\n\t\t\tStatus:    helmrelease.StatusSuperseded,\n\t\t})\n\t\texpect := release.ObservedToSnapshot(release.ObserveRelease(rls))\n\t\texpect.SetTestHooks(previous.GetTestHooks())\n\n\t\tobserveRollback(obj)(rls)\n",
                    "rendered": {
                      "text": "\t\t\tVersion:   previous.Version,\n\t\t\tStatus:    helmrelease.StatusSuperseded,\n\t\t})\n\t\texpect := release.ObservedToSnapshot(release.ObserveRelease(rls))\n\t\texpect.SetTestHooks(previous.GetTestHooks())\n\n\t\tobserveRollback(obj)(rls)\n",
                      "markdown": "`\t\t\tVersion:   previous.Version,\n\t\t\tStatus:    helmrelease.StatusSuperseded,\n\t\t})\n\t\texpect := release.ObservedToSnapshot(release.ObserveRelease(rls))\n\t\texpect.SetTestHooks(previous.GetTestHooks())\n\n\t\tobserveRollback(obj)(rls)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/rollback_remediation_test.go"
                },
                "region": {
                  "startLine": 565,
                  "startColumn": 1,
                  "endLine": 565,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\t\tVersion:   previous.Version,\n\t\t\tStatus:    helmrelease.StatusSuperseded,\n\t\t})\n\t\texpect := release.ObservedToSnapshot(release.ObserveRelease(rls))\n\n\t\tobserveRollback(obj)(rls)\n\t\tg.Expect(obj.Status.History).To(testutil.Equal(v2.Snapshots{\n",
                    "rendered": {
                      "text": "\t\t\tVersion:   previous.Version,\n\t\t\tStatus:    helmrelease.StatusSuperseded,\n\t\t})\n\t\texpect := release.ObservedToSnapshot(release.ObserveRelease(rls))\n\n\t\tobserveRollback(obj)(rls)\n\t\tg.Expect(obj.Status.History).To(testutil.Equal(v2.Snapshots{\n",
                      "markdown": "`\t\t\tVersion:   previous.Version,\n\t\t\tStatus:    helmrelease.StatusSuperseded,\n\t\t})\n\t\texpect := release.ObservedToSnapshot(release.ObserveRelease(rls))\n\n\t\tobserveRollback(obj)(rls)\n\t\tg.Expect(obj.Status.History).To(testutil.Equal(v2.Snapshots{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/rollback_remediation_test.go"
                },
                "region": {
                  "startLine": 526,
                  "startColumn": 1,
                  "endLine": 526,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\t\tVersion:   latest.Version + 1,\n\t\t\tStatus:    helmrelease.StatusPendingRollback,\n\t\t})\n\t\texpect := release.ObservedToSnapshot(release.ObserveRelease(rls))\n\n\t\tobserveRollback(obj)(rls)\n\t\tg.Expect(obj.Status.History).To(testutil.Equal(v2.Snapshots{\n",
                    "rendered": {
                      "text": "\t\t\tVersion:   latest.Version + 1,\n\t\t\tStatus:    helmrelease.StatusPendingRollback,\n\t\t})\n\t\texpect := release.ObservedToSnapshot(release.ObserveRelease(rls))\n\n\t\tobserveRollback(obj)(rls)\n\t\tg.Expect(obj.Status.History).To(testutil.Equal(v2.Snapshots{\n",
                      "markdown": "`\t\t\tVersion:   latest.Version + 1,\n\t\t\tStatus:    helmrelease.StatusPendingRollback,\n\t\t})\n\t\texpect := release.ObservedToSnapshot(release.ObserveRelease(rls))\n\n\t\tobserveRollback(obj)(rls)\n\t\tg.Expect(obj.Status.History).To(testutil.Equal(v2.Snapshots{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/rollback_remediation_test.go"
                },
                "region": {
                  "startLine": 497,
                  "startColumn": 1,
                  "endLine": 497,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\t\tStatus:    helmrelease.StatusPendingRollback,\n\t\t})\n\t\tobserveRollback(obj)(rls)\n\t\texpect := release.ObservedToSnapshot(release.ObserveRelease(rls))\n\n\t\tg.Expect(obj.Status.History).To(testutil.Equal(v2.Snapshots{\n\t\t\texpect,\n",
                    "rendered": {
                      "text": "\t\t\tStatus:    helmrelease.StatusPendingRollback,\n\t\t})\n\t\tobserveRollback(obj)(rls)\n\t\texpect := release.ObservedToSnapshot(release.ObserveRelease(rls))\n\n\t\tg.Expect(obj.Status.History).To(testutil.Equal(v2.Snapshots{\n\t\t\texpect,\n",
                      "markdown": "`\t\t\tStatus:    helmrelease.StatusPendingRollback,\n\t\t})\n\t\tobserveRollback(obj)(rls)\n\t\texpect := release.ObservedToSnapshot(release.ObserveRelease(rls))\n\n\t\tg.Expect(obj.Status.History).To(testutil.Equal(v2.Snapshots{\n\t\t\texpect,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/helmchart_template.go"
                },
                "region": {
                  "startLine": 193,
                  "startColumn": 17,
                  "endLine": 193,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\n\t\t// Fetch the HelmChart.\n\t\tvar chart sourcev1.HelmChart\n\t\terr := r.client.Get(ctx, namespacedName, &chart)\n\t\tif err != nil && !apierrors.IsNotFound(err) {\n\t\t\t// Return error to retry until we succeed.\n\t\t\terr = fmt.Errorf(\"failed to delete HelmChart '%s': %w\", obj.Status.HelmChart, err)\n",
                    "rendered": {
                      "text": "\n\t\t// Fetch the HelmChart.\n\t\tvar chart sourcev1.HelmChart\n\t\terr := r.client.Get(ctx, namespacedName, &chart)\n\t\tif err != nil && !apierrors.IsNotFound(err) {\n\t\t\t// Return error to retry until we succeed.\n\t\t\terr = fmt.Errorf(\"failed to delete HelmChart '%s': %w\", obj.Status.HelmChart, err)\n",
                      "markdown": "`\n\t\t// Fetch the HelmChart.\n\t\tvar chart sourcev1.HelmChart\n\t\terr := r.client.Get(ctx, namespacedName, &chart)\n\t\tif err != nil && !apierrors.IsNotFound(err) {\n\t\t\t// Return error to retry until we succeed.\n\t\t\terr = fmt.Errorf(\"failed to delete HelmChart '%s': %w\", obj.Status.HelmChart, err)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/helmchart_template.go"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 39,
                  "endLine": 62,
                  "endColumn": 47,
                  "snippet": {
                    "text": "// indicates they should retry.\n//\n// In case the v2.HelmRelease is marked for deletion, the reconciler will\n// not continue to attempt to create or update the v1beta2.HelmChart.\ntype HelmChartTemplate struct {\n\tclient        client.Client\n\teventRecorder record.EventRecorder\n",
                    "rendered": {
                      "text": "// indicates they should retry.\n//\n// In case the v2.HelmRelease is marked for deletion, the reconciler will\n// not continue to attempt to create or update the v1beta2.HelmChart.\ntype HelmChartTemplate struct {\n\tclient        client.Client\n\teventRecorder record.EventRecorder\n",
                      "markdown": "`// indicates they should retry.\n//\n// In case the v2.HelmRelease is marked for deletion, the reconciler will\n// not continue to attempt to create or update the v1beta2.HelmChart.\ntype HelmChartTemplate struct {\n\tclient        client.Client\n\teventRecorder record.EventRecorder\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/helmchart_template.go"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 7,
                  "endLine": 54,
                  "endColumn": 11,
                  "snippet": {
                    "text": "// server-side apply fails, the error is returned to the caller and indicates\n// they should retry.\n//\n// When at the beginning of the reconciliation the deletion timestamp is set\n// on the v2.HelmRelease, or the Status.HelmChart differs from the\n// namespaced name of the chart to be applied, the existing chart is deleted.\n// The deletion is observed, and when it completes, the Status.HelmChart is\n",
                    "rendered": {
                      "text": "// server-side apply fails, the error is returned to the caller and indicates\n// they should retry.\n//\n// When at the beginning of the reconciliation the deletion timestamp is set\n// on the v2.HelmRelease, or the Status.HelmChart differs from the\n// namespaced name of the chart to be applied, the existing chart is deleted.\n// The deletion is observed, and when it completes, the Status.HelmChart is\n",
                      "markdown": "`// server-side apply fails, the error is returned to the caller and indicates\n// they should retry.\n//\n// When at the beginning of the reconciliation the deletion timestamp is set\n// on the v2.HelmRelease, or the Status.HelmChart differs from the\n// namespaced name of the chart to be applied, the existing chart is deleted.\n// The deletion is observed, and when it completes, the Status.HelmChart is\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/helmchart_template.go"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 40,
                  "endLine": 42,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\"github.com/fluxcd/helm-controller/internal/strings\"\n)\n\n// HelmChartTemplate attempts to create, update or delete a v1beta2.HelmChart\n// based on the given Request data.\n//\n// It does this by building a v1beta2.HelmChart from the template declared in\n",
                    "rendered": {
                      "text": "\t\"github.com/fluxcd/helm-controller/internal/strings\"\n)\n\n// HelmChartTemplate attempts to create, update or delete a v1beta2.HelmChart\n// based on the given Request data.\n//\n// It does this by building a v1beta2.HelmChart from the template declared in\n",
                      "markdown": "`\t\"github.com/fluxcd/helm-controller/internal/strings\"\n)\n\n// HelmChartTemplate attempts to create, update or delete a v1beta2.HelmChart\n// based on the given Request data.\n//\n// It does this by building a v1beta2.HelmChart from the template declared in\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/uninstall_test.go"
                },
                "region": {
                  "startLine": 468,
                  "startColumn": 50,
                  "endLine": 468,
                  "endColumn": 70,
                  "snippet": {
                    "text": "\t\t\t\tobj.Status = tt.status(releases)\n\t\t\t}\n\n\t\t\tgetter, err := RESTClientGetterFromManager(testEnv.Manager, obj.GetReleaseNamespace())\n\t\t\tg.Expect(err).ToNot(HaveOccurred())\n\n\t\t\tcfg, err := action.NewConfigFactory(getter,\n",
                    "rendered": {
                      "text": "\t\t\t\tobj.Status = tt.status(releases)\n\t\t\t}\n\n\t\t\tgetter, err := RESTClientGetterFromManager(testEnv.Manager, obj.GetReleaseNamespace())\n\t\t\tg.Expect(err).ToNot(HaveOccurred())\n\n\t\t\tcfg, err := action.NewConfigFactory(getter,\n",
                      "markdown": "`\t\t\t\tobj.Status = tt.status(releases)\n\t\t\t}\n\n\t\t\tgetter, err := RESTClientGetterFromManager(testEnv.Manager, obj.GetReleaseNamespace())\n\t\t\tg.Expect(err).ToNot(HaveOccurred())\n\n\t\t\tcfg, err := action.NewConfigFactory(getter,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/uninstall_test.go"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 34,
                  "endLine": 49,
                  "endColumn": 42,
                  "snippet": {
                    "text": ")\n\nfunc TestUninstall_Reconcile(t *testing.T) {\n\tmockUpdateErr := errors.New(\"mock update error\")\n\n\ttests := []struct {\n\t\tname string\n",
                    "rendered": {
                      "text": ")\n\nfunc TestUninstall_Reconcile(t *testing.T) {\n\tmockUpdateErr := errors.New(\"mock update error\")\n\n\ttests := []struct {\n\t\tname string\n",
                      "markdown": "`)\n\nfunc TestUninstall_Reconcile(t *testing.T) {\n\tmockUpdateErr := errors.New(\"mock update error\")\n\n\ttests := []struct {\n\t\tname string\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/uninstall_test.go"
                },
                "region": {
                  "startLine": 740,
                  "startColumn": 1,
                  "endLine": 740,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\t})\n\t\tobs := release.ObserveRelease(rls)\n\t\tobs.OCIDigest = \"sha256:fcdc2b0de1581a3633ada4afee3f918f6eaa5b5ab38c3fef03d5b48d3f85d9f6\"\n\t\texpect := release.ObservedToSnapshot(obs)\n\n\t\tobserveUninstall(obj)(rls)\n\t\tg.Expect(obj.Status.History).To(testutil.Equal(v2.Snapshots{\n",
                    "rendered": {
                      "text": "\t\t})\n\t\tobs := release.ObserveRelease(rls)\n\t\tobs.OCIDigest = \"sha256:fcdc2b0de1581a3633ada4afee3f918f6eaa5b5ab38c3fef03d5b48d3f85d9f6\"\n\t\texpect := release.ObservedToSnapshot(obs)\n\n\t\tobserveUninstall(obj)(rls)\n\t\tg.Expect(obj.Status.History).To(testutil.Equal(v2.Snapshots{\n",
                      "markdown": "`\t\t})\n\t\tobs := release.ObserveRelease(rls)\n\t\tobs.OCIDigest = \"sha256:fcdc2b0de1581a3633ada4afee3f918f6eaa5b5ab38c3fef03d5b48d3f85d9f6\"\n\t\texpect := release.ObservedToSnapshot(obs)\n\n\t\tobserveUninstall(obj)(rls)\n\t\tg.Expect(obj.Status.History).To(testutil.Equal(v2.Snapshots{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/uninstall_test.go"
                },
                "region": {
                  "startLine": 660,
                  "startColumn": 1,
                  "endLine": 660,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\t\tVersion:   current.Version,\n\t\t\tStatus:    helmrelease.StatusUninstalled,\n\t\t})\n\t\texpect := release.ObservedToSnapshot(release.ObserveRelease(rls))\n\n\t\tobserveUninstall(obj)(rls)\n\t\tg.Expect(obj.Status.History).To(testutil.Equal(v2.Snapshots{\n",
                    "rendered": {
                      "text": "\t\t\tVersion:   current.Version,\n\t\t\tStatus:    helmrelease.StatusUninstalled,\n\t\t})\n\t\texpect := release.ObservedToSnapshot(release.ObserveRelease(rls))\n\n\t\tobserveUninstall(obj)(rls)\n\t\tg.Expect(obj.Status.History).To(testutil.Equal(v2.Snapshots{\n",
                      "markdown": "`\t\t\tVersion:   current.Version,\n\t\t\tStatus:    helmrelease.StatusUninstalled,\n\t\t})\n\t\texpect := release.ObservedToSnapshot(release.ObserveRelease(rls))\n\n\t\tobserveUninstall(obj)(rls)\n\t\tg.Expect(obj.Status.History).To(testutil.Equal(v2.Snapshots{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/state_test.go"
                },
                "region": {
                  "startLine": 734,
                  "startColumn": 50,
                  "endLine": 734,
                  "endColumn": 70,
                  "snippet": {
                    "text": "\t\t\t\t},\n\t\t\t}\n\n\t\t\tgetter, err := RESTClientGetterFromManager(testEnv.Manager, obj.GetReleaseNamespace())\n\t\t\tg.Expect(err).ToNot(HaveOccurred())\n\n\t\t\tcfg, err := action.NewConfigFactory(getter,\n",
                    "rendered": {
                      "text": "\t\t\t\t},\n\t\t\t}\n\n\t\t\tgetter, err := RESTClientGetterFromManager(testEnv.Manager, obj.GetReleaseNamespace())\n\t\t\tg.Expect(err).ToNot(HaveOccurred())\n\n\t\t\tcfg, err := action.NewConfigFactory(getter,\n",
                      "markdown": "`\t\t\t\t},\n\t\t\t}\n\n\t\t\tgetter, err := RESTClientGetterFromManager(testEnv.Manager, obj.GetReleaseNamespace())\n\t\t\tg.Expect(err).ToNot(HaveOccurred())\n\n\t\t\tcfg, err := action.NewConfigFactory(getter,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/testdata/charts/crds/bootstrap/Chart.yaml"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 24,
                  "snippet": {
                    "text": "version: 1.0.0\n\n# This is the version number of the application being deployed. This version number should be\n# incremented each time you make changes to the application. Versions are not expected to\n# follow Semantic Versioning. They should reflect the version the application is using.\nappVersion: 1.0.0\n",
                    "rendered": {
                      "text": "version: 1.0.0\n\n# This is the version number of the application being deployed. This version number should be\n# incremented each time you make changes to the application. Versions are not expected to\n# follow Semantic Versioning. They should reflect the version the application is using.\nappVersion: 1.0.0\n",
                      "markdown": "`version: 1.0.0\n\n# This is the version number of the application being deployed. This version number should be\n# incremented each time you make changes to the application. Versions are not expected to\n# follow Semantic Versioning. They should reflect the version the application is using.\nappVersion: 1.0.0\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/testdata/charts/crds/bootstrap/Chart.yaml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 75,
                  "endLine": 15,
                  "endColumn": 81,
                  "snippet": {
                    "text": "# pipeline. Library charts do not define any templates and therefore cannot be deployed.\ntype: application\n\n# This is the chart version. This version number should be incremented each time you make changes\n# to the chart and its templates, including the app version.\n# Versions are expected to follow Semantic Versioning (https://semver.org/)\nversion: 1.0.0\n",
                    "rendered": {
                      "text": "# pipeline. Library charts do not define any templates and therefore cannot be deployed.\ntype: application\n\n# This is the chart version. This version number should be incremented each time you make changes\n# to the chart and its templates, including the app version.\n# Versions are expected to follow Semantic Versioning (https://semver.org/)\nversion: 1.0.0\n",
                      "markdown": "`# pipeline. Library charts do not define any templates and therefore cannot be deployed.\ntype: application\n\n# This is the chart version. This version number should be incremented each time you make changes\n# to the chart and its templates, including the app version.\n# Versions are expected to follow Semantic Versioning (https://semver.org/)\nversion: 1.0.0\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/testdata/charts/crds/v1/Chart.yaml"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 24,
                  "snippet": {
                    "text": "version: 1.0.0\n\n# This is the version number of the application being deployed. This version number should be\n# incremented each time you make changes to the application. Versions are not expected to\n# follow Semantic Versioning. They should reflect the version the application is using.\nappVersion: 1.0.0\n",
                    "rendered": {
                      "text": "version: 1.0.0\n\n# This is the version number of the application being deployed. This version number should be\n# incremented each time you make changes to the application. Versions are not expected to\n# follow Semantic Versioning. They should reflect the version the application is using.\nappVersion: 1.0.0\n",
                      "markdown": "`version: 1.0.0\n\n# This is the version number of the application being deployed. This version number should be\n# incremented each time you make changes to the application. Versions are not expected to\n# follow Semantic Versioning. They should reflect the version the application is using.\nappVersion: 1.0.0\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/testdata/charts/crds/v1/Chart.yaml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 75,
                  "endLine": 15,
                  "endColumn": 81,
                  "snippet": {
                    "text": "# pipeline. Library charts do not define any templates and therefore cannot be deployed.\ntype: application\n\n# This is the chart version. This version number should be incremented each time you make changes\n# to the chart and its templates, including the app version.\n# Versions are expected to follow Semantic Versioning (https://semver.org/)\nversion: 1.0.0\n",
                    "rendered": {
                      "text": "# pipeline. Library charts do not define any templates and therefore cannot be deployed.\ntype: application\n\n# This is the chart version. This version number should be incremented each time you make changes\n# to the chart and its templates, including the app version.\n# Versions are expected to follow Semantic Versioning (https://semver.org/)\nversion: 1.0.0\n",
                      "markdown": "`# pipeline. Library charts do not define any templates and therefore cannot be deployed.\ntype: application\n\n# This is the chart version. This version number should be incremented each time you make changes\n# to the chart and its templates, including the app version.\n# Versions are expected to follow Semantic Versioning (https://semver.org/)\nversion: 1.0.0\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 3384,
                  "startColumn": 66,
                  "endLine": 3384,
                  "endColumn": 70,
                  "snippet": {
                    "text": "                      description: |-\n                        TargetPath is the YAML dot notation path the value should be merged at. When\n                        set, the ValuesKey is expected to be a single flat value. Defaults to 'None',\n                        which results in the values getting merged at the root.\n                      maxLength: 250\n                      pattern: ^([a-zA-Z0-9_\\-.\\\\\\/]|\\[[0-9]{1,5}\\])+$\n                      type: string\n",
                    "rendered": {
                      "text": "                      description: |-\n                        TargetPath is the YAML dot notation path the value should be merged at. When\n                        set, the ValuesKey is expected to be a single flat value. Defaults to 'None',\n                        which results in the values getting merged at the root.\n                      maxLength: 250\n                      pattern: ^([a-zA-Z0-9_\\-.\\\\\\/]|\\[[0-9]{1,5}\\])+$\n                      type: string\n",
                      "markdown": "`                      description: |-\n                        TargetPath is the YAML dot notation path the value should be merged at. When\n                        set, the ValuesKey is expected to be a single flat value. Defaults to 'None',\n                        which results in the values getting merged at the root.\n                      maxLength: 250\n                      pattern: ^([a-zA-Z0-9_\\-.\\\\\\/]|\\[[0-9]{1,5}\\])+$\n                      type: string\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 2839,
                  "startColumn": 80,
                  "endLine": 2839,
                  "endColumn": 84,
                  "snippet": {
                    "text": "                description: |-\n                  KubeConfig for reconciling the HelmRelease on a remote cluster.\n                  When used in combination with HelmReleaseSpec.ServiceAccountName,\n                  forces the controller to act on behalf of that Service Account at the\n                  target cluster.\n                  If the --default-service-account flag is set, its value will be used as\n                  a controller level fallback for when HelmReleaseSpec.ServiceAccountName\n",
                    "rendered": {
                      "text": "                description: |-\n                  KubeConfig for reconciling the HelmRelease on a remote cluster.\n                  When used in combination with HelmReleaseSpec.ServiceAccountName,\n                  forces the controller to act on behalf of that Service Account at the\n                  target cluster.\n                  If the --default-service-account flag is set, its value will be used as\n                  a controller level fallback for when HelmReleaseSpec.ServiceAccountName\n",
                      "markdown": "`                description: |-\n                  KubeConfig for reconciling the HelmRelease on a remote cluster.\n                  When used in combination with HelmReleaseSpec.ServiceAccountName,\n                  forces the controller to act on behalf of that Service Account at the\n                  target cluster.\n                  If the --default-service-account flag is set, its value will be used as\n                  a controller level fallback for when HelmReleaseSpec.ServiceAccountName\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 2832,
                  "startColumn": 37,
                  "endLine": 2832,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                    type: string\n                type: object\n              interval:\n                description: Interval at which to reconcile the Helm release.\n                pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                type: string\n              kubeConfig:\n",
                    "rendered": {
                      "text": "                    type: string\n                type: object\n              interval:\n                description: Interval at which to reconcile the Helm release.\n                pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                type: string\n              kubeConfig:\n",
                      "markdown": "`                    type: string\n                type: object\n              interval:\n                description: Interval at which to reconcile the Helm release.\n                pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                type: string\n              kubeConfig:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 2497,
                  "startColumn": 34,
                  "endLine": 2497,
                  "endColumn": 38,
                  "snippet": {
                    "text": "                        type: boolean\n                      interval:\n                        description: |-\n                          Interval at which to check the v1.Source for updates. Defaults to\n                          'HelmReleaseSpec.Interval'.\n                        pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                        type: string\n",
                    "rendered": {
                      "text": "                        type: boolean\n                      interval:\n                        description: |-\n                          Interval at which to check the v1.Source for updates. Defaults to\n                          'HelmReleaseSpec.Interval'.\n                        pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                        type: string\n",
                      "markdown": "`                        type: boolean\n                      interval:\n                        description: |-\n                          Interval at which to check the v1.Source for updates. Defaults to\n                          'HelmReleaseSpec.Interval'.\n                        pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                        type: string\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 2487,
                  "startColumn": 25,
                  "endLine": 2487,
                  "endColumn": 29,
                  "snippet": {
                    "text": "                    properties:\n                      chart:\n                        description: The name or path the Helm chart is available\n                          at in the SourceRef.\n                        maxLength: 2048\n                        minLength: 1\n                        type: string\n",
                    "rendered": {
                      "text": "                    properties:\n                      chart:\n                        description: The name or path the Helm chart is available\n                          at in the SourceRef.\n                        maxLength: 2048\n                        minLength: 1\n                        type: string\n",
                      "markdown": "`                    properties:\n                      chart:\n                        description: The name or path the Helm chart is available\n                          at in the SourceRef.\n                        maxLength: 2048\n                        minLength: 1\n                        type: string\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 2114,
                  "startColumn": 66,
                  "endLine": 2114,
                  "endColumn": 70,
                  "snippet": {
                    "text": "                      description: |-\n                        TargetPath is the YAML dot notation path the value should be merged at. When\n                        set, the ValuesKey is expected to be a single flat value. Defaults to 'None',\n                        which results in the values getting merged at the root.\n                      maxLength: 250\n                      pattern: ^([a-zA-Z0-9_\\-.\\\\\\/]|\\[[0-9]{1,5}\\])+$\n                      type: string\n",
                    "rendered": {
                      "text": "                      description: |-\n                        TargetPath is the YAML dot notation path the value should be merged at. When\n                        set, the ValuesKey is expected to be a single flat value. Defaults to 'None',\n                        which results in the values getting merged at the root.\n                      maxLength: 250\n                      pattern: ^([a-zA-Z0-9_\\-.\\\\\\/]|\\[[0-9]{1,5}\\])+$\n                      type: string\n",
                      "markdown": "`                      description: |-\n                        TargetPath is the YAML dot notation path the value should be merged at. When\n                        set, the ValuesKey is expected to be a single flat value. Defaults to 'None',\n                        which results in the values getting merged at the root.\n                      maxLength: 250\n                      pattern: ^([a-zA-Z0-9_\\-.\\\\\\/]|\\[[0-9]{1,5}\\])+$\n                      type: string\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 1594,
                  "startColumn": 80,
                  "endLine": 1594,
                  "endColumn": 84,
                  "snippet": {
                    "text": "                description: |-\n                  KubeConfig for reconciling the HelmRelease on a remote cluster.\n                  When used in combination with HelmReleaseSpec.ServiceAccountName,\n                  forces the controller to act on behalf of that Service Account at the\n                  target cluster.\n                  If the --default-service-account flag is set, its value will be used as\n                  a controller level fallback for when HelmReleaseSpec.ServiceAccountName\n",
                    "rendered": {
                      "text": "                description: |-\n                  KubeConfig for reconciling the HelmRelease on a remote cluster.\n                  When used in combination with HelmReleaseSpec.ServiceAccountName,\n                  forces the controller to act on behalf of that Service Account at the\n                  target cluster.\n                  If the --default-service-account flag is set, its value will be used as\n                  a controller level fallback for when HelmReleaseSpec.ServiceAccountName\n",
                      "markdown": "`                description: |-\n                  KubeConfig for reconciling the HelmRelease on a remote cluster.\n                  When used in combination with HelmReleaseSpec.ServiceAccountName,\n                  forces the controller to act on behalf of that Service Account at the\n                  target cluster.\n                  If the --default-service-account flag is set, its value will be used as\n                  a controller level fallback for when HelmReleaseSpec.ServiceAccountName\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 1585,
                  "startColumn": 26,
                  "endLine": 1585,
                  "endColumn": 30,
                  "snippet": {
                    "text": "                type: object\n              interval:\n                description: |-\n                  Interval at which to reconcile the Helm release.\n                  This interval is approximate and may be subject to jitter to ensure\n                  efficient use of resources.\n                pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                    "rendered": {
                      "text": "                type: object\n              interval:\n                description: |-\n                  Interval at which to reconcile the Helm release.\n                  This interval is approximate and may be subject to jitter to ensure\n                  efficient use of resources.\n                pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                      "markdown": "`                type: object\n              interval:\n                description: |-\n                  Interval at which to reconcile the Helm release.\n                  This interval is approximate and may be subject to jitter to ensure\n                  efficient use of resources.\n                pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 1248,
                  "startColumn": 34,
                  "endLine": 1248,
                  "endColumn": 38,
                  "snippet": {
                    "text": "                        type: string\n                      interval:\n                        description: |-\n                          Interval at which to check the v1beta2.Source for updates. Defaults to\n                          'HelmReleaseSpec.Interval'.\n                        pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                        type: string\n",
                    "rendered": {
                      "text": "                        type: string\n                      interval:\n                        description: |-\n                          Interval at which to check the v1beta2.Source for updates. Defaults to\n                          'HelmReleaseSpec.Interval'.\n                        pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                        type: string\n",
                      "markdown": "`                        type: string\n                      interval:\n                        description: |-\n                          Interval at which to check the v1beta2.Source for updates. Defaults to\n                          'HelmReleaseSpec.Interval'.\n                        pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                        type: string\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 1244,
                  "startColumn": 25,
                  "endLine": 1244,
                  "endColumn": 29,
                  "snippet": {
                    "text": "                    properties:\n                      chart:\n                        description: The name or path the Helm chart is available\n                          at in the SourceRef.\n                        type: string\n                      interval:\n                        description: |-\n",
                    "rendered": {
                      "text": "                    properties:\n                      chart:\n                        description: The name or path the Helm chart is available\n                          at in the SourceRef.\n                        type: string\n                      interval:\n                        description: |-\n",
                      "markdown": "`                    properties:\n                      chart:\n                        description: The name or path the Helm chart is available\n                          at in the SourceRef.\n                        type: string\n                      interval:\n                        description: |-\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 881,
                  "startColumn": 66,
                  "endLine": 881,
                  "endColumn": 70,
                  "snippet": {
                    "text": "                      description: |-\n                        TargetPath is the YAML dot notation path the value should be merged at. When\n                        set, the ValuesKey is expected to be a single flat value. Defaults to 'None',\n                        which results in the values getting merged at the root.\n                      maxLength: 250\n                      pattern: ^([a-zA-Z0-9_\\-.\\\\\\/]|\\[[0-9]{1,5}\\])+$\n                      type: string\n",
                    "rendered": {
                      "text": "                      description: |-\n                        TargetPath is the YAML dot notation path the value should be merged at. When\n                        set, the ValuesKey is expected to be a single flat value. Defaults to 'None',\n                        which results in the values getting merged at the root.\n                      maxLength: 250\n                      pattern: ^([a-zA-Z0-9_\\-.\\\\\\/]|\\[[0-9]{1,5}\\])+$\n                      type: string\n",
                      "markdown": "`                      description: |-\n                        TargetPath is the YAML dot notation path the value should be merged at. When\n                        set, the ValuesKey is expected to be a single flat value. Defaults to 'None',\n                        which results in the values getting merged at the root.\n                      maxLength: 250\n                      pattern: ^([a-zA-Z0-9_\\-.\\\\\\/]|\\[[0-9]{1,5}\\])+$\n                      type: string\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 434,
                  "startColumn": 80,
                  "endLine": 434,
                  "endColumn": 84,
                  "snippet": {
                    "text": "                description: |-\n                  KubeConfig for reconciling the HelmRelease on a remote cluster.\n                  When used in combination with HelmReleaseSpec.ServiceAccountName,\n                  forces the controller to act on behalf of that Service Account at the\n                  target cluster.\n                  If the --default-service-account flag is set, its value will be used as\n                  a controller level fallback for when HelmReleaseSpec.ServiceAccountName\n",
                    "rendered": {
                      "text": "                description: |-\n                  KubeConfig for reconciling the HelmRelease on a remote cluster.\n                  When used in combination with HelmReleaseSpec.ServiceAccountName,\n                  forces the controller to act on behalf of that Service Account at the\n                  target cluster.\n                  If the --default-service-account flag is set, its value will be used as\n                  a controller level fallback for when HelmReleaseSpec.ServiceAccountName\n",
                      "markdown": "`                description: |-\n                  KubeConfig for reconciling the HelmRelease on a remote cluster.\n                  When used in combination with HelmReleaseSpec.ServiceAccountName,\n                  forces the controller to act on behalf of that Service Account at the\n                  target cluster.\n                  If the --default-service-account flag is set, its value will be used as\n                  a controller level fallback for when HelmReleaseSpec.ServiceAccountName\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 427,
                  "startColumn": 37,
                  "endLine": 427,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                    type: string\n                type: object\n              interval:\n                description: Interval at which to reconcile the Helm release.\n                pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                type: string\n              kubeConfig:\n",
                    "rendered": {
                      "text": "                    type: string\n                type: object\n              interval:\n                description: Interval at which to reconcile the Helm release.\n                pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                type: string\n              kubeConfig:\n",
                      "markdown": "`                    type: string\n                type: object\n              interval:\n                description: Interval at which to reconcile the Helm release.\n                pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                type: string\n              kubeConfig:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 34,
                  "endLine": 97,
                  "endColumn": 38,
                  "snippet": {
                    "text": "                        type: boolean\n                      interval:\n                        description: |-\n                          Interval at which to check the v1.Source for updates. Defaults to\n                          'HelmReleaseSpec.Interval'.\n                        pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                        type: string\n",
                    "rendered": {
                      "text": "                        type: boolean\n                      interval:\n                        description: |-\n                          Interval at which to check the v1.Source for updates. Defaults to\n                          'HelmReleaseSpec.Interval'.\n                        pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                        type: string\n",
                      "markdown": "`                        type: boolean\n                      interval:\n                        description: |-\n                          Interval at which to check the v1.Source for updates. Defaults to\n                          'HelmReleaseSpec.Interval'.\n                        pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                        type: string\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 25,
                  "endLine": 87,
                  "endColumn": 29,
                  "snippet": {
                    "text": "                    properties:\n                      chart:\n                        description: The name or path the Helm chart is available\n                          at in the SourceRef.\n                        maxLength: 2048\n                        minLength: 1\n                        type: string\n",
                    "rendered": {
                      "text": "                    properties:\n                      chart:\n                        description: The name or path the Helm chart is available\n                          at in the SourceRef.\n                        maxLength: 2048\n                        minLength: 1\n                        type: string\n",
                      "markdown": "`                    properties:\n                      chart:\n                        description: The name or path the Helm chart is available\n                          at in the SourceRef.\n                        maxLength: 2048\n                        minLength: 1\n                        type: string\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 3557,
                  "startColumn": 59,
                  "endLine": 3557,
                  "endColumn": 65,
                  "snippet": {
                    "text": "                            format: date-time\n                            type: string\n                          lastStarted:\n                            description: LastStarted is the time the test hook was\n                              last started.\n                            format: date-time\n                            type: string\n",
                    "rendered": {
                      "text": "                            format: date-time\n                            type: string\n                          lastStarted:\n                            description: LastStarted is the time the test hook was\n                              last started.\n                            format: date-time\n                            type: string\n",
                      "markdown": "`                            format: date-time\n                            type: string\n                          lastStarted:\n                            description: LastStarted is the time the test hook was\n                              last started.\n                            format: date-time\n                            type: string\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 3552,
                  "startColumn": 61,
                  "endLine": 3552,
                  "endColumn": 67,
                  "snippet": {
                    "text": "                          to be run by the controller.\n                        properties:\n                          lastCompleted:\n                            description: LastCompleted is the time the test hook last\n                              completed.\n                            format: date-time\n                            type: string\n",
                    "rendered": {
                      "text": "                          to be run by the controller.\n                        properties:\n                          lastCompleted:\n                            description: LastCompleted is the time the test hook last\n                              completed.\n                            format: date-time\n                            type: string\n",
                      "markdown": "`                          to be run by the controller.\n                        properties:\n                          lastCompleted:\n                            description: LastCompleted is the time the test hook last\n                              completed.\n                            format: date-time\n                            type: string\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 3421,
                  "startColumn": 115,
                  "endLine": 3421,
                  "endColumn": 121,
                  "snippet": {
                    "text": "                    lastTransitionTime:\n                      description: |-\n                        lastTransitionTime is the last time the condition transitioned from one status to another.\n                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.\n                      format: date-time\n                      type: string\n                    message:\n",
                    "rendered": {
                      "text": "                    lastTransitionTime:\n                      description: |-\n                        lastTransitionTime is the last time the condition transitioned from one status to another.\n                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.\n                      format: date-time\n                      type: string\n                    message:\n",
                      "markdown": "`                    lastTransitionTime:\n                      description: |-\n                        lastTransitionTime is the last time the condition transitioned from one status to another.\n                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.\n                      format: date-time\n                      type: string\n                    message:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 3420,
                  "startColumn": 54,
                  "endLine": 3420,
                  "endColumn": 60,
                  "snippet": {
                    "text": "                  properties:\n                    lastTransitionTime:\n                      description: |-\n                        lastTransitionTime is the last time the condition transitioned from one status to another.\n                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.\n                      format: date-time\n                      type: string\n",
                    "rendered": {
                      "text": "                  properties:\n                    lastTransitionTime:\n                      description: |-\n                        lastTransitionTime is the last time the condition transitioned from one status to another.\n                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.\n                      format: date-time\n                      type: string\n",
                      "markdown": "`                  properties:\n                    lastTransitionTime:\n                      description: |-\n                        lastTransitionTime is the last time the condition transitioned from one status to another.\n                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.\n                      format: date-time\n                      type: string\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 3342,
                  "startColumn": 36,
                  "endLine": 3342,
                  "endColumn": 42,
                  "snippet": {
                    "text": "                    type: object\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm upgrade action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                    "rendered": {
                      "text": "                    type: object\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm upgrade action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                      "markdown": "`                    type: object\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm upgrade action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 3342,
                  "startColumn": 21,
                  "endLine": 3342,
                  "endColumn": 30,
                  "snippet": {
                    "text": "                    type: object\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm upgrade action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                    "rendered": {
                      "text": "                    type: object\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm upgrade action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                      "markdown": "`                    type: object\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm upgrade action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 3244,
                  "startColumn": 36,
                  "endLine": 3244,
                  "endColumn": 42,
                  "snippet": {
                    "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm uninstall action. Defaults\n                      to 'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                    "rendered": {
                      "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm uninstall action. Defaults\n                      to 'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                      "markdown": "`                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm uninstall action. Defaults\n                      to 'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 3244,
                  "startColumn": 21,
                  "endLine": 3244,
                  "endColumn": 30,
                  "snippet": {
                    "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm uninstall action. Defaults\n                      to 'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                    "rendered": {
                      "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm uninstall action. Defaults\n                      to 'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                      "markdown": "`                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm uninstall action. Defaults\n                      to 'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 3210,
                  "startColumn": 32,
                  "endLine": 3210,
                  "endColumn": 38,
                  "snippet": {
                    "text": "                type: object\n              timeout:\n                description: |-\n                  Timeout is the time to wait for any individual Kubernetes operation (like Jobs\n                  for hooks) during the performance of a Helm action. Defaults to '5m0s'.\n                pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                type: string\n",
                    "rendered": {
                      "text": "                type: object\n              timeout:\n                description: |-\n                  Timeout is the time to wait for any individual Kubernetes operation (like Jobs\n                  for hooks) during the performance of a Helm action. Defaults to '5m0s'.\n                pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                type: string\n",
                      "markdown": "`                type: object\n              timeout:\n                description: |-\n                  Timeout is the time to wait for any individual Kubernetes operation (like Jobs\n                  for hooks) during the performance of a Helm action. Defaults to '5m0s'.\n                pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                type: string\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 3210,
                  "startColumn": 17,
                  "endLine": 3210,
                  "endColumn": 26,
                  "snippet": {
                    "text": "                type: object\n              timeout:\n                description: |-\n                  Timeout is the time to wait for any individual Kubernetes operation (like Jobs\n                  for hooks) during the performance of a Helm action. Defaults to '5m0s'.\n                pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                type: string\n",
                    "rendered": {
                      "text": "                type: object\n              timeout:\n                description: |-\n                  Timeout is the time to wait for any individual Kubernetes operation (like Jobs\n                  for hooks) during the performance of a Helm action. Defaults to '5m0s'.\n                pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                type: string\n",
                      "markdown": "`                type: object\n              timeout:\n                description: |-\n                  Timeout is the time to wait for any individual Kubernetes operation (like Jobs\n                  for hooks) during the performance of a Helm action. Defaults to '5m0s'.\n                pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                type: string\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 3203,
                  "startColumn": 36,
                  "endLine": 3203,
                  "endColumn": 42,
                  "snippet": {
                    "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation during\n                      the performance of a Helm test action. Defaults to 'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                    type: string\n",
                    "rendered": {
                      "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation during\n                      the performance of a Helm test action. Defaults to 'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                    type: string\n",
                      "markdown": "`                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation during\n                      the performance of a Helm test action. Defaults to 'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                    type: string\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 3203,
                  "startColumn": 21,
                  "endLine": 3203,
                  "endColumn": 30,
                  "snippet": {
                    "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation during\n                      the performance of a Helm test action. Defaults to 'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                    type: string\n",
                    "rendered": {
                      "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation during\n                      the performance of a Helm test action. Defaults to 'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                    type: string\n",
                      "markdown": "`                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation during\n                      the performance of a Helm test action. Defaults to 'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                    type: string\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 3142,
                  "startColumn": 44,
                  "endLine": 3142,
                  "endColumn": 53,
                  "snippet": {
                    "text": "                type: object\n              serviceAccountName:\n                description: |-\n                  The name of the Kubernetes service account to impersonate\n                  when reconciling this HelmRelease.\n                maxLength: 253\n                minLength: 1\n",
                    "rendered": {
                      "text": "                type: object\n              serviceAccountName:\n                description: |-\n                  The name of the Kubernetes service account to impersonate\n                  when reconciling this HelmRelease.\n                maxLength: 253\n                minLength: 1\n",
                      "markdown": "`                type: object\n              serviceAccountName:\n                description: |-\n                  The name of the Kubernetes service account to impersonate\n                  when reconciling this HelmRelease.\n                maxLength: 253\n                minLength: 1\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 3134,
                  "startColumn": 36,
                  "endLine": 3134,
                  "endColumn": 42,
                  "snippet": {
                    "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm rollback action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                    "rendered": {
                      "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm rollback action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                      "markdown": "`                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm rollback action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 3134,
                  "startColumn": 21,
                  "endLine": 3134,
                  "endColumn": 30,
                  "snippet": {
                    "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm rollback action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                    "rendered": {
                      "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm rollback action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                      "markdown": "`                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm rollback action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 2839,
                  "startColumn": 64,
                  "endLine": 2839,
                  "endColumn": 73,
                  "snippet": {
                    "text": "                description: |-\n                  KubeConfig for reconciling the HelmRelease on a remote cluster.\n                  When used in combination with HelmReleaseSpec.ServiceAccountName,\n                  forces the controller to act on behalf of that Service Account at the\n                  target cluster.\n                  If the --default-service-account flag is set, its value will be used as\n                  a controller level fallback for when HelmReleaseSpec.ServiceAccountName\n",
                    "rendered": {
                      "text": "                description: |-\n                  KubeConfig for reconciling the HelmRelease on a remote cluster.\n                  When used in combination with HelmReleaseSpec.ServiceAccountName,\n                  forces the controller to act on behalf of that Service Account at the\n                  target cluster.\n                  If the --default-service-account flag is set, its value will be used as\n                  a controller level fallback for when HelmReleaseSpec.ServiceAccountName\n",
                      "markdown": "`                description: |-\n                  KubeConfig for reconciling the HelmRelease on a remote cluster.\n                  When used in combination with HelmReleaseSpec.ServiceAccountName,\n                  forces the controller to act on behalf of that Service Account at the\n                  target cluster.\n                  If the --default-service-account flag is set, its value will be used as\n                  a controller level fallback for when HelmReleaseSpec.ServiceAccountName\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 2825,
                  "startColumn": 36,
                  "endLine": 2825,
                  "endColumn": 42,
                  "snippet": {
                    "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm install action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                    "rendered": {
                      "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm install action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                      "markdown": "`                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm install action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 2825,
                  "startColumn": 21,
                  "endLine": 2825,
                  "endColumn": 30,
                  "snippet": {
                    "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm install action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                    "rendered": {
                      "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm install action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                      "markdown": "`                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm install action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 2289,
                  "startColumn": 59,
                  "endLine": 2289,
                  "endColumn": 65,
                  "snippet": {
                    "text": "                            format: date-time\n                            type: string\n                          lastStarted:\n                            description: LastStarted is the time the test hook was\n                              last started.\n                            format: date-time\n                            type: string\n",
                    "rendered": {
                      "text": "                            format: date-time\n                            type: string\n                          lastStarted:\n                            description: LastStarted is the time the test hook was\n                              last started.\n                            format: date-time\n                            type: string\n",
                      "markdown": "`                            format: date-time\n                            type: string\n                          lastStarted:\n                            description: LastStarted is the time the test hook was\n                              last started.\n                            format: date-time\n                            type: string\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 2284,
                  "startColumn": 61,
                  "endLine": 2284,
                  "endColumn": 67,
                  "snippet": {
                    "text": "                          to be run by the controller.\n                        properties:\n                          lastCompleted:\n                            description: LastCompleted is the time the test hook last\n                              completed.\n                            format: date-time\n                            type: string\n",
                    "rendered": {
                      "text": "                          to be run by the controller.\n                        properties:\n                          lastCompleted:\n                            description: LastCompleted is the time the test hook last\n                              completed.\n                            format: date-time\n                            type: string\n",
                      "markdown": "`                          to be run by the controller.\n                        properties:\n                          lastCompleted:\n                            description: LastCompleted is the time the test hook last\n                              completed.\n                            format: date-time\n                            type: string\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 2150,
                  "startColumn": 115,
                  "endLine": 2150,
                  "endColumn": 121,
                  "snippet": {
                    "text": "                    lastTransitionTime:\n                      description: |-\n                        lastTransitionTime is the last time the condition transitioned from one status to another.\n                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.\n                      format: date-time\n                      type: string\n                    message:\n",
                    "rendered": {
                      "text": "                    lastTransitionTime:\n                      description: |-\n                        lastTransitionTime is the last time the condition transitioned from one status to another.\n                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.\n                      format: date-time\n                      type: string\n                    message:\n",
                      "markdown": "`                    lastTransitionTime:\n                      description: |-\n                        lastTransitionTime is the last time the condition transitioned from one status to another.\n                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.\n                      format: date-time\n                      type: string\n                    message:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 2149,
                  "startColumn": 54,
                  "endLine": 2149,
                  "endColumn": 60,
                  "snippet": {
                    "text": "                  properties:\n                    lastTransitionTime:\n                      description: |-\n                        lastTransitionTime is the last time the condition transitioned from one status to another.\n                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.\n                      format: date-time\n                      type: string\n",
                    "rendered": {
                      "text": "                  properties:\n                    lastTransitionTime:\n                      description: |-\n                        lastTransitionTime is the last time the condition transitioned from one status to another.\n                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.\n                      format: date-time\n                      type: string\n",
                      "markdown": "`                  properties:\n                    lastTransitionTime:\n                      description: |-\n                        lastTransitionTime is the last time the condition transitioned from one status to another.\n                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.\n                      format: date-time\n                      type: string\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 2072,
                  "startColumn": 36,
                  "endLine": 2072,
                  "endColumn": 42,
                  "snippet": {
                    "text": "                    type: object\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm upgrade action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                    "rendered": {
                      "text": "                    type: object\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm upgrade action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                      "markdown": "`                    type: object\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm upgrade action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 2072,
                  "startColumn": 21,
                  "endLine": 2072,
                  "endColumn": 30,
                  "snippet": {
                    "text": "                    type: object\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm upgrade action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                    "rendered": {
                      "text": "                    type: object\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm upgrade action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                      "markdown": "`                    type: object\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm upgrade action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 1974,
                  "startColumn": 36,
                  "endLine": 1974,
                  "endColumn": 42,
                  "snippet": {
                    "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm uninstall action. Defaults\n                      to 'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                    "rendered": {
                      "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm uninstall action. Defaults\n                      to 'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                      "markdown": "`                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm uninstall action. Defaults\n                      to 'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 1974,
                  "startColumn": 21,
                  "endLine": 1974,
                  "endColumn": 30,
                  "snippet": {
                    "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm uninstall action. Defaults\n                      to 'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                    "rendered": {
                      "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm uninstall action. Defaults\n                      to 'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                      "markdown": "`                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm uninstall action. Defaults\n                      to 'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 1940,
                  "startColumn": 32,
                  "endLine": 1940,
                  "endColumn": 38,
                  "snippet": {
                    "text": "                type: object\n              timeout:\n                description: |-\n                  Timeout is the time to wait for any individual Kubernetes operation (like Jobs\n                  for hooks) during the performance of a Helm action. Defaults to '5m0s'.\n                pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                type: string\n",
                    "rendered": {
                      "text": "                type: object\n              timeout:\n                description: |-\n                  Timeout is the time to wait for any individual Kubernetes operation (like Jobs\n                  for hooks) during the performance of a Helm action. Defaults to '5m0s'.\n                pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                type: string\n",
                      "markdown": "`                type: object\n              timeout:\n                description: |-\n                  Timeout is the time to wait for any individual Kubernetes operation (like Jobs\n                  for hooks) during the performance of a Helm action. Defaults to '5m0s'.\n                pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                type: string\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 1940,
                  "startColumn": 17,
                  "endLine": 1940,
                  "endColumn": 26,
                  "snippet": {
                    "text": "                type: object\n              timeout:\n                description: |-\n                  Timeout is the time to wait for any individual Kubernetes operation (like Jobs\n                  for hooks) during the performance of a Helm action. Defaults to '5m0s'.\n                pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                type: string\n",
                    "rendered": {
                      "text": "                type: object\n              timeout:\n                description: |-\n                  Timeout is the time to wait for any individual Kubernetes operation (like Jobs\n                  for hooks) during the performance of a Helm action. Defaults to '5m0s'.\n                pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                type: string\n",
                      "markdown": "`                type: object\n              timeout:\n                description: |-\n                  Timeout is the time to wait for any individual Kubernetes operation (like Jobs\n                  for hooks) during the performance of a Helm action. Defaults to '5m0s'.\n                pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                type: string\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 1933,
                  "startColumn": 36,
                  "endLine": 1933,
                  "endColumn": 42,
                  "snippet": {
                    "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation during\n                      the performance of a Helm test action. Defaults to 'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                    type: string\n",
                    "rendered": {
                      "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation during\n                      the performance of a Helm test action. Defaults to 'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                    type: string\n",
                      "markdown": "`                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation during\n                      the performance of a Helm test action. Defaults to 'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                    type: string\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 1933,
                  "startColumn": 21,
                  "endLine": 1933,
                  "endColumn": 30,
                  "snippet": {
                    "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation during\n                      the performance of a Helm test action. Defaults to 'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                    type: string\n",
                    "rendered": {
                      "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation during\n                      the performance of a Helm test action. Defaults to 'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                    type: string\n",
                      "markdown": "`                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation during\n                      the performance of a Helm test action. Defaults to 'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                    type: string\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 1894,
                  "startColumn": 44,
                  "endLine": 1894,
                  "endColumn": 53,
                  "snippet": {
                    "text": "                type: object\n              serviceAccountName:\n                description: |-\n                  The name of the Kubernetes service account to impersonate\n                  when reconciling this HelmRelease.\n                type: string\n              storageNamespace:\n",
                    "rendered": {
                      "text": "                type: object\n              serviceAccountName:\n                description: |-\n                  The name of the Kubernetes service account to impersonate\n                  when reconciling this HelmRelease.\n                type: string\n              storageNamespace:\n",
                      "markdown": "`                type: object\n              serviceAccountName:\n                description: |-\n                  The name of the Kubernetes service account to impersonate\n                  when reconciling this HelmRelease.\n                type: string\n              storageNamespace:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 1886,
                  "startColumn": 36,
                  "endLine": 1886,
                  "endColumn": 42,
                  "snippet": {
                    "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm rollback action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                    "rendered": {
                      "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm rollback action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                      "markdown": "`                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm rollback action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 1886,
                  "startColumn": 21,
                  "endLine": 1886,
                  "endColumn": 30,
                  "snippet": {
                    "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm rollback action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                    "rendered": {
                      "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm rollback action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                      "markdown": "`                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm rollback action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 1594,
                  "startColumn": 64,
                  "endLine": 1594,
                  "endColumn": 73,
                  "snippet": {
                    "text": "                description: |-\n                  KubeConfig for reconciling the HelmRelease on a remote cluster.\n                  When used in combination with HelmReleaseSpec.ServiceAccountName,\n                  forces the controller to act on behalf of that Service Account at the\n                  target cluster.\n                  If the --default-service-account flag is set, its value will be used as\n                  a controller level fallback for when HelmReleaseSpec.ServiceAccountName\n",
                    "rendered": {
                      "text": "                description: |-\n                  KubeConfig for reconciling the HelmRelease on a remote cluster.\n                  When used in combination with HelmReleaseSpec.ServiceAccountName,\n                  forces the controller to act on behalf of that Service Account at the\n                  target cluster.\n                  If the --default-service-account flag is set, its value will be used as\n                  a controller level fallback for when HelmReleaseSpec.ServiceAccountName\n",
                      "markdown": "`                description: |-\n                  KubeConfig for reconciling the HelmRelease on a remote cluster.\n                  When used in combination with HelmReleaseSpec.ServiceAccountName,\n                  forces the controller to act on behalf of that Service Account at the\n                  target cluster.\n                  If the --default-service-account flag is set, its value will be used as\n                  a controller level fallback for when HelmReleaseSpec.ServiceAccountName\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 1577,
                  "startColumn": 36,
                  "endLine": 1577,
                  "endColumn": 42,
                  "snippet": {
                    "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm install action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                    "rendered": {
                      "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm install action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                      "markdown": "`                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm install action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 1577,
                  "startColumn": 21,
                  "endLine": 1577,
                  "endColumn": 30,
                  "snippet": {
                    "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm install action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                    "rendered": {
                      "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm install action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                      "markdown": "`                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm install action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 1054,
                  "startColumn": 59,
                  "endLine": 1054,
                  "endColumn": 65,
                  "snippet": {
                    "text": "                            format: date-time\n                            type: string\n                          lastStarted:\n                            description: LastStarted is the time the test hook was\n                              last started.\n                            format: date-time\n                            type: string\n",
                    "rendered": {
                      "text": "                            format: date-time\n                            type: string\n                          lastStarted:\n                            description: LastStarted is the time the test hook was\n                              last started.\n                            format: date-time\n                            type: string\n",
                      "markdown": "`                            format: date-time\n                            type: string\n                          lastStarted:\n                            description: LastStarted is the time the test hook was\n                              last started.\n                            format: date-time\n                            type: string\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 1049,
                  "startColumn": 61,
                  "endLine": 1049,
                  "endColumn": 67,
                  "snippet": {
                    "text": "                          to be run by the controller.\n                        properties:\n                          lastCompleted:\n                            description: LastCompleted is the time the test hook last\n                              completed.\n                            format: date-time\n                            type: string\n",
                    "rendered": {
                      "text": "                          to be run by the controller.\n                        properties:\n                          lastCompleted:\n                            description: LastCompleted is the time the test hook last\n                              completed.\n                            format: date-time\n                            type: string\n",
                      "markdown": "`                          to be run by the controller.\n                        properties:\n                          lastCompleted:\n                            description: LastCompleted is the time the test hook last\n                              completed.\n                            format: date-time\n                            type: string\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 918,
                  "startColumn": 115,
                  "endLine": 918,
                  "endColumn": 121,
                  "snippet": {
                    "text": "                    lastTransitionTime:\n                      description: |-\n                        lastTransitionTime is the last time the condition transitioned from one status to another.\n                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.\n                      format: date-time\n                      type: string\n                    message:\n",
                    "rendered": {
                      "text": "                    lastTransitionTime:\n                      description: |-\n                        lastTransitionTime is the last time the condition transitioned from one status to another.\n                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.\n                      format: date-time\n                      type: string\n                    message:\n",
                      "markdown": "`                    lastTransitionTime:\n                      description: |-\n                        lastTransitionTime is the last time the condition transitioned from one status to another.\n                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.\n                      format: date-time\n                      type: string\n                    message:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 917,
                  "startColumn": 54,
                  "endLine": 917,
                  "endColumn": 60,
                  "snippet": {
                    "text": "                  properties:\n                    lastTransitionTime:\n                      description: |-\n                        lastTransitionTime is the last time the condition transitioned from one status to another.\n                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.\n                      format: date-time\n                      type: string\n",
                    "rendered": {
                      "text": "                  properties:\n                    lastTransitionTime:\n                      description: |-\n                        lastTransitionTime is the last time the condition transitioned from one status to another.\n                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.\n                      format: date-time\n                      type: string\n",
                      "markdown": "`                  properties:\n                    lastTransitionTime:\n                      description: |-\n                        lastTransitionTime is the last time the condition transitioned from one status to another.\n                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.\n                      format: date-time\n                      type: string\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 839,
                  "startColumn": 36,
                  "endLine": 839,
                  "endColumn": 42,
                  "snippet": {
                    "text": "                    type: object\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm upgrade action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                    "rendered": {
                      "text": "                    type: object\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm upgrade action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                      "markdown": "`                    type: object\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm upgrade action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 839,
                  "startColumn": 21,
                  "endLine": 839,
                  "endColumn": 30,
                  "snippet": {
                    "text": "                    type: object\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm upgrade action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                    "rendered": {
                      "text": "                    type: object\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm upgrade action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                      "markdown": "`                    type: object\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm upgrade action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 736,
                  "startColumn": 36,
                  "endLine": 736,
                  "endColumn": 42,
                  "snippet": {
                    "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm uninstall action. Defaults\n                      to 'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                    "rendered": {
                      "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm uninstall action. Defaults\n                      to 'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                      "markdown": "`                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm uninstall action. Defaults\n                      to 'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 736,
                  "startColumn": 21,
                  "endLine": 736,
                  "endColumn": 30,
                  "snippet": {
                    "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm uninstall action. Defaults\n                      to 'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                    "rendered": {
                      "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm uninstall action. Defaults\n                      to 'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                      "markdown": "`                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm uninstall action. Defaults\n                      to 'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 702,
                  "startColumn": 32,
                  "endLine": 702,
                  "endColumn": 38,
                  "snippet": {
                    "text": "                type: object\n              timeout:\n                description: |-\n                  Timeout is the time to wait for any individual Kubernetes operation (like Jobs\n                  for hooks) during the performance of a Helm action. Defaults to '5m0s'.\n                pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                type: string\n",
                    "rendered": {
                      "text": "                type: object\n              timeout:\n                description: |-\n                  Timeout is the time to wait for any individual Kubernetes operation (like Jobs\n                  for hooks) during the performance of a Helm action. Defaults to '5m0s'.\n                pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                type: string\n",
                      "markdown": "`                type: object\n              timeout:\n                description: |-\n                  Timeout is the time to wait for any individual Kubernetes operation (like Jobs\n                  for hooks) during the performance of a Helm action. Defaults to '5m0s'.\n                pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                type: string\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 702,
                  "startColumn": 17,
                  "endLine": 702,
                  "endColumn": 26,
                  "snippet": {
                    "text": "                type: object\n              timeout:\n                description: |-\n                  Timeout is the time to wait for any individual Kubernetes operation (like Jobs\n                  for hooks) during the performance of a Helm action. Defaults to '5m0s'.\n                pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                type: string\n",
                    "rendered": {
                      "text": "                type: object\n              timeout:\n                description: |-\n                  Timeout is the time to wait for any individual Kubernetes operation (like Jobs\n                  for hooks) during the performance of a Helm action. Defaults to '5m0s'.\n                pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                type: string\n",
                      "markdown": "`                type: object\n              timeout:\n                description: |-\n                  Timeout is the time to wait for any individual Kubernetes operation (like Jobs\n                  for hooks) during the performance of a Helm action. Defaults to '5m0s'.\n                pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                type: string\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 695,
                  "startColumn": 36,
                  "endLine": 695,
                  "endColumn": 42,
                  "snippet": {
                    "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation during\n                      the performance of a Helm test action. Defaults to 'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                    type: string\n",
                    "rendered": {
                      "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation during\n                      the performance of a Helm test action. Defaults to 'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                    type: string\n",
                      "markdown": "`                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation during\n                      the performance of a Helm test action. Defaults to 'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                    type: string\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 695,
                  "startColumn": 21,
                  "endLine": 695,
                  "endColumn": 30,
                  "snippet": {
                    "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation during\n                      the performance of a Helm test action. Defaults to 'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                    type: string\n",
                    "rendered": {
                      "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation during\n                      the performance of a Helm test action. Defaults to 'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                    type: string\n",
                      "markdown": "`                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation during\n                      the performance of a Helm test action. Defaults to 'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n                    type: string\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 634,
                  "startColumn": 44,
                  "endLine": 634,
                  "endColumn": 53,
                  "snippet": {
                    "text": "                type: object\n              serviceAccountName:\n                description: |-\n                  The name of the Kubernetes service account to impersonate\n                  when reconciling this HelmRelease.\n                maxLength: 253\n                minLength: 1\n",
                    "rendered": {
                      "text": "                type: object\n              serviceAccountName:\n                description: |-\n                  The name of the Kubernetes service account to impersonate\n                  when reconciling this HelmRelease.\n                maxLength: 253\n                minLength: 1\n",
                      "markdown": "`                type: object\n              serviceAccountName:\n                description: |-\n                  The name of the Kubernetes service account to impersonate\n                  when reconciling this HelmRelease.\n                maxLength: 253\n                minLength: 1\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 626,
                  "startColumn": 36,
                  "endLine": 626,
                  "endColumn": 42,
                  "snippet": {
                    "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm rollback action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                    "rendered": {
                      "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm rollback action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                      "markdown": "`                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm rollback action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 626,
                  "startColumn": 21,
                  "endLine": 626,
                  "endColumn": 30,
                  "snippet": {
                    "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm rollback action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                    "rendered": {
                      "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm rollback action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                      "markdown": "`                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm rollback action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 434,
                  "startColumn": 64,
                  "endLine": 434,
                  "endColumn": 73,
                  "snippet": {
                    "text": "                description: |-\n                  KubeConfig for reconciling the HelmRelease on a remote cluster.\n                  When used in combination with HelmReleaseSpec.ServiceAccountName,\n                  forces the controller to act on behalf of that Service Account at the\n                  target cluster.\n                  If the --default-service-account flag is set, its value will be used as\n                  a controller level fallback for when HelmReleaseSpec.ServiceAccountName\n",
                    "rendered": {
                      "text": "                description: |-\n                  KubeConfig for reconciling the HelmRelease on a remote cluster.\n                  When used in combination with HelmReleaseSpec.ServiceAccountName,\n                  forces the controller to act on behalf of that Service Account at the\n                  target cluster.\n                  If the --default-service-account flag is set, its value will be used as\n                  a controller level fallback for when HelmReleaseSpec.ServiceAccountName\n",
                      "markdown": "`                description: |-\n                  KubeConfig for reconciling the HelmRelease on a remote cluster.\n                  When used in combination with HelmReleaseSpec.ServiceAccountName,\n                  forces the controller to act on behalf of that Service Account at the\n                  target cluster.\n                  If the --default-service-account flag is set, its value will be used as\n                  a controller level fallback for when HelmReleaseSpec.ServiceAccountName\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 420,
                  "startColumn": 36,
                  "endLine": 420,
                  "endColumn": 42,
                  "snippet": {
                    "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm install action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                    "rendered": {
                      "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm install action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                      "markdown": "`                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm install action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/crd/bases/helm.toolkit.fluxcd.io_helmreleases.yaml"
                },
                "region": {
                  "startLine": 420,
                  "startColumn": 21,
                  "endLine": 420,
                  "endColumn": 30,
                  "snippet": {
                    "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm install action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                    "rendered": {
                      "text": "                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm install action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n",
                      "markdown": "`                    type: boolean\n                  timeout:\n                    description: |-\n                      Timeout is the time to wait for any individual Kubernetes operation (like\n                      Jobs for hooks) during the performance of a Helm install action. Defaults to\n                      'HelmReleaseSpec.Timeout'.\n                    pattern: ^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 160,
                  "startColumn": 15,
                  "endLine": 160,
                  "endColumn": 23,
                  "snippet": {
                    "text": "      digest: ${{ needs.release.outputs.image_digest }}\n      registry-username: fluxcdbot\n    secrets:\n      registry-password: ${{ secrets.GHCR_TOKEN }}\n",
                    "rendered": {
                      "text": "      digest: ${{ needs.release.outputs.image_digest }}\n      registry-username: fluxcdbot\n    secrets:\n      registry-password: ${{ secrets.GHCR_TOKEN }}\n",
                      "markdown": "`      digest: ${{ needs.release.outputs.image_digest }}\n      registry-username: fluxcdbot\n    secrets:\n      registry-password: ${{ secrets.GHCR_TOKEN }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 51,
                  "endLine": 145,
                  "endColumn": 59,
                  "snippet": {
                    "text": "      digest: ${{ needs.release.outputs.image_digest }}\n      registry-username: fluxcdbot\n    secrets:\n      registry-password: ${{ secrets.DOCKER_FLUXCD_PASSWORD }}\n\n  ghcr-provenance:\n    needs: [release]\n",
                    "rendered": {
                      "text": "      digest: ${{ needs.release.outputs.image_digest }}\n      registry-username: fluxcdbot\n    secrets:\n      registry-password: ${{ secrets.DOCKER_FLUXCD_PASSWORD }}\n\n  ghcr-provenance:\n    needs: [release]\n",
                      "markdown": "`      digest: ${{ needs.release.outputs.image_digest }}\n      registry-username: fluxcdbot\n    secrets:\n      registry-password: ${{ secrets.DOCKER_FLUXCD_PASSWORD }}\n\n  ghcr-provenance:\n    needs: [release]\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 15,
                  "endLine": 145,
                  "endColumn": 23,
                  "snippet": {
                    "text": "      digest: ${{ needs.release.outputs.image_digest }}\n      registry-username: fluxcdbot\n    secrets:\n      registry-password: ${{ secrets.DOCKER_FLUXCD_PASSWORD }}\n\n  ghcr-provenance:\n    needs: [release]\n",
                    "rendered": {
                      "text": "      digest: ${{ needs.release.outputs.image_digest }}\n      registry-username: fluxcdbot\n    secrets:\n      registry-password: ${{ secrets.DOCKER_FLUXCD_PASSWORD }}\n\n  ghcr-provenance:\n    needs: [release]\n",
                      "markdown": "`      digest: ${{ needs.release.outputs.image_digest }}\n      registry-username: fluxcdbot\n    secrets:\n      registry-password: ${{ secrets.DOCKER_FLUXCD_PASSWORD }}\n\n  ghcr-provenance:\n    needs: [release]\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 46,
                  "endLine": 59,
                  "endColumn": 54,
                  "snippet": {
                    "text": "        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0\n        with:\n          username: fluxcdbot\n          password: ${{ secrets.DOCKER_FLUXCD_PASSWORD }}\n      - name: Generate images meta\n        id: meta\n        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1\n",
                    "rendered": {
                      "text": "        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0\n        with:\n          username: fluxcdbot\n          password: ${{ secrets.DOCKER_FLUXCD_PASSWORD }}\n      - name: Generate images meta\n        id: meta\n        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1\n",
                      "markdown": "`        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0\n        with:\n          username: fluxcdbot\n          password: ${{ secrets.DOCKER_FLUXCD_PASSWORD }}\n      - name: Generate images meta\n        id: meta\n        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 10,
                  "endLine": 59,
                  "endColumn": 18,
                  "snippet": {
                    "text": "        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0\n        with:\n          username: fluxcdbot\n          password: ${{ secrets.DOCKER_FLUXCD_PASSWORD }}\n      - name: Generate images meta\n        id: meta\n        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1\n",
                    "rendered": {
                      "text": "        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0\n        with:\n          username: fluxcdbot\n          password: ${{ secrets.DOCKER_FLUXCD_PASSWORD }}\n      - name: Generate images meta\n        id: meta\n        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1\n",
                      "markdown": "`        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0\n        with:\n          username: fluxcdbot\n          password: ${{ secrets.DOCKER_FLUXCD_PASSWORD }}\n      - name: Generate images meta\n        id: meta\n        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 10,
                  "endLine": 54,
                  "endColumn": 18,
                  "snippet": {
                    "text": "        with:\n          registry: ghcr.io\n          username: fluxcdbot\n          password: ${{ secrets.GHCR_TOKEN }}\n      - name: Login to Docker Hub\n        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0\n        with:\n",
                    "rendered": {
                      "text": "        with:\n          registry: ghcr.io\n          username: fluxcdbot\n          password: ${{ secrets.GHCR_TOKEN }}\n      - name: Login to Docker Hub\n        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0\n        with:\n",
                      "markdown": "`        with:\n          registry: ghcr.io\n          username: fluxcdbot\n          password: ${{ secrets.GHCR_TOKEN }}\n      - name: Login to Docker Hub\n        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0\n        with:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 6,
                  "endLine": 129,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.0.0\n    with:\n      provenance-name: \"provenance.intoto.jsonl\"\n      base64-subjects: \"${{ needs.release.outputs.hashes }}\"\n      upload-assets: true\n\n  dockerhub-provenance:\n",
                    "rendered": {
                      "text": "    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.0.0\n    with:\n      provenance-name: \"provenance.intoto.jsonl\"\n      base64-subjects: \"${{ needs.release.outputs.hashes }}\"\n      upload-assets: true\n\n  dockerhub-provenance:\n",
                      "markdown": "`    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.0.0\n    with:\n      provenance-name: \"provenance.intoto.jsonl\"\n      base64-subjects: \"${{ needs.release.outputs.hashes }}\"\n      upload-assets: true\n\n  dockerhub-provenance:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 191,
                  "endLine": 110,
                  "endColumn": 197,
                  "snippet": {
                    "text": "        env:\n          ARTIFACTS: \"${{ steps.run-goreleaser.outputs.artifacts }}\"\n        run: |\n          hashes=$(echo -E $ARTIFACTS | jq --raw-output '.[] | {name, \"digest\": (.extra.Digest // .extra.Checksum)} | select(.digest) | {digest} + {name} | join(\"  \") | sub(\"^sha256:\";\"\")' | base64 -w0)\n          echo \"hashes=$hashes\" >> $GITHUB_OUTPUT\n          \n          image_url=fluxcd/${{ env.CONTROLLER }}:${{ steps.prep.outputs.version }}\n",
                    "rendered": {
                      "text": "        env:\n          ARTIFACTS: \"${{ steps.run-goreleaser.outputs.artifacts }}\"\n        run: |\n          hashes=$(echo -E $ARTIFACTS | jq --raw-output '.[] | {name, \"digest\": (.extra.Digest // .extra.Checksum)} | select(.digest) | {digest} + {name} | join(\"  \") | sub(\"^sha256:\";\"\")' | base64 -w0)\n          echo \"hashes=$hashes\" >> $GITHUB_OUTPUT\n          \n          image_url=fluxcd/${{ env.CONTROLLER }}:${{ steps.prep.outputs.version }}\n",
                      "markdown": "`        env:\n          ARTIFACTS: \"${{ steps.run-goreleaser.outputs.artifacts }}\"\n        run: |\n          hashes=$(echo -E $ARTIFACTS | jq --raw-output '.[] | {name, \"digest\": (.extra.Digest // .extra.Checksum)} | select(.digest) | {digest} + {name} | join(\"  \") | sub(\"^sha256:\";\"\")' | base64 -w0)\n          echo \"hashes=$hashes\" >> $GITHUB_OUTPUT\n          \n          image_url=fluxcd/${{ env.CONTROLLER }}:${{ steps.prep.outputs.version }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 190,
                  "endLine": 110,
                  "endColumn": 198,
                  "snippet": {
                    "text": "        env:\n          ARTIFACTS: \"${{ steps.run-goreleaser.outputs.artifacts }}\"\n        run: |\n          hashes=$(echo -E $ARTIFACTS | jq --raw-output '.[] | {name, \"digest\": (.extra.Digest // .extra.Checksum)} | select(.digest) | {digest} + {name} | join(\"  \") | sub(\"^sha256:\";\"\")' | base64 -w0)\n          echo \"hashes=$hashes\" >> $GITHUB_OUTPUT\n          \n          image_url=fluxcd/${{ env.CONTROLLER }}:${{ steps.prep.outputs.version }}\n",
                    "rendered": {
                      "text": "        env:\n          ARTIFACTS: \"${{ steps.run-goreleaser.outputs.artifacts }}\"\n        run: |\n          hashes=$(echo -E $ARTIFACTS | jq --raw-output '.[] | {name, \"digest\": (.extra.Digest // .extra.Checksum)} | select(.digest) | {digest} + {name} | join(\"  \") | sub(\"^sha256:\";\"\")' | base64 -w0)\n          echo \"hashes=$hashes\" >> $GITHUB_OUTPUT\n          \n          image_url=fluxcd/${{ env.CONTROLLER }}:${{ steps.prep.outputs.version }}\n",
                      "markdown": "`        env:\n          ARTIFACTS: \"${{ steps.run-goreleaser.outputs.artifacts }}\"\n        run: |\n          hashes=$(echo -E $ARTIFACTS | jq --raw-output '.[] | {name, \"digest\": (.extra.Digest // .extra.Checksum)} | select(.digest) | {digest} + {name} | join(\"  \") | sub(\"^sha256:\";\"\")' | base64 -w0)\n          echo \"hashes=$hashes\" >> $GITHUB_OUTPUT\n          \n          image_url=fluxcd/${{ env.CONTROLLER }}:${{ steps.prep.outputs.version }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 22,
                  "endLine": 55,
                  "endColumn": 30,
                  "snippet": {
                    "text": "          registry: ghcr.io\n          username: fluxcdbot\n          password: ${{ secrets.GHCR_TOKEN }}\n      - name: Login to Docker Hub\n        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0\n        with:\n          username: fluxcdbot\n",
                    "rendered": {
                      "text": "          registry: ghcr.io\n          username: fluxcdbot\n          password: ${{ secrets.GHCR_TOKEN }}\n      - name: Login to Docker Hub\n        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0\n        with:\n          username: fluxcdbot\n",
                      "markdown": "`          registry: ghcr.io\n          username: fluxcdbot\n          password: ${{ secrets.GHCR_TOKEN }}\n      - name: Login to Docker Hub\n        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0\n        with:\n          username: fluxcdbot\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.github/workflows/release.yml"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 19,
                  "endLine": 46,
                  "endColumn": 27,
                  "snippet": {
                    "text": "          echo \"VERSION=${VERSION}\" >> $GITHUB_OUTPUT\n      - name: Setup QEMU\n        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0\n      - name: Setup Docker Buildx\n        id: buildx\n        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1\n      - name: Login to GitHub Container Registry\n",
                    "rendered": {
                      "text": "          echo \"VERSION=${VERSION}\" >> $GITHUB_OUTPUT\n      - name: Setup QEMU\n        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0\n      - name: Setup Docker Buildx\n        id: buildx\n        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1\n      - name: Login to GitHub Container Registry\n",
                      "markdown": "`          echo \"VERSION=${VERSION}\" >> $GITHUB_OUTPUT\n      - name: Setup QEMU\n        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0\n      - name: Setup Docker Buildx\n        id: buildx\n        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1\n      - name: Login to GitHub Container Registry\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.github/workflows/e2e.yaml"
                },
                "region": {
                  "startLine": 629,
                  "startColumn": 28,
                  "endLine": 629,
                  "endColumn": 34,
                  "snippet": {
                    "text": "            REF=${REF#refs/tags/}\n          else\n            TYPE=branch\n            if echo \"$REF\" | grep 'refs/pull/'; then \n              REF=${REF#refs/pull/}\n            else\n              REF=${REF#refs/heads/}\n",
                    "rendered": {
                      "text": "            REF=${REF#refs/tags/}\n          else\n            TYPE=branch\n            if echo \"$REF\" | grep 'refs/pull/'; then \n              REF=${REF#refs/pull/}\n            else\n              REF=${REF#refs/heads/}\n",
                      "markdown": "`            REF=${REF#refs/tags/}\n          else\n            TYPE=branch\n            if echo \"$REF\" | grep 'refs/pull/'; then \n              REF=${REF#refs/pull/}\n            else\n              REF=${REF#refs/heads/}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.github/workflows/e2e.yaml"
                },
                "region": {
                  "startLine": 624,
                  "startColumn": 26,
                  "endLine": 624,
                  "endColumn": 32,
                  "snippet": {
                    "text": "        if: ${{ startsWith(github.ref, 'refs/tags/') || startsWith(github.ref, 'refs/heads/') }}\n        run: |\n          REF=${{ github.ref }}\n          if echo \"$REF\" | grep 'refs/tags/'; then \n            TYPE=tag\n            REF=${REF#refs/tags/}\n          else\n",
                    "rendered": {
                      "text": "        if: ${{ startsWith(github.ref, 'refs/tags/') || startsWith(github.ref, 'refs/heads/') }}\n        run: |\n          REF=${{ github.ref }}\n          if echo \"$REF\" | grep 'refs/tags/'; then \n            TYPE=tag\n            REF=${REF#refs/tags/}\n          else\n",
                      "markdown": "`        if: ${{ startsWith(github.ref, 'refs/tags/') || startsWith(github.ref, 'refs/heads/') }}\n        run: |\n          REF=${{ github.ref }}\n          if echo \"$REF\" | grep 'refs/tags/'; then \n            TYPE=tag\n            REF=${REF#refs/tags/}\n          else\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.github/workflows/e2e.yaml"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 9,
                  "endLine": 73,
                  "endColumn": 13,
                  "snippet": {
                    "text": "        name: Move cache\n        run: |\n          rm -rf /tmp/.buildx-cache\n          mv /tmp/.buildx-cache-new /tmp/.buildx-cache\n      - name: Load test image\n        run: kind load docker-image test/helm-controller:latest\n      - name: Install CRDs\n",
                    "rendered": {
                      "text": "        name: Move cache\n        run: |\n          rm -rf /tmp/.buildx-cache\n          mv /tmp/.buildx-cache-new /tmp/.buildx-cache\n      - name: Load test image\n        run: kind load docker-image test/helm-controller:latest\n      - name: Install CRDs\n",
                      "markdown": "`        name: Move cache\n        run: |\n          rm -rf /tmp/.buildx-cache\n          mv /tmp/.buildx-cache-new /tmp/.buildx-cache\n      - name: Load test image\n        run: kind load docker-image test/helm-controller:latest\n      - name: Install CRDs\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.github/workflows/e2e.yaml"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 26,
                  "endLine": 57,
                  "snippet": {
                    "text": "      - name: Check if working tree is dirty\n        run: |\n          if [[ $(git diff --stat) != '' ]]; then\n            git --no-pager diff\n            echo 'run make test and commit changes'\n            exit 1\n          fi\n      - name: Build container image\n",
                    "rendered": {
                      "text": "      - name: Check if working tree is dirty\n        run: |\n          if [[ $(git diff --stat) != '' ]]; then\n            git --no-pager diff\n            echo 'run make test and commit changes'\n            exit 1\n          fi\n      - name: Build container image\n",
                      "markdown": "`      - name: Check if working tree is dirty\n        run: |\n          if [[ $(git diff --stat) != '' ]]; then\n            git --no-pager diff\n            echo 'run make test and commit changes'\n            exit 1\n          fi\n      - name: Build container image\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.github/workflows/e2e.yaml"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 11,
                  "endLine": 56,
                  "endColumn": 16,
                  "snippet": {
                    "text": "      - name: Check if working tree is dirty\n        run: |\n          if [[ $(git diff --stat) != '' ]]; then\n            git --no-pager diff\n            echo 'run make test and commit changes'\n            exit 1\n          fi\n",
                    "rendered": {
                      "text": "      - name: Check if working tree is dirty\n        run: |\n          if [[ $(git diff --stat) != '' ]]; then\n            git --no-pager diff\n            echo 'run make test and commit changes'\n            exit 1\n          fi\n",
                      "markdown": "`      - name: Check if working tree is dirty\n        run: |\n          if [[ $(git diff --stat) != '' ]]; then\n            git --no-pager diff\n            echo 'run make test and commit changes'\n            exit 1\n          fi\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.github/workflows/e2e.yaml"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 21,
                  "endLine": 55,
                  "endColumn": 27,
                  "snippet": {
                    "text": "        run: make test\n      - name: Check if working tree is dirty\n        run: |\n          if [[ $(git diff --stat) != '' ]]; then\n            git --no-pager diff\n            echo 'run make test and commit changes'\n            exit 1\n",
                    "rendered": {
                      "text": "        run: make test\n      - name: Check if working tree is dirty\n        run: |\n          if [[ $(git diff --stat) != '' ]]; then\n            git --no-pager diff\n            echo 'run make test and commit changes'\n            exit 1\n",
                      "markdown": "`        run: make test\n      - name: Check if working tree is dirty\n        run: |\n          if [[ $(git diff --stat) != '' ]]; then\n            git --no-pager diff\n            echo 'run make test and commit changes'\n            exit 1\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.github/workflows/e2e.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 19,
                  "endLine": 26,
                  "endColumn": 27,
                  "snippet": {
                    "text": "        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1\n        with:\n          buildkitd-flags: \"--debug\"\n      - name: Cache Docker layers\n        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2\n        id: cache\n        with:\n",
                    "rendered": {
                      "text": "        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1\n        with:\n          buildkitd-flags: \"--debug\"\n      - name: Cache Docker layers\n        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2\n        id: cache\n        with:\n",
                      "markdown": "`        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1\n        with:\n          buildkitd-flags: \"--debug\"\n      - name: Cache Docker layers\n        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2\n        id: cache\n        with:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.github/workflows/e2e.yaml"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 19,
                  "endLine": 21,
                  "endColumn": 27,
                  "snippet": {
                    "text": "        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0\n      - name: Setup QEMU\n        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0\n      - name: Setup Docker Buildx\n        id: buildx\n        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1\n        with:\n",
                    "rendered": {
                      "text": "        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0\n      - name: Setup QEMU\n        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0\n      - name: Setup Docker Buildx\n        id: buildx\n        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1\n        with:\n",
                      "markdown": "`        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0\n      - name: Setup QEMU\n        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0\n      - name: Setup Docker Buildx\n        id: buildx\n        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1\n        with:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.github/workflows/nightly.yaml"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 19,
                  "endLine": 21,
                  "endColumn": 27,
                  "snippet": {
                    "text": "        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0\n      - name: Setup QEMU\n        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0\n      - name: Setup Docker Buildx\n        id: buildx\n        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1\n        with:\n",
                    "rendered": {
                      "text": "        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0\n      - name: Setup QEMU\n        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0\n      - name: Setup Docker Buildx\n        id: buildx\n        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1\n        with:\n",
                      "markdown": "`        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0\n      - name: Setup QEMU\n        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0\n      - name: Setup Docker Buildx\n        id: buildx\n        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1\n        with:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.github/dependabot.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 29,
                  "endLine": 27,
                  "endColumn": 33,
                  "snippet": {
                    "text": "      - dependency-name: \"github.com/opencontainers/*\"\n      # Helm deps are updated by fluxcd/pkg/helmtestserver\n      - dependency-name: \"helm.sh/helm/*\"\n      # Flux APIs are updated at release time\n      - dependency-name: \"github.com/fluxcd/helm-controller/api\"\n      - dependency-name: \"github.com/fluxcd/source-controller/api\"\n  - package-ecosystem: \"github-actions\"\n",
                    "rendered": {
                      "text": "      - dependency-name: \"github.com/opencontainers/*\"\n      # Helm deps are updated by fluxcd/pkg/helmtestserver\n      - dependency-name: \"helm.sh/helm/*\"\n      # Flux APIs are updated at release time\n      - dependency-name: \"github.com/fluxcd/helm-controller/api\"\n      - dependency-name: \"github.com/fluxcd/source-controller/api\"\n  - package-ecosystem: \"github-actions\"\n",
                      "markdown": "`      - dependency-name: \"github.com/opencontainers/*\"\n      # Helm deps are updated by fluxcd/pkg/helmtestserver\n      - dependency-name: \"helm.sh/helm/*\"\n      # Flux APIs are updated at release time\n      - dependency-name: \"github.com/fluxcd/helm-controller/api\"\n      - dependency-name: \"github.com/fluxcd/source-controller/api\"\n  - package-ecosystem: \"github-actions\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.github/dependabot.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 40,
                  "endLine": 28,
                  "snippet": {
                    "text": "      - dependency-name: \"github.com/opencontainers/*\"\n      # Helm deps are updated by fluxcd/pkg/helmtestserver\n      - dependency-name: \"helm.sh/helm/*\"\n      # Flux APIs are updated at release time\n      - dependency-name: \"github.com/fluxcd/helm-controller/api\"\n      - dependency-name: \"github.com/fluxcd/source-controller/api\"\n  - package-ecosystem: \"github-actions\"\n    directory: \"/\"\n",
                    "rendered": {
                      "text": "      - dependency-name: \"github.com/opencontainers/*\"\n      # Helm deps are updated by fluxcd/pkg/helmtestserver\n      - dependency-name: \"helm.sh/helm/*\"\n      # Flux APIs are updated at release time\n      - dependency-name: \"github.com/fluxcd/helm-controller/api\"\n      - dependency-name: \"github.com/fluxcd/source-controller/api\"\n  - package-ecosystem: \"github-actions\"\n    directory: \"/\"\n",
                      "markdown": "`      - dependency-name: \"github.com/opencontainers/*\"\n      # Helm deps are updated by fluxcd/pkg/helmtestserver\n      - dependency-name: \"helm.sh/helm/*\"\n      # Flux APIs are updated at release time\n      - dependency-name: \"github.com/fluxcd/helm-controller/api\"\n      - dependency-name: \"github.com/fluxcd/source-controller/api\"\n  - package-ecosystem: \"github-actions\"\n    directory: \"/\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/api/v2beta1/helmrelease_types.go"
                },
                "region": {
                  "startLine": 838,
                  "endLine": 838,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// DisableHooks prevents hooks from running during the Helm rollback action.\n\t// +optional\n",
                    "rendered": {
                      "text": "\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// DisableHooks prevents hooks from running during the Helm rollback action.\n\t// +optional\n",
                      "markdown": "`\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// DisableHooks prevents hooks from running during the Helm rollback action.\n\t// +optional\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/api/v2beta1/helmrelease_types.go"
                },
                "region": {
                  "startLine": 790,
                  "endLine": 790,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// DisableWait disables the waiting for resources to be ready after a Helm\n\t// rollback has been performed.\n",
                    "rendered": {
                      "text": "\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// DisableWait disables the waiting for resources to be ready after a Helm\n\t// rollback has been performed.\n",
                      "markdown": "`\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// DisableWait disables the waiting for resources to be ready after a Helm\n\t// rollback has been performed.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/api/v2beta1/helmrelease_types.go"
                },
                "region": {
                  "startLine": 763,
                  "endLine": 763,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// IgnoreFailures tells the controller to skip remediation when the Helm tests\n\t// are run but fail. Can be overwritten for tests run after install or upgrade\n",
                    "rendered": {
                      "text": "\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// IgnoreFailures tells the controller to skip remediation when the Helm tests\n\t// are run but fail. Can be overwritten for tests run after install or upgrade\n",
                      "markdown": "`\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// IgnoreFailures tells the controller to skip remediation when the Helm tests\n\t// are run but fail. Can be overwritten for tests run after install or upgrade\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/api/v2beta1/helmrelease_types.go"
                },
                "region": {
                  "startLine": 580,
                  "endLine": 580,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// Remediation holds the remediation configuration for when the Helm upgrade\n\t// action for the HelmRelease fails. The default is to not perform any action.\n",
                    "rendered": {
                      "text": "\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// Remediation holds the remediation configuration for when the Helm upgrade\n\t// action for the HelmRelease fails. The default is to not perform any action.\n",
                      "markdown": "`\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// Remediation holds the remediation configuration for when the Helm upgrade\n\t// action for the HelmRelease fails. The default is to not perform any action.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/api/v2beta1/helmrelease_types.go"
                },
                "region": {
                  "startLine": 402,
                  "endLine": 402,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// Remediation holds the remediation configuration for when the Helm install\n\t// action for the HelmRelease fails. The default is to not perform any action.\n",
                    "rendered": {
                      "text": "\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// Remediation holds the remediation configuration for when the Helm install\n\t// action for the HelmRelease fails. The default is to not perform any action.\n",
                      "markdown": "`\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// Remediation holds the remediation configuration for when the Helm install\n\t// action for the HelmRelease fails. The default is to not perform any action.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/api/v2beta1/helmrelease_types.go"
                },
                "region": {
                  "startLine": 141,
                  "endLine": 141,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// MaxHistory is the number of revisions saved by Helm for this HelmRelease.\n\t// Use '0' for an unlimited number of revisions; defaults to '10'.\n",
                    "rendered": {
                      "text": "\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// MaxHistory is the number of revisions saved by Helm for this HelmRelease.\n\t// Use '0' for an unlimited number of revisions; defaults to '10'.\n",
                      "markdown": "`\t// +kubebuilder:validation:Type=string\n\t// +kubebuilder:validation:Pattern=\"^([0-9]+(\\\\.[0-9]+)?(ms|s|m|h))+$\"\n\t// +optional\n\tTimeout *metav1.Duration `json:\"timeout,omitempty\"`\n\n\t// MaxHistory is the number of revisions saved by Helm for this HelmRelease.\n\t// Use '0' for an unlimited number of revisions; defaults to '10'.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/api/v2beta2/annotations_test.go"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 44,
                  "endLine": 76,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\t\t}\n\n\t\tif obj.Status.LastHandledForceAt != \"b\" {\n\t\t\tt.Error(\"ShouldHandleForceRequest did not update LastHandledForceAt\")\n\t\t}\n\t})\n}\n",
                    "rendered": {
                      "text": "\t\t}\n\n\t\tif obj.Status.LastHandledForceAt != \"b\" {\n\t\t\tt.Error(\"ShouldHandleForceRequest did not update LastHandledForceAt\")\n\t\t}\n\t})\n}\n",
                      "markdown": "`\t\t}\n\n\t\tif obj.Status.LastHandledForceAt != \"b\" {\n\t\t\tt.Error(\"ShouldHandleForceRequest did not update LastHandledForceAt\")\n\t\t}\n\t})\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/api/v2beta2/annotations_test.go"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 44,
                  "endLine": 49,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\t\t}\n\n\t\tif obj.Status.LastHandledResetAt != \"b\" {\n\t\t\tt.Error(\"ShouldHandleResetRequest did not update LastHandledResetAt\")\n\t\t}\n\t})\n}\n",
                    "rendered": {
                      "text": "\t\t}\n\n\t\tif obj.Status.LastHandledResetAt != \"b\" {\n\t\t\tt.Error(\"ShouldHandleResetRequest did not update LastHandledResetAt\")\n\t\t}\n\t})\n}\n",
                      "markdown": "`\t\t}\n\n\t\tif obj.Status.LastHandledResetAt != \"b\" {\n\t\t\tt.Error(\"ShouldHandleResetRequest did not update LastHandledResetAt\")\n\t\t}\n\t})\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/action/crds.go"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 22,
                  "endLine": 142,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t\t// release.\n\t\toriginal := make(helmkube.ResourceList, 0)\n\t\tfor _, r := range allCRDs {\n\t\t\tif o, err := client.Get(context.TODO(), r.Name, metav1.GetOptions{}); err == nil && o != nil {\n\t\t\t\to.GetResourceVersion()\n\t\t\t\toriginal = append(original, &resource.Info{\n\t\t\t\t\tClient: clientSet.ApiextensionsV1().RESTClient(),\n",
                    "rendered": {
                      "text": "\t\t// release.\n\t\toriginal := make(helmkube.ResourceList, 0)\n\t\tfor _, r := range allCRDs {\n\t\t\tif o, err := client.Get(context.TODO(), r.Name, metav1.GetOptions{}); err == nil && o != nil {\n\t\t\t\to.GetResourceVersion()\n\t\t\t\toriginal = append(original, &resource.Info{\n\t\t\t\t\tClient: clientSet.ApiextensionsV1().RESTClient(),\n",
                      "markdown": "`\t\t// release.\n\t\toriginal := make(helmkube.ResourceList, 0)\n\t\tfor _, r := range allCRDs {\n\t\t\tif o, err := client.Get(context.TODO(), r.Name, metav1.GetOptions{}); err == nil && o != nil {\n\t\t\t\to.GetResourceVersion()\n\t\t\t\toriginal = append(original, &resource.Info{\n\t\t\t\t\tClient: clientSet.ApiextensionsV1().RESTClient(),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/action/crds.go"
                },
                "region": {
                  "startLine": 173,
                  "startColumn": 30,
                  "endLine": 173,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\n\t\t// Send them to Kubernetes...\n\t\tif rr, err := cfg.KubeClient.Update(original, allCRDs, true); err != nil {\n\t\t\terr = fmt.Errorf(\"failed to update CustomResourceDefinition(s): %w\", err)\n\t\t\treturn err\n\t\t} else {\n\t\t\tif rr != nil {\n",
                    "rendered": {
                      "text": "\n\t\t// Send them to Kubernetes...\n\t\tif rr, err := cfg.KubeClient.Update(original, allCRDs, true); err != nil {\n\t\t\terr = fmt.Errorf(\"failed to update CustomResourceDefinition(s): %w\", err)\n\t\t\treturn err\n\t\t} else {\n\t\t\tif rr != nil {\n",
                      "markdown": "`\n\t\t// Send them to Kubernetes...\n\t\tif rr, err := cfg.KubeClient.Update(original, allCRDs, true); err != nil {\n\t\t\terr = fmt.Errorf(\"failed to update CustomResourceDefinition(s): %w\", err)\n\t\t\treturn err\n\t\t} else {\n\t\t\tif rr != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/action/verify.go"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 27,
                  "endLine": 103,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t\treturn nil, ErrReleaseNotFound\n\t}\n\n\trls, err = config.Releases.Get(snapshot.Name, snapshot.Version)\n\tif err != nil {\n\t\tif errors.Is(err, helmdriver.ErrReleaseNotFound) {\n\t\t\treturn nil, ErrReleaseDisappeared\n",
                    "rendered": {
                      "text": "\t\treturn nil, ErrReleaseNotFound\n\t}\n\n\trls, err = config.Releases.Get(snapshot.Name, snapshot.Version)\n\tif err != nil {\n\t\tif errors.Is(err, helmdriver.ErrReleaseNotFound) {\n\t\t\treturn nil, ErrReleaseDisappeared\n",
                      "markdown": "`\t\treturn nil, ErrReleaseNotFound\n\t}\n\n\trls, err = config.Releases.Get(snapshot.Name, snapshot.Version)\n\tif err != nil {\n\t\tif errors.Is(err, helmdriver.ErrReleaseNotFound) {\n\t\t\treturn nil, ErrReleaseDisappeared\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/action/diff_test.go"
                },
                "region": {
                  "startLine": 707,
                  "startColumn": 14,
                  "endLine": 707,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t\t\tg.Expect(got.Entries[1].Action).To(Equal(ssa.ConfiguredAction))\n\n\t\t\t\tcm2 := &corev1.ConfigMap{}\n\t\t\t\tg.Expect(c.Get(context.TODO(), types.NamespacedName{\n\t\t\t\t\tNamespace: namespace,\n\t\t\t\t\tName:      \"test-cm-2\",\n\t\t\t\t}, cm2)).To(Succeed())\n",
                    "rendered": {
                      "text": "\t\t\t\tg.Expect(got.Entries[1].Action).To(Equal(ssa.ConfiguredAction))\n\n\t\t\t\tcm2 := &corev1.ConfigMap{}\n\t\t\t\tg.Expect(c.Get(context.TODO(), types.NamespacedName{\n\t\t\t\t\tNamespace: namespace,\n\t\t\t\t\tName:      \"test-cm-2\",\n\t\t\t\t}, cm2)).To(Succeed())\n",
                      "markdown": "`\t\t\t\tg.Expect(got.Entries[1].Action).To(Equal(ssa.ConfiguredAction))\n\n\t\t\t\tcm2 := &corev1.ConfigMap{}\n\t\t\t\tg.Expect(c.Get(context.TODO(), types.NamespacedName{\n\t\t\t\t\tNamespace: namespace,\n\t\t\t\t\tName:      \"test-cm-2\",\n\t\t\t\t}, cm2)).To(Succeed())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/action/diff_test.go"
                },
                "region": {
                  "startLine": 698,
                  "startColumn": 14,
                  "endLine": 698,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\n\t\t\t\tg.Expect(got.Entries[0].Subject).To(Equal(\"ConfigMap/\" + namespace + \"/test-cm\"))\n\t\t\t\tg.Expect(got.Entries[0].Action).To(Equal(ssa.CreatedAction))\n\t\t\t\tg.Expect(c.Get(context.TODO(), types.NamespacedName{\n\t\t\t\t\tNamespace: namespace,\n\t\t\t\t\tName:      \"test-cm\",\n\t\t\t\t}, &corev1.ConfigMap{})).To(Succeed())\n",
                    "rendered": {
                      "text": "\n\t\t\t\tg.Expect(got.Entries[0].Subject).To(Equal(\"ConfigMap/\" + namespace + \"/test-cm\"))\n\t\t\t\tg.Expect(got.Entries[0].Action).To(Equal(ssa.CreatedAction))\n\t\t\t\tg.Expect(c.Get(context.TODO(), types.NamespacedName{\n\t\t\t\t\tNamespace: namespace,\n\t\t\t\t\tName:      \"test-cm\",\n\t\t\t\t}, &corev1.ConfigMap{})).To(Succeed())\n",
                      "markdown": "`\n\t\t\t\tg.Expect(got.Entries[0].Subject).To(Equal(\"ConfigMap/\" + namespace + \"/test-cm\"))\n\t\t\t\tg.Expect(got.Entries[0].Action).To(Equal(ssa.CreatedAction))\n\t\t\t\tg.Expect(c.Get(context.TODO(), types.NamespacedName{\n\t\t\t\t\tNamespace: namespace,\n\t\t\t\t\tName:      \"test-cm\",\n\t\t\t\t}, &corev1.ConfigMap{})).To(Succeed())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/action/diff_test.go"
                },
                "region": {
                  "startLine": 564,
                  "startColumn": 14,
                  "endLine": 564,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t\t\tg.Expect(got.Entries[1].Subject).To(Equal(\"ConfigMap/\" + namespace + \"/test-cm\"))\n\t\t\t\tg.Expect(got.Entries[1].Action).To(Equal(ssa.ConfiguredAction))\n\t\t\t\tcm := &corev1.ConfigMap{}\n\t\t\t\tg.Expect(c.Get(context.TODO(), types.NamespacedName{\n\t\t\t\t\tNamespace: namespace,\n\t\t\t\t\tName:      \"test-cm\",\n\t\t\t\t}, cm)).To(Succeed())\n",
                    "rendered": {
                      "text": "\t\t\t\tg.Expect(got.Entries[1].Subject).To(Equal(\"ConfigMap/\" + namespace + \"/test-cm\"))\n\t\t\t\tg.Expect(got.Entries[1].Action).To(Equal(ssa.ConfiguredAction))\n\t\t\t\tcm := &corev1.ConfigMap{}\n\t\t\t\tg.Expect(c.Get(context.TODO(), types.NamespacedName{\n\t\t\t\t\tNamespace: namespace,\n\t\t\t\t\tName:      \"test-cm\",\n\t\t\t\t}, cm)).To(Succeed())\n",
                      "markdown": "`\t\t\t\tg.Expect(got.Entries[1].Subject).To(Equal(\"ConfigMap/\" + namespace + \"/test-cm\"))\n\t\t\t\tg.Expect(got.Entries[1].Action).To(Equal(ssa.ConfiguredAction))\n\t\t\t\tcm := &corev1.ConfigMap{}\n\t\t\t\tg.Expect(c.Get(context.TODO(), types.NamespacedName{\n\t\t\t\t\tNamespace: namespace,\n\t\t\t\t\tName:      \"test-cm\",\n\t\t\t\t}, cm)).To(Succeed())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/action/diff_test.go"
                },
                "region": {
                  "startLine": 556,
                  "startColumn": 14,
                  "endLine": 556,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\n\t\t\t\tg.Expect(got.Entries[0].Subject).To(Equal(\"Secret/\" + namespace + \"/test-secret\"))\n\t\t\t\tg.Expect(got.Entries[0].Action).To(Equal(ssa.CreatedAction))\n\t\t\t\tg.Expect(c.Get(context.TODO(), types.NamespacedName{\n\t\t\t\t\tNamespace: namespace,\n\t\t\t\t\tName:      \"test-secret\",\n\t\t\t\t}, &corev1.Secret{})).To(Succeed())\n",
                    "rendered": {
                      "text": "\n\t\t\t\tg.Expect(got.Entries[0].Subject).To(Equal(\"Secret/\" + namespace + \"/test-secret\"))\n\t\t\t\tg.Expect(got.Entries[0].Action).To(Equal(ssa.CreatedAction))\n\t\t\t\tg.Expect(c.Get(context.TODO(), types.NamespacedName{\n\t\t\t\t\tNamespace: namespace,\n\t\t\t\t\tName:      \"test-secret\",\n\t\t\t\t}, &corev1.Secret{})).To(Succeed())\n",
                      "markdown": "`\n\t\t\t\tg.Expect(got.Entries[0].Subject).To(Equal(\"Secret/\" + namespace + \"/test-secret\"))\n\t\t\t\tg.Expect(got.Entries[0].Action).To(Equal(ssa.CreatedAction))\n\t\t\t\tg.Expect(c.Get(context.TODO(), types.NamespacedName{\n\t\t\t\t\tNamespace: namespace,\n\t\t\t\t\tName:      \"test-secret\",\n\t\t\t\t}, &corev1.Secret{})).To(Succeed())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/action/diff_test.go"
                },
                "region": {
                  "startLine": 638,
                  "startColumn": 19,
                  "endLine": 638,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tType: extjsondiff.OperationReplace,\n\t\t\t\t\t\t\t\tPath: \"/data/key\",\n\t\t\t\t\t\t\t\t// Illegal base64 encoded data.\n\t\t\t\t\t\t\t\tValue: \"value\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tType: extjsondiff.OperationReplace,\n\t\t\t\t\t\t\t\tPath: \"/data/key\",\n\t\t\t\t\t\t\t\t// Illegal base64 encoded data.\n\t\t\t\t\t\t\t\tValue: \"value\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n",
                      "markdown": "`\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tType: extjsondiff.OperationReplace,\n\t\t\t\t\t\t\t\tPath: \"/data/key\",\n\t\t\t\t\t\t\t\t// Illegal base64 encoded data.\n\t\t\t\t\t\t\t\tValue: \"value\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/action/diff_test.go"
                },
                "region": {
                  "startLine": 616,
                  "startColumn": 20,
                  "endLine": 616,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t\t\t\t\t\t\t\t\t\"namespace\": namespace,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"data\": map[string]interface{}{\n\t\t\t\t\t\t\t\t\t// Illegal base64 encoded data.\n\t\t\t\t\t\t\t\t\t\"key\": \"secret value2\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t\t\t\t\t\t\t\t\"namespace\": namespace,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"data\": map[string]interface{}{\n\t\t\t\t\t\t\t\t\t// Illegal base64 encoded data.\n\t\t\t\t\t\t\t\t\t\"key\": \"secret value2\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n",
                      "markdown": "`\t\t\t\t\t\t\t\t\t\"namespace\": namespace,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"data\": map[string]interface{}{\n\t\t\t\t\t\t\t\t\t// Illegal base64 encoded data.\n\t\t\t\t\t\t\t\t\t\"key\": \"secret value2\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/action/diff_test.go"
                },
                "region": {
                  "startLine": 586,
                  "startColumn": 20,
                  "endLine": 586,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t\t\t\t\t\t\t\t\t\"namespace\": namespace,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"data\": map[string]interface{}{\n\t\t\t\t\t\t\t\t\t// Illegal base64 encoded data.\n\t\t\t\t\t\t\t\t\t\"key\": \"secret value\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t\t\t\t\t\t\t\t\"namespace\": namespace,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"data\": map[string]interface{}{\n\t\t\t\t\t\t\t\t\t// Illegal base64 encoded data.\n\t\t\t\t\t\t\t\t\t\"key\": \"secret value\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n",
                      "markdown": "`\t\t\t\t\t\t\t\t\t\"namespace\": namespace,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"data\": map[string]interface{}{\n\t\t\t\t\t\t\t\t\t// Illegal base64 encoded data.\n\t\t\t\t\t\t\t\t\t\"key\": \"secret value\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/action/diff_test.go"
                },
                "region": {
                  "startLine": 268,
                  "startColumn": 18,
                  "endLine": 268,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t\t\t\t\t\t\t\tType:     extjsondiff.OperationReplace,\n\t\t\t\t\t\t\t\tPath:     \"/data/otherKey\",\n\t\t\t\t\t\t\t\tOldValue: base64.StdEncoding.EncodeToString([]byte(\"changed\")),\n\t\t\t\t\t\t\t\tValue:    base64.StdEncoding.EncodeToString([]byte(\"otherValue\")),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t\t\t\t\t\t\tType:     extjsondiff.OperationReplace,\n\t\t\t\t\t\t\t\tPath:     \"/data/otherKey\",\n\t\t\t\t\t\t\t\tOldValue: base64.StdEncoding.EncodeToString([]byte(\"changed\")),\n\t\t\t\t\t\t\t\tValue:    base64.StdEncoding.EncodeToString([]byte(\"otherValue\")),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n",
                      "markdown": "`\t\t\t\t\t\t\t\tType:     extjsondiff.OperationReplace,\n\t\t\t\t\t\t\t\tPath:     \"/data/otherKey\",\n\t\t\t\t\t\t\t\tOldValue: base64.StdEncoding.EncodeToString([]byte(\"changed\")),\n\t\t\t\t\t\t\t\tValue:    base64.StdEncoding.EncodeToString([]byte(\"otherValue\")),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/action/diff_test.go"
                },
                "region": {
                  "startLine": 267,
                  "startColumn": 18,
                  "endLine": 267,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tType:     extjsondiff.OperationReplace,\n\t\t\t\t\t\t\t\tPath:     \"/data/otherKey\",\n\t\t\t\t\t\t\t\tOldValue: base64.StdEncoding.EncodeToString([]byte(\"changed\")),\n\t\t\t\t\t\t\t\tValue:    base64.StdEncoding.EncodeToString([]byte(\"otherValue\")),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tType:     extjsondiff.OperationReplace,\n\t\t\t\t\t\t\t\tPath:     \"/data/otherKey\",\n\t\t\t\t\t\t\t\tOldValue: base64.StdEncoding.EncodeToString([]byte(\"changed\")),\n\t\t\t\t\t\t\t\tValue:    base64.StdEncoding.EncodeToString([]byte(\"otherValue\")),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n",
                      "markdown": "`\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tType:     extjsondiff.OperationReplace,\n\t\t\t\t\t\t\t\tPath:     \"/data/otherKey\",\n\t\t\t\t\t\t\t\tOldValue: base64.StdEncoding.EncodeToString([]byte(\"changed\")),\n\t\t\t\t\t\t\t\tValue:    base64.StdEncoding.EncodeToString([]byte(\"otherValue\")),\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/action/diff_test.go"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 11,
                  "endLine": 21,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\nimport (\n\t\"context\"\n\t\"encoding/base64\"\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n",
                    "rendered": {
                      "text": "\nimport (\n\t\"context\"\n\t\"encoding/base64\"\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n",
                      "markdown": "`\nimport (\n\t\"context\"\n\t\"encoding/base64\"\n\t\"fmt\"\n\t\"strings\"\n\t\"testing\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/action/diff_test.go"
                },
                "region": {
                  "startLine": 776,
                  "startColumn": 20,
                  "endLine": 776,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n\t\t\tdiff := tt.diffSet(ns.Name)\n\n\t\t\tfor _, d := range diff {\n\t\t\t\tif d.ClusterObject != nil {\n\t\t\t\t\tif err := c.Create(ctx, d.ClusterObject, client.FieldOwner(testOwner)); err != nil {\n\t\t\t\t\t\tt.Fatalf(\"Failed to create cluster object: %v\", err)\n",
                    "rendered": {
                      "text": "\n\t\t\tdiff := tt.diffSet(ns.Name)\n\n\t\t\tfor _, d := range diff {\n\t\t\t\tif d.ClusterObject != nil {\n\t\t\t\t\tif err := c.Create(ctx, d.ClusterObject, client.FieldOwner(testOwner)); err != nil {\n\t\t\t\t\t\tt.Fatalf(\"Failed to create cluster object: %v\", err)\n",
                      "markdown": "`\n\t\t\tdiff := tt.diffSet(ns.Name)\n\n\t\t\tfor _, d := range diff {\n\t\t\t\tif d.ClusterObject != nil {\n\t\t\t\t\tif err := c.Create(ctx, d.ClusterObject, client.FieldOwner(testOwner)); err != nil {\n\t\t\t\t\t\tt.Fatalf(\"Failed to create cluster object: %v\", err)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/action/diff_test.go"
                },
                "region": {
                  "startLine": 774,
                  "startColumn": 2,
                  "endLine": 774,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t\t\t\t}\n\t\t\t})\n\n\t\t\tdiff := tt.diffSet(ns.Name)\n\n\t\t\tfor _, d := range diff {\n\t\t\t\tif d.ClusterObject != nil {\n",
                    "rendered": {
                      "text": "\t\t\t\t}\n\t\t\t})\n\n\t\t\tdiff := tt.diffSet(ns.Name)\n\n\t\t\tfor _, d := range diff {\n\t\t\t\tif d.ClusterObject != nil {\n",
                      "markdown": "`\t\t\t\t}\n\t\t\t})\n\n\t\t\tdiff := tt.diffSet(ns.Name)\n\n\t\t\tfor _, d := range diff {\n\t\t\t\tif d.ClusterObject != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/action/diff_test.go"
                },
                "region": {
                  "startLine": 638,
                  "startColumn": 18,
                  "endLine": 638,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tType: extjsondiff.OperationReplace,\n\t\t\t\t\t\t\t\tPath: \"/data/key\",\n\t\t\t\t\t\t\t\t// Illegal base64 encoded data.\n\t\t\t\t\t\t\t\tValue: \"value\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tType: extjsondiff.OperationReplace,\n\t\t\t\t\t\t\t\tPath: \"/data/key\",\n\t\t\t\t\t\t\t\t// Illegal base64 encoded data.\n\t\t\t\t\t\t\t\tValue: \"value\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n",
                      "markdown": "`\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tType: extjsondiff.OperationReplace,\n\t\t\t\t\t\t\t\tPath: \"/data/key\",\n\t\t\t\t\t\t\t\t// Illegal base64 encoded data.\n\t\t\t\t\t\t\t\tValue: \"value\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/action/diff_test.go"
                },
                "region": {
                  "startLine": 616,
                  "startColumn": 19,
                  "endLine": 616,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t\t\t\t\t\t\t\t\t\"namespace\": namespace,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"data\": map[string]interface{}{\n\t\t\t\t\t\t\t\t\t// Illegal base64 encoded data.\n\t\t\t\t\t\t\t\t\t\"key\": \"secret value2\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t\t\t\t\t\t\t\t\"namespace\": namespace,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"data\": map[string]interface{}{\n\t\t\t\t\t\t\t\t\t// Illegal base64 encoded data.\n\t\t\t\t\t\t\t\t\t\"key\": \"secret value2\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n",
                      "markdown": "`\t\t\t\t\t\t\t\t\t\"namespace\": namespace,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"data\": map[string]interface{}{\n\t\t\t\t\t\t\t\t\t// Illegal base64 encoded data.\n\t\t\t\t\t\t\t\t\t\"key\": \"secret value2\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/action/diff_test.go"
                },
                "region": {
                  "startLine": 586,
                  "startColumn": 19,
                  "endLine": 586,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t\t\t\t\t\t\t\t\t\"namespace\": namespace,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"data\": map[string]interface{}{\n\t\t\t\t\t\t\t\t\t// Illegal base64 encoded data.\n\t\t\t\t\t\t\t\t\t\"key\": \"secret value\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t\t\t\t\t\t\t\t\"namespace\": namespace,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"data\": map[string]interface{}{\n\t\t\t\t\t\t\t\t\t// Illegal base64 encoded data.\n\t\t\t\t\t\t\t\t\t\"key\": \"secret value\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n",
                      "markdown": "`\t\t\t\t\t\t\t\t\t\"namespace\": namespace,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"data\": map[string]interface{}{\n\t\t\t\t\t\t\t\t\t// Illegal base64 encoded data.\n\t\t\t\t\t\t\t\t\t\"key\": \"secret value\",\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/action/diff_test.go"
                },
                "region": {
                  "startLine": 486,
                  "startColumn": 1,
                  "endLine": 486,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\ttests := []struct {\n\t\tname    string\n\t\tdiffSet func(namespace string) jsondiff.DiffSet\n\t\texpect  func(g *GomegaWithT, namespace string, got *ssa.ChangeSet, err error)\n\t}{\n\t\t{\n\t\t\tname: \"creates and updates resources\",\n",
                    "rendered": {
                      "text": "\ttests := []struct {\n\t\tname    string\n\t\tdiffSet func(namespace string) jsondiff.DiffSet\n\t\texpect  func(g *GomegaWithT, namespace string, got *ssa.ChangeSet, err error)\n\t}{\n\t\t{\n\t\t\tname: \"creates and updates resources\",\n",
                      "markdown": "`\ttests := []struct {\n\t\tname    string\n\t\tdiffSet func(namespace string) jsondiff.DiffSet\n\t\texpect  func(g *GomegaWithT, namespace string, got *ssa.ChangeSet, err error)\n\t}{\n\t\t{\n\t\t\tname: \"creates and updates resources\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/action/diff_test.go"
                },
                "region": {
                  "startLine": 453,
                  "startColumn": 85,
                  "endLine": 453,
                  "endColumn": 91,
                  "snippet": {
                    "text": "\t\t\tif tt.want != nil {\n\t\t\t\twant = tt.want(ns.Name, objs, clusterObjs)\n\t\t\t}\n\t\t\tif diff := cmp.Diff(want, got, cmpopts.IgnoreUnexported(extjsondiff.Operation{})); diff != \"\" {\n\t\t\t\tt.Errorf(\"Diff() mismatch (-want +got):\\n%s\", diff)\n\t\t\t}\n\t\t})\n",
                    "rendered": {
                      "text": "\t\t\tif tt.want != nil {\n\t\t\t\twant = tt.want(ns.Name, objs, clusterObjs)\n\t\t\t}\n\t\t\tif diff := cmp.Diff(want, got, cmpopts.IgnoreUnexported(extjsondiff.Operation{})); diff != \"\" {\n\t\t\t\tt.Errorf(\"Diff() mismatch (-want +got):\\n%s\", diff)\n\t\t\t}\n\t\t})\n",
                      "markdown": "`\t\t\tif tt.want != nil {\n\t\t\t\twant = tt.want(ns.Name, objs, clusterObjs)\n\t\t\t}\n\t\t\tif diff := cmp.Diff(want, got, cmpopts.IgnoreUnexported(extjsondiff.Operation{})); diff != \"\" {\n\t\t\t\tt.Errorf(\"Diff() mismatch (-want +got):\\n%s\", diff)\n\t\t\t}\n\t\t})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/action/diff_test.go"
                },
                "region": {
                  "startLine": 453,
                  "startColumn": 5,
                  "endLine": 453,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\t\tif tt.want != nil {\n\t\t\t\twant = tt.want(ns.Name, objs, clusterObjs)\n\t\t\t}\n\t\t\tif diff := cmp.Diff(want, got, cmpopts.IgnoreUnexported(extjsondiff.Operation{})); diff != \"\" {\n\t\t\t\tt.Errorf(\"Diff() mismatch (-want +got):\\n%s\", diff)\n\t\t\t}\n\t\t})\n",
                    "rendered": {
                      "text": "\t\t\tif tt.want != nil {\n\t\t\t\twant = tt.want(ns.Name, objs, clusterObjs)\n\t\t\t}\n\t\t\tif diff := cmp.Diff(want, got, cmpopts.IgnoreUnexported(extjsondiff.Operation{})); diff != \"\" {\n\t\t\t\tt.Errorf(\"Diff() mismatch (-want +got):\\n%s\", diff)\n\t\t\t}\n\t\t})\n",
                      "markdown": "`\t\t\tif tt.want != nil {\n\t\t\t\twant = tt.want(ns.Name, objs, clusterObjs)\n\t\t\t}\n\t\t\tif diff := cmp.Diff(want, got, cmpopts.IgnoreUnexported(extjsondiff.Operation{})); diff != \"\" {\n\t\t\t\tt.Errorf(\"Diff() mismatch (-want +got):\\n%s\", diff)\n\t\t\t}\n\t\t})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/action/reset_test.go"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 34,
                  "endLine": 101,
                  "endColumn": 76,
                  "snippet": {
                    "text": "\t\t\t\tStatus: v2.HelmReleaseStatus{\n\t\t\t\t\tLastAttemptedGeneration:     1,\n\t\t\t\t\tLastAttemptedRevision:       \"1.0.0\",\n\t\t\t\t\tLastAttemptedValuesChecksum: \"a856118d270c0db44a9019d51e2bba4fc3e6bac7\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tchart: &chart.Metadata{\n",
                    "rendered": {
                      "text": "\t\t\t\tStatus: v2.HelmReleaseStatus{\n\t\t\t\t\tLastAttemptedGeneration:     1,\n\t\t\t\t\tLastAttemptedRevision:       \"1.0.0\",\n\t\t\t\t\tLastAttemptedValuesChecksum: \"a856118d270c0db44a9019d51e2bba4fc3e6bac7\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tchart: &chart.Metadata{\n",
                      "markdown": "`\t\t\t\tStatus: v2.HelmReleaseStatus{\n\t\t\t\t\tLastAttemptedGeneration:     1,\n\t\t\t\t\tLastAttemptedRevision:       \"1.0.0\",\n\t\t\t\t\tLastAttemptedValuesChecksum: \"a856118d270c0db44a9019d51e2bba4fc3e6bac7\",\n\t\t\t\t},\n\t\t\t},\n\t\t\tchart: &chart.Metadata{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/kube/config_test.go"
                },
                "region": {
                  "startLine": 196,
                  "startColumn": 21,
                  "endLine": 196,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\t\t\tNamespace: \"vault\",\n\t\t\t},\n\t\t\tData: map[string][]byte{\n\t\t\t\tDefaultKubeConfigSecretKey: []byte(kubeCfg),\n\t\t\t},\n\t\t}\n\t\tgot, err := ConfigFromSecret(secret, \"\", client.KubeConfigOptions{\n",
                    "rendered": {
                      "text": "\t\t\t\tNamespace: \"vault\",\n\t\t\t},\n\t\t\tData: map[string][]byte{\n\t\t\t\tDefaultKubeConfigSecretKey: []byte(kubeCfg),\n\t\t\t},\n\t\t}\n\t\tgot, err := ConfigFromSecret(secret, \"\", client.KubeConfigOptions{\n",
                      "markdown": "`\t\t\t\tNamespace: \"vault\",\n\t\t\t},\n\t\t\tData: map[string][]byte{\n\t\t\t\tDefaultKubeConfigSecretKey: []byte(kubeCfg),\n\t\t\t},\n\t\t}\n\t\tgot, err := ConfigFromSecret(secret, \"\", client.KubeConfigOptions{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/kube/config_test.go"
                },
                "region": {
                  "startLine": 177,
                  "startColumn": 21,
                  "endLine": 177,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\t\t\tNamespace: \"vault\",\n\t\t\t},\n\t\t\tData: map[string][]byte{\n\t\t\t\tDefaultKubeConfigSecretKeyExt: []byte(\"bad\"),\n\t\t\t},\n\t\t}\n\n",
                    "rendered": {
                      "text": "\t\t\t\tNamespace: \"vault\",\n\t\t\t},\n\t\t\tData: map[string][]byte{\n\t\t\t\tDefaultKubeConfigSecretKeyExt: []byte(\"bad\"),\n\t\t\t},\n\t\t}\n\n",
                      "markdown": "`\t\t\t\tNamespace: \"vault\",\n\t\t\t},\n\t\t\tData: map[string][]byte{\n\t\t\t\tDefaultKubeConfigSecretKeyExt: []byte(\"bad\"),\n\t\t\t},\n\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/kube/config_test.go"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 21,
                  "endLine": 80,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\t\t\tNamespace: \"vault\",\n\t\t\t},\n\t\t\tData: map[string][]byte{\n\t\t\t\tDefaultKubeConfigSecretKeyExt: []byte(kubeCfg),\n\t\t\t},\n\t\t}\n\t\tgot, err := ConfigFromSecret(secret, \"\", client.KubeConfigOptions{})\n",
                    "rendered": {
                      "text": "\t\t\t\tNamespace: \"vault\",\n\t\t\t},\n\t\t\tData: map[string][]byte{\n\t\t\t\tDefaultKubeConfigSecretKeyExt: []byte(kubeCfg),\n\t\t\t},\n\t\t}\n\t\tgot, err := ConfigFromSecret(secret, \"\", client.KubeConfigOptions{})\n",
                      "markdown": "`\t\t\t\tNamespace: \"vault\",\n\t\t\t},\n\t\t\tData: map[string][]byte{\n\t\t\t\tDefaultKubeConfigSecretKeyExt: []byte(kubeCfg),\n\t\t\t},\n\t\t}\n\t\tgot, err := ConfigFromSecret(secret, \"\", client.KubeConfigOptions{})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/kube/config_test.go"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 21,
                  "endLine": 63,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\t\tData: map[string][]byte{\n\t\t\t\tDefaultKubeConfigSecretKey: []byte(kubeCfg),\n\t\t\t\t// Also confirm priority.\n\t\t\t\tDefaultKubeConfigSecretKeyExt: []byte(\"bad\"),\n\t\t\t},\n\t\t}\n\t\tgot, err := ConfigFromSecret(secret, \"\", client.KubeConfigOptions{})\n",
                    "rendered": {
                      "text": "\t\t\tData: map[string][]byte{\n\t\t\t\tDefaultKubeConfigSecretKey: []byte(kubeCfg),\n\t\t\t\t// Also confirm priority.\n\t\t\t\tDefaultKubeConfigSecretKeyExt: []byte(\"bad\"),\n\t\t\t},\n\t\t}\n\t\tgot, err := ConfigFromSecret(secret, \"\", client.KubeConfigOptions{})\n",
                      "markdown": "`\t\t\tData: map[string][]byte{\n\t\t\t\tDefaultKubeConfigSecretKey: []byte(kubeCfg),\n\t\t\t\t// Also confirm priority.\n\t\t\t\tDefaultKubeConfigSecretKeyExt: []byte(\"bad\"),\n\t\t\t},\n\t\t}\n\t\tgot, err := ConfigFromSecret(secret, \"\", client.KubeConfigOptions{})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/kube/config_test.go"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 21,
                  "endLine": 61,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\t\t\tNamespace: \"vault\",\n\t\t\t},\n\t\t\tData: map[string][]byte{\n\t\t\t\tDefaultKubeConfigSecretKey: []byte(kubeCfg),\n\t\t\t\t// Also confirm priority.\n\t\t\t\tDefaultKubeConfigSecretKeyExt: []byte(\"bad\"),\n\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t\t\tNamespace: \"vault\",\n\t\t\t},\n\t\t\tData: map[string][]byte{\n\t\t\t\tDefaultKubeConfigSecretKey: []byte(kubeCfg),\n\t\t\t\t// Also confirm priority.\n\t\t\t\tDefaultKubeConfigSecretKeyExt: []byte(\"bad\"),\n\t\t\t},\n",
                      "markdown": "`\t\t\t\tNamespace: \"vault\",\n\t\t\t},\n\t\t\tData: map[string][]byte{\n\t\t\t\tDefaultKubeConfigSecretKey: []byte(kubeCfg),\n\t\t\t\t// Also confirm priority.\n\t\t\t\tDefaultKubeConfigSecretKeyExt: []byte(\"bad\"),\n\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/kube/config_test.go"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 19,
                  "endLine": 47,
                  "endColumn": 27,
                  "snippet": {
                    "text": "users:\n- name: developer\n  user:\n    password: some-password\n    username: exp`\n)\n\n",
                    "rendered": {
                      "text": "users:\n- name: developer\n  user:\n    password: some-password\n    username: exp`\n)\n\n",
                      "markdown": "`users:\n- name: developer\n  user:\n    password: some-password\n    username: exp`\n)\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/kube/config_test.go"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 4,
                  "endLine": 47,
                  "endColumn": 12,
                  "snippet": {
                    "text": "users:\n- name: developer\n  user:\n    password: some-password\n    username: exp`\n)\n\n",
                    "rendered": {
                      "text": "users:\n- name: developer\n  user:\n    password: some-password\n    username: exp`\n)\n\n",
                      "markdown": "`users:\n- name: developer\n  user:\n    password: some-password\n    username: exp`\n)\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/storage/failing.go"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 16,
                  "endLine": 63,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\tif o.GetErr != nil {\n\t\treturn nil, o.GetErr\n\t}\n\treturn o.Driver.Get(key)\n}\n\n// List returns ListErr, or the embedded driver result.\n",
                    "rendered": {
                      "text": "\tif o.GetErr != nil {\n\t\treturn nil, o.GetErr\n\t}\n\treturn o.Driver.Get(key)\n}\n\n// List returns ListErr, or the embedded driver result.\n",
                      "markdown": "`\tif o.GetErr != nil {\n\t\treturn nil, o.GetErr\n\t}\n\treturn o.Driver.Get(key)\n}\n\n// List returns ListErr, or the embedded driver result.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/storage/failing.go"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 28,
                  "endLine": 45,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\t// CreateErr is returned by Create if configured. If not set, the embedded\n\t// driver result is returned.\n\tCreateErr error\n\t// UpdateErr is returned by Update if configured. If not set, the embedded\n\t// driver result is returned.\n\tUpdateErr error\n\t// DeleteErr is returned by Delete if configured. If not set, the embedded\n",
                    "rendered": {
                      "text": "\t// CreateErr is returned by Create if configured. If not set, the embedded\n\t// driver result is returned.\n\tCreateErr error\n\t// UpdateErr is returned by Update if configured. If not set, the embedded\n\t// driver result is returned.\n\tUpdateErr error\n\t// DeleteErr is returned by Delete if configured. If not set, the embedded\n",
                      "markdown": "`\t// CreateErr is returned by Create if configured. If not set, the embedded\n\t// driver result is returned.\n\tCreateErr error\n\t// UpdateErr is returned by Update if configured. If not set, the embedded\n\t// driver result is returned.\n\tUpdateErr error\n\t// DeleteErr is returned by Delete if configured. If not set, the embedded\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/storage/observer.go"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 16,
                  "endLine": 66,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\n// Get returns the release named by key or returns ErrReleaseNotFound.\nfunc (o *Observer) Get(key string) (*helmrelease.Release, error) {\n\treturn o.driver.Get(key)\n}\n\n// List returns the list of all releases such that filter(release) == true.\n",
                    "rendered": {
                      "text": "\n// Get returns the release named by key or returns ErrReleaseNotFound.\nfunc (o *Observer) Get(key string) (*helmrelease.Release, error) {\n\treturn o.driver.Get(key)\n}\n\n// List returns the list of all releases such that filter(release) == true.\n",
                      "markdown": "`\n// Get returns the release named by key or returns ErrReleaseNotFound.\nfunc (o *Observer) Get(key string) (*helmrelease.Release, error) {\n\treturn o.driver.Get(key)\n}\n\n// List returns the list of all releases such that filter(release) == true.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/storage/observer_test.go"
                },
                "region": {
                  "startLine": 191,
                  "startColumn": 13,
                  "endLine": 191,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t\tg.Expect(got).ToNot(BeNil())\n\t\tg.Expect(called).To(BeTrue())\n\n\t\t_, err = ms.Get(key)\n\t\tg.Expect(err).To(Equal(helmdriver.ErrReleaseNotFound))\n\t})\n\n",
                    "rendered": {
                      "text": "\t\tg.Expect(got).ToNot(BeNil())\n\t\tg.Expect(called).To(BeTrue())\n\n\t\t_, err = ms.Get(key)\n\t\tg.Expect(err).To(Equal(helmdriver.ErrReleaseNotFound))\n\t})\n\n",
                      "markdown": "`\t\tg.Expect(got).ToNot(BeNil())\n\t\tg.Expect(called).To(BeTrue())\n\n\t\t_, err = ms.Get(key)\n\t\tg.Expect(err).To(Equal(helmdriver.ErrReleaseNotFound))\n\t})\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/storage/observer_test.go"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 15,
                  "endLine": 49,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t\tcalled = true\n\t\t})\n\n\t\tgot, err := o.Get(key)\n\t\tg.Expect(err).ToNot(HaveOccurred())\n\t\tg.Expect(got).To(Equal(rel))\n\t\tg.Expect(called).To(BeFalse())\n",
                    "rendered": {
                      "text": "\t\t\tcalled = true\n\t\t})\n\n\t\tgot, err := o.Get(key)\n\t\tg.Expect(err).ToNot(HaveOccurred())\n\t\tg.Expect(got).To(Equal(rel))\n\t\tg.Expect(called).To(BeFalse())\n",
                      "markdown": "`\t\t\tcalled = true\n\t\t})\n\n\t\tgot, err := o.Get(key)\n\t\tg.Expect(err).ToNot(HaveOccurred())\n\t\tg.Expect(got).To(Equal(rel))\n\t\tg.Expect(called).To(BeFalse())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/storage/observer_test.go"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 15,
                  "endLine": 157,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t\tg.Expect(called).To(BeTrue())\n\t})\n\n\tt.Run(\"ignores update error\", func(t *testing.T) {\n\t\tg := NewWithT(t)\n\n\t\tvar called bool\n",
                    "rendered": {
                      "text": "\t\tg.Expect(called).To(BeTrue())\n\t})\n\n\tt.Run(\"ignores update error\", func(t *testing.T) {\n\t\tg := NewWithT(t)\n\n\t\tvar called bool\n",
                      "markdown": "`\t\tg.Expect(called).To(BeTrue())\n\t})\n\n\tt.Run(\"ignores update error\", func(t *testing.T) {\n\t\tg := NewWithT(t)\n\n\t\tvar called bool\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/storage/observer_test.go"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 16,
                  "endLine": 140,
                  "endColumn": 24,
                  "snippet": {
                    "text": "}\n\nfunc TestObserver_Update(t *testing.T) {\n\tt.Run(\"observes update success\", func(t *testing.T) {\n\t\tg := NewWithT(t)\n\n\t\tms := helmdriver.NewMemory()\n",
                    "rendered": {
                      "text": "}\n\nfunc TestObserver_Update(t *testing.T) {\n\tt.Run(\"observes update success\", func(t *testing.T) {\n\t\tg := NewWithT(t)\n\n\t\tms := helmdriver.NewMemory()\n",
                      "markdown": "`}\n\nfunc TestObserver_Update(t *testing.T) {\n\tt.Run(\"observes update success\", func(t *testing.T) {\n\t\tg := NewWithT(t)\n\n\t\tms := helmdriver.NewMemory()\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/postrender/origin_labels_test.go"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 5,
                  "endLine": 59,
                  "snippet": {
                    "text": "  name: pod-without-labels\n---\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    existing: label\n    helm.toolkit.fluxcd.io/name: name\n",
                    "rendered": {
                      "text": "  name: pod-without-labels\n---\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    existing: label\n    helm.toolkit.fluxcd.io/name: name\n",
                      "markdown": "`  name: pod-without-labels\n---\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    existing: label\n    helm.toolkit.fluxcd.io/name: name\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/postrender/origin_labels_test.go"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 5,
                  "endLine": 33,
                  "snippet": {
                    "text": "  name: pod-without-labels\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: service-with-labels\n  labels:\n    existing: label\n",
                    "rendered": {
                      "text": "  name: pod-without-labels\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: service-with-labels\n  labels:\n    existing: label\n",
                      "markdown": "`  name: pod-without-labels\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: service-with-labels\n  labels:\n    existing: label\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/loader/testdata/chart-0.1.0.tgz/chart-0.tar/chart/values.yaml"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 19,
                  "endLine": 22,
                  "endColumn": 28,
                  "snippet": {
                    "text": "  create: true\n  # Annotations to add to the service account\n  annotations: {}\n  # The name of the service account to use.\n  # If not set and create is true, a name is generated using the fullname template\n  name: \"\"\n\n",
                    "rendered": {
                      "text": "  create: true\n  # Annotations to add to the service account\n  annotations: {}\n  # The name of the service account to use.\n  # If not set and create is true, a name is generated using the fullname template\n  name: \"\"\n\n",
                      "markdown": "`  create: true\n  # Annotations to add to the service account\n  annotations: {}\n  # The name of the service account to use.\n  # If not set and create is true, a name is generated using the fullname template\n  name: \"\"\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/loader/testdata/chart-0.1.0.tgz/chart-0.tar/chart/values.yaml"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 29,
                  "endLine": 20,
                  "endColumn": 38,
                  "snippet": {
                    "text": "serviceAccount:\n  # Specifies whether a service account should be created\n  create: true\n  # Annotations to add to the service account\n  annotations: {}\n  # The name of the service account to use.\n  # If not set and create is true, a name is generated using the fullname template\n",
                    "rendered": {
                      "text": "serviceAccount:\n  # Specifies whether a service account should be created\n  create: true\n  # Annotations to add to the service account\n  annotations: {}\n  # The name of the service account to use.\n  # If not set and create is true, a name is generated using the fullname template\n",
                      "markdown": "`serviceAccount:\n  # Specifies whether a service account should be created\n  create: true\n  # Annotations to add to the service account\n  annotations: {}\n  # The name of the service account to use.\n  # If not set and create is true, a name is generated using the fullname template\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/loader/testdata/chart-0.1.0.tgz/chart-0.tar/chart/values.yaml"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 23,
                  "endLine": 18,
                  "endColumn": 32,
                  "snippet": {
                    "text": "fullnameOverride: \"\"\n\nserviceAccount:\n  # Specifies whether a service account should be created\n  create: true\n  # Annotations to add to the service account\n  annotations: {}\n",
                    "rendered": {
                      "text": "fullnameOverride: \"\"\n\nserviceAccount:\n  # Specifies whether a service account should be created\n  create: true\n  # Annotations to add to the service account\n  annotations: {}\n",
                      "markdown": "`fullnameOverride: \"\"\n\nserviceAccount:\n  # Specifies whether a service account should be created\n  create: true\n  # Annotations to add to the service account\n  annotations: {}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/loader/artifact_url_test.go"
                },
                "region": {
                  "startLine": 209,
                  "startColumn": 44,
                  "endLine": 209,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\t}\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\tgot, err := overwriteHostname(tt.URL, tt.hostname)\n\t\t\tif (err != nil) != tt.wantErr {\n\t\t\t\tt.Errorf(\"overwriteHostname() error = %v, wantErr %v\", err, tt.wantErr)\n\t\t\t\treturn\n",
                    "rendered": {
                      "text": "\t}\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\tgot, err := overwriteHostname(tt.URL, tt.hostname)\n\t\t\tif (err != nil) != tt.wantErr {\n\t\t\t\tt.Errorf(\"overwriteHostname() error = %v, wantErr %v\", err, tt.wantErr)\n\t\t\t\treturn\n",
                      "markdown": "`\t}\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\tgot, err := overwriteHostname(tt.URL, tt.hostname)\n\t\t\tif (err != nil) != tt.wantErr {\n\t\t\t\tt.Errorf(\"overwriteHostname() error = %v, wantErr %v\", err, tt.wantErr)\n\t\t\t\treturn\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/loader/artifact_url_test.go"
                },
                "region": {
                  "startLine": 203,
                  "startColumn": 3,
                  "endLine": 203,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\t{\n\t\t\tname:     \"no hostname\",\n\t\t\tURL:      \"http://example.com\",\n\t\t\thostname: \"\",\n\t\t\twant:     \"http://example.com\",\n\t\t},\n\t}\n",
                    "rendered": {
                      "text": "\t\t{\n\t\t\tname:     \"no hostname\",\n\t\t\tURL:      \"http://example.com\",\n\t\t\thostname: \"\",\n\t\t\twant:     \"http://example.com\",\n\t\t},\n\t}\n",
                      "markdown": "`\t\t{\n\t\t\tname:     \"no hostname\",\n\t\t\tURL:      \"http://example.com\",\n\t\t\thostname: \"\",\n\t\t\twant:     \"http://example.com\",\n\t\t},\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/loader/artifact_url_test.go"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 17,
                  "endLine": 201,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\t\twant:     \"http://localhost:9090\",\n\t\t},\n\t\t{\n\t\t\tname:     \"no hostname\",\n\t\t\tURL:      \"http://example.com\",\n\t\t\thostname: \"\",\n\t\t\twant:     \"http://example.com\",\n",
                    "rendered": {
                      "text": "\t\t\twant:     \"http://localhost:9090\",\n\t\t},\n\t\t{\n\t\t\tname:     \"no hostname\",\n\t\t\tURL:      \"http://example.com\",\n\t\t\thostname: \"\",\n\t\t\twant:     \"http://example.com\",\n",
                      "markdown": "`\t\t\twant:     \"http://localhost:9090\",\n\t\t},\n\t\t{\n\t\t\tname:     \"no hostname\",\n\t\t\tURL:      \"http://example.com\",\n\t\t\thostname: \"\",\n\t\t\twant:     \"http://example.com\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/loader/artifact_url_test.go"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 3,
                  "endLine": 197,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\t{\n\t\t\tname:     \"overwrite hostname with port\",\n\t\t\tURL:      \"http://example.com\",\n\t\t\thostname: \"localhost:9090\",\n\t\t\twant:     \"http://localhost:9090\",\n\t\t},\n\t\t{\n",
                    "rendered": {
                      "text": "\t\t{\n\t\t\tname:     \"overwrite hostname with port\",\n\t\t\tURL:      \"http://example.com\",\n\t\t\thostname: \"localhost:9090\",\n\t\t\twant:     \"http://localhost:9090\",\n\t\t},\n\t\t{\n",
                      "markdown": "`\t\t{\n\t\t\tname:     \"overwrite hostname with port\",\n\t\t\tURL:      \"http://example.com\",\n\t\t\thostname: \"localhost:9090\",\n\t\t\twant:     \"http://localhost:9090\",\n\t\t},\n\t\t{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/loader/artifact_url_test.go"
                },
                "region": {
                  "startLine": 195,
                  "startColumn": 24,
                  "endLine": 195,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t\t\twant:     \"http://localhost\",\n\t\t},\n\t\t{\n\t\t\tname:     \"overwrite hostname with port\",\n\t\t\tURL:      \"http://example.com\",\n\t\t\thostname: \"localhost:9090\",\n\t\t\twant:     \"http://localhost:9090\",\n",
                    "rendered": {
                      "text": "\t\t\twant:     \"http://localhost\",\n\t\t},\n\t\t{\n\t\t\tname:     \"overwrite hostname with port\",\n\t\t\tURL:      \"http://example.com\",\n\t\t\thostname: \"localhost:9090\",\n\t\t\twant:     \"http://localhost:9090\",\n",
                      "markdown": "`\t\t\twant:     \"http://localhost\",\n\t\t},\n\t\t{\n\t\t\tname:     \"overwrite hostname with port\",\n\t\t\tURL:      \"http://example.com\",\n\t\t\thostname: \"localhost:9090\",\n\t\t\twant:     \"http://localhost:9090\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/loader/artifact_url_test.go"
                },
                "region": {
                  "startLine": 191,
                  "startColumn": 3,
                  "endLine": 191,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\t{\n\t\t\tname:     \"overwrite hostname\",\n\t\t\tURL:      \"http://example.com\",\n\t\t\thostname: \"localhost\",\n\t\t\twant:     \"http://localhost\",\n\t\t},\n\t\t{\n",
                    "rendered": {
                      "text": "\t\t{\n\t\t\tname:     \"overwrite hostname\",\n\t\t\tURL:      \"http://example.com\",\n\t\t\thostname: \"localhost\",\n\t\t\twant:     \"http://localhost\",\n\t\t},\n\t\t{\n",
                      "markdown": "`\t\t{\n\t\t\tname:     \"overwrite hostname\",\n\t\t\tURL:      \"http://example.com\",\n\t\t\thostname: \"localhost\",\n\t\t\twant:     \"http://localhost\",\n\t\t},\n\t\t{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/loader/artifact_url_test.go"
                },
                "region": {
                  "startLine": 189,
                  "startColumn": 24,
                  "endLine": 189,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t\twantErr  bool\n\t}{\n\t\t{\n\t\t\tname:     \"overwrite hostname\",\n\t\t\tURL:      \"http://example.com\",\n\t\t\thostname: \"localhost\",\n\t\t\twant:     \"http://localhost\",\n",
                    "rendered": {
                      "text": "\t\twantErr  bool\n\t}{\n\t\t{\n\t\t\tname:     \"overwrite hostname\",\n\t\t\tURL:      \"http://example.com\",\n\t\t\thostname: \"localhost\",\n\t\t\twant:     \"http://localhost\",\n",
                      "markdown": "`\t\twantErr  bool\n\t}{\n\t\t{\n\t\t\tname:     \"overwrite hostname\",\n\t\t\tURL:      \"http://example.com\",\n\t\t\thostname: \"localhost\",\n\t\t\twant:     \"http://localhost\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/loader/artifact_url_test.go"
                },
                "region": {
                  "startLine": 184,
                  "startColumn": 2,
                  "endLine": 184,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\ttests := []struct {\n\t\tname     string\n\t\tURL      string\n\t\thostname string\n\t\twant     string\n\t\twantErr  bool\n\t}{\n",
                    "rendered": {
                      "text": "\ttests := []struct {\n\t\tname     string\n\t\tURL      string\n\t\thostname string\n\t\twant     string\n\t\twantErr  bool\n\t}{\n",
                      "markdown": "`\ttests := []struct {\n\t\tname     string\n\t\tURL      string\n\t\thostname string\n\t\twant     string\n\t\twantErr  bool\n\t}{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/loader/artifact_url_test.go"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 19,
                  "endLine": 76,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t\tg.Expect(got.Metadata.Version).To(Equal(\"0.1.0\"))\n\t})\n\n\tt.Run(\"overwrites hostname\", func(t *testing.T) {\n\t\tg := NewWithT(t)\n\n\t\tt.Setenv(envSourceControllerLocalhost, strings.TrimPrefix(server.URL, \"http://\"))\n",
                    "rendered": {
                      "text": "\t\tg.Expect(got.Metadata.Version).To(Equal(\"0.1.0\"))\n\t})\n\n\tt.Run(\"overwrites hostname\", func(t *testing.T) {\n\t\tg := NewWithT(t)\n\n\t\tt.Setenv(envSourceControllerLocalhost, strings.TrimPrefix(server.URL, \"http://\"))\n",
                      "markdown": "`\t\tg.Expect(got.Metadata.Version).To(Equal(\"0.1.0\"))\n\t})\n\n\tt.Run(\"overwrites hostname\", func(t *testing.T) {\n\t\tg := NewWithT(t)\n\n\t\tt.Setenv(envSourceControllerLocalhost, strings.TrimPrefix(server.URL, \"http://\"))\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/loader/artifact_url.go"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 10,
                  "endLine": 123,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\tif err != nil {\n\t\treturn \"\", fmt.Errorf(\"failed to parse URL to overwrite hostname: %w\", err)\n\t}\n\tu.Host = hostname\n\treturn u.String(), nil\n}\n",
                    "rendered": {
                      "text": "\tif err != nil {\n\t\treturn \"\", fmt.Errorf(\"failed to parse URL to overwrite hostname: %w\", err)\n\t}\n\tu.Host = hostname\n\treturn u.String(), nil\n}\n",
                      "markdown": "`\tif err != nil {\n\t\treturn \"\", fmt.Errorf(\"failed to parse URL to overwrite hostname: %w\", err)\n\t}\n\tu.Host = hostname\n\treturn u.String(), nil\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/loader/artifact_url.go"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 58,
                  "endLine": 121,
                  "endColumn": 66,
                  "snippet": {
                    "text": "\n\tu, err := url.Parse(URL)\n\tif err != nil {\n\t\treturn \"\", fmt.Errorf(\"failed to parse URL to overwrite hostname: %w\", err)\n\t}\n\tu.Host = hostname\n\treturn u.String(), nil\n",
                    "rendered": {
                      "text": "\n\tu, err := url.Parse(URL)\n\tif err != nil {\n\t\treturn \"\", fmt.Errorf(\"failed to parse URL to overwrite hostname: %w\", err)\n\t}\n\tu.Host = hostname\n\treturn u.String(), nil\n",
                      "markdown": "`\n\tu, err := url.Parse(URL)\n\tif err != nil {\n\t\treturn \"\", fmt.Errorf(\"failed to parse URL to overwrite hostname: %w\", err)\n\t}\n\tu.Host = hostname\n\treturn u.String(), nil\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/loader/artifact_url.go"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 4,
                  "endLine": 115,
                  "endColumn": 12,
                  "snippet": {
                    "text": "// overwriteHostname overwrites the hostname of the given URL with the given\n// hostname. If the hostname is empty, the URL is returned unmodified.\nfunc overwriteHostname(URL, hostname string) (string, error) {\n\tif hostname == \"\" {\n\t\treturn URL, nil\n\t}\n\n",
                    "rendered": {
                      "text": "// overwriteHostname overwrites the hostname of the given URL with the given\n// hostname. If the hostname is empty, the URL is returned unmodified.\nfunc overwriteHostname(URL, hostname string) (string, error) {\n\tif hostname == \"\" {\n\t\treturn URL, nil\n\t}\n\n",
                      "markdown": "`// overwriteHostname overwrites the hostname of the given URL with the given\n// hostname. If the hostname is empty, the URL is returned unmodified.\nfunc overwriteHostname(URL, hostname string) (string, error) {\n\tif hostname == \"\" {\n\t\treturn URL, nil\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/loader/artifact_url.go"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 28,
                  "endLine": 114,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\n// overwriteHostname overwrites the hostname of the given URL with the given\n// hostname. If the hostname is empty, the URL is returned unmodified.\nfunc overwriteHostname(URL, hostname string) (string, error) {\n\tif hostname == \"\" {\n\t\treturn URL, nil\n\t}\n",
                    "rendered": {
                      "text": "\n// overwriteHostname overwrites the hostname of the given URL with the given\n// hostname. If the hostname is empty, the URL is returned unmodified.\nfunc overwriteHostname(URL, hostname string) (string, error) {\n\tif hostname == \"\" {\n\t\treturn URL, nil\n\t}\n",
                      "markdown": "`\n// overwriteHostname overwrites the hostname of the given URL with the given\n// hostname. If the hostname is empty, the URL is returned unmodified.\nfunc overwriteHostname(URL, hostname string) (string, error) {\n\tif hostname == \"\" {\n\t\treturn URL, nil\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/testutil/equal_cmp.go"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 37,
                  "endLine": 67,
                  "snippet": {
                    "text": "\nfunc (matcher *equalCmpMatcher) NegatedFailureMessage(actual interface{}) (message string) {\n\tdiff := cmp.Diff(matcher.expected, actual, matcher.options)\n\treturn \"Mismatch (-want, +got):\\n\" + diff\n}\n",
                    "rendered": {
                      "text": "\nfunc (matcher *equalCmpMatcher) NegatedFailureMessage(actual interface{}) (message string) {\n\tdiff := cmp.Diff(matcher.expected, actual, matcher.options)\n\treturn \"Mismatch (-want, +got):\\n\" + diff\n}\n",
                      "markdown": "`\nfunc (matcher *equalCmpMatcher) NegatedFailureMessage(actual interface{}) (message string) {\n\tdiff := cmp.Diff(matcher.expected, actual, matcher.options)\n\treturn \"Mismatch (-want, +got):\\n\" + diff\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/testutil/equal_cmp.go"
                },
                "region": {
                  "startLine": 65,
                  "endLine": 65,
                  "endColumn": 6,
                  "snippet": {
                    "text": "}\n\nfunc (matcher *equalCmpMatcher) NegatedFailureMessage(actual interface{}) (message string) {\n\tdiff := cmp.Diff(matcher.expected, actual, matcher.options)\n\treturn \"Mismatch (-want, +got):\\n\" + diff\n}\n",
                    "rendered": {
                      "text": "}\n\nfunc (matcher *equalCmpMatcher) NegatedFailureMessage(actual interface{}) (message string) {\n\tdiff := cmp.Diff(matcher.expected, actual, matcher.options)\n\treturn \"Mismatch (-want, +got):\\n\" + diff\n}\n",
                      "markdown": "`}\n\nfunc (matcher *equalCmpMatcher) NegatedFailureMessage(actual interface{}) (message string) {\n\tdiff := cmp.Diff(matcher.expected, actual, matcher.options)\n\treturn \"Mismatch (-want, +got):\\n\" + diff\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/testutil/equal_cmp.go"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 37,
                  "endLine": 62,
                  "snippet": {
                    "text": "\nfunc (matcher *equalCmpMatcher) FailureMessage(actual interface{}) (message string) {\n\tdiff := cmp.Diff(matcher.expected, actual, matcher.options)\n\treturn \"Mismatch (-want, +got):\\n\" + diff\n}\n\nfunc (matcher *equalCmpMatcher) NegatedFailureMessage(actual interface{}) (message string) {\n\tdiff := cmp.Diff(matcher.expected, actual, matcher.options)\n",
                    "rendered": {
                      "text": "\nfunc (matcher *equalCmpMatcher) FailureMessage(actual interface{}) (message string) {\n\tdiff := cmp.Diff(matcher.expected, actual, matcher.options)\n\treturn \"Mismatch (-want, +got):\\n\" + diff\n}\n\nfunc (matcher *equalCmpMatcher) NegatedFailureMessage(actual interface{}) (message string) {\n\tdiff := cmp.Diff(matcher.expected, actual, matcher.options)\n",
                      "markdown": "`\nfunc (matcher *equalCmpMatcher) FailureMessage(actual interface{}) (message string) {\n\tdiff := cmp.Diff(matcher.expected, actual, matcher.options)\n\treturn \"Mismatch (-want, +got):\\n\" + diff\n}\n\nfunc (matcher *equalCmpMatcher) NegatedFailureMessage(actual interface{}) (message string) {\n\tdiff := cmp.Diff(matcher.expected, actual, matcher.options)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/testutil/equal_cmp.go"
                },
                "region": {
                  "startLine": 60,
                  "endLine": 60,
                  "endColumn": 6,
                  "snippet": {
                    "text": "}\n\nfunc (matcher *equalCmpMatcher) FailureMessage(actual interface{}) (message string) {\n\tdiff := cmp.Diff(matcher.expected, actual, matcher.options)\n\treturn \"Mismatch (-want, +got):\\n\" + diff\n}\n\n",
                    "rendered": {
                      "text": "}\n\nfunc (matcher *equalCmpMatcher) FailureMessage(actual interface{}) (message string) {\n\tdiff := cmp.Diff(matcher.expected, actual, matcher.options)\n\treturn \"Mismatch (-want, +got):\\n\" + diff\n}\n\n",
                      "markdown": "`}\n\nfunc (matcher *equalCmpMatcher) FailureMessage(actual interface{}) (message string) {\n\tdiff := cmp.Diff(matcher.expected, actual, matcher.options)\n\treturn \"Mismatch (-want, +got):\\n\" + diff\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/release/decode_test.go"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 13,
                  "endLine": 30,
                  "endColumn": 19,
                  "snippet": {
                    "text": ")\n\nvar (\n\tb64       = base64.StdEncoding\n\tmagicGzip = []byte{0x1f, 0x8b, 0x08}\n)\n\n",
                    "rendered": {
                      "text": ")\n\nvar (\n\tb64       = base64.StdEncoding\n\tmagicGzip = []byte{0x1f, 0x8b, 0x08}\n)\n\n",
                      "markdown": "`)\n\nvar (\n\tb64       = base64.StdEncoding\n\tmagicGzip = []byte{0x1f, 0x8b, 0x08}\n)\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/release/decode_test.go"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 11,
                  "endLine": 22,
                  "endColumn": 17,
                  "snippet": {
                    "text": "import (\n\t\"bytes\"\n\t\"compress/gzip\"\n\t\"encoding/base64\"\n\t\"encoding/json\"\n\t\"io\"\n\n",
                    "rendered": {
                      "text": "import (\n\t\"bytes\"\n\t\"compress/gzip\"\n\t\"encoding/base64\"\n\t\"encoding/json\"\n\t\"io\"\n\n",
                      "markdown": "`import (\n\t\"bytes\"\n\t\"compress/gzip\"\n\t\"encoding/base64\"\n\t\"encoding/json\"\n\t\"io\"\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/correct_cluster_drift_test.go"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 23,
                  "endLine": 135,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t\t\t})\n\n\t\t\tdiff := tt.diff(namedNS.Name)\n\t\t\tfor _, diff := range diff {\n\t\t\t\tif diff.ClusterObject != nil {\n\t\t\t\t\tobj := diff.ClusterObject.DeepCopyObject()\n\t\t\t\t\tg.Expect(testEnv.Create(context.TODO(), obj.(client.Object))).To(Succeed())\n",
                    "rendered": {
                      "text": "\t\t\t})\n\n\t\t\tdiff := tt.diff(namedNS.Name)\n\t\t\tfor _, diff := range diff {\n\t\t\t\tif diff.ClusterObject != nil {\n\t\t\t\t\tobj := diff.ClusterObject.DeepCopyObject()\n\t\t\t\t\tg.Expect(testEnv.Create(context.TODO(), obj.(client.Object))).To(Succeed())\n",
                      "markdown": "`\t\t\t})\n\n\t\t\tdiff := tt.diff(namedNS.Name)\n\t\t\tfor _, diff := range diff {\n\t\t\t\tif diff.ClusterObject != nil {\n\t\t\t\t\tobj := diff.ClusterObject.DeepCopyObject()\n\t\t\t\t\tg.Expect(testEnv.Create(context.TODO(), obj.(client.Object))).To(Succeed())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/correct_cluster_drift_test.go"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 9,
                  "endLine": 135,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\t\t\t})\n\n\t\t\tdiff := tt.diff(namedNS.Name)\n\t\t\tfor _, diff := range diff {\n\t\t\t\tif diff.ClusterObject != nil {\n\t\t\t\t\tobj := diff.ClusterObject.DeepCopyObject()\n\t\t\t\t\tg.Expect(testEnv.Create(context.TODO(), obj.(client.Object))).To(Succeed())\n",
                    "rendered": {
                      "text": "\t\t\t})\n\n\t\t\tdiff := tt.diff(namedNS.Name)\n\t\t\tfor _, diff := range diff {\n\t\t\t\tif diff.ClusterObject != nil {\n\t\t\t\t\tobj := diff.ClusterObject.DeepCopyObject()\n\t\t\t\t\tg.Expect(testEnv.Create(context.TODO(), obj.(client.Object))).To(Succeed())\n",
                      "markdown": "`\t\t\t})\n\n\t\t\tdiff := tt.diff(namedNS.Name)\n\t\t\tfor _, diff := range diff {\n\t\t\t\tif diff.ClusterObject != nil {\n\t\t\t\t\tobj := diff.ClusterObject.DeepCopyObject()\n\t\t\t\t\tg.Expect(testEnv.Create(context.TODO(), obj.(client.Object))).To(Succeed())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/correct_cluster_drift_test.go"
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 2,
                  "endLine": 134,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t\t\t\t_ = testEnv.Delete(context.TODO(), namedNS)\n\t\t\t})\n\n\t\t\tdiff := tt.diff(namedNS.Name)\n\t\t\tfor _, diff := range diff {\n\t\t\t\tif diff.ClusterObject != nil {\n\t\t\t\t\tobj := diff.ClusterObject.DeepCopyObject()\n",
                    "rendered": {
                      "text": "\t\t\t\t_ = testEnv.Delete(context.TODO(), namedNS)\n\t\t\t})\n\n\t\t\tdiff := tt.diff(namedNS.Name)\n\t\t\tfor _, diff := range diff {\n\t\t\t\tif diff.ClusterObject != nil {\n\t\t\t\t\tobj := diff.ClusterObject.DeepCopyObject()\n",
                      "markdown": "`\t\t\t\t_ = testEnv.Delete(context.TODO(), namedNS)\n\t\t\t})\n\n\t\t\tdiff := tt.diff(namedNS.Name)\n\t\t\tfor _, diff := range diff {\n\t\t\t\tif diff.ClusterObject != nil {\n\t\t\t\t\tobj := diff.ClusterObject.DeepCopyObject()\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/correct_cluster_drift_test.go"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 1,
                  "endLine": 56,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\ttests := []struct {\n\t\tname      string\n\t\tobj       *v2.HelmRelease\n\t\tdiff      func(namespace string) jsondiff.DiffSet\n\t\twantEvent bool\n\t}{\n\t\t{\n",
                    "rendered": {
                      "text": "\ttests := []struct {\n\t\tname      string\n\t\tobj       *v2.HelmRelease\n\t\tdiff      func(namespace string) jsondiff.DiffSet\n\t\twantEvent bool\n\t}{\n\t\t{\n",
                      "markdown": "`\ttests := []struct {\n\t\tname      string\n\t\tobj       *v2.HelmRelease\n\t\tdiff      func(namespace string) jsondiff.DiffSet\n\t\twantEvent bool\n\t}{\n\t\t{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/install_test.go"
                },
                "region": {
                  "startLine": 441,
                  "startColumn": 20,
                  "endLine": 441,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\n\t\tg.Expect(conditions.IsTrue(req.Object, v2.ReleasedCondition)).To(BeTrue())\n\n\t\tcond := conditions.Get(req.Object, v2.TestSuccessCondition)\n\t\tg.Expect(cond).ToNot(BeNil())\n\n\t\texpectMsg := fmt.Sprintf(fmtTestPending,\n",
                    "rendered": {
                      "text": "\n\t\tg.Expect(conditions.IsTrue(req.Object, v2.ReleasedCondition)).To(BeTrue())\n\n\t\tcond := conditions.Get(req.Object, v2.TestSuccessCondition)\n\t\tg.Expect(cond).ToNot(BeNil())\n\n\t\texpectMsg := fmt.Sprintf(fmtTestPending,\n",
                      "markdown": "`\n\t\tg.Expect(conditions.IsTrue(req.Object, v2.ReleasedCondition)).To(BeTrue())\n\n\t\tcond := conditions.Get(req.Object, v2.TestSuccessCondition)\n\t\tg.Expect(cond).ToNot(BeNil())\n\n\t\texpectMsg := fmt.Sprintf(fmtTestPending,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/install_test.go"
                },
                "region": {
                  "startLine": 256,
                  "startColumn": 50,
                  "endLine": 256,
                  "endColumn": 70,
                  "snippet": {
                    "text": "\t\t\t\tobj.Status = tt.status(releases)\n\t\t\t}\n\n\t\t\tgetter, err := RESTClientGetterFromManager(testEnv.Manager, obj.GetReleaseNamespace())\n\t\t\tg.Expect(err).ToNot(HaveOccurred())\n\n\t\t\tcfg, err := action.NewConfigFactory(getter,\n",
                    "rendered": {
                      "text": "\t\t\t\tobj.Status = tt.status(releases)\n\t\t\t}\n\n\t\t\tgetter, err := RESTClientGetterFromManager(testEnv.Manager, obj.GetReleaseNamespace())\n\t\t\tg.Expect(err).ToNot(HaveOccurred())\n\n\t\t\tcfg, err := action.NewConfigFactory(getter,\n",
                      "markdown": "`\t\t\t\tobj.Status = tt.status(releases)\n\t\t\t}\n\n\t\t\tgetter, err := RESTClientGetterFromManager(testEnv.Manager, obj.GetReleaseNamespace())\n\t\t\tg.Expect(err).ToNot(HaveOccurred())\n\n\t\t\tcfg, err := action.NewConfigFactory(getter,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/atomic_release.go"
                },
                "region": {
                  "startLine": 546,
                  "startColumn": 16,
                  "endLine": 546,
                  "endColumn": 21,
                  "snippet": {
                    "text": "// condition, if present, for the given values, retaining the\n// LastTransitionTime.\nfunc replaceCondition(obj *v2.HelmRelease, target string, replacement string, reason string, msg string, status metav1.ConditionStatus) {\n\tc := conditions.Get(obj, target)\n\tif c != nil {\n\t\t// Remove any existing replacement condition to retain the\n\t\t// LastTransitionTime set here. If the state of the new condition\n",
                    "rendered": {
                      "text": "// condition, if present, for the given values, retaining the\n// LastTransitionTime.\nfunc replaceCondition(obj *v2.HelmRelease, target string, replacement string, reason string, msg string, status metav1.ConditionStatus) {\n\tc := conditions.Get(obj, target)\n\tif c != nil {\n\t\t// Remove any existing replacement condition to retain the\n\t\t// LastTransitionTime set here. If the state of the new condition\n",
                      "markdown": "`// condition, if present, for the given values, retaining the\n// LastTransitionTime.\nfunc replaceCondition(obj *v2.HelmRelease, target string, replacement string, reason string, msg string, status metav1.ConditionStatus) {\n\tc := conditions.Get(obj, target)\n\tif c != nil {\n\t\t// Remove any existing replacement condition to retain the\n\t\t// LastTransitionTime set here. If the state of the new condition\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/atomic_release.go"
                },
                "region": {
                  "startLine": 219,
                  "startColumn": 8,
                  "endLine": 219,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\t\t\t\tif conditions.IsReady(req.Object) {\n\t\t\t\t\treq.Object.Status.ObservedPostRenderersDigest = \"\"\n\t\t\t\t\tif req.Object.Spec.PostRenderers != nil {\n\t\t\t\t\t\t// Update the post-renderers digest if the post-renderers exist.\n\t\t\t\t\t\treq.Object.Status.ObservedPostRenderersDigest = postrender.Digest(digest.Canonical, req.Object.Spec.PostRenderers).String()\n\t\t\t\t\t}\n\t\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\tif conditions.IsReady(req.Object) {\n\t\t\t\t\treq.Object.Status.ObservedPostRenderersDigest = \"\"\n\t\t\t\t\tif req.Object.Spec.PostRenderers != nil {\n\t\t\t\t\t\t// Update the post-renderers digest if the post-renderers exist.\n\t\t\t\t\t\treq.Object.Status.ObservedPostRenderersDigest = postrender.Digest(digest.Canonical, req.Object.Spec.PostRenderers).String()\n\t\t\t\t\t}\n\t\t\t\t}\n",
                      "markdown": "`\t\t\t\tif conditions.IsReady(req.Object) {\n\t\t\t\t\treq.Object.Status.ObservedPostRenderersDigest = \"\"\n\t\t\t\t\tif req.Object.Spec.PostRenderers != nil {\n\t\t\t\t\t\t// Update the post-renderers digest if the post-renderers exist.\n\t\t\t\t\t\treq.Object.Status.ObservedPostRenderersDigest = postrender.Digest(digest.Canonical, req.Object.Spec.PostRenderers).String()\n\t\t\t\t\t}\n\t\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/atomic_release.go"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 64,
                  "endLine": 105,
                  "endColumn": 72,
                  "snippet": {
                    "text": "//\n// The caller is expected to patch the object one last time with the\n// Request.Object result to persist the final observation. As there is an\n// expectation they will need to patch the object anyway to e.g. update the\n// ObservedGeneration.\n//\n// For more information on the individual ActionReconcilers, refer to their\n",
                    "rendered": {
                      "text": "//\n// The caller is expected to patch the object one last time with the\n// Request.Object result to persist the final observation. As there is an\n// expectation they will need to patch the object anyway to e.g. update the\n// ObservedGeneration.\n//\n// For more information on the individual ActionReconcilers, refer to their\n",
                      "markdown": "`//\n// The caller is expected to patch the object one last time with the\n// Request.Object result to persist the final observation. As there is an\n// expectation they will need to patch the object anyway to e.g. update the\n// ObservedGeneration.\n//\n// For more information on the individual ActionReconcilers, refer to their\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/atomic_release.go"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 26,
                  "endLine": 85,
                  "endColumn": 30,
                  "snippet": {
                    "text": "//\n// This process will continue until an action is called multiple times, no\n// action remains, or a remediation action is called. In which case, the process\n// will stop to be resumed at a later time or be checked upon again, by e.g. a\n// requeue.\n//\n// Before running the ActionReconciler for the next action, the object is\n",
                    "rendered": {
                      "text": "//\n// This process will continue until an action is called multiple times, no\n// action remains, or a remediation action is called. In which case, the process\n// will stop to be resumed at a later time or be checked upon again, by e.g. a\n// requeue.\n//\n// Before running the ActionReconciler for the next action, the object is\n",
                      "markdown": "`//\n// This process will continue until an action is called multiple times, no\n// action remains, or a remediation action is called. In which case, the process\n// will stop to be resumed at a later time or be checked upon again, by e.g. a\n// requeue.\n//\n// Before running the ActionReconciler for the next action, the object is\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/atomic_release.go"
                },
                "region": {
                  "startLine": 262,
                  "startColumn": 49,
                  "endLine": 262,
                  "endColumn": 58,
                  "snippet": {
                    "text": "\t\t\t}\n\n\t\t\t// Run the action sub-reconciler.\n\t\t\tlog.Info(fmt.Sprintf(\"running '%s' action with timeout of %s\", next.Name(), timeoutForAction(next, req.Object).String()))\n\t\t\tif err = next.Reconcile(ctx, req); err != nil {\n\t\t\t\tif conditions.IsReady(req.Object) {\n\t\t\t\t\tconditions.MarkFalse(req.Object, meta.ReadyCondition, \"ReconcileError\", \"%s\", err)\n",
                    "rendered": {
                      "text": "\t\t\t}\n\n\t\t\t// Run the action sub-reconciler.\n\t\t\tlog.Info(fmt.Sprintf(\"running '%s' action with timeout of %s\", next.Name(), timeoutForAction(next, req.Object).String()))\n\t\t\tif err = next.Reconcile(ctx, req); err != nil {\n\t\t\t\tif conditions.IsReady(req.Object) {\n\t\t\t\t\tconditions.MarkFalse(req.Object, meta.ReadyCondition, \"ReconcileError\", \"%s\", err)\n",
                      "markdown": "`\t\t\t}\n\n\t\t\t// Run the action sub-reconciler.\n\t\t\tlog.Info(fmt.Sprintf(\"running '%s' action with timeout of %s\", next.Name(), timeoutForAction(next, req.Object).String()))\n\t\t\tif err = next.Reconcile(ctx, req); err != nil {\n\t\t\t\tif conditions.IsReady(req.Object) {\n\t\t\t\t\tconditions.MarkFalse(req.Object, meta.ReadyCondition, \"ReconcileError\", \"%s\", err)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/atomic_release.go"
                },
                "region": {
                  "startLine": 244,
                  "startColumn": 58,
                  "endLine": 244,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\n\t\t\t// Mark the release as reconciling before we attempt to run the action.\n\t\t\t// This to show continuous progress, as Helm actions can be long-running.\n\t\t\treconcilingMsg := fmt.Sprintf(\"Running '%s' action with timeout of %s\",\n\t\t\t\tnext.Name(), timeoutForAction(next, req.Object).String())\n\t\t\tconditions.MarkReconciling(req.Object, meta.ProgressingReason, \"%s\", reconcilingMsg)\n\n",
                    "rendered": {
                      "text": "\n\t\t\t// Mark the release as reconciling before we attempt to run the action.\n\t\t\t// This to show continuous progress, as Helm actions can be long-running.\n\t\t\treconcilingMsg := fmt.Sprintf(\"Running '%s' action with timeout of %s\",\n\t\t\t\tnext.Name(), timeoutForAction(next, req.Object).String())\n\t\t\tconditions.MarkReconciling(req.Object, meta.ProgressingReason, \"%s\", reconcilingMsg)\n\n",
                      "markdown": "`\n\t\t\t// Mark the release as reconciling before we attempt to run the action.\n\t\t\t// This to show continuous progress, as Helm actions can be long-running.\n\t\t\treconcilingMsg := fmt.Sprintf(\"Running '%s' action with timeout of %s\",\n\t\t\t\tnext.Name(), timeoutForAction(next, req.Object).String())\n\t\t\tconditions.MarkReconciling(req.Object, meta.ProgressingReason, \"%s\", reconcilingMsg)\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/atomic_release.go"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 54,
                  "endLine": 103,
                  "endColumn": 60,
                  "snippet": {
                    "text": "// ErrMustRequeue, it is advised to requeue the object outside the interval\n// to ensure continued progress.\n//\n// The caller is expected to patch the object one last time with the\n// Request.Object result to persist the final observation. As there is an\n// expectation they will need to patch the object anyway to e.g. update the\n// ObservedGeneration.\n",
                    "rendered": {
                      "text": "// ErrMustRequeue, it is advised to requeue the object outside the interval\n// to ensure continued progress.\n//\n// The caller is expected to patch the object one last time with the\n// Request.Object result to persist the final observation. As there is an\n// expectation they will need to patch the object anyway to e.g. update the\n// ObservedGeneration.\n",
                      "markdown": "`// ErrMustRequeue, it is advised to requeue the object outside the interval\n// to ensure continued progress.\n//\n// The caller is expected to patch the object one last time with the\n// Request.Object result to persist the final observation. As there is an\n// expectation they will need to patch the object anyway to e.g. update the\n// ObservedGeneration.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/atomic_release.go"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 37,
                  "endLine": 85,
                  "endColumn": 43,
                  "snippet": {
                    "text": "//\n// This process will continue until an action is called multiple times, no\n// action remains, or a remediation action is called. In which case, the process\n// will stop to be resumed at a later time or be checked upon again, by e.g. a\n// requeue.\n//\n// Before running the ActionReconciler for the next action, the object is\n",
                    "rendered": {
                      "text": "//\n// This process will continue until an action is called multiple times, no\n// action remains, or a remediation action is called. In which case, the process\n// will stop to be resumed at a later time or be checked upon again, by e.g. a\n// requeue.\n//\n// Before running the ActionReconciler for the next action, the object is\n",
                      "markdown": "`//\n// This process will continue until an action is called multiple times, no\n// action remains, or a remediation action is called. In which case, the process\n// will stop to be resumed at a later time or be checked upon again, by e.g. a\n// requeue.\n//\n// Before running the ActionReconciler for the next action, the object is\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/correct_cluster_drift.go"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 95,
                  "endLine": 52,
                  "endColumn": 101,
                  "snippet": {
                    "text": "\tfieldManager  string\n}\n\nfunc NewCorrectClusterDrift(configFactory *action.ConfigFactory, recorder record.EventRecorder, diff jsondiff.DiffSet, fieldManager string) *CorrectClusterDrift {\n\treturn &CorrectClusterDrift{\n\t\tconfigFactory: configFactory,\n\t\teventRecorder: recorder,\n",
                    "rendered": {
                      "text": "\tfieldManager  string\n}\n\nfunc NewCorrectClusterDrift(configFactory *action.ConfigFactory, recorder record.EventRecorder, diff jsondiff.DiffSet, fieldManager string) *CorrectClusterDrift {\n\treturn &CorrectClusterDrift{\n\t\tconfigFactory: configFactory,\n\t\teventRecorder: recorder,\n",
                      "markdown": "`\tfieldManager  string\n}\n\nfunc NewCorrectClusterDrift(configFactory *action.ConfigFactory, recorder record.EventRecorder, diff jsondiff.DiffSet, fieldManager string) *CorrectClusterDrift {\n\treturn &CorrectClusterDrift{\n\t\tconfigFactory: configFactory,\n\t\teventRecorder: recorder,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/correct_cluster_drift.go"
                },
                "region": {
                  "startLine": 48,
                  "endLine": 48,
                  "endColumn": 6,
                  "snippet": {
                    "text": "type CorrectClusterDrift struct {\n\tconfigFactory *action.ConfigFactory\n\teventRecorder record.EventRecorder\n\tdiff          jsondiff.DiffSet\n\tfieldManager  string\n}\n\n",
                    "rendered": {
                      "text": "type CorrectClusterDrift struct {\n\tconfigFactory *action.ConfigFactory\n\teventRecorder record.EventRecorder\n\tdiff          jsondiff.DiffSet\n\tfieldManager  string\n}\n\n",
                      "markdown": "`type CorrectClusterDrift struct {\n\tconfigFactory *action.ConfigFactory\n\teventRecorder record.EventRecorder\n\tdiff          jsondiff.DiffSet\n\tfieldManager  string\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/state.go"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 21,
                  "endLine": 155,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t\t// get stuck in this check due to a mismatch forever.  The value can't\n\t\t// change without a new generation. Hence, compare the observed digest\n\t\t// for new generations only.\n\t\tready := conditions.Get(req.Object, meta.ReadyCondition)\n\t\tif ready != nil && ready.ObservedGeneration != req.Object.Generation {\n\t\t\tvar postrenderersDigest string\n\t\t\tif req.Object.Spec.PostRenderers != nil {\n",
                    "rendered": {
                      "text": "\t\t// get stuck in this check due to a mismatch forever.  The value can't\n\t\t// change without a new generation. Hence, compare the observed digest\n\t\t// for new generations only.\n\t\tready := conditions.Get(req.Object, meta.ReadyCondition)\n\t\tif ready != nil && ready.ObservedGeneration != req.Object.Generation {\n\t\t\tvar postrenderersDigest string\n\t\t\tif req.Object.Spec.PostRenderers != nil {\n",
                      "markdown": "`\t\t// get stuck in this check due to a mismatch forever.  The value can't\n\t\t// change without a new generation. Hence, compare the observed digest\n\t\t// for new generations only.\n\t\tready := conditions.Get(req.Object, meta.ReadyCondition)\n\t\tif ready != nil && ready.ObservedGeneration != req.Object.Generation {\n\t\t\tvar postrenderersDigest string\n\t\t\tif req.Object.Spec.PostRenderers != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/state.go"
                },
                "region": {
                  "startLine": 150,
                  "startColumn": 47,
                  "endLine": 150,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\n\t\t// Verify if postrender digest has changed if config has not been\n\t\t// processed. For the processed or partially processed generation, the\n\t\t// updated observation will only be reflected at the end of a successful\n\t\t// reconciliation.  Comparing here would result the reconciliation to\n\t\t// get stuck in this check due to a mismatch forever.  The value can't\n\t\t// change without a new generation. Hence, compare the observed digest\n",
                    "rendered": {
                      "text": "\n\t\t// Verify if postrender digest has changed if config has not been\n\t\t// processed. For the processed or partially processed generation, the\n\t\t// updated observation will only be reflected at the end of a successful\n\t\t// reconciliation.  Comparing here would result the reconciliation to\n\t\t// get stuck in this check due to a mismatch forever.  The value can't\n\t\t// change without a new generation. Hence, compare the observed digest\n",
                      "markdown": "`\n\t\t// Verify if postrender digest has changed if config has not been\n\t\t// processed. For the processed or partially processed generation, the\n\t\t// updated observation will only be reflected at the end of a successful\n\t\t// reconciliation.  Comparing here would result the reconciliation to\n\t\t// get stuck in this check due to a mismatch forever.  The value can't\n\t\t// change without a new generation. Hence, compare the observed digest\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/state.go"
                },
                "region": {
                  "startLine": 86,
                  "endLine": 86,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tReason string\n\t// Diff contains any differences between the Helm storage manifest and the\n\t// cluster state when Status equals ReleaseStatusDrifted.\n\tDiff jsondiff.DiffSet\n}\n\n// DetermineReleaseState determines the state of the Helm release as compared\n",
                    "rendered": {
                      "text": "\tReason string\n\t// Diff contains any differences between the Helm storage manifest and the\n\t// cluster state when Status equals ReleaseStatusDrifted.\n\tDiff jsondiff.DiffSet\n}\n\n// DetermineReleaseState determines the state of the Helm release as compared\n",
                      "markdown": "`\tReason string\n\t// Diff contains any differences between the Helm storage manifest and the\n\t// cluster state when Status equals ReleaseStatusDrifted.\n\tDiff jsondiff.DiffSet\n}\n\n// DetermineReleaseState determines the state of the Helm release as compared\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/state.go"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 3,
                  "endLine": 84,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tStatus ReleaseStatus\n\t// Reason for the Status.\n\tReason string\n\t// Diff contains any differences between the Helm storage manifest and the\n\t// cluster state when Status equals ReleaseStatusDrifted.\n\tDiff jsondiff.DiffSet\n}\n",
                    "rendered": {
                      "text": "\tStatus ReleaseStatus\n\t// Reason for the Status.\n\tReason string\n\t// Diff contains any differences between the Helm storage manifest and the\n\t// cluster state when Status equals ReleaseStatusDrifted.\n\tDiff jsondiff.DiffSet\n}\n",
                      "markdown": "`\tStatus ReleaseStatus\n\t// Reason for the Status.\n\tReason string\n\t// Diff contains any differences between the Helm storage manifest and the\n\t// cluster state when Status equals ReleaseStatusDrifted.\n\tDiff jsondiff.DiffSet\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/oomwatch/watch.go"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 42,
                  "endLine": 88,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\t}\n\n\tif minInterval := 50 * time.Millisecond; interval < minInterval {\n\t\treturn nil, fmt.Errorf(\"interval must be at least %s, got %s\", minInterval, interval)\n\t}\n\n\tmemoryMaxPath, memoryCurrentPath, err = discoverCgroupPaths(memoryMaxPath, memoryCurrentPath)\n",
                    "rendered": {
                      "text": "\t}\n\n\tif minInterval := 50 * time.Millisecond; interval < minInterval {\n\t\treturn nil, fmt.Errorf(\"interval must be at least %s, got %s\", minInterval, interval)\n\t}\n\n\tmemoryMaxPath, memoryCurrentPath, err = discoverCgroupPaths(memoryMaxPath, memoryCurrentPath)\n",
                      "markdown": "`\t}\n\n\tif minInterval := 50 * time.Millisecond; interval < minInterval {\n\t\treturn nil, fmt.Errorf(\"interval must be at least %s, got %s\", minInterval, interval)\n\t}\n\n\tmemoryMaxPath, memoryCurrentPath, err = discoverCgroupPaths(memoryMaxPath, memoryCurrentPath)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/oomwatch/watch.go"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 52,
                  "endLine": 136,
                  "endColumn": 59,
                  "snippet": {
                    "text": "\tfor {\n\t\tselect {\n\t\tcase <-ctx.Done():\n\t\t\tw.logger.Info(\"Shutdown signal received, stopping watch for near OOM\")\n\t\t\treturn\n\t\tcase <-t.C:\n\t\t\tcurrent, err := readUintFromFile(w.memoryCurrentPath)\n",
                    "rendered": {
                      "text": "\tfor {\n\t\tselect {\n\t\tcase <-ctx.Done():\n\t\t\tw.logger.Info(\"Shutdown signal received, stopping watch for near OOM\")\n\t\t\treturn\n\t\tcase <-t.C:\n\t\t\tcurrent, err := readUintFromFile(w.memoryCurrentPath)\n",
                      "markdown": "`\tfor {\n\t\tselect {\n\t\tcase <-ctx.Done():\n\t\t\tw.logger.Info(\"Shutdown signal received, stopping watch for near OOM\")\n\t\t\treturn\n\t\tcase <-t.C:\n\t\t\tcurrent, err := readUintFromFile(w.memoryCurrentPath)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/oomwatch/watch.go"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 31,
                  "endLine": 74,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\tctx context.Context\n\t// cancel is the function that cancels the context.\n\tcancel context.CancelFunc\n\t// once is used to ensure that Watch is only called once.\n\tonce sync.Once\n}\n\n",
                    "rendered": {
                      "text": "\tctx context.Context\n\t// cancel is the function that cancels the context.\n\tcancel context.CancelFunc\n\t// once is used to ensure that Watch is only called once.\n\tonce sync.Once\n}\n\n",
                      "markdown": "`\tctx context.Context\n\t// cancel is the function that cancels the context.\n\tcancel context.CancelFunc\n\t// once is used to ensure that Watch is only called once.\n\tonce sync.Once\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/oomwatch/watch_test.go"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 49,
                  "endLine": 113,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\n\t\t\t\t_, err := New(\"\", \"\", 1, 49*time.Millisecond, logr.Discard())\n\t\t\t\tg.Expect(err).To(HaveOccurred())\n\t\t\t\tg.Expect(err).To(MatchError(\"interval must be at least 50ms, got 49ms\"))\n\t\t\t})\n\t\t})\n\n",
                    "rendered": {
                      "text": "\n\t\t\t\t_, err := New(\"\", \"\", 1, 49*time.Millisecond, logr.Discard())\n\t\t\t\tg.Expect(err).To(HaveOccurred())\n\t\t\t\tg.Expect(err).To(MatchError(\"interval must be at least 50ms, got 49ms\"))\n\t\t\t})\n\t\t})\n\n",
                      "markdown": "`\n\t\t\t\t_, err := New(\"\", \"\", 1, 49*time.Millisecond, logr.Discard())\n\t\t\t\tg.Expect(err).To(HaveOccurred())\n\t\t\t\tg.Expect(err).To(MatchError(\"interval must be at least 50ms, got 49ms\"))\n\t\t\t})\n\t\t})\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/controller/helmrelease_controller_test.go"
                },
                "region": {
                  "startLine": 2458,
                  "startColumn": 17,
                  "endLine": 2458,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t\t\t\tif key.Name == serviceAccount && key.Namespace == namespace {\n\t\t\t\t\treturn mockErr\n\t\t\t\t}\n\t\t\t\treturn client.Get(ctx, key, obj, opts...)\n\t\t\t},\n\t\t})\n\n",
                    "rendered": {
                      "text": "\t\t\t\tif key.Name == serviceAccount && key.Namespace == namespace {\n\t\t\t\t\treturn mockErr\n\t\t\t\t}\n\t\t\t\treturn client.Get(ctx, key, obj, opts...)\n\t\t\t},\n\t\t})\n\n",
                      "markdown": "`\t\t\t\tif key.Name == serviceAccount && key.Namespace == namespace {\n\t\t\t\t\treturn mockErr\n\t\t\t\t}\n\t\t\t\treturn client.Get(ctx, key, obj, opts...)\n\t\t\t},\n\t\t})\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/controller/helmrelease_controller_test.go"
                },
                "region": {
                  "startLine": 2167,
                  "startColumn": 16,
                  "endLine": 2167,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\n\t\t// Verify Helm chart has been removed.\n\t\tg.Eventually(func(g Gomega) {\n\t\t\terr = testEnv.Get(context.TODO(), client.ObjectKey{\n\t\t\t\tNamespace: hc.Namespace,\n\t\t\t\tName:      hc.Name,\n\t\t\t}, &sourcev1.HelmChart{})\n",
                    "rendered": {
                      "text": "\n\t\t// Verify Helm chart has been removed.\n\t\tg.Eventually(func(g Gomega) {\n\t\t\terr = testEnv.Get(context.TODO(), client.ObjectKey{\n\t\t\t\tNamespace: hc.Namespace,\n\t\t\t\tName:      hc.Name,\n\t\t\t}, &sourcev1.HelmChart{})\n",
                      "markdown": "`\n\t\t// Verify Helm chart has been removed.\n\t\tg.Eventually(func(g Gomega) {\n\t\t\terr = testEnv.Get(context.TODO(), client.ObjectKey{\n\t\t\t\tNamespace: hc.Namespace,\n\t\t\t\tName:      hc.Name,\n\t\t\t}, &sourcev1.HelmChart{})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/controller/helmrelease_controller_test.go"
                },
                "region": {
                  "startLine": 856,
                  "startColumn": 22,
                  "endLine": 856,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t\t\t_, err = r.reconcileRelease(context.TODO(), sp, obj)\n\t\t\tg.Expect(err).ToNot(HaveOccurred())\n\n\t\t\tready := conditions.Get(obj, meta.ReadyCondition)\n\t\t\tg.Expect(ready.Status).To(Equal(metav1.ConditionUnknown))\n\t\t\tg.Expect(ready.Reason).To(Equal(meta.ProgressingReason))\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t_, err = r.reconcileRelease(context.TODO(), sp, obj)\n\t\t\tg.Expect(err).ToNot(HaveOccurred())\n\n\t\t\tready := conditions.Get(obj, meta.ReadyCondition)\n\t\t\tg.Expect(ready.Status).To(Equal(metav1.ConditionUnknown))\n\t\t\tg.Expect(ready.Reason).To(Equal(meta.ProgressingReason))\n\t\t}\n",
                      "markdown": "`\t\t\t_, err = r.reconcileRelease(context.TODO(), sp, obj)\n\t\t\tg.Expect(err).ToNot(HaveOccurred())\n\n\t\t\tready := conditions.Get(obj, meta.ReadyCondition)\n\t\t\tg.Expect(ready.Status).To(Equal(metav1.ConditionUnknown))\n\t\t\tg.Expect(ready.Reason).To(Equal(meta.ProgressingReason))\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/controller/helmrelease_controller_test.go"
                },
                "region": {
                  "startLine": 3169,
                  "startColumn": 21,
                  "endLine": 3169,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\t\tname: \"error on invalid KubeConfig secret\",\n\t\t\tspec: v2.HelmReleaseSpec{\n\t\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t\t\tKey:  \"invalid-key\",\n\t\t\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t\tname: \"error on invalid KubeConfig secret\",\n\t\t\tspec: v2.HelmReleaseSpec{\n\t\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t\t\tKey:  \"invalid-key\",\n\t\t\t\t\t},\n",
                      "markdown": "`\t\t\tname: \"error on invalid KubeConfig secret\",\n\t\t\tspec: v2.HelmReleaseSpec{\n\t\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t\t\tKey:  \"invalid-key\",\n\t\t\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/controller/helmrelease_controller_test.go"
                },
                "region": {
                  "startLine": 3158,
                  "startColumn": 21,
                  "endLine": 3158,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\t\tname: \"error on missing KubeConfig secret\",\n\t\t\tspec: v2.HelmReleaseSpec{\n\t\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t\t},\n\t\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t\tname: \"error on missing KubeConfig secret\",\n\t\t\tspec: v2.HelmReleaseSpec{\n\t\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t\t},\n\t\t\t\t},\n",
                      "markdown": "`\t\t\tname: \"error on missing KubeConfig secret\",\n\t\t\tspec: v2.HelmReleaseSpec{\n\t\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t\t},\n\t\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/controller/helmrelease_controller_test.go"
                },
                "region": {
                  "startLine": 3149,
                  "startColumn": 27,
                  "endLine": 3149,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\t\t\t\t\tNamespace: namespace,\n\t\t\t\t},\n\t\t\t\tData: map[string][]byte{\n\t\t\t\t\tkube.DefaultKubeConfigSecretKey: []byte(kubeCfg),\n\t\t\t\t},\n\t\t\t},\n\t\t\twant: &kube.MemoryRESTClientGetter{},\n",
                    "rendered": {
                      "text": "\t\t\t\t\tNamespace: namespace,\n\t\t\t\t},\n\t\t\t\tData: map[string][]byte{\n\t\t\t\t\tkube.DefaultKubeConfigSecretKey: []byte(kubeCfg),\n\t\t\t\t},\n\t\t\t},\n\t\t\twant: &kube.MemoryRESTClientGetter{},\n",
                      "markdown": "`\t\t\t\t\tNamespace: namespace,\n\t\t\t\t},\n\t\t\t\tData: map[string][]byte{\n\t\t\t\t\tkube.DefaultKubeConfigSecretKey: []byte(kubeCfg),\n\t\t\t\t},\n\t\t\t},\n\t\t\twant: &kube.MemoryRESTClientGetter{},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/controller/helmrelease_controller_test.go"
                },
                "region": {
                  "startLine": 3138,
                  "startColumn": 21,
                  "endLine": 3138,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\t\tname: \"builds RESTClientGetter from HelmRelease with KubeConfig\",\n\t\t\tspec: v2.HelmReleaseSpec{\n\t\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t\t},\n\t\t\t\t},\n",
                    "rendered": {
                      "text": "\t\t\tname: \"builds RESTClientGetter from HelmRelease with KubeConfig\",\n\t\t\tspec: v2.HelmReleaseSpec{\n\t\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t\t},\n\t\t\t\t},\n",
                      "markdown": "`\t\t\tname: \"builds RESTClientGetter from HelmRelease with KubeConfig\",\n\t\t\tspec: v2.HelmReleaseSpec{\n\t\t\t\tKubeConfig: &meta.KubeConfigReference{\n\t\t\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\t\t\tName: \"kubeconfig\",\n\t\t\t\t\t},\n\t\t\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/controller/helmrelease_controller_test.go"
                },
                "region": {
                  "startLine": 3106,
                  "startColumn": 19,
                  "endLine": 3106,
                  "endColumn": 27,
                  "snippet": {
                    "text": "users:\n- name: developer\n  user:\n    password: some-password\n    username: exp`\n\t)\n\n",
                    "rendered": {
                      "text": "users:\n- name: developer\n  user:\n    password: some-password\n    username: exp`\n\t)\n\n",
                      "markdown": "`users:\n- name: developer\n  user:\n    password: some-password\n    username: exp`\n\t)\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/controller/helmrelease_controller_test.go"
                },
                "region": {
                  "startLine": 3106,
                  "startColumn": 4,
                  "endLine": 3106,
                  "endColumn": 12,
                  "snippet": {
                    "text": "users:\n- name: developer\n  user:\n    password: some-password\n    username: exp`\n\t)\n\n",
                    "rendered": {
                      "text": "users:\n- name: developer\n  user:\n    password: some-password\n    username: exp`\n\t)\n\n",
                      "markdown": "`users:\n- name: developer\n  user:\n    password: some-password\n    username: exp`\n\t)\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/controller/helmrelease_controller_test.go"
                },
                "region": {
                  "startLine": 2331,
                  "startColumn": 19,
                  "endLine": 2331,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n\t\t// Reconcile the actual deletion of the Helm release.\n\t\tobj.Spec.KubeConfig = &meta.KubeConfigReference{\n\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\tName: \"missing-secret\",\n\t\t\t},\n\t\t}\n",
                    "rendered": {
                      "text": "\n\t\t// Reconcile the actual deletion of the Helm release.\n\t\tobj.Spec.KubeConfig = &meta.KubeConfigReference{\n\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\tName: \"missing-secret\",\n\t\t\t},\n\t\t}\n",
                      "markdown": "`\n\t\t// Reconcile the actual deletion of the Helm release.\n\t\tobj.Spec.KubeConfig = &meta.KubeConfigReference{\n\t\t\tSecretRef: meta.SecretKeyReference{\n\t\t\t\tName: \"missing-secret\",\n\t\t\t},\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/controller/helmrelease_controller_test.go"
                },
                "region": {
                  "startLine": 2651,
                  "startColumn": 17,
                  "endLine": 2651,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\tt.Run(\"error due to failing delete hook\", func(t *testing.T) {\n\t\tg := NewWithT(t)\n\n\t\tns, err := testEnv.CreateNamespace(context.TODO(), \"reconcile-uninstall\")\n\t\tg.Expect(err).ToNot(HaveOccurred())\n\t\tt.Cleanup(func() {\n\t\t\t_ = testEnv.Delete(context.TODO(), ns)\n",
                    "rendered": {
                      "text": "\tt.Run(\"error due to failing delete hook\", func(t *testing.T) {\n\t\tg := NewWithT(t)\n\n\t\tns, err := testEnv.CreateNamespace(context.TODO(), \"reconcile-uninstall\")\n\t\tg.Expect(err).ToNot(HaveOccurred())\n\t\tt.Cleanup(func() {\n\t\t\t_ = testEnv.Delete(context.TODO(), ns)\n",
                      "markdown": "`\tt.Run(\"error due to failing delete hook\", func(t *testing.T) {\n\t\tg := NewWithT(t)\n\n\t\tns, err := testEnv.CreateNamespace(context.TODO(), \"reconcile-uninstall\")\n\t\tg.Expect(err).ToNot(HaveOccurred())\n\t\tt.Cleanup(func() {\n\t\t\t_ = testEnv.Delete(context.TODO(), ns)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/controller/helmrelease_controller_test.go"
                },
                "region": {
                  "startLine": 2616,
                  "startColumn": 47,
                  "endLine": 2616,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\tt.Run(\"attempts to uninstall release\", func(t *testing.T) {\n\t\tg := NewWithT(t)\n\n\t\tgetter := kube.NewMemoryRESTClientGetter(testEnv.GetConfig())\n\n\t\tobj := &v2.HelmRelease{\n\t\t\tStatus: v2.HelmReleaseStatus{\n",
                    "rendered": {
                      "text": "\tt.Run(\"attempts to uninstall release\", func(t *testing.T) {\n\t\tg := NewWithT(t)\n\n\t\tgetter := kube.NewMemoryRESTClientGetter(testEnv.GetConfig())\n\n\t\tobj := &v2.HelmRelease{\n\t\t\tStatus: v2.HelmReleaseStatus{\n",
                      "markdown": "`\tt.Run(\"attempts to uninstall release\", func(t *testing.T) {\n\t\tg := NewWithT(t)\n\n\t\tgetter := kube.NewMemoryRESTClientGetter(testEnv.GetConfig())\n\n\t\tobj := &v2.HelmRelease{\n\t\t\tStatus: v2.HelmReleaseStatus{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/controller/helmrelease_controller_test.go"
                },
                "region": {
                  "startLine": 2385,
                  "startColumn": 17,
                  "endLine": 2385,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\t\tg := NewWithT(t)\n\n\t\t// Create a test namespace for storing the Helm release mock.\n\t\tns, err := testEnv.CreateNamespace(context.TODO(), \"reconcile-release-deletion\")\n\t\tg.Expect(err).ToNot(HaveOccurred())\n\t\tt.Cleanup(func() {\n\t\t\t_ = testEnv.Delete(context.TODO(), ns)\n",
                    "rendered": {
                      "text": "\t\tg := NewWithT(t)\n\n\t\t// Create a test namespace for storing the Helm release mock.\n\t\tns, err := testEnv.CreateNamespace(context.TODO(), \"reconcile-release-deletion\")\n\t\tg.Expect(err).ToNot(HaveOccurred())\n\t\tt.Cleanup(func() {\n\t\t\t_ = testEnv.Delete(context.TODO(), ns)\n",
                      "markdown": "`\t\tg := NewWithT(t)\n\n\t\t// Create a test namespace for storing the Helm release mock.\n\t\tns, err := testEnv.CreateNamespace(context.TODO(), \"reconcile-release-deletion\")\n\t\tg.Expect(err).ToNot(HaveOccurred())\n\t\tt.Cleanup(func() {\n\t\t\t_ = testEnv.Delete(context.TODO(), ns)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/controller/helmrelease_controller_test.go"
                },
                "region": {
                  "startLine": 2284,
                  "startColumn": 17,
                  "endLine": 2284,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\t\tg := NewWithT(t)\n\n\t\t// Create a test namespace for storing the Helm release mock.\n\t\tns, err := testEnv.CreateNamespace(context.TODO(), \"reconcile-release-deletion\")\n\t\tg.Expect(err).ToNot(HaveOccurred())\n\t\tt.Cleanup(func() {\n\t\t\t_ = testEnv.Delete(context.TODO(), ns)\n",
                    "rendered": {
                      "text": "\t\tg := NewWithT(t)\n\n\t\t// Create a test namespace for storing the Helm release mock.\n\t\tns, err := testEnv.CreateNamespace(context.TODO(), \"reconcile-release-deletion\")\n\t\tg.Expect(err).ToNot(HaveOccurred())\n\t\tt.Cleanup(func() {\n\t\t\t_ = testEnv.Delete(context.TODO(), ns)\n",
                      "markdown": "`\t\tg := NewWithT(t)\n\n\t\t// Create a test namespace for storing the Helm release mock.\n\t\tns, err := testEnv.CreateNamespace(context.TODO(), \"reconcile-release-deletion\")\n\t\tg.Expect(err).ToNot(HaveOccurred())\n\t\tt.Cleanup(func() {\n\t\t\t_ = testEnv.Delete(context.TODO(), ns)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/controller/helmrelease_controller_test.go"
                },
                "region": {
                  "startLine": 2221,
                  "startColumn": 17,
                  "endLine": 2221,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\t\tg := NewWithT(t)\n\n\t\t// Create a test namespace for storing the Helm release mock.\n\t\tns, err := testEnv.CreateNamespace(context.TODO(), \"reconcile-release-deletion\")\n\t\tg.Expect(err).ToNot(HaveOccurred())\n\t\tt.Cleanup(func() {\n\t\t\t_ = testEnv.Delete(context.TODO(), ns)\n",
                    "rendered": {
                      "text": "\t\tg := NewWithT(t)\n\n\t\t// Create a test namespace for storing the Helm release mock.\n\t\tns, err := testEnv.CreateNamespace(context.TODO(), \"reconcile-release-deletion\")\n\t\tg.Expect(err).ToNot(HaveOccurred())\n\t\tt.Cleanup(func() {\n\t\t\t_ = testEnv.Delete(context.TODO(), ns)\n",
                      "markdown": "`\t\tg := NewWithT(t)\n\n\t\t// Create a test namespace for storing the Helm release mock.\n\t\tns, err := testEnv.CreateNamespace(context.TODO(), \"reconcile-release-deletion\")\n\t\tg.Expect(err).ToNot(HaveOccurred())\n\t\tt.Cleanup(func() {\n\t\t\t_ = testEnv.Delete(context.TODO(), ns)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/controller/helmrelease_controller_test.go"
                },
                "region": {
                  "startLine": 2167,
                  "startColumn": 13,
                  "endLine": 2167,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\n\t\t// Verify Helm chart has been removed.\n\t\tg.Eventually(func(g Gomega) {\n\t\t\terr = testEnv.Get(context.TODO(), client.ObjectKey{\n\t\t\t\tNamespace: hc.Namespace,\n\t\t\t\tName:      hc.Name,\n\t\t\t}, &sourcev1.HelmChart{})\n",
                    "rendered": {
                      "text": "\n\t\t// Verify Helm chart has been removed.\n\t\tg.Eventually(func(g Gomega) {\n\t\t\terr = testEnv.Get(context.TODO(), client.ObjectKey{\n\t\t\t\tNamespace: hc.Namespace,\n\t\t\t\tName:      hc.Name,\n\t\t\t}, &sourcev1.HelmChart{})\n",
                      "markdown": "`\n\t\t// Verify Helm chart has been removed.\n\t\tg.Eventually(func(g Gomega) {\n\t\t\terr = testEnv.Get(context.TODO(), client.ObjectKey{\n\t\t\t\tNamespace: hc.Namespace,\n\t\t\t\tName:      hc.Name,\n\t\t\t}, &sourcev1.HelmChart{})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/controller/helmrelease_controller_test.go"
                },
                "region": {
                  "startLine": 2088,
                  "startColumn": 17,
                  "endLine": 2088,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\t\tg := NewWithT(t)\n\n\t\t// Create a test namespace for storing the Helm release mock.\n\t\tns, err := testEnv.CreateNamespace(context.TODO(), \"reconcile-delete\")\n\t\tg.Expect(err).ToNot(HaveOccurred())\n\t\tt.Cleanup(func() {\n\t\t\t_ = testEnv.Delete(context.TODO(), ns)\n",
                    "rendered": {
                      "text": "\t\tg := NewWithT(t)\n\n\t\t// Create a test namespace for storing the Helm release mock.\n\t\tns, err := testEnv.CreateNamespace(context.TODO(), \"reconcile-delete\")\n\t\tg.Expect(err).ToNot(HaveOccurred())\n\t\tt.Cleanup(func() {\n\t\t\t_ = testEnv.Delete(context.TODO(), ns)\n",
                      "markdown": "`\t\tg := NewWithT(t)\n\n\t\t// Create a test namespace for storing the Helm release mock.\n\t\tns, err := testEnv.CreateNamespace(context.TODO(), \"reconcile-delete\")\n\t\tg.Expect(err).ToNot(HaveOccurred())\n\t\tt.Cleanup(func() {\n\t\t\t_ = testEnv.Delete(context.TODO(), ns)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/controller/helmrelease_controller_test.go"
                },
                "region": {
                  "startLine": 712,
                  "startColumn": 33,
                  "endLine": 712,
                  "endColumn": 75,
                  "snippet": {
                    "text": "\t\t\t\tHelmChart:          \"mock/chart\",\n\t\t\t\tObservedGeneration: 2,\n\t\t\t\t// Confirm deprecated value is cleared.\n\t\t\t\tLastAttemptedValuesChecksum: \"b5cbcf5c23cfd945d2cdf0ffaab387a46f2d054f\",\n\t\t\t},\n\t\t}\n\n",
                    "rendered": {
                      "text": "\t\t\t\tHelmChart:          \"mock/chart\",\n\t\t\t\tObservedGeneration: 2,\n\t\t\t\t// Confirm deprecated value is cleared.\n\t\t\t\tLastAttemptedValuesChecksum: \"b5cbcf5c23cfd945d2cdf0ffaab387a46f2d054f\",\n\t\t\t},\n\t\t}\n\n",
                      "markdown": "`\t\t\t\tHelmChart:          \"mock/chart\",\n\t\t\t\tObservedGeneration: 2,\n\t\t\t\t// Confirm deprecated value is cleared.\n\t\t\t\tLastAttemptedValuesChecksum: \"b5cbcf5c23cfd945d2cdf0ffaab387a46f2d054f\",\n\t\t\t},\n\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/controller/helmrelease_controller_test.go"
                },
                "region": {
                  "startLine": 1305,
                  "startColumn": 4,
                  "endLine": 1305,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\tstore := helmstorage.Init(cfg.Driver)\n\t\tg.Expect(store.Create(rls)).To(Succeed())\n\n\t\t// update the postrenderers\n\t\terr = yaml.Unmarshal([]byte(patches2), &targeted)\n\t\tg.Expect(err).ToNot(HaveOccurred())\n\t\tobj.Spec.PostRenderers[0].Kustomize.Patches = targeted\n",
                    "rendered": {
                      "text": "\t\tstore := helmstorage.Init(cfg.Driver)\n\t\tg.Expect(store.Create(rls)).To(Succeed())\n\n\t\t// update the postrenderers\n\t\terr = yaml.Unmarshal([]byte(patches2), &targeted)\n\t\tg.Expect(err).ToNot(HaveOccurred())\n\t\tobj.Spec.PostRenderers[0].Kustomize.Patches = targeted\n",
                      "markdown": "`\t\tstore := helmstorage.Init(cfg.Driver)\n\t\tg.Expect(store.Create(rls)).To(Succeed())\n\n\t\t// update the postrenderers\n\t\terr = yaml.Unmarshal([]byte(patches2), &targeted)\n\t\tg.Expect(err).ToNot(HaveOccurred())\n\t\tobj.Spec.PostRenderers[0].Kustomize.Patches = targeted\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/controller/helmrelease_controller_test.go"
                },
                "region": {
                  "startLine": 843,
                  "startColumn": 4,
                  "endLine": 843,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t\"FactoryError\",\n\t\t}\n\n\t\t// Update ready condition for each failure, reconcile and check if the\n\t\t// stale failure condition gets updated.\n\t\tfor _, failReason := range prereqFailures {\n\t\t\tconditions.MarkFalse(obj, meta.ReadyCondition, failReason, \"foo\")\n",
                    "rendered": {
                      "text": "\t\t\t\"FactoryError\",\n\t\t}\n\n\t\t// Update ready condition for each failure, reconcile and check if the\n\t\t// stale failure condition gets updated.\n\t\tfor _, failReason := range prereqFailures {\n\t\t\tconditions.MarkFalse(obj, meta.ReadyCondition, failReason, \"foo\")\n",
                      "markdown": "`\t\t\t\"FactoryError\",\n\t\t}\n\n\t\t// Update ready condition for each failure, reconcile and check if the\n\t\t// stale failure condition gets updated.\n\t\tfor _, failReason := range prereqFailures {\n\t\t\tconditions.MarkFalse(obj, meta.ReadyCondition, failReason, \"foo\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/controller/helmrelease_controller_test.go"
                },
                "region": {
                  "startLine": 3313,
                  "startColumn": 2,
                  "endLine": 3313,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t\t\tg.Expect(err).ToNot(HaveOccurred())\n\t\t\thc, ok := got.(*sourcev1.HelmChart)\n\t\t\tg.Expect(ok).To(BeTrue())\n\t\t\texpect := g.Expect(hc.ObjectMeta)\n\t\t\tif tt.expectChart {\n\t\t\t\texpect.To(BeEquivalentTo(tt.chart.ObjectMeta))\n\t\t\t} else {\n",
                    "rendered": {
                      "text": "\t\t\tg.Expect(err).ToNot(HaveOccurred())\n\t\t\thc, ok := got.(*sourcev1.HelmChart)\n\t\t\tg.Expect(ok).To(BeTrue())\n\t\t\texpect := g.Expect(hc.ObjectMeta)\n\t\t\tif tt.expectChart {\n\t\t\t\texpect.To(BeEquivalentTo(tt.chart.ObjectMeta))\n\t\t\t} else {\n",
                      "markdown": "`\t\t\tg.Expect(err).ToNot(HaveOccurred())\n\t\t\thc, ok := got.(*sourcev1.HelmChart)\n\t\t\tg.Expect(ok).To(BeTrue())\n\t\t\texpect := g.Expect(hc.ObjectMeta)\n\t\t\tif tt.expectChart {\n\t\t\t\texpect.To(BeEquivalentTo(tt.chart.ObjectMeta))\n\t\t\t} else {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/controller/helmrelease_controller_test.go"
                },
                "region": {
                  "startLine": 3112,
                  "startColumn": 1,
                  "endLine": 3112,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\n\ttests := []struct {\n\t\tname      string\n\t\tenv       map[string]string\n\t\tgetConfig func() (*rest.Config, error)\n\t\tspec      v2.HelmReleaseSpec\n\t\tsecret    *corev1.Secret\n",
                    "rendered": {
                      "text": "\n\ttests := []struct {\n\t\tname      string\n\t\tenv       map[string]string\n\t\tgetConfig func() (*rest.Config, error)\n\t\tspec      v2.HelmReleaseSpec\n\t\tsecret    *corev1.Secret\n",
                      "markdown": "`\n\ttests := []struct {\n\t\tname      string\n\t\tenv       map[string]string\n\t\tgetConfig func() (*rest.Config, error)\n\t\tspec      v2.HelmReleaseSpec\n\t\tsecret    *corev1.Secret\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/controller/helmrelease_controller_test.go"
                },
                "region": {
                  "startLine": 2719,
                  "startColumn": 1,
                  "endLine": 2719,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\tname    string\n\t\tobj     *v2.HelmRelease\n\t\tobjects []client.Object\n\t\texpect  func(g *WithT, err error)\n\t}{\n\t\t{\n\t\t\tname: \"all dependencies ready\",\n",
                    "rendered": {
                      "text": "\t\tname    string\n\t\tobj     *v2.HelmRelease\n\t\tobjects []client.Object\n\t\texpect  func(g *WithT, err error)\n\t}{\n\t\t{\n\t\t\tname: \"all dependencies ready\",\n",
                      "markdown": "`\t\tname    string\n\t\tobj     *v2.HelmRelease\n\t\tobjects []client.Object\n\t\texpect  func(g *WithT, err error)\n\t}{\n\t\t{\n\t\t\tname: \"all dependencies ready\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/controller/helmrelease_controller.go"
                },
                "region": {
                  "startLine": 758,
                  "startColumn": 13,
                  "endLine": 758,
                  "endColumn": 18,
                  "snippet": {
                    "text": "func (r *HelmReleaseReconciler) waitForHistoryCacheSync(obj *v2.HelmRelease) wait.ConditionWithContextFunc {\n\tnewObj := &v2.HelmRelease{}\n\treturn func(ctx context.Context) (bool, error) {\n\t\tif err := r.Get(ctx, client.ObjectKeyFromObject(obj), newObj); err != nil {\n\t\t\tif apierrors.IsNotFound(err) {\n\t\t\t\treturn true, nil\n\t\t\t}\n",
                    "rendered": {
                      "text": "func (r *HelmReleaseReconciler) waitForHistoryCacheSync(obj *v2.HelmRelease) wait.ConditionWithContextFunc {\n\tnewObj := &v2.HelmRelease{}\n\treturn func(ctx context.Context) (bool, error) {\n\t\tif err := r.Get(ctx, client.ObjectKeyFromObject(obj), newObj); err != nil {\n\t\t\tif apierrors.IsNotFound(err) {\n\t\t\t\treturn true, nil\n\t\t\t}\n",
                      "markdown": "`func (r *HelmReleaseReconciler) waitForHistoryCacheSync(obj *v2.HelmRelease) wait.ConditionWithContextFunc {\n\tnewObj := &v2.HelmRelease{}\n\treturn func(ctx context.Context) (bool, error) {\n\t\tif err := r.Get(ctx, client.ObjectKeyFromObject(obj), newObj); err != nil {\n\t\t\tif apierrors.IsNotFound(err) {\n\t\t\t\treturn true, nil\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/controller/helmrelease_controller.go"
                },
                "region": {
                  "startLine": 744,
                  "startColumn": 19,
                  "endLine": 744,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t}\n\n\tor := sourcev1beta2.OCIRepository{}\n\tif err := r.Client.Get(ctx, ociRepoRef, &or); err != nil {\n\t\treturn nil, err\n\t}\n\treturn &or, nil\n",
                    "rendered": {
                      "text": "\t}\n\n\tor := sourcev1beta2.OCIRepository{}\n\tif err := r.Client.Get(ctx, ociRepoRef, &or); err != nil {\n\t\treturn nil, err\n\t}\n\treturn &or, nil\n",
                      "markdown": "`\t}\n\n\tor := sourcev1beta2.OCIRepository{}\n\tif err := r.Client.Get(ctx, ociRepoRef, &or); err != nil {\n\t\treturn nil, err\n\t}\n\treturn &or, nil\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/controller/helmrelease_controller.go"
                },
                "region": {
                  "startLine": 726,
                  "startColumn": 19,
                  "endLine": 726,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t}\n\n\thc := sourcev1.HelmChart{}\n\tif err := r.Client.Get(ctx, chartRef, &hc); err != nil {\n\t\treturn nil, err\n\t}\n\treturn &hc, nil\n",
                    "rendered": {
                      "text": "\t}\n\n\thc := sourcev1.HelmChart{}\n\tif err := r.Client.Get(ctx, chartRef, &hc); err != nil {\n\t\treturn nil, err\n\t}\n\treturn &hc, nil\n",
                      "markdown": "`\t}\n\n\thc := sourcev1.HelmChart{}\n\tif err := r.Client.Get(ctx, chartRef, &hc); err != nil {\n\t\treturn nil, err\n\t}\n\treturn &hc, nil\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/controller/helmrelease_controller.go"
                },
                "region": {
                  "startLine": 684,
                  "startColumn": 13,
                  "endLine": 684,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t\t\tName:      obj.Spec.KubeConfig.SecretRef.Name,\n\t\t}\n\t\tvar secret corev1.Secret\n\t\tif err := r.Get(ctx, secretName, &secret); err != nil {\n\t\t\treturn nil, fmt.Errorf(\"could not get KubeConfig secret '%s': %w\", secretName, err)\n\t\t}\n\t\tkubeConfig, err := kube.ConfigFromSecret(&secret, obj.Spec.KubeConfig.SecretRef.Key, r.KubeConfigOpts)\n",
                    "rendered": {
                      "text": "\t\t\tName:      obj.Spec.KubeConfig.SecretRef.Name,\n\t\t}\n\t\tvar secret corev1.Secret\n\t\tif err := r.Get(ctx, secretName, &secret); err != nil {\n\t\t\treturn nil, fmt.Errorf(\"could not get KubeConfig secret '%s': %w\", secretName, err)\n\t\t}\n\t\tkubeConfig, err := kube.ConfigFromSecret(&secret, obj.Spec.KubeConfig.SecretRef.Key, r.KubeConfigOpts)\n",
                      "markdown": "`\t\t\tName:      obj.Spec.KubeConfig.SecretRef.Name,\n\t\t}\n\t\tvar secret corev1.Secret\n\t\tif err := r.Get(ctx, secretName, &secret); err != nil {\n\t\t\treturn nil, fmt.Errorf(\"could not get KubeConfig secret '%s': %w\", secretName, err)\n\t\t}\n\t\tkubeConfig, err := kube.ConfigFromSecret(&secret, obj.Spec.KubeConfig.SecretRef.Key, r.KubeConfigOpts)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/controller/helmrelease_controller.go"
                },
                "region": {
                  "startLine": 631,
                  "startColumn": 29,
                  "endLine": 631,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n\t// Get the last successful release based on the observation for the v2beta1\n\t// object.\n\trls, err := cfg.NewStorage().Get(releaseName, version)\n\tif err != nil {\n\t\treturn err\n\t}\n",
                    "rendered": {
                      "text": "\n\t// Get the last successful release based on the observation for the v2beta1\n\t// object.\n\trls, err := cfg.NewStorage().Get(releaseName, version)\n\tif err != nil {\n\t\treturn err\n\t}\n",
                      "markdown": "`\n\t// Get the last successful release based on the observation for the v2beta1\n\t// object.\n\trls, err := cfg.NewStorage().Get(releaseName, version)\n\tif err != nil {\n\t\treturn err\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/controller/helmrelease_controller.go"
                },
                "region": {
                  "startLine": 589,
                  "startColumn": 23,
                  "endLine": 589,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\t\t}\n\n\t\tdHr := &v2.HelmRelease{}\n\t\tif err := r.APIReader.Get(ctx, ref, dHr); err != nil {\n\t\t\treturn fmt.Errorf(\"unable to get '%s' dependency: %w\", ref, err)\n\t\t}\n\n",
                    "rendered": {
                      "text": "\t\t}\n\n\t\tdHr := &v2.HelmRelease{}\n\t\tif err := r.APIReader.Get(ctx, ref, dHr); err != nil {\n\t\t\treturn fmt.Errorf(\"unable to get '%s' dependency: %w\", ref, err)\n\t\t}\n\n",
                      "markdown": "`\t\t}\n\n\t\tdHr := &v2.HelmRelease{}\n\t\tif err := r.APIReader.Get(ctx, ref, dHr); err != nil {\n\t\t\treturn fmt.Errorf(\"unable to get '%s' dependency: %w\", ref, err)\n\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/controller/helmrelease_controller.go"
                },
                "region": {
                  "startLine": 517,
                  "startColumn": 20,
                  "endLine": 517,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\t\t\tserviceAccount = serviceAccount[i+1:]\n\t\t\t}\n\n\t\t\tif err = r.Client.Get(ctx, types.NamespacedName{\n\t\t\t\tNamespace: obj.GetNamespace(),\n\t\t\t\tName:      serviceAccount,\n\t\t\t}, &corev1.ServiceAccount{}); err != nil {\n",
                    "rendered": {
                      "text": "\t\t\t\tserviceAccount = serviceAccount[i+1:]\n\t\t\t}\n\n\t\t\tif err = r.Client.Get(ctx, types.NamespacedName{\n\t\t\t\tNamespace: obj.GetNamespace(),\n\t\t\t\tName:      serviceAccount,\n\t\t\t}, &corev1.ServiceAccount{}); err != nil {\n",
                      "markdown": "`\t\t\t\tserviceAccount = serviceAccount[i+1:]\n\t\t\t}\n\n\t\t\tif err = r.Client.Get(ctx, types.NamespacedName{\n\t\t\t\tNamespace: obj.GetNamespace(),\n\t\t\t\tName:      serviceAccount,\n\t\t\t}, &corev1.ServiceAccount{}); err != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/controller/helmrelease_controller.go"
                },
                "region": {
                  "startLine": 160,
                  "startColumn": 12,
                  "endLine": 160,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n\t// Fetch the HelmRelease\n\tobj := &v2.HelmRelease{}\n\tif err := r.Get(ctx, req.NamespacedName, obj); err != nil {\n\t\treturn ctrl.Result{}, client.IgnoreNotFound(err)\n\t}\n\n",
                    "rendered": {
                      "text": "\n\t// Fetch the HelmRelease\n\tobj := &v2.HelmRelease{}\n\tif err := r.Get(ctx, req.NamespacedName, obj); err != nil {\n\t\treturn ctrl.Result{}, client.IgnoreNotFound(err)\n\t}\n\n",
                      "markdown": "`\n\t// Fetch the HelmRelease\n\tobj := &v2.HelmRelease{}\n\tif err := r.Get(ctx, req.NamespacedName, obj); err != nil {\n\t\treturn ctrl.Result{}, client.IgnoreNotFound(err)\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/controller/helmrelease_controller.go"
                },
                "region": {
                  "startLine": 753,
                  "startColumn": 42,
                  "endLine": 753,
                  "endColumn": 46,
                  "snippet": {
                    "text": "// waitForHistoryCacheSync returns a function that can be used to wait for the\n// cache backing the Kubernetes client to be in sync with the current state of\n// the v2.HelmRelease.\n// This is a trade-off between not caching at all, and introducing a slight\n// delay to ensure we always have the latest history state.\nfunc (r *HelmReleaseReconciler) waitForHistoryCacheSync(obj *v2.HelmRelease) wait.ConditionWithContextFunc {\n\tnewObj := &v2.HelmRelease{}\n",
                    "rendered": {
                      "text": "// waitForHistoryCacheSync returns a function that can be used to wait for the\n// cache backing the Kubernetes client to be in sync with the current state of\n// the v2.HelmRelease.\n// This is a trade-off between not caching at all, and introducing a slight\n// delay to ensure we always have the latest history state.\nfunc (r *HelmReleaseReconciler) waitForHistoryCacheSync(obj *v2.HelmRelease) wait.ConditionWithContextFunc {\n\tnewObj := &v2.HelmRelease{}\n",
                      "markdown": "`// waitForHistoryCacheSync returns a function that can be used to wait for the\n// cache backing the Kubernetes client to be in sync with the current state of\n// the v2.HelmRelease.\n// This is a trade-off between not caching at all, and introducing a slight\n// delay to ensure we always have the latest history state.\nfunc (r *HelmReleaseReconciler) waitForHistoryCacheSync(obj *v2.HelmRelease) wait.ConditionWithContextFunc {\n\tnewObj := &v2.HelmRelease{}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/controller/helmrelease_controller.go"
                },
                "region": {
                  "startLine": 662,
                  "startColumn": 22,
                  "endLine": 662,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t}\n\n\t// if we have a reconciled object with PostRenderers not reflected in the\n\t// status, we need to update the status.\n\tif obj.Spec.PostRenderers != nil && obj.Status.ObservedPostRenderersDigest == \"\" {\n\t\tobj.Status.ObservedPostRenderersDigest = postrender.Digest(digest.Canonical, obj.Spec.PostRenderers).String()\n\t}\n",
                    "rendered": {
                      "text": "\t}\n\n\t// if we have a reconciled object with PostRenderers not reflected in the\n\t// status, we need to update the status.\n\tif obj.Spec.PostRenderers != nil && obj.Status.ObservedPostRenderersDigest == \"\" {\n\t\tobj.Status.ObservedPostRenderersDigest = postrender.Digest(digest.Canonical, obj.Spec.PostRenderers).String()\n\t}\n",
                      "markdown": "`\t}\n\n\t// if we have a reconciled object with PostRenderers not reflected in the\n\t// status, we need to update the status.\n\tif obj.Spec.PostRenderers != nil && obj.Status.ObservedPostRenderersDigest == \"\" {\n\t\tobj.Status.ObservedPostRenderersDigest = postrender.Digest(digest.Canonical, obj.Spec.PostRenderers).String()\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/controller/suite_test.go"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 28,
                  "endLine": 100,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\n// GetTestClusterConfig returns a copy of the test cluster config.\nfunc GetTestClusterConfig() (*rest.Config, error) {\n\treturn rest.CopyConfig(testEnv.GetConfig()), nil\n}\n",
                    "rendered": {
                      "text": "\n// GetTestClusterConfig returns a copy of the test cluster config.\nfunc GetTestClusterConfig() (*rest.Config, error) {\n\treturn rest.CopyConfig(testEnv.GetConfig()), nil\n}\n",
                      "markdown": "`\n// GetTestClusterConfig returns a copy of the test cluster config.\nfunc GetTestClusterConfig() (*rest.Config, error) {\n\treturn rest.CopyConfig(testEnv.GetConfig()), nil\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/diff/summarize_test.go"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7,
                  "endLine": 18,
                  "snippet": {
                    "text": "limitations under the License.\n*/\n\npackage diff\n\nimport (\n\t\"testing\"\n\n",
                    "rendered": {
                      "text": "limitations under the License.\n*/\n\npackage diff\n\nimport (\n\t\"testing\"\n\n",
                      "markdown": "`limitations under the License.\n*/\n\npackage diff\n\nimport (\n\t\"testing\"\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/diff/summarize.go"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 7,
                  "endLine": 98,
                  "endColumn": 13,
                  "snippet": {
                    "text": "//\tremoved: 1, changed: 3, excluded: 1, unchanged: 2\nfunc SummarizeDiffSetBrief(set jsondiff.DiffSet, include ...jsondiff.DiffType) string {\n\tvar removed, changed, excluded, unchanged int\n\tfor _, diff := range set {\n\t\tswitch diff.Type {\n\t\tcase jsondiff.DiffTypeCreate:\n\t\t\tremoved++\n",
                    "rendered": {
                      "text": "//\tremoved: 1, changed: 3, excluded: 1, unchanged: 2\nfunc SummarizeDiffSetBrief(set jsondiff.DiffSet, include ...jsondiff.DiffType) string {\n\tvar removed, changed, excluded, unchanged int\n\tfor _, diff := range set {\n\t\tswitch diff.Type {\n\t\tcase jsondiff.DiffTypeCreate:\n\t\t\tremoved++\n",
                      "markdown": "`//\tremoved: 1, changed: 3, excluded: 1, unchanged: 2\nfunc SummarizeDiffSetBrief(set jsondiff.DiffSet, include ...jsondiff.DiffType) string {\n\tvar removed, changed, excluded, unchanged int\n\tfor _, diff := range set {\n\t\tswitch diff.Type {\n\t\tcase jsondiff.DiffTypeCreate:\n\t\t\tremoved++\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/diff/summarize.go"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 4,
                  "endLine": 64,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n\tvar summary strings.Builder\n\tfor _, diff := range set {\n\t\tif diff == nil || !typeInSlice(diff.Type, include) {\n\t\t\tcontinue\n\t\t}\n\n",
                    "rendered": {
                      "text": "\n\tvar summary strings.Builder\n\tfor _, diff := range set {\n\t\tif diff == nil || !typeInSlice(diff.Type, include) {\n\t\t\tcontinue\n\t\t}\n\n",
                      "markdown": "`\n\tvar summary strings.Builder\n\tfor _, diff := range set {\n\t\tif diff == nil || !typeInSlice(diff.Type, include) {\n\t\t\tcontinue\n\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/diff/summarize.go"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 7,
                  "endLine": 63,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\t}\n\n\tvar summary strings.Builder\n\tfor _, diff := range set {\n\t\tif diff == nil || !typeInSlice(diff.Type, include) {\n\t\t\tcontinue\n\t\t}\n",
                    "rendered": {
                      "text": "\t}\n\n\tvar summary strings.Builder\n\tfor _, diff := range set {\n\t\tif diff == nil || !typeInSlice(diff.Type, include) {\n\t\t\tcontinue\n\t\t}\n",
                      "markdown": "`\t}\n\n\tvar summary strings.Builder\n\tfor _, diff := range set {\n\t\tif diff == nil || !typeInSlice(diff.Type, include) {\n\t\t\tcontinue\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/diff/summarize.go"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7,
                  "endLine": 18,
                  "snippet": {
                    "text": "limitations under the License.\n*/\n\npackage diff\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n",
                    "rendered": {
                      "text": "limitations under the License.\n*/\n\npackage diff\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n",
                      "markdown": "`limitations under the License.\n*/\n\npackage diff\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/diff/unstructured_test.go"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7,
                  "endLine": 18,
                  "snippet": {
                    "text": "limitations under the License.\n*/\n\npackage diff\n\nimport (\n\t\"testing\"\n\n",
                    "rendered": {
                      "text": "limitations under the License.\n*/\n\npackage diff\n\nimport (\n\t\"testing\"\n\n",
                      "markdown": "`limitations under the License.\n*/\n\npackage diff\n\nimport (\n\t\"testing\"\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/diff/unstructured.go"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 7,
                  "endLine": 18,
                  "snippet": {
                    "text": "limitations under the License.\n*/\n\npackage diff\n\nimport (\n\t\"github.com/google/go-cmp/cmp\"\n\t\"k8s.io/apimachinery/pkg/apis/meta/v1/unstructured\"\n",
                    "rendered": {
                      "text": "limitations under the License.\n*/\n\npackage diff\n\nimport (\n\t\"github.com/google/go-cmp/cmp\"\n\t\"k8s.io/apimachinery/pkg/apis/meta/v1/unstructured\"\n",
                      "markdown": "`limitations under the License.\n*/\n\npackage diff\n\nimport (\n\t\"github.com/google/go-cmp/cmp\"\n\t\"k8s.io/apimachinery/pkg/apis/meta/v1/unstructured\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/loader/testdata/chart-0.1.0.tgz/chart-0.tar/chart/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 12,
                  "endLine": 13,
                  "snippet": {
                    "text": "spec:\n  containers:\n    - name: wget\n      image: busybox\n      command: ['wget']\n      args: ['{{ include \"chart.fullname\" . }}:{{ .Values.service.port }}']\n  restartPolicy: Never\n",
                    "rendered": {
                      "text": "spec:\n  containers:\n    - name: wget\n      image: busybox\n      command: ['wget']\n      args: ['{{ include \"chart.fullname\" . }}:{{ .Values.service.port }}']\n  restartPolicy: Never\n",
                      "markdown": "`spec:\n  containers:\n    - name: wget\n      image: busybox\n      command: ['wget']\n      args: ['{{ include \"chart.fullname\" . }}:{{ .Values.service.port }}']\n  restartPolicy: Never\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/loader/testdata/chart-0.1.0.tgz/chart-0.tar/chart/templates/tests/test-connection.yaml"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 11,
                  "endLine": 12,
                  "snippet": {
                    "text": "    \"helm.sh/hook\": test\nspec:\n  containers:\n    - name: wget\n      image: busybox\n      command: ['wget']\n      args: ['{{ include \"chart.fullname\" . }}:{{ .Values.service.port }}']\n  restartPolicy: Never\n",
                    "rendered": {
                      "text": "    \"helm.sh/hook\": test\nspec:\n  containers:\n    - name: wget\n      image: busybox\n      command: ['wget']\n      args: ['{{ include \"chart.fullname\" . }}:{{ .Values.service.port }}']\n  restartPolicy: Never\n",
                      "markdown": "`    \"helm.sh/hook\": test\nspec:\n  containers:\n    - name: wget\n      image: busybox\n      command: ['wget']\n      args: ['{{ include \"chart.fullname\" . }}:{{ .Values.service.port }}']\n  restartPolicy: Never\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/loader/testdata/chart-0.1.0.tgz/chart-0.tar/chart/templates/service.yaml"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 5,
                  "endLine": 3,
                  "snippet": {
                    "text": "apiVersion: v1\nkind: Service\nmetadata:\n  name: {{ include \"chart.fullname\" . }}\n  labels:\n    {{- include \"chart.labels\" . | nindent 4 }}\n",
                    "rendered": {
                      "text": "apiVersion: v1\nkind: Service\nmetadata:\n  name: {{ include \"chart.fullname\" . }}\n  labels:\n    {{- include \"chart.labels\" . | nindent 4 }}\n",
                      "markdown": "`apiVersion: v1\nkind: Service\nmetadata:\n  name: {{ include \"chart.fullname\" . }}\n  labels:\n    {{- include \"chart.labels\" . | nindent 4 }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/loader/testdata/chart-0.1.0.tgz/chart-0.tar/chart/templates/_helpers.tpl"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 11,
                  "endLine": 10,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n{{/*\nCreate a default fully qualified app name.\nWe truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).\nIf release name contains chart name it will be used as a full name.\n*/}}\n{{- define \"chart.fullname\" -}}\n",
                    "rendered": {
                      "text": "\n{{/*\nCreate a default fully qualified app name.\nWe truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).\nIf release name contains chart name it will be used as a full name.\n*/}}\n{{- define \"chart.fullname\" -}}\n",
                      "markdown": "`\n{{/*\nCreate a default fully qualified app name.\nWe truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).\nIf release name contains chart name it will be used as a full name.\n*/}}\n{{- define \"chart.fullname\" -}}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/loader/testdata/chart-0.1.0.tgz/chart-0.tar/chart/templates/_helpers.tpl"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 4,
                  "endLine": 2,
                  "endColumn": 7,
                  "snippet": {
                    "text": "{{/*\nExpand the name of the chart.\n*/}}\n{{- define \"chart.name\" -}}\n{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix \"-\" }}\n",
                    "rendered": {
                      "text": "{{/*\nExpand the name of the chart.\n*/}}\n{{- define \"chart.name\" -}}\n{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix \"-\" }}\n",
                      "markdown": "`{{/*\nExpand the name of the chart.\n*/}}\n{{- define \"chart.name\" -}}\n{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix \"-\" }}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/loader/testdata/chart-0.1.0.tgz/chart-0.tar/chart/templates/_helpers.tpl"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 22,
                  "endLine": 54,
                  "endColumn": 31,
                  "snippet": {
                    "text": "{{- end }}\n\n{{/*\nCreate the name of the service account to use\n*/}}\n{{- define \"chart.serviceAccountName\" -}}\n{{- if .Values.serviceAccount.create }}\n",
                    "rendered": {
                      "text": "{{- end }}\n\n{{/*\nCreate the name of the service account to use\n*/}}\n{{- define \"chart.serviceAccountName\" -}}\n{{- if .Values.serviceAccount.create }}\n",
                      "markdown": "`{{- end }}\n\n{{/*\nCreate the name of the service account to use\n*/}}\n{{- define \"chart.serviceAccountName\" -}}\n{{- if .Values.serviceAccount.create }}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/loader/testdata/chart-0.1.0.tgz/chart-0.tar/chart/templates/_helpers.tpl"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 4,
                  "endLine": 2,
                  "endColumn": 7,
                  "snippet": {
                    "text": "{{/*\nExpand the name of the chart.\n*/}}\n{{- define \"chart.name\" -}}\n{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix \"-\" }}\n",
                    "rendered": {
                      "text": "{{/*\nExpand the name of the chart.\n*/}}\n{{- define \"chart.name\" -}}\n{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix \"-\" }}\n",
                      "markdown": "`{{/*\nExpand the name of the chart.\n*/}}\n{{- define \"chart.name\" -}}\n{{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix \"-\" }}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/upgrade_test.go"
                },
                "region": {
                  "startLine": 572,
                  "startColumn": 20,
                  "endLine": 572,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\n\t\tg.Expect(conditions.IsTrue(req.Object, v2.ReleasedCondition)).To(BeTrue())\n\n\t\tcond := conditions.Get(req.Object, v2.TestSuccessCondition)\n\t\tg.Expect(cond).ToNot(BeNil())\n\n\t\texpectMsg := fmt.Sprintf(fmtTestPending,\n",
                    "rendered": {
                      "text": "\n\t\tg.Expect(conditions.IsTrue(req.Object, v2.ReleasedCondition)).To(BeTrue())\n\n\t\tcond := conditions.Get(req.Object, v2.TestSuccessCondition)\n\t\tg.Expect(cond).ToNot(BeNil())\n\n\t\texpectMsg := fmt.Sprintf(fmtTestPending,\n",
                      "markdown": "`\n\t\tg.Expect(conditions.IsTrue(req.Object, v2.ReleasedCondition)).To(BeTrue())\n\n\t\tcond := conditions.Get(req.Object, v2.TestSuccessCondition)\n\t\tg.Expect(cond).ToNot(BeNil())\n\n\t\texpectMsg := fmt.Sprintf(fmtTestPending,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/upgrade_test.go"
                },
                "region": {
                  "startLine": 387,
                  "startColumn": 50,
                  "endLine": 387,
                  "endColumn": 70,
                  "snippet": {
                    "text": "\t\t\t\tobj.Status = tt.status(releases)\n\t\t\t}\n\n\t\t\tgetter, err := RESTClientGetterFromManager(testEnv.Manager, obj.GetReleaseNamespace())\n\t\t\tg.Expect(err).ToNot(HaveOccurred())\n\n\t\t\tcfg, err := action.NewConfigFactory(getter,\n",
                    "rendered": {
                      "text": "\t\t\t\tobj.Status = tt.status(releases)\n\t\t\t}\n\n\t\t\tgetter, err := RESTClientGetterFromManager(testEnv.Manager, obj.GetReleaseNamespace())\n\t\t\tg.Expect(err).ToNot(HaveOccurred())\n\n\t\t\tcfg, err := action.NewConfigFactory(getter,\n",
                      "markdown": "`\t\t\t\tobj.Status = tt.status(releases)\n\t\t\t}\n\n\t\t\tgetter, err := RESTClientGetterFromManager(testEnv.Manager, obj.GetReleaseNamespace())\n\t\t\tg.Expect(err).ToNot(HaveOccurred())\n\n\t\t\tcfg, err := action.NewConfigFactory(getter,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/upgrade_test.go"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 37,
                  "endLine": 53,
                  "endColumn": 45,
                  "snippet": {
                    "text": "func TestUpgrade_Reconcile(t *testing.T) {\n\tvar (\n\t\tmockCreateErr = fmt.Errorf(\"storage create error\")\n\t\tmockUpdateErr = fmt.Errorf(\"storage update error\")\n\t)\n\n\ttests := []struct {\n",
                    "rendered": {
                      "text": "func TestUpgrade_Reconcile(t *testing.T) {\n\tvar (\n\t\tmockCreateErr = fmt.Errorf(\"storage create error\")\n\t\tmockUpdateErr = fmt.Errorf(\"storage update error\")\n\t)\n\n\ttests := []struct {\n",
                      "markdown": "`func TestUpgrade_Reconcile(t *testing.T) {\n\tvar (\n\t\tmockCreateErr = fmt.Errorf(\"storage create error\")\n\t\tmockUpdateErr = fmt.Errorf(\"storage update error\")\n\t)\n\n\ttests := []struct {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/helmchart_template_test.go"
                },
                "region": {
                  "startLine": 636,
                  "startColumn": 19,
                  "endLine": 636,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t\tg.Expect(err).To(HaveOccurred())\n\t\tg.Expect(obj.Status.HelmChart).ToNot(BeEmpty())\n\n\t\tg.Expect(r.client.Get(context.TODO(),\n\t\t\ttypes.NamespacedName{Namespace: chart.Namespace, Name: chart.Name},\n\t\t\t&sourcev1.HelmChart{}),\n\t\t).To(Succeed())\n",
                    "rendered": {
                      "text": "\t\tg.Expect(err).To(HaveOccurred())\n\t\tg.Expect(obj.Status.HelmChart).ToNot(BeEmpty())\n\n\t\tg.Expect(r.client.Get(context.TODO(),\n\t\t\ttypes.NamespacedName{Namespace: chart.Namespace, Name: chart.Name},\n\t\t\t&sourcev1.HelmChart{}),\n\t\t).To(Succeed())\n",
                      "markdown": "`\t\tg.Expect(err).To(HaveOccurred())\n\t\tg.Expect(obj.Status.HelmChart).ToNot(BeEmpty())\n\n\t\tg.Expect(r.client.Get(context.TODO(),\n\t\t\ttypes.NamespacedName{Namespace: chart.Namespace, Name: chart.Name},\n\t\t\t&sourcev1.HelmChart{}),\n\t\t).To(Succeed())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/helmchart_template_test.go"
                },
                "region": {
                  "startLine": 597,
                  "startColumn": 17,
                  "endLine": 597,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t\tg.Expect(obj.Status.HelmChart).ToNot(BeEmpty())\n\n\t\tg.Consistently(func(g Gomega) {\n\t\t\terr = r.client.Get(context.TODO(), types.NamespacedName{Namespace: \"default\", Name: \"chart\"}, &sourcev1.HelmChart{})\n\t\t\tg.Expect(err).ToNot(HaveOccurred())\n\t\t}).Should(Succeed())\n\t})\n",
                    "rendered": {
                      "text": "\t\tg.Expect(obj.Status.HelmChart).ToNot(BeEmpty())\n\n\t\tg.Consistently(func(g Gomega) {\n\t\t\terr = r.client.Get(context.TODO(), types.NamespacedName{Namespace: \"default\", Name: \"chart\"}, &sourcev1.HelmChart{})\n\t\t\tg.Expect(err).ToNot(HaveOccurred())\n\t\t}).Should(Succeed())\n\t})\n",
                      "markdown": "`\t\tg.Expect(obj.Status.HelmChart).ToNot(BeEmpty())\n\n\t\tg.Consistently(func(g Gomega) {\n\t\t\terr = r.client.Get(context.TODO(), types.NamespacedName{Namespace: \"default\", Name: \"chart\"}, &sourcev1.HelmChart{})\n\t\t\tg.Expect(err).ToNot(HaveOccurred())\n\t\t}).Should(Succeed())\n\t})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/helmchart_template_test.go"
                },
                "region": {
                  "startLine": 536,
                  "startColumn": 16,
                  "endLine": 536,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\tg.Expect(err).ToNot(HaveOccurred())\n\t\tg.Expect(obj.Status.HelmChart).To(BeEmpty())\n\n\t\terr = r.client.Get(context.TODO(), types.NamespacedName{Namespace: \"default\", Name: \"chart\"}, &sourcev1.HelmChart{})\n\t\tg.Expect(err).To(HaveOccurred())\n\t\tg.Expect(apierrors.IsNotFound(err)).To(BeTrue())\n\t})\n",
                    "rendered": {
                      "text": "\t\tg.Expect(err).ToNot(HaveOccurred())\n\t\tg.Expect(obj.Status.HelmChart).To(BeEmpty())\n\n\t\terr = r.client.Get(context.TODO(), types.NamespacedName{Namespace: \"default\", Name: \"chart\"}, &sourcev1.HelmChart{})\n\t\tg.Expect(err).To(HaveOccurred())\n\t\tg.Expect(apierrors.IsNotFound(err)).To(BeTrue())\n\t})\n",
                      "markdown": "`\t\tg.Expect(err).ToNot(HaveOccurred())\n\t\tg.Expect(obj.Status.HelmChart).To(BeEmpty())\n\n\t\terr = r.client.Get(context.TODO(), types.NamespacedName{Namespace: \"default\", Name: \"chart\"}, &sourcev1.HelmChart{})\n\t\tg.Expect(err).To(HaveOccurred())\n\t\tg.Expect(apierrors.IsNotFound(err)).To(BeTrue())\n\t})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/helmchart_template_test.go"
                },
                "region": {
                  "startLine": 442,
                  "startColumn": 16,
                  "endLine": 442,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\tg.Expect(err).To(HaveOccurred())\n\t\tg.Expect(obj.Status.HelmChart).To(BeEmpty())\n\n\t\terr = r.client.Get(context.TODO(), types.NamespacedName{Namespace: \"other\", Name: \"chart\"}, &sourcev1.HelmChart{})\n\t\tg.Expect(err).To(HaveOccurred())\n\t\tg.Expect(apierrors.IsNotFound(err)).To(BeTrue())\n\t})\n",
                    "rendered": {
                      "text": "\t\tg.Expect(err).To(HaveOccurred())\n\t\tg.Expect(obj.Status.HelmChart).To(BeEmpty())\n\n\t\terr = r.client.Get(context.TODO(), types.NamespacedName{Namespace: \"other\", Name: \"chart\"}, &sourcev1.HelmChart{})\n\t\tg.Expect(err).To(HaveOccurred())\n\t\tg.Expect(apierrors.IsNotFound(err)).To(BeTrue())\n\t})\n",
                      "markdown": "`\t\tg.Expect(err).To(HaveOccurred())\n\t\tg.Expect(obj.Status.HelmChart).To(BeEmpty())\n\n\t\terr = r.client.Get(context.TODO(), types.NamespacedName{Namespace: \"other\", Name: \"chart\"}, &sourcev1.HelmChart{})\n\t\tg.Expect(err).To(HaveOccurred())\n\t\tg.Expect(apierrors.IsNotFound(err)).To(BeTrue())\n\t})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/helmchart_template_test.go"
                },
                "region": {
                  "startLine": 402,
                  "startColumn": 20,
                  "endLine": 402,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\n\t\texpectChart := sourcev1.HelmChart{}\n\t\tg.Eventually(func(g Gomega) {\n\t\t\tg.Expect(r.client.Get(context.TODO(), types.NamespacedName{\n\t\t\t\tNamespace: obj.Spec.Chart.GetNamespace(obj.Namespace),\n\t\t\t\tName:      obj.GetHelmChartName()},\n\t\t\t\t&expectChart,\n",
                    "rendered": {
                      "text": "\n\t\texpectChart := sourcev1.HelmChart{}\n\t\tg.Eventually(func(g Gomega) {\n\t\t\tg.Expect(r.client.Get(context.TODO(), types.NamespacedName{\n\t\t\t\tNamespace: obj.Spec.Chart.GetNamespace(obj.Namespace),\n\t\t\t\tName:      obj.GetHelmChartName()},\n\t\t\t\t&expectChart,\n",
                      "markdown": "`\n\t\texpectChart := sourcev1.HelmChart{}\n\t\tg.Eventually(func(g Gomega) {\n\t\t\tg.Expect(r.client.Get(context.TODO(), types.NamespacedName{\n\t\t\t\tNamespace: obj.Spec.Chart.GetNamespace(obj.Namespace),\n\t\t\t\tName:      obj.GetHelmChartName()},\n\t\t\t\t&expectChart,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/helmchart_template_test.go"
                },
                "region": {
                  "startLine": 359,
                  "startColumn": 18,
                  "endLine": 359,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t\tg.Expect(obj.Status.HelmChart).ToNot(BeEmpty())\n\n\t\tnewChart := sourcev1.HelmChart{}\n\t\tg.Expect(testEnv.Get(context.TODO(), types.NamespacedName{\n\t\t\tNamespace: obj.Spec.Chart.GetNamespace(obj.Namespace),\n\t\t\tName:      obj.GetHelmChartName()}, &newChart)).To(Succeed())\n\t\tg.Expect(newChart.ResourceVersion).To(Equal(existingChart.ResourceVersion), \"HelmChart should not have been updated\")\n",
                    "rendered": {
                      "text": "\t\tg.Expect(obj.Status.HelmChart).ToNot(BeEmpty())\n\n\t\tnewChart := sourcev1.HelmChart{}\n\t\tg.Expect(testEnv.Get(context.TODO(), types.NamespacedName{\n\t\t\tNamespace: obj.Spec.Chart.GetNamespace(obj.Namespace),\n\t\t\tName:      obj.GetHelmChartName()}, &newChart)).To(Succeed())\n\t\tg.Expect(newChart.ResourceVersion).To(Equal(existingChart.ResourceVersion), \"HelmChart should not have been updated\")\n",
                      "markdown": "`\t\tg.Expect(obj.Status.HelmChart).ToNot(BeEmpty())\n\n\t\tnewChart := sourcev1.HelmChart{}\n\t\tg.Expect(testEnv.Get(context.TODO(), types.NamespacedName{\n\t\t\tNamespace: obj.Spec.Chart.GetNamespace(obj.Namespace),\n\t\t\tName:      obj.GetHelmChartName()}, &newChart)).To(Succeed())\n\t\tg.Expect(newChart.ResourceVersion).To(Equal(existingChart.ResourceVersion), \"HelmChart should not have been updated\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/helmchart_template_test.go"
                },
                "region": {
                  "startLine": 288,
                  "startColumn": 19,
                  "endLine": 288,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\n\t\tnewChart := sourcev1.HelmChart{}\n\t\tg.Eventually(func(g Gomega) {\n\t\t\tg.Expect(testEnv.Get(context.TODO(), types.NamespacedName{\n\t\t\t\tNamespace: obj.Spec.Chart.GetNamespace(obj.Namespace),\n\t\t\t\tName:      obj.GetHelmChartName()}, &newChart)).To(Succeed())\n\n",
                    "rendered": {
                      "text": "\n\t\tnewChart := sourcev1.HelmChart{}\n\t\tg.Eventually(func(g Gomega) {\n\t\t\tg.Expect(testEnv.Get(context.TODO(), types.NamespacedName{\n\t\t\t\tNamespace: obj.Spec.Chart.GetNamespace(obj.Namespace),\n\t\t\t\tName:      obj.GetHelmChartName()}, &newChart)).To(Succeed())\n\n",
                      "markdown": "`\n\t\tnewChart := sourcev1.HelmChart{}\n\t\tg.Eventually(func(g Gomega) {\n\t\t\tg.Expect(testEnv.Get(context.TODO(), types.NamespacedName{\n\t\t\t\tNamespace: obj.Spec.Chart.GetNamespace(obj.Namespace),\n\t\t\t\tName:      obj.GetHelmChartName()}, &newChart)).To(Succeed())\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/helmchart_template_test.go"
                },
                "region": {
                  "startLine": 216,
                  "startColumn": 19,
                  "endLine": 216,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\n\t\texpectChart := sourcev1.HelmChart{}\n\t\tg.Eventually(func(g Gomega) {\n\t\t\tg.Expect(testEnv.Get(context.TODO(), types.NamespacedName{\n\t\t\t\tNamespace: obj.Spec.Chart.GetNamespace(obj.Namespace),\n\t\t\t\tName:      obj.GetHelmChartName()},\n\t\t\t\t&expectChart,\n",
                    "rendered": {
                      "text": "\n\t\texpectChart := sourcev1.HelmChart{}\n\t\tg.Eventually(func(g Gomega) {\n\t\t\tg.Expect(testEnv.Get(context.TODO(), types.NamespacedName{\n\t\t\t\tNamespace: obj.Spec.Chart.GetNamespace(obj.Namespace),\n\t\t\t\tName:      obj.GetHelmChartName()},\n\t\t\t\t&expectChart,\n",
                      "markdown": "`\n\t\texpectChart := sourcev1.HelmChart{}\n\t\tg.Eventually(func(g Gomega) {\n\t\t\tg.Expect(testEnv.Get(context.TODO(), types.NamespacedName{\n\t\t\t\tNamespace: obj.Spec.Chart.GetNamespace(obj.Namespace),\n\t\t\t\tName:      obj.GetHelmChartName()},\n\t\t\t\t&expectChart,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/helmchart_template_test.go"
                },
                "region": {
                  "startLine": 169,
                  "startColumn": 40,
                  "endLine": 169,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\t\t))\n\n\t\tg.Eventually(func(g Gomega) {\n\t\t\tg.Expect(apierrors.IsNotFound(testEnv.Get(context.TODO(),\n\t\t\t\ttypes.NamespacedName{\n\t\t\t\t\tNamespace: existingChart.GetNamespace(),\n\t\t\t\t\tName:      existingChart.GetName(),\n",
                    "rendered": {
                      "text": "\t\t))\n\n\t\tg.Eventually(func(g Gomega) {\n\t\t\tg.Expect(apierrors.IsNotFound(testEnv.Get(context.TODO(),\n\t\t\t\ttypes.NamespacedName{\n\t\t\t\t\tNamespace: existingChart.GetNamespace(),\n\t\t\t\t\tName:      existingChart.GetName(),\n",
                      "markdown": "`\t\t))\n\n\t\tg.Eventually(func(g Gomega) {\n\t\t\tg.Expect(apierrors.IsNotFound(testEnv.Get(context.TODO(),\n\t\t\t\ttypes.NamespacedName{\n\t\t\t\t\tNamespace: existingChart.GetNamespace(),\n\t\t\t\t\tName:      existingChart.GetName(),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/helmchart_template_test.go"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 40,
                  "endLine": 105,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\t\tg.Expect(obj.Status.HelmChart).To(BeEmpty())\n\n\t\tg.Eventually(func(g Gomega) {\n\t\t\tg.Expect(apierrors.IsNotFound(testEnv.Get(context.TODO(),\n\t\t\t\ttypes.NamespacedName{\n\t\t\t\t\tNamespace: existingChart.GetNamespace(),\n\t\t\t\t\tName:      existingChart.GetName(),\n",
                    "rendered": {
                      "text": "\t\tg.Expect(obj.Status.HelmChart).To(BeEmpty())\n\n\t\tg.Eventually(func(g Gomega) {\n\t\t\tg.Expect(apierrors.IsNotFound(testEnv.Get(context.TODO(),\n\t\t\t\ttypes.NamespacedName{\n\t\t\t\t\tNamespace: existingChart.GetNamespace(),\n\t\t\t\t\tName:      existingChart.GetName(),\n",
                      "markdown": "`\t\tg.Expect(obj.Status.HelmChart).To(BeEmpty())\n\n\t\tg.Eventually(func(g Gomega) {\n\t\t\tg.Expect(apierrors.IsNotFound(testEnv.Get(context.TODO(),\n\t\t\t\ttypes.NamespacedName{\n\t\t\t\t\tNamespace: existingChart.GetNamespace(),\n\t\t\t\t\tName:      existingChart.GetName(),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/helmchart_template_test.go"
                },
                "region": {
                  "startLine": 359,
                  "startColumn": 15,
                  "endLine": 359,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t\tg.Expect(obj.Status.HelmChart).ToNot(BeEmpty())\n\n\t\tnewChart := sourcev1.HelmChart{}\n\t\tg.Expect(testEnv.Get(context.TODO(), types.NamespacedName{\n\t\t\tNamespace: obj.Spec.Chart.GetNamespace(obj.Namespace),\n\t\t\tName:      obj.GetHelmChartName()}, &newChart)).To(Succeed())\n\t\tg.Expect(newChart.ResourceVersion).To(Equal(existingChart.ResourceVersion), \"HelmChart should not have been updated\")\n",
                    "rendered": {
                      "text": "\t\tg.Expect(obj.Status.HelmChart).ToNot(BeEmpty())\n\n\t\tnewChart := sourcev1.HelmChart{}\n\t\tg.Expect(testEnv.Get(context.TODO(), types.NamespacedName{\n\t\t\tNamespace: obj.Spec.Chart.GetNamespace(obj.Namespace),\n\t\t\tName:      obj.GetHelmChartName()}, &newChart)).To(Succeed())\n\t\tg.Expect(newChart.ResourceVersion).To(Equal(existingChart.ResourceVersion), \"HelmChart should not have been updated\")\n",
                      "markdown": "`\t\tg.Expect(obj.Status.HelmChart).ToNot(BeEmpty())\n\n\t\tnewChart := sourcev1.HelmChart{}\n\t\tg.Expect(testEnv.Get(context.TODO(), types.NamespacedName{\n\t\t\tNamespace: obj.Spec.Chart.GetNamespace(obj.Namespace),\n\t\t\tName:      obj.GetHelmChartName()}, &newChart)).To(Succeed())\n\t\tg.Expect(newChart.ResourceVersion).To(Equal(existingChart.ResourceVersion), \"HelmChart should not have been updated\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/helmchart_template_test.go"
                },
                "region": {
                  "startLine": 288,
                  "startColumn": 16,
                  "endLine": 288,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n\t\tnewChart := sourcev1.HelmChart{}\n\t\tg.Eventually(func(g Gomega) {\n\t\t\tg.Expect(testEnv.Get(context.TODO(), types.NamespacedName{\n\t\t\t\tNamespace: obj.Spec.Chart.GetNamespace(obj.Namespace),\n\t\t\t\tName:      obj.GetHelmChartName()}, &newChart)).To(Succeed())\n\n",
                    "rendered": {
                      "text": "\n\t\tnewChart := sourcev1.HelmChart{}\n\t\tg.Eventually(func(g Gomega) {\n\t\t\tg.Expect(testEnv.Get(context.TODO(), types.NamespacedName{\n\t\t\t\tNamespace: obj.Spec.Chart.GetNamespace(obj.Namespace),\n\t\t\t\tName:      obj.GetHelmChartName()}, &newChart)).To(Succeed())\n\n",
                      "markdown": "`\n\t\tnewChart := sourcev1.HelmChart{}\n\t\tg.Eventually(func(g Gomega) {\n\t\t\tg.Expect(testEnv.Get(context.TODO(), types.NamespacedName{\n\t\t\t\tNamespace: obj.Spec.Chart.GetNamespace(obj.Namespace),\n\t\t\t\tName:      obj.GetHelmChartName()}, &newChart)).To(Succeed())\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/helmchart_template_test.go"
                },
                "region": {
                  "startLine": 216,
                  "startColumn": 16,
                  "endLine": 216,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n\t\texpectChart := sourcev1.HelmChart{}\n\t\tg.Eventually(func(g Gomega) {\n\t\t\tg.Expect(testEnv.Get(context.TODO(), types.NamespacedName{\n\t\t\t\tNamespace: obj.Spec.Chart.GetNamespace(obj.Namespace),\n\t\t\t\tName:      obj.GetHelmChartName()},\n\t\t\t\t&expectChart,\n",
                    "rendered": {
                      "text": "\n\t\texpectChart := sourcev1.HelmChart{}\n\t\tg.Eventually(func(g Gomega) {\n\t\t\tg.Expect(testEnv.Get(context.TODO(), types.NamespacedName{\n\t\t\t\tNamespace: obj.Spec.Chart.GetNamespace(obj.Namespace),\n\t\t\t\tName:      obj.GetHelmChartName()},\n\t\t\t\t&expectChart,\n",
                      "markdown": "`\n\t\texpectChart := sourcev1.HelmChart{}\n\t\tg.Eventually(func(g Gomega) {\n\t\t\tg.Expect(testEnv.Get(context.TODO(), types.NamespacedName{\n\t\t\t\tNamespace: obj.Spec.Chart.GetNamespace(obj.Namespace),\n\t\t\t\tName:      obj.GetHelmChartName()},\n\t\t\t\t&expectChart,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/helmchart_template_test.go"
                },
                "region": {
                  "startLine": 169,
                  "startColumn": 37,
                  "endLine": 169,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t))\n\n\t\tg.Eventually(func(g Gomega) {\n\t\t\tg.Expect(apierrors.IsNotFound(testEnv.Get(context.TODO(),\n\t\t\t\ttypes.NamespacedName{\n\t\t\t\t\tNamespace: existingChart.GetNamespace(),\n\t\t\t\t\tName:      existingChart.GetName(),\n",
                    "rendered": {
                      "text": "\t\t))\n\n\t\tg.Eventually(func(g Gomega) {\n\t\t\tg.Expect(apierrors.IsNotFound(testEnv.Get(context.TODO(),\n\t\t\t\ttypes.NamespacedName{\n\t\t\t\t\tNamespace: existingChart.GetNamespace(),\n\t\t\t\t\tName:      existingChart.GetName(),\n",
                      "markdown": "`\t\t))\n\n\t\tg.Eventually(func(g Gomega) {\n\t\t\tg.Expect(apierrors.IsNotFound(testEnv.Get(context.TODO(),\n\t\t\t\ttypes.NamespacedName{\n\t\t\t\t\tNamespace: existingChart.GetNamespace(),\n\t\t\t\t\tName:      existingChart.GetName(),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/helmchart_template_test.go"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 37,
                  "endLine": 105,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\tg.Expect(obj.Status.HelmChart).To(BeEmpty())\n\n\t\tg.Eventually(func(g Gomega) {\n\t\t\tg.Expect(apierrors.IsNotFound(testEnv.Get(context.TODO(),\n\t\t\t\ttypes.NamespacedName{\n\t\t\t\t\tNamespace: existingChart.GetNamespace(),\n\t\t\t\t\tName:      existingChart.GetName(),\n",
                    "rendered": {
                      "text": "\t\tg.Expect(obj.Status.HelmChart).To(BeEmpty())\n\n\t\tg.Eventually(func(g Gomega) {\n\t\t\tg.Expect(apierrors.IsNotFound(testEnv.Get(context.TODO(),\n\t\t\t\ttypes.NamespacedName{\n\t\t\t\t\tNamespace: existingChart.GetNamespace(),\n\t\t\t\t\tName:      existingChart.GetName(),\n",
                      "markdown": "`\t\tg.Expect(obj.Status.HelmChart).To(BeEmpty())\n\n\t\tg.Eventually(func(g Gomega) {\n\t\t\tg.Expect(apierrors.IsNotFound(testEnv.Get(context.TODO(),\n\t\t\t\ttypes.NamespacedName{\n\t\t\t\t\tNamespace: existingChart.GetNamespace(),\n\t\t\t\t\tName:      existingChart.GetName(),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/main.go"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 15,
                  "endLine": 124,
                  "endColumn": 19,
                  "snippet": {
                    "text": "mWatchMemoryThreshold, \"oom-watch-memory-threshold\", 95,\n\t\t\"The memory threshold in percentage at which the OOM watcher will trigger a graceful shutdown. Requires feature gate 'OOMWatch' to be enabled.\")\n\tflag.DurationVar(&oomWatchInterval, \"oom-watch-interval\", 500*time.Millisecond,\n\t\t\"The interval at which the OOM watcher will check for memory usage. Requires feature gate 'OOMWatch' to be enabled.\")\n\tflag.StringVar(&oomWatchMaxMemoryPath, \"oom-watch-max-memory-path\", \"\",\n\t\t\"The path to the cgroup memory limit file. Requires feature gate 'OOMWatch' to be enabled. If not set, the path will be auto",
                    "rendered": {
                      "text": "mWatchMemoryThreshold, \"oom-watch-memory-threshold\", 95,\n\t\t\"The memory threshold in percentage at which the OOM watcher will trigger a graceful shutdown. Requires feature gate 'OOMWatch' to be enabled.\")\n\tflag.DurationVar(&oomWatchInterval, \"oom-watch-interval\", 500*time.Millisecond,\n\t\t\"The interval at which the OOM watcher will check for memory usage. Requires feature gate 'OOMWatch' to be enabled.\")\n\tflag.StringVar(&oomWatchMaxMemoryPath, \"oom-watch-max-memory-path\", \"\",\n\t\t\"The path to the cgroup memory limit file. Requires feature gate 'OOMWatch' to be enabled. If not set, the path will be auto",
                      "markdown": "`mWatchMemoryThreshold, \"oom-watch-memory-threshold\", 95,\n\t\t\"The memory threshold in percentage at which the OOM watcher will trigger a graceful shutdown. Requires feature gate 'OOMWatch' to be enabled.\")\n\tflag.DurationVar(&oomWatchInterval, \"oom-watch-interval\", 500*time.Millisecond,\n\t\t\"The interval at which the OOM watcher will check for memory usage. Requires feature gate 'OOMWatch' to be enabled.\")\n\tflag.StringVar(&oomWatchMaxMemoryPath, \"oom-watch-max-memory-path\", \"\",\n\t\t\"The path to the cgroup memory limit file. Requires feature gate 'OOMWatch' to be enabled. If not set, the path will be auto`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/main.go"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 37,
                  "endLine": 122,
                  "endColumn": 41,
                  "snippet": {
                    "text": "etries when failing to fetch artifacts over HTTP.\")\n\tflag.StringVar(&intkube.DefaultServiceAccountName, \"default-service-account\", \"\",\n\t\t\"Default service account used for impersonation.\")\n\tflag.Uint8Var(&oomWatchMemoryThreshold, \"oom-watch-memory-threshold\", 95,\n\t\t\"The memory threshold in percentage at which the OOM watcher will trigger a graceful shutdown. Requires feature gate 'OOMWatch' to be enabled.\")\n\tflag.DurationVar(&oomWatchInterval, \"oom-watch-interval\", 500*time.Millisecond,\n\t\t\"The interval at which the OOM watcher will check for memory usage. Requires feature gate 'OOMWatch' to be enab",
                    "rendered": {
                      "text": "etries when failing to fetch artifacts over HTTP.\")\n\tflag.StringVar(&intkube.DefaultServiceAccountName, \"default-service-account\", \"\",\n\t\t\"Default service account used for impersonation.\")\n\tflag.Uint8Var(&oomWatchMemoryThreshold, \"oom-watch-memory-threshold\", 95,\n\t\t\"The memory threshold in percentage at which the OOM watcher will trigger a graceful shutdown. Requires feature gate 'OOMWatch' to be enabled.\")\n\tflag.DurationVar(&oomWatchInterval, \"oom-watch-interval\", 500*time.Millisecond,\n\t\t\"The interval at which the OOM watcher will check for memory usage. Requires feature gate 'OOMWatch' to be enab",
                      "markdown": "`etries when failing to fetch artifacts over HTTP.\")\n\tflag.StringVar(&intkube.DefaultServiceAccountName, \"default-service-account\", \"\",\n\t\t\"Default service account used for impersonation.\")\n\tflag.Uint8Var(&oomWatchMemoryThreshold, \"oom-watch-memory-threshold\", 95,\n\t\t\"The memory threshold in percentage at which the OOM watcher will trigger a graceful shutdown. Requires feature gate 'OOMWatch' to be enabled.\")\n\tflag.DurationVar(&oomWatchInterval, \"oom-watch-interval\", 500*time.Millisecond,\n\t\t\"The interval at which the OOM watcher will check for memory usage. Requires feature gate 'OOMWatch' to be enab`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/main.go"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 15,
                  "endLine": 114,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\tflag.IntVar(&concurrent, \"concurrent\", 4,\n\t\t\"The number of concurrent HelmRelease reconciles.\")\n\tflag.DurationVar(&requeueDependency, \"requeue-dependency\", 30*time.Second,\n\t\t\"The interval at which failing dependencies are reevaluated.\")\n\tflag.DurationVar(&gracefulShutdownTimeout, \"graceful-shutdown-timeout\", 600*time.Second,\n\t\t\"The duration given to the reconciler to finish before forcibly stopping.\")\n\tflag.IntVar(&httpRetry, \"http-retry\", 9,\n",
                    "rendered": {
                      "text": "\tflag.IntVar(&concurrent, \"concurrent\", 4,\n\t\t\"The number of concurrent HelmRelease reconciles.\")\n\tflag.DurationVar(&requeueDependency, \"requeue-dependency\", 30*time.Second,\n\t\t\"The interval at which failing dependencies are reevaluated.\")\n\tflag.DurationVar(&gracefulShutdownTimeout, \"graceful-shutdown-timeout\", 600*time.Second,\n\t\t\"The duration given to the reconciler to finish before forcibly stopping.\")\n\tflag.IntVar(&httpRetry, \"http-retry\", 9,\n",
                      "markdown": "`\tflag.IntVar(&concurrent, \"concurrent\", 4,\n\t\t\"The number of concurrent HelmRelease reconciles.\")\n\tflag.DurationVar(&requeueDependency, \"requeue-dependency\", 30*time.Second,\n\t\t\"The interval at which failing dependencies are reevaluated.\")\n\tflag.DurationVar(&gracefulShutdownTimeout, \"graceful-shutdown-timeout\", 600*time.Second,\n\t\t\"The duration given to the reconciler to finish before forcibly stopping.\")\n\tflag.IntVar(&httpRetry, \"http-retry\", 9,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/main.go"
                },
                "region": {
                  "startLine": 165,
                  "startColumn": 42,
                  "endLine": 165,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\n\twatchSelector, err := helper.GetWatchSelector(watchOptions)\n\tif err != nil {\n\t\tsetupLog.Error(err, \"unable to configure watch label selector for manager\")\n\t\tos.Exit(1)\n\t}\n\n",
                    "rendered": {
                      "text": "\n\twatchSelector, err := helper.GetWatchSelector(watchOptions)\n\tif err != nil {\n\t\tsetupLog.Error(err, \"unable to configure watch label selector for manager\")\n\t\tos.Exit(1)\n\t}\n\n",
                      "markdown": "`\n\twatchSelector, err := helper.GetWatchSelector(watchOptions)\n\tif err != nil {\n\t\tsetupLog.Error(err, \"unable to configure watch label selector for manager\")\n\t\tos.Exit(1)\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/main.go"
                },
                "region": {
                  "startLine": 120,
                  "startColumn": 10,
                  "endLine": 120,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\tflag.IntVar(&httpRetry, \"http-retry\", 9,\n\t\t\"The maximum number of retries when failing to fetch artifacts over HTTP.\")\n\tflag.StringVar(&intkube.DefaultServiceAccountName, \"default-service-account\", \"\",\n\t\t\"Default service account used for impersonation.\")\n\tflag.Uint8Var(&oomWatchMemoryThreshold, \"oom-watch-memory-threshold\", 95,\n\t\t\"The memory threshold in percentage at which the OOM watcher will trigger a graceful shutdown. Requires feature gate 'OOMWatch' to be enabled.\")\n\tflag.DurationVar(&oomWatchInterval, \"oom-watch-interval\", 500*time.Millisecond,\n",
                    "rendered": {
                      "text": "\tflag.IntVar(&httpRetry, \"http-retry\", 9,\n\t\t\"The maximum number of retries when failing to fetch artifacts over HTTP.\")\n\tflag.StringVar(&intkube.DefaultServiceAccountName, \"default-service-account\", \"\",\n\t\t\"Default service account used for impersonation.\")\n\tflag.Uint8Var(&oomWatchMemoryThreshold, \"oom-watch-memory-threshold\", 95,\n\t\t\"The memory threshold in percentage at which the OOM watcher will trigger a graceful shutdown. Requires feature gate 'OOMWatch' to be enabled.\")\n\tflag.DurationVar(&oomWatchInterval, \"oom-watch-interval\", 500*time.Millisecond,\n",
                      "markdown": "`\tflag.IntVar(&httpRetry, \"http-retry\", 9,\n\t\t\"The maximum number of retries when failing to fetch artifacts over HTTP.\")\n\tflag.StringVar(&intkube.DefaultServiceAccountName, \"default-service-account\", \"\",\n\t\t\"Default service account used for impersonation.\")\n\tflag.Uint8Var(&oomWatchMemoryThreshold, \"oom-watch-memory-threshold\", 95,\n\t\t\"The memory threshold in percentage at which the OOM watcher will trigger a graceful shutdown. Requires feature gate 'OOMWatch' to be enabled.\")\n\tflag.DurationVar(&oomWatchInterval, \"oom-watch-interval\", 500*time.Millisecond,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/Dockerfile"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 34,
                  "endLine": 31,
                  "endColumn": 4,
                  "snippet": {
                    "text": "COPY main.go main.go\nCOPY internal/ internal/\n\n# build without specifing the arch\nENV CGO_ENABLED=0\nRUN xx-go build -trimpath -a -o helm-controller main.go\n\nFROM alpine:3.19\n",
                    "rendered": {
                      "text": "COPY main.go main.go\nCOPY internal/ internal/\n\n# build without specifing the arch\nENV CGO_ENABLED=0\nRUN xx-go build -trimpath -a -o helm-controller main.go\n\nFROM alpine:3.19\n",
                      "markdown": "`COPY main.go main.go\nCOPY internal/ internal/\n\n# build without specifing the arch\nENV CGO_ENABLED=0\nRUN xx-go build -trimpath -a -o helm-controller main.go\n\nFROM alpine:3.19\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/Dockerfile"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 1,
                  "endLine": 6,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\nFROM --platform=$BUILDPLATFORM tonistiigi/xx:${XX_VERSION} AS xx\n\n# Docker buildkit multi-arch build requires golang alpine\nFROM --platform=$BUILDPLATFORM golang:${GO_VERSION}-alpine as builder\n\n# Copy the build utilities.\n",
                    "rendered": {
                      "text": "\nFROM --platform=$BUILDPLATFORM tonistiigi/xx:${XX_VERSION} AS xx\n\n# Docker buildkit multi-arch build requires golang alpine\nFROM --platform=$BUILDPLATFORM golang:${GO_VERSION}-alpine as builder\n\n# Copy the build utilities.\n",
                      "markdown": "`\nFROM --platform=$BUILDPLATFORM tonistiigi/xx:${XX_VERSION} AS xx\n\n# Docker buildkit multi-arch build requires golang alpine\nFROM --platform=$BUILDPLATFORM golang:${GO_VERSION}-alpine as builder\n\n# Copy the build utilities.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/chartutil/values.go"
                },
                "region": {
                  "startLine": 185,
                  "startColumn": 21,
                  "endLine": 185,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t\t\t\t}\n\n\t\t\t\tif resource != nil {\n\t\t\t\t\tif err := client.Get(ctx, namespacedName, resource); err != nil {\n\t\t\t\t\t\tif apierrors.IsNotFound(err) {\n\t\t\t\t\t\t\terr := NewErrValuesReference(namespacedName, ref, ErrResourceNotFound, err)\n\t\t\t\t\t\t\tif err.Optional {\n",
                    "rendered": {
                      "text": "\t\t\t\t}\n\n\t\t\t\tif resource != nil {\n\t\t\t\t\tif err := client.Get(ctx, namespacedName, resource); err != nil {\n\t\t\t\t\t\tif apierrors.IsNotFound(err) {\n\t\t\t\t\t\t\terr := NewErrValuesReference(namespacedName, ref, ErrResourceNotFound, err)\n\t\t\t\t\t\t\tif err.Optional {\n",
                      "markdown": "`\t\t\t\t}\n\n\t\t\t\tif resource != nil {\n\t\t\t\t\tif err := client.Get(ctx, namespacedName, resource); err != nil {\n\t\t\t\t\t\tif apierrors.IsNotFound(err) {\n\t\t\t\t\t\t\terr := NewErrValuesReference(namespacedName, ref, ErrResourceNotFound, err)\n\t\t\t\t\t\t\tif err.Optional {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/MAINTAINERS"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 21,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "The maintainers are generally available in Slack at\nhttps://cloud-native.slack.com in #flux (https://cloud-native.slack.com/messages/CLAJ40HV3)\n(obtain an invitation at https://slack.cncf.io/).\n\n\nIn additional to those listed below, this project shares maintainers\n",
                    "rendered": {
                      "text": "The maintainers are generally available in Slack at\nhttps://cloud-native.slack.com in #flux (https://cloud-native.slack.com/messages/CLAJ40HV3)\n(obtain an invitation at https://slack.cncf.io/).\n\n\nIn additional to those listed below, this project shares maintainers\n",
                      "markdown": "`The maintainers are generally available in Slack at\nhttps://cloud-native.slack.com in #flux (https://cloud-native.slack.com/messages/CLAJ40HV3)\n(obtain an invitation at https://slack.cncf.io/).\n\n\nIn additional to those listed below, this project shares maintainers\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/MAINTAINERS"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 48,
                  "endLine": 2,
                  "snippet": {
                    "text": "The maintainers are generally available in Slack at\nhttps://cloud-native.slack.com in #flux (https://cloud-native.slack.com/messages/CLAJ40HV3)\n(obtain an invitation at https://slack.cncf.io/).\n\n\n",
                    "rendered": {
                      "text": "The maintainers are generally available in Slack at\nhttps://cloud-native.slack.com in #flux (https://cloud-native.slack.com/messages/CLAJ40HV3)\n(obtain an invitation at https://slack.cncf.io/).\n\n\n",
                      "markdown": "`The maintainers are generally available in Slack at\nhttps://cloud-native.slack.com in #flux (https://cloud-native.slack.com/messages/CLAJ40HV3)\n(obtain an invitation at https://slack.cncf.io/).\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/MAINTAINERS"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 21,
                  "endLine": 7,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n\nIn additional to those listed below, this project shares maintainers\nfrom the main Flux v2 git repository, as listed in\n\n    https://github.com/fluxcd/flux2/blob/main/MAINTAINERS\n\n",
                    "rendered": {
                      "text": "\n\nIn additional to those listed below, this project shares maintainers\nfrom the main Flux v2 git repository, as listed in\n\n    https://github.com/fluxcd/flux2/blob/main/MAINTAINERS\n\n",
                      "markdown": "`\n\nIn additional to those listed below, this project shares maintainers\nfrom the main Flux v2 git repository, as listed in\n\n    https://github.com/fluxcd/flux2/blob/main/MAINTAINERS\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/DEVELOPMENT.md"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 30,
                  "endLine": 3,
                  "endColumn": 34,
                  "snippet": {
                    "text": "# Development\n\n> **Note:** Please take a look at <https://fluxcd.io/contributing/flux/>\n> to find out about how to contribute to Flux and how to interact with the\n> Flux Development team.\n\n",
                    "rendered": {
                      "text": "# Development\n\n> **Note:** Please take a look at <https://fluxcd.io/contributing/flux/>\n> to find out about how to contribute to Flux and how to interact with the\n> Flux Development team.\n\n",
                      "markdown": "`# Development\n\n> **Note:** Please take a look at <https://fluxcd.io/contributing/flux/>\n> to find out about how to contribute to Flux and how to interact with the\n> Flux Development team.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/DEVELOPMENT.md"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 258,
                  "endLine": 43,
                  "endColumn": 264,
                  "snippet": {
                    "text": "make install\n```\n\nNote that `helm-controller` depends on [source-controller](https://github.com/fluxcd/source-controller) to acquire the Helm charts from Helm repositories. If `source-controller` is not running on your test cluster, you need to tell `helm-controller` where to find it. \n\nPort forward to source-controller artifacts server:\n\n",
                    "rendered": {
                      "text": "make install\n```\n\nNote that `helm-controller` depends on [source-controller](https://github.com/fluxcd/source-controller) to acquire the Helm charts from Helm repositories. If `source-controller` is not running on your test cluster, you need to tell `helm-controller` where to find it. \n\nPort forward to source-controller artifacts server:\n\n",
                      "markdown": "`make install\n```\n\nNote that `helm-controller` depends on [source-controller](https://github.com/fluxcd/source-controller) to acquire the Helm charts from Helm repositories. If `source-controller` is not running on your test cluster, you need to tell `helm-controller` where to find it. \n\nPort forward to source-controller artifacts server:\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/DEVELOPMENT.md"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 4,
                  "endLine": 4,
                  "endColumn": 10,
                  "snippet": {
                    "text": "# Development\n\n> **Note:** Please take a look at <https://fluxcd.io/contributing/flux/>\n> to find out about how to contribute to Flux and how to interact with the\n> Flux Development team.\n\n## Installing required dependencies\n",
                    "rendered": {
                      "text": "# Development\n\n> **Note:** Please take a look at <https://fluxcd.io/contributing/flux/>\n> to find out about how to contribute to Flux and how to interact with the\n> Flux Development team.\n\n## Installing required dependencies\n",
                      "markdown": "`# Development\n\n> **Note:** Please take a look at <https://fluxcd.io/contributing/flux/>\n> to find out about how to contribute to Flux and how to interact with the\n> Flux Development team.\n\n## Installing required dependencies\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/tests/fuzz/README.md"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 50,
                  "endLine": 59,
                  "endColumn": 3,
                  "snippet": {
                    "text": "// +build gofuzz_libfuzzer\n```\n\nThe build tag above is set at [go-118-fuzz-build].\nAt this point in time we can't pass on specific tags from [compile_native_go_fuzzer].\n\n### Running oss-fuzz locally\n\n",
                    "rendered": {
                      "text": "// +build gofuzz_libfuzzer\n```\n\nThe build tag above is set at [go-118-fuzz-build].\nAt this point in time we can't pass on specific tags from [compile_native_go_fuzzer].\n\n### Running oss-fuzz locally\n\n",
                      "markdown": "`// +build gofuzz_libfuzzer\n```\n\nThe build tag above is set at [go-118-fuzz-build].\nAt this point in time we can't pass on specific tags from [compile_native_go_fuzzer].\n\n### Running oss-fuzz locally\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/tests/fuzz/README.md"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 26,
                  "endLine": 58,
                  "endColumn": 30,
                  "snippet": {
                    "text": "// +build gofuzz_libfuzzer\n```\n\nThe build tag above is set at [go-118-fuzz-build].\nAt this point in time we can't pass on specific tags from [compile_native_go_fuzzer].\n\n### Running oss-fuzz locally\n",
                    "rendered": {
                      "text": "// +build gofuzz_libfuzzer\n```\n\nThe build tag above is set at [go-118-fuzz-build].\nAt this point in time we can't pass on specific tags from [compile_native_go_fuzzer].\n\n### Running oss-fuzz locally\n",
                      "markdown": "`// +build gofuzz_libfuzzer\n```\n\nThe build tag above is set at [go-118-fuzz-build].\nAt this point in time we can't pass on specific tags from [compile_native_go_fuzzer].\n\n### Running oss-fuzz locally\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/tests/fuzz/README.md"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 9,
                  "endLine": 52,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\nDue to the issue above, code duplication will occur when creating fuzz tests that rely on\nhelper functions that are shared with other tests. To avoid build issues, add a conditional\nbuild tag at the top of the `*_fuzz_test.go` file:\n```go\n//go:build gofuzz_libfuzzer\n// +build gofuzz_libfuzzer\n",
                    "rendered": {
                      "text": "\nDue to the issue above, code duplication will occur when creating fuzz tests that rely on\nhelper functions that are shared with other tests. To avoid build issues, add a conditional\nbuild tag at the top of the `*_fuzz_test.go` file:\n```go\n//go:build gofuzz_libfuzzer\n// +build gofuzz_libfuzzer\n",
                      "markdown": "`\nDue to the issue above, code duplication will occur when creating fuzz tests that rely on\nhelper functions that are shared with other tests. To avoid build issues, add a conditional\nbuild tag at the top of the `*_fuzz_test.go` file:\n```go\n//go:build gofuzz_libfuzzer\n// +build gofuzz_libfuzzer\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/tests/fuzz/README.md"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 3,
                  "endLine": 68,
                  "endColumn": 4,
                  "snippet": {
                    "text": "upstream. If our checks ever run out of sync with upstream, the upstream tests can be\nexecuted locally with:\n\n```\ngit clone --depth 1 https://github.com/google/oss-fuzz\ncd oss-fuzz\npython infra/helper.py build_image fluxcd\npython infra/helper.py build_fuzzers --sanitizer address --architecture x86_64 fluxcd\n",
                    "rendered": {
                      "text": "upstream. If our checks ever run out of sync with upstream, the upstream tests can be\nexecuted locally with:\n\n```\ngit clone --depth 1 https://github.com/google/oss-fuzz\ncd oss-fuzz\npython infra/helper.py build_image fluxcd\npython infra/helper.py build_fuzzers --sanitizer address --architecture x86_64 fluxcd\n",
                      "markdown": "`upstream. If our checks ever run out of sync with upstream, the upstream tests can be\nexecuted locally with:\n\n```\ngit clone --depth 1 https://github.com/google/oss-fuzz\ncd oss-fuzz\npython infra/helper.py build_image fluxcd\npython infra/helper.py build_fuzzers --sanitizer address --architecture x86_64 fluxcd\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/tests/fuzz/README.md"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 16,
                  "endLine": 59,
                  "endColumn": 22,
                  "snippet": {
                    "text": "```\n\nThe build tag above is set at [go-118-fuzz-build].\nAt this point in time we can't pass on specific tags from [compile_native_go_fuzzer].\n\n### Running oss-fuzz locally\n\n",
                    "rendered": {
                      "text": "```\n\nThe build tag above is set at [go-118-fuzz-build].\nAt this point in time we can't pass on specific tags from [compile_native_go_fuzzer].\n\n### Running oss-fuzz locally\n\n",
                      "markdown": "````\n\nThe build tag above is set at [go-118-fuzz-build].\nAt this point in time we can't pass on specific tags from [compile_native_go_fuzzer].\n\n### Running oss-fuzz locally\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/tests/fuzz/README.md"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 16,
                  "endLine": 52,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\nDue to the issue above, code duplication will occur when creating fuzz tests that rely on\nhelper functions that are shared with other tests. To avoid build issues, add a conditional\nbuild tag at the top of the `*_fuzz_test.go` file:\n```go\n//go:build gofuzz_libfuzzer\n// +build gofuzz_libfuzzer\n",
                    "rendered": {
                      "text": "\nDue to the issue above, code duplication will occur when creating fuzz tests that rely on\nhelper functions that are shared with other tests. To avoid build issues, add a conditional\nbuild tag at the top of the `*_fuzz_test.go` file:\n```go\n//go:build gofuzz_libfuzzer\n// +build gofuzz_libfuzzer\n",
                      "markdown": "`\nDue to the issue above, code duplication will occur when creating fuzz tests that rely on\nhelper functions that are shared with other tests. To avoid build issues, add a conditional\nbuild tag at the top of the `*_fuzz_test.go` file:\n```go\n//go:build gofuzz_libfuzzer\n// +build gofuzz_libfuzzer\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/tests/fuzz/README.md"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 8,
                  "snippet": {
                    "text": "Run fuzzer inside a container:\n\n```bash\n\tdocker run --rm -ti \\\n\t\t-v \"$(pwd)/build/fuzz/out\":/out \\\n\t\tgcr.io/oss-fuzz/fluxcd \\\n\t\t/out/fuzz_conditions_match\n",
                    "rendered": {
                      "text": "Run fuzzer inside a container:\n\n```bash\n\tdocker run --rm -ti \\\n\t\t-v \"$(pwd)/build/fuzz/out\":/out \\\n\t\tgcr.io/oss-fuzz/fluxcd \\\n\t\t/out/fuzz_conditions_match\n",
                      "markdown": "`Run fuzzer inside a container:\n\n```bash\n\tdocker run --rm -ti \\\n\t\t-v \"$(pwd)/build/fuzz/out\":/out \\\n\t\tgcr.io/oss-fuzz/fluxcd \\\n\t\t/out/fuzz_conditions_match\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/tests/fuzz/native_go_run.sh"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 38,
                  "endLine": 8,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/tests/fuzz/native_go_run.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\n# Copyright 2022 The Flux authors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\n# Copyright 2022 The Flux authors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n",
                      "markdown": "`#!/usr/bin/env bash\n\n# Copyright 2022 The Flux authors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/tests/fuzz/native_go_run.sh"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 23,
                  "endLine": 20,
                  "endColumn": 29,
                  "snippet": {
                    "text": "set -euxo pipefail\n\n# This script iterates through all go fuzzing targets, running each one\n# through the period of time established by FUZZ_TIME.\n\nFUZZ_TIME=${FUZZ_TIME:-\"5s\"}\n\n",
                    "rendered": {
                      "text": "set -euxo pipefail\n\n# This script iterates through all go fuzzing targets, running each one\n# through the period of time established by FUZZ_TIME.\n\nFUZZ_TIME=${FUZZ_TIME:-\"5s\"}\n\n",
                      "markdown": "`set -euxo pipefail\n\n# This script iterates through all go fuzzing targets, running each one\n# through the period of time established by FUZZ_TIME.\n\nFUZZ_TIME=${FUZZ_TIME:-\"5s\"}\n\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/tests/fuzz/native_go_run.sh"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 6,
                  "endLine": 19,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\nset -euxo pipefail\n\n# This script iterates through all go fuzzing targets, running each one\n# through the period of time established by FUZZ_TIME.\n\nFUZZ_TIME=${FUZZ_TIME:-\"5s\"}\n",
                    "rendered": {
                      "text": "\nset -euxo pipefail\n\n# This script iterates through all go fuzzing targets, running each one\n# through the period of time established by FUZZ_TIME.\n\nFUZZ_TIME=${FUZZ_TIME:-\"5s\"}\n",
                      "markdown": "`\nset -euxo pipefail\n\n# This script iterates through all go fuzzing targets, running each one\n# through the period of time established by FUZZ_TIME.\n\nFUZZ_TIME=${FUZZ_TIME:-\"5s\"}\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/tests/fuzz/native_go_run.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\n# Copyright 2022 The Flux authors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\n# Copyright 2022 The Flux authors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n",
                      "markdown": "`#!/usr/bin/env bash\n\n# Copyright 2022 The Flux authors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/rbac/helmrelease_editor_role.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 3,
                  "endLine": 18,
                  "snippet": {
                    "text": "  - get\n  - list\n  - patch\n  - update\n  - watch\n- apiGroups:\n  - helm.toolkit.fluxcd.io\n  resources:\n",
                    "rendered": {
                      "text": "  - get\n  - list\n  - patch\n  - update\n  - watch\n- apiGroups:\n  - helm.toolkit.fluxcd.io\n  resources:\n",
                      "markdown": "`  - get\n  - list\n  - patch\n  - update\n  - watch\n- apiGroups:\n  - helm.toolkit.fluxcd.io\n  resources:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/config/rbac/helmrelease_editor_role.yaml"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 3,
                  "endLine": 19,
                  "snippet": {
                    "text": "  - list\n  - patch\n  - update\n  - watch\n- apiGroups:\n  - helm.toolkit.fluxcd.io\n  resources:\n  - helmreleases/status\n",
                    "rendered": {
                      "text": "  - list\n  - patch\n  - update\n  - watch\n- apiGroups:\n  - helm.toolkit.fluxcd.io\n  resources:\n  - helmreleases/status\n",
                      "markdown": "`  - list\n  - patch\n  - update\n  - watch\n- apiGroups:\n  - helm.toolkit.fluxcd.io\n  resources:\n  - helmreleases/status\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/release/testdata/prom-stack-1"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 450040,
                  "endLine": 1,
                  "endColumn": 450092,
                  "snippet": {
                    "text": "GyV4X/JnQ59/ROJ1iJ4yoKtD8xnESynqKMv6bCTKHPQQEZ799MxsNYAzlSEmA2eh7oX5ghz6XeaLpqwB655C1Ok69LsEf99zd2PdvHyswfhX1hzDImuAoVTBY1X07tqHvpMCj7COL0y30Cl8lXxUSrWK9PegQe+HKavfBoozCTPybBJaDgnNYi0+rk1q4NEs8xBlbRZX1WdvhXdQK43MmnONmv2AO/HAuNKsQo1m9GdsxGt3CVwJmmPSOpbFCXUOrZbGTGca81fQSU2v40RQ0lgDfhjNqckb4E9aaaQ+O25EenvH9Mvwumz+FGcufVYEPAV8ezHznRw8mS2aL5irwHdS1Eiq0PNCzhfk44CpWBPmGQLnWcmPn8W+PIHzHL26Iq+9mnlhq1KtVHCt7mO8fnyIIwDs7dBLtJnn0FhSWsOq2K06+Gmulfa/dJ+MeF9MnJnWnqBfTGsl9f5x7meN6B5aqM/+mF8D5LXtPNRNyHnYOgLNz1Bv5/B3nfQS6O2TWNe6u+N8Z+yFOBVmrMYI5i7QC5yLzwI/OeDGAt9W0kyTNXZsrnsn/JTiCnXnvbPywx5GE/y79mHT3YbW9MjX0x9ds1Xq2jsaYqyWLeZAPXrmm1o4QX1MpqcG/IW4aaSBip+k4LiRS0m3",
                    "rendered": {
                      "text": "GyV4X/JnQ59/ROJ1iJ4yoKtD8xnESynqKMv6bCTKHPQQEZ799MxsNYAzlSEmA2eh7oX5ghz6XeaLpqwB655C1Ok69LsEf99zd2PdvHyswfhX1hzDImuAoVTBY1X07tqHvpMCj7COL0y30Cl8lXxUSrWK9PegQe+HKavfBoozCTPybBJaDgnNYi0+rk1q4NEs8xBlbRZX1WdvhXdQK43MmnONmv2AO/HAuNKsQo1m9GdsxGt3CVwJmmPSOpbFCXUOrZbGTGca81fQSU2v40RQ0lgDfhjNqckb4E9aaaQ+O25EenvH9Mvwumz+FGcufVYEPAV8ezHznRw8mS2aL5irwHdS1Eiq0PNCzhfk44CpWBPmGQLnWcmPn8W+PIHzHL26Iq+9mnlhq1KtVHCt7mO8fnyIIwDs7dBLtJnn0FhSWsOq2K06+Gmulfa/dJ+MeF9MnJnWnqBfTGsl9f5x7meN6B5aqM/+mF8D5LXtPNRNyHnYOgLNz1Bv5/B3nfQS6O2TWNe6u+N8Z+yFOBVmrMYI5i7QC5yLzwI/OeDGAt9W0kyTNXZsrnsn/JTiCnXnvbPywx5GE/y79mHT3YbW9MjX0x9ds1Xq2jsaYqyWLeZAPXrmm1o4QX1MpqcG/IW4aaSBip+k4LiRS0m3",
                      "markdown": "`GyV4X/JnQ59/ROJ1iJ4yoKtD8xnESynqKMv6bCTKHPQQEZ799MxsNYAzlSEmA2eh7oX5ghz6XeaLpqwB655C1Ok69LsEf99zd2PdvHyswfhX1hzDImuAoVTBY1X07tqHvpMCj7COL0y30Cl8lXxUSrWK9PegQe+HKavfBoozCTPybBJaDgnNYi0+rk1q4NEs8xBlbRZX1WdvhXdQK43MmnONmv2AO/HAuNKsQo1m9GdsxGt3CVwJmmPSOpbFCXUOrZbGTGca81fQSU2v40RQ0lgDfhjNqckb4E9aaaQ+O25EenvH9Mvwumz+FGcufVYEPAV8ezHznRw8mS2aL5irwHdS1Eiq0PNCzhfk44CpWBPmGQLnWcmPn8W+PIHzHL26Iq+9mnlhq1KtVHCt7mO8fnyIIwDs7dBLtJnn0FhSWsOq2K06+Gmulfa/dJ+MeF9MnJnWnqBfTGsl9f5x7meN6B5aqM/+mF8D5LXtPNRNyHnYOgLNz1Bv5/B3nfQS6O2TWNe6u+N8Z+yFOBVmrMYI5i7QC5yLzwI/OeDGAt9W0kyTNXZsrnsn/JTiCnXnvbPywx5GE/y79mHT3YbW9MjX0x9ds1Xq2jsaYqyWLeZAPXrmm1o4QX1MpqcG/IW4aaSBip+k4LiRS0m3`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/release/testdata/prom-stack-1"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 63129,
                  "endLine": 1,
                  "endColumn": 63141,
                  "snippet": {
                    "text": "+ublyptMtrf+eYJxjvrm4ywMTtNzHOhGKZn+9KN9gm0x8G1y0sNmo9aXtTpLe/nuQE6r9z78M6TXyuuoe7LGvfleZp8sAfa2tK7V0QLabnYjSZ3FeB/A4ETrLzgYnp8rrk01rNFLXaT+oxmY2AotD14IVxidB3JV/+xGdmR/MMiZ+7DPgUHXxaDndNRPTtUAoOXNtJAoUxDDf7WDr6pHwNnDUUqHGlNYa2F7PxuI5JkThSFx193hQRmPEOXa1HXxc2F5PDJts2Goa+AeDUMYki2qa/X8nVG8nyo17+56H0qjeNvGQTzQRgEtqje20w3tHQHY79QAxAKydrGjqO2Lhyc5L24dQ34koDdhvwaCr7DsBvXUAP8HCwdlmhCHm1DPkTftbSZ4z4dfFg7oRY0NtJ6SaBC67pRvtiIePrWvH8tYw4PVfzG+8WhyfFPmEOmBsZg11swCPvlgFD1vus2JVUleZulq2O7g5MbQnIYXbO3dzAGk3xIHrs3a3JrSGQ7NP9NCPN4LM23r4kzNTgBet9WOSHktFavuQ+IsJ8X0zPkwKzNoyPa6agRWAe5ITqsvHbvJLF7nfYI/FxeVU/aWbm6EkzzDX+svEfxb",
                    "rendered": {
                      "text": "+ublyptMtrf+eYJxjvrm4ywMTtNzHOhGKZn+9KN9gm0x8G1y0sNmo9aXtTpLe/nuQE6r9z78M6TXyuuoe7LGvfleZp8sAfa2tK7V0QLabnYjSZ3FeB/A4ETrLzgYnp8rrk01rNFLXaT+oxmY2AotD14IVxidB3JV/+xGdmR/MMiZ+7DPgUHXxaDndNRPTtUAoOXNtJAoUxDDf7WDr6pHwNnDUUqHGlNYa2F7PxuI5JkThSFx193hQRmPEOXa1HXxc2F5PDJts2Goa+AeDUMYki2qa/X8nVG8nyo17+56H0qjeNvGQTzQRgEtqje20w3tHQHY79QAxAKydrGjqO2Lhyc5L24dQ34koDdhvwaCr7DsBvXUAP8HCwdlmhCHm1DPkTftbSZ4z4dfFg7oRY0NtJ6SaBC67pRvtiIePrWvH8tYw4PVfzG+8WhyfFPmEOmBsZg11swCPvlgFD1vus2JVUleZulq2O7g5MbQnIYXbO3dzAGk3xIHrs3a3JrSGQ7NP9NCPN4LM23r4kzNTgBet9WOSHktFavuQ+IsJ8X0zPkwKzNoyPa6agRWAe5ITqsvHbvJLF7nfYI/FxeVU/aWbm6EkzzDX+svEfxb",
                      "markdown": "`+ublyptMtrf+eYJxjvrm4ywMTtNzHOhGKZn+9KN9gm0x8G1y0sNmo9aXtTpLe/nuQE6r9z78M6TXyuuoe7LGvfleZp8sAfa2tK7V0QLabnYjSZ3FeB/A4ETrLzgYnp8rrk01rNFLXaT+oxmY2AotD14IVxidB3JV/+xGdmR/MMiZ+7DPgUHXxaDndNRPTtUAoOXNtJAoUxDDf7WDr6pHwNnDUUqHGlNYa2F7PxuI5JkThSFx193hQRmPEOXa1HXxc2F5PDJts2Goa+AeDUMYki2qa/X8nVG8nyo17+56H0qjeNvGQTzQRgEtqje20w3tHQHY79QAxAKydrGjqO2Lhyc5L24dQ34koDdhvwaCr7DsBvXUAP8HCwdlmhCHm1DPkTftbSZ4z4dfFg7oRY0NtJ6SaBC67pRvtiIePrWvH8tYw4PVfzG+8WhyfFPmEOmBsZg11swCPvlgFD1vus2JVUleZulq2O7g5MbQnIYXbO3dzAGk3xIHrs3a3JrSGQ7NP9NCPN4LM23r4kzNTgBet9WOSHktFavuQ+IsJ8X0zPkwKzNoyPa6agRWAe5ITqsvHbvJLF7nfYI/FxeVU/aWbm6EkzzDX+svEfxb`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/atomic_release_test.go"
                },
                "region": {
                  "startLine": 1255,
                  "startColumn": 50,
                  "endLine": 1255,
                  "endColumn": 70,
                  "snippet": {
                    "text": "\t\t\t\tobj.Status = tt.status(releases)\n\t\t\t}\n\n\t\t\tgetter, err := RESTClientGetterFromManager(testEnv.Manager, obj.GetReleaseNamespace())\n\t\t\tg.Expect(err).ToNot(HaveOccurred())\n\n\t\t\tcfg, err := action.NewConfigFactory(getter,\n",
                    "rendered": {
                      "text": "\t\t\t\tobj.Status = tt.status(releases)\n\t\t\t}\n\n\t\t\tgetter, err := RESTClientGetterFromManager(testEnv.Manager, obj.GetReleaseNamespace())\n\t\t\tg.Expect(err).ToNot(HaveOccurred())\n\n\t\t\tcfg, err := action.NewConfigFactory(getter,\n",
                      "markdown": "`\t\t\t\tobj.Status = tt.status(releases)\n\t\t\t}\n\n\t\t\tgetter, err := RESTClientGetterFromManager(testEnv.Manager, obj.GetReleaseNamespace())\n\t\t\tg.Expect(err).ToNot(HaveOccurred())\n\n\t\t\tcfg, err := action.NewConfigFactory(getter,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/atomic_release_test.go"
                },
                "region": {
                  "startLine": 1024,
                  "startColumn": 50,
                  "endLine": 1024,
                  "endColumn": 70,
                  "snippet": {
                    "text": "\t\t\t\tobj.Status = tt.status(releaseNamespace, releases)\n\t\t\t}\n\n\t\t\tgetter, err := RESTClientGetterFromManager(testEnv.Manager, obj.GetReleaseNamespace())\n\t\t\tg.Expect(err).ToNot(HaveOccurred())\n\n\t\t\tcfg, err := action.NewConfigFactory(getter,\n",
                    "rendered": {
                      "text": "\t\t\t\tobj.Status = tt.status(releaseNamespace, releases)\n\t\t\t}\n\n\t\t\tgetter, err := RESTClientGetterFromManager(testEnv.Manager, obj.GetReleaseNamespace())\n\t\t\tg.Expect(err).ToNot(HaveOccurred())\n\n\t\t\tcfg, err := action.NewConfigFactory(getter,\n",
                      "markdown": "`\t\t\t\tobj.Status = tt.status(releaseNamespace, releases)\n\t\t\t}\n\n\t\t\tgetter, err := RESTClientGetterFromManager(testEnv.Manager, obj.GetReleaseNamespace())\n\t\t\tg.Expect(err).ToNot(HaveOccurred())\n\n\t\t\tcfg, err := action.NewConfigFactory(getter,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/atomic_release_test.go"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 49,
                  "endLine": 155,
                  "endColumn": 69,
                  "snippet": {
                    "text": "\t\t\t},\n\t\t}\n\n\t\tgetter, err := RESTClientGetterFromManager(testEnv.Manager, obj.GetReleaseNamespace())\n\t\tg.Expect(err).ToNot(HaveOccurred())\n\n\t\tcfg, err := action.NewConfigFactory(getter,\n",
                    "rendered": {
                      "text": "\t\t\t},\n\t\t}\n\n\t\tgetter, err := RESTClientGetterFromManager(testEnv.Manager, obj.GetReleaseNamespace())\n\t\tg.Expect(err).ToNot(HaveOccurred())\n\n\t\tcfg, err := action.NewConfigFactory(getter,\n",
                      "markdown": "`\t\t\t},\n\t\t}\n\n\t\tgetter, err := RESTClientGetterFromManager(testEnv.Manager, obj.GetReleaseNamespace())\n\t\tg.Expect(err).ToNot(HaveOccurred())\n\n\t\tcfg, err := action.NewConfigFactory(getter,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/atomic_release_test.go"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 2,
                  "endLine": 119,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t}\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\tat := &cleanReleaseStrategy{}\n\t\t\tif got := at.MustStop(tt.current, tt.previous); got != tt.want {\n\t\t\t\tg := NewWithT(t)\n\t\t\t\tg.Expect(got).To(Equal(tt.want))\n",
                    "rendered": {
                      "text": "\t}\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\tat := &cleanReleaseStrategy{}\n\t\t\tif got := at.MustStop(tt.current, tt.previous); got != tt.want {\n\t\t\t\tg := NewWithT(t)\n\t\t\t\tg.Expect(got).To(Equal(tt.want))\n",
                      "markdown": "`\t}\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\tat := &cleanReleaseStrategy{}\n\t\t\tif got := at.MustStop(tt.current, tt.previous); got != tt.want {\n\t\t\t\tg := NewWithT(t)\n\t\t\t\tg.Expect(got).To(Equal(tt.want))\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/atomic_release_test.go"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 2,
                  "endLine": 85,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t}\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\tat := &cleanReleaseStrategy{}\n\t\t\tif got := at.MustContinue(tt.current, tt.previous); got != tt.want {\n\t\t\t\tg := NewWithT(t)\n\t\t\t\tg.Expect(got).To(Equal(tt.want))\n",
                    "rendered": {
                      "text": "\t}\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\tat := &cleanReleaseStrategy{}\n\t\t\tif got := at.MustContinue(tt.current, tt.previous); got != tt.want {\n\t\t\t\tg := NewWithT(t)\n\t\t\t\tg.Expect(got).To(Equal(tt.want))\n",
                      "markdown": "`\t}\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\tat := &cleanReleaseStrategy{}\n\t\t\tif got := at.MustContinue(tt.current, tt.previous); got != tt.want {\n\t\t\t\tg := NewWithT(t)\n\t\t\t\tg.Expect(got).To(Equal(tt.want))\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/unlock_test.go"
                },
                "region": {
                  "startLine": 498,
                  "startColumn": 48,
                  "endLine": 498,
                  "endColumn": 68,
                  "snippet": {
                    "text": "\t\t},\n\t}\n\n\tgetter, err := RESTClientGetterFromManager(testEnv.Manager, obj.GetReleaseNamespace())\n\tg.Expect(err).ToNot(HaveOccurred())\n\n\tcfg, err := action.NewConfigFactory(getter,\n",
                    "rendered": {
                      "text": "\t\t},\n\t}\n\n\tgetter, err := RESTClientGetterFromManager(testEnv.Manager, obj.GetReleaseNamespace())\n\tg.Expect(err).ToNot(HaveOccurred())\n\n\tcfg, err := action.NewConfigFactory(getter,\n",
                      "markdown": "`\t\t},\n\t}\n\n\tgetter, err := RESTClientGetterFromManager(testEnv.Manager, obj.GetReleaseNamespace())\n\tg.Expect(err).ToNot(HaveOccurred())\n\n\tcfg, err := action.NewConfigFactory(getter,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/unlock_test.go"
                },
                "region": {
                  "startLine": 322,
                  "startColumn": 50,
                  "endLine": 322,
                  "endColumn": 70,
                  "snippet": {
                    "text": "\t\t\t\tobj.Status = tt.status(releases)\n\t\t\t}\n\n\t\t\tgetter, err := RESTClientGetterFromManager(testEnv.Manager, obj.GetReleaseNamespace())\n\t\t\tg.Expect(err).ToNot(HaveOccurred())\n\n\t\t\tcfg, err := action.NewConfigFactory(getter,\n",
                    "rendered": {
                      "text": "\t\t\t\tobj.Status = tt.status(releases)\n\t\t\t}\n\n\t\t\tgetter, err := RESTClientGetterFromManager(testEnv.Manager, obj.GetReleaseNamespace())\n\t\t\tg.Expect(err).ToNot(HaveOccurred())\n\n\t\t\tcfg, err := action.NewConfigFactory(getter,\n",
                      "markdown": "`\t\t\t\tobj.Status = tt.status(releases)\n\t\t\t}\n\n\t\t\tgetter, err := RESTClientGetterFromManager(testEnv.Manager, obj.GetReleaseNamespace())\n\t\t\tg.Expect(err).ToNot(HaveOccurred())\n\n\t\t\tcfg, err := action.NewConfigFactory(getter,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/unlock_test.go"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 113,
                  "endLine": 141,
                  "endColumn": 121,
                  "snippet": {
                    "text": "\t\t\twantErr: mockUpdateErr,\n\t\t\texpectConditions: []metav1.Condition{\n\t\t\t\t*conditions.FalseCondition(meta.ReadyCondition, \"PendingRelease\", \"in pending-rollback state failed: storage update error\"),\n\t\t\t\t*conditions.FalseCondition(v2.ReleasedCondition, \"PendingRelease\", \"in pending-rollback state failed: storage update error\"),\n\t\t\t},\n\t\t\texpectHistory: func(releases []*helmrelease.Release) v2.Snapshots {\n\t\t\t\treturn v2.Snapshots{\n",
                    "rendered": {
                      "text": "\t\t\twantErr: mockUpdateErr,\n\t\t\texpectConditions: []metav1.Condition{\n\t\t\t\t*conditions.FalseCondition(meta.ReadyCondition, \"PendingRelease\", \"in pending-rollback state failed: storage update error\"),\n\t\t\t\t*conditions.FalseCondition(v2.ReleasedCondition, \"PendingRelease\", \"in pending-rollback state failed: storage update error\"),\n\t\t\t},\n\t\t\texpectHistory: func(releases []*helmrelease.Release) v2.Snapshots {\n\t\t\t\treturn v2.Snapshots{\n",
                      "markdown": "`\t\t\twantErr: mockUpdateErr,\n\t\t\texpectConditions: []metav1.Condition{\n\t\t\t\t*conditions.FalseCondition(meta.ReadyCondition, \"PendingRelease\", \"in pending-rollback state failed: storage update error\"),\n\t\t\t\t*conditions.FalseCondition(v2.ReleasedCondition, \"PendingRelease\", \"in pending-rollback state failed: storage update error\"),\n\t\t\t},\n\t\t\texpectHistory: func(releases []*helmrelease.Release) v2.Snapshots {\n\t\t\t\treturn v2.Snapshots{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/unlock_test.go"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 112,
                  "endLine": 140,
                  "endColumn": 120,
                  "snippet": {
                    "text": "\t\t\t},\n\t\t\twantErr: mockUpdateErr,\n\t\t\texpectConditions: []metav1.Condition{\n\t\t\t\t*conditions.FalseCondition(meta.ReadyCondition, \"PendingRelease\", \"in pending-rollback state failed: storage update error\"),\n\t\t\t\t*conditions.FalseCondition(v2.ReleasedCondition, \"PendingRelease\", \"in pending-rollback state failed: storage update error\"),\n\t\t\t},\n\t\t\texpectHistory: func(releases []*helmrelease.Release) v2.Snapshots {\n",
                    "rendered": {
                      "text": "\t\t\t},\n\t\t\twantErr: mockUpdateErr,\n\t\t\texpectConditions: []metav1.Condition{\n\t\t\t\t*conditions.FalseCondition(meta.ReadyCondition, \"PendingRelease\", \"in pending-rollback state failed: storage update error\"),\n\t\t\t\t*conditions.FalseCondition(v2.ReleasedCondition, \"PendingRelease\", \"in pending-rollback state failed: storage update error\"),\n\t\t\t},\n\t\t\texpectHistory: func(releases []*helmrelease.Release) v2.Snapshots {\n",
                      "markdown": "`\t\t\t},\n\t\t\twantErr: mockUpdateErr,\n\t\t\texpectConditions: []metav1.Condition{\n\t\t\t\t*conditions.FalseCondition(meta.ReadyCondition, \"PendingRelease\", \"in pending-rollback state failed: storage update error\"),\n\t\t\t\t*conditions.FalseCondition(v2.ReleasedCondition, \"PendingRelease\", \"in pending-rollback state failed: storage update error\"),\n\t\t\t},\n\t\t\texpectHistory: func(releases []*helmrelease.Release) v2.Snapshots {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/unlock_test.go"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 37,
                  "endLine": 51,
                  "endColumn": 45,
                  "snippet": {
                    "text": "func TestUnlock_Reconcile(t *testing.T) {\n\tvar (\n\t\tmockQueryErr  = errors.New(\"storage query error\")\n\t\tmockUpdateErr = errors.New(\"storage update error\")\n\t)\n\n\ttests := []struct {\n",
                    "rendered": {
                      "text": "func TestUnlock_Reconcile(t *testing.T) {\n\tvar (\n\t\tmockQueryErr  = errors.New(\"storage query error\")\n\t\tmockUpdateErr = errors.New(\"storage update error\")\n\t)\n\n\ttests := []struct {\n",
                      "markdown": "`func TestUnlock_Reconcile(t *testing.T) {\n\tvar (\n\t\tmockQueryErr  = errors.New(\"storage query error\")\n\t\tmockUpdateErr = errors.New(\"storage update error\")\n\t)\n\n\ttests := []struct {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/unlock_test.go"
                },
                "region": {
                  "startLine": 606,
                  "startColumn": 1,
                  "endLine": 606,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\t})\n\t\tobs := release.ObserveRelease(rls)\n\t\tobs.OCIDigest = \"sha256:fcdc2b0de1581a3633ada4afee3f918f6eaa5b5ab38c3fef03d5b48d3f85d9f6\"\n\t\texpect := release.ObservedToSnapshot(obs)\n\t\tobserveUnlock(obj)(rls)\n\n\t\tg.Expect(obj.Status.History).To(testutil.Equal(v2.Snapshots{\n",
                    "rendered": {
                      "text": "\t\t})\n\t\tobs := release.ObserveRelease(rls)\n\t\tobs.OCIDigest = \"sha256:fcdc2b0de1581a3633ada4afee3f918f6eaa5b5ab38c3fef03d5b48d3f85d9f6\"\n\t\texpect := release.ObservedToSnapshot(obs)\n\t\tobserveUnlock(obj)(rls)\n\n\t\tg.Expect(obj.Status.History).To(testutil.Equal(v2.Snapshots{\n",
                      "markdown": "`\t\t})\n\t\tobs := release.ObserveRelease(rls)\n\t\tobs.OCIDigest = \"sha256:fcdc2b0de1581a3633ada4afee3f918f6eaa5b5ab38c3fef03d5b48d3f85d9f6\"\n\t\texpect := release.ObservedToSnapshot(obs)\n\t\tobserveUnlock(obj)(rls)\n\n\t\tg.Expect(obj.Status.History).To(testutil.Equal(v2.Snapshots{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/internal/reconcile/unlock_test.go"
                },
                "region": {
                  "startLine": 574,
                  "startColumn": 1,
                  "endLine": 574,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\t\t\tVersion:   1,\n\t\t\tStatus:    helmrelease.StatusFailed,\n\t\t})\n\t\texpect := release.ObservedToSnapshot(release.ObserveRelease(rls))\n\t\tobserveUnlock(obj)(rls)\n\n\t\tg.Expect(obj.Status.History).To(testutil.Equal(v2.Snapshots{\n",
                    "rendered": {
                      "text": "\t\t\tVersion:   1,\n\t\t\tStatus:    helmrelease.StatusFailed,\n\t\t})\n\t\texpect := release.ObservedToSnapshot(release.ObserveRelease(rls))\n\t\tobserveUnlock(obj)(rls)\n\n\t\tg.Expect(obj.Status.History).To(testutil.Equal(v2.Snapshots{\n",
                      "markdown": "`\t\t\tVersion:   1,\n\t\t\tStatus:    helmrelease.StatusFailed,\n\t\t})\n\t\texpect := release.ObservedToSnapshot(release.ObserveRelease(rls))\n\t\tobserveUnlock(obj)(rls)\n\n\t\tg.Expect(obj.Status.History).To(testutil.Equal(v2.Snapshots{\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 293,
                  "startColumn": 33,
                  "endLine": 293,
                  "endColumn": 41,
                  "snippet": {
                    "text": "Lastly, Helm has been updated to v3.13.3.\n\nFixes:\n- loader: allow overwrite of URL hostname again\n  [#844](https://github.com/fluxcd/helm-controller/pull/844)\n- api: ensure backwards compatibility v2beta1\n  [#851](https://github.com/fluxcd/helm-controller/pull/851)\n",
                    "rendered": {
                      "text": "Lastly, Helm has been updated to v3.13.3.\n\nFixes:\n- loader: allow overwrite of URL hostname again\n  [#844](https://github.com/fluxcd/helm-controller/pull/844)\n- api: ensure backwards compatibility v2beta1\n  [#851](https://github.com/fluxcd/helm-controller/pull/851)\n",
                      "markdown": "`Lastly, Helm has been updated to v3.13.3.\n\nFixes:\n- loader: allow overwrite of URL hostname again\n  [#844](https://github.com/fluxcd/helm-controller/pull/844)\n- api: ensure backwards compatibility v2beta1\n  [#851](https://github.com/fluxcd/helm-controller/pull/851)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2120,
                  "startColumn": 18,
                  "endLine": 2120,
                  "endColumn": 22,
                  "snippet": {
                    "text": "**Release date:** 2020-08-20\n\nThis prerelease adds support for merging a flat single value from\na `ValueReference` at the defined `TargetPath`, and fixes a bug in\nthe merging of values where overwrites of a map with a flat single\nvalue was not allowed.\n\n",
                    "rendered": {
                      "text": "**Release date:** 2020-08-20\n\nThis prerelease adds support for merging a flat single value from\na `ValueReference` at the defined `TargetPath`, and fixes a bug in\nthe merging of values where overwrites of a map with a flat single\nvalue was not allowed.\n\n",
                      "markdown": "`**Release date:** 2020-08-20\n\nThis prerelease adds support for merging a flat single value from\na `ValueReference` at the defined `TargetPath`, and fixes a bug in\nthe merging of values where overwrites of a map with a flat single\nvalue was not allowed.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2095,
                  "startColumn": 43,
                  "endLine": 2095,
                  "endColumn": 47,
                  "snippet": {
                    "text": "  has been successfully reconciled. This field is marked as `true` on a\n  `Ready==True` condition, and only reset on `generation`, values, and/or\n  chart changes.\n* `lastObservedTime` reflects the last time at which the `HelmRelease` was\n  observed. This can for example be used to observe if the `HelmRelease` is\n  running on the configured `spec.interval` and/or reacting to `ReconcileAt`\n  annotations.\n",
                    "rendered": {
                      "text": "  has been successfully reconciled. This field is marked as `true` on a\n  `Ready==True` condition, and only reset on `generation`, values, and/or\n  chart changes.\n* `lastObservedTime` reflects the last time at which the `HelmRelease` was\n  observed. This can for example be used to observe if the `HelmRelease` is\n  running on the configured `spec.interval` and/or reacting to `ReconcileAt`\n  annotations.\n",
                      "markdown": "`  has been successfully reconciled. This field is marked as `true` on a\n  `Ready==True` condition, and only reset on `generation`, values, and/or\n  chart changes.\n* `lastObservedTime` reflects the last time at which the `HelmRelease` was\n  observed. This can for example be used to observe if the `HelmRelease` is\n  running on the configured `spec.interval` and/or reacting to `ReconcileAt`\n  annotations.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1821,
                  "startColumn": 1,
                  "endLine": 1821,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#207](https://github.com/fluxcd/helm-controller/pull/207)\n* Enable pprof endpoints on metrics server\n  [#209](https://github.com/fluxcd/helm-controller/pull/209)\n* Update Alpine to v3.13\n  [#210](https://github.com/fluxcd/helm-controller/pull/210)\n\n## 0.6.1\n",
                    "rendered": {
                      "text": "  [#207](https://github.com/fluxcd/helm-controller/pull/207)\n* Enable pprof endpoints on metrics server\n  [#209](https://github.com/fluxcd/helm-controller/pull/209)\n* Update Alpine to v3.13\n  [#210](https://github.com/fluxcd/helm-controller/pull/210)\n\n## 0.6.1\n",
                      "markdown": "`  [#207](https://github.com/fluxcd/helm-controller/pull/207)\n* Enable pprof endpoints on metrics server\n  [#209](https://github.com/fluxcd/helm-controller/pull/209)\n* Update Alpine to v3.13\n  [#210](https://github.com/fluxcd/helm-controller/pull/210)\n\n## 0.6.1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1817,
                  "startColumn": 1,
                  "endLine": 1817,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#206](https://github.com/fluxcd/helm-controller/pull/206)\n\nImprovements:\n* Update dependencies\n  [#207](https://github.com/fluxcd/helm-controller/pull/207)\n* Enable pprof endpoints on metrics server\n  [#209](https://github.com/fluxcd/helm-controller/pull/209)\n",
                    "rendered": {
                      "text": "  [#206](https://github.com/fluxcd/helm-controller/pull/206)\n\nImprovements:\n* Update dependencies\n  [#207](https://github.com/fluxcd/helm-controller/pull/207)\n* Enable pprof endpoints on metrics server\n  [#209](https://github.com/fluxcd/helm-controller/pull/209)\n",
                      "markdown": "`  [#206](https://github.com/fluxcd/helm-controller/pull/206)\n\nImprovements:\n* Update dependencies\n  [#207](https://github.com/fluxcd/helm-controller/pull/207)\n* Enable pprof endpoints on metrics server\n  [#209](https://github.com/fluxcd/helm-controller/pull/209)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1792,
                  "startColumn": 1,
                  "endLine": 1792,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#220](https://github.com/fluxcd/helm-controller/pull/220)\n* Refactor release workflow\n  [#223](https://github.com/fluxcd/helm-controller/pull/223)\n* Update dependencies\n  [#225](https://github.com/fluxcd/helm-controller/pull/225)\n* Use source-controller manifest from GitHub release\n  [#226](https://github.com/fluxcd/helm-controller/pull/226)\n",
                    "rendered": {
                      "text": "  [#220](https://github.com/fluxcd/helm-controller/pull/220)\n* Refactor release workflow\n  [#223](https://github.com/fluxcd/helm-controller/pull/223)\n* Update dependencies\n  [#225](https://github.com/fluxcd/helm-controller/pull/225)\n* Use source-controller manifest from GitHub release\n  [#226](https://github.com/fluxcd/helm-controller/pull/226)\n",
                      "markdown": "`  [#220](https://github.com/fluxcd/helm-controller/pull/220)\n* Refactor release workflow\n  [#223](https://github.com/fluxcd/helm-controller/pull/223)\n* Update dependencies\n  [#225](https://github.com/fluxcd/helm-controller/pull/225)\n* Use source-controller manifest from GitHub release\n  [#226](https://github.com/fluxcd/helm-controller/pull/226)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1751,
                  "startColumn": 1,
                  "endLine": 1751,
                  "endColumn": 9,
                  "snippet": {
                    "text": "dependencies.\n\nImprovements:\n* Update dependencies\n  [#232](https://github.com/fluxcd/helm-controller/pull/232)\n\n## 0.8.1\n",
                    "rendered": {
                      "text": "dependencies.\n\nImprovements:\n* Update dependencies\n  [#232](https://github.com/fluxcd/helm-controller/pull/232)\n\n## 0.8.1\n",
                      "markdown": "`dependencies.\n\nImprovements:\n* Update dependencies\n  [#232](https://github.com/fluxcd/helm-controller/pull/232)\n\n## 0.8.1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1740,
                  "startColumn": 1,
                  "endLine": 1740,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#238](https://github.com/fluxcd/helm-controller/pull/238)\n* Set leader election deadline to 30s\n  [#239](https://github.com/fluxcd/helm-controller/pull/239)\n* Update source-controller API to v0.10.0\n  [#240](https://github.com/fluxcd/helm-controller/pull/240)\n\n## 0.8.2\n",
                    "rendered": {
                      "text": "  [#238](https://github.com/fluxcd/helm-controller/pull/238)\n* Set leader election deadline to 30s\n  [#239](https://github.com/fluxcd/helm-controller/pull/239)\n* Update source-controller API to v0.10.0\n  [#240](https://github.com/fluxcd/helm-controller/pull/240)\n\n## 0.8.2\n",
                      "markdown": "`  [#238](https://github.com/fluxcd/helm-controller/pull/238)\n* Set leader election deadline to 30s\n  [#239](https://github.com/fluxcd/helm-controller/pull/239)\n* Update source-controller API to v0.10.0\n  [#240](https://github.com/fluxcd/helm-controller/pull/240)\n\n## 0.8.2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1700,
                  "startColumn": 1,
                  "endLine": 1700,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Improvements:\n* Update Helm to v3.5.4\n  [#253](https://github.com/fluxcd/helm-controller/pull/253)\n* Update dependencies\n  [#251](https://github.com/fluxcd/helm-controller/pull/251)\n  [#253](https://github.com/fluxcd/helm-controller/pull/253)\n\n",
                    "rendered": {
                      "text": "Improvements:\n* Update Helm to v3.5.4\n  [#253](https://github.com/fluxcd/helm-controller/pull/253)\n* Update dependencies\n  [#251](https://github.com/fluxcd/helm-controller/pull/251)\n  [#253](https://github.com/fluxcd/helm-controller/pull/253)\n\n",
                      "markdown": "`Improvements:\n* Update Helm to v3.5.4\n  [#253](https://github.com/fluxcd/helm-controller/pull/253)\n* Update dependencies\n  [#251](https://github.com/fluxcd/helm-controller/pull/251)\n  [#253](https://github.com/fluxcd/helm-controller/pull/253)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1698,
                  "startColumn": 1,
                  "endLine": 1698,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#252](https://github.com/fluxcd/helm-controller/pull/252)\n\nImprovements:\n* Update Helm to v3.5.4\n  [#253](https://github.com/fluxcd/helm-controller/pull/253)\n* Update dependencies\n  [#251](https://github.com/fluxcd/helm-controller/pull/251)\n",
                    "rendered": {
                      "text": "  [#252](https://github.com/fluxcd/helm-controller/pull/252)\n\nImprovements:\n* Update Helm to v3.5.4\n  [#253](https://github.com/fluxcd/helm-controller/pull/253)\n* Update dependencies\n  [#251](https://github.com/fluxcd/helm-controller/pull/251)\n",
                      "markdown": "`  [#252](https://github.com/fluxcd/helm-controller/pull/252)\n\nImprovements:\n* Update Helm to v3.5.4\n  [#253](https://github.com/fluxcd/helm-controller/pull/253)\n* Update dependencies\n  [#251](https://github.com/fluxcd/helm-controller/pull/251)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1659,
                  "startColumn": 1,
                  "endLine": 1659,
                  "endColumn": 9,
                  "snippet": {
                    "text": "deprecated one.\n\nImprovements:\n* Update source-controller dependencies to v0.12.2\n  [#262](https://github.com/fluxcd/helm-controller/pull/262)\n\nFixes:\n",
                    "rendered": {
                      "text": "deprecated one.\n\nImprovements:\n* Update source-controller dependencies to v0.12.2\n  [#262](https://github.com/fluxcd/helm-controller/pull/262)\n\nFixes:\n",
                      "markdown": "`deprecated one.\n\nImprovements:\n* Update source-controller dependencies to v0.12.2\n  [#262](https://github.com/fluxcd/helm-controller/pull/262)\n\nFixes:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1640,
                  "startColumn": 1,
                  "endLine": 1640,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Improvements:\n* Add support for Helm `--wait-for-jobs` flag\n  [#271](https://github.com/fluxcd/helm-controller/pull/271)\n* Update dependencies\n  [#273](https://github.com/fluxcd/helm-controller/pull/273)\n* Add nightly builds workflow and allow RC releases\n  [#274](https://github.com/fluxcd/helm-controller/pull/274)\n",
                    "rendered": {
                      "text": "Improvements:\n* Add support for Helm `--wait-for-jobs` flag\n  [#271](https://github.com/fluxcd/helm-controller/pull/271)\n* Update dependencies\n  [#273](https://github.com/fluxcd/helm-controller/pull/273)\n* Add nightly builds workflow and allow RC releases\n  [#274](https://github.com/fluxcd/helm-controller/pull/274)\n",
                      "markdown": "`Improvements:\n* Add support for Helm `--wait-for-jobs` flag\n  [#271](https://github.com/fluxcd/helm-controller/pull/271)\n* Update dependencies\n  [#273](https://github.com/fluxcd/helm-controller/pull/273)\n* Add nightly builds workflow and allow RC releases\n  [#274](https://github.com/fluxcd/helm-controller/pull/274)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1629,
                  "startColumn": 73,
                  "endLine": 1630,
                  "snippet": {
                    "text": "**Release date:** 2021-06-09\n\nThis prerelease comes with an update to the Kubernetes and controller-runtime\ndependencies to align them with the Kubernetes 1.21 release, including an update\nof Helm to `v3.6.0`.\n\nIt introduces breaking changes to the Helm behavior as the `--wait-for-jobs`\nflag that was introduced in Helm `v3.5.0` is now enabled by default. Disabling\n",
                    "rendered": {
                      "text": "**Release date:** 2021-06-09\n\nThis prerelease comes with an update to the Kubernetes and controller-runtime\ndependencies to align them with the Kubernetes 1.21 release, including an update\nof Helm to `v3.6.0`.\n\nIt introduces breaking changes to the Helm behavior as the `--wait-for-jobs`\nflag that was introduced in Helm `v3.5.0` is now enabled by default. Disabling\n",
                      "markdown": "`**Release date:** 2021-06-09\n\nThis prerelease comes with an update to the Kubernetes and controller-runtime\ndependencies to align them with the Kubernetes 1.21 release, including an update\nof Helm to `v3.6.0`.\n\nIt introduces breaking changes to the Helm behavior as the `--wait-for-jobs`\nflag that was introduced in Helm `v3.5.0` is now enabled by default. Disabling\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1628,
                  "startColumn": 29,
                  "endLine": 1628,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\n**Release date:** 2021-06-09\n\nThis prerelease comes with an update to the Kubernetes and controller-runtime\ndependencies to align them with the Kubernetes 1.21 release, including an update\nof Helm to `v3.6.0`.\n\n",
                    "rendered": {
                      "text": "\n**Release date:** 2021-06-09\n\nThis prerelease comes with an update to the Kubernetes and controller-runtime\ndependencies to align them with the Kubernetes 1.21 release, including an update\nof Helm to `v3.6.0`.\n\n",
                      "markdown": "`\n**Release date:** 2021-06-09\n\nThis prerelease comes with an update to the Kubernetes and controller-runtime\ndependencies to align them with the Kubernetes 1.21 release, including an update\nof Helm to `v3.6.0`.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1619,
                  "startColumn": 1,
                  "endLine": 1619,
                  "endColumn": 9,
                  "snippet": {
                    "text": "changelog](https://github.com/fluxcd/source-controller/blob/v0.15.1/CHANGELOG.md).\n\nImprovements:\n* Update Helm and source-controller\n  [#277](https://github.com/fluxcd/helm-controller/pull/277)\n* Panic on non-nil AddToScheme errors in main init\n  [#278](https://github.com/fluxcd/helm-controller/pull/278)\n",
                    "rendered": {
                      "text": "changelog](https://github.com/fluxcd/source-controller/blob/v0.15.1/CHANGELOG.md).\n\nImprovements:\n* Update Helm and source-controller\n  [#277](https://github.com/fluxcd/helm-controller/pull/277)\n* Panic on non-nil AddToScheme errors in main init\n  [#278](https://github.com/fluxcd/helm-controller/pull/278)\n",
                      "markdown": "`changelog](https://github.com/fluxcd/source-controller/blob/v0.15.1/CHANGELOG.md).\n\nImprovements:\n* Update Helm and source-controller\n  [#277](https://github.com/fluxcd/helm-controller/pull/277)\n* Panic on non-nil AddToScheme errors in main init\n  [#278](https://github.com/fluxcd/helm-controller/pull/278)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1613,
                  "startColumn": 60,
                  "endLine": 1613,
                  "endColumn": 68,
                  "snippet": {
                    "text": "\n**Release date:** 2021-06-18\n\nThis prerelease updates Helm to `v3.6.1`, this is a security update which has\nno impact as transport is handled by the source-controller. For more details\nplease see the [source-controller `v0.15.1`\nchangelog](https://github.com/fluxcd/source-controller/blob/v0.15.1/CHANGELOG.md).\n",
                    "rendered": {
                      "text": "\n**Release date:** 2021-06-18\n\nThis prerelease updates Helm to `v3.6.1`, this is a security update which has\nno impact as transport is handled by the source-controller. For more details\nplease see the [source-controller `v0.15.1`\nchangelog](https://github.com/fluxcd/source-controller/blob/v0.15.1/CHANGELOG.md).\n",
                      "markdown": "`\n**Release date:** 2021-06-18\n\nThis prerelease updates Helm to `v3.6.1`, this is a security update which has\nno impact as transport is handled by the source-controller. For more details\nplease see the [source-controller `v0.15.1`\nchangelog](https://github.com/fluxcd/source-controller/blob/v0.15.1/CHANGELOG.md).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1602,
                  "startColumn": 1,
                  "endLine": 1602,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#298](https://github.com/fluxcd/helm-controller/pull/298)\n* Make the kubeconfig secrets compatible with SOPS\n  [#305](https://github.com/fluxcd/helm-controller/pull/306)\n* Update dependencies\n  [#307](https://github.com/fluxcd/helm-controller/pull/306)\n\nFixes:\n",
                    "rendered": {
                      "text": "  [#298](https://github.com/fluxcd/helm-controller/pull/298)\n* Make the kubeconfig secrets compatible with SOPS\n  [#305](https://github.com/fluxcd/helm-controller/pull/306)\n* Update dependencies\n  [#307](https://github.com/fluxcd/helm-controller/pull/306)\n\nFixes:\n",
                      "markdown": "`  [#298](https://github.com/fluxcd/helm-controller/pull/298)\n* Make the kubeconfig secrets compatible with SOPS\n  [#305](https://github.com/fluxcd/helm-controller/pull/306)\n* Update dependencies\n  [#307](https://github.com/fluxcd/helm-controller/pull/306)\n\nFixes:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1572,
                  "startColumn": 1,
                  "endLine": 1572,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#329](https://github.com/fluxcd/helm-controller/pull/329)\n* Update sigs.k8s.io/kustomize/api to v0.10.0\n  [#330](https://github.com/fluxcd/helm-controller/pull/330)\n* Update Helm to v3.7.0\n  [#330](https://github.com/fluxcd/helm-controller/pull/330)\n\nFixes:\n",
                    "rendered": {
                      "text": "  [#329](https://github.com/fluxcd/helm-controller/pull/329)\n* Update sigs.k8s.io/kustomize/api to v0.10.0\n  [#330](https://github.com/fluxcd/helm-controller/pull/330)\n* Update Helm to v3.7.0\n  [#330](https://github.com/fluxcd/helm-controller/pull/330)\n\nFixes:\n",
                      "markdown": "`  [#329](https://github.com/fluxcd/helm-controller/pull/329)\n* Update sigs.k8s.io/kustomize/api to v0.10.0\n  [#330](https://github.com/fluxcd/helm-controller/pull/330)\n* Update Helm to v3.7.0\n  [#330](https://github.com/fluxcd/helm-controller/pull/330)\n\nFixes:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1570,
                  "startColumn": 1,
                  "endLine": 1570,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#329](https://github.com/fluxcd/helm-controller/pull/329)\n* Introduce ReconcileStrategy in HelmChartTemplateSpec\n  [#329](https://github.com/fluxcd/helm-controller/pull/329)\n* Update sigs.k8s.io/kustomize/api to v0.10.0\n  [#330](https://github.com/fluxcd/helm-controller/pull/330)\n* Update Helm to v3.7.0\n  [#330](https://github.com/fluxcd/helm-controller/pull/330)\n",
                    "rendered": {
                      "text": "  [#329](https://github.com/fluxcd/helm-controller/pull/329)\n* Introduce ReconcileStrategy in HelmChartTemplateSpec\n  [#329](https://github.com/fluxcd/helm-controller/pull/329)\n* Update sigs.k8s.io/kustomize/api to v0.10.0\n  [#330](https://github.com/fluxcd/helm-controller/pull/330)\n* Update Helm to v3.7.0\n  [#330](https://github.com/fluxcd/helm-controller/pull/330)\n",
                      "markdown": "`  [#329](https://github.com/fluxcd/helm-controller/pull/329)\n* Introduce ReconcileStrategy in HelmChartTemplateSpec\n  [#329](https://github.com/fluxcd/helm-controller/pull/329)\n* Update sigs.k8s.io/kustomize/api to v0.10.0\n  [#330](https://github.com/fluxcd/helm-controller/pull/330)\n* Update Helm to v3.7.0\n  [#330](https://github.com/fluxcd/helm-controller/pull/330)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1566,
                  "startColumn": 1,
                  "endLine": 1566,
                  "endColumn": 9,
                  "snippet": {
                    "text": "changes in the `Chart.yaml` file.\n\nImprovements:\n* Update fluxcd/source-controller to v0.16.0\n  [#329](https://github.com/fluxcd/helm-controller/pull/329)\n* Introduce ReconcileStrategy in HelmChartTemplateSpec\n  [#329](https://github.com/fluxcd/helm-controller/pull/329)\n",
                    "rendered": {
                      "text": "changes in the `Chart.yaml` file.\n\nImprovements:\n* Update fluxcd/source-controller to v0.16.0\n  [#329](https://github.com/fluxcd/helm-controller/pull/329)\n* Introduce ReconcileStrategy in HelmChartTemplateSpec\n  [#329](https://github.com/fluxcd/helm-controller/pull/329)\n",
                      "markdown": "`changes in the `Chart.yaml` file.\n\nImprovements:\n* Update fluxcd/source-controller to v0.16.0\n  [#329](https://github.com/fluxcd/helm-controller/pull/329)\n* Introduce ReconcileStrategy in HelmChartTemplateSpec\n  [#329](https://github.com/fluxcd/helm-controller/pull/329)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1547,
                  "startColumn": 1,
                  "endLine": 1547,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#334](https://github.com/fluxcd/helm-controller/pull/334)\n\nFixes:\n* Update the release if ReconcileStrategy changes\n  [#333](https://github.com/fluxcd/helm-controller/pull/333)\n\n## 0.12.0\n",
                    "rendered": {
                      "text": "  [#334](https://github.com/fluxcd/helm-controller/pull/334)\n\nFixes:\n* Update the release if ReconcileStrategy changes\n  [#333](https://github.com/fluxcd/helm-controller/pull/333)\n\n## 0.12.0\n",
                      "markdown": "`  [#334](https://github.com/fluxcd/helm-controller/pull/334)\n\nFixes:\n* Update the release if ReconcileStrategy changes\n  [#333](https://github.com/fluxcd/helm-controller/pull/333)\n\n## 0.12.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1543,
                  "startColumn": 6,
                  "endLine": 1543,
                  "endColumn": 14,
                  "snippet": {
                    "text": "Improvements:\n* Update Helm to v3.7.1\n  [#336](https://github.com/fluxcd/helm-controller/pull/336)\n* Nit: update tests to use non-deprecated ValuesFiles\n  [#334](https://github.com/fluxcd/helm-controller/pull/334)\n\nFixes:\n",
                    "rendered": {
                      "text": "Improvements:\n* Update Helm to v3.7.1\n  [#336](https://github.com/fluxcd/helm-controller/pull/336)\n* Nit: update tests to use non-deprecated ValuesFiles\n  [#334](https://github.com/fluxcd/helm-controller/pull/334)\n\nFixes:\n",
                      "markdown": "`Improvements:\n* Update Helm to v3.7.1\n  [#336](https://github.com/fluxcd/helm-controller/pull/336)\n* Nit: update tests to use non-deprecated ValuesFiles\n  [#334](https://github.com/fluxcd/helm-controller/pull/334)\n\nFixes:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1541,
                  "startColumn": 1,
                  "endLine": 1541,
                  "endColumn": 9,
                  "snippet": {
                    "text": "changes are applied to the underlying `HelmChart` of a `HelmRelease`.\n\nImprovements:\n* Update Helm to v3.7.1\n  [#336](https://github.com/fluxcd/helm-controller/pull/336)\n* Nit: update tests to use non-deprecated ValuesFiles\n  [#334](https://github.com/fluxcd/helm-controller/pull/334)\n",
                    "rendered": {
                      "text": "changes are applied to the underlying `HelmChart` of a `HelmRelease`.\n\nImprovements:\n* Update Helm to v3.7.1\n  [#336](https://github.com/fluxcd/helm-controller/pull/336)\n* Nit: update tests to use non-deprecated ValuesFiles\n  [#334](https://github.com/fluxcd/helm-controller/pull/334)\n",
                      "markdown": "`changes are applied to the underlying `HelmChart` of a `HelmRelease`.\n\nImprovements:\n* Update Helm to v3.7.1\n  [#336](https://github.com/fluxcd/helm-controller/pull/336)\n* Nit: update tests to use non-deprecated ValuesFiles\n  [#334](https://github.com/fluxcd/helm-controller/pull/334)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1498,
                  "startColumn": 1,
                  "endLine": 1498,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#362](https://github.com/fluxcd/helm-controller/pull/362)\n- Update controller-runtime to v0.10.2\n  [#363](https://github.com/fluxcd/helm-controller/pull/363)\n- Update source-controller to v0.19.0\n  [#364](https://github.com/fluxcd/helm-controller/pull/364)\n\n## 0.13.0\n",
                    "rendered": {
                      "text": "  [#362](https://github.com/fluxcd/helm-controller/pull/362)\n- Update controller-runtime to v0.10.2\n  [#363](https://github.com/fluxcd/helm-controller/pull/363)\n- Update source-controller to v0.19.0\n  [#364](https://github.com/fluxcd/helm-controller/pull/364)\n\n## 0.13.0\n",
                      "markdown": "`  [#362](https://github.com/fluxcd/helm-controller/pull/362)\n- Update controller-runtime to v0.10.2\n  [#363](https://github.com/fluxcd/helm-controller/pull/363)\n- Update source-controller to v0.19.0\n  [#364](https://github.com/fluxcd/helm-controller/pull/364)\n\n## 0.13.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1496,
                  "startColumn": 1,
                  "endLine": 1496,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#361](https://github.com/fluxcd/helm-controller/pull/361)\n- Update opencontainers/image-spec to v1.0.2\n  [#362](https://github.com/fluxcd/helm-controller/pull/362)\n- Update controller-runtime to v0.10.2\n  [#363](https://github.com/fluxcd/helm-controller/pull/363)\n- Update source-controller to v0.19.0\n  [#364](https://github.com/fluxcd/helm-controller/pull/364)\n",
                    "rendered": {
                      "text": "  [#361](https://github.com/fluxcd/helm-controller/pull/361)\n- Update opencontainers/image-spec to v1.0.2\n  [#362](https://github.com/fluxcd/helm-controller/pull/362)\n- Update controller-runtime to v0.10.2\n  [#363](https://github.com/fluxcd/helm-controller/pull/363)\n- Update source-controller to v0.19.0\n  [#364](https://github.com/fluxcd/helm-controller/pull/364)\n",
                      "markdown": "`  [#361](https://github.com/fluxcd/helm-controller/pull/361)\n- Update opencontainers/image-spec to v1.0.2\n  [#362](https://github.com/fluxcd/helm-controller/pull/362)\n- Update controller-runtime to v0.10.2\n  [#363](https://github.com/fluxcd/helm-controller/pull/363)\n- Update source-controller to v0.19.0\n  [#364](https://github.com/fluxcd/helm-controller/pull/364)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1494,
                  "startColumn": 1,
                  "endLine": 1494,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#360](https://github.com/fluxcd/helm-controller/pull/360)\n- Update various dependencies to mitigate CVE warnings\n  [#361](https://github.com/fluxcd/helm-controller/pull/361)\n- Update opencontainers/image-spec to v1.0.2\n  [#362](https://github.com/fluxcd/helm-controller/pull/362)\n- Update controller-runtime to v0.10.2\n  [#363](https://github.com/fluxcd/helm-controller/pull/363)\n",
                    "rendered": {
                      "text": "  [#360](https://github.com/fluxcd/helm-controller/pull/360)\n- Update various dependencies to mitigate CVE warnings\n  [#361](https://github.com/fluxcd/helm-controller/pull/361)\n- Update opencontainers/image-spec to v1.0.2\n  [#362](https://github.com/fluxcd/helm-controller/pull/362)\n- Update controller-runtime to v0.10.2\n  [#363](https://github.com/fluxcd/helm-controller/pull/363)\n",
                      "markdown": "`  [#360](https://github.com/fluxcd/helm-controller/pull/360)\n- Update various dependencies to mitigate CVE warnings\n  [#361](https://github.com/fluxcd/helm-controller/pull/361)\n- Update opencontainers/image-spec to v1.0.2\n  [#362](https://github.com/fluxcd/helm-controller/pull/362)\n- Update controller-runtime to v0.10.2\n  [#363](https://github.com/fluxcd/helm-controller/pull/363)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1492,
                  "startColumn": 1,
                  "endLine": 1492,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Improvements:\n- Update Alpine to v3.14\n  [#360](https://github.com/fluxcd/helm-controller/pull/360)\n- Update various dependencies to mitigate CVE warnings\n  [#361](https://github.com/fluxcd/helm-controller/pull/361)\n- Update opencontainers/image-spec to v1.0.2\n  [#362](https://github.com/fluxcd/helm-controller/pull/362)\n",
                    "rendered": {
                      "text": "Improvements:\n- Update Alpine to v3.14\n  [#360](https://github.com/fluxcd/helm-controller/pull/360)\n- Update various dependencies to mitigate CVE warnings\n  [#361](https://github.com/fluxcd/helm-controller/pull/361)\n- Update opencontainers/image-spec to v1.0.2\n  [#362](https://github.com/fluxcd/helm-controller/pull/362)\n",
                      "markdown": "`Improvements:\n- Update Alpine to v3.14\n  [#360](https://github.com/fluxcd/helm-controller/pull/360)\n- Update various dependencies to mitigate CVE warnings\n  [#361](https://github.com/fluxcd/helm-controller/pull/361)\n- Update opencontainers/image-spec to v1.0.2\n  [#362](https://github.com/fluxcd/helm-controller/pull/362)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1490,
                  "startColumn": 1,
                  "endLine": 1490,
                  "endColumn": 9,
                  "snippet": {
                    "text": "cardinality metrics.\n\nImprovements:\n- Update Alpine to v3.14\n  [#360](https://github.com/fluxcd/helm-controller/pull/360)\n- Update various dependencies to mitigate CVE warnings\n  [#361](https://github.com/fluxcd/helm-controller/pull/361)\n",
                    "rendered": {
                      "text": "cardinality metrics.\n\nImprovements:\n- Update Alpine to v3.14\n  [#360](https://github.com/fluxcd/helm-controller/pull/360)\n- Update various dependencies to mitigate CVE warnings\n  [#361](https://github.com/fluxcd/helm-controller/pull/361)\n",
                      "markdown": "`cardinality metrics.\n\nImprovements:\n- Update Alpine to v3.14\n  [#360](https://github.com/fluxcd/helm-controller/pull/360)\n- Update various dependencies to mitigate CVE warnings\n  [#361](https://github.com/fluxcd/helm-controller/pull/361)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1469,
                  "startColumn": 1,
                  "endLine": 1469,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#374](https://github.com/fluxcd/helm-controller/pull/374)\n- Update dependencies (fix CVE-2021-43784)\n  [#376](https://github.com/fluxcd/helm-controller/pull/376)\n- Update source-controller to v0.19.2\n  [#377](https://github.com/fluxcd/helm-controller/pull/377)\n\nFixes:\n",
                    "rendered": {
                      "text": "  [#374](https://github.com/fluxcd/helm-controller/pull/374)\n- Update dependencies (fix CVE-2021-43784)\n  [#376](https://github.com/fluxcd/helm-controller/pull/376)\n- Update source-controller to v0.19.2\n  [#377](https://github.com/fluxcd/helm-controller/pull/377)\n\nFixes:\n",
                      "markdown": "`  [#374](https://github.com/fluxcd/helm-controller/pull/374)\n- Update dependencies (fix CVE-2021-43784)\n  [#376](https://github.com/fluxcd/helm-controller/pull/376)\n- Update source-controller to v0.19.2\n  [#377](https://github.com/fluxcd/helm-controller/pull/377)\n\nFixes:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1467,
                  "startColumn": 1,
                  "endLine": 1467,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Improvements:\n- Update kustomize packages to Kustomize v4.4.1\n  [#374](https://github.com/fluxcd/helm-controller/pull/374)\n- Update dependencies (fix CVE-2021-43784)\n  [#376](https://github.com/fluxcd/helm-controller/pull/376)\n- Update source-controller to v0.19.2\n  [#377](https://github.com/fluxcd/helm-controller/pull/377)\n",
                    "rendered": {
                      "text": "Improvements:\n- Update kustomize packages to Kustomize v4.4.1\n  [#374](https://github.com/fluxcd/helm-controller/pull/374)\n- Update dependencies (fix CVE-2021-43784)\n  [#376](https://github.com/fluxcd/helm-controller/pull/376)\n- Update source-controller to v0.19.2\n  [#377](https://github.com/fluxcd/helm-controller/pull/377)\n",
                      "markdown": "`Improvements:\n- Update kustomize packages to Kustomize v4.4.1\n  [#374](https://github.com/fluxcd/helm-controller/pull/374)\n- Update dependencies (fix CVE-2021-43784)\n  [#376](https://github.com/fluxcd/helm-controller/pull/376)\n- Update source-controller to v0.19.2\n  [#377](https://github.com/fluxcd/helm-controller/pull/377)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1465,
                  "startColumn": 1,
                  "endLine": 1465,
                  "endColumn": 9,
                  "snippet": {
                    "text": "CVE-2021-43784.\n\nImprovements:\n- Update kustomize packages to Kustomize v4.4.1\n  [#374](https://github.com/fluxcd/helm-controller/pull/374)\n- Update dependencies (fix CVE-2021-43784)\n  [#376](https://github.com/fluxcd/helm-controller/pull/376)\n",
                    "rendered": {
                      "text": "CVE-2021-43784.\n\nImprovements:\n- Update kustomize packages to Kustomize v4.4.1\n  [#374](https://github.com/fluxcd/helm-controller/pull/374)\n- Update dependencies (fix CVE-2021-43784)\n  [#376](https://github.com/fluxcd/helm-controller/pull/376)\n",
                      "markdown": "`CVE-2021-43784.\n\nImprovements:\n- Update kustomize packages to Kustomize v4.4.1\n  [#374](https://github.com/fluxcd/helm-controller/pull/374)\n- Update dependencies (fix CVE-2021-43784)\n  [#376](https://github.com/fluxcd/helm-controller/pull/376)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1431,
                  "startColumn": 36,
                  "endLine": 1431,
                  "endColumn": 40,
                  "snippet": {
                    "text": "  [#380](https://github.com/fluxcd/helm-controller/pull/380)\n\nFixes:\n- Fix inconsistent code-style raised at security audit\n  [#386](https://github.com/fluxcd/helm-controller/pull/386)\n\n## 0.14.1\n",
                    "rendered": {
                      "text": "  [#380](https://github.com/fluxcd/helm-controller/pull/380)\n\nFixes:\n- Fix inconsistent code-style raised at security audit\n  [#386](https://github.com/fluxcd/helm-controller/pull/386)\n\n## 0.14.1\n",
                      "markdown": "`  [#380](https://github.com/fluxcd/helm-controller/pull/380)\n\nFixes:\n- Fix inconsistent code-style raised at security audit\n  [#386](https://github.com/fluxcd/helm-controller/pull/386)\n\n## 0.14.1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1427,
                  "startColumn": 1,
                  "endLine": 1427,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Improvements:\n- Update Go to v1.17\n  [#348](https://github.com/fluxcd/helm-controller/pull/348)\n- Update Helm to v3.7.2\n  [#380](https://github.com/fluxcd/helm-controller/pull/380)\n\nFixes:\n",
                    "rendered": {
                      "text": "Improvements:\n- Update Go to v1.17\n  [#348](https://github.com/fluxcd/helm-controller/pull/348)\n- Update Helm to v3.7.2\n  [#380](https://github.com/fluxcd/helm-controller/pull/380)\n\nFixes:\n",
                      "markdown": "`Improvements:\n- Update Go to v1.17\n  [#348](https://github.com/fluxcd/helm-controller/pull/348)\n- Update Helm to v3.7.2\n  [#380](https://github.com/fluxcd/helm-controller/pull/380)\n\nFixes:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1425,
                  "startColumn": 1,
                  "endLine": 1425,
                  "endColumn": 9,
                  "snippet": {
                    "text": "In addition, the controller is now built with Go 1.17 and Alpine 3.15.\n\nImprovements:\n- Update Go to v1.17\n  [#348](https://github.com/fluxcd/helm-controller/pull/348)\n- Update Helm to v3.7.2\n  [#380](https://github.com/fluxcd/helm-controller/pull/380)\n",
                    "rendered": {
                      "text": "In addition, the controller is now built with Go 1.17 and Alpine 3.15.\n\nImprovements:\n- Update Go to v1.17\n  [#348](https://github.com/fluxcd/helm-controller/pull/348)\n- Update Helm to v3.7.2\n  [#380](https://github.com/fluxcd/helm-controller/pull/380)\n",
                      "markdown": "`In addition, the controller is now built with Go 1.17 and Alpine 3.15.\n\nImprovements:\n- Update Go to v1.17\n  [#348](https://github.com/fluxcd/helm-controller/pull/348)\n- Update Helm to v3.7.2\n  [#380](https://github.com/fluxcd/helm-controller/pull/380)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1420,
                  "startColumn": 60,
                  "endLine": 1420,
                  "endColumn": 68,
                  "snippet": {
                    "text": "**Release date:** 2022-01-10\n\nThis prerelease comes with an update to the Kubernetes and controller-runtime dependencies\nto align them with the Kubernetes 1.23 release, including an update of Helm to `v3.7.2`.\n\nIn addition, the controller is now built with Go 1.17 and Alpine 3.15.\n\n",
                    "rendered": {
                      "text": "**Release date:** 2022-01-10\n\nThis prerelease comes with an update to the Kubernetes and controller-runtime dependencies\nto align them with the Kubernetes 1.23 release, including an update of Helm to `v3.7.2`.\n\nIn addition, the controller is now built with Go 1.17 and Alpine 3.15.\n\n",
                      "markdown": "`**Release date:** 2022-01-10\n\nThis prerelease comes with an update to the Kubernetes and controller-runtime dependencies\nto align them with the Kubernetes 1.23 release, including an update of Helm to `v3.7.2`.\n\nIn addition, the controller is now built with Go 1.17 and Alpine 3.15.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1419,
                  "startColumn": 29,
                  "endLine": 1419,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\n**Release date:** 2022-01-10\n\nThis prerelease comes with an update to the Kubernetes and controller-runtime dependencies\nto align them with the Kubernetes 1.23 release, including an update of Helm to `v3.7.2`.\n\nIn addition, the controller is now built with Go 1.17 and Alpine 3.15.\n",
                    "rendered": {
                      "text": "\n**Release date:** 2022-01-10\n\nThis prerelease comes with an update to the Kubernetes and controller-runtime dependencies\nto align them with the Kubernetes 1.23 release, including an update of Helm to `v3.7.2`.\n\nIn addition, the controller is now built with Go 1.17 and Alpine 3.15.\n",
                      "markdown": "`\n**Release date:** 2022-01-10\n\nThis prerelease comes with an update to the Kubernetes and controller-runtime dependencies\nto align them with the Kubernetes 1.23 release, including an update of Helm to `v3.7.2`.\n\nIn addition, the controller is now built with Go 1.17 and Alpine 3.15.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1406,
                  "startColumn": 22,
                  "endLine": 1406,
                  "endColumn": 30,
                  "snippet": {
                    "text": "  [#396](https://github.com/fluxcd/helm-controller/pull/396)\n\nFixes:\n- Use patch instead of update when adding finalizers\n  [#395](https://github.com/fluxcd/helm-controller/pull/395)\n- Fix the missing protocol for the first port in manager config\n  [#405](https://github.com/fluxcd/helm-controller/pull/405)\n",
                    "rendered": {
                      "text": "  [#396](https://github.com/fluxcd/helm-controller/pull/396)\n\nFixes:\n- Use patch instead of update when adding finalizers\n  [#395](https://github.com/fluxcd/helm-controller/pull/395)\n- Fix the missing protocol for the first port in manager config\n  [#405](https://github.com/fluxcd/helm-controller/pull/405)\n",
                      "markdown": "`  [#396](https://github.com/fluxcd/helm-controller/pull/396)\n\nFixes:\n- Use patch instead of update when adding finalizers\n  [#395](https://github.com/fluxcd/helm-controller/pull/395)\n- Fix the missing protocol for the first port in manager config\n  [#405](https://github.com/fluxcd/helm-controller/pull/405)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1400,
                  "startColumn": 1,
                  "endLine": 1400,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#401](https://github.com/fluxcd/helm-controller/pull/401)\n- Drop capabilities, set userid and enable seccomp\n  [#385](https://github.com/fluxcd/helm-controller/pull/385)\n- Update development documentation\n  [#397](https://github.com/fluxcd/helm-controller/pull/397)\n- Refactor Fuzz implementation\n  [#396](https://github.com/fluxcd/helm-controller/pull/396)\n",
                    "rendered": {
                      "text": "  [#401](https://github.com/fluxcd/helm-controller/pull/401)\n- Drop capabilities, set userid and enable seccomp\n  [#385](https://github.com/fluxcd/helm-controller/pull/385)\n- Update development documentation\n  [#397](https://github.com/fluxcd/helm-controller/pull/397)\n- Refactor Fuzz implementation\n  [#396](https://github.com/fluxcd/helm-controller/pull/396)\n",
                      "markdown": "`  [#401](https://github.com/fluxcd/helm-controller/pull/401)\n- Drop capabilities, set userid and enable seccomp\n  [#385](https://github.com/fluxcd/helm-controller/pull/385)\n- Update development documentation\n  [#397](https://github.com/fluxcd/helm-controller/pull/397)\n- Refactor Fuzz implementation\n  [#396](https://github.com/fluxcd/helm-controller/pull/396)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1394,
                  "startColumn": 1,
                  "endLine": 1394,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#408](https://github.com/fluxcd/helm-controller/pull/408)\n\nImprovements:\n- Update Helm to patched 3.8.0\n  [#409](https://github.com/fluxcd/helm-controller/pull/409)\n- Publish SBOM and sign release artifacts\n  [#401](https://github.com/fluxcd/helm-controller/pull/401)\n",
                    "rendered": {
                      "text": "  [#408](https://github.com/fluxcd/helm-controller/pull/408)\n\nImprovements:\n- Update Helm to patched 3.8.0\n  [#409](https://github.com/fluxcd/helm-controller/pull/409)\n- Publish SBOM and sign release artifacts\n  [#401](https://github.com/fluxcd/helm-controller/pull/401)\n",
                      "markdown": "`  [#408](https://github.com/fluxcd/helm-controller/pull/408)\n\nImprovements:\n- Update Helm to patched 3.8.0\n  [#409](https://github.com/fluxcd/helm-controller/pull/409)\n- Publish SBOM and sign release artifacts\n  [#401](https://github.com/fluxcd/helm-controller/pull/401)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1335,
                  "startColumn": 1,
                  "endLine": 1335,
                  "endColumn": 9,
                  "snippet": {
                    "text": "dependencies to pull in CVE fixes.\n\nImprovements:\n- Update dependencies\n  [#420](https://github.com/fluxcd/helm-controller/pull/420)\n- Set QPS and Burst when impersonating service account\n  [#422](https://github.com/fluxcd/helm-controller/pull/422)\n",
                    "rendered": {
                      "text": "dependencies to pull in CVE fixes.\n\nImprovements:\n- Update dependencies\n  [#420](https://github.com/fluxcd/helm-controller/pull/420)\n- Set QPS and Burst when impersonating service account\n  [#422](https://github.com/fluxcd/helm-controller/pull/422)\n",
                      "markdown": "`dependencies to pull in CVE fixes.\n\nImprovements:\n- Update dependencies\n  [#420](https://github.com/fluxcd/helm-controller/pull/420)\n- Set QPS and Burst when impersonating service account\n  [#422](https://github.com/fluxcd/helm-controller/pull/422)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1323,
                  "startColumn": 1,
                  "endLine": 1323,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#434](https://github.com/fluxcd/helm-controller/pull/434)\n- add fsgroup for securityContext\n  [#435](https://github.com/fluxcd/helm-controller/pull/435)\n- Update containerd to v1.5.10 and tidy go.mod\n  [#436](https://github.com/fluxcd/helm-controller/pull/436)\n\n## 0.17.1\n",
                    "rendered": {
                      "text": "  [#434](https://github.com/fluxcd/helm-controller/pull/434)\n- add fsgroup for securityContext\n  [#435](https://github.com/fluxcd/helm-controller/pull/435)\n- Update containerd to v1.5.10 and tidy go.mod\n  [#436](https://github.com/fluxcd/helm-controller/pull/436)\n\n## 0.17.1\n",
                      "markdown": "`  [#434](https://github.com/fluxcd/helm-controller/pull/434)\n- add fsgroup for securityContext\n  [#435](https://github.com/fluxcd/helm-controller/pull/435)\n- Update containerd to v1.5.10 and tidy go.mod\n  [#436](https://github.com/fluxcd/helm-controller/pull/436)\n\n## 0.17.1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1319,
                  "startColumn": 1,
                  "endLine": 1319,
                  "endColumn": 9,
                  "snippet": {
                    "text": "as reported in https://github.com/fluxcd/flux2/issues/2537.\n\nImprovements:\n- Update Helm to v3.8.1\n  [#434](https://github.com/fluxcd/helm-controller/pull/434)\n- add fsgroup for securityContext\n  [#435](https://github.com/fluxcd/helm-controller/pull/435)\n",
                    "rendered": {
                      "text": "as reported in https://github.com/fluxcd/flux2/issues/2537.\n\nImprovements:\n- Update Helm to v3.8.1\n  [#434](https://github.com/fluxcd/helm-controller/pull/434)\n- add fsgroup for securityContext\n  [#435](https://github.com/fluxcd/helm-controller/pull/435)\n",
                      "markdown": "`as reported in https://github.com/fluxcd/flux2/issues/2537.\n\nImprovements:\n- Update Helm to v3.8.1\n  [#434](https://github.com/fluxcd/helm-controller/pull/434)\n- add fsgroup for securityContext\n  [#435](https://github.com/fluxcd/helm-controller/pull/435)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1307,
                  "startColumn": 29,
                  "endLine": 1307,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\n**Release date:** 2022-03-15\n\nThis prerelease comes with an update for `github.com/containerd/containerd` to\n`v1.5.10` to please static security analysers and fix any warnings for\nCVE-2022-23648.\n\n",
                    "rendered": {
                      "text": "\n**Release date:** 2022-03-15\n\nThis prerelease comes with an update for `github.com/containerd/containerd` to\n`v1.5.10` to please static security analysers and fix any warnings for\nCVE-2022-23648.\n\n",
                      "markdown": "`\n**Release date:** 2022-03-15\n\nThis prerelease comes with an update for `github.com/containerd/containerd` to\n`v1.5.10` to please static security analysers and fix any warnings for\nCVE-2022-23648.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1299,
                  "startColumn": 1,
                  "endLine": 1299,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#425](https://github.com/fluxcd/helm-controller/pull/425)\n- Support targeted Patches in the PostRenderer specification\n  [#432](https://github.com/fluxcd/helm-controller/pull/432)\n- Update dependencies\n  [#440](https://github.com/fluxcd/helm-controller/pull/440)\n  [#441](https://github.com/fluxcd/helm-controller/pull/441)\n\n",
                    "rendered": {
                      "text": "  [#425](https://github.com/fluxcd/helm-controller/pull/425)\n- Support targeted Patches in the PostRenderer specification\n  [#432](https://github.com/fluxcd/helm-controller/pull/432)\n- Update dependencies\n  [#440](https://github.com/fluxcd/helm-controller/pull/440)\n  [#441](https://github.com/fluxcd/helm-controller/pull/441)\n\n",
                      "markdown": "`  [#425](https://github.com/fluxcd/helm-controller/pull/425)\n- Support targeted Patches in the PostRenderer specification\n  [#432](https://github.com/fluxcd/helm-controller/pull/432)\n- Update dependencies\n  [#440](https://github.com/fluxcd/helm-controller/pull/440)\n  [#441](https://github.com/fluxcd/helm-controller/pull/441)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1293,
                  "startColumn": 1,
                  "endLine": 1293,
                  "endColumn": 9,
                  "snippet": {
                    "text": "introduces API `v1beta2` and deprecates `v1beta1`.\n\nImprovements:\n- Update `pkg/runtime` and `apis/meta`\n  [#421](https://github.com/fluxcd/helm-controller/pull/421)\n- api: Move Status in CRD printcolumn to the end\n  [#425](https://github.com/fluxcd/helm-controller/pull/425)\n",
                    "rendered": {
                      "text": "introduces API `v1beta2` and deprecates `v1beta1`.\n\nImprovements:\n- Update `pkg/runtime` and `apis/meta`\n  [#421](https://github.com/fluxcd/helm-controller/pull/421)\n- api: Move Status in CRD printcolumn to the end\n  [#425](https://github.com/fluxcd/helm-controller/pull/425)\n",
                      "markdown": "`introduces API `v1beta2` and deprecates `v1beta1`.\n\nImprovements:\n- Update `pkg/runtime` and `apis/meta`\n  [#421](https://github.com/fluxcd/helm-controller/pull/421)\n- api: Move Status in CRD printcolumn to the end\n  [#425](https://github.com/fluxcd/helm-controller/pull/425)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1270,
                  "startColumn": 1,
                  "endLine": 1270,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Improvements:\n- Implement `meta.ObjectWithConditions` interfaces\n  [#444](https://github.com/fluxcd/helm-controller/pull/444)\n- Update source-controller API to v0.22.1\n  [#445](https://github.com/fluxcd/helm-controller/pull/445)\n\nFixes:\n",
                    "rendered": {
                      "text": "Improvements:\n- Implement `meta.ObjectWithConditions` interfaces\n  [#444](https://github.com/fluxcd/helm-controller/pull/444)\n- Update source-controller API to v0.22.1\n  [#445](https://github.com/fluxcd/helm-controller/pull/445)\n\nFixes:\n",
                      "markdown": "`Improvements:\n- Implement `meta.ObjectWithConditions` interfaces\n  [#444](https://github.com/fluxcd/helm-controller/pull/444)\n- Update source-controller API to v0.22.1\n  [#445](https://github.com/fluxcd/helm-controller/pull/445)\n\nFixes:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1247,
                  "startColumn": 1,
                  "endLine": 1247,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Improvements:\n- Update Kustomize to v4.5.3\n  [#449](https://github.com/fluxcd/helm-controller/pull/449)\n- Update source-controller API to v0.22.3\n  [#450](https://github.com/fluxcd/helm-controller/pull/450)\n\n## 0.18.1\n",
                    "rendered": {
                      "text": "Improvements:\n- Update Kustomize to v4.5.3\n  [#449](https://github.com/fluxcd/helm-controller/pull/449)\n- Update source-controller API to v0.22.3\n  [#450](https://github.com/fluxcd/helm-controller/pull/450)\n\n## 0.18.1\n",
                      "markdown": "`Improvements:\n- Update Kustomize to v4.5.3\n  [#449](https://github.com/fluxcd/helm-controller/pull/449)\n- Update source-controller API to v0.22.3\n  [#450](https://github.com/fluxcd/helm-controller/pull/450)\n\n## 0.18.1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1245,
                  "startColumn": 1,
                  "endLine": 1245,
                  "endColumn": 9,
                  "snippet": {
                    "text": "their latest versions.\n\nImprovements:\n- Update Kustomize to v4.5.3\n  [#449](https://github.com/fluxcd/helm-controller/pull/449)\n- Update source-controller API to v0.22.3\n  [#450](https://github.com/fluxcd/helm-controller/pull/450)\n",
                    "rendered": {
                      "text": "their latest versions.\n\nImprovements:\n- Update Kustomize to v4.5.3\n  [#449](https://github.com/fluxcd/helm-controller/pull/449)\n- Update source-controller API to v0.22.3\n  [#450](https://github.com/fluxcd/helm-controller/pull/450)\n",
                      "markdown": "`their latest versions.\n\nImprovements:\n- Update Kustomize to v4.5.3\n  [#449](https://github.com/fluxcd/helm-controller/pull/449)\n- Update source-controller API to v0.22.3\n  [#450](https://github.com/fluxcd/helm-controller/pull/450)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1230,
                  "startColumn": 1,
                  "endLine": 1230,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Improvements:\n- Update KubeConfig documentation\n  [#457](https://github.com/fluxcd/helm-controller/pull/457)\n- Update docs links to toolkit.fluxcd.io\n  [#456](https://github.com/fluxcd/helm-controller/pull/456)\n- Add kubeconfig flags\n  [#455](https://github.com/fluxcd/helm-controller/pull/455)\n",
                    "rendered": {
                      "text": "Improvements:\n- Update KubeConfig documentation\n  [#457](https://github.com/fluxcd/helm-controller/pull/457)\n- Update docs links to toolkit.fluxcd.io\n  [#456](https://github.com/fluxcd/helm-controller/pull/456)\n- Add kubeconfig flags\n  [#455](https://github.com/fluxcd/helm-controller/pull/455)\n",
                      "markdown": "`Improvements:\n- Update KubeConfig documentation\n  [#457](https://github.com/fluxcd/helm-controller/pull/457)\n- Update docs links to toolkit.fluxcd.io\n  [#456](https://github.com/fluxcd/helm-controller/pull/456)\n- Add kubeconfig flags\n  [#455](https://github.com/fluxcd/helm-controller/pull/455)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1228,
                  "startColumn": 1,
                  "endLine": 1228,
                  "endColumn": 9,
                  "snippet": {
                    "text": "but can enabled at controller level with the flag `--insecure-kubeconfig-exec`.\n\nImprovements:\n- Update KubeConfig documentation\n  [#457](https://github.com/fluxcd/helm-controller/pull/457)\n- Update docs links to toolkit.fluxcd.io\n  [#456](https://github.com/fluxcd/helm-controller/pull/456)\n",
                    "rendered": {
                      "text": "but can enabled at controller level with the flag `--insecure-kubeconfig-exec`.\n\nImprovements:\n- Update KubeConfig documentation\n  [#457](https://github.com/fluxcd/helm-controller/pull/457)\n- Update docs links to toolkit.fluxcd.io\n  [#456](https://github.com/fluxcd/helm-controller/pull/456)\n",
                      "markdown": "`but can enabled at controller level with the flag `--insecure-kubeconfig-exec`.\n\nImprovements:\n- Update KubeConfig documentation\n  [#457](https://github.com/fluxcd/helm-controller/pull/457)\n- Update docs links to toolkit.fluxcd.io\n  [#456](https://github.com/fluxcd/helm-controller/pull/456)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1225,
                  "startColumn": 15,
                  "endLine": 1225,
                  "endColumn": 19,
                  "snippet": {
                    "text": "- Use of `TLSClientConfig.Insecure` in KubeConfig file is disabled by default,\nbut can enabled at controller level with the flag `--insecure-kubeconfig-tls`.\n- Use of `ExecProvider` in KubeConfig file is now disabled by default,\nbut can enabled at controller level with the flag `--insecure-kubeconfig-exec`.\n\nImprovements:\n- Update KubeConfig documentation\n",
                    "rendered": {
                      "text": "- Use of `TLSClientConfig.Insecure` in KubeConfig file is disabled by default,\nbut can enabled at controller level with the flag `--insecure-kubeconfig-tls`.\n- Use of `ExecProvider` in KubeConfig file is now disabled by default,\nbut can enabled at controller level with the flag `--insecure-kubeconfig-exec`.\n\nImprovements:\n- Update KubeConfig documentation\n",
                      "markdown": "`- Use of `TLSClientConfig.Insecure` in KubeConfig file is disabled by default,\nbut can enabled at controller level with the flag `--insecure-kubeconfig-tls`.\n- Use of `ExecProvider` in KubeConfig file is now disabled by default,\nbut can enabled at controller level with the flag `--insecure-kubeconfig-exec`.\n\nImprovements:\n- Update KubeConfig documentation\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1223,
                  "startColumn": 15,
                  "endLine": 1223,
                  "endColumn": 19,
                  "snippet": {
                    "text": "and `BearerTokenFile`). The drive behind the change was to discourage\ninsecure practices of mounting Kubernetes tokens inside the controller's container file system.\n- Use of `TLSClientConfig.Insecure` in KubeConfig file is disabled by default,\nbut can enabled at controller level with the flag `--insecure-kubeconfig-tls`.\n- Use of `ExecProvider` in KubeConfig file is now disabled by default,\nbut can enabled at controller level with the flag `--insecure-kubeconfig-exec`.\n\n",
                    "rendered": {
                      "text": "and `BearerTokenFile`). The drive behind the change was to discourage\ninsecure practices of mounting Kubernetes tokens inside the controller's container file system.\n- Use of `TLSClientConfig.Insecure` in KubeConfig file is disabled by default,\nbut can enabled at controller level with the flag `--insecure-kubeconfig-tls`.\n- Use of `ExecProvider` in KubeConfig file is now disabled by default,\nbut can enabled at controller level with the flag `--insecure-kubeconfig-exec`.\n\n",
                      "markdown": "`and `BearerTokenFile`). The drive behind the change was to discourage\ninsecure practices of mounting Kubernetes tokens inside the controller's container file system.\n- Use of `TLSClientConfig.Insecure` in KubeConfig file is disabled by default,\nbut can enabled at controller level with the flag `--insecure-kubeconfig-tls`.\n- Use of `ExecProvider` in KubeConfig file is now disabled by default,\nbut can enabled at controller level with the flag `--insecure-kubeconfig-exec`.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1205,
                  "startColumn": 1,
                  "endLine": 1205,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#465](https://github.com/fluxcd/helm-controller/pull/465)\n- Update Helm to v3.8.2\n  [#466](https://github.com/fluxcd/helm-controller/pull/466)\n- Update dependencies\n  [#467](https://github.com/fluxcd/helm-controller/pull/467)\n\n## 0.19.0\n",
                    "rendered": {
                      "text": "  [#465](https://github.com/fluxcd/helm-controller/pull/465)\n- Update Helm to v3.8.2\n  [#466](https://github.com/fluxcd/helm-controller/pull/466)\n- Update dependencies\n  [#467](https://github.com/fluxcd/helm-controller/pull/467)\n\n## 0.19.0\n",
                      "markdown": "`  [#465](https://github.com/fluxcd/helm-controller/pull/465)\n- Update Helm to v3.8.2\n  [#466](https://github.com/fluxcd/helm-controller/pull/466)\n- Update dependencies\n  [#467](https://github.com/fluxcd/helm-controller/pull/467)\n\n## 0.19.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1203,
                  "startColumn": 1,
                  "endLine": 1203,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Improvements:\n- Add flags for exponential back-off retry\n  [#465](https://github.com/fluxcd/helm-controller/pull/465)\n- Update Helm to v3.8.2\n  [#466](https://github.com/fluxcd/helm-controller/pull/466)\n- Update dependencies\n  [#467](https://github.com/fluxcd/helm-controller/pull/467)\n",
                    "rendered": {
                      "text": "Improvements:\n- Add flags for exponential back-off retry\n  [#465](https://github.com/fluxcd/helm-controller/pull/465)\n- Update Helm to v3.8.2\n  [#466](https://github.com/fluxcd/helm-controller/pull/466)\n- Update dependencies\n  [#467](https://github.com/fluxcd/helm-controller/pull/467)\n",
                      "markdown": "`Improvements:\n- Add flags for exponential back-off retry\n  [#465](https://github.com/fluxcd/helm-controller/pull/465)\n- Update Helm to v3.8.2\n  [#466](https://github.com/fluxcd/helm-controller/pull/466)\n- Update dependencies\n  [#467](https://github.com/fluxcd/helm-controller/pull/467)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1198,
                  "startColumn": 12,
                  "endLine": 1198,
                  "endColumn": 20,
                  "snippet": {
                    "text": "`5ms` and `1000s`.\n\nIn addition, all dependencies have been updated to their latest versions,\nincluding an update of Helm to `v3.8.2`.\n\nImprovements:\n- Add flags for exponential back-off retry\n",
                    "rendered": {
                      "text": "`5ms` and `1000s`.\n\nIn addition, all dependencies have been updated to their latest versions,\nincluding an update of Helm to `v3.8.2`.\n\nImprovements:\n- Add flags for exponential back-off retry\n",
                      "markdown": "``5ms` and `1000s`.\n\nIn addition, all dependencies have been updated to their latest versions,\nincluding an update of Helm to `v3.8.2`.\n\nImprovements:\n- Add flags for exponential back-off retry\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1185,
                  "startColumn": 59,
                  "endLine": 1185,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\n**Release date:** 2022-04-20\n\nThis prerelease equals to [`v0.20.0`](#0200), but is tagged at the right\nrevision.\n\n## 0.20.0\n",
                    "rendered": {
                      "text": "\n**Release date:** 2022-04-20\n\nThis prerelease equals to [`v0.20.0`](#0200), but is tagged at the right\nrevision.\n\n## 0.20.0\n",
                      "markdown": "`\n**Release date:** 2022-04-20\n\nThis prerelease equals to [`v0.20.0`](#0200), but is tagged at the right\nrevision.\n\n## 0.20.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1177,
                  "startColumn": 1,
                  "endLine": 1177,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#461](https://github.com/fluxcd/helm-controller/pull/461)\n  [#472](https://github.com/fluxcd/helm-controller/pull/472)\n  [#474](https://github.com/fluxcd/helm-controller/pull/474)\n- Update dependencies\n  [#470](https://github.com/fluxcd/helm-controller/pull/470)\n  [#473](https://github.com/fluxcd/helm-controller/pull/473)\n\n",
                    "rendered": {
                      "text": "  [#461](https://github.com/fluxcd/helm-controller/pull/461)\n  [#472](https://github.com/fluxcd/helm-controller/pull/472)\n  [#474](https://github.com/fluxcd/helm-controller/pull/474)\n- Update dependencies\n  [#470](https://github.com/fluxcd/helm-controller/pull/470)\n  [#473](https://github.com/fluxcd/helm-controller/pull/473)\n\n",
                      "markdown": "`  [#461](https://github.com/fluxcd/helm-controller/pull/461)\n  [#472](https://github.com/fluxcd/helm-controller/pull/472)\n  [#474](https://github.com/fluxcd/helm-controller/pull/474)\n- Update dependencies\n  [#470](https://github.com/fluxcd/helm-controller/pull/470)\n  [#473](https://github.com/fluxcd/helm-controller/pull/473)\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1160,
                  "startColumn": 1,
                  "endLine": 1160,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Improvements:\n- Update dependencies\n  [#482](https://github.com/fluxcd/helm-controller/pull/482)\n- Update source-controller to v0.25.0\n  [#490](https://github.com/fluxcd/helm-controller/pull/490)\n\n## 0.21.0\n",
                    "rendered": {
                      "text": "Improvements:\n- Update dependencies\n  [#482](https://github.com/fluxcd/helm-controller/pull/482)\n- Update source-controller to v0.25.0\n  [#490](https://github.com/fluxcd/helm-controller/pull/490)\n\n## 0.21.0\n",
                      "markdown": "`Improvements:\n- Update dependencies\n  [#482](https://github.com/fluxcd/helm-controller/pull/482)\n- Update source-controller to v0.25.0\n  [#490](https://github.com/fluxcd/helm-controller/pull/490)\n\n## 0.21.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1158,
                  "startColumn": 1,
                  "endLine": 1158,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#484](https://github.com/fluxcd/helm-controller/pull/484)\n\nImprovements:\n- Update dependencies\n  [#482](https://github.com/fluxcd/helm-controller/pull/482)\n- Update source-controller to v0.25.0\n  [#490](https://github.com/fluxcd/helm-controller/pull/490)\n",
                    "rendered": {
                      "text": "  [#484](https://github.com/fluxcd/helm-controller/pull/484)\n\nImprovements:\n- Update dependencies\n  [#482](https://github.com/fluxcd/helm-controller/pull/482)\n- Update source-controller to v0.25.0\n  [#490](https://github.com/fluxcd/helm-controller/pull/490)\n",
                      "markdown": "`  [#484](https://github.com/fluxcd/helm-controller/pull/484)\n\nImprovements:\n- Update dependencies\n  [#482](https://github.com/fluxcd/helm-controller/pull/482)\n- Update source-controller to v0.25.0\n  [#490](https://github.com/fluxcd/helm-controller/pull/490)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1135,
                  "startColumn": 1,
                  "endLine": 1135,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#494](https://github.com/fluxcd/helm-controller/pull/494)\n\nImprovements:\n- Update dependencies\n  [#493](https://github.com/fluxcd/helm-controller/pull/493)\n\n## 0.22.0\n",
                    "rendered": {
                      "text": "  [#494](https://github.com/fluxcd/helm-controller/pull/494)\n\nImprovements:\n- Update dependencies\n  [#493](https://github.com/fluxcd/helm-controller/pull/493)\n\n## 0.22.0\n",
                      "markdown": "`  [#494](https://github.com/fluxcd/helm-controller/pull/494)\n\nImprovements:\n- Update dependencies\n  [#493](https://github.com/fluxcd/helm-controller/pull/493)\n\n## 0.22.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1112,
                  "startColumn": 1,
                  "endLine": 1112,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#507](https://github.com/fluxcd/helm-controller/pull/507)\n- Update dependencies\n  [#501](https://github.com/fluxcd/helm-controller/pull/501)\n- Update gopkg.in/yaml.v3 to v3.0.1\n  [#502](https://github.com/fluxcd/helm-controller/pull/502)\n- build: Upgrade to Go 1.18\n  [#505](https://github.com/fluxcd/helm-controller/pull/505)\n",
                    "rendered": {
                      "text": "  [#507](https://github.com/fluxcd/helm-controller/pull/507)\n- Update dependencies\n  [#501](https://github.com/fluxcd/helm-controller/pull/501)\n- Update gopkg.in/yaml.v3 to v3.0.1\n  [#502](https://github.com/fluxcd/helm-controller/pull/502)\n- build: Upgrade to Go 1.18\n  [#505](https://github.com/fluxcd/helm-controller/pull/505)\n",
                      "markdown": "`  [#507](https://github.com/fluxcd/helm-controller/pull/507)\n- Update dependencies\n  [#501](https://github.com/fluxcd/helm-controller/pull/501)\n- Update gopkg.in/yaml.v3 to v3.0.1\n  [#502](https://github.com/fluxcd/helm-controller/pull/502)\n- build: Upgrade to Go 1.18\n  [#505](https://github.com/fluxcd/helm-controller/pull/505)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1110,
                  "startColumn": 1,
                  "endLine": 1110,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Improvements:\n- Fix github.com/emicklei/go-restful (CVE-2022-1996)\n  [#507](https://github.com/fluxcd/helm-controller/pull/507)\n- Update dependencies\n  [#501](https://github.com/fluxcd/helm-controller/pull/501)\n- Update gopkg.in/yaml.v3 to v3.0.1\n  [#502](https://github.com/fluxcd/helm-controller/pull/502)\n",
                    "rendered": {
                      "text": "Improvements:\n- Fix github.com/emicklei/go-restful (CVE-2022-1996)\n  [#507](https://github.com/fluxcd/helm-controller/pull/507)\n- Update dependencies\n  [#501](https://github.com/fluxcd/helm-controller/pull/501)\n- Update gopkg.in/yaml.v3 to v3.0.1\n  [#502](https://github.com/fluxcd/helm-controller/pull/502)\n",
                      "markdown": "`Improvements:\n- Fix github.com/emicklei/go-restful (CVE-2022-1996)\n  [#507](https://github.com/fluxcd/helm-controller/pull/507)\n- Update dependencies\n  [#501](https://github.com/fluxcd/helm-controller/pull/501)\n- Update gopkg.in/yaml.v3 to v3.0.1\n  [#502](https://github.com/fluxcd/helm-controller/pull/502)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1098,
                  "startColumn": 1,
                  "endLine": 1098,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#516](https://github.com/fluxcd/helm-controller/pull/516)\n- Add validation to TargetPath and ValuesKey \n  [#520](https://github.com/fluxcd/helm-controller/pull/520)\n- Update dependencies \n  [#521](https://github.com/fluxcd/helm-controller/pull/521)\n\n## 0.22.2\n",
                    "rendered": {
                      "text": "  [#516](https://github.com/fluxcd/helm-controller/pull/516)\n- Add validation to TargetPath and ValuesKey \n  [#520](https://github.com/fluxcd/helm-controller/pull/520)\n- Update dependencies \n  [#521](https://github.com/fluxcd/helm-controller/pull/521)\n\n## 0.22.2\n",
                      "markdown": "`  [#516](https://github.com/fluxcd/helm-controller/pull/516)\n- Add validation to TargetPath and ValuesKey \n  [#520](https://github.com/fluxcd/helm-controller/pull/520)\n- Update dependencies \n  [#521](https://github.com/fluxcd/helm-controller/pull/521)\n\n## 0.22.2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1078,
                  "startColumn": 1,
                  "endLine": 1078,
                  "endColumn": 9,
                  "snippet": {
                    "text": "including Kubernetes v1.25.0, Helm v3.9.4 and Kustomize v4.5.7.\n\nImprovements:\n- Update Kubernetes packages to v1.25.0\n  [#524](https://github.com/fluxcd/helm-controller/pull/524)\n\n## 0.23.0\n",
                    "rendered": {
                      "text": "including Kubernetes v1.25.0, Helm v3.9.4 and Kustomize v4.5.7.\n\nImprovements:\n- Update Kubernetes packages to v1.25.0\n  [#524](https://github.com/fluxcd/helm-controller/pull/524)\n\n## 0.23.0\n",
                      "markdown": "`including Kubernetes v1.25.0, Helm v3.9.4 and Kustomize v4.5.7.\n\nImprovements:\n- Update Kubernetes packages to v1.25.0\n  [#524](https://github.com/fluxcd/helm-controller/pull/524)\n\n## 0.23.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1049,
                  "startColumn": 1,
                  "endLine": 1049,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#533](https://github.com/fluxcd/helm-controller/pull/533)\n- Build with Go 1.19\n  [#537](https://github.com/fluxcd/helm-controller/pull/537)\n- Update dependencies\n  [#538](https://github.com/fluxcd/helm-controller/pull/538)\n\n## 0.24.0\n",
                    "rendered": {
                      "text": "  [#533](https://github.com/fluxcd/helm-controller/pull/533)\n- Build with Go 1.19\n  [#537](https://github.com/fluxcd/helm-controller/pull/537)\n- Update dependencies\n  [#538](https://github.com/fluxcd/helm-controller/pull/538)\n\n## 0.24.0\n",
                      "markdown": "`  [#533](https://github.com/fluxcd/helm-controller/pull/533)\n- Build with Go 1.19\n  [#537](https://github.com/fluxcd/helm-controller/pull/537)\n- Update dependencies\n  [#538](https://github.com/fluxcd/helm-controller/pull/538)\n\n## 0.24.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1024,
                  "startColumn": 1,
                  "endLine": 1024,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#545](https://github.com/fluxcd/helm-controller/pull/545)\n- API: allow configuration of h unit for timeouts\n  [#549](https://github.com/fluxcd/helm-controller/pull/549)\n- Update dependencies\n  [#550](https://github.com/fluxcd/helm-controller/pull/550)\n\n## 0.25.0\n",
                    "rendered": {
                      "text": "  [#545](https://github.com/fluxcd/helm-controller/pull/545)\n- API: allow configuration of h unit for timeouts\n  [#549](https://github.com/fluxcd/helm-controller/pull/549)\n- Update dependencies\n  [#550](https://github.com/fluxcd/helm-controller/pull/550)\n\n## 0.25.0\n",
                      "markdown": "`  [#545](https://github.com/fluxcd/helm-controller/pull/545)\n- API: allow configuration of h unit for timeouts\n  [#549](https://github.com/fluxcd/helm-controller/pull/549)\n- Update dependencies\n  [#550](https://github.com/fluxcd/helm-controller/pull/550)\n\n## 0.25.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1001,
                  "startColumn": 1,
                  "endLine": 1001,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#559](https://github.com/fluxcd/helm-controller/pull/559)\n- Use Flux Event API v1beta1\n  [#557](https://github.com/fluxcd/helm-controller/pull/557)\n- Update dependencies\n  [#561](https://github.com/fluxcd/helm-controller/pull/561)\n\n\n",
                    "rendered": {
                      "text": "  [#559](https://github.com/fluxcd/helm-controller/pull/559)\n- Use Flux Event API v1beta1\n  [#557](https://github.com/fluxcd/helm-controller/pull/557)\n- Update dependencies\n  [#561](https://github.com/fluxcd/helm-controller/pull/561)\n\n\n",
                      "markdown": "`  [#559](https://github.com/fluxcd/helm-controller/pull/559)\n- Use Flux Event API v1beta1\n  [#557](https://github.com/fluxcd/helm-controller/pull/557)\n- Update dependencies\n  [#561](https://github.com/fluxcd/helm-controller/pull/561)\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 985,
                  "startColumn": 1,
                  "endLine": 985,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#582](https://github.com/fluxcd/helm-controller/pull/582)\n- helm: Update SDK to v3.10.3\n  [#577](https://github.com/fluxcd/helm-controller/pull/577)\n- Update source-controller and dependencies\n  [#581](https://github.com/fluxcd/helm-controller/pull/581)\n\n## 0.27.0\n",
                    "rendered": {
                      "text": "  [#582](https://github.com/fluxcd/helm-controller/pull/582)\n- helm: Update SDK to v3.10.3\n  [#577](https://github.com/fluxcd/helm-controller/pull/577)\n- Update source-controller and dependencies\n  [#581](https://github.com/fluxcd/helm-controller/pull/581)\n\n## 0.27.0\n",
                      "markdown": "`  [#582](https://github.com/fluxcd/helm-controller/pull/582)\n- helm: Update SDK to v3.10.3\n  [#577](https://github.com/fluxcd/helm-controller/pull/577)\n- Update source-controller and dependencies\n  [#581](https://github.com/fluxcd/helm-controller/pull/581)\n\n## 0.27.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 983,
                  "startColumn": 7,
                  "endLine": 983,
                  "endColumn": 15,
                  "snippet": {
                    "text": "- Allow overriding ctrl manager graceful shutdown timeout\n  [#570](https://github.com/fluxcd/helm-controller/pull/570)\n  [#582](https://github.com/fluxcd/helm-controller/pull/582)\n- helm: Update SDK to v3.10.3\n  [#577](https://github.com/fluxcd/helm-controller/pull/577)\n- Update source-controller and dependencies\n  [#581](https://github.com/fluxcd/helm-controller/pull/581)\n",
                    "rendered": {
                      "text": "- Allow overriding ctrl manager graceful shutdown timeout\n  [#570](https://github.com/fluxcd/helm-controller/pull/570)\n  [#582](https://github.com/fluxcd/helm-controller/pull/582)\n- helm: Update SDK to v3.10.3\n  [#577](https://github.com/fluxcd/helm-controller/pull/577)\n- Update source-controller and dependencies\n  [#581](https://github.com/fluxcd/helm-controller/pull/581)\n",
                      "markdown": "`- Allow overriding ctrl manager graceful shutdown timeout\n  [#570](https://github.com/fluxcd/helm-controller/pull/570)\n  [#582](https://github.com/fluxcd/helm-controller/pull/582)\n- helm: Update SDK to v3.10.3\n  [#577](https://github.com/fluxcd/helm-controller/pull/577)\n- Update source-controller and dependencies\n  [#581](https://github.com/fluxcd/helm-controller/pull/581)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 960,
                  "startColumn": 71,
                  "endLine": 961,
                  "endColumn": 8,
                  "snippet": {
                    "text": "improve memory usage. To opt-out from this behaviour, start the controller\nwith: `--feature-gates=CacheSecretsAndConfigMaps=true`.\n\nIn addition, a new flag `--graceful-shutdown-timeout` has been added to\ncontrol the duration of the graceful shutdown period. The default value is\n`-1` (disabled), to help prevent releases from being stuck due to the\ncontroller being terminated before the Helm action has completed.\n\n",
                    "rendered": {
                      "text": "improve memory usage. To opt-out from this behaviour, start the controller\nwith: `--feature-gates=CacheSecretsAndConfigMaps=true`.\n\nIn addition, a new flag `--graceful-shutdown-timeout` has been added to\ncontrol the duration of the graceful shutdown period. The default value is\n`-1` (disabled), to help prevent releases from being stuck due to the\ncontroller being terminated before the Helm action has completed.\n\n",
                      "markdown": "`improve memory usage. To opt-out from this behaviour, start the controller\nwith: `--feature-gates=CacheSecretsAndConfigMaps=true`.\n\nIn addition, a new flag `--graceful-shutdown-timeout` has been added to\ncontrol the duration of the graceful shutdown period. The default value is\n`-1` (disabled), to help prevent releases from being stuck due to the\ncontroller being terminated before the Helm action has completed.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 936,
                  "startColumn": 1,
                  "endLine": 936,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#595](https://github.com/fluxcd/helm-controller/pull/595)\n- Patch CRDs with origin labels\n  [#596](https://github.com/fluxcd/helm-controller/pull/596)\n- Update source-controller to v0.34.0\n  [#597](https://github.com/fluxcd/helm-controller/pull/597)\n\n## 0.28.1\n",
                    "rendered": {
                      "text": "  [#595](https://github.com/fluxcd/helm-controller/pull/595)\n- Patch CRDs with origin labels\n  [#596](https://github.com/fluxcd/helm-controller/pull/596)\n- Update source-controller to v0.34.0\n  [#597](https://github.com/fluxcd/helm-controller/pull/597)\n\n## 0.28.1\n",
                      "markdown": "`  [#595](https://github.com/fluxcd/helm-controller/pull/595)\n- Patch CRDs with origin labels\n  [#596](https://github.com/fluxcd/helm-controller/pull/596)\n- Update source-controller to v0.34.0\n  [#597](https://github.com/fluxcd/helm-controller/pull/597)\n\n## 0.28.1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 932,
                  "startColumn": 1,
                  "endLine": 932,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Improvements:\n- build: Enable SBOM and SLSA Provenance\n  [#594](https://github.com/fluxcd/helm-controller/pull/594)\n- Update dependencies\n  [#595](https://github.com/fluxcd/helm-controller/pull/595)\n- Patch CRDs with origin labels\n  [#596](https://github.com/fluxcd/helm-controller/pull/596)\n",
                    "rendered": {
                      "text": "Improvements:\n- build: Enable SBOM and SLSA Provenance\n  [#594](https://github.com/fluxcd/helm-controller/pull/594)\n- Update dependencies\n  [#595](https://github.com/fluxcd/helm-controller/pull/595)\n- Patch CRDs with origin labels\n  [#596](https://github.com/fluxcd/helm-controller/pull/596)\n",
                      "markdown": "`Improvements:\n- build: Enable SBOM and SLSA Provenance\n  [#594](https://github.com/fluxcd/helm-controller/pull/594)\n- Update dependencies\n  [#595](https://github.com/fluxcd/helm-controller/pull/595)\n- Patch CRDs with origin labels\n  [#596](https://github.com/fluxcd/helm-controller/pull/596)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 919,
                  "startColumn": 25,
                  "endLine": 919,
                  "endColumn": 33,
                  "snippet": {
                    "text": "**Release date:** 2023-02-01\n\nThis prerelease comes with an update of Kubernetes dependencies to v1.26, Helm\nto v3.11.0, and a general update of other dependencies to their latest versions.\n\nStarting with this release, Custom Resource Definitions installed by the\ncontroller as part of a [`Create` or `CreateReplace`\n",
                    "rendered": {
                      "text": "**Release date:** 2023-02-01\n\nThis prerelease comes with an update of Kubernetes dependencies to v1.26, Helm\nto v3.11.0, and a general update of other dependencies to their latest versions.\n\nStarting with this release, Custom Resource Definitions installed by the\ncontroller as part of a [`Create` or `CreateReplace`\n",
                      "markdown": "`**Release date:** 2023-02-01\n\nThis prerelease comes with an update of Kubernetes dependencies to v1.26, Helm\nto v3.11.0, and a general update of other dependencies to their latest versions.\n\nStarting with this release, Custom Resource Definitions installed by the\ncontroller as part of a [`Create` or `CreateReplace`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 918,
                  "startColumn": 29,
                  "endLine": 918,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\n**Release date:** 2023-02-01\n\nThis prerelease comes with an update of Kubernetes dependencies to v1.26, Helm\nto v3.11.0, and a general update of other dependencies to their latest versions.\n\nStarting with this release, Custom Resource Definitions installed by the\n",
                    "rendered": {
                      "text": "\n**Release date:** 2023-02-01\n\nThis prerelease comes with an update of Kubernetes dependencies to v1.26, Helm\nto v3.11.0, and a general update of other dependencies to their latest versions.\n\nStarting with this release, Custom Resource Definitions installed by the\n",
                      "markdown": "`\n**Release date:** 2023-02-01\n\nThis prerelease comes with an update of Kubernetes dependencies to v1.26, Helm\nto v3.11.0, and a general update of other dependencies to their latest versions.\n\nStarting with this release, Custom Resource Definitions installed by the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 911,
                  "startColumn": 1,
                  "endLine": 911,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#606](https://github.com/fluxcd/helm-controller/pull/606)\n- Update dependencies\n  [#610](https://github.com/fluxcd/helm-controller/pull/610)\n- Update source-controller to v0.35.1\n  [#612](https://github.com/fluxcd/helm-controller/pull/612)\n\n## 0.29.0\n",
                    "rendered": {
                      "text": "  [#606](https://github.com/fluxcd/helm-controller/pull/606)\n- Update dependencies\n  [#610](https://github.com/fluxcd/helm-controller/pull/610)\n- Update source-controller to v0.35.1\n  [#612](https://github.com/fluxcd/helm-controller/pull/612)\n\n## 0.29.0\n",
                      "markdown": "`  [#606](https://github.com/fluxcd/helm-controller/pull/606)\n- Update dependencies\n  [#610](https://github.com/fluxcd/helm-controller/pull/610)\n- Update source-controller to v0.35.1\n  [#612](https://github.com/fluxcd/helm-controller/pull/612)\n\n## 0.29.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 909,
                  "startColumn": 1,
                  "endLine": 909,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Improvements:\n- Support RFC-0005 revision format\n  [#606](https://github.com/fluxcd/helm-controller/pull/606)\n- Update dependencies\n  [#610](https://github.com/fluxcd/helm-controller/pull/610)\n- Update source-controller to v0.35.1\n  [#612](https://github.com/fluxcd/helm-controller/pull/612)\n",
                    "rendered": {
                      "text": "Improvements:\n- Support RFC-0005 revision format\n  [#606](https://github.com/fluxcd/helm-controller/pull/606)\n- Update dependencies\n  [#610](https://github.com/fluxcd/helm-controller/pull/610)\n- Update source-controller to v0.35.1\n  [#612](https://github.com/fluxcd/helm-controller/pull/612)\n",
                      "markdown": "`Improvements:\n- Support RFC-0005 revision format\n  [#606](https://github.com/fluxcd/helm-controller/pull/606)\n- Update dependencies\n  [#610](https://github.com/fluxcd/helm-controller/pull/610)\n- Update source-controller to v0.35.1\n  [#612](https://github.com/fluxcd/helm-controller/pull/612)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 884,
                  "startColumn": 1,
                  "endLine": 884,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#623](https://github.com/fluxcd/helm-controller/pull/623)\n- runner: configure Helm action cfg log levels\n  [#625](https://github.com/fluxcd/helm-controller/pull/625)\n- Update dependencies\n  [#626](https://github.com/fluxcd/helm-controller/pull/626)\n  [#627](https://github.com/fluxcd/helm-controller/pull/627)\n  [#635](https://github.com/fluxcd/helm-controller/pull/635)\n",
                    "rendered": {
                      "text": "  [#623](https://github.com/fluxcd/helm-controller/pull/623)\n- runner: configure Helm action cfg log levels\n  [#625](https://github.com/fluxcd/helm-controller/pull/625)\n- Update dependencies\n  [#626](https://github.com/fluxcd/helm-controller/pull/626)\n  [#627](https://github.com/fluxcd/helm-controller/pull/627)\n  [#635](https://github.com/fluxcd/helm-controller/pull/635)\n",
                      "markdown": "`  [#623](https://github.com/fluxcd/helm-controller/pull/623)\n- runner: configure Helm action cfg log levels\n  [#625](https://github.com/fluxcd/helm-controller/pull/625)\n- Update dependencies\n  [#626](https://github.com/fluxcd/helm-controller/pull/626)\n  [#627](https://github.com/fluxcd/helm-controller/pull/627)\n  [#635](https://github.com/fluxcd/helm-controller/pull/635)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 850,
                  "startColumn": 24,
                  "endLine": 850,
                  "endColumn": 28,
                  "snippet": {
                    "text": "on the `HelmRelease` resources, to ensure that the controller can recover from\nthe failed release.\n\nTo control the threshold at which the controller will attempt to shut down, use\nthe `--oom-watch-memory-threshold` (default `95`) and `--oom-watch-interval`\n(default `500ms`) flags.\n\n",
                    "rendered": {
                      "text": "on the `HelmRelease` resources, to ensure that the controller can recover from\nthe failed release.\n\nTo control the threshold at which the controller will attempt to shut down, use\nthe `--oom-watch-memory-threshold` (default `95`) and `--oom-watch-interval`\n(default `500ms`) flags.\n\n",
                      "markdown": "`on the `HelmRelease` resources, to ensure that the controller can recover from\nthe failed release.\n\nTo control the threshold at which the controller will attempt to shut down, use\nthe `--oom-watch-memory-threshold` (default `95`) and `--oom-watch-interval`\n(default `500ms`) flags.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 850,
                  "startColumn": 2,
                  "endLine": 850,
                  "endColumn": 11,
                  "snippet": {
                    "text": "on the `HelmRelease` resources, to ensure that the controller can recover from\nthe failed release.\n\nTo control the threshold at which the controller will attempt to shut down, use\nthe `--oom-watch-memory-threshold` (default `95`) and `--oom-watch-interval`\n(default `500ms`) flags.\n\n",
                    "rendered": {
                      "text": "on the `HelmRelease` resources, to ensure that the controller can recover from\nthe failed release.\n\nTo control the threshold at which the controller will attempt to shut down, use\nthe `--oom-watch-memory-threshold` (default `95`) and `--oom-watch-interval`\n(default `500ms`) flags.\n\n",
                      "markdown": "`on the `HelmRelease` resources, to ensure that the controller can recover from\nthe failed release.\n\nTo control the threshold at which the controller will attempt to shut down, use\nthe `--oom-watch-memory-threshold` (default `95`) and `--oom-watch-interval`\n(default `500ms`) flags.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 783,
                  "startColumn": 1,
                  "endLine": 783,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#647](https://github.com/fluxcd/helm-controller/pull/647)\n\nImprovements:\n- Update dependencies\n  [#649](https://github.com/fluxcd/helm-controller/pull/649)\n\n## 0.31.1\n",
                    "rendered": {
                      "text": "  [#647](https://github.com/fluxcd/helm-controller/pull/647)\n\nImprovements:\n- Update dependencies\n  [#649](https://github.com/fluxcd/helm-controller/pull/649)\n\n## 0.31.1\n",
                      "markdown": "`  [#647](https://github.com/fluxcd/helm-controller/pull/647)\n\nImprovements:\n- Update dependencies\n  [#649](https://github.com/fluxcd/helm-controller/pull/649)\n\n## 0.31.1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 759,
                  "startColumn": 1,
                  "endLine": 759,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#662](https://github.com/fluxcd/helm-controller/pull/662)\n\nFixes:\n- Update status patch logic\n  [#660](https://github.com/fluxcd/helm-controller/pull/660)\n\n## 0.31.2\n",
                    "rendered": {
                      "text": "  [#662](https://github.com/fluxcd/helm-controller/pull/662)\n\nFixes:\n- Update status patch logic\n  [#660](https://github.com/fluxcd/helm-controller/pull/660)\n\n## 0.31.2\n",
                      "markdown": "`  [#662](https://github.com/fluxcd/helm-controller/pull/662)\n\nFixes:\n- Update status patch logic\n  [#660](https://github.com/fluxcd/helm-controller/pull/660)\n\n## 0.31.2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 755,
                  "startColumn": 11,
                  "endLine": 755,
                  "endColumn": 19,
                  "snippet": {
                    "text": "  [#659](https://github.com/fluxcd/helm-controller/pull/659)\n- Update source-controller to v1.0.0-rc.1\n  [#661](https://github.com/fluxcd/helm-controller/pull/661)\n- config/*: update API versions and file names\n  [#662](https://github.com/fluxcd/helm-controller/pull/662)\n\nFixes:\n",
                    "rendered": {
                      "text": "  [#659](https://github.com/fluxcd/helm-controller/pull/659)\n- Update source-controller to v1.0.0-rc.1\n  [#661](https://github.com/fluxcd/helm-controller/pull/661)\n- config/*: update API versions and file names\n  [#662](https://github.com/fluxcd/helm-controller/pull/662)\n\nFixes:\n",
                      "markdown": "`  [#659](https://github.com/fluxcd/helm-controller/pull/659)\n- Update source-controller to v1.0.0-rc.1\n  [#661](https://github.com/fluxcd/helm-controller/pull/661)\n- config/*: update API versions and file names\n  [#662](https://github.com/fluxcd/helm-controller/pull/662)\n\nFixes:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 753,
                  "startColumn": 1,
                  "endLine": 753,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#658](https://github.com/fluxcd/helm-controller/pull/658)\n- Add `PersistentClient` flag to allow control over Kubernetes client behavior\n  [#659](https://github.com/fluxcd/helm-controller/pull/659)\n- Update source-controller to v1.0.0-rc.1\n  [#661](https://github.com/fluxcd/helm-controller/pull/661)\n- config/*: update API versions and file names\n  [#662](https://github.com/fluxcd/helm-controller/pull/662)\n",
                    "rendered": {
                      "text": "  [#658](https://github.com/fluxcd/helm-controller/pull/658)\n- Add `PersistentClient` flag to allow control over Kubernetes client behavior\n  [#659](https://github.com/fluxcd/helm-controller/pull/659)\n- Update source-controller to v1.0.0-rc.1\n  [#661](https://github.com/fluxcd/helm-controller/pull/661)\n- config/*: update API versions and file names\n  [#662](https://github.com/fluxcd/helm-controller/pull/662)\n",
                      "markdown": "`  [#658](https://github.com/fluxcd/helm-controller/pull/658)\n- Add `PersistentClient` flag to allow control over Kubernetes client behavior\n  [#659](https://github.com/fluxcd/helm-controller/pull/659)\n- Update source-controller to v1.0.0-rc.1\n  [#661](https://github.com/fluxcd/helm-controller/pull/661)\n- config/*: update API versions and file names\n  [#662](https://github.com/fluxcd/helm-controller/pull/662)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 751,
                  "startColumn": 38,
                  "endLine": 751,
                  "endColumn": 47,
                  "snippet": {
                    "text": "  [#654](https://github.com/fluxcd/helm-controller/pull/654)\n- Add reconciler sharding capability based on label selector\n  [#658](https://github.com/fluxcd/helm-controller/pull/658)\n- Add `PersistentClient` flag to allow control over Kubernetes client behavior\n  [#659](https://github.com/fluxcd/helm-controller/pull/659)\n- Update source-controller to v1.0.0-rc.1\n  [#661](https://github.com/fluxcd/helm-controller/pull/661)\n",
                    "rendered": {
                      "text": "  [#654](https://github.com/fluxcd/helm-controller/pull/654)\n- Add reconciler sharding capability based on label selector\n  [#658](https://github.com/fluxcd/helm-controller/pull/658)\n- Add `PersistentClient` flag to allow control over Kubernetes client behavior\n  [#659](https://github.com/fluxcd/helm-controller/pull/659)\n- Update source-controller to v1.0.0-rc.1\n  [#661](https://github.com/fluxcd/helm-controller/pull/661)\n",
                      "markdown": "`  [#654](https://github.com/fluxcd/helm-controller/pull/654)\n- Add reconciler sharding capability based on label selector\n  [#658](https://github.com/fluxcd/helm-controller/pull/658)\n- Add `PersistentClient` flag to allow control over Kubernetes client behavior\n  [#659](https://github.com/fluxcd/helm-controller/pull/659)\n- Update source-controller to v1.0.0-rc.1\n  [#661](https://github.com/fluxcd/helm-controller/pull/661)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 747,
                  "startColumn": 1,
                  "endLine": 747,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#651](https://github.com/fluxcd/helm-controller/pull/651)\n- Move `controllers` to `internal/controllers`\n  [#653](https://github.com/fluxcd/helm-controller/pull/653)\n- Update dependencies\n  [#654](https://github.com/fluxcd/helm-controller/pull/654)\n- Add reconciler sharding capability based on label selector\n  [#658](https://github.com/fluxcd/helm-controller/pull/658)\n",
                    "rendered": {
                      "text": "  [#651](https://github.com/fluxcd/helm-controller/pull/651)\n- Move `controllers` to `internal/controllers`\n  [#653](https://github.com/fluxcd/helm-controller/pull/653)\n- Update dependencies\n  [#654](https://github.com/fluxcd/helm-controller/pull/654)\n- Add reconciler sharding capability based on label selector\n  [#658](https://github.com/fluxcd/helm-controller/pull/658)\n",
                      "markdown": "`  [#651](https://github.com/fluxcd/helm-controller/pull/651)\n- Move `controllers` to `internal/controllers`\n  [#653](https://github.com/fluxcd/helm-controller/pull/653)\n- Update dependencies\n  [#654](https://github.com/fluxcd/helm-controller/pull/654)\n- Add reconciler sharding capability based on label selector\n  [#658](https://github.com/fluxcd/helm-controller/pull/658)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 669,
                  "startColumn": 1,
                  "endLine": 669,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Fixes:\n- Fix nil pointer deref during diff attempt\n  [#672](https://github.com/fluxcd/helm-controller/pull/672)\n- Update Helm to v3.11.3\n  [#673](https://github.com/fluxcd/helm-controller/pull/673)\n\n## 0.32.1\n",
                    "rendered": {
                      "text": "Fixes:\n- Fix nil pointer deref during diff attempt\n  [#672](https://github.com/fluxcd/helm-controller/pull/672)\n- Update Helm to v3.11.3\n  [#673](https://github.com/fluxcd/helm-controller/pull/673)\n\n## 0.32.1\n",
                      "markdown": "`Fixes:\n- Fix nil pointer deref during diff attempt\n  [#672](https://github.com/fluxcd/helm-controller/pull/672)\n- Update Helm to v3.11.3\n  [#673](https://github.com/fluxcd/helm-controller/pull/673)\n\n## 0.32.1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 653,
                  "startColumn": 1,
                  "endLine": 653,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#685](https://github.com/fluxcd/helm-controller/pull/685)\n- build(deps): bump github.com/docker/distribution from 2.8.1+incompatible to 2.8.2+incompatible\n  [#686](https://github.com/fluxcd/helm-controller/pull/686)\n- Update dependencies\n  [#687](https://github.com/fluxcd/helm-controller/pull/687)\n\n## 0.32.2\n",
                    "rendered": {
                      "text": "  [#685](https://github.com/fluxcd/helm-controller/pull/685)\n- build(deps): bump github.com/docker/distribution from 2.8.1+incompatible to 2.8.2+incompatible\n  [#686](https://github.com/fluxcd/helm-controller/pull/686)\n- Update dependencies\n  [#687](https://github.com/fluxcd/helm-controller/pull/687)\n\n## 0.32.2\n",
                      "markdown": "`  [#685](https://github.com/fluxcd/helm-controller/pull/685)\n- build(deps): bump github.com/docker/distribution from 2.8.1+incompatible to 2.8.2+incompatible\n  [#686](https://github.com/fluxcd/helm-controller/pull/686)\n- Update dependencies\n  [#687](https://github.com/fluxcd/helm-controller/pull/687)\n\n## 0.32.2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 649,
                  "startColumn": 1,
                  "endLine": 649,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Improvements:\n- Stable sort release values by key\n  [#684](https://github.com/fluxcd/helm-controller/pull/684)\n- Update Alpine to 3.18\n  [#685](https://github.com/fluxcd/helm-controller/pull/685)\n- build(deps): bump github.com/docker/distribution from 2.8.1+incompatible to 2.8.2+incompatible\n  [#686](https://github.com/fluxcd/helm-controller/pull/686)\n",
                    "rendered": {
                      "text": "Improvements:\n- Stable sort release values by key\n  [#684](https://github.com/fluxcd/helm-controller/pull/684)\n- Update Alpine to 3.18\n  [#685](https://github.com/fluxcd/helm-controller/pull/685)\n- build(deps): bump github.com/docker/distribution from 2.8.1+incompatible to 2.8.2+incompatible\n  [#686](https://github.com/fluxcd/helm-controller/pull/686)\n",
                      "markdown": "`Improvements:\n- Stable sort release values by key\n  [#684](https://github.com/fluxcd/helm-controller/pull/684)\n- Update Alpine to 3.18\n  [#685](https://github.com/fluxcd/helm-controller/pull/685)\n- build(deps): bump github.com/docker/distribution from 2.8.1+incompatible to 2.8.2+incompatible\n  [#686](https://github.com/fluxcd/helm-controller/pull/686)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 629,
                  "startColumn": 1,
                  "endLine": 629,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#691](https://github.com/fluxcd/helm-controller/pull/691)\n- Use last attempted values checksum as event metadata token\n  [#692](https://github.com/fluxcd/helm-controller/pull/692)\n- Update source-controller to v1.0.0-rc.4\n  [#693](https://github.com/fluxcd/helm-controller/pull/693)\n\n## 0.33.0\n",
                    "rendered": {
                      "text": "  [#691](https://github.com/fluxcd/helm-controller/pull/691)\n- Use last attempted values checksum as event metadata token\n  [#692](https://github.com/fluxcd/helm-controller/pull/692)\n- Update source-controller to v1.0.0-rc.4\n  [#693](https://github.com/fluxcd/helm-controller/pull/693)\n\n## 0.33.0\n",
                      "markdown": "`  [#691](https://github.com/fluxcd/helm-controller/pull/691)\n- Use last attempted values checksum as event metadata token\n  [#692](https://github.com/fluxcd/helm-controller/pull/692)\n- Update source-controller to v1.0.0-rc.4\n  [#693](https://github.com/fluxcd/helm-controller/pull/693)\n\n## 0.33.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 623,
                  "startColumn": 1,
                  "endLine": 623,
                  "endColumn": 9,
                  "snippet": {
                    "text": "prevent incorrect rate limiting.\n\nImprovements:\n- Update Kubernetes, controller-runtime and Helm\n  [#690](https://github.com/fluxcd/helm-controller/pull/690)\n- Remove the tini supervisor, and other nits\n  [#691](https://github.com/fluxcd/helm-controller/pull/691)\n",
                    "rendered": {
                      "text": "prevent incorrect rate limiting.\n\nImprovements:\n- Update Kubernetes, controller-runtime and Helm\n  [#690](https://github.com/fluxcd/helm-controller/pull/690)\n- Remove the tini supervisor, and other nits\n  [#691](https://github.com/fluxcd/helm-controller/pull/691)\n",
                      "markdown": "`prevent incorrect rate limiting.\n\nImprovements:\n- Update Kubernetes, controller-runtime and Helm\n  [#690](https://github.com/fluxcd/helm-controller/pull/690)\n- Remove the tini supervisor, and other nits\n  [#691](https://github.com/fluxcd/helm-controller/pull/691)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 602,
                  "startColumn": 1,
                  "endLine": 602,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#695](https://github.com/fluxcd/helm-controller/pull/695)\n\nImprovements:\n- Update source-controller to v1.0.0-rc.5\n  [#696](https://github.com/fluxcd/helm-controller/pull/696)\n\n## 0.34.0\n",
                    "rendered": {
                      "text": "  [#695](https://github.com/fluxcd/helm-controller/pull/695)\n\nImprovements:\n- Update source-controller to v1.0.0-rc.5\n  [#696](https://github.com/fluxcd/helm-controller/pull/696)\n\n## 0.34.0\n",
                      "markdown": "`  [#695](https://github.com/fluxcd/helm-controller/pull/695)\n\nImprovements:\n- Update source-controller to v1.0.0-rc.5\n  [#696](https://github.com/fluxcd/helm-controller/pull/696)\n\n## 0.34.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 566,
                  "startColumn": 1,
                  "endLine": 566,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#715](https://github.com/fluxcd/helm-controller/pull/715)\n- Update Go dependencies\n  [#726](https://github.com/fluxcd/helm-controller/pull/726)\n- Update source-controller to v1.0.0\n  [#729](https://github.com/fluxcd/helm-controller/pull/729)\n\n## 0.34.2\n",
                    "rendered": {
                      "text": "  [#715](https://github.com/fluxcd/helm-controller/pull/715)\n- Update Go dependencies\n  [#726](https://github.com/fluxcd/helm-controller/pull/726)\n- Update source-controller to v1.0.0\n  [#729](https://github.com/fluxcd/helm-controller/pull/729)\n\n## 0.34.2\n",
                      "markdown": "`  [#715](https://github.com/fluxcd/helm-controller/pull/715)\n- Update Go dependencies\n  [#726](https://github.com/fluxcd/helm-controller/pull/726)\n- Update source-controller to v1.0.0\n  [#729](https://github.com/fluxcd/helm-controller/pull/729)\n\n## 0.34.2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 564,
                  "startColumn": 1,
                  "endLine": 564,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#698](https://github.com/fluxcd/helm-controller/pull/698)\n- Align `go.mod` version with Kubernetes (Go 1.20)\n  [#715](https://github.com/fluxcd/helm-controller/pull/715)\n- Update Go dependencies\n  [#726](https://github.com/fluxcd/helm-controller/pull/726)\n- Update source-controller to v1.0.0\n  [#729](https://github.com/fluxcd/helm-controller/pull/729)\n",
                    "rendered": {
                      "text": "  [#698](https://github.com/fluxcd/helm-controller/pull/698)\n- Align `go.mod` version with Kubernetes (Go 1.20)\n  [#715](https://github.com/fluxcd/helm-controller/pull/715)\n- Update Go dependencies\n  [#726](https://github.com/fluxcd/helm-controller/pull/726)\n- Update source-controller to v1.0.0\n  [#729](https://github.com/fluxcd/helm-controller/pull/729)\n",
                      "markdown": "`  [#698](https://github.com/fluxcd/helm-controller/pull/698)\n- Align `go.mod` version with Kubernetes (Go 1.20)\n  [#715](https://github.com/fluxcd/helm-controller/pull/715)\n- Update Go dependencies\n  [#726](https://github.com/fluxcd/helm-controller/pull/726)\n- Update source-controller to v1.0.0\n  [#729](https://github.com/fluxcd/helm-controller/pull/729)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 536,
                  "startColumn": 1,
                  "endLine": 536,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#753](https://github.com/fluxcd/helm-controller/pull/753)\n- Update Helm to v3.12.3\n  [#754](https://github.com/fluxcd/helm-controller/pull/754)\n- Update Source API to v1.1.0\n  [#758](https://github.com/fluxcd/helm-controller/pull/758)\n\nFixes:\n",
                    "rendered": {
                      "text": "  [#753](https://github.com/fluxcd/helm-controller/pull/753)\n- Update Helm to v3.12.3\n  [#754](https://github.com/fluxcd/helm-controller/pull/754)\n- Update Source API to v1.1.0\n  [#758](https://github.com/fluxcd/helm-controller/pull/758)\n\nFixes:\n",
                      "markdown": "`  [#753](https://github.com/fluxcd/helm-controller/pull/753)\n- Update Helm to v3.12.3\n  [#754](https://github.com/fluxcd/helm-controller/pull/754)\n- Update Source API to v1.1.0\n  [#758](https://github.com/fluxcd/helm-controller/pull/758)\n\nFixes:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 534,
                  "startColumn": 1,
                  "endLine": 534,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#751](https://github.com/fluxcd/helm-controller/pull/751)\n- Delete stale metrics on delete\n  [#753](https://github.com/fluxcd/helm-controller/pull/753)\n- Update Helm to v3.12.3\n  [#754](https://github.com/fluxcd/helm-controller/pull/754)\n- Update Source API to v1.1.0\n  [#758](https://github.com/fluxcd/helm-controller/pull/758)\n",
                    "rendered": {
                      "text": "  [#751](https://github.com/fluxcd/helm-controller/pull/751)\n- Delete stale metrics on delete\n  [#753](https://github.com/fluxcd/helm-controller/pull/753)\n- Update Helm to v3.12.3\n  [#754](https://github.com/fluxcd/helm-controller/pull/754)\n- Update Source API to v1.1.0\n  [#758](https://github.com/fluxcd/helm-controller/pull/758)\n",
                      "markdown": "`  [#751](https://github.com/fluxcd/helm-controller/pull/751)\n- Delete stale metrics on delete\n  [#753](https://github.com/fluxcd/helm-controller/pull/753)\n- Update Helm to v3.12.3\n  [#754](https://github.com/fluxcd/helm-controller/pull/754)\n- Update Source API to v1.1.0\n  [#758](https://github.com/fluxcd/helm-controller/pull/758)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 528,
                  "startColumn": 1,
                  "endLine": 528,
                  "endColumn": 9,
                  "snippet": {
                    "text": "and Kubernetes related dependencies to `v0.27.4`.\n\nImprovements:\n- Update dependencies\n  [#748](https://github.com/fluxcd/helm-controller/pull/748)\n- controller: jitter requeue interval\n  [#751](https://github.com/fluxcd/helm-controller/pull/751)\n",
                    "rendered": {
                      "text": "and Kubernetes related dependencies to `v0.27.4`.\n\nImprovements:\n- Update dependencies\n  [#748](https://github.com/fluxcd/helm-controller/pull/748)\n- controller: jitter requeue interval\n  [#751](https://github.com/fluxcd/helm-controller/pull/751)\n",
                      "markdown": "`and Kubernetes related dependencies to `v0.27.4`.\n\nImprovements:\n- Update dependencies\n  [#748](https://github.com/fluxcd/helm-controller/pull/748)\n- controller: jitter requeue interval\n  [#751](https://github.com/fluxcd/helm-controller/pull/751)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 524,
                  "startColumn": 50,
                  "endLine": 524,
                  "endColumn": 58,
                  "snippet": {
                    "text": "In addition, the controller now stops exporting an object's metrics as soon as\nit has been deleted.\n\nLastly, dependencies have been updated, such as an update of Helm to `v3.12.3`\nand Kubernetes related dependencies to `v0.27.4`.\n\nImprovements:\n",
                    "rendered": {
                      "text": "In addition, the controller now stops exporting an object's metrics as soon as\nit has been deleted.\n\nLastly, dependencies have been updated, such as an update of Helm to `v3.12.3`\nand Kubernetes related dependencies to `v0.27.4`.\n\nImprovements:\n",
                      "markdown": "`In addition, the controller now stops exporting an object's metrics as soon as\nit has been deleted.\n\nLastly, dependencies have been updated, such as an update of Helm to `v3.12.3`\nand Kubernetes related dependencies to `v0.27.4`.\n\nImprovements:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 507,
                  "startColumn": 1,
                  "endLine": 507,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#773](https://github.com/fluxcd/helm-controller/pull/773)\n- build(deps): bump github.com/cyphar/filepath-securejoin from 0.2.3 to 0.2.4\n  [#764](https://github.com/fluxcd/helm-controller/pull/764)\n- Update source-controller to v1.1.1\n  [#775](https://github.com/fluxcd/helm-controller/pull/775)\n\n## 0.36.0\n",
                    "rendered": {
                      "text": "  [#773](https://github.com/fluxcd/helm-controller/pull/773)\n- build(deps): bump github.com/cyphar/filepath-securejoin from 0.2.3 to 0.2.4\n  [#764](https://github.com/fluxcd/helm-controller/pull/764)\n- Update source-controller to v1.1.1\n  [#775](https://github.com/fluxcd/helm-controller/pull/775)\n\n## 0.36.0\n",
                      "markdown": "`  [#773](https://github.com/fluxcd/helm-controller/pull/773)\n- build(deps): bump github.com/cyphar/filepath-securejoin from 0.2.3 to 0.2.4\n  [#764](https://github.com/fluxcd/helm-controller/pull/764)\n- Update source-controller to v1.1.1\n  [#775](https://github.com/fluxcd/helm-controller/pull/775)\n\n## 0.36.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 474,
                  "startColumn": 1,
                  "endLine": 474,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Improvements:\n- Address typo in documentation\n  [#777](https://github.com/fluxcd/helm-controller/pull/777)\n- Update CI dependencies\n  [#783](https://github.com/fluxcd/helm-controller/pull/783)\n  [#786](https://github.com/fluxcd/helm-controller/pull/786)\n- Address miscellaneous issues throughout code base\n",
                    "rendered": {
                      "text": "Improvements:\n- Address typo in documentation\n  [#777](https://github.com/fluxcd/helm-controller/pull/777)\n- Update CI dependencies\n  [#783](https://github.com/fluxcd/helm-controller/pull/783)\n  [#786](https://github.com/fluxcd/helm-controller/pull/786)\n- Address miscellaneous issues throughout code base\n",
                      "markdown": "`Improvements:\n- Address typo in documentation\n  [#777](https://github.com/fluxcd/helm-controller/pull/777)\n- Update CI dependencies\n  [#783](https://github.com/fluxcd/helm-controller/pull/783)\n  [#786](https://github.com/fluxcd/helm-controller/pull/786)\n- Address miscellaneous issues throughout code base\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 450,
                  "startColumn": 8,
                  "endLine": 450,
                  "endColumn": 16,
                  "snippet": {
                    "text": "  [#832](https://github.com/fluxcd/helm-controller/pull/832)\n- controller: enrich \"HelmChart not ready\" messages\n  [#834](https://github.com/fluxcd/helm-controller/pull/834)\n- build: update Alpine to 3.19\n  [#838](https://github.com/fluxcd/helm-controller/pull/838)\n\n## 0.36.2\n",
                    "rendered": {
                      "text": "  [#832](https://github.com/fluxcd/helm-controller/pull/832)\n- controller: enrich \"HelmChart not ready\" messages\n  [#834](https://github.com/fluxcd/helm-controller/pull/834)\n- build: update Alpine to 3.19\n  [#838](https://github.com/fluxcd/helm-controller/pull/838)\n\n## 0.36.2\n",
                      "markdown": "`  [#832](https://github.com/fluxcd/helm-controller/pull/832)\n- controller: enrich \"HelmChart not ready\" messages\n  [#834](https://github.com/fluxcd/helm-controller/pull/834)\n- build: update Alpine to 3.19\n  [#838](https://github.com/fluxcd/helm-controller/pull/838)\n\n## 0.36.2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 429,
                  "startColumn": 1,
                  "endLine": 429,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#830](https://github.com/fluxcd/helm-controller/pull/830)\n  [#833](https://github.com/fluxcd/helm-controller/pull/833)\n  [#836](https://github.com/fluxcd/helm-controller/pull/836)\n- Update Kubernetes 1.28.x, Helm v3.13.2 and Kustomize v5.3.0\n  [#817](https://github.com/fluxcd/helm-controller/pull/817)\n  [#839](https://github.com/fluxcd/helm-controller/pull/839)\n- Allow configuration of drift detection on `HelmRelease`\n",
                    "rendered": {
                      "text": "  [#830](https://github.com/fluxcd/helm-controller/pull/830)\n  [#833](https://github.com/fluxcd/helm-controller/pull/833)\n  [#836](https://github.com/fluxcd/helm-controller/pull/836)\n- Update Kubernetes 1.28.x, Helm v3.13.2 and Kustomize v5.3.0\n  [#817](https://github.com/fluxcd/helm-controller/pull/817)\n  [#839](https://github.com/fluxcd/helm-controller/pull/839)\n- Allow configuration of drift detection on `HelmRelease`\n",
                      "markdown": "`  [#830](https://github.com/fluxcd/helm-controller/pull/830)\n  [#833](https://github.com/fluxcd/helm-controller/pull/833)\n  [#836](https://github.com/fluxcd/helm-controller/pull/836)\n- Update Kubernetes 1.28.x, Helm v3.13.2 and Kustomize v5.3.0\n  [#817](https://github.com/fluxcd/helm-controller/pull/817)\n  [#839](https://github.com/fluxcd/helm-controller/pull/839)\n- Allow configuration of drift detection on `HelmRelease`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 418,
                  "startColumn": 1,
                  "endLine": 418,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#792](https://github.com/fluxcd/helm-controller/pull/792)\n  [#799](https://github.com/fluxcd/helm-controller/pull/799)\n  [#812](https://github.com/fluxcd/helm-controller/pull/812)\n- Update source-controller dependency to v1.2.1\n  [#793](https://github.com/fluxcd/helm-controller/pull/793)\n  [#835](https://github.com/fluxcd/helm-controller/pull/835)\n- Rework `HelmRelease` reconciliation logic\n",
                    "rendered": {
                      "text": "  [#792](https://github.com/fluxcd/helm-controller/pull/792)\n  [#799](https://github.com/fluxcd/helm-controller/pull/799)\n  [#812](https://github.com/fluxcd/helm-controller/pull/812)\n- Update source-controller dependency to v1.2.1\n  [#793](https://github.com/fluxcd/helm-controller/pull/793)\n  [#835](https://github.com/fluxcd/helm-controller/pull/835)\n- Rework `HelmRelease` reconciliation logic\n",
                      "markdown": "`  [#792](https://github.com/fluxcd/helm-controller/pull/792)\n  [#799](https://github.com/fluxcd/helm-controller/pull/799)\n  [#812](https://github.com/fluxcd/helm-controller/pull/812)\n- Update source-controller dependency to v1.2.1\n  [#793](https://github.com/fluxcd/helm-controller/pull/793)\n  [#835](https://github.com/fluxcd/helm-controller/pull/835)\n- Rework `HelmRelease` reconciliation logic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 413,
                  "startColumn": 1,
                  "endLine": 413,
                  "endColumn": 9,
                  "snippet": {
                    "text": "### Full changelog\n\nImprovements:\n- Update dependencies\n  [#791](https://github.com/fluxcd/helm-controller/pull/791)\n  [#792](https://github.com/fluxcd/helm-controller/pull/792)\n  [#799](https://github.com/fluxcd/helm-controller/pull/799)\n",
                    "rendered": {
                      "text": "### Full changelog\n\nImprovements:\n- Update dependencies\n  [#791](https://github.com/fluxcd/helm-controller/pull/791)\n  [#792](https://github.com/fluxcd/helm-controller/pull/792)\n  [#799](https://github.com/fluxcd/helm-controller/pull/799)\n",
                      "markdown": "`### Full changelog\n\nImprovements:\n- Update dependencies\n  [#791](https://github.com/fluxcd/helm-controller/pull/791)\n  [#792](https://github.com/fluxcd/helm-controller/pull/792)\n  [#799](https://github.com/fluxcd/helm-controller/pull/799)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 368,
                  "startColumn": 32,
                  "endLine": 368,
                  "endColumn": 40,
                  "snippet": {
                    "text": "the `v2beta2` API as soon as possible. The `v2beta1` API will be removed after\n6 months.\n\nTo upgrade to the `v2beta2` API, update the `apiVersion` field of your\n`HelmRelease` resources to `helm.toolkit.fluxcd.io/v2beta2` after updating the\ncontroller and Custom Resource Definitions.\n\n",
                    "rendered": {
                      "text": "the `v2beta2` API as soon as possible. The `v2beta1` API will be removed after\n6 months.\n\nTo upgrade to the `v2beta2` API, update the `apiVersion` field of your\n`HelmRelease` resources to `helm.toolkit.fluxcd.io/v2beta2` after updating the\ncontroller and Custom Resource Definitions.\n\n",
                      "markdown": "`the `v2beta2` API as soon as possible. The `v2beta1` API will be removed after\n6 months.\n\nTo upgrade to the `v2beta2` API, update the `apiVersion` field of your\n`HelmRelease` resources to `helm.toolkit.fluxcd.io/v2beta2` after updating the\ncontroller and Custom Resource Definitions.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 305,
                  "startColumn": 1,
                  "endLine": 305,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#846](https://github.com/fluxcd/helm-controller/pull/846)\n- Early stall condition detection after remediation\n  [#848](https://github.com/fluxcd/helm-controller/pull/848)\n- Update Helm to v3.13.3\n  [#849](https://github.com/fluxcd/helm-controller/pull/849)\n\n## 0.37.0\n",
                    "rendered": {
                      "text": "  [#846](https://github.com/fluxcd/helm-controller/pull/846)\n- Early stall condition detection after remediation\n  [#848](https://github.com/fluxcd/helm-controller/pull/848)\n- Update Helm to v3.13.3\n  [#849](https://github.com/fluxcd/helm-controller/pull/849)\n\n## 0.37.0\n",
                      "markdown": "`  [#846](https://github.com/fluxcd/helm-controller/pull/846)\n- Early stall condition detection after remediation\n  [#848](https://github.com/fluxcd/helm-controller/pull/848)\n- Update Helm to v3.13.3\n  [#849](https://github.com/fluxcd/helm-controller/pull/849)\n\n## 0.37.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 301,
                  "startColumn": 1,
                  "endLine": 301,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Improvements:\n- loader: log HTTP errors to provide faster feedback\n  [#845](https://github.com/fluxcd/helm-controller/pull/845)\n- Update runtime to v0.43.3\n  [#846](https://github.com/fluxcd/helm-controller/pull/846)\n- Early stall condition detection after remediation\n  [#848](https://github.com/fluxcd/helm-controller/pull/848)\n",
                    "rendered": {
                      "text": "Improvements:\n- loader: log HTTP errors to provide faster feedback\n  [#845](https://github.com/fluxcd/helm-controller/pull/845)\n- Update runtime to v0.43.3\n  [#846](https://github.com/fluxcd/helm-controller/pull/846)\n- Early stall condition detection after remediation\n  [#848](https://github.com/fluxcd/helm-controller/pull/848)\n",
                      "markdown": "`Improvements:\n- loader: log HTTP errors to provide faster feedback\n  [#845](https://github.com/fluxcd/helm-controller/pull/845)\n- Update runtime to v0.43.3\n  [#846](https://github.com/fluxcd/helm-controller/pull/846)\n- Early stall condition detection after remediation\n  [#848](https://github.com/fluxcd/helm-controller/pull/848)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 254,
                  "startColumn": 1,
                  "endLine": 254,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Improvements:\n- ci: Enable dependabot gomod updates\n  [#874](https://github.com/fluxcd/helm-controller/pull/874)\n- Update Go to 1.21\n  [#872](https://github.com/fluxcd/helm-controller/pull/872)\n- Various dependency updates\n  [#882](https://github.com/fluxcd/helm-controller/pull/882)\n",
                    "rendered": {
                      "text": "Improvements:\n- ci: Enable dependabot gomod updates\n  [#874](https://github.com/fluxcd/helm-controller/pull/874)\n- Update Go to 1.21\n  [#872](https://github.com/fluxcd/helm-controller/pull/872)\n- Various dependency updates\n  [#882](https://github.com/fluxcd/helm-controller/pull/882)\n",
                      "markdown": "`Improvements:\n- ci: Enable dependabot gomod updates\n  [#874](https://github.com/fluxcd/helm-controller/pull/874)\n- Update Go to 1.21\n  [#872](https://github.com/fluxcd/helm-controller/pull/872)\n- Various dependency updates\n  [#882](https://github.com/fluxcd/helm-controller/pull/882)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 245,
                  "startColumn": 29,
                  "endLine": 245,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\n**Release date:** 2024-02-01\n\nThis prerelease comes with an update to the Kubernetes dependencies to\nv1.28.6 and various other dependencies have been updated to their latest version\nto patch upstream CVEs.\n\n",
                    "rendered": {
                      "text": "\n**Release date:** 2024-02-01\n\nThis prerelease comes with an update to the Kubernetes dependencies to\nv1.28.6 and various other dependencies have been updated to their latest version\nto patch upstream CVEs.\n\n",
                      "markdown": "`\n**Release date:** 2024-02-01\n\nThis prerelease comes with an update to the Kubernetes dependencies to\nv1.28.6 and various other dependencies have been updated to their latest version\nto patch upstream CVEs.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 238,
                  "startColumn": 12,
                  "endLine": 239,
                  "snippet": {
                    "text": "Improvements:\n- Remove stale Ready=False conditions value to show more accurate status\n  [#884](https://github.com/fluxcd/helm-controller/pull/884)\n- Dependency update\n  [#886](https://github.com/fluxcd/helm-controller/pull/886)\n\n## 0.37.3\n\n",
                    "rendered": {
                      "text": "Improvements:\n- Remove stale Ready=False conditions value to show more accurate status\n  [#884](https://github.com/fluxcd/helm-controller/pull/884)\n- Dependency update\n  [#886](https://github.com/fluxcd/helm-controller/pull/886)\n\n## 0.37.3\n\n",
                      "markdown": "`Improvements:\n- Remove stale Ready=False conditions value to show more accurate status\n  [#884](https://github.com/fluxcd/helm-controller/pull/884)\n- Dependency update\n  [#886](https://github.com/fluxcd/helm-controller/pull/886)\n\n## 0.37.3\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 215,
                  "startColumn": 1,
                  "endLine": 215,
                  "endColumn": 9,
                  "snippet": {
                    "text": "Fixes:\n- Track changes in `.spec.postRenderers`\n  [#965](https://github.com/fluxcd/helm-controller/pull/965)\n- Update Ready condition during drift correction\n  [#885](https://github.com/fluxcd/helm-controller/pull/885)\n- Fix patching on drift detection\n  [#935](https://github.com/fluxcd/helm-controller/pull/935)\n",
                    "rendered": {
                      "text": "Fixes:\n- Track changes in `.spec.postRenderers`\n  [#965](https://github.com/fluxcd/helm-controller/pull/965)\n- Update Ready condition during drift correction\n  [#885](https://github.com/fluxcd/helm-controller/pull/885)\n- Fix patching on drift detection\n  [#935](https://github.com/fluxcd/helm-controller/pull/935)\n",
                      "markdown": "`Fixes:\n- Track changes in `.spec.postRenderers`\n  [#965](https://github.com/fluxcd/helm-controller/pull/965)\n- Update Ready condition during drift correction\n  [#885](https://github.com/fluxcd/helm-controller/pull/885)\n- Fix patching on drift detection\n  [#935](https://github.com/fluxcd/helm-controller/pull/935)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 209,
                  "startColumn": 1,
                  "endLine": 209,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#930](https://github.com/fluxcd/helm-controller/pull/930)\n- Update controller to Helm v3.14.3 and Kubernetes v1.29.0\n  [#879](https://github.com/fluxcd/helm-controller/pull/879)\n- Update controller-gen to v0.14.0\n  [#910](https://github.com/fluxcd/helm-controller/pull/910)\n\nFixes:\n",
                    "rendered": {
                      "text": "  [#930](https://github.com/fluxcd/helm-controller/pull/930)\n- Update controller to Helm v3.14.3 and Kubernetes v1.29.0\n  [#879](https://github.com/fluxcd/helm-controller/pull/879)\n- Update controller-gen to v0.14.0\n  [#910](https://github.com/fluxcd/helm-controller/pull/910)\n\nFixes:\n",
                      "markdown": "`  [#930](https://github.com/fluxcd/helm-controller/pull/930)\n- Update controller to Helm v3.14.3 and Kubernetes v1.29.0\n  [#879](https://github.com/fluxcd/helm-controller/pull/879)\n- Update controller-gen to v0.14.0\n  [#910](https://github.com/fluxcd/helm-controller/pull/910)\n\nFixes:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 207,
                  "startColumn": 1,
                  "endLine": 207,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#932](https://github.com/fluxcd/helm-controller/pull/932)\n- Add notation verification provider to API\n  [#930](https://github.com/fluxcd/helm-controller/pull/930)\n- Update controller to Helm v3.14.3 and Kubernetes v1.29.0\n  [#879](https://github.com/fluxcd/helm-controller/pull/879)\n- Update controller-gen to v0.14.0\n  [#910](https://github.com/fluxcd/helm-controller/pull/910)\n",
                    "rendered": {
                      "text": "  [#932](https://github.com/fluxcd/helm-controller/pull/932)\n- Add notation verification provider to API\n  [#930](https://github.com/fluxcd/helm-controller/pull/930)\n- Update controller to Helm v3.14.3 and Kubernetes v1.29.0\n  [#879](https://github.com/fluxcd/helm-controller/pull/879)\n- Update controller-gen to v0.14.0\n  [#910](https://github.com/fluxcd/helm-controller/pull/910)\n",
                      "markdown": "`  [#932](https://github.com/fluxcd/helm-controller/pull/932)\n- Add notation verification provider to API\n  [#930](https://github.com/fluxcd/helm-controller/pull/930)\n- Update controller to Helm v3.14.3 and Kubernetes v1.29.0\n  [#879](https://github.com/fluxcd/helm-controller/pull/879)\n- Update controller-gen to v0.14.0\n  [#910](https://github.com/fluxcd/helm-controller/pull/910)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 203,
                  "startColumn": 1,
                  "endLine": 203,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#945](https://github.com/fluxcd/helm-controller/pull/945)\n- Add support for OCIRepository to `.spec.chartRef`\n  [#905](https://github.com/fluxcd/helm-controller/pull/905)\n- Update dependencies to Kustomize v5.4.0\n  [#932](https://github.com/fluxcd/helm-controller/pull/932)\n- Add notation verification provider to API\n  [#930](https://github.com/fluxcd/helm-controller/pull/930)\n",
                    "rendered": {
                      "text": "  [#945](https://github.com/fluxcd/helm-controller/pull/945)\n- Add support for OCIRepository to `.spec.chartRef`\n  [#905](https://github.com/fluxcd/helm-controller/pull/905)\n- Update dependencies to Kustomize v5.4.0\n  [#932](https://github.com/fluxcd/helm-controller/pull/932)\n- Add notation verification provider to API\n  [#930](https://github.com/fluxcd/helm-controller/pull/930)\n",
                      "markdown": "`  [#945](https://github.com/fluxcd/helm-controller/pull/945)\n- Add support for OCIRepository to `.spec.chartRef`\n  [#905](https://github.com/fluxcd/helm-controller/pull/905)\n- Update dependencies to Kustomize v5.4.0\n  [#932](https://github.com/fluxcd/helm-controller/pull/932)\n- Add notation verification provider to API\n  [#930](https://github.com/fluxcd/helm-controller/pull/930)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 1,
                  "endLine": 197,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#942](https://github.com/fluxcd/helm-controller/pull/942)\n- Update HelmChart API to v1 (GA)\n  [#962](https://github.com/fluxcd/helm-controller/pull/962)\n- Update dependencies to Kubernetes 1.30.0\n  [#944](https://github.com/fluxcd/helm-controller/pull/944)\n- Add support for HelmChart to `.spec.chartRef`\n  [#945](https://github.com/fluxcd/helm-controller/pull/945)\n",
                    "rendered": {
                      "text": "  [#942](https://github.com/fluxcd/helm-controller/pull/942)\n- Update HelmChart API to v1 (GA)\n  [#962](https://github.com/fluxcd/helm-controller/pull/962)\n- Update dependencies to Kubernetes 1.30.0\n  [#944](https://github.com/fluxcd/helm-controller/pull/944)\n- Add support for HelmChart to `.spec.chartRef`\n  [#945](https://github.com/fluxcd/helm-controller/pull/945)\n",
                      "markdown": "`  [#942](https://github.com/fluxcd/helm-controller/pull/942)\n- Update HelmChart API to v1 (GA)\n  [#962](https://github.com/fluxcd/helm-controller/pull/962)\n- Update dependencies to Kubernetes 1.30.0\n  [#944](https://github.com/fluxcd/helm-controller/pull/944)\n- Add support for HelmChart to `.spec.chartRef`\n  [#945](https://github.com/fluxcd/helm-controller/pull/945)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 195,
                  "startColumn": 1,
                  "endLine": 195,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#963](https://github.com/fluxcd/helm-controller/pull/963)\n- Add `.spec.ignoreMissingValuesFiles` to HelmChartTemplate API\n  [#942](https://github.com/fluxcd/helm-controller/pull/942)\n- Update HelmChart API to v1 (GA)\n  [#962](https://github.com/fluxcd/helm-controller/pull/962)\n- Update dependencies to Kubernetes 1.30.0\n  [#944](https://github.com/fluxcd/helm-controller/pull/944)\n",
                    "rendered": {
                      "text": "  [#963](https://github.com/fluxcd/helm-controller/pull/963)\n- Add `.spec.ignoreMissingValuesFiles` to HelmChartTemplate API\n  [#942](https://github.com/fluxcd/helm-controller/pull/942)\n- Update HelmChart API to v1 (GA)\n  [#962](https://github.com/fluxcd/helm-controller/pull/962)\n- Update dependencies to Kubernetes 1.30.0\n  [#944](https://github.com/fluxcd/helm-controller/pull/944)\n",
                      "markdown": "`  [#963](https://github.com/fluxcd/helm-controller/pull/963)\n- Add `.spec.ignoreMissingValuesFiles` to HelmChartTemplate API\n  [#942](https://github.com/fluxcd/helm-controller/pull/942)\n- Update HelmChart API to v1 (GA)\n  [#962](https://github.com/fluxcd/helm-controller/pull/962)\n- Update dependencies to Kubernetes 1.30.0\n  [#944](https://github.com/fluxcd/helm-controller/pull/944)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 180,
                  "startColumn": 2,
                  "endLine": 180,
                  "endColumn": 10,
                  "snippet": {
                    "text": "   Commit and push the changes to the Git repository, then wait for Flux to reconcile the changes.\n2. Upgrade the controller and CRDs to v1.0.0 on the cluster using Flux v2.3 release.\n   Note that helm-controller v1.0.0 requires source-controller v1.3.0.\n3. Update the `apiVersion` field of the `HelmRelease` resources to `helm.toolkit.fluxcd.io/v2`,\n   commit and push the changes to the Git repository.\n\nBumping the API version in manifests can be done gradually.\n",
                    "rendered": {
                      "text": "   Commit and push the changes to the Git repository, then wait for Flux to reconcile the changes.\n2. Upgrade the controller and CRDs to v1.0.0 on the cluster using Flux v2.3 release.\n   Note that helm-controller v1.0.0 requires source-controller v1.3.0.\n3. Update the `apiVersion` field of the `HelmRelease` resources to `helm.toolkit.fluxcd.io/v2`,\n   commit and push the changes to the Git repository.\n\nBumping the API version in manifests can be done gradually.\n",
                      "markdown": "`   Commit and push the changes to the Git repository, then wait for Flux to reconcile the changes.\n2. Upgrade the controller and CRDs to v1.0.0 on the cluster using Flux v2.3 release.\n   Note that helm-controller v1.0.0 requires source-controller v1.3.0.\n3. Update the `apiVersion` field of the `HelmRelease` resources to `helm.toolkit.fluxcd.io/v2`,\n   commit and push the changes to the Git repository.\n\nBumping the API version in manifests can be done gradually.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 1,
                  "endLine": 48,
                  "endColumn": 9,
                  "snippet": {
                    "text": "  [#1070](https://github.com/fluxcd/helm-controller/pull/1070)\n- Add disableSchemaValidation to Helm install/upgrade actions\n  [#1068](https://github.com/fluxcd/helm-controller/pull/1068)\n- Update Helm to v3.16.1 and enable the adoption of existing resources\n  [#1062](https://github.com/fluxcd/helm-controller/pull/1062)\n- Build with Go 1.23\n  [#1049](https://github.com/fluxcd/helm-controller/pull/1049)\n",
                    "rendered": {
                      "text": "  [#1070](https://github.com/fluxcd/helm-controller/pull/1070)\n- Add disableSchemaValidation to Helm install/upgrade actions\n  [#1068](https://github.com/fluxcd/helm-controller/pull/1068)\n- Update Helm to v3.16.1 and enable the adoption of existing resources\n  [#1062](https://github.com/fluxcd/helm-controller/pull/1062)\n- Build with Go 1.23\n  [#1049](https://github.com/fluxcd/helm-controller/pull/1049)\n",
                      "markdown": "`  [#1070](https://github.com/fluxcd/helm-controller/pull/1070)\n- Add disableSchemaValidation to Helm install/upgrade actions\n  [#1068](https://github.com/fluxcd/helm-controller/pull/1068)\n- Update Helm to v3.16.1 and enable the adoption of existing resources\n  [#1062](https://github.com/fluxcd/helm-controller/pull/1062)\n- Build with Go 1.23\n  [#1049](https://github.com/fluxcd/helm-controller/pull/1049)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2095,
                  "startColumn": 38,
                  "endLine": 2095,
                  "endColumn": 44,
                  "snippet": {
                    "text": "  has been successfully reconciled. This field is marked as `true` on a\n  `Ready==True` condition, and only reset on `generation`, values, and/or\n  chart changes.\n* `lastObservedTime` reflects the last time at which the `HelmRelease` was\n  observed. This can for example be used to observe if the `HelmRelease` is\n  running on the configured `spec.interval` and/or reacting to `ReconcileAt`\n  annotations.\n",
                    "rendered": {
                      "text": "  has been successfully reconciled. This field is marked as `true` on a\n  `Ready==True` condition, and only reset on `generation`, values, and/or\n  chart changes.\n* `lastObservedTime` reflects the last time at which the `HelmRelease` was\n  observed. This can for example be used to observe if the `HelmRelease` is\n  running on the configured `spec.interval` and/or reacting to `ReconcileAt`\n  annotations.\n",
                      "markdown": "`  has been successfully reconciled. This field is marked as `true` on a\n  `Ready==True` condition, and only reset on `generation`, values, and/or\n  chart changes.\n* `lastObservedTime` reflects the last time at which the `HelmRelease` was\n  observed. This can for example be used to observe if the `HelmRelease` is\n  running on the configured `spec.interval` and/or reacting to `ReconcileAt`\n  annotations.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 2056,
                  "startColumn": 7,
                  "endLine": 2056,
                  "endColumn": 14,
                  "snippet": {
                    "text": "`HelmChartTemplateSpec` to overwrite the default chart values with another\nvalues file, as supported by `>=0.0.15` of the source-controller, and a\n`--watch-all-namespaces` flag (defaults to `true`) to provide the option\nto only watch the runtime namespace of the controller for resources.\n\n## 0.0.7\n\n",
                    "rendered": {
                      "text": "`HelmChartTemplateSpec` to overwrite the default chart values with another\nvalues file, as supported by `>=0.0.15` of the source-controller, and a\n`--watch-all-namespaces` flag (defaults to `true`) to provide the option\nto only watch the runtime namespace of the controller for resources.\n\n## 0.0.7\n\n",
                      "markdown": "``HelmChartTemplateSpec` to overwrite the default chart values with another\nvalues file, as supported by `>=0.0.15` of the source-controller, and a\n`--watch-all-namespaces` flag (defaults to `true`) to provide the option\nto only watch the runtime namespace of the controller for resources.\n\n## 0.0.7\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1913,
                  "startColumn": 69,
                  "endLine": 1914,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n**Release date:** 2020-11-26\n\nThis the fourth MINOR prerelease. It adds support for impersonating a\nService Account during Helm actions by defining a `ServiceAccountName`\nin the `HelmRelease`, and includes various bug fixes.\n\n## 0.3.0\n",
                    "rendered": {
                      "text": "\n**Release date:** 2020-11-26\n\nThis the fourth MINOR prerelease. It adds support for impersonating a\nService Account during Helm actions by defining a `ServiceAccountName`\nin the `HelmRelease`, and includes various bug fixes.\n\n## 0.3.0\n",
                      "markdown": "`\n**Release date:** 2020-11-26\n\nThis the fourth MINOR prerelease. It adds support for impersonating a\nService Account during Helm actions by defining a `ServiceAccountName`\nin the `HelmRelease`, and includes various bug fixes.\n\n## 0.3.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1878,
                  "startColumn": 28,
                  "endLine": 1878,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\nThis prerelease increases the `terminationGracePeriodSeconds` of the\ncontroller `Deployment` from `10` to `600`, to allow release processes\nthat make use of the default timeout (`5m0s`) to finish, and upgrades\nthe source-controller API dependency to `v0.5.5`.\n\n## 0.4.3\n",
                    "rendered": {
                      "text": "\nThis prerelease increases the `terminationGracePeriodSeconds` of the\ncontroller `Deployment` from `10` to `600`, to allow release processes\nthat make use of the default timeout (`5m0s`) to finish, and upgrades\nthe source-controller API dependency to `v0.5.5`.\n\n## 0.4.3\n",
                      "markdown": "`\nThis prerelease increases the `terminationGracePeriodSeconds` of the\ncontroller `Deployment` from `10` to `600`, to allow release processes\nthat make use of the default timeout (`5m0s`) to finish, and upgrades\nthe source-controller API dependency to `v0.5.5`.\n\n## 0.4.3\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1719,
                  "startColumn": 22,
                  "endLine": 1719,
                  "endColumn": 31,
                  "snippet": {
                    "text": "a setup with multiple replicas, it is however advised to scale down\nbefore  upgrading.\n\nTo ease debugging wait timeout errors, the last 5 deduplicated log lines\nfrom Helm are now recorded in the status conditions and events of the\n`HelmRelease`.\n\n",
                    "rendered": {
                      "text": "a setup with multiple replicas, it is however advised to scale down\nbefore  upgrading.\n\nTo ease debugging wait timeout errors, the last 5 deduplicated log lines\nfrom Helm are now recorded in the status conditions and events of the\n`HelmRelease`.\n\n",
                      "markdown": "`a setup with multiple replicas, it is however advised to scale down\nbefore  upgrading.\n\nTo ease debugging wait timeout errors, the last 5 deduplicated log lines\nfrom Helm are now recorded in the status conditions and events of the\n`HelmRelease`.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1589,
                  "startColumn": 49,
                  "endLine": 1589,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\nTo enhance the experience of consumers observing the `HelmRelease` object using\n`kstatus`, a default of `-1` is now configured for the `observedGeneration` to\nensure it does not report a false positive in the time the controller has not\nmarked the resource with a `Ready` condition yet.\n\nIn addition, it updates Helm to `v3.6.3` and aligns the Kubernetes dependencies\n",
                    "rendered": {
                      "text": "\nTo enhance the experience of consumers observing the `HelmRelease` object using\n`kstatus`, a default of `-1` is now configured for the `observedGeneration` to\nensure it does not report a false positive in the time the controller has not\nmarked the resource with a `Ready` condition yet.\n\nIn addition, it updates Helm to `v3.6.3` and aligns the Kubernetes dependencies\n",
                      "markdown": "`\nTo enhance the experience of consumers observing the `HelmRelease` object using\n`kstatus`, a default of `-1` is now configured for the `observedGeneration` to\nensure it does not report a false positive in the time the controller has not\nmarked the resource with a `Ready` condition yet.\n\nIn addition, it updates Helm to `v3.6.3` and aligns the Kubernetes dependencies\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1388,
                  "startColumn": 25,
                  "endLine": 1388,
                  "endColumn": 34,
                  "snippet": {
                    "text": "  the service account on the target cluster, previously the controller ignored the service account.\n\nFeatures:\n- Allow setting a default service account for impersonation\n  [#406](https://github.com/fluxcd/helm-controller/pull/406)\n- Allow disabling cross-namespace references\n  [#408](https://github.com/fluxcd/helm-controller/pull/408)\n",
                    "rendered": {
                      "text": "  the service account on the target cluster, previously the controller ignored the service account.\n\nFeatures:\n- Allow setting a default service account for impersonation\n  [#406](https://github.com/fluxcd/helm-controller/pull/406)\n- Allow disabling cross-namespace references\n  [#408](https://github.com/fluxcd/helm-controller/pull/408)\n",
                      "markdown": "`  the service account on the target cluster, previously the controller ignored the service account.\n\nFeatures:\n- Allow setting a default service account for impersonation\n  [#406](https://github.com/fluxcd/helm-controller/pull/406)\n- Allow disabling cross-namespace references\n  [#408](https://github.com/fluxcd/helm-controller/pull/408)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1385,
                  "startColumn": 82,
                  "endLine": 1385,
                  "endColumn": 91,
                  "snippet": {
                    "text": "- The controller container is now executed under 65534:65534 (userid:groupid).\n  This change may break deployments that hard-coded the user ID of 'controller' in their PodSecurityPolicy.\n- When both `spec.kubeConfig` and `spec.ServiceAccountName` are specified, the controller will impersonate\n  the service account on the target cluster, previously the controller ignored the service account.\n\nFeatures:\n- Allow setting a default service account for impersonation\n",
                    "rendered": {
                      "text": "- The controller container is now executed under 65534:65534 (userid:groupid).\n  This change may break deployments that hard-coded the user ID of 'controller' in their PodSecurityPolicy.\n- When both `spec.kubeConfig` and `spec.ServiceAccountName` are specified, the controller will impersonate\n  the service account on the target cluster, previously the controller ignored the service account.\n\nFeatures:\n- Allow setting a default service account for impersonation\n",
                      "markdown": "`- The controller container is now executed under 65534:65534 (userid:groupid).\n  This change may break deployments that hard-coded the user ID of 'controller' in their PodSecurityPolicy.\n- When both `spec.kubeConfig` and `spec.ServiceAccountName` are specified, the controller will impersonate\n  the service account on the target cluster, previously the controller ignored the service account.\n\nFeatures:\n- Allow setting a default service account for impersonation\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1385,
                  "startColumn": 5,
                  "endLine": 1385,
                  "endColumn": 14,
                  "snippet": {
                    "text": "- The controller container is now executed under 65534:65534 (userid:groupid).\n  This change may break deployments that hard-coded the user ID of 'controller' in their PodSecurityPolicy.\n- When both `spec.kubeConfig` and `spec.ServiceAccountName` are specified, the controller will impersonate\n  the service account on the target cluster, previously the controller ignored the service account.\n\nFeatures:\n- Allow setting a default service account for impersonation\n",
                    "rendered": {
                      "text": "- The controller container is now executed under 65534:65534 (userid:groupid).\n  This change may break deployments that hard-coded the user ID of 'controller' in their PodSecurityPolicy.\n- When both `spec.kubeConfig` and `spec.ServiceAccountName` are specified, the controller will impersonate\n  the service account on the target cluster, previously the controller ignored the service account.\n\nFeatures:\n- Allow setting a default service account for impersonation\n",
                      "markdown": "`- The controller container is now executed under 65534:65534 (userid:groupid).\n  This change may break deployments that hard-coded the user ID of 'controller' in their PodSecurityPolicy.\n- When both `spec.kubeConfig` and `spec.ServiceAccountName` are specified, the controller will impersonate\n  the service account on the target cluster, previously the controller ignored the service account.\n\nFeatures:\n- Allow setting a default service account for impersonation\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1360,
                  "startColumn": 9,
                  "endLine": 1360,
                  "endColumn": 18,
                  "snippet": {
                    "text": "22-02-01\n\nThis prerelease comes with security improvements for multi-tenant clusters:\n- Platform admins can enforce impersonation across the cluster using the `--default-service-account` flag.\n  When the flag is set, all `HelmReleases`, which don't have `spec.serviceAccountName` specified,\n  use the service account name provided by `--default-service-account=<SA Name>` in the namespace of the object.\n- Platform admins can disable cross-namespace references with the `--no-cross-namespace-refs=true` flag.\n  When this flag is set, `HelmReleases` can only refer to sources (`HelmRepositories`, `GitRepositor",
                    "rendered": {
                      "text": "22-02-01\n\nThis prerelease comes with security improvements for multi-tenant clusters:\n- Platform admins can enforce impersonation across the cluster using the `--default-service-account` flag.\n  When the flag is set, all `HelmReleases`, which don't have `spec.serviceAccountName` specified,\n  use the service account name provided by `--default-service-account=<SA Name>` in the namespace of the object.\n- Platform admins can disable cross-namespace references with the `--no-cross-namespace-refs=true` flag.\n  When this flag is set, `HelmReleases` can only refer to sources (`HelmRepositories`, `GitRepositor",
                      "markdown": "`22-02-01\n\nThis prerelease comes with security improvements for multi-tenant clusters:\n- Platform admins can enforce impersonation across the cluster using the `--default-service-account` flag.\n  When the flag is set, all `HelmReleases`, which don't have `spec.serviceAccountName` specified,\n  use the service account name provided by `--default-service-account=<SA Name>` in the namespace of the object.\n- Platform admins can disable cross-namespace references with the `--no-cross-namespace-refs=true` flag.\n  When this flag is set, `HelmReleases` can only refer to sources (`HelmRepositories`, `GitRepositor`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1337,
                  "startColumn": 38,
                  "endLine": 1337,
                  "endColumn": 47,
                  "snippet": {
                    "text": "Improvements:\n- Update dependencies\n  [#420](https://github.com/fluxcd/helm-controller/pull/420)\n- Set QPS and Burst when impersonating service account\n  [#422](https://github.com/fluxcd/helm-controller/pull/422)\n\n## 0.17.0\n",
                    "rendered": {
                      "text": "Improvements:\n- Update dependencies\n  [#420](https://github.com/fluxcd/helm-controller/pull/420)\n- Set QPS and Burst when impersonating service account\n  [#422](https://github.com/fluxcd/helm-controller/pull/422)\n\n## 0.17.0\n",
                      "markdown": "`Improvements:\n- Update dependencies\n  [#420](https://github.com/fluxcd/helm-controller/pull/420)\n- Set QPS and Burst when impersonating service account\n  [#422](https://github.com/fluxcd/helm-controller/pull/422)\n\n## 0.17.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1143,
                  "startColumn": 41,
                  "endLine": 1143,
                  "endColumn": 50,
                  "snippet": {
                    "text": "**Release date:** 2022-06-01\n\nThis prerelease fixes an issue where the token used for Helm operations would\ngo stale if it was provided using a Bound Service Account Token Volume.\n\nStarting with this version, the controller conforms to the Kubernetes\n[API Priority and Fairness](https://kubernetes.io/docs/concepts/cluster-administration/flow-control/).\n",
                    "rendered": {
                      "text": "**Release date:** 2022-06-01\n\nThis prerelease fixes an issue where the token used for Helm operations would\ngo stale if it was provided using a Bound Service Account Token Volume.\n\nStarting with this version, the controller conforms to the Kubernetes\n[API Priority and Fairness](https://kubernetes.io/docs/concepts/cluster-administration/flow-control/).\n",
                      "markdown": "`**Release date:** 2022-06-01\n\nThis prerelease fixes an issue where the token used for Helm operations would\ngo stale if it was provided using a Bound Service Account Token Volume.\n\nStarting with this version, the controller conforms to the Kubernetes\n[API Priority and Fairness](https://kubernetes.io/docs/concepts/cluster-administration/flow-control/).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1035,
                  "startColumn": 36,
                  "endLine": 1035,
                  "endColumn": 45,
                  "snippet": {
                    "text": "(time) duration. Effectively, this means values without a time unit (e.g. `ms`,\n`s`, `m`, `h`) will now be rejected by the API server. To stimulate sane\nconfigurations, the units `ns`, `us` and `µs` can no longer be configured, nor\ncan `h` be set for fields defining a timeout value.\n\nIn addition, the controller dependencies have been updated\nto Kubernetes controller-runtime v0.13.\n",
                    "rendered": {
                      "text": "(time) duration. Effectively, this means values without a time unit (e.g. `ms`,\n`s`, `m`, `h`) will now be rejected by the API server. To stimulate sane\nconfigurations, the units `ns`, `us` and `µs` can no longer be configured, nor\ncan `h` be set for fields defining a timeout value.\n\nIn addition, the controller dependencies have been updated\nto Kubernetes controller-runtime v0.13.\n",
                      "markdown": "`(time) duration. Effectively, this means values without a time unit (e.g. `ms`,\n`s`, `m`, `h`) will now be rejected by the API server. To stimulate sane\nconfigurations, the units `ns`, `us` and `µs` can no longer be configured, nor\ncan `h` be set for fields defining a timeout value.\n\nIn addition, the controller dependencies have been updated\nto Kubernetes controller-runtime v0.13.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 1032,
                  "startColumn": 57,
                  "endLine": 1032,
                  "endColumn": 63,
                  "snippet": {
                    "text": "**Release date:** 2022-09-29\n\nThis prerelease comes with strict validation rules for API fields which define a\n(time) duration. Effectively, this means values without a time unit (e.g. `ms`,\n`s`, `m`, `h`) will now be rejected by the API server. To stimulate sane\nconfigurations, the units `ns`, `us` and `µs` can no longer be configured, nor\ncan `h` be set for fields defining a timeout value.\n",
                    "rendered": {
                      "text": "**Release date:** 2022-09-29\n\nThis prerelease comes with strict validation rules for API fields which define a\n(time) duration. Effectively, this means values without a time unit (e.g. `ms`,\n`s`, `m`, `h`) will now be rejected by the API server. To stimulate sane\nconfigurations, the units `ns`, `us` and `µs` can no longer be configured, nor\ncan `h` be set for fields defining a timeout value.\n",
                      "markdown": "`**Release date:** 2022-09-29\n\nThis prerelease comes with strict validation rules for API fields which define a\n(time) duration. Effectively, this means values without a time unit (e.g. `ms`,\n`s`, `m`, `h`) will now be rejected by the API server. To stimulate sane\nconfigurations, the units `ns`, `us` and `µs` can no longer be configured, nor\ncan `h` be set for fields defining a timeout value.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 997,
                  "startColumn": 26,
                  "endLine": 997,
                  "endColumn": 35,
                  "snippet": {
                    "text": "timeouts.\n\nImprovements:\n- Allow 'h' in HelmRelease timeout field\n  [#559](https://github.com/fluxcd/helm-controller/pull/559)\n- Use Flux Event API v1beta1\n  [#557](https://github.com/fluxcd/helm-controller/pull/557)\n",
                    "rendered": {
                      "text": "timeouts.\n\nImprovements:\n- Allow 'h' in HelmRelease timeout field\n  [#559](https://github.com/fluxcd/helm-controller/pull/559)\n- Use Flux Event API v1beta1\n  [#557](https://github.com/fluxcd/helm-controller/pull/557)\n",
                      "markdown": "`timeouts.\n\nImprovements:\n- Allow 'h' in HelmRelease timeout field\n  [#559](https://github.com/fluxcd/helm-controller/pull/559)\n- Use Flux Event API v1beta1\n  [#557](https://github.com/fluxcd/helm-controller/pull/557)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 980,
                  "startColumn": 49,
                  "endLine": 981,
                  "snippet": {
                    "text": "Improvements:\n- Disable caching of Secrets and ConfigMaps\n  [#513](https://github.com/fluxcd/helm-controller/513)\n- Allow overriding ctrl manager graceful shutdown timeout\n  [#570](https://github.com/fluxcd/helm-controller/pull/570)\n  [#582](https://github.com/fluxcd/helm-controller/pull/582)\n- helm: Update SDK to v3.10.3\n  [#577](https://github.com/fluxcd/helm-controller/pull/577)\n",
                    "rendered": {
                      "text": "Improvements:\n- Disable caching of Secrets and ConfigMaps\n  [#513](https://github.com/fluxcd/helm-controller/513)\n- Allow overriding ctrl manager graceful shutdown timeout\n  [#570](https://github.com/fluxcd/helm-controller/pull/570)\n  [#582](https://github.com/fluxcd/helm-controller/pull/582)\n- helm: Update SDK to v3.10.3\n  [#577](https://github.com/fluxcd/helm-controller/pull/577)\n",
                      "markdown": "`Improvements:\n- Disable caching of Secrets and ConfigMaps\n  [#513](https://github.com/fluxcd/helm-controller/513)\n- Allow overriding ctrl manager graceful shutdown timeout\n  [#570](https://github.com/fluxcd/helm-controller/pull/570)\n  [#582](https://github.com/fluxcd/helm-controller/pull/582)\n- helm: Update SDK to v3.10.3\n  [#577](https://github.com/fluxcd/helm-controller/pull/577)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 974,
                  "startColumn": 17,
                  "endLine": 974,
                  "endColumn": 25,
                  "snippet": {
                    "text": "  [#565](https://github.com/fluxcd/helm-controller/pull/565)\n- Minor typo in doc\n  [#566](https://github.com/fluxcd/helm-controller/pull/566)\n- fuzz: Use build script from upstream and fix fuzzers\n  [#578](https://github.com/fluxcd/helm-controller/pull/578)\n\nImprovements:\n",
                    "rendered": {
                      "text": "  [#565](https://github.com/fluxcd/helm-controller/pull/565)\n- Minor typo in doc\n  [#566](https://github.com/fluxcd/helm-controller/pull/566)\n- fuzz: Use build script from upstream and fix fuzzers\n  [#578](https://github.com/fluxcd/helm-controller/pull/578)\n\nImprovements:\n",
                      "markdown": "`  [#565](https://github.com/fluxcd/helm-controller/pull/565)\n- Minor typo in doc\n  [#566](https://github.com/fluxcd/helm-controller/pull/566)\n- fuzz: Use build script from upstream and fix fuzzers\n  [#578](https://github.com/fluxcd/helm-controller/pull/578)\n\nImprovements:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 880,
                  "startColumn": 10,
                  "endLine": 880,
                  "endColumn": 19,
                  "snippet": {
                    "text": "  [#617](https://github.com/fluxcd/helm-controller/pull/617)\n- helm: propagate context to install and upgrade\n  [#620](https://github.com/fluxcd/helm-controller/pull/620)\n- Check if Service Account exists before uninstalling release\n  [#623](https://github.com/fluxcd/helm-controller/pull/623)\n- runner: configure Helm action cfg log levels\n  [#625](https://github.com/fluxcd/helm-controller/pull/625)\n",
                    "rendered": {
                      "text": "  [#617](https://github.com/fluxcd/helm-controller/pull/617)\n- helm: propagate context to install and upgrade\n  [#620](https://github.com/fluxcd/helm-controller/pull/620)\n- Check if Service Account exists before uninstalling release\n  [#623](https://github.com/fluxcd/helm-controller/pull/623)\n- runner: configure Helm action cfg log levels\n  [#625](https://github.com/fluxcd/helm-controller/pull/625)\n",
                      "markdown": "`  [#617](https://github.com/fluxcd/helm-controller/pull/617)\n- helm: propagate context to install and upgrade\n  [#620](https://github.com/fluxcd/helm-controller/pull/620)\n- Check if Service Account exists before uninstalling release\n  [#623](https://github.com/fluxcd/helm-controller/pull/623)\n- runner: configure Helm action cfg log levels\n  [#625](https://github.com/fluxcd/helm-controller/pull/625)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 812,
                  "startColumn": 68,
                  "endLine": 813,
                  "snippet": {
                    "text": "\nThe controller now supports experimental drift detection, which can be enabled\nby configuring the Deployment with `--feature-gates=DetectDrift=true`. This\nfeature is still in its early stages, and lacks certain UX features. Diff\noutput is currently available in the controller logs when the `--log-level=debug`\nflag is set.\n\nThe feature itself makes use of the same approach as kustomize-controller to\n",
                    "rendered": {
                      "text": "\nThe controller now supports experimental drift detection, which can be enabled\nby configuring the Deployment with `--feature-gates=DetectDrift=true`. This\nfeature is still in its early stages, and lacks certain UX features. Diff\noutput is currently available in the controller logs when the `--log-level=debug`\nflag is set.\n\nThe feature itself makes use of the same approach as kustomize-controller to\n",
                      "markdown": "`\nThe controller now supports experimental drift detection, which can be enabled\nby configuring the Deployment with `--feature-gates=DetectDrift=true`. This\nfeature is still in its early stages, and lacks certain UX features. Diff\noutput is currently available in the controller logs when the `--log-level=debug`\nflag is set.\n\nThe feature itself makes use of the same approach as kustomize-controller to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 790,
                  "startColumn": 31,
                  "endLine": 790,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\n**Release date:** 2023-03-10\n\nThis prerelease extends the OOM watch feature introduced in `v0.31.0` with\nsupport for automatic detection of cgroup v1 paths, and flags to configure\nalternative paths using `--oom-watch-max-memory-path` and\n`--oom-watch-current-memory-path`.\n",
                    "rendered": {
                      "text": "\n**Release date:** 2023-03-10\n\nThis prerelease extends the OOM watch feature introduced in `v0.31.0` with\nsupport for automatic detection of cgroup v1 paths, and flags to configure\nalternative paths using `--oom-watch-max-memory-path` and\n`--oom-watch-current-memory-path`.\n",
                      "markdown": "`\n**Release date:** 2023-03-10\n\nThis prerelease extends the OOM watch feature introduced in `v0.31.0` with\nsupport for automatic detection of cgroup v1 paths, and flags to configure\nalternative paths using `--oom-watch-max-memory-path` and\n`--oom-watch-current-memory-path`.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 667,
                  "startColumn": 30,
                  "endLine": 667,
                  "endColumn": 36,
                  "snippet": {
                    "text": "routine leaks.\n\nFixes:\n- Fix nil pointer deref during diff attempt\n  [#672](https://github.com/fluxcd/helm-controller/pull/672)\n- Update Helm to v3.11.3\n  [#673](https://github.com/fluxcd/helm-controller/pull/673)\n",
                    "rendered": {
                      "text": "routine leaks.\n\nFixes:\n- Fix nil pointer deref during diff attempt\n  [#672](https://github.com/fluxcd/helm-controller/pull/672)\n- Update Helm to v3.11.3\n  [#673](https://github.com/fluxcd/helm-controller/pull/673)\n",
                      "markdown": "`routine leaks.\n\nFixes:\n- Fix nil pointer deref during diff attempt\n  [#672](https://github.com/fluxcd/helm-controller/pull/672)\n- Update Helm to v3.11.3\n  [#673](https://github.com/fluxcd/helm-controller/pull/673)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 647,
                  "startColumn": 8,
                  "endLine": 647,
                  "endColumn": 14,
                  "snippet": {
                    "text": "CVE-2023-2253, and the controller base image has been updated to Alpine 3.18.\n\nImprovements:\n- Stable sort release values by key\n  [#684](https://github.com/fluxcd/helm-controller/pull/684)\n- Update Alpine to 3.18\n  [#685](https://github.com/fluxcd/helm-controller/pull/685)\n",
                    "rendered": {
                      "text": "CVE-2023-2253, and the controller base image has been updated to Alpine 3.18.\n\nImprovements:\n- Stable sort release values by key\n  [#684](https://github.com/fluxcd/helm-controller/pull/684)\n- Update Alpine to 3.18\n  [#685](https://github.com/fluxcd/helm-controller/pull/685)\n",
                      "markdown": "`CVE-2023-2253, and the controller base image has been updated to Alpine 3.18.\n\nImprovements:\n- Stable sort release values by key\n  [#684](https://github.com/fluxcd/helm-controller/pull/684)\n- Update Alpine to 3.18\n  [#685](https://github.com/fluxcd/helm-controller/pull/685)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 488,
                  "startColumn": 46,
                  "endLine": 488,
                  "endColumn": 55,
                  "snippet": {
                    "text": "a failure event would not include Helm's Kubernetes client logs, making it more\ndifficult to reason about e.g. timeout errors.\n\nIn addition, it contains a fix for the default service account used for the\n(experimental) differ, and dependency updates of several dependencies.\n\nFixes:\n",
                    "rendered": {
                      "text": "a failure event would not include Helm's Kubernetes client logs, making it more\ndifficult to reason about e.g. timeout errors.\n\nIn addition, it contains a fix for the default service account used for the\n(experimental) differ, and dependency updates of several dependencies.\n\nFixes:\n",
                      "markdown": "`a failure event would not include Helm's Kubernetes client logs, making it more\ndifficult to reason about e.g. timeout errors.\n\nIn addition, it contains a fix for the default service account used for the\n(experimental) differ, and dependency updates of several dependencies.\n\nFixes:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 486,
                  "startColumn": 30,
                  "endLine": 486,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\nThis prerelease addresses a regression in which the captured Helm logs used in\na failure event would not include Helm's Kubernetes client logs, making it more\ndifficult to reason about e.g. timeout errors.\n\nIn addition, it contains a fix for the default service account used for the\n(experimental) differ, and dependency updates of several dependencies.\n",
                    "rendered": {
                      "text": "\nThis prerelease addresses a regression in which the captured Helm logs used in\na failure event would not include Helm's Kubernetes client logs, making it more\ndifficult to reason about e.g. timeout errors.\n\nIn addition, it contains a fix for the default service account used for the\n(experimental) differ, and dependency updates of several dependencies.\n",
                      "markdown": "`\nThis prerelease addresses a regression in which the captured Helm logs used in\na failure event would not include Helm's Kubernetes client logs, making it more\ndifficult to reason about e.g. timeout errors.\n\nIn addition, it contains a fix for the default service account used for the\n(experimental) differ, and dependency updates of several dependencies.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 357,
                  "startColumn": 35,
                  "endLine": 357,
                  "endColumn": 41,
                  "snippet": {
                    "text": "- A `.status.lastAttemptedReleaseAction` field has been introduced to accurately\n  determine the active remediation strategy.\n- The `.status.lastHandledForceAt` and `.status.lastHandledResetAt` fields have\n  been introduced to track the last time a force upgrade or reset was handled.\n  This to accomadate newly introduced annotations to force upgrades and resets.\n- The `.status.lastAppliedRevision` and `.status.lastReleaseRevision` fields\n  have been deprecated in favor of `.status.history`.\n",
                    "rendered": {
                      "text": "- A `.status.lastAttemptedReleaseAction` field has been introduced to accurately\n  determine the active remediation strategy.\n- The `.status.lastHandledForceAt` and `.status.lastHandledResetAt` fields have\n  been introduced to track the last time a force upgrade or reset was handled.\n  This to accomadate newly introduced annotations to force upgrades and resets.\n- The `.status.lastAppliedRevision` and `.status.lastReleaseRevision` fields\n  have been deprecated in favor of `.status.history`.\n",
                      "markdown": "`- A `.status.lastAttemptedReleaseAction` field has been introduced to accurately\n  determine the active remediation strategy.\n- The `.status.lastHandledForceAt` and `.status.lastHandledResetAt` fields have\n  been introduced to track the last time a force upgrade or reset was handled.\n  This to accomadate newly introduced annotations to force upgrades and resets.\n- The `.status.lastAppliedRevision` and `.status.lastReleaseRevision` fields\n  have been deprecated in favor of `.status.history`.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 269,
                  "startColumn": 8,
                  "endLine": 269,
                  "endColumn": 15,
                  "snippet": {
                    "text": "## 0.37.2\n\nThis prerelease fixes a bug that resulted in the controller not being able to\nproperly watch HelmRelease resources with specific labels.\n\nFixes:\n- Properly configure namespace selector\n",
                    "rendered": {
                      "text": "## 0.37.2\n\nThis prerelease fixes a bug that resulted in the controller not being able to\nproperly watch HelmRelease resources with specific labels.\n\nFixes:\n- Properly configure namespace selector\n",
                      "markdown": "`## 0.37.2\n\nThis prerelease fixes a bug that resulted in the controller not being able to\nproperly watch HelmRelease resources with specific labels.\n\nFixes:\n- Properly configure namespace selector\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 181,
                  "startColumn": 37,
                  "endLine": 181,
                  "endColumn": 42,
                  "snippet": {
                    "text": "2. Upgrade the controller and CRDs to v1.0.0 on the cluster using Flux v2.3 release.\n   Note that helm-controller v1.0.0 requires source-controller v1.3.0.\n3. Update the `apiVersion` field of the `HelmRelease` resources to `helm.toolkit.fluxcd.io/v2`,\n   commit and push the changes to the Git repository.\n\nBumping the API version in manifests can be done gradually.\nIt is advised to not delay this procedure as the beta versions will be removed after 6 months.\n",
                    "rendered": {
                      "text": "2. Upgrade the controller and CRDs to v1.0.0 on the cluster using Flux v2.3 release.\n   Note that helm-controller v1.0.0 requires source-controller v1.3.0.\n3. Update the `apiVersion` field of the `HelmRelease` resources to `helm.toolkit.fluxcd.io/v2`,\n   commit and push the changes to the Git repository.\n\nBumping the API version in manifests can be done gradually.\nIt is advised to not delay this procedure as the beta versions will be removed after 6 months.\n",
                      "markdown": "`2. Upgrade the controller and CRDs to v1.0.0 on the cluster using Flux v2.3 release.\n   Note that helm-controller v1.0.0 requires source-controller v1.3.0.\n3. Update the `apiVersion` field of the `HelmRelease` resources to `helm.toolkit.fluxcd.io/v2`,\n   commit and push the changes to the Git repository.\n\nBumping the API version in manifests can be done gradually.\nIt is advised to not delay this procedure as the beta versions will be removed after 6 months.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 177,
                  "startColumn": 37,
                  "endLine": 177,
                  "endColumn": 42,
                  "snippet": {
                    "text": "e upgrading the controller, ensure that the `HelmRelease` v2beta2 manifests stored in Git\n   are not using the deprecated fields. Search for `valuesFile` and replace it with `valuesFiles`,\n   replace `patchesJson6902` and `patchesStrategicMerge` with `patches`. \n   Commit and push the changes to the Git repository, then wait for Flux to reconcile the changes.\n2. Upgrade the controller and CRDs to v1.0.0 on the cluster using Flux v2.3 release.\n   Note that helm-controller v1.0.0 requires source-controller v1.3.0.\n3. Update the `apiVersion` field of the `HelmRelease` resources to `helm.toolkit.fluxcd",
                    "rendered": {
                      "text": "e upgrading the controller, ensure that the `HelmRelease` v2beta2 manifests stored in Git\n   are not using the deprecated fields. Search for `valuesFile` and replace it with `valuesFiles`,\n   replace `patchesJson6902` and `patchesStrategicMerge` with `patches`. \n   Commit and push the changes to the Git repository, then wait for Flux to reconcile the changes.\n2. Upgrade the controller and CRDs to v1.0.0 on the cluster using Flux v2.3 release.\n   Note that helm-controller v1.0.0 requires source-controller v1.3.0.\n3. Update the `apiVersion` field of the `HelmRelease` resources to `helm.toolkit.fluxcd",
                      "markdown": "`e upgrading the controller, ensure that the `HelmRelease` v2beta2 manifests stored in Git\n   are not using the deprecated fields. Search for `valuesFile` and replace it with `valuesFiles`,\n   replace `patchesJson6902` and `patchesStrategicMerge` with `patches`. \n   Commit and push the changes to the Git repository, then wait for Flux to reconcile the changes.\n2. Upgrade the controller and CRDs to v1.0.0 on the cluster using Flux v2.3 release.\n   Note that helm-controller v1.0.0 requires source-controller v1.3.0.\n3. Update the `apiVersion` field of the `HelmRelease` resources to `helm.toolkit.fluxcd`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 174,
                  "startColumn": 93,
                  "endLine": 175,
                  "snippet": {
                    "text": "\n#### Upgrade procedure\n\n1. Before upgrading the controller, ensure that the `HelmRelease` v2beta2 manifests stored in Git\n   are not using the deprecated fields. Search for `valuesFile` and replace it with `valuesFiles`,\n   replace `patchesJson6902` and `patchesStrategicMerge` with `patches`. \n   Commit and push the changes to the Git repository, then wait for Flux to reconcile the changes.\n2. Upgrade the controller and CRDs to v1.0.0 on the cluster using Flux v2.3 release.\n",
                    "rendered": {
                      "text": "\n#### Upgrade procedure\n\n1. Before upgrading the controller, ensure that the `HelmRelease` v2beta2 manifests stored in Git\n   are not using the deprecated fields. Search for `valuesFile` and replace it with `valuesFiles`,\n   replace `patchesJson6902` and `patchesStrategicMerge` with `patches`. \n   Commit and push the changes to the Git repository, then wait for Flux to reconcile the changes.\n2. Upgrade the controller and CRDs to v1.0.0 on the cluster using Flux v2.3 release.\n",
                      "markdown": "`\n#### Upgrade procedure\n\n1. Before upgrading the controller, ensure that the `HelmRelease` v2beta2 manifests stored in Git\n   are not using the deprecated fields. Search for `valuesFile` and replace it with `valuesFiles`,\n   replace `patchesJson6902` and `patchesStrategicMerge` with `patches`. \n   Commit and push the changes to the Git repository, then wait for Flux to reconcile the changes.\n2. Upgrade the controller and CRDs to v1.0.0 on the cluster using Flux v2.3 release.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 1,
                  "endLine": 201,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t-v \"$(BUILD_DIR)/fuzz/out\":/out \\\n\t\t-v \"$(REPOSITORY_ROOT)/tests/fuzz/oss_fuzz_run.sh\":/runner.sh \\\n\t\tlocal-fuzzing:latest \\\n\t\tbash -c \"/runner.sh\"\n\n# Run fuzz tests for the duration set in FUZZ_TIME.\nfuzz-native: \n",
                    "rendered": {
                      "text": "\t\t-v \"$(BUILD_DIR)/fuzz/out\":/out \\\n\t\t-v \"$(REPOSITORY_ROOT)/tests/fuzz/oss_fuzz_run.sh\":/runner.sh \\\n\t\tlocal-fuzzing:latest \\\n\t\tbash -c \"/runner.sh\"\n\n# Run fuzz tests for the duration set in FUZZ_TIME.\nfuzz-native: \n",
                      "markdown": "`\t\t-v \"$(BUILD_DIR)/fuzz/out\":/out \\\n\t\t-v \"$(REPOSITORY_ROOT)/tests/fuzz/oss_fuzz_run.sh\":/runner.sh \\\n\t\tlocal-fuzzing:latest \\\n\t\tbash -c \"/runner.sh\"\n\n# Run fuzz tests for the duration set in FUZZ_TIME.\nfuzz-native: \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 201,
                  "startColumn": 1,
                  "endLine": 201,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t-v \"$(BUILD_DIR)/fuzz/out\":/out \\\n\t\t-v \"$(REPOSITORY_ROOT)/tests/fuzz/oss_fuzz_run.sh\":/runner.sh \\\n\t\tlocal-fuzzing:latest \\\n\t\tbash -c \"/runner.sh\"\n\n# Run fuzz tests for the duration set in FUZZ_TIME.\nfuzz-native: \n",
                    "rendered": {
                      "text": "\t\t-v \"$(BUILD_DIR)/fuzz/out\":/out \\\n\t\t-v \"$(REPOSITORY_ROOT)/tests/fuzz/oss_fuzz_run.sh\":/runner.sh \\\n\t\tlocal-fuzzing:latest \\\n\t\tbash -c \"/runner.sh\"\n\n# Run fuzz tests for the duration set in FUZZ_TIME.\nfuzz-native: \n",
                      "markdown": "`\t\t-v \"$(BUILD_DIR)/fuzz/out\":/out \\\n\t\t-v \"$(REPOSITORY_ROOT)/tests/fuzz/oss_fuzz_run.sh\":/runner.sh \\\n\t\tlocal-fuzzing:latest \\\n\t\tbash -c \"/runner.sh\"\n\n# Run fuzz tests for the duration set in FUZZ_TIME.\nfuzz-native: \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 197,
                  "endLine": 197,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n# Run each fuzzer once to ensure they will work when executed by oss-fuzz.\nfuzz-smoketest: fuzz-build\n\tdocker run --rm \\\n\t\t-v \"$(BUILD_DIR)/fuzz/out\":/out \\\n\t\t-v \"$(REPOSITORY_ROOT)/tests/fuzz/oss_fuzz_run.sh\":/runner.sh \\\n\t\tlocal-fuzzing:latest \\\n",
                    "rendered": {
                      "text": "\n# Run each fuzzer once to ensure they will work when executed by oss-fuzz.\nfuzz-smoketest: fuzz-build\n\tdocker run --rm \\\n\t\t-v \"$(BUILD_DIR)/fuzz/out\":/out \\\n\t\t-v \"$(REPOSITORY_ROOT)/tests/fuzz/oss_fuzz_run.sh\":/runner.sh \\\n\t\tlocal-fuzzing:latest \\\n",
                      "markdown": "`\n# Run each fuzzer once to ensure they will work when executed by oss-fuzz.\nfuzz-smoketest: fuzz-build\n\tdocker run --rm \\\n\t\t-v \"$(BUILD_DIR)/fuzz/out\":/out \\\n\t\t-v \"$(REPOSITORY_ROOT)/tests/fuzz/oss_fuzz_run.sh\":/runner.sh \\\n\t\tlocal-fuzzing:latest \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 191,
                  "startColumn": 16,
                  "endLine": 191,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\tdocker run --rm \\\n\t\t-e FUZZING_LANGUAGE=go -e SANITIZER=address \\\n\t\t-e CIFUZZ_DEBUG='True' -e OSS_FUZZ_PROJECT_NAME=fluxcd \\\n\t\t-v \"$(shell go env GOMODCACHE):/root/go/pkg/mod\" \\\n\t\t-v \"$(BUILD_DIR)/fuzz/out\":/out \\\n\t\tlocal-fuzzing:latest\n\n",
                    "rendered": {
                      "text": "\tdocker run --rm \\\n\t\t-e FUZZING_LANGUAGE=go -e SANITIZER=address \\\n\t\t-e CIFUZZ_DEBUG='True' -e OSS_FUZZ_PROJECT_NAME=fluxcd \\\n\t\t-v \"$(shell go env GOMODCACHE):/root/go/pkg/mod\" \\\n\t\t-v \"$(BUILD_DIR)/fuzz/out\":/out \\\n\t\tlocal-fuzzing:latest\n\n",
                      "markdown": "`\tdocker run --rm \\\n\t\t-e FUZZING_LANGUAGE=go -e SANITIZER=address \\\n\t\t-e CIFUZZ_DEBUG='True' -e OSS_FUZZ_PROJECT_NAME=fluxcd \\\n\t\t-v \"$(shell go env GOMODCACHE):/root/go/pkg/mod\" \\\n\t\t-v \"$(BUILD_DIR)/fuzz/out\":/out \\\n\t\tlocal-fuzzing:latest\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 188,
                  "endLine": 188,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\tmkdir -p $(BUILD_DIR)/fuzz/out/\n\n\tdocker build . --pull --tag local-fuzzing:latest -f tests/fuzz/Dockerfile.builder\n\tdocker run --rm \\\n\t\t-e FUZZING_LANGUAGE=go -e SANITIZER=address \\\n\t\t-e CIFUZZ_DEBUG='True' -e OSS_FUZZ_PROJECT_NAME=fluxcd \\\n\t\t-v \"$(shell go env GOMODCACHE):/root/go/pkg/mod\" \\\n",
                    "rendered": {
                      "text": "\tmkdir -p $(BUILD_DIR)/fuzz/out/\n\n\tdocker build . --pull --tag local-fuzzing:latest -f tests/fuzz/Dockerfile.builder\n\tdocker run --rm \\\n\t\t-e FUZZING_LANGUAGE=go -e SANITIZER=address \\\n\t\t-e CIFUZZ_DEBUG='True' -e OSS_FUZZ_PROJECT_NAME=fluxcd \\\n\t\t-v \"$(shell go env GOMODCACHE):/root/go/pkg/mod\" \\\n",
                      "markdown": "`\tmkdir -p $(BUILD_DIR)/fuzz/out/\n\n\tdocker build . --pull --tag local-fuzzing:latest -f tests/fuzz/Dockerfile.builder\n\tdocker run --rm \\\n\t\t-e FUZZING_LANGUAGE=go -e SANITIZER=address \\\n\t\t-e CIFUZZ_DEBUG='True' -e OSS_FUZZ_PROJECT_NAME=fluxcd \\\n\t\t-v \"$(shell go env GOMODCACHE):/root/go/pkg/mod\" \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 187,
                  "endLine": 187,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\trm -rf $(BUILD_DIR)/fuzz/\n\tmkdir -p $(BUILD_DIR)/fuzz/out/\n\n\tdocker build . --pull --tag local-fuzzing:latest -f tests/fuzz/Dockerfile.builder\n\tdocker run --rm \\\n\t\t-e FUZZING_LANGUAGE=go -e SANITIZER=address \\\n\t\t-e CIFUZZ_DEBUG='True' -e OSS_FUZZ_PROJECT_NAME=fluxcd \\\n",
                    "rendered": {
                      "text": "\trm -rf $(BUILD_DIR)/fuzz/\n\tmkdir -p $(BUILD_DIR)/fuzz/out/\n\n\tdocker build . --pull --tag local-fuzzing:latest -f tests/fuzz/Dockerfile.builder\n\tdocker run --rm \\\n\t\t-e FUZZING_LANGUAGE=go -e SANITIZER=address \\\n\t\t-e CIFUZZ_DEBUG='True' -e OSS_FUZZ_PROJECT_NAME=fluxcd \\\n",
                      "markdown": "`\trm -rf $(BUILD_DIR)/fuzz/\n\tmkdir -p $(BUILD_DIR)/fuzz/out/\n\n\tdocker build . --pull --tag local-fuzzing:latest -f tests/fuzz/Dockerfile.builder\n\tdocker run --rm \\\n\t\t-e FUZZING_LANGUAGE=go -e SANITIZER=address \\\n\t\t-e CIFUZZ_DEBUG='True' -e OSS_FUZZ_PROJECT_NAME=fluxcd \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 1,
                  "endLine": 151,
                  "endColumn": 7,
                  "snippet": {
                    "text": "controller-gen: ## Download controller-gen locally if necessary.\n\t$(call go-install-tool,$(CONTROLLER_GEN),sigs.k8s.io/controller-tools/cmd/controller-gen@$(CONTROLLER_GEN_VERSION))\n\n# Find or download gen-crd-api-reference-docs\nGEN_CRD_API_REFERENCE_DOCS = $(GOBIN)/gen-crd-api-reference-docs\n.PHONY: gen-crd-api-reference-docs\ngen-crd-api-reference-docs: ## Download gen-crd-api-reference-docs locally if necessary\n",
                    "rendered": {
                      "text": "controller-gen: ## Download controller-gen locally if necessary.\n\t$(call go-install-tool,$(CONTROLLER_GEN),sigs.k8s.io/controller-tools/cmd/controller-gen@$(CONTROLLER_GEN_VERSION))\n\n# Find or download gen-crd-api-reference-docs\nGEN_CRD_API_REFERENCE_DOCS = $(GOBIN)/gen-crd-api-reference-docs\n.PHONY: gen-crd-api-reference-docs\ngen-crd-api-reference-docs: ## Download gen-crd-api-reference-docs locally if necessary\n",
                      "markdown": "`controller-gen: ## Download controller-gen locally if necessary.\n\t$(call go-install-tool,$(CONTROLLER_GEN),sigs.k8s.io/controller-tools/cmd/controller-gen@$(CONTROLLER_GEN_VERSION))\n\n# Find or download gen-crd-api-reference-docs\nGEN_CRD_API_REFERENCE_DOCS = $(GOBIN)/gen-crd-api-reference-docs\n.PHONY: gen-crd-api-reference-docs\ngen-crd-api-reference-docs: ## Download gen-crd-api-reference-docs locally if necessary\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 1,
                  "endLine": 145,
                  "endColumn": 7,
                  "snippet": {
                    "text": "cleanup-crd-deps:\n\trm -f $(HELMCHART_SOURCE_CRD)\n\n# Find or download controller-gen\nCONTROLLER_GEN = $(GOBIN)/controller-gen\n.PHONY: controller-gen\ncontroller-gen: ## Download controller-gen locally if necessary.\n",
                    "rendered": {
                      "text": "cleanup-crd-deps:\n\trm -f $(HELMCHART_SOURCE_CRD)\n\n# Find or download controller-gen\nCONTROLLER_GEN = $(GOBIN)/controller-gen\n.PHONY: controller-gen\ncontroller-gen: ## Download controller-gen locally if necessary.\n",
                      "markdown": "`cleanup-crd-deps:\n\trm -f $(HELMCHART_SOURCE_CRD)\n\n# Find or download controller-gen\nCONTROLLER_GEN = $(GOBIN)/controller-gen\n.PHONY: controller-gen\ncontroller-gen: ## Download controller-gen locally if necessary.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 136,
                  "endLine": 136,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\ttouch $(SOURCE_CRD_VER)\n\n$(HELMCHART_SOURCE_CRD):\n\tcurl -s https://raw.githubusercontent.com/fluxcd/source-controller/${SOURCE_VER}/config/crd/bases/source.toolkit.fluxcd.io_helmcharts.yaml > $(HELMCHART_SOURCE_CRD)\n\n# Download the CRDs the controller depends on\ndownload-crd-deps: $(SOURCE_CRD_VER) $(HELMCHART_SOURCE_CRD)\n",
                    "rendered": {
                      "text": "\ttouch $(SOURCE_CRD_VER)\n\n$(HELMCHART_SOURCE_CRD):\n\tcurl -s https://raw.githubusercontent.com/fluxcd/source-controller/${SOURCE_VER}/config/crd/bases/source.toolkit.fluxcd.io_helmcharts.yaml > $(HELMCHART_SOURCE_CRD)\n\n# Download the CRDs the controller depends on\ndownload-crd-deps: $(SOURCE_CRD_VER) $(HELMCHART_SOURCE_CRD)\n",
                      "markdown": "`\ttouch $(SOURCE_CRD_VER)\n\n$(HELMCHART_SOURCE_CRD):\n\tcurl -s https://raw.githubusercontent.com/fluxcd/source-controller/${SOURCE_VER}/config/crd/bases/source.toolkit.fluxcd.io_helmcharts.yaml > $(HELMCHART_SOURCE_CRD)\n\n# Download the CRDs the controller depends on\ndownload-crd-deps: $(SOURCE_CRD_VER) $(HELMCHART_SOURCE_CRD)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 125,
                  "endLine": 125,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n# Push the docker image\ndocker-push:\n\tdocker push ${IMG}\n\n# Delete previously downloaded CRDs and record the new version of the source\n# CRDs.\n",
                    "rendered": {
                      "text": "\n# Push the docker image\ndocker-push:\n\tdocker push ${IMG}\n\n# Delete previously downloaded CRDs and record the new version of the source\n# CRDs.\n",
                      "markdown": "`\n# Push the docker image\ndocker-push:\n\tdocker push ${IMG}\n\n# Delete previously downloaded CRDs and record the new version of the source\n# CRDs.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 10,
                  "endLine": 123,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t-t ${IMG} \\\n\t${BUILD_ARGS} .\n\n# Push the docker image\ndocker-push:\n\tdocker push ${IMG}\n\n",
                    "rendered": {
                      "text": "\t-t ${IMG} \\\n\t${BUILD_ARGS} .\n\n# Push the docker image\ndocker-push:\n\tdocker push ${IMG}\n\n",
                      "markdown": "`\t-t ${IMG} \\\n\t${BUILD_ARGS} .\n\n# Push the docker image\ndocker-push:\n\tdocker push ${IMG}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 118,
                  "endLine": 118,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n# Build the docker image\ndocker-build:\n\tdocker buildx build \\\n\t--platform=$(BUILD_PLATFORMS) \\\n\t-t ${IMG} \\\n\t${BUILD_ARGS} .\n",
                    "rendered": {
                      "text": "\n# Build the docker image\ndocker-build:\n\tdocker buildx build \\\n\t--platform=$(BUILD_PLATFORMS) \\\n\t-t ${IMG} \\\n\t${BUILD_ARGS} .\n",
                      "markdown": "`\n# Build the docker image\ndocker-build:\n\tdocker buildx build \\\n\t--platform=$(BUILD_PLATFORMS) \\\n\t-t ${IMG} \\\n\t${BUILD_ARGS} .\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 11,
                  "endLine": 116,
                  "endColumn": 19,
                  "snippet": {
                    "text": "generate: controller-gen\n\tcd api; $(CONTROLLER_GEN) object:headerFile=\"../hack/boilerplate.go.txt\" paths=\"./...\"\n\n# Build the docker image\ndocker-build:\n\tdocker buildx build \\\n\t--platform=$(BUILD_PLATFORMS) \\\n",
                    "rendered": {
                      "text": "generate: controller-gen\n\tcd api; $(CONTROLLER_GEN) object:headerFile=\"../hack/boilerplate.go.txt\" paths=\"./...\"\n\n# Build the docker image\ndocker-build:\n\tdocker buildx build \\\n\t--platform=$(BUILD_PLATFORMS) \\\n",
                      "markdown": "`generate: controller-gen\n\tcd api; $(CONTROLLER_GEN) object:headerFile=\"../hack/boilerplate.go.txt\" paths=\"./...\"\n\n# Build the docker image\ndocker-build:\n\tdocker buildx build \\\n\t--platform=$(BUILD_PLATFORMS) \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 11,
                  "endLine": 105,
                  "endColumn": 16,
                  "snippet": {
                    "text": "# Run go fmt against code\nfmt:\n\tgo fmt ./...\n\tcd api; go fmt ./...\n\n# Run go vet against code\nvet:\n",
                    "rendered": {
                      "text": "# Run go fmt against code\nfmt:\n\tgo fmt ./...\n\tcd api; go fmt ./...\n\n# Run go vet against code\nvet:\n",
                      "markdown": "`# Run go fmt against code\nfmt:\n\tgo fmt ./...\n\tcd api; go fmt ./...\n\n# Run go vet against code\nvet:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 3,
                  "endLine": 104,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n# Run go fmt against code\nfmt:\n\tgo fmt ./...\n\tcd api; go fmt ./...\n\n# Run go vet against code\n",
                    "rendered": {
                      "text": "\n# Run go fmt against code\nfmt:\n\tgo fmt ./...\n\tcd api; go fmt ./...\n\n# Run go vet against code\n",
                      "markdown": "`\n# Run go fmt against code\nfmt:\n\tgo fmt ./...\n\tcd api; go fmt ./...\n\n# Run go vet against code\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 8,
                  "endLine": 102,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\tcd api; rm -f go.sum; go mod tidy -compat=1.22\n\trm -f go.sum; go mod tidy -compat=1.22\n\n# Run go fmt against code\nfmt:\n\tgo fmt ./...\n\tcd api; go fmt ./...\n",
                    "rendered": {
                      "text": "\tcd api; rm -f go.sum; go mod tidy -compat=1.22\n\trm -f go.sum; go mod tidy -compat=1.22\n\n# Run go fmt against code\nfmt:\n\tgo fmt ./...\n\tcd api; go fmt ./...\n",
                      "markdown": "`\tcd api; rm -f go.sum; go mod tidy -compat=1.22\n\trm -f go.sum; go mod tidy -compat=1.22\n\n# Run go fmt against code\nfmt:\n\tgo fmt ./...\n\tcd api; go fmt ./...\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 23,
                  "endLine": 83,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n# Delete dev deployment and CRDs\ndev-cleanup: manifests\n\tmkdir -p config/dev && cp config/default/* config/dev\n\tcd config/dev && kustomize edit set image fluxcd/helm-controller=${IMG}\n\tkustomize build config/dev | kubectl delete -f -\n\trm -rf config/dev\n",
                    "rendered": {
                      "text": "\n# Delete dev deployment and CRDs\ndev-cleanup: manifests\n\tmkdir -p config/dev && cp config/default/* config/dev\n\tcd config/dev && kustomize edit set image fluxcd/helm-controller=${IMG}\n\tkustomize build config/dev | kubectl delete -f -\n\trm -rf config/dev\n",
                      "markdown": "`\n# Delete dev deployment and CRDs\ndev-cleanup: manifests\n\tmkdir -p config/dev && cp config/default/* config/dev\n\tcd config/dev && kustomize edit set image fluxcd/helm-controller=${IMG}\n\tkustomize build config/dev | kubectl delete -f -\n\trm -rf config/dev\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 23,
                  "endLine": 76,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n# Deploy controller dev image in the configured Kubernetes cluster in ~/.kube/config\ndev-deploy: manifests\n\tmkdir -p config/dev && cp config/default/* config/dev\n\tcd config/dev && kustomize edit set image fluxcd/helm-controller=${IMG}\n\tkustomize build config/dev | kubectl apply -f -\n\trm -rf config/dev\n",
                    "rendered": {
                      "text": "\n# Deploy controller dev image in the configured Kubernetes cluster in ~/.kube/config\ndev-deploy: manifests\n\tmkdir -p config/dev && cp config/default/* config/dev\n\tcd config/dev && kustomize edit set image fluxcd/helm-controller=${IMG}\n\tkustomize build config/dev | kubectl apply -f -\n\trm -rf config/dev\n",
                      "markdown": "`\n# Deploy controller dev image in the configured Kubernetes cluster in ~/.kube/config\ndev-deploy: manifests\n\tmkdir -p config/dev && cp config/default/* config/dev\n\tcd config/dev && kustomize edit set image fluxcd/helm-controller=${IMG}\n\tkustomize build config/dev | kubectl apply -f -\n\trm -rf config/dev\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 13,
                  "endLine": 58,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\tgo build -o $(BUILD_DIR)/bin/manager main.go\n\n# Run against the configured Kubernetes cluster in ~/.kube/config\nrun: generate fmt vet manifests\n\tgo run ./main.go\n\n# Install CRDs into a cluster\n",
                    "rendered": {
                      "text": "\tgo build -o $(BUILD_DIR)/bin/manager main.go\n\n# Run against the configured Kubernetes cluster in ~/.kube/config\nrun: generate fmt vet manifests\n\tgo run ./main.go\n\n# Install CRDs into a cluster\n",
                      "markdown": "`\tgo build -o $(BUILD_DIR)/bin/manager main.go\n\n# Run against the configured Kubernetes cluster in ~/.kube/config\nrun: generate fmt vet manifests\n\tgo run ./main.go\n\n# Install CRDs into a cluster\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 17,
                  "endLine": 54,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\tcd api; go test ./... -coverprofile cover.out\n\n# Build manager binary\nmanager: generate fmt vet\n\tgo build -o $(BUILD_DIR)/bin/manager main.go\n\n# Run against the configured Kubernetes cluster in ~/.kube/config\n",
                    "rendered": {
                      "text": "\tcd api; go test ./... -coverprofile cover.out\n\n# Build manager binary\nmanager: generate fmt vet\n\tgo build -o $(BUILD_DIR)/bin/manager main.go\n\n# Run against the configured Kubernetes cluster in ~/.kube/config\n",
                      "markdown": "`\tcd api; go test ./... -coverprofile cover.out\n\n# Build manager binary\nmanager: generate fmt vet\n\tgo build -o $(BUILD_DIR)/bin/manager main.go\n\n# Run against the configured Kubernetes cluster in ~/.kube/config\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 19,
                  "endLine": 49,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\n# Run tests\nKUBEBUILDER_ASSETS?=\"$(shell $(ENVTEST) --arch=$(ENVTEST_ARCH) use -i $(ENVTEST_KUBERNETES_VERSION) --bin-dir=$(ENVTEST_ASSETS_DIR) -p path)\"\ntest: tidy generate fmt vet manifests api-docs install-envtest download-crd-deps\n\tKUBEBUILDER_ASSETS=$(KUBEBUILDER_ASSETS) go test ./... -coverprofile cover.out\n\tcd api; go test ./... -coverprofile cover.out\n\n",
                    "rendered": {
                      "text": "\n# Run tests\nKUBEBUILDER_ASSETS?=\"$(shell $(ENVTEST) --arch=$(ENVTEST_ARCH) use -i $(ENVTEST_KUBERNETES_VERSION) --bin-dir=$(ENVTEST_ASSETS_DIR) -p path)\"\ntest: tidy generate fmt vet manifests api-docs install-envtest download-crd-deps\n\tKUBEBUILDER_ASSETS=$(KUBEBUILDER_ASSETS) go test ./... -coverprofile cover.out\n\tcd api; go test ./... -coverprofile cover.out\n\n",
                      "markdown": "`\n# Run tests\nKUBEBUILDER_ASSETS?=\"$(shell $(ENVTEST) --arch=$(ENVTEST_ARCH) use -i $(ENVTEST_KUBERNETES_VERSION) --bin-dir=$(ENVTEST_ASSETS_DIR) -p path)\"\ntest: tidy generate fmt vet manifests api-docs install-envtest download-crd-deps\n\tKUBEBUILDER_ASSETS=$(KUBEBUILDER_ASSETS) go test ./... -coverprofile cover.out\n\tcd api; go test ./... -coverprofile cover.out\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 85,
                  "endLine": 35,
                  "endColumn": 90,
                  "snippet": {
                    "text": "\n# Keep a record of the version of the downloaded source CRDs. It is used to\n# detect and download new CRDs when the SOURCE_VER changes.\nSOURCE_VER ?= $(shell go list -m all | grep github.com/fluxcd/source-controller/api | awk '{print $$2}')\nSOURCE_CRD_VER = $(CRD_DEP_ROOT)/.src-crd-$(SOURCE_VER)\n\n# HelmChart source CRD.\n",
                    "rendered": {
                      "text": "\n# Keep a record of the version of the downloaded source CRDs. It is used to\n# detect and download new CRDs when the SOURCE_VER changes.\nSOURCE_VER ?= $(shell go list -m all | grep github.com/fluxcd/source-controller/api | awk '{print $$2}')\nSOURCE_CRD_VER = $(CRD_DEP_ROOT)/.src-crd-$(SOURCE_VER)\n\n# HelmChart source CRD.\n",
                      "markdown": "`\n# Keep a record of the version of the downloaded source CRDs. It is used to\n# detect and download new CRDs when the SOURCE_VER changes.\nSOURCE_VER ?= $(shell go list -m all | grep github.com/fluxcd/source-controller/api | awk '{print $$2}')\nSOURCE_CRD_VER = $(CRD_DEP_ROOT)/.src-crd-$(SOURCE_VER)\n\n# HelmChart source CRD.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 38,
                  "endLine": 35,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\n# Keep a record of the version of the downloaded source CRDs. It is used to\n# detect and download new CRDs when the SOURCE_VER changes.\nSOURCE_VER ?= $(shell go list -m all | grep github.com/fluxcd/source-controller/api | awk '{print $$2}')\nSOURCE_CRD_VER = $(CRD_DEP_ROOT)/.src-crd-$(SOURCE_VER)\n\n# HelmChart source CRD.\n",
                    "rendered": {
                      "text": "\n# Keep a record of the version of the downloaded source CRDs. It is used to\n# detect and download new CRDs when the SOURCE_VER changes.\nSOURCE_VER ?= $(shell go list -m all | grep github.com/fluxcd/source-controller/api | awk '{print $$2}')\nSOURCE_CRD_VER = $(CRD_DEP_ROOT)/.src-crd-$(SOURCE_VER)\n\n# HelmChart source CRD.\n",
                      "markdown": "`\n# Keep a record of the version of the downloaded source CRDs. It is used to\n# detect and download new CRDs when the SOURCE_VER changes.\nSOURCE_VER ?= $(shell go list -m all | grep github.com/fluxcd/source-controller/api | awk '{print $$2}')\nSOURCE_CRD_VER = $(CRD_DEP_ROOT)/.src-crd-$(SOURCE_VER)\n\n# HelmChart source CRD.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 32,
                  "endLine": 22,
                  "endColumn": 40,
                  "snippet": {
                    "text": "endif\nexport PATH:=$(GOBIN):${PATH}\n\n# Allows for defining additional Docker buildx arguments, e.g. '--push'.\nBUILD_ARGS ?= --load\n# Architectures to build images for.\nBUILD_PLATFORMS ?= linux/amd64\n",
                    "rendered": {
                      "text": "endif\nexport PATH:=$(GOBIN):${PATH}\n\n# Allows for defining additional Docker buildx arguments, e.g. '--push'.\nBUILD_ARGS ?= --load\n# Architectures to build images for.\nBUILD_PLATFORMS ?= linux/amd64\n",
                      "markdown": "`endif\nexport PATH:=$(GOBIN):${PATH}\n\n# Allows for defining additional Docker buildx arguments, e.g. '--push'.\nBUILD_ARGS ?= --load\n# Architectures to build images for.\nBUILD_PLATFORMS ?= linux/amd64\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 16,
                  "endLine": 18,
                  "endColumn": 21,
                  "snippet": {
                    "text": "ifeq (,$(shell go env GOBIN))\nGOBIN=$(BUILD_DIR)/gobin\nelse\nGOBIN=$(shell go env GOBIN)\nendif\nexport PATH:=$(GOBIN):${PATH}\n\n",
                    "rendered": {
                      "text": "ifeq (,$(shell go env GOBIN))\nGOBIN=$(BUILD_DIR)/gobin\nelse\nGOBIN=$(shell go env GOBIN)\nendif\nexport PATH:=$(GOBIN):${PATH}\n\n",
                      "markdown": "`ifeq (,$(shell go env GOBIN))\nGOBIN=$(BUILD_DIR)/gobin\nelse\nGOBIN=$(shell go env GOBIN)\nendif\nexport PATH:=$(GOBIN):${PATH}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 17,
                  "endLine": 15,
                  "endColumn": 22,
                  "snippet": {
                    "text": "FUZZ_TIME ?= 1m\n\n# If gobin not set, create one on ./build and add to path.\nifeq (,$(shell go env GOBIN))\nGOBIN=$(BUILD_DIR)/gobin\nelse\nGOBIN=$(shell go env GOBIN)\n",
                    "rendered": {
                      "text": "FUZZ_TIME ?= 1m\n\n# If gobin not set, create one on ./build and add to path.\nifeq (,$(shell go env GOBIN))\nGOBIN=$(BUILD_DIR)/gobin\nelse\nGOBIN=$(shell go env GOBIN)\n",
                      "markdown": "`FUZZ_TIME ?= 1m\n\n# If gobin not set, create one on ./build and add to path.\nifeq (,$(shell go env GOBIN))\nGOBIN=$(BUILD_DIR)/gobin\nelse\nGOBIN=$(shell go env GOBIN)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 26,
                  "endLine": 7,
                  "endColumn": 31,
                  "snippet": {
                    "text": "CRD_OPTIONS ?= crd:crdVersions=v1\n\n# Repository root based on Git metadata\nREPOSITORY_ROOT := $(shell git rev-parse --show-toplevel)\nBUILD_DIR := $(REPOSITORY_ROOT)/build\n\n# FUZZ_TIME defines the max amount of time, in Go Duration,\n",
                    "rendered": {
                      "text": "CRD_OPTIONS ?= crd:crdVersions=v1\n\n# Repository root based on Git metadata\nREPOSITORY_ROOT := $(shell git rev-parse --show-toplevel)\nBUILD_DIR := $(REPOSITORY_ROOT)/build\n\n# FUZZ_TIME defines the max amount of time, in Go Duration,\n",
                      "markdown": "`CRD_OPTIONS ?= crd:crdVersions=v1\n\n# Repository root based on Git metadata\nREPOSITORY_ROOT := $(shell git rev-parse --show-toplevel)\nBUILD_DIR := $(REPOSITORY_ROOT)/build\n\n# FUZZ_TIME defines the max amount of time, in Go Duration,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/flux-helm-controller.zip/Makefile"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 26,
                  "endLine": 6,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# Produce CRDs that work back to Kubernetes 1.16\nCRD_OPTIONS ?= crd:crdVersions=v1\n\n# Repository root based on Git metadata\nREPOSITORY_ROOT := $(shell git rev-parse --show-toplevel)\nBUILD_DIR := $(REPOSITORY_ROOT)/build\n\n",
                    "rendered": {
                      "text": "# Produce CRDs that work back to Kubernetes 1.16\nCRD_OPTIONS ?= crd:crdVersions=v1\n\n# Repository root based on Git metadata\nREPOSITORY_ROOT := $(shell git rev-parse --show-toplevel)\nBUILD_DIR := $(REPOSITORY_ROOT)/build\n\n",
                      "markdown": "`# Produce CRDs that work back to Kubernetes 1.16\nCRD_OPTIONS ?= crd:crdVersions=v1\n\n# Repository root based on Git metadata\nREPOSITORY_ROOT := $(shell git rev-parse --show-toplevel)\nBUILD_DIR := $(REPOSITORY_ROOT)/build\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}