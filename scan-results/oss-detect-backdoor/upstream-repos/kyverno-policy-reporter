{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/load.go"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 65,
                  "endLine": 102,
                  "endColumn": 73,
                  "snippet": {
                    "text": "\n\t// bind SMTP config from environment vars, if existing\n\t_ = v.BindEnv(\"emailReports.smtp.username\", \"EMAIL_REPORTS_SMTP_USERNAME\")\n\t_ = v.BindEnv(\"emailReports.smtp.password\", \"EMAIL_REPORTS_SMTP_PASSWORD\")\n\t_ = v.BindEnv(\"emailReports.smtp.encryption\", \"EMAIL_REPORTS_SMTP_ENCRYPTION\")\n\t_ = v.BindEnv(\"emailReports.smtp.host\", \"EMAIL_REPORTS_SMTP_HOST\")\n\t_ = v.BindEnv(\"emailReports.smtp.port\", \"EMAIL_REPORTS_SMTP_PORT\")\n",
                    "rendered": {
                      "text": "\n\t// bind SMTP config from environment vars, if existing\n\t_ = v.BindEnv(\"emailReports.smtp.username\", \"EMAIL_REPORTS_SMTP_USERNAME\")\n\t_ = v.BindEnv(\"emailReports.smtp.password\", \"EMAIL_REPORTS_SMTP_PASSWORD\")\n\t_ = v.BindEnv(\"emailReports.smtp.encryption\", \"EMAIL_REPORTS_SMTP_ENCRYPTION\")\n\t_ = v.BindEnv(\"emailReports.smtp.host\", \"EMAIL_REPORTS_SMTP_HOST\")\n\t_ = v.BindEnv(\"emailReports.smtp.port\", \"EMAIL_REPORTS_SMTP_PORT\")\n",
                      "markdown": "`\n\t// bind SMTP config from environment vars, if existing\n\t_ = v.BindEnv(\"emailReports.smtp.username\", \"EMAIL_REPORTS_SMTP_USERNAME\")\n\t_ = v.BindEnv(\"emailReports.smtp.password\", \"EMAIL_REPORTS_SMTP_PASSWORD\")\n\t_ = v.BindEnv(\"emailReports.smtp.encryption\", \"EMAIL_REPORTS_SMTP_ENCRYPTION\")\n\t_ = v.BindEnv(\"emailReports.smtp.host\", \"EMAIL_REPORTS_SMTP_HOST\")\n\t_ = v.BindEnv(\"emailReports.smtp.port\", \"EMAIL_REPORTS_SMTP_PORT\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/load.go"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 34,
                  "endLine": 102,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\n\t// bind SMTP config from environment vars, if existing\n\t_ = v.BindEnv(\"emailReports.smtp.username\", \"EMAIL_REPORTS_SMTP_USERNAME\")\n\t_ = v.BindEnv(\"emailReports.smtp.password\", \"EMAIL_REPORTS_SMTP_PASSWORD\")\n\t_ = v.BindEnv(\"emailReports.smtp.encryption\", \"EMAIL_REPORTS_SMTP_ENCRYPTION\")\n\t_ = v.BindEnv(\"emailReports.smtp.host\", \"EMAIL_REPORTS_SMTP_HOST\")\n\t_ = v.BindEnv(\"emailReports.smtp.port\", \"EMAIL_REPORTS_SMTP_PORT\")\n",
                    "rendered": {
                      "text": "\n\t// bind SMTP config from environment vars, if existing\n\t_ = v.BindEnv(\"emailReports.smtp.username\", \"EMAIL_REPORTS_SMTP_USERNAME\")\n\t_ = v.BindEnv(\"emailReports.smtp.password\", \"EMAIL_REPORTS_SMTP_PASSWORD\")\n\t_ = v.BindEnv(\"emailReports.smtp.encryption\", \"EMAIL_REPORTS_SMTP_ENCRYPTION\")\n\t_ = v.BindEnv(\"emailReports.smtp.host\", \"EMAIL_REPORTS_SMTP_HOST\")\n\t_ = v.BindEnv(\"emailReports.smtp.port\", \"EMAIL_REPORTS_SMTP_PORT\")\n",
                      "markdown": "`\n\t// bind SMTP config from environment vars, if existing\n\t_ = v.BindEnv(\"emailReports.smtp.username\", \"EMAIL_REPORTS_SMTP_USERNAME\")\n\t_ = v.BindEnv(\"emailReports.smtp.password\", \"EMAIL_REPORTS_SMTP_PASSWORD\")\n\t_ = v.BindEnv(\"emailReports.smtp.encryption\", \"EMAIL_REPORTS_SMTP_ENCRYPTION\")\n\t_ = v.BindEnv(\"emailReports.smtp.host\", \"EMAIL_REPORTS_SMTP_HOST\")\n\t_ = v.BindEnv(\"emailReports.smtp.port\", \"EMAIL_REPORTS_SMTP_PORT\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/load.go"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 11,
                  "endLine": 103,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\t// bind SMTP config from environment vars, if existing\n\t_ = v.BindEnv(\"emailReports.smtp.username\", \"EMAIL_REPORTS_SMTP_USERNAME\")\n\t_ = v.BindEnv(\"emailReports.smtp.password\", \"EMAIL_REPORTS_SMTP_PASSWORD\")\n\t_ = v.BindEnv(\"emailReports.smtp.encryption\", \"EMAIL_REPORTS_SMTP_ENCRYPTION\")\n\t_ = v.BindEnv(\"emailReports.smtp.host\", \"EMAIL_REPORTS_SMTP_HOST\")\n\t_ = v.BindEnv(\"emailReports.smtp.port\", \"EMAIL_REPORTS_SMTP_PORT\")\n\t_ = v.BindEnv(\"emailReports.smtp.from\", \"EMAIL_REPORTS_SMTP_FROM\")\n",
                    "rendered": {
                      "text": "\t// bind SMTP config from environment vars, if existing\n\t_ = v.BindEnv(\"emailReports.smtp.username\", \"EMAIL_REPORTS_SMTP_USERNAME\")\n\t_ = v.BindEnv(\"emailReports.smtp.password\", \"EMAIL_REPORTS_SMTP_PASSWORD\")\n\t_ = v.BindEnv(\"emailReports.smtp.encryption\", \"EMAIL_REPORTS_SMTP_ENCRYPTION\")\n\t_ = v.BindEnv(\"emailReports.smtp.host\", \"EMAIL_REPORTS_SMTP_HOST\")\n\t_ = v.BindEnv(\"emailReports.smtp.port\", \"EMAIL_REPORTS_SMTP_PORT\")\n\t_ = v.BindEnv(\"emailReports.smtp.from\", \"EMAIL_REPORTS_SMTP_FROM\")\n",
                      "markdown": "`\t// bind SMTP config from environment vars, if existing\n\t_ = v.BindEnv(\"emailReports.smtp.username\", \"EMAIL_REPORTS_SMTP_USERNAME\")\n\t_ = v.BindEnv(\"emailReports.smtp.password\", \"EMAIL_REPORTS_SMTP_PASSWORD\")\n\t_ = v.BindEnv(\"emailReports.smtp.encryption\", \"EMAIL_REPORTS_SMTP_ENCRYPTION\")\n\t_ = v.BindEnv(\"emailReports.smtp.host\", \"EMAIL_REPORTS_SMTP_HOST\")\n\t_ = v.BindEnv(\"emailReports.smtp.port\", \"EMAIL_REPORTS_SMTP_PORT\")\n\t_ = v.BindEnv(\"emailReports.smtp.from\", \"EMAIL_REPORTS_SMTP_FROM\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/load.go"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 38,
                  "endLine": 97,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\t}\n\n\tif err := v.BindEnv(\"namespace\", \"POD_NAMESPACE\"); err != nil {\n\t\tlog.Printf(\"[WARNING] failed to bind env POD_NAMESPACE\")\n\t}\n\n\t// bind SMTP config from environment vars, if existing\n",
                    "rendered": {
                      "text": "\t}\n\n\tif err := v.BindEnv(\"namespace\", \"POD_NAMESPACE\"); err != nil {\n\t\tlog.Printf(\"[WARNING] failed to bind env POD_NAMESPACE\")\n\t}\n\n\t// bind SMTP config from environment vars, if existing\n",
                      "markdown": "`\t}\n\n\tif err := v.BindEnv(\"namespace\", \"POD_NAMESPACE\"); err != nil {\n\t\tlog.Printf(\"[WARNING] failed to bind env POD_NAMESPACE\")\n\t}\n\n\t// bind SMTP config from environment vars, if existing\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/load.go"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 38,
                  "endLine": 93,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\t}\n\n\tif err := v.BindEnv(\"leaderElection.namespace\", \"POD_NAMESPACE\"); err != nil {\n\t\tlog.Printf(\"[WARNING] failed to bind env POD_NAMESPACE\")\n\t}\n\n\tif err := v.BindEnv(\"namespace\", \"POD_NAMESPACE\"); err != nil {\n",
                    "rendered": {
                      "text": "\t}\n\n\tif err := v.BindEnv(\"leaderElection.namespace\", \"POD_NAMESPACE\"); err != nil {\n\t\tlog.Printf(\"[WARNING] failed to bind env POD_NAMESPACE\")\n\t}\n\n\tif err := v.BindEnv(\"namespace\", \"POD_NAMESPACE\"); err != nil {\n",
                      "markdown": "`\t}\n\n\tif err := v.BindEnv(\"leaderElection.namespace\", \"POD_NAMESPACE\"); err != nil {\n\t\tlog.Printf(\"[WARNING] failed to bind env POD_NAMESPACE\")\n\t}\n\n\tif err := v.BindEnv(\"namespace\", \"POD_NAMESPACE\"); err != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/load.go"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 38,
                  "endLine": 89,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\t}\n\n\tif err := v.BindEnv(\"leaderElection.podName\", \"POD_NAME\"); err != nil {\n\t\tlog.Printf(\"[WARNING] failed to bind env POD_NAME\")\n\t}\n\n\tif err := v.BindEnv(\"leaderElection.namespace\", \"POD_NAMESPACE\"); err != nil {\n",
                    "rendered": {
                      "text": "\t}\n\n\tif err := v.BindEnv(\"leaderElection.podName\", \"POD_NAME\"); err != nil {\n\t\tlog.Printf(\"[WARNING] failed to bind env POD_NAME\")\n\t}\n\n\tif err := v.BindEnv(\"leaderElection.namespace\", \"POD_NAMESPACE\"); err != nil {\n",
                      "markdown": "`\t}\n\n\tif err := v.BindEnv(\"leaderElection.podName\", \"POD_NAME\"); err != nil {\n\t\tlog.Printf(\"[WARNING] failed to bind env POD_NAME\")\n\t}\n\n\tif err := v.BindEnv(\"leaderElection.namespace\", \"POD_NAMESPACE\"); err != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/factory/factory.go"
                },
                "region": {
                  "startLine": 767,
                  "startColumn": 37,
                  "endLine": 767,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\tvalues := secrets.Values{}\n\n\tif ref != \"\" {\n\t\tsecretValues, err := f.secretClient.Get(context.Background(), ref)\n\t\tvalues = secretValues\n\t\tif err != nil {\n\t\t\tzap.L().Warn(\"failed to get secret reference\", zap.Error(err))\n",
                    "rendered": {
                      "text": "\tvalues := secrets.Values{}\n\n\tif ref != \"\" {\n\t\tsecretValues, err := f.secretClient.Get(context.Background(), ref)\n\t\tvalues = secretValues\n\t\tif err != nil {\n\t\t\tzap.L().Warn(\"failed to get secret reference\", zap.Error(err))\n",
                      "markdown": "`\tvalues := secrets.Values{}\n\n\tif ref != \"\" {\n\t\tsecretValues, err := f.secretClient.Get(context.Background(), ref)\n\t\tvalues = secretValues\n\t\tif err != nil {\n\t\t\tzap.L().Warn(\"failed to get secret reference\", zap.Error(err))\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/factory/factory.go"
                },
                "region": {
                  "startLine": 822,
                  "startColumn": 30,
                  "endLine": 822,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\t\t\tc.Config.Username = values.Username\n\t\t}\n\t\tif values.Password != \"\" {\n\t\t\tc.Config.Password = values.Password\n\t\t}\n\t\tif values.APIKey != \"\" {\n\t\t\tc.Config.APIKey = values.APIKey\n",
                    "rendered": {
                      "text": "\t\t\tc.Config.Username = values.Username\n\t\t}\n\t\tif values.Password != \"\" {\n\t\t\tc.Config.Password = values.Password\n\t\t}\n\t\tif values.APIKey != \"\" {\n\t\t\tc.Config.APIKey = values.APIKey\n",
                      "markdown": "`\t\t\tc.Config.Username = values.Username\n\t\t}\n\t\tif values.Password != \"\" {\n\t\t\tc.Config.Password = values.Password\n\t\t}\n\t\tif values.APIKey != \"\" {\n\t\t\tc.Config.APIKey = values.APIKey\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/factory/factory.go"
                },
                "region": {
                  "startLine": 822,
                  "startColumn": 12,
                  "endLine": 822,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t\tc.Config.Username = values.Username\n\t\t}\n\t\tif values.Password != \"\" {\n\t\t\tc.Config.Password = values.Password\n\t\t}\n\t\tif values.APIKey != \"\" {\n\t\t\tc.Config.APIKey = values.APIKey\n",
                    "rendered": {
                      "text": "\t\t\tc.Config.Username = values.Username\n\t\t}\n\t\tif values.Password != \"\" {\n\t\t\tc.Config.Password = values.Password\n\t\t}\n\t\tif values.APIKey != \"\" {\n\t\t\tc.Config.APIKey = values.APIKey\n",
                      "markdown": "`\t\t\tc.Config.Username = values.Username\n\t\t}\n\t\tif values.Password != \"\" {\n\t\t\tc.Config.Password = values.Password\n\t\t}\n\t\tif values.APIKey != \"\" {\n\t\t\tc.Config.APIKey = values.APIKey\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/factory/factory.go"
                },
                "region": {
                  "startLine": 821,
                  "startColumn": 12,
                  "endLine": 821,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\tif values.Username != \"\" {\n\t\t\tc.Config.Username = values.Username\n\t\t}\n\t\tif values.Password != \"\" {\n\t\t\tc.Config.Password = values.Password\n\t\t}\n\t\tif values.APIKey != \"\" {\n",
                    "rendered": {
                      "text": "\t\tif values.Username != \"\" {\n\t\t\tc.Config.Username = values.Username\n\t\t}\n\t\tif values.Password != \"\" {\n\t\t\tc.Config.Password = values.Password\n\t\t}\n\t\tif values.APIKey != \"\" {\n",
                      "markdown": "`\t\tif values.Username != \"\" {\n\t\t\tc.Config.Username = values.Username\n\t\t}\n\t\tif values.Password != \"\" {\n\t\t\tc.Config.Password = values.Password\n\t\t}\n\t\tif values.APIKey != \"\" {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/factory/factory.go"
                },
                "region": {
                  "startLine": 244,
                  "startColumn": 31,
                  "endLine": 244,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\t\t\t},\n\t\t\tHost:         config.Config.Host,\n\t\t\tUsername:     config.Config.Username,\n\t\t\tPassword:     config.Config.Password,\n\t\t\tApiKey:       config.Config.APIKey,\n\t\t\tRotation:     config.Config.Rotation,\n\t\t\tIndex:        config.Config.Index,\n",
                    "rendered": {
                      "text": "\t\t\t},\n\t\t\tHost:         config.Config.Host,\n\t\t\tUsername:     config.Config.Username,\n\t\t\tPassword:     config.Config.Password,\n\t\t\tApiKey:       config.Config.APIKey,\n\t\t\tRotation:     config.Config.Rotation,\n\t\t\tIndex:        config.Config.Index,\n",
                      "markdown": "`\t\t\t},\n\t\t\tHost:         config.Config.Host,\n\t\t\tUsername:     config.Config.Username,\n\t\t\tPassword:     config.Config.Password,\n\t\t\tApiKey:       config.Config.APIKey,\n\t\t\tRotation:     config.Config.Rotation,\n\t\t\tIndex:        config.Config.Index,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/factory/factory.go"
                },
                "region": {
                  "startLine": 244,
                  "startColumn": 3,
                  "endLine": 244,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\t\t},\n\t\t\tHost:         config.Config.Host,\n\t\t\tUsername:     config.Config.Username,\n\t\t\tPassword:     config.Config.Password,\n\t\t\tApiKey:       config.Config.APIKey,\n\t\t\tRotation:     config.Config.Rotation,\n\t\t\tIndex:        config.Config.Index,\n",
                    "rendered": {
                      "text": "\t\t\t},\n\t\t\tHost:         config.Config.Host,\n\t\t\tUsername:     config.Config.Username,\n\t\t\tPassword:     config.Config.Password,\n\t\t\tApiKey:       config.Config.APIKey,\n\t\t\tRotation:     config.Config.Rotation,\n\t\t\tIndex:        config.Config.Index,\n",
                      "markdown": "`\t\t\t},\n\t\t\tHost:         config.Config.Host,\n\t\t\tUsername:     config.Config.Username,\n\t\t\tPassword:     config.Config.Password,\n\t\t\tApiKey:       config.Config.APIKey,\n\t\t\tRotation:     config.Config.Rotation,\n\t\t\tIndex:        config.Config.Index,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/factory/factory.go"
                },
                "region": {
                  "startLine": 220,
                  "startColumn": 52,
                  "endLine": 220,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\tsetFallback(&config.Config.Certificate, parent.Config.Certificate)\n\tsetBool(&config.Config.SkipTLS, parent.Config.SkipTLS)\n\tsetFallback(&config.Config.Username, parent.Config.Username)\n\tsetFallback(&config.Config.Password, parent.Config.Password)\n\tsetFallback(&config.Config.APIKey, parent.Config.APIKey)\n\tsetFallback(&config.Config.Index, parent.Config.Index, \"policy-reporter\")\n\tsetFallback(&config.Config.Rotation, parent.Config.Rotation, elasticsearch.Daily)\n",
                    "rendered": {
                      "text": "\tsetFallback(&config.Config.Certificate, parent.Config.Certificate)\n\tsetBool(&config.Config.SkipTLS, parent.Config.SkipTLS)\n\tsetFallback(&config.Config.Username, parent.Config.Username)\n\tsetFallback(&config.Config.Password, parent.Config.Password)\n\tsetFallback(&config.Config.APIKey, parent.Config.APIKey)\n\tsetFallback(&config.Config.Index, parent.Config.Index, \"policy-reporter\")\n\tsetFallback(&config.Config.Rotation, parent.Config.Rotation, elasticsearch.Daily)\n",
                      "markdown": "`\tsetFallback(&config.Config.Certificate, parent.Config.Certificate)\n\tsetBool(&config.Config.SkipTLS, parent.Config.SkipTLS)\n\tsetFallback(&config.Config.Username, parent.Config.Username)\n\tsetFallback(&config.Config.Password, parent.Config.Password)\n\tsetFallback(&config.Config.APIKey, parent.Config.APIKey)\n\tsetFallback(&config.Config.Index, parent.Config.Index, \"policy-reporter\")\n\tsetFallback(&config.Config.Rotation, parent.Config.Rotation, elasticsearch.Daily)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/factory/factory.go"
                },
                "region": {
                  "startLine": 220,
                  "startColumn": 28,
                  "endLine": 220,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\tsetFallback(&config.Config.Certificate, parent.Config.Certificate)\n\tsetBool(&config.Config.SkipTLS, parent.Config.SkipTLS)\n\tsetFallback(&config.Config.Username, parent.Config.Username)\n\tsetFallback(&config.Config.Password, parent.Config.Password)\n\tsetFallback(&config.Config.APIKey, parent.Config.APIKey)\n\tsetFallback(&config.Config.Index, parent.Config.Index, \"policy-reporter\")\n\tsetFallback(&config.Config.Rotation, parent.Config.Rotation, elasticsearch.Daily)\n",
                    "rendered": {
                      "text": "\tsetFallback(&config.Config.Certificate, parent.Config.Certificate)\n\tsetBool(&config.Config.SkipTLS, parent.Config.SkipTLS)\n\tsetFallback(&config.Config.Username, parent.Config.Username)\n\tsetFallback(&config.Config.Password, parent.Config.Password)\n\tsetFallback(&config.Config.APIKey, parent.Config.APIKey)\n\tsetFallback(&config.Config.Index, parent.Config.Index, \"policy-reporter\")\n\tsetFallback(&config.Config.Rotation, parent.Config.Rotation, elasticsearch.Daily)\n",
                      "markdown": "`\tsetFallback(&config.Config.Certificate, parent.Config.Certificate)\n\tsetBool(&config.Config.SkipTLS, parent.Config.SkipTLS)\n\tsetFallback(&config.Config.Username, parent.Config.Username)\n\tsetFallback(&config.Config.Password, parent.Config.Password)\n\tsetFallback(&config.Config.APIKey, parent.Config.APIKey)\n\tsetFallback(&config.Config.Index, parent.Config.Index, \"policy-reporter\")\n\tsetFallback(&config.Config.Rotation, parent.Config.Rotation, elasticsearch.Daily)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/factory/factory.go"
                },
                "region": {
                  "startLine": 192,
                  "startColumn": 31,
                  "endLine": 192,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\t\t\tHost:         config.Config.Host + config.Config.Path,\n\t\t\tCustomFields: config.CustomFields,\n\t\t\tUsername:     config.Config.Username,\n\t\t\tPassword:     config.Config.Password,\n\t\t\tHTTPClient:   http.NewClient(config.Config.Certificate, config.Config.SkipTLS),\n\t\t\tHeaders:      config.Config.Headers,\n\t\t}),\n",
                    "rendered": {
                      "text": "\t\t\tHost:         config.Config.Host + config.Config.Path,\n\t\t\tCustomFields: config.CustomFields,\n\t\t\tUsername:     config.Config.Username,\n\t\t\tPassword:     config.Config.Password,\n\t\t\tHTTPClient:   http.NewClient(config.Config.Certificate, config.Config.SkipTLS),\n\t\t\tHeaders:      config.Config.Headers,\n\t\t}),\n",
                      "markdown": "`\t\t\tHost:         config.Config.Host + config.Config.Path,\n\t\t\tCustomFields: config.CustomFields,\n\t\t\tUsername:     config.Config.Username,\n\t\t\tPassword:     config.Config.Password,\n\t\t\tHTTPClient:   http.NewClient(config.Config.Certificate, config.Config.SkipTLS),\n\t\t\tHeaders:      config.Config.Headers,\n\t\t}),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/factory/factory.go"
                },
                "region": {
                  "startLine": 192,
                  "startColumn": 3,
                  "endLine": 192,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\t\tHost:         config.Config.Host + config.Config.Path,\n\t\t\tCustomFields: config.CustomFields,\n\t\t\tUsername:     config.Config.Username,\n\t\t\tPassword:     config.Config.Password,\n\t\t\tHTTPClient:   http.NewClient(config.Config.Certificate, config.Config.SkipTLS),\n\t\t\tHeaders:      config.Config.Headers,\n\t\t}),\n",
                    "rendered": {
                      "text": "\t\t\tHost:         config.Config.Host + config.Config.Path,\n\t\t\tCustomFields: config.CustomFields,\n\t\t\tUsername:     config.Config.Username,\n\t\t\tPassword:     config.Config.Password,\n\t\t\tHTTPClient:   http.NewClient(config.Config.Certificate, config.Config.SkipTLS),\n\t\t\tHeaders:      config.Config.Headers,\n\t\t}),\n",
                      "markdown": "`\t\t\tHost:         config.Config.Host + config.Config.Path,\n\t\t\tCustomFields: config.CustomFields,\n\t\t\tUsername:     config.Config.Username,\n\t\t\tPassword:     config.Config.Password,\n\t\t\tHTTPClient:   http.NewClient(config.Config.Certificate, config.Config.SkipTLS),\n\t\t\tHeaders:      config.Config.Headers,\n\t\t}),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/factory/factory.go"
                },
                "region": {
                  "startLine": 170,
                  "startColumn": 52,
                  "endLine": 170,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\tsetFallback(&config.Config.Certificate, parent.Config.Certificate)\n\tsetFallback(&config.Config.Path, parent.Config.Path)\n\tsetFallback(&config.Config.Username, parent.Config.Username)\n\tsetFallback(&config.Config.Password, parent.Config.Password)\n\tsetBool(&config.Config.SkipTLS, parent.Config.SkipTLS)\n\n\tconfig.MapBaseParent(parent)\n",
                    "rendered": {
                      "text": "\tsetFallback(&config.Config.Certificate, parent.Config.Certificate)\n\tsetFallback(&config.Config.Path, parent.Config.Path)\n\tsetFallback(&config.Config.Username, parent.Config.Username)\n\tsetFallback(&config.Config.Password, parent.Config.Password)\n\tsetBool(&config.Config.SkipTLS, parent.Config.SkipTLS)\n\n\tconfig.MapBaseParent(parent)\n",
                      "markdown": "`\tsetFallback(&config.Config.Certificate, parent.Config.Certificate)\n\tsetFallback(&config.Config.Path, parent.Config.Path)\n\tsetFallback(&config.Config.Username, parent.Config.Username)\n\tsetFallback(&config.Config.Password, parent.Config.Password)\n\tsetBool(&config.Config.SkipTLS, parent.Config.SkipTLS)\n\n\tconfig.MapBaseParent(parent)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/factory/factory.go"
                },
                "region": {
                  "startLine": 170,
                  "startColumn": 28,
                  "endLine": 170,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\tsetFallback(&config.Config.Certificate, parent.Config.Certificate)\n\tsetFallback(&config.Config.Path, parent.Config.Path)\n\tsetFallback(&config.Config.Username, parent.Config.Username)\n\tsetFallback(&config.Config.Password, parent.Config.Password)\n\tsetBool(&config.Config.SkipTLS, parent.Config.SkipTLS)\n\n\tconfig.MapBaseParent(parent)\n",
                    "rendered": {
                      "text": "\tsetFallback(&config.Config.Certificate, parent.Config.Certificate)\n\tsetFallback(&config.Config.Path, parent.Config.Path)\n\tsetFallback(&config.Config.Username, parent.Config.Username)\n\tsetFallback(&config.Config.Password, parent.Config.Password)\n\tsetBool(&config.Config.SkipTLS, parent.Config.SkipTLS)\n\n\tconfig.MapBaseParent(parent)\n",
                      "markdown": "`\tsetFallback(&config.Config.Certificate, parent.Config.Certificate)\n\tsetFallback(&config.Config.Path, parent.Config.Path)\n\tsetFallback(&config.Config.Username, parent.Config.Username)\n\tsetFallback(&config.Config.Password, parent.Config.Password)\n\tsetBool(&config.Config.SkipTLS, parent.Config.SkipTLS)\n\n\tconfig.MapBaseParent(parent)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/factory/factory_test.go"
                },
                "region": {
                  "startLine": 934,
                  "startColumn": 53,
                  "endLine": 934,
                  "endColumn": 61,
                  "snippet": {
                    "text": "\n\t\tpassword := client.FieldByName(\"password\").String()\n\t\tif password != \"password\" {\n\t\t\tt.Errorf(\"Expected password from secret, got %s\", password)\n\t\t}\n\n\t\tapiKey := client.FieldByName(\"apiKey\").String()\n",
                    "rendered": {
                      "text": "\n\t\tpassword := client.FieldByName(\"password\").String()\n\t\tif password != \"password\" {\n\t\t\tt.Errorf(\"Expected password from secret, got %s\", password)\n\t\t}\n\n\t\tapiKey := client.FieldByName(\"apiKey\").String()\n",
                      "markdown": "`\n\t\tpassword := client.FieldByName(\"password\").String()\n\t\tif password != \"password\" {\n\t\t\tt.Errorf(\"Expected password from secret, got %s\", password)\n\t\t}\n\n\t\tapiKey := client.FieldByName(\"apiKey\").String()\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/factory/factory_test.go"
                },
                "region": {
                  "startLine": 934,
                  "startColumn": 22,
                  "endLine": 934,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n\t\tpassword := client.FieldByName(\"password\").String()\n\t\tif password != \"password\" {\n\t\t\tt.Errorf(\"Expected password from secret, got %s\", password)\n\t\t}\n\n\t\tapiKey := client.FieldByName(\"apiKey\").String()\n",
                    "rendered": {
                      "text": "\n\t\tpassword := client.FieldByName(\"password\").String()\n\t\tif password != \"password\" {\n\t\t\tt.Errorf(\"Expected password from secret, got %s\", password)\n\t\t}\n\n\t\tapiKey := client.FieldByName(\"apiKey\").String()\n",
                      "markdown": "`\n\t\tpassword := client.FieldByName(\"password\").String()\n\t\tif password != \"password\" {\n\t\t\tt.Errorf(\"Expected password from secret, got %s\", password)\n\t\t}\n\n\t\tapiKey := client.FieldByName(\"apiKey\").String()\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/factory/factory_test.go"
                },
                "region": {
                  "startLine": 933,
                  "startColumn": 18,
                  "endLine": 933,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t\t}\n\n\t\tpassword := client.FieldByName(\"password\").String()\n\t\tif password != \"password\" {\n\t\t\tt.Errorf(\"Expected password from secret, got %s\", password)\n\t\t}\n\n",
                    "rendered": {
                      "text": "\t\t}\n\n\t\tpassword := client.FieldByName(\"password\").String()\n\t\tif password != \"password\" {\n\t\t\tt.Errorf(\"Expected password from secret, got %s\", password)\n\t\t}\n\n",
                      "markdown": "`\t\t}\n\n\t\tpassword := client.FieldByName(\"password\").String()\n\t\tif password != \"password\" {\n\t\t\tt.Errorf(\"Expected password from secret, got %s\", password)\n\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/factory/factory_test.go"
                },
                "region": {
                  "startLine": 933,
                  "startColumn": 5,
                  "endLine": 933,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\t\t}\n\n\t\tpassword := client.FieldByName(\"password\").String()\n\t\tif password != \"password\" {\n\t\t\tt.Errorf(\"Expected password from secret, got %s\", password)\n\t\t}\n\n",
                    "rendered": {
                      "text": "\t\t}\n\n\t\tpassword := client.FieldByName(\"password\").String()\n\t\tif password != \"password\" {\n\t\t\tt.Errorf(\"Expected password from secret, got %s\", password)\n\t\t}\n\n",
                      "markdown": "`\t\t}\n\n\t\tpassword := client.FieldByName(\"password\").String()\n\t\tif password != \"password\" {\n\t\t\tt.Errorf(\"Expected password from secret, got %s\", password)\n\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/factory/factory_test.go"
                },
                "region": {
                  "startLine": 932,
                  "startColumn": 34,
                  "endLine": 932,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\t\t\tt.Errorf(\"Expected rotation from secret, got %s\", index)\n\t\t}\n\n\t\tpassword := client.FieldByName(\"password\").String()\n\t\tif password != \"password\" {\n\t\t\tt.Errorf(\"Expected password from secret, got %s\", password)\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t\tt.Errorf(\"Expected rotation from secret, got %s\", index)\n\t\t}\n\n\t\tpassword := client.FieldByName(\"password\").String()\n\t\tif password != \"password\" {\n\t\t\tt.Errorf(\"Expected password from secret, got %s\", password)\n\t\t}\n",
                      "markdown": "`\t\t\tt.Errorf(\"Expected rotation from secret, got %s\", index)\n\t\t}\n\n\t\tpassword := client.FieldByName(\"password\").String()\n\t\tif password != \"password\" {\n\t\t\tt.Errorf(\"Expected password from secret, got %s\", password)\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/factory/factory_test.go"
                },
                "region": {
                  "startLine": 932,
                  "startColumn": 2,
                  "endLine": 932,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t\t\tt.Errorf(\"Expected rotation from secret, got %s\", index)\n\t\t}\n\n\t\tpassword := client.FieldByName(\"password\").String()\n\t\tif password != \"password\" {\n\t\t\tt.Errorf(\"Expected password from secret, got %s\", password)\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t\tt.Errorf(\"Expected rotation from secret, got %s\", index)\n\t\t}\n\n\t\tpassword := client.FieldByName(\"password\").String()\n\t\tif password != \"password\" {\n\t\t\tt.Errorf(\"Expected password from secret, got %s\", password)\n\t\t}\n",
                      "markdown": "`\t\t\tt.Errorf(\"Expected rotation from secret, got %s\", index)\n\t\t}\n\n\t\tpassword := client.FieldByName(\"password\").String()\n\t\tif password != \"password\" {\n\t\t\tt.Errorf(\"Expected password from secret, got %s\", password)\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/factory/factory_test.go"
                },
                "region": {
                  "startLine": 565,
                  "startColumn": 53,
                  "endLine": 565,
                  "endColumn": 61,
                  "snippet": {
                    "text": "\n\t\tpassword := client.FieldByName(\"password\").String()\n\t\tif password != \"password\" {\n\t\t\tt.Errorf(\"Expected password from secret, got %s\", password)\n\t\t}\n\n\t\tapiKey := client.FieldByName(\"apiKey\").String()\n",
                    "rendered": {
                      "text": "\n\t\tpassword := client.FieldByName(\"password\").String()\n\t\tif password != \"password\" {\n\t\t\tt.Errorf(\"Expected password from secret, got %s\", password)\n\t\t}\n\n\t\tapiKey := client.FieldByName(\"apiKey\").String()\n",
                      "markdown": "`\n\t\tpassword := client.FieldByName(\"password\").String()\n\t\tif password != \"password\" {\n\t\t\tt.Errorf(\"Expected password from secret, got %s\", password)\n\t\t}\n\n\t\tapiKey := client.FieldByName(\"apiKey\").String()\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/factory/factory_test.go"
                },
                "region": {
                  "startLine": 565,
                  "startColumn": 22,
                  "endLine": 565,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n\t\tpassword := client.FieldByName(\"password\").String()\n\t\tif password != \"password\" {\n\t\t\tt.Errorf(\"Expected password from secret, got %s\", password)\n\t\t}\n\n\t\tapiKey := client.FieldByName(\"apiKey\").String()\n",
                    "rendered": {
                      "text": "\n\t\tpassword := client.FieldByName(\"password\").String()\n\t\tif password != \"password\" {\n\t\t\tt.Errorf(\"Expected password from secret, got %s\", password)\n\t\t}\n\n\t\tapiKey := client.FieldByName(\"apiKey\").String()\n",
                      "markdown": "`\n\t\tpassword := client.FieldByName(\"password\").String()\n\t\tif password != \"password\" {\n\t\t\tt.Errorf(\"Expected password from secret, got %s\", password)\n\t\t}\n\n\t\tapiKey := client.FieldByName(\"apiKey\").String()\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/factory/factory_test.go"
                },
                "region": {
                  "startLine": 564,
                  "startColumn": 18,
                  "endLine": 564,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t\t}\n\n\t\tpassword := client.FieldByName(\"password\").String()\n\t\tif password != \"password\" {\n\t\t\tt.Errorf(\"Expected password from secret, got %s\", password)\n\t\t}\n\n",
                    "rendered": {
                      "text": "\t\t}\n\n\t\tpassword := client.FieldByName(\"password\").String()\n\t\tif password != \"password\" {\n\t\t\tt.Errorf(\"Expected password from secret, got %s\", password)\n\t\t}\n\n",
                      "markdown": "`\t\t}\n\n\t\tpassword := client.FieldByName(\"password\").String()\n\t\tif password != \"password\" {\n\t\t\tt.Errorf(\"Expected password from secret, got %s\", password)\n\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/factory/factory_test.go"
                },
                "region": {
                  "startLine": 564,
                  "startColumn": 5,
                  "endLine": 564,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\t\t}\n\n\t\tpassword := client.FieldByName(\"password\").String()\n\t\tif password != \"password\" {\n\t\t\tt.Errorf(\"Expected password from secret, got %s\", password)\n\t\t}\n\n",
                    "rendered": {
                      "text": "\t\t}\n\n\t\tpassword := client.FieldByName(\"password\").String()\n\t\tif password != \"password\" {\n\t\t\tt.Errorf(\"Expected password from secret, got %s\", password)\n\t\t}\n\n",
                      "markdown": "`\t\t}\n\n\t\tpassword := client.FieldByName(\"password\").String()\n\t\tif password != \"password\" {\n\t\t\tt.Errorf(\"Expected password from secret, got %s\", password)\n\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/factory/factory_test.go"
                },
                "region": {
                  "startLine": 563,
                  "startColumn": 34,
                  "endLine": 563,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\t\t\tt.Errorf(\"Expected rotation from secret, got %s\", index)\n\t\t}\n\n\t\tpassword := client.FieldByName(\"password\").String()\n\t\tif password != \"password\" {\n\t\t\tt.Errorf(\"Expected password from secret, got %s\", password)\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t\tt.Errorf(\"Expected rotation from secret, got %s\", index)\n\t\t}\n\n\t\tpassword := client.FieldByName(\"password\").String()\n\t\tif password != \"password\" {\n\t\t\tt.Errorf(\"Expected password from secret, got %s\", password)\n\t\t}\n",
                      "markdown": "`\t\t\tt.Errorf(\"Expected rotation from secret, got %s\", index)\n\t\t}\n\n\t\tpassword := client.FieldByName(\"password\").String()\n\t\tif password != \"password\" {\n\t\t\tt.Errorf(\"Expected password from secret, got %s\", password)\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/factory/factory_test.go"
                },
                "region": {
                  "startLine": 563,
                  "startColumn": 2,
                  "endLine": 563,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t\t\tt.Errorf(\"Expected rotation from secret, got %s\", index)\n\t\t}\n\n\t\tpassword := client.FieldByName(\"password\").String()\n\t\tif password != \"password\" {\n\t\t\tt.Errorf(\"Expected password from secret, got %s\", password)\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t\tt.Errorf(\"Expected rotation from secret, got %s\", index)\n\t\t}\n\n\t\tpassword := client.FieldByName(\"password\").String()\n\t\tif password != \"password\" {\n\t\t\tt.Errorf(\"Expected password from secret, got %s\", password)\n\t\t}\n",
                      "markdown": "`\t\t\tt.Errorf(\"Expected rotation from secret, got %s\", index)\n\t\t}\n\n\t\tpassword := client.FieldByName(\"password\").String()\n\t\tif password != \"password\" {\n\t\t\tt.Errorf(\"Expected password from secret, got %s\", password)\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/factory/factory_test.go"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 20,
                  "endLine": 58,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\t\tWebhook:         \"http://localhost:9200/webhook\",\n\t\tChannel:         \"general\",\n\t\tUsername:        \"username\",\n\t\tPassword:        \"password\",\n\t\tAPIKey:          \"apiKey\",\n\t\tAccountID:       \"accountId\",\n\t\tAccessKeyID:     \"accessKeyId\",\n",
                    "rendered": {
                      "text": "\t\tWebhook:         \"http://localhost:9200/webhook\",\n\t\tChannel:         \"general\",\n\t\tUsername:        \"username\",\n\t\tPassword:        \"password\",\n\t\tAPIKey:          \"apiKey\",\n\t\tAccountID:       \"accountId\",\n\t\tAccessKeyID:     \"accessKeyId\",\n",
                      "markdown": "`\t\tWebhook:         \"http://localhost:9200/webhook\",\n\t\tChannel:         \"general\",\n\t\tUsername:        \"username\",\n\t\tPassword:        \"password\",\n\t\tAPIKey:          \"apiKey\",\n\t\tAccountID:       \"accountId\",\n\t\tAccessKeyID:     \"accessKeyId\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/factory/factory_test.go"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 2,
                  "endLine": 58,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t\tWebhook:         \"http://localhost:9200/webhook\",\n\t\tChannel:         \"general\",\n\t\tUsername:        \"username\",\n\t\tPassword:        \"password\",\n\t\tAPIKey:          \"apiKey\",\n\t\tAccountID:       \"accountId\",\n\t\tAccessKeyID:     \"accessKeyId\",\n",
                    "rendered": {
                      "text": "\t\tWebhook:         \"http://localhost:9200/webhook\",\n\t\tChannel:         \"general\",\n\t\tUsername:        \"username\",\n\t\tPassword:        \"password\",\n\t\tAPIKey:          \"apiKey\",\n\t\tAccountID:       \"accountId\",\n\t\tAccessKeyID:     \"accessKeyId\",\n",
                      "markdown": "`\t\tWebhook:         \"http://localhost:9200/webhook\",\n\t\tChannel:         \"general\",\n\t\tUsername:        \"username\",\n\t\tPassword:        \"password\",\n\t\tAPIKey:          \"apiKey\",\n\t\tAccountID:       \"accountId\",\n\t\tAccessKeyID:     \"accessKeyId\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/factory/factory_test.go"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 30,
                  "endLine": 35,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\t\tData: map[string][]byte{\n\t\t\t\"host\":            []byte(\"http://localhost:9200\"),\n\t\t\t\"username\":        []byte(\"username\"),\n\t\t\t\"password\":        []byte(\"password\"),\n\t\t\t\"channel\":         []byte(\"general\"),\n\t\t\t\"apiKey\":          []byte(\"apiKey\"),\n\t\t\t\"webhook\":         []byte(\"http://localhost:9200/webhook\"),\n",
                    "rendered": {
                      "text": "\t\tData: map[string][]byte{\n\t\t\t\"host\":            []byte(\"http://localhost:9200\"),\n\t\t\t\"username\":        []byte(\"username\"),\n\t\t\t\"password\":        []byte(\"password\"),\n\t\t\t\"channel\":         []byte(\"general\"),\n\t\t\t\"apiKey\":          []byte(\"apiKey\"),\n\t\t\t\"webhook\":         []byte(\"http://localhost:9200/webhook\"),\n",
                      "markdown": "`\t\tData: map[string][]byte{\n\t\t\t\"host\":            []byte(\"http://localhost:9200\"),\n\t\t\t\"username\":        []byte(\"username\"),\n\t\t\t\"password\":        []byte(\"password\"),\n\t\t\t\"channel\":         []byte(\"general\"),\n\t\t\t\"apiKey\":          []byte(\"apiKey\"),\n\t\t\t\"webhook\":         []byte(\"http://localhost:9200/webhook\"),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/factory/factory_test.go"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 4,
                  "endLine": 35,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\tData: map[string][]byte{\n\t\t\t\"host\":            []byte(\"http://localhost:9200\"),\n\t\t\t\"username\":        []byte(\"username\"),\n\t\t\t\"password\":        []byte(\"password\"),\n\t\t\t\"channel\":         []byte(\"general\"),\n\t\t\t\"apiKey\":          []byte(\"apiKey\"),\n\t\t\t\"webhook\":         []byte(\"http://localhost:9200/webhook\"),\n",
                    "rendered": {
                      "text": "\t\tData: map[string][]byte{\n\t\t\t\"host\":            []byte(\"http://localhost:9200\"),\n\t\t\t\"username\":        []byte(\"username\"),\n\t\t\t\"password\":        []byte(\"password\"),\n\t\t\t\"channel\":         []byte(\"general\"),\n\t\t\t\"apiKey\":          []byte(\"apiKey\"),\n\t\t\t\"webhook\":         []byte(\"http://localhost:9200/webhook\"),\n",
                      "markdown": "`\t\tData: map[string][]byte{\n\t\t\t\"host\":            []byte(\"http://localhost:9200\"),\n\t\t\t\"username\":        []byte(\"username\"),\n\t\t\t\"password\":        []byte(\"password\"),\n\t\t\t\"channel\":         []byte(\"general\"),\n\t\t\t\"apiKey\":          []byte(\"apiKey\"),\n\t\t\t\"webhook\":         []byte(\"http://localhost:9200/webhook\"),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/crd/client/informers/externalversions/policyreport/v1alpha2/clusterpolicyreport.go"
                },
                "region": {
                  "startLine": 27,
                  "endLine": 27,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n\tv1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n\truntime \"k8s.io/apimachinery/pkg/runtime\"\n\twatch \"k8s.io/apimachinery/pkg/watch\"\n\tcache \"k8s.io/client-go/tools/cache\"\n\n\tpolicyreportv1alpha2 \"github.com/kyverno/policy-reporter/pkg/crd/api/policyreport/v1alpha2\"\n",
                    "rendered": {
                      "text": "\n\tv1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n\truntime \"k8s.io/apimachinery/pkg/runtime\"\n\twatch \"k8s.io/apimachinery/pkg/watch\"\n\tcache \"k8s.io/client-go/tools/cache\"\n\n\tpolicyreportv1alpha2 \"github.com/kyverno/policy-reporter/pkg/crd/api/policyreport/v1alpha2\"\n",
                      "markdown": "`\n\tv1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n\truntime \"k8s.io/apimachinery/pkg/runtime\"\n\twatch \"k8s.io/apimachinery/pkg/watch\"\n\tcache \"k8s.io/client-go/tools/cache\"\n\n\tpolicyreportv1alpha2 \"github.com/kyverno/policy-reporter/pkg/crd/api/policyreport/v1alpha2\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/crd/client/informers/externalversions/policyreport/v1alpha2/clusterpolicyreport.go"
                },
                "region": {
                  "startLine": 23,
                  "endLine": 23,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nimport (\n\t\"context\"\n\ttime \"time\"\n\n\tv1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n\truntime \"k8s.io/apimachinery/pkg/runtime\"\n",
                    "rendered": {
                      "text": "\nimport (\n\t\"context\"\n\ttime \"time\"\n\n\tv1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n\truntime \"k8s.io/apimachinery/pkg/runtime\"\n",
                      "markdown": "`\nimport (\n\t\"context\"\n\ttime \"time\"\n\n\tv1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n\truntime \"k8s.io/apimachinery/pkg/runtime\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/report/store_test.go"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 17,
                  "endLine": 73,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t\tstore.Add(ctx, preport)\n\n\t\tstore.CleanUp(ctx)\n\t\t_, err := store.Get(ctx, preport.GetID())\n\t\tif err == nil {\n\t\t\tt.Fatalf(\"Should have no results after CleanUp\")\n\t\t}\n",
                    "rendered": {
                      "text": "\t\tstore.Add(ctx, preport)\n\n\t\tstore.CleanUp(ctx)\n\t\t_, err := store.Get(ctx, preport.GetID())\n\t\tif err == nil {\n\t\t\tt.Fatalf(\"Should have no results after CleanUp\")\n\t\t}\n",
                      "markdown": "`\t\tstore.Add(ctx, preport)\n\n\t\tstore.CleanUp(ctx)\n\t\t_, err := store.Get(ctx, preport.GetID())\n\t\tif err == nil {\n\t\t\tt.Fatalf(\"Should have no results after CleanUp\")\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/report/store_test.go"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 16,
                  "endLine": 63,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\t}\n\n\t\tstore.Remove(ctx, preport.GetID())\n\t\t_, err = store.Get(ctx, preport.GetID())\n\t\tif err == nil {\n\t\t\tt.Fatalf(\"Should not be found after Remove report from Store\")\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t}\n\n\t\tstore.Remove(ctx, preport.GetID())\n\t\t_, err = store.Get(ctx, preport.GetID())\n\t\tif err == nil {\n\t\t\tt.Fatalf(\"Should not be found after Remove report from Store\")\n\t\t}\n",
                      "markdown": "`\t\t}\n\n\t\tstore.Remove(ctx, preport.GetID())\n\t\t_, err = store.Get(ctx, preport.GetID())\n\t\tif err == nil {\n\t\t\tt.Fatalf(\"Should not be found after Remove report from Store\")\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/report/store_test.go"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 17,
                  "endLine": 57,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t})\n\n\tt.Run(\"Delete/Get\", func(t *testing.T) {\n\t\t_, err := store.Get(ctx, preport.GetID())\n\t\tif err != nil {\n\t\t\tt.Errorf(\"Should be found in Store after adding report to the store\")\n\t\t}\n",
                    "rendered": {
                      "text": "\t})\n\n\tt.Run(\"Delete/Get\", func(t *testing.T) {\n\t\t_, err := store.Get(ctx, preport.GetID())\n\t\tif err != nil {\n\t\t\tt.Errorf(\"Should be found in Store after adding report to the store\")\n\t\t}\n",
                      "markdown": "`\t})\n\n\tt.Run(\"Delete/Get\", func(t *testing.T) {\n\t\t_, err := store.Get(ctx, preport.GetID())\n\t\tif err != nil {\n\t\t\tt.Errorf(\"Should be found in Store after adding report to the store\")\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/report/store_test.go"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 16,
                  "endLine": 50,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\t}\n\n\t\tstore.Update(ctx, ureport)\n\t\tr2, _ := store.Get(ctx, preport.GetID())\n\t\tif r2.GetSummary().Skip != 1 {\n\t\t\tt.Errorf(\"Expected Summary.Skip to be 1 after update\")\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t}\n\n\t\tstore.Update(ctx, ureport)\n\t\tr2, _ := store.Get(ctx, preport.GetID())\n\t\tif r2.GetSummary().Skip != 1 {\n\t\t\tt.Errorf(\"Expected Summary.Skip to be 1 after update\")\n\t\t}\n",
                      "markdown": "`\t\t}\n\n\t\tstore.Update(ctx, ureport)\n\t\tr2, _ := store.Get(ctx, preport.GetID())\n\t\tif r2.GetSummary().Skip != 1 {\n\t\t\tt.Errorf(\"Expected Summary.Skip to be 1 after update\")\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/report/store_test.go"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 15,
                  "endLine": 44,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t}\n\n\t\tstore.Add(ctx, preport)\n\t\tr, _ := store.Get(ctx, preport.GetID())\n\t\tif r.GetSummary().Skip != 0 {\n\t\t\tt.Errorf(\"Expected Summary.Skip to be 0\")\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t}\n\n\t\tstore.Add(ctx, preport)\n\t\tr, _ := store.Get(ctx, preport.GetID())\n\t\tif r.GetSummary().Skip != 0 {\n\t\t\tt.Errorf(\"Expected Summary.Skip to be 0\")\n\t\t}\n",
                      "markdown": "`\t\t}\n\n\t\tstore.Add(ctx, preport)\n\t\tr, _ := store.Get(ctx, preport.GetID())\n\t\tif r.GetSummary().Skip != 0 {\n\t\t\tt.Errorf(\"Expected Summary.Skip to be 0\")\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/report/store_test.go"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 16,
                  "endLine": 26,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\t}\n\n\t\tstore.Add(ctx, preport)\n\t\t_, err = store.Get(ctx, preport.GetID())\n\t\tif err != nil {\n\t\t\tt.Errorf(\"Should be found in Store after adding report to the store\")\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t}\n\n\t\tstore.Add(ctx, preport)\n\t\t_, err = store.Get(ctx, preport.GetID())\n\t\tif err != nil {\n\t\t\tt.Errorf(\"Should be found in Store after adding report to the store\")\n\t\t}\n",
                      "markdown": "`\t\t}\n\n\t\tstore.Add(ctx, preport)\n\t\t_, err = store.Get(ctx, preport.GetID())\n\t\tif err != nil {\n\t\t\tt.Errorf(\"Should be found in Store after adding report to the store\")\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/report/store_test.go"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 17,
                  "endLine": 20,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\tstore.CreateSchemas(ctx)\n\n\tt.Run(\"Add/Get\", func(t *testing.T) {\n\t\t_, err := store.Get(ctx, preport.GetID())\n\t\tif err == nil {\n\t\t\tt.Fatalf(\"Should not be found in empty Store\")\n\t\t}\n",
                    "rendered": {
                      "text": "\tstore.CreateSchemas(ctx)\n\n\tt.Run(\"Add/Get\", func(t *testing.T) {\n\t\t_, err := store.Get(ctx, preport.GetID())\n\t\tif err == nil {\n\t\t\tt.Fatalf(\"Should not be found in empty Store\")\n\t\t}\n",
                      "markdown": "`\tstore.CreateSchemas(ctx)\n\n\tt.Run(\"Add/Get\", func(t *testing.T) {\n\t\t_, err := store.Get(ctx, preport.GetID())\n\t\tif err == nil {\n\t\t\tt.Fatalf(\"Should not be found in empty Store\")\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/slack/slack_test.go"
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 25,
                  "endLine": 134,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n",
                    "rendered": {
                      "text": "\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n",
                      "markdown": "`\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/slack/slack_test.go"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 31,
                  "endLine": 130,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\n\tt.Run(\"Send incomplete Result2\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json; charset=utf-8\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n",
                    "rendered": {
                      "text": "\n\tt.Run(\"Send incomplete Result2\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json; charset=utf-8\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n",
                      "markdown": "`\n\tt.Run(\"Send incomplete Result2\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json; charset=utf-8\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/slack/slack_test.go"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 25,
                  "endLine": 108,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n",
                    "rendered": {
                      "text": "\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n",
                      "markdown": "`\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/slack/slack_test.go"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 31,
                  "endLine": 104,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\n\tt.Run(\"Send incomplete Result\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json; charset=utf-8\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n",
                    "rendered": {
                      "text": "\n\tt.Run(\"Send incomplete Result\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json; charset=utf-8\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n",
                      "markdown": "`\n\tt.Run(\"Send incomplete Result\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json; charset=utf-8\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/slack/slack_test.go"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 25,
                  "endLine": 83,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n",
                    "rendered": {
                      "text": "\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n",
                      "markdown": "`\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/slack/slack_test.go"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 31,
                  "endLine": 79,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\n\tt.Run(\"Send enforce Result\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json; charset=utf-8\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n",
                    "rendered": {
                      "text": "\n\tt.Run(\"Send enforce Result\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json; charset=utf-8\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n",
                      "markdown": "`\n\tt.Run(\"Send enforce Result\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json; charset=utf-8\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/slack/slack_test.go"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 25,
                  "endLine": 58,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n",
                    "rendered": {
                      "text": "\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n",
                      "markdown": "`\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/slack/slack_test.go"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 31,
                  "endLine": 54,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\n\tt.Run(\"Send Minimal Result\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json; charset=utf-8\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n",
                    "rendered": {
                      "text": "\n\tt.Run(\"Send Minimal Result\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json; charset=utf-8\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n",
                      "markdown": "`\n\tt.Run(\"Send Minimal Result\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json; charset=utf-8\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/slack/slack_test.go"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n",
                    "rendered": {
                      "text": "\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n",
                      "markdown": "`\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/slack/slack_test.go"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 31,
                  "endLine": 28,
                  "endColumn": 36,
                  "snippet": {
                    "text": "func Test_SlackTarget(t *testing.T) {\n\tt.Run(\"Send Complete Result\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json; charset=utf-8\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n",
                    "rendered": {
                      "text": "func Test_SlackTarget(t *testing.T) {\n\tt.Run(\"Send Complete Result\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json; charset=utf-8\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n",
                      "markdown": "`func Test_SlackTarget(t *testing.T) {\n\tt.Run(\"Send Complete Result\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json; charset=utf-8\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/crd/client/clientset/versioned/typed/policyreport/v1alpha2/fake/fake_clusterpolicyreport.go"
                },
                "region": {
                  "startLine": 28,
                  "endLine": 28,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tlabels \"k8s.io/apimachinery/pkg/labels\"\n\tschema \"k8s.io/apimachinery/pkg/runtime/schema\"\n\ttypes \"k8s.io/apimachinery/pkg/types\"\n\twatch \"k8s.io/apimachinery/pkg/watch\"\n\ttesting \"k8s.io/client-go/testing\"\n\n\tv1alpha2 \"github.com/kyverno/policy-reporter/pkg/crd/api/policyreport/v1alpha2\"\n",
                    "rendered": {
                      "text": "\tlabels \"k8s.io/apimachinery/pkg/labels\"\n\tschema \"k8s.io/apimachinery/pkg/runtime/schema\"\n\ttypes \"k8s.io/apimachinery/pkg/types\"\n\twatch \"k8s.io/apimachinery/pkg/watch\"\n\ttesting \"k8s.io/client-go/testing\"\n\n\tv1alpha2 \"github.com/kyverno/policy-reporter/pkg/crd/api/policyreport/v1alpha2\"\n",
                      "markdown": "`\tlabels \"k8s.io/apimachinery/pkg/labels\"\n\tschema \"k8s.io/apimachinery/pkg/runtime/schema\"\n\ttypes \"k8s.io/apimachinery/pkg/types\"\n\twatch \"k8s.io/apimachinery/pkg/watch\"\n\ttesting \"k8s.io/client-go/testing\"\n\n\tv1alpha2 \"github.com/kyverno/policy-reporter/pkg/crd/api/policyreport/v1alpha2\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/crd/client/clientset/versioned/typed/policyreport/v1alpha2/fake/fake_policyreport.go"
                },
                "region": {
                  "startLine": 28,
                  "endLine": 28,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\tlabels \"k8s.io/apimachinery/pkg/labels\"\n\tschema \"k8s.io/apimachinery/pkg/runtime/schema\"\n\ttypes \"k8s.io/apimachinery/pkg/types\"\n\twatch \"k8s.io/apimachinery/pkg/watch\"\n\ttesting \"k8s.io/client-go/testing\"\n\n\tv1alpha2 \"github.com/kyverno/policy-reporter/pkg/crd/api/policyreport/v1alpha2\"\n",
                    "rendered": {
                      "text": "\tlabels \"k8s.io/apimachinery/pkg/labels\"\n\tschema \"k8s.io/apimachinery/pkg/runtime/schema\"\n\ttypes \"k8s.io/apimachinery/pkg/types\"\n\twatch \"k8s.io/apimachinery/pkg/watch\"\n\ttesting \"k8s.io/client-go/testing\"\n\n\tv1alpha2 \"github.com/kyverno/policy-reporter/pkg/crd/api/policyreport/v1alpha2\"\n",
                      "markdown": "`\tlabels \"k8s.io/apimachinery/pkg/labels\"\n\tschema \"k8s.io/apimachinery/pkg/runtime/schema\"\n\ttypes \"k8s.io/apimachinery/pkg/types\"\n\twatch \"k8s.io/apimachinery/pkg/watch\"\n\ttesting \"k8s.io/client-go/testing\"\n\n\tv1alpha2 \"github.com/kyverno/policy-reporter/pkg/crd/api/policyreport/v1alpha2\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v2/views_test.go"
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 15,
                  "endLine": 134,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t\t\t\t\tSkipTLS:     true,\n\t\t\t\t},\n\t\t\t\tUsername: \"user\",\n\t\t\t\tPassword: \"password\",\n\t\t\t\tPath:     \"v1/push\",\n\t\t\t},\n\t\t\tValid: true,\n",
                    "rendered": {
                      "text": "\t\t\t\t\tSkipTLS:     true,\n\t\t\t\t},\n\t\t\t\tUsername: \"user\",\n\t\t\t\tPassword: \"password\",\n\t\t\t\tPath:     \"v1/push\",\n\t\t\t},\n\t\t\tValid: true,\n",
                      "markdown": "`\t\t\t\t\tSkipTLS:     true,\n\t\t\t\t},\n\t\t\t\tUsername: \"user\",\n\t\t\t\tPassword: \"password\",\n\t\t\t\tPath:     \"v1/push\",\n\t\t\t},\n\t\t\tValid: true,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v2/views_test.go"
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 4,
                  "endLine": 134,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t\t\tSkipTLS:     true,\n\t\t\t\t},\n\t\t\t\tUsername: \"user\",\n\t\t\t\tPassword: \"password\",\n\t\t\t\tPath:     \"v1/push\",\n\t\t\t},\n\t\t\tValid: true,\n",
                    "rendered": {
                      "text": "\t\t\t\t\tSkipTLS:     true,\n\t\t\t\t},\n\t\t\t\tUsername: \"user\",\n\t\t\t\tPassword: \"password\",\n\t\t\t\tPath:     \"v1/push\",\n\t\t\t},\n\t\t\tValid: true,\n",
                      "markdown": "`\t\t\t\t\tSkipTLS:     true,\n\t\t\t\t},\n\t\t\t\tUsername: \"user\",\n\t\t\t\tPassword: \"password\",\n\t\t\t\tPath:     \"v1/push\",\n\t\t\t},\n\t\t\tValid: true,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 474,
                  "startColumn": 156,
                  "endLine": 474,
                  "endColumn": 164,
                  "snippet": {
                    "text": "policyReporter.skipTLS | bool | `false` | Skip TLS Verification |\n| plugin.trivy.policyReporter.certificate | string | `\"\"` | TLS Certificate |\n| plugin.trivy.policyReporter.secretRef | string | `\"\"` | Secret to read the API configuration from supports `host`, `certificate`, `skipTLS`, `username`, `password` key |\n| plugin.trivy.imagePullSecrets | list | `[]` | Image pull secrets for image verification policies, this will define the `--imagePullSecrets` argument |\n| plugin.trivy.serviceAccount.create | bool | `true` | Create ServiceAccount |\n| plugin.trivy.serviceAccount.automount | bool | `true` | En",
                    "rendered": {
                      "text": "policyReporter.skipTLS | bool | `false` | Skip TLS Verification |\n| plugin.trivy.policyReporter.certificate | string | `\"\"` | TLS Certificate |\n| plugin.trivy.policyReporter.secretRef | string | `\"\"` | Secret to read the API configuration from supports `host`, `certificate`, `skipTLS`, `username`, `password` key |\n| plugin.trivy.imagePullSecrets | list | `[]` | Image pull secrets for image verification policies, this will define the `--imagePullSecrets` argument |\n| plugin.trivy.serviceAccount.create | bool | `true` | Create ServiceAccount |\n| plugin.trivy.serviceAccount.automount | bool | `true` | En",
                      "markdown": "`policyReporter.skipTLS | bool | `false` | Skip TLS Verification |\n| plugin.trivy.policyReporter.certificate | string | `\"\"` | TLS Certificate |\n| plugin.trivy.policyReporter.secretRef | string | `\"\"` | Secret to read the API configuration from supports `host`, `certificate`, `skipTLS`, `username`, `password` key |\n| plugin.trivy.imagePullSecrets | list | `[]` | Image pull secrets for image verification policies, this will define the `--imagePullSecrets` argument |\n| plugin.trivy.serviceAccount.create | bool | `true` | Create ServiceAccount |\n| plugin.trivy.serviceAccount.automount | bool | `true` | En`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 310,
                  "startColumn": 110,
                  "endLine": 310,
                  "endColumn": 118,
                  "snippet": {
                    "text": "s you can also provide an DSN string example postgres: postgres://postgres:password@localhost:5432/postgres?sslmode=disable example mysql: root:password@tcp(localhost:3306)/test?tls=false |\n| database.secretRef | string | `\"\"` | Read configuration from an existing Secret supported fields: username, password, host, dsn, database |\n| database.mountedSecret | string | `\"\"` |  |\n| podDisruptionBudget.minAvailable | int | `1` | Configures the minimum available pods for policy-reporter disruptions. Cannot be used if `maxUnavailable` is set. |\n| podDisruptionBudget.maxUnavailable | string | `nil` | Configure",
                    "rendered": {
                      "text": "s you can also provide an DSN string example postgres: postgres://postgres:password@localhost:5432/postgres?sslmode=disable example mysql: root:password@tcp(localhost:3306)/test?tls=false |\n| database.secretRef | string | `\"\"` | Read configuration from an existing Secret supported fields: username, password, host, dsn, database |\n| database.mountedSecret | string | `\"\"` |  |\n| podDisruptionBudget.minAvailable | int | `1` | Configures the minimum available pods for policy-reporter disruptions. Cannot be used if `maxUnavailable` is set. |\n| podDisruptionBudget.maxUnavailable | string | `nil` | Configure",
                      "markdown": "`s you can also provide an DSN string example postgres: postgres://postgres:password@localhost:5432/postgres?sslmode=disable example mysql: root:password@tcp(localhost:3306)/test?tls=false |\n| database.secretRef | string | `\"\"` | Read configuration from an existing Secret supported fields: username, password, host, dsn, database |\n| database.mountedSecret | string | `\"\"` |  |\n| podDisruptionBudget.minAvailable | int | `1` | Configures the minimum available pods for policy-reporter disruptions. Cannot be used if `maxUnavailable` is set. |\n| podDisruptionBudget.maxUnavailable | string | `nil` | Configure`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 309,
                  "startColumn": 218,
                  "endLine": 309,
                  "endColumn": 226,
                  "snippet": {
                    "text": "ing | `\"\"` | Host Address |\n| database.enableSSL | bool | `false` | Enables SSL |\n| database.dsn | string | `\"\"` | Instead of configure the individual values you can also provide an DSN string example postgres: postgres://postgres:password@localhost:5432/postgres?sslmode=disable example mysql: root:password@tcp(localhost:3306)/test?tls=false |\n| database.secretRef | string | `\"\"` | Read configuration from an existing Secret supported fields: username, password, host, dsn, database |\n| database.mountedSecret | string | `\"\"` |  |\n| podDisruptionBudget.minAvailable | int | `1` | Configures the minimum av",
                    "rendered": {
                      "text": "ing | `\"\"` | Host Address |\n| database.enableSSL | bool | `false` | Enables SSL |\n| database.dsn | string | `\"\"` | Instead of configure the individual values you can also provide an DSN string example postgres: postgres://postgres:password@localhost:5432/postgres?sslmode=disable example mysql: root:password@tcp(localhost:3306)/test?tls=false |\n| database.secretRef | string | `\"\"` | Read configuration from an existing Secret supported fields: username, password, host, dsn, database |\n| database.mountedSecret | string | `\"\"` |  |\n| podDisruptionBudget.minAvailable | int | `1` | Configures the minimum av",
                      "markdown": "`ing | `\"\"` | Host Address |\n| database.enableSSL | bool | `false` | Enables SSL |\n| database.dsn | string | `\"\"` | Instead of configure the individual values you can also provide an DSN string example postgres: postgres://postgres:password@localhost:5432/postgres?sslmode=disable example mysql: root:password@tcp(localhost:3306)/test?tls=false |\n| database.secretRef | string | `\"\"` | Read configuration from an existing Secret supported fields: username, password, host, dsn, database |\n| database.mountedSecret | string | `\"\"` |  |\n| podDisruptionBudget.minAvailable | int | `1` | Configures the minimum av`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 309,
                  "startColumn": 149,
                  "endLine": 309,
                  "endColumn": 157,
                  "snippet": {
                    "text": " database.password | string | `\"\"` | Password |\n| database.host | string | `\"\"` | Host Address |\n| database.enableSSL | bool | `false` | Enables SSL |\n| database.dsn | string | `\"\"` | Instead of configure the individual values you can also provide an DSN string example postgres: postgres://postgres:password@localhost:5432/postgres?sslmode=disable example mysql: root:password@tcp(localhost:3306)/test?tls=false |\n| database.secretRef | string | `\"\"` | Read configuration from an existing Secret supported fields: username, password, host, dsn, database |\n| database.mountedSecret | string | `\"\"` |  |\n| pod",
                    "rendered": {
                      "text": " database.password | string | `\"\"` | Password |\n| database.host | string | `\"\"` | Host Address |\n| database.enableSSL | bool | `false` | Enables SSL |\n| database.dsn | string | `\"\"` | Instead of configure the individual values you can also provide an DSN string example postgres: postgres://postgres:password@localhost:5432/postgres?sslmode=disable example mysql: root:password@tcp(localhost:3306)/test?tls=false |\n| database.secretRef | string | `\"\"` | Read configuration from an existing Secret supported fields: username, password, host, dsn, database |\n| database.mountedSecret | string | `\"\"` |  |\n| pod",
                      "markdown": "` database.password | string | `\"\"` | Password |\n| database.host | string | `\"\"` | Host Address |\n| database.enableSSL | bool | `false` | Enables SSL |\n| database.dsn | string | `\"\"` | Instead of configure the individual values you can also provide an DSN string example postgres: postgres://postgres:password@localhost:5432/postgres?sslmode=disable example mysql: root:password@tcp(localhost:3306)/test?tls=false |\n| database.secretRef | string | `\"\"` | Read configuration from an existing Secret supported fields: username, password, host, dsn, database |\n| database.mountedSecret | string | `\"\"` |  |\n| pod`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 306,
                  "startColumn": 38,
                  "endLine": 306,
                  "endColumn": 46,
                  "snippet": {
                    "text": "`\"\"` | Username |\n| redis.password | optional | `\"\"` | Password |\n| database.type | string | `\"\"` | Use an external Database, supported: mysql, postgres, mariadb |\n| database.database | string | `\"\"` | Database |\n| database.username | string | `\"\"` | Username |\n| database.password | string | `\"\"` | Password |\n| database.host | string | `\"\"` | Host Address |\n| database.enableSSL | bool | `false` | Enables SSL |\n| database.dsn | string | `\"\"` | Instead of configure the individual values you can also provide an DSN string example postgres: postgres://postgres:password@localhost:5432/postgres?sslmode=disa",
                    "rendered": {
                      "text": "`\"\"` | Username |\n| redis.password | optional | `\"\"` | Password |\n| database.type | string | `\"\"` | Use an external Database, supported: mysql, postgres, mariadb |\n| database.database | string | `\"\"` | Database |\n| database.username | string | `\"\"` | Username |\n| database.password | string | `\"\"` | Password |\n| database.host | string | `\"\"` | Host Address |\n| database.enableSSL | bool | `false` | Enables SSL |\n| database.dsn | string | `\"\"` | Instead of configure the individual values you can also provide an DSN string example postgres: postgres://postgres:password@localhost:5432/postgres?sslmode=disa",
                      "markdown": "``\"\"` | Username |\n| redis.password | optional | `\"\"` | Password |\n| database.type | string | `\"\"` | Use an external Database, supported: mysql, postgres, mariadb |\n| database.database | string | `\"\"` | Database |\n| database.username | string | `\"\"` | Username |\n| database.password | string | `\"\"` | Password |\n| database.host | string | `\"\"` | Host Address |\n| database.enableSSL | bool | `false` | Enables SSL |\n| database.dsn | string | `\"\"` | Instead of configure the individual values you can also provide an DSN string example postgres: postgres://postgres:password@localhost:5432/postgres?sslmode=disa`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 306,
                  "startColumn": 11,
                  "endLine": 306,
                  "endColumn": 19,
                  "snippet": {
                    "text": "edis.username | optional | `\"\"` | Username |\n| redis.password | optional | `\"\"` | Password |\n| database.type | string | `\"\"` | Use an external Database, supported: mysql, postgres, mariadb |\n| database.database | string | `\"\"` | Database |\n| database.username | string | `\"\"` | Username |\n| database.password | string | `\"\"` | Password |\n| database.host | string | `\"\"` | Host Address |\n| database.enableSSL | bool | `false` | Enables SSL |\n| database.dsn | string | `\"\"` | Instead of configure the individual values you can also provide an DSN string example postgres: postgres://postgres:password@localhost",
                    "rendered": {
                      "text": "edis.username | optional | `\"\"` | Username |\n| redis.password | optional | `\"\"` | Password |\n| database.type | string | `\"\"` | Use an external Database, supported: mysql, postgres, mariadb |\n| database.database | string | `\"\"` | Database |\n| database.username | string | `\"\"` | Username |\n| database.password | string | `\"\"` | Password |\n| database.host | string | `\"\"` | Host Address |\n| database.enableSSL | bool | `false` | Enables SSL |\n| database.dsn | string | `\"\"` | Instead of configure the individual values you can also provide an DSN string example postgres: postgres://postgres:password@localhost",
                      "markdown": "`edis.username | optional | `\"\"` | Username |\n| redis.password | optional | `\"\"` | Password |\n| database.type | string | `\"\"` | Use an external Database, supported: mysql, postgres, mariadb |\n| database.database | string | `\"\"` | Database |\n| database.username | string | `\"\"` | Username |\n| database.password | string | `\"\"` | Password |\n| database.host | string | `\"\"` | Host Address |\n| database.enableSSL | bool | `false` | Enables SSL |\n| database.dsn | string | `\"\"` | Instead of configure the individual values you can also provide an DSN string example postgres: postgres://postgres:password@localhost`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 302,
                  "startColumn": 37,
                  "endLine": 302,
                  "endColumn": 45,
                  "snippet": {
                    "text": "| redis.database | int | `0` | Redis database |\n| redis.prefix | string | `\"policy-reporter\"` | Redis key prefix |\n| redis.username | optional | `\"\"` | Username |\n| redis.password | optional | `\"\"` | Password |\n| database.type | string | `\"\"` | Use an external Database, supported: mysql, postgres, mariadb |\n| database.database | string | `\"\"` | Database |\n| database.username | string | `\"\"` | Username |\n",
                    "rendered": {
                      "text": "| redis.database | int | `0` | Redis database |\n| redis.prefix | string | `\"policy-reporter\"` | Redis key prefix |\n| redis.username | optional | `\"\"` | Username |\n| redis.password | optional | `\"\"` | Password |\n| database.type | string | `\"\"` | Use an external Database, supported: mysql, postgres, mariadb |\n| database.database | string | `\"\"` | Database |\n| database.username | string | `\"\"` | Username |\n",
                      "markdown": "`| redis.database | int | `0` | Redis database |\n| redis.prefix | string | `\"policy-reporter\"` | Redis key prefix |\n| redis.username | optional | `\"\"` | Username |\n| redis.password | optional | `\"\"` | Password |\n| database.type | string | `\"\"` | Use an external Database, supported: mysql, postgres, mariadb |\n| database.database | string | `\"\"` | Database |\n| database.username | string | `\"\"` | Username |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 302,
                  "startColumn": 8,
                  "endLine": 302,
                  "endColumn": 16,
                  "snippet": {
                    "text": "| redis.database | int | `0` | Redis database |\n| redis.prefix | string | `\"policy-reporter\"` | Redis key prefix |\n| redis.username | optional | `\"\"` | Username |\n| redis.password | optional | `\"\"` | Password |\n| database.type | string | `\"\"` | Use an external Database, supported: mysql, postgres, mariadb |\n| database.database | string | `\"\"` | Database |\n| database.username | string | `\"\"` | Username |\n",
                    "rendered": {
                      "text": "| redis.database | int | `0` | Redis database |\n| redis.prefix | string | `\"policy-reporter\"` | Redis key prefix |\n| redis.username | optional | `\"\"` | Username |\n| redis.password | optional | `\"\"` | Password |\n| database.type | string | `\"\"` | Use an external Database, supported: mysql, postgres, mariadb |\n| database.database | string | `\"\"` | Database |\n| database.username | string | `\"\"` | Username |\n",
                      "markdown": "`| redis.database | int | `0` | Redis database |\n| redis.prefix | string | `\"policy-reporter\"` | Redis key prefix |\n| redis.username | optional | `\"\"` | Username |\n| redis.password | optional | `\"\"` | Password |\n| database.type | string | `\"\"` | Use an external Database, supported: mysql, postgres, mariadb |\n| database.database | string | `\"\"` | Database |\n| database.username | string | `\"\"` | Username |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 165,
                  "startColumn": 65,
                  "endLine": 165,
                  "endColumn": 73,
                  "snippet": {
                    "text": "ables Elasticsearch typless API https://www.elastic.co/blog/moving-from-types-to-typeless-apis-in-elasticsearch-7-0 keeping as false for retrocompatibility. |\n| target.elasticsearch.username | string | `\"\"` | HTTP BasicAuth username |\n| target.elasticsearch.password | string | `\"\"` | HTTP BasicAuth password |\n| target.elasticsearch.apiKey | string | `\"\"` | Elasticsearch API Key for api key authentication |\n| target.elasticsearch.secretRef | string | `\"\"` | Read configuration from an already existing Secret |\n| target.elasticsearch.mountedSecret | string | `\"\"` | Mounted secret path by Secrets Controll",
                    "rendered": {
                      "text": "ables Elasticsearch typless API https://www.elastic.co/blog/moving-from-types-to-typeless-apis-in-elasticsearch-7-0 keeping as false for retrocompatibility. |\n| target.elasticsearch.username | string | `\"\"` | HTTP BasicAuth username |\n| target.elasticsearch.password | string | `\"\"` | HTTP BasicAuth password |\n| target.elasticsearch.apiKey | string | `\"\"` | Elasticsearch API Key for api key authentication |\n| target.elasticsearch.secretRef | string | `\"\"` | Read configuration from an already existing Secret |\n| target.elasticsearch.mountedSecret | string | `\"\"` | Mounted secret path by Secrets Controll",
                      "markdown": "`ables Elasticsearch typless API https://www.elastic.co/blog/moving-from-types-to-typeless-apis-in-elasticsearch-7-0 keeping as false for retrocompatibility. |\n| target.elasticsearch.username | string | `\"\"` | HTTP BasicAuth username |\n| target.elasticsearch.password | string | `\"\"` | HTTP BasicAuth password |\n| target.elasticsearch.apiKey | string | `\"\"` | Elasticsearch API Key for api key authentication |\n| target.elasticsearch.secretRef | string | `\"\"` | Read configuration from an already existing Secret |\n| target.elasticsearch.mountedSecret | string | `\"\"` | Mounted secret path by Secrets Controll`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 165,
                  "startColumn": 23,
                  "endLine": 165,
                  "endColumn": 31,
                  "snippet": {
                    "text": "icsearch.typelessApi | bool | `false` | Enables Elasticsearch typless API https://www.elastic.co/blog/moving-from-types-to-typeless-apis-in-elasticsearch-7-0 keeping as false for retrocompatibility. |\n| target.elasticsearch.username | string | `\"\"` | HTTP BasicAuth username |\n| target.elasticsearch.password | string | `\"\"` | HTTP BasicAuth password |\n| target.elasticsearch.apiKey | string | `\"\"` | Elasticsearch API Key for api key authentication |\n| target.elasticsearch.secretRef | string | `\"\"` | Read configuration from an already existing Secret |\n| target.elasticsearch.mountedSecret | string | `\"\"`",
                    "rendered": {
                      "text": "icsearch.typelessApi | bool | `false` | Enables Elasticsearch typless API https://www.elastic.co/blog/moving-from-types-to-typeless-apis-in-elasticsearch-7-0 keeping as false for retrocompatibility. |\n| target.elasticsearch.username | string | `\"\"` | HTTP BasicAuth username |\n| target.elasticsearch.password | string | `\"\"` | HTTP BasicAuth password |\n| target.elasticsearch.apiKey | string | `\"\"` | Elasticsearch API Key for api key authentication |\n| target.elasticsearch.secretRef | string | `\"\"` | Read configuration from an already existing Secret |\n| target.elasticsearch.mountedSecret | string | `\"\"`",
                      "markdown": "`icsearch.typelessApi | bool | `false` | Enables Elasticsearch typless API https://www.elastic.co/blog/moving-from-types-to-typeless-apis-in-elasticsearch-7-0 keeping as false for retrocompatibility. |\n| target.elasticsearch.username | string | `\"\"` | HTTP BasicAuth username |\n| target.elasticsearch.password | string | `\"\"` | HTTP BasicAuth password |\n| target.elasticsearch.apiKey | string | `\"\"` | Elasticsearch API Key for api key authentication |\n| target.elasticsearch.secretRef | string | `\"\"` | Read configuration from an already existing Secret |\n| target.elasticsearch.mountedSecret | string | `\"\"``"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 56,
                  "endLine": 155,
                  "endColumn": 64,
                  "snippet": {
                    "text": "ing PolicyReportResults on startup |\n| target.loki.customFields | object | `{}` | Added as additional labels |\n| target.loki.headers | object | `{}` | Additional HTTP Headers |\n| target.loki.username | string | `\"\"` | HTTP BasicAuth username |\n| target.loki.password | string | `\"\"` | HTTP BasicAuth password |\n| target.loki.filter | object | `{}` | Filter Results which should send to this target Wildcars for namespaces and policies are supported, you can either define exclude or include values Filters are available for all targets except the UI |\n| target.loki.channels | list | `[]` | List of channels ",
                    "rendered": {
                      "text": "ing PolicyReportResults on startup |\n| target.loki.customFields | object | `{}` | Added as additional labels |\n| target.loki.headers | object | `{}` | Additional HTTP Headers |\n| target.loki.username | string | `\"\"` | HTTP BasicAuth username |\n| target.loki.password | string | `\"\"` | HTTP BasicAuth password |\n| target.loki.filter | object | `{}` | Filter Results which should send to this target Wildcars for namespaces and policies are supported, you can either define exclude or include values Filters are available for all targets except the UI |\n| target.loki.channels | list | `[]` | List of channels ",
                      "markdown": "`ing PolicyReportResults on startup |\n| target.loki.customFields | object | `{}` | Added as additional labels |\n| target.loki.headers | object | `{}` | Additional HTTP Headers |\n| target.loki.username | string | `\"\"` | HTTP BasicAuth username |\n| target.loki.password | string | `\"\"` | HTTP BasicAuth password |\n| target.loki.filter | object | `{}` | Filter Results which should send to this target Wildcars for namespaces and policies are supported, you can either define exclude or include values Filters are available for all targets except the UI |\n| target.loki.channels | list | `[]` | List of channels `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 14,
                  "endLine": 155,
                  "endColumn": 22,
                  "snippet": {
                    "text": "artup | bool | `true` | Skip already existing PolicyReportResults on startup |\n| target.loki.customFields | object | `{}` | Added as additional labels |\n| target.loki.headers | object | `{}` | Additional HTTP Headers |\n| target.loki.username | string | `\"\"` | HTTP BasicAuth username |\n| target.loki.password | string | `\"\"` | HTTP BasicAuth password |\n| target.loki.filter | object | `{}` | Filter Results which should send to this target Wildcars for namespaces and policies are supported, you can either define exclude or include values Filters are available for all targets except the UI |\n| target.loki.",
                    "rendered": {
                      "text": "artup | bool | `true` | Skip already existing PolicyReportResults on startup |\n| target.loki.customFields | object | `{}` | Added as additional labels |\n| target.loki.headers | object | `{}` | Additional HTTP Headers |\n| target.loki.username | string | `\"\"` | HTTP BasicAuth username |\n| target.loki.password | string | `\"\"` | HTTP BasicAuth password |\n| target.loki.filter | object | `{}` | Filter Results which should send to this target Wildcars for namespaces and policies are supported, you can either define exclude or include values Filters are available for all targets except the UI |\n| target.loki.",
                      "markdown": "`artup | bool | `true` | Skip already existing PolicyReportResults on startup |\n| target.loki.customFields | object | `{}` | Added as additional labels |\n| target.loki.headers | object | `{}` | Additional HTTP Headers |\n| target.loki.username | string | `\"\"` | HTTP BasicAuth username |\n| target.loki.password | string | `\"\"` | HTTP BasicAuth password |\n| target.loki.filter | object | `{}` | Filter Results which should send to this target Wildcars for namespaces and policies are supported, you can either define exclude or include values Filters are available for all targets except the UI |\n| target.loki.`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 117,
                  "startColumn": 52,
                  "endLine": 117,
                  "endColumn": 60,
                  "snippet": {
                    "text": "| emailReports.smtp.host | string | `\"\"` | SMTP Server Host |\n| emailReports.smtp.port | int | `465` | SMTP Server Port |\n| emailReports.smtp.username | string | `\"\"` | SMTP Username |\n| emailReports.smtp.password | string | `\"\"` | SMTP Password |\n| emailReports.smtp.from | string | `\"\"` | Displayed from email address |\n| emailReports.smtp.encryption | string | `\"\"` | SMTP Encryption Default is none, supports ssl/tls and starttls |\n| emailReports.smtp.skipTLS | bool | `false` | Skip SMTP TLS verification |\n",
                    "rendered": {
                      "text": "| emailReports.smtp.host | string | `\"\"` | SMTP Server Host |\n| emailReports.smtp.port | int | `465` | SMTP Server Port |\n| emailReports.smtp.username | string | `\"\"` | SMTP Username |\n| emailReports.smtp.password | string | `\"\"` | SMTP Password |\n| emailReports.smtp.from | string | `\"\"` | Displayed from email address |\n| emailReports.smtp.encryption | string | `\"\"` | SMTP Encryption Default is none, supports ssl/tls and starttls |\n| emailReports.smtp.skipTLS | bool | `false` | Skip SMTP TLS verification |\n",
                      "markdown": "`| emailReports.smtp.host | string | `\"\"` | SMTP Server Host |\n| emailReports.smtp.port | int | `465` | SMTP Server Port |\n| emailReports.smtp.username | string | `\"\"` | SMTP Username |\n| emailReports.smtp.password | string | `\"\"` | SMTP Password |\n| emailReports.smtp.from | string | `\"\"` | Displayed from email address |\n| emailReports.smtp.encryption | string | `\"\"` | SMTP Encryption Default is none, supports ssl/tls and starttls |\n| emailReports.smtp.skipTLS | bool | `false` | Skip SMTP TLS verification |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 117,
                  "startColumn": 20,
                  "endLine": 117,
                  "endColumn": 28,
                  "snippet": {
                    "text": "| emailReports.smtp.host | string | `\"\"` | SMTP Server Host |\n| emailReports.smtp.port | int | `465` | SMTP Server Port |\n| emailReports.smtp.username | string | `\"\"` | SMTP Username |\n| emailReports.smtp.password | string | `\"\"` | SMTP Password |\n| emailReports.smtp.from | string | `\"\"` | Displayed from email address |\n| emailReports.smtp.encryption | string | `\"\"` | SMTP Encryption Default is none, supports ssl/tls and starttls |\n| emailReports.smtp.skipTLS | bool | `false` | Skip SMTP TLS verification |\n",
                    "rendered": {
                      "text": "| emailReports.smtp.host | string | `\"\"` | SMTP Server Host |\n| emailReports.smtp.port | int | `465` | SMTP Server Port |\n| emailReports.smtp.username | string | `\"\"` | SMTP Username |\n| emailReports.smtp.password | string | `\"\"` | SMTP Password |\n| emailReports.smtp.from | string | `\"\"` | Displayed from email address |\n| emailReports.smtp.encryption | string | `\"\"` | SMTP Encryption Default is none, supports ssl/tls and starttls |\n| emailReports.smtp.skipTLS | bool | `false` | Skip SMTP TLS verification |\n",
                      "markdown": "`| emailReports.smtp.host | string | `\"\"` | SMTP Server Host |\n| emailReports.smtp.port | int | `465` | SMTP Server Port |\n| emailReports.smtp.username | string | `\"\"` | SMTP Username |\n| emailReports.smtp.password | string | `\"\"` | SMTP Password |\n| emailReports.smtp.from | string | `\"\"` | Displayed from email address |\n| emailReports.smtp.encryption | string | `\"\"` | SMTP Encryption Default is none, supports ssl/tls and starttls |\n| emailReports.smtp.skipTLS | bool | `false` | Skip SMTP TLS verification |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 109,
                  "startColumn": 82,
                  "endLine": 109,
                  "endColumn": 90,
                  "snippet": {
                    "text": "| global.labels | object | `{}` | additional labels added on each resource |\n| basicAuth.username | string | `\"\"` | HTTP BasicAuth username |\n| basicAuth.password | string | `\"\"` | HTTP BasicAuth password |\n| basicAuth.secretRef | optional | `\"\"` | Secret reference to get username and/or password from |\n| emailReports.clusterName | optional | `\"\"` | - Displayed in the email report if configured |\n| emailReports.titlePrefix | string | `\"Report\"` | Title prefix in the email subject |\n| emailReports.resources | object | `{}` | Resource constraints for the created CronJobs |\n",
                    "rendered": {
                      "text": "| global.labels | object | `{}` | additional labels added on each resource |\n| basicAuth.username | string | `\"\"` | HTTP BasicAuth username |\n| basicAuth.password | string | `\"\"` | HTTP BasicAuth password |\n| basicAuth.secretRef | optional | `\"\"` | Secret reference to get username and/or password from |\n| emailReports.clusterName | optional | `\"\"` | - Displayed in the email report if configured |\n| emailReports.titlePrefix | string | `\"Report\"` | Title prefix in the email subject |\n| emailReports.resources | object | `{}` | Resource constraints for the created CronJobs |\n",
                      "markdown": "`| global.labels | object | `{}` | additional labels added on each resource |\n| basicAuth.username | string | `\"\"` | HTTP BasicAuth username |\n| basicAuth.password | string | `\"\"` | HTTP BasicAuth password |\n| basicAuth.secretRef | optional | `\"\"` | Secret reference to get username and/or password from |\n| emailReports.clusterName | optional | `\"\"` | - Displayed in the email report if configured |\n| emailReports.titlePrefix | string | `\"Report\"` | Title prefix in the email subject |\n| emailReports.resources | object | `{}` | Resource constraints for the created CronJobs |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 54,
                  "endLine": 108,
                  "endColumn": 62,
                  "snippet": {
                    "text": "s | object | `{\"exclude\":[\"ReplicaSet\"]}` | Filter out PolicyReports based on the scope resource kind |\n| global.labels | object | `{}` | additional labels added on each resource |\n| basicAuth.username | string | `\"\"` | HTTP BasicAuth username |\n| basicAuth.password | string | `\"\"` | HTTP BasicAuth password |\n| basicAuth.secretRef | optional | `\"\"` | Secret reference to get username and/or password from |\n| emailReports.clusterName | optional | `\"\"` | - Displayed in the email report if configured |\n| emailReports.titlePrefix | string | `\"Report\"` | Title prefix in the email subject |\n| emailReports.re",
                    "rendered": {
                      "text": "s | object | `{\"exclude\":[\"ReplicaSet\"]}` | Filter out PolicyReports based on the scope resource kind |\n| global.labels | object | `{}` | additional labels added on each resource |\n| basicAuth.username | string | `\"\"` | HTTP BasicAuth username |\n| basicAuth.password | string | `\"\"` | HTTP BasicAuth password |\n| basicAuth.secretRef | optional | `\"\"` | Secret reference to get username and/or password from |\n| emailReports.clusterName | optional | `\"\"` | - Displayed in the email report if configured |\n| emailReports.titlePrefix | string | `\"Report\"` | Title prefix in the email subject |\n| emailReports.re",
                      "markdown": "`s | object | `{\"exclude\":[\"ReplicaSet\"]}` | Filter out PolicyReports based on the scope resource kind |\n| global.labels | object | `{}` | additional labels added on each resource |\n| basicAuth.username | string | `\"\"` | HTTP BasicAuth username |\n| basicAuth.password | string | `\"\"` | HTTP BasicAuth password |\n| basicAuth.secretRef | optional | `\"\"` | Secret reference to get username and/or password from |\n| emailReports.clusterName | optional | `\"\"` | - Displayed in the email report if configured |\n| emailReports.titlePrefix | string | `\"Report\"` | Title prefix in the email subject |\n| emailReports.re`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 12,
                  "endLine": 108,
                  "endColumn": 20,
                  "snippet": {
                    "text": "terPolicyReports |\n| sourceFilters[0].kinds | object | `{\"exclude\":[\"ReplicaSet\"]}` | Filter out PolicyReports based on the scope resource kind |\n| global.labels | object | `{}` | additional labels added on each resource |\n| basicAuth.username | string | `\"\"` | HTTP BasicAuth username |\n| basicAuth.password | string | `\"\"` | HTTP BasicAuth password |\n| basicAuth.secretRef | optional | `\"\"` | Secret reference to get username and/or password from |\n| emailReports.clusterName | optional | `\"\"` | - Displayed in the email report if configured |\n| emailReports.titlePrefix | string | `\"Report\"` | Title prefi",
                    "rendered": {
                      "text": "terPolicyReports |\n| sourceFilters[0].kinds | object | `{\"exclude\":[\"ReplicaSet\"]}` | Filter out PolicyReports based on the scope resource kind |\n| global.labels | object | `{}` | additional labels added on each resource |\n| basicAuth.username | string | `\"\"` | HTTP BasicAuth username |\n| basicAuth.password | string | `\"\"` | HTTP BasicAuth password |\n| basicAuth.secretRef | optional | `\"\"` | Secret reference to get username and/or password from |\n| emailReports.clusterName | optional | `\"\"` | - Displayed in the email report if configured |\n| emailReports.titlePrefix | string | `\"Report\"` | Title prefi",
                      "markdown": "`terPolicyReports |\n| sourceFilters[0].kinds | object | `{\"exclude\":[\"ReplicaSet\"]}` | Filter out PolicyReports based on the scope resource kind |\n| global.labels | object | `{}` | additional labels added on each resource |\n| basicAuth.username | string | `\"\"` | HTTP BasicAuth username |\n| basicAuth.password | string | `\"\"` | HTTP BasicAuth password |\n| basicAuth.secretRef | optional | `\"\"` | Secret reference to get username and/or password from |\n| emailReports.clusterName | optional | `\"\"` | - Displayed in the email report if configured |\n| emailReports.titlePrefix | string | `\"Report\"` | Title prefi`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 482,
                  "startColumn": 58,
                  "endLine": 482,
                  "endColumn": 66,
                  "snippet": {
                    "text": "ivy.serviceAccount.name | string | `\"\"` | The ServiceAccount name |\n| plugin.trivy.podAnnotations | object | `{}` | Additional annotations to add to each pod |\n| plugin.trivy.podLabels | object | `{}` | Additional labels to add to each pod |\n| plugin.trivy.updateStrategy | object | `{}` | Deployment update strategy. Ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy |\n| plugin.trivy.revisionHistoryLimit | int | `10` | The number of revisions to keep |\n| plugin.trivy.podSecurityContext | object | `{\"runAsGroup\":1234,\"runAsUser\":1234}` | Security context for the pod |\n| ",
                    "rendered": {
                      "text": "ivy.serviceAccount.name | string | `\"\"` | The ServiceAccount name |\n| plugin.trivy.podAnnotations | object | `{}` | Additional annotations to add to each pod |\n| plugin.trivy.podLabels | object | `{}` | Additional labels to add to each pod |\n| plugin.trivy.updateStrategy | object | `{}` | Deployment update strategy. Ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy |\n| plugin.trivy.revisionHistoryLimit | int | `10` | The number of revisions to keep |\n| plugin.trivy.podSecurityContext | object | `{\"runAsGroup\":1234,\"runAsUser\":1234}` | Security context for the pod |\n| ",
                      "markdown": "`ivy.serviceAccount.name | string | `\"\"` | The ServiceAccount name |\n| plugin.trivy.podAnnotations | object | `{}` | Additional annotations to add to each pod |\n| plugin.trivy.podLabels | object | `{}` | Additional labels to add to each pod |\n| plugin.trivy.updateStrategy | object | `{}` | Deployment update strategy. Ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy |\n| plugin.trivy.revisionHistoryLimit | int | `10` | The number of revisions to keep |\n| plugin.trivy.podSecurityContext | object | `{\"runAsGroup\":1234,\"runAsUser\":1234}` | Security context for the pod |\n| `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 425,
                  "startColumn": 60,
                  "endLine": 425,
                  "endColumn": 68,
                  "snippet": {
                    "text": "rviceAccount.name | string | `\"\"` | The ServiceAccount name |\n| plugin.kyverno.podAnnotations | object | `{}` | Additional annotations to add to each pod |\n| plugin.kyverno.podLabels | object | `{}` | Additional labels to add to each pod |\n| plugin.kyverno.updateStrategy | object | `{}` | Deployment update strategy. Ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy |\n| plugin.kyverno.revisionHistoryLimit | int | `10` | The number of revisions to keep |\n| plugin.kyverno.podSecurityContext | object | `{\"runAsGroup\":1234,\"runAsUser\":1234}` | Security context for the pod ",
                    "rendered": {
                      "text": "rviceAccount.name | string | `\"\"` | The ServiceAccount name |\n| plugin.kyverno.podAnnotations | object | `{}` | Additional annotations to add to each pod |\n| plugin.kyverno.podLabels | object | `{}` | Additional labels to add to each pod |\n| plugin.kyverno.updateStrategy | object | `{}` | Deployment update strategy. Ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy |\n| plugin.kyverno.revisionHistoryLimit | int | `10` | The number of revisions to keep |\n| plugin.kyverno.podSecurityContext | object | `{\"runAsGroup\":1234,\"runAsUser\":1234}` | Security context for the pod ",
                      "markdown": "`rviceAccount.name | string | `\"\"` | The ServiceAccount name |\n| plugin.kyverno.podAnnotations | object | `{}` | Additional annotations to add to each pod |\n| plugin.kyverno.podLabels | object | `{}` | Additional labels to add to each pod |\n| plugin.kyverno.updateStrategy | object | `{}` | Deployment update strategy. Ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy |\n| plugin.kyverno.revisionHistoryLimit | int | `10` | The number of revisions to keep |\n| plugin.kyverno.podSecurityContext | object | `{\"runAsGroup\":1234,\"runAsUser\":1234}` | Security context for the pod `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 368,
                  "startColumn": 48,
                  "endLine": 368,
                  "endColumn": 56,
                  "snippet": {
                    "text": "ts:      - containerPort: 8081        name: oauth-proxy        protocol: TCP      resources: {} |\n| ui.podAnnotations | object | `{}` | Additional annotations to add to each pod |\n| ui.podLabels | object | `{}` | Additional labels to add to each pod |\n| ui.updateStrategy | object | `{}` | Deployment update strategy. Ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy |\n| ui.revisionHistoryLimit | int | `10` | The number of revisions to keep |\n| ui.podSecurityContext | object | `{\"runAsGroup\":1234,\"runAsUser\":1234}` | Security context for the pod |\n| ui.envVars | list | ",
                    "rendered": {
                      "text": "ts:      - containerPort: 8081        name: oauth-proxy        protocol: TCP      resources: {} |\n| ui.podAnnotations | object | `{}` | Additional annotations to add to each pod |\n| ui.podLabels | object | `{}` | Additional labels to add to each pod |\n| ui.updateStrategy | object | `{}` | Deployment update strategy. Ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy |\n| ui.revisionHistoryLimit | int | `10` | The number of revisions to keep |\n| ui.podSecurityContext | object | `{\"runAsGroup\":1234,\"runAsUser\":1234}` | Security context for the pod |\n| ui.envVars | list | ",
                      "markdown": "`ts:      - containerPort: 8081        name: oauth-proxy        protocol: TCP      resources: {} |\n| ui.podAnnotations | object | `{}` | Additional annotations to add to each pod |\n| ui.podLabels | object | `{}` | Additional labels to add to each pod |\n| ui.updateStrategy | object | `{}` | Deployment update strategy. Ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy |\n| ui.revisionHistoryLimit | int | `10` | The number of revisions to keep |\n| ui.podSecurityContext | object | `{\"runAsGroup\":1234,\"runAsUser\":1234}` | Security context for the pod |\n| ui.envVars | list | `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 116,
                  "endLine": 24,
                  "endColumn": 120,
                  "snippet": {
                    "text": "\n### Basic Installation\n\nThe basic installation provides an Prometheus Metrics Endpoint and different REST APIs, for more details have a look at the [Documentation](https://kyverno.github.io/policy-reporter/guide/02-getting-started).\n\n```bash\nhelm install policy-reporter policy-reporter/policy-reporter -n policy-reporter --create-namespace\n",
                    "rendered": {
                      "text": "\n### Basic Installation\n\nThe basic installation provides an Prometheus Metrics Endpoint and different REST APIs, for more details have a look at the [Documentation](https://kyverno.github.io/policy-reporter/guide/02-getting-started).\n\n```bash\nhelm install policy-reporter policy-reporter/policy-reporter -n policy-reporter --create-namespace\n",
                      "markdown": "`\n### Basic Installation\n\nThe basic installation provides an Prometheus Metrics Endpoint and different REST APIs, for more details have a look at the [Documentation](https://kyverno.github.io/policy-reporter/guide/02-getting-started).\n\n```bash\nhelm install policy-reporter policy-reporter/policy-reporter -n policy-reporter --create-namespace\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 9,
                  "endLine": 20,
                  "snippet": {
                    "text": "### Add the Helm repository\n```bash\nhelm repo add policy-reporter https://kyverno.github.io/policy-reporter\nhelm repo update\n```\n\n### Basic Installation\n\n",
                    "rendered": {
                      "text": "### Add the Helm repository\n```bash\nhelm repo add policy-reporter https://kyverno.github.io/policy-reporter\nhelm repo update\n```\n\n### Basic Installation\n\n",
                      "markdown": "`### Add the Helm repository\n```bash\nhelm repo add policy-reporter https://kyverno.github.io/policy-reporter\nhelm repo update\n```\n\n### Basic Installation\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 526,
                  "startColumn": 71,
                  "endLine": 526,
                  "endColumn": 77,
                  "snippet": {
                    "text": " |\n| monitoring.grafana.dashboards.enabled | bool | `true` | Enable the deployment of grafana dashboards |\n| monitoring.grafana.dashboards.label | string | `\"grafana_dashboard\"` | Label to find dashboards using the k8s sidecar |\n| monitoring.grafana.dashboards.value | string | `\"1\"` | Label value to find dashboards using the k8s sidecar |\n| monitoring.grafana.dashboards.labelFilter | list | `[]` | List of custom label filter Used to add filter for report label based metric labels defined in custom mode |\n| monitoring.grafana.dashboards.multicluster.enabled | bool | `false` | Enable cluster filter in",
                    "rendered": {
                      "text": " |\n| monitoring.grafana.dashboards.enabled | bool | `true` | Enable the deployment of grafana dashboards |\n| monitoring.grafana.dashboards.label | string | `\"grafana_dashboard\"` | Label to find dashboards using the k8s sidecar |\n| monitoring.grafana.dashboards.value | string | `\"1\"` | Label value to find dashboards using the k8s sidecar |\n| monitoring.grafana.dashboards.labelFilter | list | `[]` | List of custom label filter Used to add filter for report label based metric labels defined in custom mode |\n| monitoring.grafana.dashboards.multicluster.enabled | bool | `false` | Enable cluster filter in",
                      "markdown": "` |\n| monitoring.grafana.dashboards.enabled | bool | `true` | Enable the deployment of grafana dashboards |\n| monitoring.grafana.dashboards.label | string | `\"grafana_dashboard\"` | Label to find dashboards using the k8s sidecar |\n| monitoring.grafana.dashboards.value | string | `\"1\"` | Label value to find dashboards using the k8s sidecar |\n| monitoring.grafana.dashboards.labelFilter | list | `[]` | List of custom label filter Used to add filter for report label based metric labels defined in custom mode |\n| monitoring.grafana.dashboards.multicluster.enabled | bool | `false` | Enable cluster filter in`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 525,
                  "startColumn": 81,
                  "endLine": 525,
                  "endColumn": 87,
                  "snippet": {
                    "text": "rape interval |\n| monitoring.grafana.namespace | string | `nil` | Naamespace for configMap of grafana dashboards |\n| monitoring.grafana.dashboards.enabled | bool | `true` | Enable the deployment of grafana dashboards |\n| monitoring.grafana.dashboards.label | string | `\"grafana_dashboard\"` | Label to find dashboards using the k8s sidecar |\n| monitoring.grafana.dashboards.value | string | `\"1\"` | Label value to find dashboards using the k8s sidecar |\n| monitoring.grafana.dashboards.labelFilter | list | `[]` | List of custom label filter Used to add filter for report label based metric labels defined i",
                    "rendered": {
                      "text": "rape interval |\n| monitoring.grafana.namespace | string | `nil` | Naamespace for configMap of grafana dashboards |\n| monitoring.grafana.dashboards.enabled | bool | `true` | Enable the deployment of grafana dashboards |\n| monitoring.grafana.dashboards.label | string | `\"grafana_dashboard\"` | Label to find dashboards using the k8s sidecar |\n| monitoring.grafana.dashboards.value | string | `\"1\"` | Label value to find dashboards using the k8s sidecar |\n| monitoring.grafana.dashboards.labelFilter | list | `[]` | List of custom label filter Used to add filter for report label based metric labels defined i",
                      "markdown": "`rape interval |\n| monitoring.grafana.namespace | string | `nil` | Naamespace for configMap of grafana dashboards |\n| monitoring.grafana.dashboards.enabled | bool | `true` | Enable the deployment of grafana dashboards |\n| monitoring.grafana.dashboards.label | string | `\"grafana_dashboard\"` | Label to find dashboards using the k8s sidecar |\n| monitoring.grafana.dashboards.value | string | `\"1\"` | Label value to find dashboards using the k8s sidecar |\n| monitoring.grafana.dashboards.labelFilter | list | `[]` | List of custom label filter Used to add filter for report label based metric labels defined i`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 511,
                  "startColumn": 50,
                  "endLine": 511,
                  "endColumn": 56,
                  "snippet": {
                    "text": "vy.podDisruptionBudget.maxUnavailable | string | `nil` | Configures the maximum unavailable pods for kyvernoPlugin disruptions. Cannot be used if `minAvailable` is set. |\n| plugin.trivy.nodeSelector | object | `{}` | Node labels for pod assignment |\n| plugin.trivy.tolerations | list | `[]` | List of node taints to tolerate |\n| plugin.trivy.affinity | object | `{}` | Affinity constraints. |\n| monitoring.enabled | bool | `false` | Enables the Prometheus Operator integration |\n| monitoring.annotations | object | `{}` | Key/value pairs that are attached to all resources. |\n| monitoring.serviceMonitor.ho",
                    "rendered": {
                      "text": "vy.podDisruptionBudget.maxUnavailable | string | `nil` | Configures the maximum unavailable pods for kyvernoPlugin disruptions. Cannot be used if `minAvailable` is set. |\n| plugin.trivy.nodeSelector | object | `{}` | Node labels for pod assignment |\n| plugin.trivy.tolerations | list | `[]` | List of node taints to tolerate |\n| plugin.trivy.affinity | object | `{}` | Affinity constraints. |\n| monitoring.enabled | bool | `false` | Enables the Prometheus Operator integration |\n| monitoring.annotations | object | `{}` | Key/value pairs that are attached to all resources. |\n| monitoring.serviceMonitor.ho",
                      "markdown": "`vy.podDisruptionBudget.maxUnavailable | string | `nil` | Configures the maximum unavailable pods for kyvernoPlugin disruptions. Cannot be used if `minAvailable` is set. |\n| plugin.trivy.nodeSelector | object | `{}` | Node labels for pod assignment |\n| plugin.trivy.tolerations | list | `[]` | List of node taints to tolerate |\n| plugin.trivy.affinity | object | `{}` | Affinity constraints. |\n| monitoring.enabled | bool | `false` | Enables the Prometheus Operator integration |\n| monitoring.annotations | object | `{}` | Key/value pairs that are attached to all resources. |\n| monitoring.serviceMonitor.ho`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 510,
                  "startColumn": 45,
                  "endLine": 510,
                  "endColumn": 51,
                  "snippet": {
                    "text": "kyvernoPlugin disruptions. Cannot be used if `maxUnavailable` is set. |\n| plugin.trivy.podDisruptionBudget.maxUnavailable | string | `nil` | Configures the maximum unavailable pods for kyvernoPlugin disruptions. Cannot be used if `minAvailable` is set. |\n| plugin.trivy.nodeSelector | object | `{}` | Node labels for pod assignment |\n| plugin.trivy.tolerations | list | `[]` | List of node taints to tolerate |\n| plugin.trivy.affinity | object | `{}` | Affinity constraints. |\n| monitoring.enabled | bool | `false` | Enables the Prometheus Operator integration |\n| monitoring.annotations | object | `{}` | ",
                    "rendered": {
                      "text": "kyvernoPlugin disruptions. Cannot be used if `maxUnavailable` is set. |\n| plugin.trivy.podDisruptionBudget.maxUnavailable | string | `nil` | Configures the maximum unavailable pods for kyvernoPlugin disruptions. Cannot be used if `minAvailable` is set. |\n| plugin.trivy.nodeSelector | object | `{}` | Node labels for pod assignment |\n| plugin.trivy.tolerations | list | `[]` | List of node taints to tolerate |\n| plugin.trivy.affinity | object | `{}` | Affinity constraints. |\n| monitoring.enabled | bool | `false` | Enables the Prometheus Operator integration |\n| monitoring.annotations | object | `{}` | ",
                      "markdown": "`kyvernoPlugin disruptions. Cannot be used if `maxUnavailable` is set. |\n| plugin.trivy.podDisruptionBudget.maxUnavailable | string | `nil` | Configures the maximum unavailable pods for kyvernoPlugin disruptions. Cannot be used if `minAvailable` is set. |\n| plugin.trivy.nodeSelector | object | `{}` | Node labels for pod assignment |\n| plugin.trivy.tolerations | list | `[]` | List of node taints to tolerate |\n| plugin.trivy.affinity | object | `{}` | Affinity constraints. |\n| monitoring.enabled | bool | `false` | Enables the Prometheus Operator integration |\n| monitoring.annotations | object | `{}` | `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 497,
                  "startColumn": 47,
                  "endLine": 497,
                  "endColumn": 56,
                  "snippet": {
                    "text": "| plugin.trivy.service.type | string | `\"ClusterIP\"` | Service type. |\n| plugin.trivy.service.port | int | `8080` | Service port. |\n| plugin.trivy.service.annotations | object | `{}` | Service annotations. |\n| plugin.trivy.service.labels | object | `{}` | Service labels. |\n| plugin.trivy.ingress.enabled | bool | `false` | Create ingress resource. |\n| plugin.trivy.ingress.className | string | `\"\"` | Ingress class name. |\n| plugin.trivy.ingress.labels | object | `{}` | Ingress labels. |\n",
                    "rendered": {
                      "text": "| plugin.trivy.service.type | string | `\"ClusterIP\"` | Service type. |\n| plugin.trivy.service.port | int | `8080` | Service port. |\n| plugin.trivy.service.annotations | object | `{}` | Service annotations. |\n| plugin.trivy.service.labels | object | `{}` | Service labels. |\n| plugin.trivy.ingress.enabled | bool | `false` | Create ingress resource. |\n| plugin.trivy.ingress.className | string | `\"\"` | Ingress class name. |\n| plugin.trivy.ingress.labels | object | `{}` | Ingress labels. |\n",
                      "markdown": "`| plugin.trivy.service.type | string | `\"ClusterIP\"` | Service type. |\n| plugin.trivy.service.port | int | `8080` | Service port. |\n| plugin.trivy.service.annotations | object | `{}` | Service annotations. |\n| plugin.trivy.service.labels | object | `{}` | Service labels. |\n| plugin.trivy.ingress.enabled | bool | `false` | Create ingress resource. |\n| plugin.trivy.ingress.className | string | `\"\"` | Ingress class name. |\n| plugin.trivy.ingress.labels | object | `{}` | Ingress labels. |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 496,
                  "startColumn": 52,
                  "endLine": 496,
                  "endColumn": 61,
                  "snippet": {
                    "text": "| plugin.trivy.securityContext.seccompProfile.type | string | `\"RuntimeDefault\"` |  |\n| plugin.trivy.service.type | string | `\"ClusterIP\"` | Service type. |\n| plugin.trivy.service.port | int | `8080` | Service port. |\n| plugin.trivy.service.annotations | object | `{}` | Service annotations. |\n| plugin.trivy.service.labels | object | `{}` | Service labels. |\n| plugin.trivy.ingress.enabled | bool | `false` | Create ingress resource. |\n| plugin.trivy.ingress.className | string | `\"\"` | Ingress class name. |\n",
                    "rendered": {
                      "text": "| plugin.trivy.securityContext.seccompProfile.type | string | `\"RuntimeDefault\"` |  |\n| plugin.trivy.service.type | string | `\"ClusterIP\"` | Service type. |\n| plugin.trivy.service.port | int | `8080` | Service port. |\n| plugin.trivy.service.annotations | object | `{}` | Service annotations. |\n| plugin.trivy.service.labels | object | `{}` | Service labels. |\n| plugin.trivy.ingress.enabled | bool | `false` | Create ingress resource. |\n| plugin.trivy.ingress.className | string | `\"\"` | Ingress class name. |\n",
                      "markdown": "`| plugin.trivy.securityContext.seccompProfile.type | string | `\"RuntimeDefault\"` |  |\n| plugin.trivy.service.type | string | `\"ClusterIP\"` | Service type. |\n| plugin.trivy.service.port | int | `8080` | Service port. |\n| plugin.trivy.service.annotations | object | `{}` | Service annotations. |\n| plugin.trivy.service.labels | object | `{}` | Service labels. |\n| plugin.trivy.ingress.enabled | bool | `false` | Create ingress resource. |\n| plugin.trivy.ingress.className | string | `\"\"` | Ingress class name. |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 495,
                  "startColumn": 44,
                  "endLine": 495,
                  "endColumn": 53,
                  "snippet": {
                    "text": "| plugin.trivy.securityContext.capabilities.drop[0] | string | `\"ALL\"` |  |\n| plugin.trivy.securityContext.seccompProfile.type | string | `\"RuntimeDefault\"` |  |\n| plugin.trivy.service.type | string | `\"ClusterIP\"` | Service type. |\n| plugin.trivy.service.port | int | `8080` | Service port. |\n| plugin.trivy.service.annotations | object | `{}` | Service annotations. |\n| plugin.trivy.service.labels | object | `{}` | Service labels. |\n| plugin.trivy.ingress.enabled | bool | `false` | Create ingress resource. |\n",
                    "rendered": {
                      "text": "| plugin.trivy.securityContext.capabilities.drop[0] | string | `\"ALL\"` |  |\n| plugin.trivy.securityContext.seccompProfile.type | string | `\"RuntimeDefault\"` |  |\n| plugin.trivy.service.type | string | `\"ClusterIP\"` | Service type. |\n| plugin.trivy.service.port | int | `8080` | Service port. |\n| plugin.trivy.service.annotations | object | `{}` | Service annotations. |\n| plugin.trivy.service.labels | object | `{}` | Service labels. |\n| plugin.trivy.ingress.enabled | bool | `false` | Create ingress resource. |\n",
                      "markdown": "`| plugin.trivy.securityContext.capabilities.drop[0] | string | `\"ALL\"` |  |\n| plugin.trivy.securityContext.seccompProfile.type | string | `\"RuntimeDefault\"` |  |\n| plugin.trivy.service.type | string | `\"ClusterIP\"` | Service type. |\n| plugin.trivy.service.port | int | `8080` | Service port. |\n| plugin.trivy.service.annotations | object | `{}` | Service annotations. |\n| plugin.trivy.service.labels | object | `{}` | Service labels. |\n| plugin.trivy.ingress.enabled | bool | `false` | Create ingress resource. |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 494,
                  "startColumn": 54,
                  "endLine": 494,
                  "endColumn": 63,
                  "snippet": {
                    "text": "| plugin.trivy.securityContext.readOnlyRootFilesystem | bool | `true` |  |\n| plugin.trivy.securityContext.capabilities.drop[0] | string | `\"ALL\"` |  |\n| plugin.trivy.securityContext.seccompProfile.type | string | `\"RuntimeDefault\"` |  |\n| plugin.trivy.service.type | string | `\"ClusterIP\"` | Service type. |\n| plugin.trivy.service.port | int | `8080` | Service port. |\n| plugin.trivy.service.annotations | object | `{}` | Service annotations. |\n| plugin.trivy.service.labels | object | `{}` | Service labels. |\n",
                    "rendered": {
                      "text": "| plugin.trivy.securityContext.readOnlyRootFilesystem | bool | `true` |  |\n| plugin.trivy.securityContext.capabilities.drop[0] | string | `\"ALL\"` |  |\n| plugin.trivy.securityContext.seccompProfile.type | string | `\"RuntimeDefault\"` |  |\n| plugin.trivy.service.type | string | `\"ClusterIP\"` | Service type. |\n| plugin.trivy.service.port | int | `8080` | Service port. |\n| plugin.trivy.service.annotations | object | `{}` | Service annotations. |\n| plugin.trivy.service.labels | object | `{}` | Service labels. |\n",
                      "markdown": "`| plugin.trivy.securityContext.readOnlyRootFilesystem | bool | `true` |  |\n| plugin.trivy.securityContext.capabilities.drop[0] | string | `\"ALL\"` |  |\n| plugin.trivy.securityContext.seccompProfile.type | string | `\"RuntimeDefault\"` |  |\n| plugin.trivy.service.type | string | `\"ClusterIP\"` | Service type. |\n| plugin.trivy.service.port | int | `8080` | Service port. |\n| plugin.trivy.service.annotations | object | `{}` | Service annotations. |\n| plugin.trivy.service.labels | object | `{}` | Service labels. |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 485,
                  "startColumn": 55,
                  "endLine": 485,
                  "endColumn": 60,
                  "snippet": {
                    "text": "rkloads/controllers/deployment/#strategy |\n| plugin.trivy.revisionHistoryLimit | int | `10` | The number of revisions to keep |\n| plugin.trivy.podSecurityContext | object | `{\"runAsGroup\":1234,\"runAsUser\":1234}` | Security context for the pod |\n| plugin.trivy.envVars | list | `[]` | Allow additional env variables to be added |\n| plugin.trivy.rbac.enabled | bool | `true` | Create RBAC resources |\n| plugin.trivy.securityContext.runAsUser | int | `1234` |  |\n| plugin.trivy.securityContext.runAsNonRoot | bool | `true` |  |\n| plugin.trivy.securityContext.privileged | bool | `false` |  |\n| plugin.trivy.s",
                    "rendered": {
                      "text": "rkloads/controllers/deployment/#strategy |\n| plugin.trivy.revisionHistoryLimit | int | `10` | The number of revisions to keep |\n| plugin.trivy.podSecurityContext | object | `{\"runAsGroup\":1234,\"runAsUser\":1234}` | Security context for the pod |\n| plugin.trivy.envVars | list | `[]` | Allow additional env variables to be added |\n| plugin.trivy.rbac.enabled | bool | `true` | Create RBAC resources |\n| plugin.trivy.securityContext.runAsUser | int | `1234` |  |\n| plugin.trivy.securityContext.runAsNonRoot | bool | `true` |  |\n| plugin.trivy.securityContext.privileged | bool | `false` |  |\n| plugin.trivy.s",
                      "markdown": "`rkloads/controllers/deployment/#strategy |\n| plugin.trivy.revisionHistoryLimit | int | `10` | The number of revisions to keep |\n| plugin.trivy.podSecurityContext | object | `{\"runAsGroup\":1234,\"runAsUser\":1234}` | Security context for the pod |\n| plugin.trivy.envVars | list | `[]` | Allow additional env variables to be added |\n| plugin.trivy.rbac.enabled | bool | `true` | Create RBAC resources |\n| plugin.trivy.securityContext.runAsUser | int | `1234` |  |\n| plugin.trivy.securityContext.runAsNonRoot | bool | `true` |  |\n| plugin.trivy.securityContext.privileged | bool | `false` |  |\n| plugin.trivy.s`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 459,
                  "startColumn": 52,
                  "endLine": 459,
                  "endColumn": 58,
                  "snippet": {
                    "text": "odDisruptionBudget.maxUnavailable | string | `nil` | Configures the maximum unavailable pods for kyvernoPlugin disruptions. Cannot be used if `minAvailable` is set. |\n| plugin.kyverno.nodeSelector | object | `{}` | Node labels for pod assignment |\n| plugin.kyverno.tolerations | list | `[]` | List of node taints to tolerate |\n| plugin.kyverno.affinity | object | `{}` | Affinity constraints. |\n| plugin.trivy.enabled | bool | `false` | Enable Trivy Operator Plugin |\n| plugin.trivy.image.registry | string | `\"ghcr.io\"` | Image registry |\n| plugin.trivy.image.repository | string | `\"kyverno/policy-report",
                    "rendered": {
                      "text": "odDisruptionBudget.maxUnavailable | string | `nil` | Configures the maximum unavailable pods for kyvernoPlugin disruptions. Cannot be used if `minAvailable` is set. |\n| plugin.kyverno.nodeSelector | object | `{}` | Node labels for pod assignment |\n| plugin.kyverno.tolerations | list | `[]` | List of node taints to tolerate |\n| plugin.kyverno.affinity | object | `{}` | Affinity constraints. |\n| plugin.trivy.enabled | bool | `false` | Enable Trivy Operator Plugin |\n| plugin.trivy.image.registry | string | `\"ghcr.io\"` | Image registry |\n| plugin.trivy.image.repository | string | `\"kyverno/policy-report",
                      "markdown": "`odDisruptionBudget.maxUnavailable | string | `nil` | Configures the maximum unavailable pods for kyvernoPlugin disruptions. Cannot be used if `minAvailable` is set. |\n| plugin.kyverno.nodeSelector | object | `{}` | Node labels for pod assignment |\n| plugin.kyverno.tolerations | list | `[]` | List of node taints to tolerate |\n| plugin.kyverno.affinity | object | `{}` | Affinity constraints. |\n| plugin.trivy.enabled | bool | `false` | Enable Trivy Operator Plugin |\n| plugin.trivy.image.registry | string | `\"ghcr.io\"` | Image registry |\n| plugin.trivy.image.repository | string | `\"kyverno/policy-report`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 458,
                  "startColumn": 47,
                  "endLine": 458,
                  "endColumn": 53,
                  "snippet": {
                    "text": "rnoPlugin disruptions. Cannot be used if `maxUnavailable` is set. |\n| plugin.kyverno.podDisruptionBudget.maxUnavailable | string | `nil` | Configures the maximum unavailable pods for kyvernoPlugin disruptions. Cannot be used if `minAvailable` is set. |\n| plugin.kyverno.nodeSelector | object | `{}` | Node labels for pod assignment |\n| plugin.kyverno.tolerations | list | `[]` | List of node taints to tolerate |\n| plugin.kyverno.affinity | object | `{}` | Affinity constraints. |\n| plugin.trivy.enabled | bool | `false` | Enable Trivy Operator Plugin |\n| plugin.trivy.image.registry | string | `\"ghcr.io\"`",
                    "rendered": {
                      "text": "rnoPlugin disruptions. Cannot be used if `maxUnavailable` is set. |\n| plugin.kyverno.podDisruptionBudget.maxUnavailable | string | `nil` | Configures the maximum unavailable pods for kyvernoPlugin disruptions. Cannot be used if `minAvailable` is set. |\n| plugin.kyverno.nodeSelector | object | `{}` | Node labels for pod assignment |\n| plugin.kyverno.tolerations | list | `[]` | List of node taints to tolerate |\n| plugin.kyverno.affinity | object | `{}` | Affinity constraints. |\n| plugin.trivy.enabled | bool | `false` | Enable Trivy Operator Plugin |\n| plugin.trivy.image.registry | string | `\"ghcr.io\"`",
                      "markdown": "`rnoPlugin disruptions. Cannot be used if `maxUnavailable` is set. |\n| plugin.kyverno.podDisruptionBudget.maxUnavailable | string | `nil` | Configures the maximum unavailable pods for kyvernoPlugin disruptions. Cannot be used if `minAvailable` is set. |\n| plugin.kyverno.nodeSelector | object | `{}` | Node labels for pod assignment |\n| plugin.kyverno.tolerations | list | `[]` | List of node taints to tolerate |\n| plugin.kyverno.affinity | object | `{}` | Affinity constraints. |\n| plugin.trivy.enabled | bool | `false` | Enable Trivy Operator Plugin |\n| plugin.trivy.image.registry | string | `\"ghcr.io\"``"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 440,
                  "startColumn": 49,
                  "endLine": 440,
                  "endColumn": 58,
                  "snippet": {
                    "text": "| plugin.kyverno.service.type | string | `\"ClusterIP\"` | Service type. |\n| plugin.kyverno.service.port | int | `8080` | Service port. |\n| plugin.kyverno.service.annotations | object | `{}` | Service annotations. |\n| plugin.kyverno.service.labels | object | `{}` | Service labels. |\n| plugin.kyverno.ingress.enabled | bool | `false` | Create ingress resource. |\n| plugin.kyverno.ingress.className | string | `\"\"` | Ingress class name. |\n| plugin.kyverno.ingress.labels | object | `{}` | Ingress labels. |\n",
                    "rendered": {
                      "text": "| plugin.kyverno.service.type | string | `\"ClusterIP\"` | Service type. |\n| plugin.kyverno.service.port | int | `8080` | Service port. |\n| plugin.kyverno.service.annotations | object | `{}` | Service annotations. |\n| plugin.kyverno.service.labels | object | `{}` | Service labels. |\n| plugin.kyverno.ingress.enabled | bool | `false` | Create ingress resource. |\n| plugin.kyverno.ingress.className | string | `\"\"` | Ingress class name. |\n| plugin.kyverno.ingress.labels | object | `{}` | Ingress labels. |\n",
                      "markdown": "`| plugin.kyverno.service.type | string | `\"ClusterIP\"` | Service type. |\n| plugin.kyverno.service.port | int | `8080` | Service port. |\n| plugin.kyverno.service.annotations | object | `{}` | Service annotations. |\n| plugin.kyverno.service.labels | object | `{}` | Service labels. |\n| plugin.kyverno.ingress.enabled | bool | `false` | Create ingress resource. |\n| plugin.kyverno.ingress.className | string | `\"\"` | Ingress class name. |\n| plugin.kyverno.ingress.labels | object | `{}` | Ingress labels. |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 439,
                  "startColumn": 54,
                  "endLine": 439,
                  "endColumn": 63,
                  "snippet": {
                    "text": "| plugin.kyverno.securityContext.seccompProfile.type | string | `\"RuntimeDefault\"` |  |\n| plugin.kyverno.service.type | string | `\"ClusterIP\"` | Service type. |\n| plugin.kyverno.service.port | int | `8080` | Service port. |\n| plugin.kyverno.service.annotations | object | `{}` | Service annotations. |\n| plugin.kyverno.service.labels | object | `{}` | Service labels. |\n| plugin.kyverno.ingress.enabled | bool | `false` | Create ingress resource. |\n| plugin.kyverno.ingress.className | string | `\"\"` | Ingress class name. |\n",
                    "rendered": {
                      "text": "| plugin.kyverno.securityContext.seccompProfile.type | string | `\"RuntimeDefault\"` |  |\n| plugin.kyverno.service.type | string | `\"ClusterIP\"` | Service type. |\n| plugin.kyverno.service.port | int | `8080` | Service port. |\n| plugin.kyverno.service.annotations | object | `{}` | Service annotations. |\n| plugin.kyverno.service.labels | object | `{}` | Service labels. |\n| plugin.kyverno.ingress.enabled | bool | `false` | Create ingress resource. |\n| plugin.kyverno.ingress.className | string | `\"\"` | Ingress class name. |\n",
                      "markdown": "`| plugin.kyverno.securityContext.seccompProfile.type | string | `\"RuntimeDefault\"` |  |\n| plugin.kyverno.service.type | string | `\"ClusterIP\"` | Service type. |\n| plugin.kyverno.service.port | int | `8080` | Service port. |\n| plugin.kyverno.service.annotations | object | `{}` | Service annotations. |\n| plugin.kyverno.service.labels | object | `{}` | Service labels. |\n| plugin.kyverno.ingress.enabled | bool | `false` | Create ingress resource. |\n| plugin.kyverno.ingress.className | string | `\"\"` | Ingress class name. |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 438,
                  "startColumn": 46,
                  "endLine": 438,
                  "endColumn": 55,
                  "snippet": {
                    "text": "| plugin.kyverno.securityContext.capabilities.drop[0] | string | `\"ALL\"` |  |\n| plugin.kyverno.securityContext.seccompProfile.type | string | `\"RuntimeDefault\"` |  |\n| plugin.kyverno.service.type | string | `\"ClusterIP\"` | Service type. |\n| plugin.kyverno.service.port | int | `8080` | Service port. |\n| plugin.kyverno.service.annotations | object | `{}` | Service annotations. |\n| plugin.kyverno.service.labels | object | `{}` | Service labels. |\n| plugin.kyverno.ingress.enabled | bool | `false` | Create ingress resource. |\n",
                    "rendered": {
                      "text": "| plugin.kyverno.securityContext.capabilities.drop[0] | string | `\"ALL\"` |  |\n| plugin.kyverno.securityContext.seccompProfile.type | string | `\"RuntimeDefault\"` |  |\n| plugin.kyverno.service.type | string | `\"ClusterIP\"` | Service type. |\n| plugin.kyverno.service.port | int | `8080` | Service port. |\n| plugin.kyverno.service.annotations | object | `{}` | Service annotations. |\n| plugin.kyverno.service.labels | object | `{}` | Service labels. |\n| plugin.kyverno.ingress.enabled | bool | `false` | Create ingress resource. |\n",
                      "markdown": "`| plugin.kyverno.securityContext.capabilities.drop[0] | string | `\"ALL\"` |  |\n| plugin.kyverno.securityContext.seccompProfile.type | string | `\"RuntimeDefault\"` |  |\n| plugin.kyverno.service.type | string | `\"ClusterIP\"` | Service type. |\n| plugin.kyverno.service.port | int | `8080` | Service port. |\n| plugin.kyverno.service.annotations | object | `{}` | Service annotations. |\n| plugin.kyverno.service.labels | object | `{}` | Service labels. |\n| plugin.kyverno.ingress.enabled | bool | `false` | Create ingress resource. |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 437,
                  "startColumn": 56,
                  "endLine": 437,
                  "endColumn": 65,
                  "snippet": {
                    "text": "| plugin.kyverno.securityContext.readOnlyRootFilesystem | bool | `true` |  |\n| plugin.kyverno.securityContext.capabilities.drop[0] | string | `\"ALL\"` |  |\n| plugin.kyverno.securityContext.seccompProfile.type | string | `\"RuntimeDefault\"` |  |\n| plugin.kyverno.service.type | string | `\"ClusterIP\"` | Service type. |\n| plugin.kyverno.service.port | int | `8080` | Service port. |\n| plugin.kyverno.service.annotations | object | `{}` | Service annotations. |\n| plugin.kyverno.service.labels | object | `{}` | Service labels. |\n",
                    "rendered": {
                      "text": "| plugin.kyverno.securityContext.readOnlyRootFilesystem | bool | `true` |  |\n| plugin.kyverno.securityContext.capabilities.drop[0] | string | `\"ALL\"` |  |\n| plugin.kyverno.securityContext.seccompProfile.type | string | `\"RuntimeDefault\"` |  |\n| plugin.kyverno.service.type | string | `\"ClusterIP\"` | Service type. |\n| plugin.kyverno.service.port | int | `8080` | Service port. |\n| plugin.kyverno.service.annotations | object | `{}` | Service annotations. |\n| plugin.kyverno.service.labels | object | `{}` | Service labels. |\n",
                      "markdown": "`| plugin.kyverno.securityContext.readOnlyRootFilesystem | bool | `true` |  |\n| plugin.kyverno.securityContext.capabilities.drop[0] | string | `\"ALL\"` |  |\n| plugin.kyverno.securityContext.seccompProfile.type | string | `\"RuntimeDefault\"` |  |\n| plugin.kyverno.service.type | string | `\"ClusterIP\"` | Service type. |\n| plugin.kyverno.service.port | int | `8080` | Service port. |\n| plugin.kyverno.service.annotations | object | `{}` | Service annotations. |\n| plugin.kyverno.service.labels | object | `{}` | Service labels. |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 428,
                  "startColumn": 57,
                  "endLine": 428,
                  "endColumn": 62,
                  "snippet": {
                    "text": "s/controllers/deployment/#strategy |\n| plugin.kyverno.revisionHistoryLimit | int | `10` | The number of revisions to keep |\n| plugin.kyverno.podSecurityContext | object | `{\"runAsGroup\":1234,\"runAsUser\":1234}` | Security context for the pod |\n| plugin.kyverno.envVars | list | `[]` | Allow additional env variables to be added |\n| plugin.kyverno.rbac.enabled | bool | `true` | Create RBAC resources |\n| plugin.kyverno.securityContext.runAsUser | int | `1234` |  |\n| plugin.kyverno.securityContext.runAsNonRoot | bool | `true` |  |\n| plugin.kyverno.securityContext.privileged | bool | `false` |  |\n| plugin",
                    "rendered": {
                      "text": "s/controllers/deployment/#strategy |\n| plugin.kyverno.revisionHistoryLimit | int | `10` | The number of revisions to keep |\n| plugin.kyverno.podSecurityContext | object | `{\"runAsGroup\":1234,\"runAsUser\":1234}` | Security context for the pod |\n| plugin.kyverno.envVars | list | `[]` | Allow additional env variables to be added |\n| plugin.kyverno.rbac.enabled | bool | `true` | Create RBAC resources |\n| plugin.kyverno.securityContext.runAsUser | int | `1234` |  |\n| plugin.kyverno.securityContext.runAsNonRoot | bool | `true` |  |\n| plugin.kyverno.securityContext.privileged | bool | `false` |  |\n| plugin",
                      "markdown": "`s/controllers/deployment/#strategy |\n| plugin.kyverno.revisionHistoryLimit | int | `10` | The number of revisions to keep |\n| plugin.kyverno.podSecurityContext | object | `{\"runAsGroup\":1234,\"runAsUser\":1234}` | Security context for the pod |\n| plugin.kyverno.envVars | list | `[]` | Allow additional env variables to be added |\n| plugin.kyverno.rbac.enabled | bool | `true` | Create RBAC resources |\n| plugin.kyverno.securityContext.runAsUser | int | `1234` |  |\n| plugin.kyverno.securityContext.runAsNonRoot | bool | `true` |  |\n| plugin.kyverno.securityContext.privileged | bool | `false` |  |\n| plugin`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 413,
                  "startColumn": 139,
                  "endLine": 413,
                  "endColumn": 146,
                  "snippet": {
                    "text": "nfo |\n| plugin.kyverno.server.port | int | `8080` | Application port |\n| plugin.kyverno.blockReports.enabled | bool | `false` | Enables he BlockReport feature |\n| plugin.kyverno.blockReports.eventNamespace | string | `\"default\"` | Watches for Kyverno Events in the configured namespace leave blank to watch in all namespaces |\n| plugin.kyverno.blockReports.results.maxPerReport | int | `200` | Max items per PolicyReport resource |\n| plugin.kyverno.blockReports.results.keepOnlyLatest | bool | `false` | Keep only the latest of duplicated events |\n| plugin.kyverno.blockReports.policyReport.labels | list | ",
                    "rendered": {
                      "text": "nfo |\n| plugin.kyverno.server.port | int | `8080` | Application port |\n| plugin.kyverno.blockReports.enabled | bool | `false` | Enables he BlockReport feature |\n| plugin.kyverno.blockReports.eventNamespace | string | `\"default\"` | Watches for Kyverno Events in the configured namespace leave blank to watch in all namespaces |\n| plugin.kyverno.blockReports.results.maxPerReport | int | `200` | Max items per PolicyReport resource |\n| plugin.kyverno.blockReports.results.keepOnlyLatest | bool | `false` | Keep only the latest of duplicated events |\n| plugin.kyverno.blockReports.policyReport.labels | list | ",
                      "markdown": "`nfo |\n| plugin.kyverno.server.port | int | `8080` | Application port |\n| plugin.kyverno.blockReports.enabled | bool | `false` | Enables he BlockReport feature |\n| plugin.kyverno.blockReports.eventNamespace | string | `\"default\"` | Watches for Kyverno Events in the configured namespace leave blank to watch in all namespaces |\n| plugin.kyverno.blockReports.results.maxPerReport | int | `200` | Max items per PolicyReport resource |\n| plugin.kyverno.blockReports.results.keepOnlyLatest | bool | `false` | Keep only the latest of duplicated events |\n| plugin.kyverno.blockReports.policyReport.labels | list | `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 399,
                  "startColumn": 40,
                  "endLine": 399,
                  "endColumn": 46,
                  "snippet": {
                    "text": "ilable` is set. |\n| ui.podDisruptionBudget.maxUnavailable | string | `nil` | Configures the maximum unavailable pods for kyvernoPlugin disruptions. Cannot be used if `minAvailable` is set. |\n| ui.nodeSelector | object | `{}` | Node labels for pod assignment |\n| ui.tolerations | list | `[]` | List of node taints to tolerate |\n| ui.affinity | object | `{}` | Affinity constraints. |\n| plugin.kyverno.enabled | bool | `false` | Enable Kyverno Plugin |\n| plugin.kyverno.image.registry | string | `\"ghcr.io\"` | Image registry |\n| plugin.kyverno.image.repository | string | `\"kyverno/policy-reporter/kyverno-pl",
                    "rendered": {
                      "text": "ilable` is set. |\n| ui.podDisruptionBudget.maxUnavailable | string | `nil` | Configures the maximum unavailable pods for kyvernoPlugin disruptions. Cannot be used if `minAvailable` is set. |\n| ui.nodeSelector | object | `{}` | Node labels for pod assignment |\n| ui.tolerations | list | `[]` | List of node taints to tolerate |\n| ui.affinity | object | `{}` | Affinity constraints. |\n| plugin.kyverno.enabled | bool | `false` | Enable Kyverno Plugin |\n| plugin.kyverno.image.registry | string | `\"ghcr.io\"` | Image registry |\n| plugin.kyverno.image.repository | string | `\"kyverno/policy-reporter/kyverno-pl",
                      "markdown": "`ilable` is set. |\n| ui.podDisruptionBudget.maxUnavailable | string | `nil` | Configures the maximum unavailable pods for kyvernoPlugin disruptions. Cannot be used if `minAvailable` is set. |\n| ui.nodeSelector | object | `{}` | Node labels for pod assignment |\n| ui.tolerations | list | `[]` | List of node taints to tolerate |\n| ui.affinity | object | `{}` | Affinity constraints. |\n| plugin.kyverno.enabled | bool | `false` | Enable Kyverno Plugin |\n| plugin.kyverno.image.registry | string | `\"ghcr.io\"` | Image registry |\n| plugin.kyverno.image.repository | string | `\"kyverno/policy-reporter/kyverno-pl`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 398,
                  "startColumn": 35,
                  "endLine": 398,
                  "endColumn": 41,
                  "snippet": {
                    "text": " available pods for kyvernoPlugin disruptions. Cannot be used if `maxUnavailable` is set. |\n| ui.podDisruptionBudget.maxUnavailable | string | `nil` | Configures the maximum unavailable pods for kyvernoPlugin disruptions. Cannot be used if `minAvailable` is set. |\n| ui.nodeSelector | object | `{}` | Node labels for pod assignment |\n| ui.tolerations | list | `[]` | List of node taints to tolerate |\n| ui.affinity | object | `{}` | Affinity constraints. |\n| plugin.kyverno.enabled | bool | `false` | Enable Kyverno Plugin |\n| plugin.kyverno.image.registry | string | `\"ghcr.io\"` | Image registry |\n| plugi",
                    "rendered": {
                      "text": " available pods for kyvernoPlugin disruptions. Cannot be used if `maxUnavailable` is set. |\n| ui.podDisruptionBudget.maxUnavailable | string | `nil` | Configures the maximum unavailable pods for kyvernoPlugin disruptions. Cannot be used if `minAvailable` is set. |\n| ui.nodeSelector | object | `{}` | Node labels for pod assignment |\n| ui.tolerations | list | `[]` | List of node taints to tolerate |\n| ui.affinity | object | `{}` | Affinity constraints. |\n| plugin.kyverno.enabled | bool | `false` | Enable Kyverno Plugin |\n| plugin.kyverno.image.registry | string | `\"ghcr.io\"` | Image registry |\n| plugi",
                      "markdown": "` available pods for kyvernoPlugin disruptions. Cannot be used if `maxUnavailable` is set. |\n| ui.podDisruptionBudget.maxUnavailable | string | `nil` | Configures the maximum unavailable pods for kyvernoPlugin disruptions. Cannot be used if `minAvailable` is set. |\n| ui.nodeSelector | object | `{}` | Node labels for pod assignment |\n| ui.tolerations | list | `[]` | List of node taints to tolerate |\n| ui.affinity | object | `{}` | Affinity constraints. |\n| plugin.kyverno.enabled | bool | `false` | Enable Kyverno Plugin |\n| plugin.kyverno.image.registry | string | `\"ghcr.io\"` | Image registry |\n| plugi`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 386,
                  "startColumn": 90,
                  "endLine": 386,
                  "endColumn": 99,
                  "snippet": {
                    "text": "| ui.service.labels | object | `{}` | Service labels. |\n| ui.service.additionalPorts | list | `[]` | Additional service ports for e.g. Sidecars  # - name: authenticated additionalPorts: - name: authenticated   port: 8081   targetPort: 8081 |\n| ui.ingress.enabled | bool | `false` | Create ingress resource. |\n| ui.ingress.port | string | `nil` | Redirect ingress to an additional defined port on the service |\n| ui.ingress.className | string | `\"\"` | Ingress class name. |\n| ui.ingress.labels | object | `{}` | Ingress labels. |\n| ui.ingress.annotations | object | `{}` | Ingress annotations. |\n",
                    "rendered": {
                      "text": "| ui.service.labels | object | `{}` | Service labels. |\n| ui.service.additionalPorts | list | `[]` | Additional service ports for e.g. Sidecars  # - name: authenticated additionalPorts: - name: authenticated   port: 8081   targetPort: 8081 |\n| ui.ingress.enabled | bool | `false` | Create ingress resource. |\n| ui.ingress.port | string | `nil` | Redirect ingress to an additional defined port on the service |\n| ui.ingress.className | string | `\"\"` | Ingress class name. |\n| ui.ingress.labels | object | `{}` | Ingress labels. |\n| ui.ingress.annotations | object | `{}` | Ingress annotations. |\n",
                      "markdown": "`| ui.service.labels | object | `{}` | Service labels. |\n| ui.service.additionalPorts | list | `[]` | Additional service ports for e.g. Sidecars  # - name: authenticated additionalPorts: - name: authenticated   port: 8081   targetPort: 8081 |\n| ui.ingress.enabled | bool | `false` | Create ingress resource. |\n| ui.ingress.port | string | `nil` | Redirect ingress to an additional defined port on the service |\n| ui.ingress.className | string | `\"\"` | Ingress class name. |\n| ui.ingress.labels | object | `{}` | Ingress labels. |\n| ui.ingress.annotations | object | `{}` | Ingress annotations. |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 384,
                  "startColumn": 55,
                  "endLine": 384,
                  "endColumn": 64,
                  "snippet": {
                    "text": "| ui.service.port | int | `8080` | Service port. |\n| ui.service.annotations | object | `{}` | Service annotations. |\n| ui.service.labels | object | `{}` | Service labels. |\n| ui.service.additionalPorts | list | `[]` | Additional service ports for e.g. Sidecars  # - name: authenticated additionalPorts: - name: authenticated   port: 8081   targetPort: 8081 |\n| ui.ingress.enabled | bool | `false` | Create ingress resource. |\n| ui.ingress.port | string | `nil` | Redirect ingress to an additional defined port on the service |\n| ui.ingress.className | string | `\"\"` | Ingress class name. |\n",
                    "rendered": {
                      "text": "| ui.service.port | int | `8080` | Service port. |\n| ui.service.annotations | object | `{}` | Service annotations. |\n| ui.service.labels | object | `{}` | Service labels. |\n| ui.service.additionalPorts | list | `[]` | Additional service ports for e.g. Sidecars  # - name: authenticated additionalPorts: - name: authenticated   port: 8081   targetPort: 8081 |\n| ui.ingress.enabled | bool | `false` | Create ingress resource. |\n| ui.ingress.port | string | `nil` | Redirect ingress to an additional defined port on the service |\n| ui.ingress.className | string | `\"\"` | Ingress class name. |\n",
                      "markdown": "`| ui.service.port | int | `8080` | Service port. |\n| ui.service.annotations | object | `{}` | Service annotations. |\n| ui.service.labels | object | `{}` | Service labels. |\n| ui.service.additionalPorts | list | `[]` | Additional service ports for e.g. Sidecars  # - name: authenticated additionalPorts: - name: authenticated   port: 8081   targetPort: 8081 |\n| ui.ingress.enabled | bool | `false` | Create ingress resource. |\n| ui.ingress.port | string | `nil` | Redirect ingress to an additional defined port on the service |\n| ui.ingress.className | string | `\"\"` | Ingress class name. |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 383,
                  "startColumn": 37,
                  "endLine": 383,
                  "endColumn": 46,
                  "snippet": {
                    "text": "| ui.service.type | string | `\"ClusterIP\"` | Service type. |\n| ui.service.port | int | `8080` | Service port. |\n| ui.service.annotations | object | `{}` | Service annotations. |\n| ui.service.labels | object | `{}` | Service labels. |\n| ui.service.additionalPorts | list | `[]` | Additional service ports for e.g. Sidecars  # - name: authenticated additionalPorts: - name: authenticated   port: 8081   targetPort: 8081 |\n| ui.ingress.enabled | bool | `false` | Create ingress resource. |\n| ui.ingress.port | string | `nil` | Redirect ingress to an additional defined port on the service |\n",
                    "rendered": {
                      "text": "| ui.service.type | string | `\"ClusterIP\"` | Service type. |\n| ui.service.port | int | `8080` | Service port. |\n| ui.service.annotations | object | `{}` | Service annotations. |\n| ui.service.labels | object | `{}` | Service labels. |\n| ui.service.additionalPorts | list | `[]` | Additional service ports for e.g. Sidecars  # - name: authenticated additionalPorts: - name: authenticated   port: 8081   targetPort: 8081 |\n| ui.ingress.enabled | bool | `false` | Create ingress resource. |\n| ui.ingress.port | string | `nil` | Redirect ingress to an additional defined port on the service |\n",
                      "markdown": "`| ui.service.type | string | `\"ClusterIP\"` | Service type. |\n| ui.service.port | int | `8080` | Service port. |\n| ui.service.annotations | object | `{}` | Service annotations. |\n| ui.service.labels | object | `{}` | Service labels. |\n| ui.service.additionalPorts | list | `[]` | Additional service ports for e.g. Sidecars  # - name: authenticated additionalPorts: - name: authenticated   port: 8081   targetPort: 8081 |\n| ui.ingress.enabled | bool | `false` | Create ingress resource. |\n| ui.ingress.port | string | `nil` | Redirect ingress to an additional defined port on the service |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 382,
                  "startColumn": 42,
                  "endLine": 382,
                  "endColumn": 51,
                  "snippet": {
                    "text": "| ui.securityContext.seccompProfile.type | string | `\"RuntimeDefault\"` |  |\n| ui.service.type | string | `\"ClusterIP\"` | Service type. |\n| ui.service.port | int | `8080` | Service port. |\n| ui.service.annotations | object | `{}` | Service annotations. |\n| ui.service.labels | object | `{}` | Service labels. |\n| ui.service.additionalPorts | list | `[]` | Additional service ports for e.g. Sidecars  # - name: authenticated additionalPorts: - name: authenticated   port: 8081   targetPort: 8081 |\n| ui.ingress.enabled | bool | `false` | Create ingress resource. |\n",
                    "rendered": {
                      "text": "| ui.securityContext.seccompProfile.type | string | `\"RuntimeDefault\"` |  |\n| ui.service.type | string | `\"ClusterIP\"` | Service type. |\n| ui.service.port | int | `8080` | Service port. |\n| ui.service.annotations | object | `{}` | Service annotations. |\n| ui.service.labels | object | `{}` | Service labels. |\n| ui.service.additionalPorts | list | `[]` | Additional service ports for e.g. Sidecars  # - name: authenticated additionalPorts: - name: authenticated   port: 8081   targetPort: 8081 |\n| ui.ingress.enabled | bool | `false` | Create ingress resource. |\n",
                      "markdown": "`| ui.securityContext.seccompProfile.type | string | `\"RuntimeDefault\"` |  |\n| ui.service.type | string | `\"ClusterIP\"` | Service type. |\n| ui.service.port | int | `8080` | Service port. |\n| ui.service.annotations | object | `{}` | Service annotations. |\n| ui.service.labels | object | `{}` | Service labels. |\n| ui.service.additionalPorts | list | `[]` | Additional service ports for e.g. Sidecars  # - name: authenticated additionalPorts: - name: authenticated   port: 8081   targetPort: 8081 |\n| ui.ingress.enabled | bool | `false` | Create ingress resource. |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 381,
                  "startColumn": 34,
                  "endLine": 381,
                  "endColumn": 43,
                  "snippet": {
                    "text": "| ui.securityContext.capabilities.drop[0] | string | `\"ALL\"` |  |\n| ui.securityContext.seccompProfile.type | string | `\"RuntimeDefault\"` |  |\n| ui.service.type | string | `\"ClusterIP\"` | Service type. |\n| ui.service.port | int | `8080` | Service port. |\n| ui.service.annotations | object | `{}` | Service annotations. |\n| ui.service.labels | object | `{}` | Service labels. |\n| ui.service.additionalPorts | list | `[]` | Additional service ports for e.g. Sidecars  # - name: authenticated additionalPorts: - name: authenticated   port: 8081   targetPort: 8081 |\n",
                    "rendered": {
                      "text": "| ui.securityContext.capabilities.drop[0] | string | `\"ALL\"` |  |\n| ui.securityContext.seccompProfile.type | string | `\"RuntimeDefault\"` |  |\n| ui.service.type | string | `\"ClusterIP\"` | Service type. |\n| ui.service.port | int | `8080` | Service port. |\n| ui.service.annotations | object | `{}` | Service annotations. |\n| ui.service.labels | object | `{}` | Service labels. |\n| ui.service.additionalPorts | list | `[]` | Additional service ports for e.g. Sidecars  # - name: authenticated additionalPorts: - name: authenticated   port: 8081   targetPort: 8081 |\n",
                      "markdown": "`| ui.securityContext.capabilities.drop[0] | string | `\"ALL\"` |  |\n| ui.securityContext.seccompProfile.type | string | `\"RuntimeDefault\"` |  |\n| ui.service.type | string | `\"ClusterIP\"` | Service type. |\n| ui.service.port | int | `8080` | Service port. |\n| ui.service.annotations | object | `{}` | Service annotations. |\n| ui.service.labels | object | `{}` | Service labels. |\n| ui.service.additionalPorts | list | `[]` | Additional service ports for e.g. Sidecars  # - name: authenticated additionalPorts: - name: authenticated   port: 8081   targetPort: 8081 |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 380,
                  "startColumn": 44,
                  "endLine": 380,
                  "endColumn": 53,
                  "snippet": {
                    "text": "| ui.securityContext.readOnlyRootFilesystem | bool | `true` |  |\n| ui.securityContext.capabilities.drop[0] | string | `\"ALL\"` |  |\n| ui.securityContext.seccompProfile.type | string | `\"RuntimeDefault\"` |  |\n| ui.service.type | string | `\"ClusterIP\"` | Service type. |\n| ui.service.port | int | `8080` | Service port. |\n| ui.service.annotations | object | `{}` | Service annotations. |\n| ui.service.labels | object | `{}` | Service labels. |\n",
                    "rendered": {
                      "text": "| ui.securityContext.readOnlyRootFilesystem | bool | `true` |  |\n| ui.securityContext.capabilities.drop[0] | string | `\"ALL\"` |  |\n| ui.securityContext.seccompProfile.type | string | `\"RuntimeDefault\"` |  |\n| ui.service.type | string | `\"ClusterIP\"` | Service type. |\n| ui.service.port | int | `8080` | Service port. |\n| ui.service.annotations | object | `{}` | Service annotations. |\n| ui.service.labels | object | `{}` | Service labels. |\n",
                      "markdown": "`| ui.securityContext.readOnlyRootFilesystem | bool | `true` |  |\n| ui.securityContext.capabilities.drop[0] | string | `\"ALL\"` |  |\n| ui.securityContext.seccompProfile.type | string | `\"RuntimeDefault\"` |  |\n| ui.service.type | string | `\"ClusterIP\"` | Service type. |\n| ui.service.port | int | `8080` | Service port. |\n| ui.service.annotations | object | `{}` | Service annotations. |\n| ui.service.labels | object | `{}` | Service labels. |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 371,
                  "startColumn": 45,
                  "endLine": 371,
                  "endColumn": 50,
                  "snippet": {
                    "text": "| ui.updateStrategy | object | `{}` | Deployment update strategy. Ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy |\n| ui.revisionHistoryLimit | int | `10` | The number of revisions to keep |\n| ui.podSecurityContext | object | `{\"runAsGroup\":1234,\"runAsUser\":1234}` | Security context for the pod |\n| ui.envVars | list | `[]` | Allow additional env variables to be added |\n| ui.rbac.enabled | bool | `true` | Create RBAC resources |\n| ui.securityContext.runAsUser | int | `1234` |  |\n| ui.securityContext.runAsNonRoot | bool | `true` |  |\n",
                    "rendered": {
                      "text": "| ui.updateStrategy | object | `{}` | Deployment update strategy. Ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy |\n| ui.revisionHistoryLimit | int | `10` | The number of revisions to keep |\n| ui.podSecurityContext | object | `{\"runAsGroup\":1234,\"runAsUser\":1234}` | Security context for the pod |\n| ui.envVars | list | `[]` | Allow additional env variables to be added |\n| ui.rbac.enabled | bool | `true` | Create RBAC resources |\n| ui.securityContext.runAsUser | int | `1234` |  |\n| ui.securityContext.runAsNonRoot | bool | `true` |  |\n",
                      "markdown": "`| ui.updateStrategy | object | `{}` | Deployment update strategy. Ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy |\n| ui.revisionHistoryLimit | int | `10` | The number of revisions to keep |\n| ui.podSecurityContext | object | `{\"runAsGroup\":1234,\"runAsUser\":1234}` | Security context for the pod |\n| ui.envVars | list | `[]` | Allow additional env variables to be added |\n| ui.rbac.enabled | bool | `true` | Create RBAC resources |\n| ui.securityContext.runAsUser | int | `1234` |  |\n| ui.securityContext.runAsNonRoot | bool | `true` |  |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 323,
                  "startColumn": 42,
                  "endLine": 323,
                  "endColumn": 47,
                  "snippet": {
                    "text": "| extraVolumes.volumeMounts | list | `[]` | Deployment volumeMounts |\n| extraVolumes.volumes | list | `[]` | Deployment values |\n| sqliteVolume | object | `{}` | If set the volume for sqlite is freely configurable below \"- name: sqlite\". If no value is set an emptyDir is used. |\n| envVars | list | `[]` | Allow additional env variables to be added |\n| tmpVolume | object | `{}` | Allow custom configuration of the /tmp volume |\n| ui.enabled | bool | `false` | Enable Policy Reporter UI |\n| ui.image.registry | string | `\"ghcr.io\"` | Image registry |\n",
                    "rendered": {
                      "text": "| extraVolumes.volumeMounts | list | `[]` | Deployment volumeMounts |\n| extraVolumes.volumes | list | `[]` | Deployment values |\n| sqliteVolume | object | `{}` | If set the volume for sqlite is freely configurable below \"- name: sqlite\". If no value is set an emptyDir is used. |\n| envVars | list | `[]` | Allow additional env variables to be added |\n| tmpVolume | object | `{}` | Allow custom configuration of the /tmp volume |\n| ui.enabled | bool | `false` | Enable Policy Reporter UI |\n| ui.image.registry | string | `\"ghcr.io\"` | Image registry |\n",
                      "markdown": "`| extraVolumes.volumeMounts | list | `[]` | Deployment volumeMounts |\n| extraVolumes.volumes | list | `[]` | Deployment values |\n| sqliteVolume | object | `{}` | If set the volume for sqlite is freely configurable below \"- name: sqlite\". If no value is set an emptyDir is used. |\n| envVars | list | `[]` | Allow additional env variables to be added |\n| tmpVolume | object | `{}` | Allow custom configuration of the /tmp volume |\n| ui.enabled | bool | `false` | Enable Policy Reporter UI |\n| ui.image.registry | string | `\"ghcr.io\"` | Image registry |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 316,
                  "startColumn": 107,
                  "endLine": 316,
                  "endColumn": 113,
                  "snippet": {
                    "text": "ps://kubernetes.io/docs/user-guide/node-selection/ |\n| tolerations | list | `[]` | Tolerations for pod assignment ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/ |\n| affinity | object | `{}` | Anti-affinity to disallow deploying client and master nodes on the same worker node |\n| topologySpreadConstraints | list | `[]` | Topology Spread Constraints to better spread pods |\n| livenessProbe | object | `{\"httpGet\":{\"path\":\"/ready\",\"port\":\"http\"}}` | Deployment livenessProbe for policy-reporter |\n| readinessProbe | object | `{\"httpGet\":{\"path\":\"/healthz\",\"port\":\"http\"}}` | De",
                    "rendered": {
                      "text": "ps://kubernetes.io/docs/user-guide/node-selection/ |\n| tolerations | list | `[]` | Tolerations for pod assignment ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/ |\n| affinity | object | `{}` | Anti-affinity to disallow deploying client and master nodes on the same worker node |\n| topologySpreadConstraints | list | `[]` | Topology Spread Constraints to better spread pods |\n| livenessProbe | object | `{\"httpGet\":{\"path\":\"/ready\",\"port\":\"http\"}}` | Deployment livenessProbe for policy-reporter |\n| readinessProbe | object | `{\"httpGet\":{\"path\":\"/healthz\",\"port\":\"http\"}}` | De",
                      "markdown": "`ps://kubernetes.io/docs/user-guide/node-selection/ |\n| tolerations | list | `[]` | Tolerations for pod assignment ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/ |\n| affinity | object | `{}` | Anti-affinity to disallow deploying client and master nodes on the same worker node |\n| topologySpreadConstraints | list | `[]` | Topology Spread Constraints to better spread pods |\n| livenessProbe | object | `{\"httpGet\":{\"path\":\"/ready\",\"port\":\"http\"}}` | Deployment livenessProbe for policy-reporter |\n| readinessProbe | object | `{\"httpGet\":{\"path\":\"/healthz\",\"port\":\"http\"}}` | De`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 314,
                  "startColumn": 32,
                  "endLine": 314,
                  "endColumn": 38,
                  "snippet": {
                    "text": "um available pods for policy-reporter disruptions. Cannot be used if `maxUnavailable` is set. |\n| podDisruptionBudget.maxUnavailable | string | `nil` | Configures the maximum unavailable pods for policy-reporter disruptions. Cannot be used if `minAvailable` is set. |\n| nodeSelector | object | `{}` | Node labels for pod assignment ref: https://kubernetes.io/docs/user-guide/node-selection/ |\n| tolerations | list | `[]` | Tolerations for pod assignment ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/ |\n| affinity | object | `{}` | Anti-affinity to disallow deploying client a",
                    "rendered": {
                      "text": "um available pods for policy-reporter disruptions. Cannot be used if `maxUnavailable` is set. |\n| podDisruptionBudget.maxUnavailable | string | `nil` | Configures the maximum unavailable pods for policy-reporter disruptions. Cannot be used if `minAvailable` is set. |\n| nodeSelector | object | `{}` | Node labels for pod assignment ref: https://kubernetes.io/docs/user-guide/node-selection/ |\n| tolerations | list | `[]` | Tolerations for pod assignment ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/ |\n| affinity | object | `{}` | Anti-affinity to disallow deploying client a",
                      "markdown": "`um available pods for policy-reporter disruptions. Cannot be used if `maxUnavailable` is set. |\n| podDisruptionBudget.maxUnavailable | string | `nil` | Configures the maximum unavailable pods for policy-reporter disruptions. Cannot be used if `minAvailable` is set. |\n| nodeSelector | object | `{}` | Node labels for pod assignment ref: https://kubernetes.io/docs/user-guide/node-selection/ |\n| tolerations | list | `[]` | Tolerations for pod assignment ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/ |\n| affinity | object | `{}` | Anti-affinity to disallow deploying client a`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 283,
                  "startColumn": 71,
                  "endLine": 283,
                  "endColumn": 80,
                  "snippet": {
                    "text": "s are supported, you can either define exclude or include values Filters are available for all targets except the UI |\n| target.securityHub.channels | list | `[]` | List of channels to route results to different configurations |\n| target.gcs.credentials | optional | `\"\"` | GCS (Google Cloud Storage) Service Accout Credentials |\n| target.gcs.bucket | required | `\"\"` | GCS Bucket |\n| target.gcs.secretRef | string | `\"\"` | Read configuration from an already existing Secret |\n| target.gcs.mountedSecret | string | `\"\"` | Mounted secret path by Secrets Controller, secret should be in json format |\n| target.g",
                    "rendered": {
                      "text": "s are supported, you can either define exclude or include values Filters are available for all targets except the UI |\n| target.securityHub.channels | list | `[]` | List of channels to route results to different configurations |\n| target.gcs.credentials | optional | `\"\"` | GCS (Google Cloud Storage) Service Accout Credentials |\n| target.gcs.bucket | required | `\"\"` | GCS Bucket |\n| target.gcs.secretRef | string | `\"\"` | Read configuration from an already existing Secret |\n| target.gcs.mountedSecret | string | `\"\"` | Mounted secret path by Secrets Controller, secret should be in json format |\n| target.g",
                      "markdown": "`s are supported, you can either define exclude or include values Filters are available for all targets except the UI |\n| target.securityHub.channels | list | `[]` | List of channels to route results to different configurations |\n| target.gcs.credentials | optional | `\"\"` | GCS (Google Cloud Storage) Service Accout Credentials |\n| target.gcs.bucket | required | `\"\"` | GCS Bucket |\n| target.gcs.secretRef | string | `\"\"` | Read configuration from an already existing Secret |\n| target.gcs.mountedSecret | string | `\"\"` | Mounted secret path by Secrets Controller, secret should be in json format |\n| target.g`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 34,
                  "endLine": 69,
                  "endColumn": 43,
                  "snippet": {
                    "text": "| service.type | string | `\"ClusterIP\"` | Service type |\n| service.port | int | `8080` | Service port |\n| service.annotations | object | `{}` | Service annotations |\n| service.labels | object | `{}` | Service labels |\n| podSecurityContext | object | `{\"fsGroup\":1234}` | Security context for the pod |\n| securityContext.runAsUser | int | `1234` |  |\n| securityContext.runAsNonRoot | bool | `true` |  |\n",
                    "rendered": {
                      "text": "| service.type | string | `\"ClusterIP\"` | Service type |\n| service.port | int | `8080` | Service port |\n| service.annotations | object | `{}` | Service annotations |\n| service.labels | object | `{}` | Service labels |\n| podSecurityContext | object | `{\"fsGroup\":1234}` | Security context for the pod |\n| securityContext.runAsUser | int | `1234` |  |\n| securityContext.runAsNonRoot | bool | `true` |  |\n",
                      "markdown": "`| service.type | string | `\"ClusterIP\"` | Service type |\n| service.port | int | `8080` | Service port |\n| service.annotations | object | `{}` | Service annotations |\n| service.labels | object | `{}` | Service labels |\n| podSecurityContext | object | `{\"fsGroup\":1234}` | Security context for the pod |\n| securityContext.runAsUser | int | `1234` |  |\n| securityContext.runAsNonRoot | bool | `true` |  |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 39,
                  "endLine": 68,
                  "endColumn": 48,
                  "snippet": {
                    "text": "| service.enabled | bool | `true` | Create Service |\n| service.type | string | `\"ClusterIP\"` | Service type |\n| service.port | int | `8080` | Service port |\n| service.annotations | object | `{}` | Service annotations |\n| service.labels | object | `{}` | Service labels |\n| podSecurityContext | object | `{\"fsGroup\":1234}` | Security context for the pod |\n| securityContext.runAsUser | int | `1234` |  |\n",
                    "rendered": {
                      "text": "| service.enabled | bool | `true` | Create Service |\n| service.type | string | `\"ClusterIP\"` | Service type |\n| service.port | int | `8080` | Service port |\n| service.annotations | object | `{}` | Service annotations |\n| service.labels | object | `{}` | Service labels |\n| podSecurityContext | object | `{\"fsGroup\":1234}` | Security context for the pod |\n| securityContext.runAsUser | int | `1234` |  |\n",
                      "markdown": "`| service.enabled | bool | `true` | Create Service |\n| service.type | string | `\"ClusterIP\"` | Service type |\n| service.port | int | `8080` | Service port |\n| service.annotations | object | `{}` | Service annotations |\n| service.labels | object | `{}` | Service labels |\n| podSecurityContext | object | `{\"fsGroup\":1234}` | Security context for the pod |\n| securityContext.runAsUser | int | `1234` |  |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 31,
                  "endLine": 67,
                  "endColumn": 40,
                  "snippet": {
                    "text": "| serviceAccount.name | string | `\"\"` | The ServiceAccount name |\n| service.enabled | bool | `true` | Create Service |\n| service.type | string | `\"ClusterIP\"` | Service type |\n| service.port | int | `8080` | Service port |\n| service.annotations | object | `{}` | Service annotations |\n| service.labels | object | `{}` | Service labels |\n| podSecurityContext | object | `{\"fsGroup\":1234}` | Security context for the pod |\n",
                    "rendered": {
                      "text": "| serviceAccount.name | string | `\"\"` | The ServiceAccount name |\n| service.enabled | bool | `true` | Create Service |\n| service.type | string | `\"ClusterIP\"` | Service type |\n| service.port | int | `8080` | Service port |\n| service.annotations | object | `{}` | Service annotations |\n| service.labels | object | `{}` | Service labels |\n| podSecurityContext | object | `{\"fsGroup\":1234}` | Security context for the pod |\n",
                      "markdown": "`| serviceAccount.name | string | `\"\"` | The ServiceAccount name |\n| service.enabled | bool | `true` | Create Service |\n| service.type | string | `\"ClusterIP\"` | Service type |\n| service.port | int | `8080` | Service port |\n| service.annotations | object | `{}` | Service annotations |\n| service.labels | object | `{}` | Service labels |\n| podSecurityContext | object | `{\"fsGroup\":1234}` | Security context for the pod |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 41,
                  "endLine": 66,
                  "endColumn": 50,
                  "snippet": {
                    "text": "| serviceAccount.annotations | object | `{}` | Annotations for the ServiceAccount |\n| serviceAccount.name | string | `\"\"` | The ServiceAccount name |\n| service.enabled | bool | `true` | Create Service |\n| service.type | string | `\"ClusterIP\"` | Service type |\n| service.port | int | `8080` | Service port |\n| service.annotations | object | `{}` | Service annotations |\n| service.labels | object | `{}` | Service labels |\n",
                    "rendered": {
                      "text": "| serviceAccount.annotations | object | `{}` | Annotations for the ServiceAccount |\n| serviceAccount.name | string | `\"\"` | The ServiceAccount name |\n| service.enabled | bool | `true` | Create Service |\n| service.type | string | `\"ClusterIP\"` | Service type |\n| service.port | int | `8080` | Service port |\n| service.annotations | object | `{}` | Service annotations |\n| service.labels | object | `{}` | Service labels |\n",
                      "markdown": "`| serviceAccount.annotations | object | `{}` | Annotations for the ServiceAccount |\n| serviceAccount.name | string | `\"\"` | The ServiceAccount name |\n| service.enabled | bool | `true` | Create Service |\n| service.type | string | `\"ClusterIP\"` | Service type |\n| service.port | int | `8080` | Service port |\n| service.annotations | object | `{}` | Service annotations |\n| service.labels | object | `{}` | Service labels |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 42,
                  "endLine": 65,
                  "endColumn": 51,
                  "snippet": {
                    "text": "| serviceAccount.automount | bool | `true` | Enable ServiceAccount automaount |\n| serviceAccount.annotations | object | `{}` | Annotations for the ServiceAccount |\n| serviceAccount.name | string | `\"\"` | The ServiceAccount name |\n| service.enabled | bool | `true` | Create Service |\n| service.type | string | `\"ClusterIP\"` | Service type |\n| service.port | int | `8080` | Service port |\n| service.annotations | object | `{}` | Service annotations |\n",
                    "rendered": {
                      "text": "| serviceAccount.automount | bool | `true` | Enable ServiceAccount automaount |\n| serviceAccount.annotations | object | `{}` | Annotations for the ServiceAccount |\n| serviceAccount.name | string | `\"\"` | The ServiceAccount name |\n| service.enabled | bool | `true` | Create Service |\n| service.type | string | `\"ClusterIP\"` | Service type |\n| service.port | int | `8080` | Service port |\n| service.annotations | object | `{}` | Service annotations |\n",
                      "markdown": "`| serviceAccount.automount | bool | `true` | Enable ServiceAccount automaount |\n| serviceAccount.annotations | object | `{}` | Annotations for the ServiceAccount |\n| serviceAccount.name | string | `\"\"` | The ServiceAccount name |\n| service.enabled | bool | `true` | Create Service |\n| service.type | string | `\"ClusterIP\"` | Service type |\n| service.port | int | `8080` | Service port |\n| service.annotations | object | `{}` | Service annotations |\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 7,
                  "endLine": 10,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\n## Documentation\n\nYou can find detailed Information and Screens about Features and Configurations in the [Documentation](https://kyverno.github.io/policy-reporter-docs).\n\n## Installation with Helm v3\n\n",
                    "rendered": {
                      "text": "\n## Documentation\n\nYou can find detailed Information and Screens about Features and Configurations in the [Documentation](https://kyverno.github.io/policy-reporter-docs).\n\n## Installation with Helm v3\n\n",
                      "markdown": "`\n## Documentation\n\nYou can find detailed Information and Screens about Features and Configurations in the [Documentation](https://kyverno.github.io/policy-reporter-docs).\n\n## Installation with Helm v3\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/cmd/send/violations.go"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 7,
                  "endLine": 125,
                  "snippet": {
                    "text": "\t\t},\n\t}\n\n\treturn cmd\n}\n",
                    "rendered": {
                      "text": "\t\t},\n\t}\n\n\treturn cmd\n}\n",
                      "markdown": "`\t\t},\n\t}\n\n\treturn cmd\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/cmd/send/violations.go"
                },
                "region": {
                  "startLine": 17,
                  "endLine": 17,
                  "endColumn": 5,
                  "snippet": {
                    "text": ")\n\nfunc NewViolationsCMD() *cobra.Command {\n\tcmd := &cobra.Command{\n\t\tUse:   \"violations\",\n\t\tShort: \"Send a violations e-mail to the configured emails\",\n\t\tRunE: func(cmd *cobra.Command, args []string) error {\n",
                    "rendered": {
                      "text": ")\n\nfunc NewViolationsCMD() *cobra.Command {\n\tcmd := &cobra.Command{\n\t\tUse:   \"violations\",\n\t\tShort: \"Send a violations e-mail to the configured emails\",\n\t\tRunE: func(cmd *cobra.Command, args []string) error {\n",
                      "markdown": "`)\n\nfunc NewViolationsCMD() *cobra.Command {\n\tcmd := &cobra.Command{\n\t\tUse:   \"violations\",\n\t\tShort: \"Send a violations e-mail to the configured emails\",\n\t\tRunE: func(cmd *cobra.Command, args []string) error {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/report/source_filter.go"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 20,
                  "endLine": 110,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t}\n\n\tif options.UncontrolledOnly && s.jobs != nil && scope.Kind == \"Job\" {\n\t\tjob, err := s.jobs.Get(scope)\n\t\tif err != nil {\n\t\t\tlogger.Error(\"failed to get job\", zap.Error(err))\n\t\t\treturn true\n",
                    "rendered": {
                      "text": "\t}\n\n\tif options.UncontrolledOnly && s.jobs != nil && scope.Kind == \"Job\" {\n\t\tjob, err := s.jobs.Get(scope)\n\t\tif err != nil {\n\t\t\tlogger.Error(\"failed to get job\", zap.Error(err))\n\t\t\treturn true\n",
                      "markdown": "`\t}\n\n\tif options.UncontrolledOnly && s.jobs != nil && scope.Kind == \"Job\" {\n\t\tjob, err := s.jobs.Get(scope)\n\t\tif err != nil {\n\t\t\tlogger.Error(\"failed to get job\", zap.Error(err))\n\t\t\treturn true\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/report/source_filter.go"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 20,
                  "endLine": 95,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t}\n\n\tif options.UncontrolledOnly && s.pods != nil && scope.Kind == \"Pod\" {\n\t\tpod, err := s.pods.Get(scope)\n\t\tif err != nil {\n\t\t\tlogger.Error(\"failed to get pod\", zap.Error(err), zap.String(\"name\", scope.Name), zap.String(\"namespace\", scope.Namespace))\n\t\t\treturn true\n",
                    "rendered": {
                      "text": "\t}\n\n\tif options.UncontrolledOnly && s.pods != nil && scope.Kind == \"Pod\" {\n\t\tpod, err := s.pods.Get(scope)\n\t\tif err != nil {\n\t\t\tlogger.Error(\"failed to get pod\", zap.Error(err), zap.String(\"name\", scope.Name), zap.String(\"namespace\", scope.Namespace))\n\t\t\treturn true\n",
                      "markdown": "`\t}\n\n\tif options.UncontrolledOnly && s.pods != nil && scope.Kind == \"Pod\" {\n\t\tpod, err := s.pods.Get(scope)\n\t\tif err != nil {\n\t\t\tlogger.Error(\"failed to get pod\", zap.Error(err), zap.String(\"name\", scope.Name), zap.String(\"namespace\", scope.Namespace))\n\t\t\treturn true\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/report/model.go"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 7,
                  "endLine": 71,
                  "snippet": {
                    "text": "\t\tdiff = append(diff, r)\n\t}\n\n\treturn diff\n}\n",
                    "rendered": {
                      "text": "\t\tdiff = append(diff, r)\n\t}\n\n\treturn diff\n}\n",
                      "markdown": "`\t\tdiff = append(diff, r)\n\t}\n\n\treturn diff\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/report/model.go"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 1,
                  "endLine": 67,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t\t}\n\t\t}\n\n\t\tdiff = append(diff, r)\n\t}\n\n\treturn diff\n",
                    "rendered": {
                      "text": "\t\t\t}\n\t\t}\n\n\t\tdiff = append(diff, r)\n\t}\n\n\treturn diff\n",
                      "markdown": "`\t\t\t}\n\t\t}\n\n\t\tdiff = append(diff, r)\n\t}\n\n\treturn diff\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/report/model.go"
                },
                "region": {
                  "startLine": 58,
                  "endLine": 58,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\treturn nr.GetResults()\n\t}\n\n\tdiff := make([]v1alpha2.PolicyReportResult, 0)\nloop:\n\tfor _, r := range nr.GetResults() {\n\t\tfor _, o := range or.GetResults() {\n",
                    "rendered": {
                      "text": "\t\treturn nr.GetResults()\n\t}\n\n\tdiff := make([]v1alpha2.PolicyReportResult, 0)\nloop:\n\tfor _, r := range nr.GetResults() {\n\t\tfor _, o := range or.GetResults() {\n",
                      "markdown": "`\t\treturn nr.GetResults()\n\t}\n\n\tdiff := make([]v1alpha2.PolicyReportResult, 0)\nloop:\n\tfor _, r := range nr.GetResults() {\n\t\tfor _, o := range or.GetResults() {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/teams/teams_test.go"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 25,
                  "endLine": 140,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n",
                    "rendered": {
                      "text": "\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n",
                      "markdown": "`\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/teams/teams_test.go"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 31,
                  "endLine": 136,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\t})\n\tt.Run(\"Send Minimal Debug Result\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json; charset=utf-8\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n",
                    "rendered": {
                      "text": "\t})\n\tt.Run(\"Send Minimal Debug Result\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json; charset=utf-8\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n",
                      "markdown": "`\t})\n\tt.Run(\"Send Minimal Debug Result\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json; charset=utf-8\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/teams/teams_test.go"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 25,
                  "endLine": 68,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n",
                    "rendered": {
                      "text": "\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n",
                      "markdown": "`\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/teams/teams_test.go"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 31,
                  "endLine": 64,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\n\tt.Run(\"Send Minimal Result\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json; charset=utf-8\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n",
                    "rendered": {
                      "text": "\n\tt.Run(\"Send Minimal Result\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json; charset=utf-8\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n",
                      "markdown": "`\n\tt.Run(\"Send Minimal Result\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json; charset=utf-8\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/teams/teams_test.go"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 25,
                  "endLine": 35,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n",
                    "rendered": {
                      "text": "\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n",
                      "markdown": "`\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/teams/teams_test.go"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 31,
                  "endLine": 31,
                  "endColumn": 36,
                  "snippet": {
                    "text": "func Test_TeamsTarget(t *testing.T) {\n\tt.Run(\"Send Complete Result\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json; charset=utf-8\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n",
                    "rendered": {
                      "text": "func Test_TeamsTarget(t *testing.T) {\n\tt.Run(\"Send Complete Result\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json; charset=utf-8\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n",
                      "markdown": "`func Test_TeamsTarget(t *testing.T) {\n\tt.Run(\"Send Complete Result\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json; charset=utf-8\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/crd/client/clientset/versioned/typed/policyreport/v1alpha2/clusterpolicyreport.go"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 15,
                  "endLine": 110,
                  "endColumn": 21,
                  "snippet": {
                    "text": "// Create takes the representation of a clusterPolicyReport and creates it.  Returns the server's representation of the clusterPolicyReport, and an error, if there is any.\nfunc (c *clusterPolicyReports) Create(ctx context.Context, clusterPolicyReport *v1alpha2.ClusterPolicyReport, opts v1.CreateOptions) (result *v1alpha2.ClusterPolicyReport, err error) {\n\tresult = &v1alpha2.ClusterPolicyReport{}\n\terr = c.client.Post().\n\t\tResource(\"clusterpolicyreports\").\n\t\tVersionedParams(&opts, scheme.ParameterCodec).\n\t\tBody(clusterPolicyReport).\n",
                    "rendered": {
                      "text": "// Create takes the representation of a clusterPolicyReport and creates it.  Returns the server's representation of the clusterPolicyReport, and an error, if there is any.\nfunc (c *clusterPolicyReports) Create(ctx context.Context, clusterPolicyReport *v1alpha2.ClusterPolicyReport, opts v1.CreateOptions) (result *v1alpha2.ClusterPolicyReport, err error) {\n\tresult = &v1alpha2.ClusterPolicyReport{}\n\terr = c.client.Post().\n\t\tResource(\"clusterpolicyreports\").\n\t\tVersionedParams(&opts, scheme.ParameterCodec).\n\t\tBody(clusterPolicyReport).\n",
                      "markdown": "`// Create takes the representation of a clusterPolicyReport and creates it.  Returns the server's representation of the clusterPolicyReport, and an error, if there is any.\nfunc (c *clusterPolicyReports) Create(ctx context.Context, clusterPolicyReport *v1alpha2.ClusterPolicyReport, opts v1.CreateOptions) (result *v1alpha2.ClusterPolicyReport, err error) {\n\tresult = &v1alpha2.ClusterPolicyReport{}\n\terr = c.client.Post().\n\t\tResource(\"clusterpolicyreports\").\n\t\tVersionedParams(&opts, scheme.ParameterCodec).\n\t\tBody(clusterPolicyReport).\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/crd/client/clientset/versioned/typed/policyreport/v1alpha2/clusterpolicyreport.go"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 16,
                  "endLine": 100,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\ttimeout = time.Duration(*opts.TimeoutSeconds) * time.Second\n\t}\n\topts.Watch = true\n\treturn c.client.Get().\n\t\tResource(\"clusterpolicyreports\").\n\t\tVersionedParams(&opts, scheme.ParameterCodec).\n\t\tTimeout(timeout).\n",
                    "rendered": {
                      "text": "\t\ttimeout = time.Duration(*opts.TimeoutSeconds) * time.Second\n\t}\n\topts.Watch = true\n\treturn c.client.Get().\n\t\tResource(\"clusterpolicyreports\").\n\t\tVersionedParams(&opts, scheme.ParameterCodec).\n\t\tTimeout(timeout).\n",
                      "markdown": "`\t\ttimeout = time.Duration(*opts.TimeoutSeconds) * time.Second\n\t}\n\topts.Watch = true\n\treturn c.client.Get().\n\t\tResource(\"clusterpolicyreports\").\n\t\tVersionedParams(&opts, scheme.ParameterCodec).\n\t\tTimeout(timeout).\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/crd/client/clientset/versioned/typed/policyreport/v1alpha2/clusterpolicyreport.go"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 15,
                  "endLine": 84,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\ttimeout = time.Duration(*opts.TimeoutSeconds) * time.Second\n\t}\n\tresult = &v1alpha2.ClusterPolicyReportList{}\n\terr = c.client.Get().\n\t\tResource(\"clusterpolicyreports\").\n\t\tVersionedParams(&opts, scheme.ParameterCodec).\n\t\tTimeout(timeout).\n",
                    "rendered": {
                      "text": "\t\ttimeout = time.Duration(*opts.TimeoutSeconds) * time.Second\n\t}\n\tresult = &v1alpha2.ClusterPolicyReportList{}\n\terr = c.client.Get().\n\t\tResource(\"clusterpolicyreports\").\n\t\tVersionedParams(&opts, scheme.ParameterCodec).\n\t\tTimeout(timeout).\n",
                      "markdown": "`\t\ttimeout = time.Duration(*opts.TimeoutSeconds) * time.Second\n\t}\n\tresult = &v1alpha2.ClusterPolicyReportList{}\n\terr = c.client.Get().\n\t\tResource(\"clusterpolicyreports\").\n\t\tVersionedParams(&opts, scheme.ParameterCodec).\n\t\tTimeout(timeout).\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/crd/client/clientset/versioned/typed/policyreport/v1alpha2/clusterpolicyreport.go"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 15,
                  "endLine": 68,
                  "endColumn": 20,
                  "snippet": {
                    "text": "// Get takes name of the clusterPolicyReport, and returns the corresponding clusterPolicyReport object, and an error if there is any.\nfunc (c *clusterPolicyReports) Get(ctx context.Context, name string, options v1.GetOptions) (result *v1alpha2.ClusterPolicyReport, err error) {\n\tresult = &v1alpha2.ClusterPolicyReport{}\n\terr = c.client.Get().\n\t\tResource(\"clusterpolicyreports\").\n\t\tName(name).\n\t\tVersionedParams(&options, scheme.ParameterCodec).\n",
                    "rendered": {
                      "text": "// Get takes name of the clusterPolicyReport, and returns the corresponding clusterPolicyReport object, and an error if there is any.\nfunc (c *clusterPolicyReports) Get(ctx context.Context, name string, options v1.GetOptions) (result *v1alpha2.ClusterPolicyReport, err error) {\n\tresult = &v1alpha2.ClusterPolicyReport{}\n\terr = c.client.Get().\n\t\tResource(\"clusterpolicyreports\").\n\t\tName(name).\n\t\tVersionedParams(&options, scheme.ParameterCodec).\n",
                      "markdown": "`// Get takes name of the clusterPolicyReport, and returns the corresponding clusterPolicyReport object, and an error if there is any.\nfunc (c *clusterPolicyReports) Get(ctx context.Context, name string, options v1.GetOptions) (result *v1alpha2.ClusterPolicyReport, err error) {\n\tresult = &v1alpha2.ClusterPolicyReport{}\n\terr = c.client.Get().\n\t\tResource(\"clusterpolicyreports\").\n\t\tName(name).\n\t\tVersionedParams(&options, scheme.ParameterCodec).\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/crd/client/clientset/versioned/typed/policyreport/v1alpha2/clusterpolicyreport.go"
                },
                "region": {
                  "startLine": 146,
                  "startColumn": 1,
                  "endLine": 146,
                  "endColumn": 10,
                  "snippet": {
                    "text": "func (c *clusterPolicyReports) DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error {\n\tvar timeout time.Duration\n\tif listOpts.TimeoutSeconds != nil {\n\t\ttimeout = time.Duration(*listOpts.TimeoutSeconds) * time.Second\n\t}\n\treturn c.client.Delete().\n\t\tResource(\"clusterpolicyreports\").\n",
                    "rendered": {
                      "text": "func (c *clusterPolicyReports) DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error {\n\tvar timeout time.Duration\n\tif listOpts.TimeoutSeconds != nil {\n\t\ttimeout = time.Duration(*listOpts.TimeoutSeconds) * time.Second\n\t}\n\treturn c.client.Delete().\n\t\tResource(\"clusterpolicyreports\").\n",
                      "markdown": "`func (c *clusterPolicyReports) DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error {\n\tvar timeout time.Duration\n\tif listOpts.TimeoutSeconds != nil {\n\t\ttimeout = time.Duration(*listOpts.TimeoutSeconds) * time.Second\n\t}\n\treturn c.client.Delete().\n\t\tResource(\"clusterpolicyreports\").\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/crd/client/clientset/versioned/typed/policyreport/v1alpha2/clusterpolicyreport.go"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 4,
                  "endLine": 144,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\n// DeleteCollection deletes a collection of objects.\nfunc (c *clusterPolicyReports) DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error {\n\tvar timeout time.Duration\n\tif listOpts.TimeoutSeconds != nil {\n\t\ttimeout = time.Duration(*listOpts.TimeoutSeconds) * time.Second\n\t}\n",
                    "rendered": {
                      "text": "\n// DeleteCollection deletes a collection of objects.\nfunc (c *clusterPolicyReports) DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error {\n\tvar timeout time.Duration\n\tif listOpts.TimeoutSeconds != nil {\n\t\ttimeout = time.Duration(*listOpts.TimeoutSeconds) * time.Second\n\t}\n",
                      "markdown": "`\n// DeleteCollection deletes a collection of objects.\nfunc (c *clusterPolicyReports) DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error {\n\tvar timeout time.Duration\n\tif listOpts.TimeoutSeconds != nil {\n\t\ttimeout = time.Duration(*listOpts.TimeoutSeconds) * time.Second\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/crd/client/clientset/versioned/typed/policyreport/v1alpha2/clusterpolicyreport.go"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 1,
                  "endLine": 97,
                  "endColumn": 10,
                  "snippet": {
                    "text": "func (c *clusterPolicyReports) Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error) {\n\tvar timeout time.Duration\n\tif opts.TimeoutSeconds != nil {\n\t\ttimeout = time.Duration(*opts.TimeoutSeconds) * time.Second\n\t}\n\topts.Watch = true\n\treturn c.client.Get().\n",
                    "rendered": {
                      "text": "func (c *clusterPolicyReports) Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error) {\n\tvar timeout time.Duration\n\tif opts.TimeoutSeconds != nil {\n\t\ttimeout = time.Duration(*opts.TimeoutSeconds) * time.Second\n\t}\n\topts.Watch = true\n\treturn c.client.Get().\n",
                      "markdown": "`func (c *clusterPolicyReports) Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error) {\n\tvar timeout time.Duration\n\tif opts.TimeoutSeconds != nil {\n\t\ttimeout = time.Duration(*opts.TimeoutSeconds) * time.Second\n\t}\n\topts.Watch = true\n\treturn c.client.Get().\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/crd/client/clientset/versioned/typed/policyreport/v1alpha2/clusterpolicyreport.go"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 4,
                  "endLine": 95,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\n// Watch returns a watch.Interface that watches the requested clusterPolicyReports.\nfunc (c *clusterPolicyReports) Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error) {\n\tvar timeout time.Duration\n\tif opts.TimeoutSeconds != nil {\n\t\ttimeout = time.Duration(*opts.TimeoutSeconds) * time.Second\n\t}\n",
                    "rendered": {
                      "text": "\n// Watch returns a watch.Interface that watches the requested clusterPolicyReports.\nfunc (c *clusterPolicyReports) Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error) {\n\tvar timeout time.Duration\n\tif opts.TimeoutSeconds != nil {\n\t\ttimeout = time.Duration(*opts.TimeoutSeconds) * time.Second\n\t}\n",
                      "markdown": "`\n// Watch returns a watch.Interface that watches the requested clusterPolicyReports.\nfunc (c *clusterPolicyReports) Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error) {\n\tvar timeout time.Duration\n\tif opts.TimeoutSeconds != nil {\n\t\ttimeout = time.Duration(*opts.TimeoutSeconds) * time.Second\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/crd/client/clientset/versioned/typed/policyreport/v1alpha2/clusterpolicyreport.go"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 2,
                  "endLine": 93,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\treturn\n}\n\n// Watch returns a watch.Interface that watches the requested clusterPolicyReports.\nfunc (c *clusterPolicyReports) Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error) {\n\tvar timeout time.Duration\n\tif opts.TimeoutSeconds != nil {\n",
                    "rendered": {
                      "text": "\treturn\n}\n\n// Watch returns a watch.Interface that watches the requested clusterPolicyReports.\nfunc (c *clusterPolicyReports) Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error) {\n\tvar timeout time.Duration\n\tif opts.TimeoutSeconds != nil {\n",
                      "markdown": "`\treturn\n}\n\n// Watch returns a watch.Interface that watches the requested clusterPolicyReports.\nfunc (c *clusterPolicyReports) Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error) {\n\tvar timeout time.Duration\n\tif opts.TimeoutSeconds != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/crd/client/clientset/versioned/typed/policyreport/v1alpha2/clusterpolicyreport.go"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 1,
                  "endLine": 81,
                  "endColumn": 10,
                  "snippet": {
                    "text": "func (c *clusterPolicyReports) List(ctx context.Context, opts v1.ListOptions) (result *v1alpha2.ClusterPolicyReportList, err error) {\n\tvar timeout time.Duration\n\tif opts.TimeoutSeconds != nil {\n\t\ttimeout = time.Duration(*opts.TimeoutSeconds) * time.Second\n\t}\n\tresult = &v1alpha2.ClusterPolicyReportList{}\n\terr = c.client.Get().\n",
                    "rendered": {
                      "text": "func (c *clusterPolicyReports) List(ctx context.Context, opts v1.ListOptions) (result *v1alpha2.ClusterPolicyReportList, err error) {\n\tvar timeout time.Duration\n\tif opts.TimeoutSeconds != nil {\n\t\ttimeout = time.Duration(*opts.TimeoutSeconds) * time.Second\n\t}\n\tresult = &v1alpha2.ClusterPolicyReportList{}\n\terr = c.client.Get().\n",
                      "markdown": "`func (c *clusterPolicyReports) List(ctx context.Context, opts v1.ListOptions) (result *v1alpha2.ClusterPolicyReportList, err error) {\n\tvar timeout time.Duration\n\tif opts.TimeoutSeconds != nil {\n\t\ttimeout = time.Duration(*opts.TimeoutSeconds) * time.Second\n\t}\n\tresult = &v1alpha2.ClusterPolicyReportList{}\n\terr = c.client.Get().\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/crd/client/clientset/versioned/typed/policyreport/v1alpha2/clusterpolicyreport.go"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 4,
                  "endLine": 79,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\n// List takes label and field selectors, and returns the list of ClusterPolicyReports that match those selectors.\nfunc (c *clusterPolicyReports) List(ctx context.Context, opts v1.ListOptions) (result *v1alpha2.ClusterPolicyReportList, err error) {\n\tvar timeout time.Duration\n\tif opts.TimeoutSeconds != nil {\n\t\ttimeout = time.Duration(*opts.TimeoutSeconds) * time.Second\n\t}\n",
                    "rendered": {
                      "text": "\n// List takes label and field selectors, and returns the list of ClusterPolicyReports that match those selectors.\nfunc (c *clusterPolicyReports) List(ctx context.Context, opts v1.ListOptions) (result *v1alpha2.ClusterPolicyReportList, err error) {\n\tvar timeout time.Duration\n\tif opts.TimeoutSeconds != nil {\n\t\ttimeout = time.Duration(*opts.TimeoutSeconds) * time.Second\n\t}\n",
                      "markdown": "`\n// List takes label and field selectors, and returns the list of ClusterPolicyReports that match those selectors.\nfunc (c *clusterPolicyReports) List(ctx context.Context, opts v1.ListOptions) (result *v1alpha2.ClusterPolicyReportList, err error) {\n\tvar timeout time.Duration\n\tif opts.TimeoutSeconds != nil {\n\t\ttimeout = time.Duration(*opts.TimeoutSeconds) * time.Second\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/crd/client/clientset/versioned/typed/policyreport/v1alpha2/clusterpolicyreport.go"
                },
                "region": {
                  "startLine": 27,
                  "endLine": 27,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n\tv1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n\ttypes \"k8s.io/apimachinery/pkg/types\"\n\twatch \"k8s.io/apimachinery/pkg/watch\"\n\trest \"k8s.io/client-go/rest\"\n\n\tv1alpha2 \"github.com/kyverno/policy-reporter/pkg/crd/api/policyreport/v1alpha2\"\n",
                    "rendered": {
                      "text": "\n\tv1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n\ttypes \"k8s.io/apimachinery/pkg/types\"\n\twatch \"k8s.io/apimachinery/pkg/watch\"\n\trest \"k8s.io/client-go/rest\"\n\n\tv1alpha2 \"github.com/kyverno/policy-reporter/pkg/crd/api/policyreport/v1alpha2\"\n",
                      "markdown": "`\n\tv1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n\ttypes \"k8s.io/apimachinery/pkg/types\"\n\twatch \"k8s.io/apimachinery/pkg/watch\"\n\trest \"k8s.io/client-go/rest\"\n\n\tv1alpha2 \"github.com/kyverno/policy-reporter/pkg/crd/api/policyreport/v1alpha2\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/templates/summary.html"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 688,
                  "endLine": 10,
                  "endColumn": 696,
                  "snippet": {
                    "text": ";font-weight:inherit;line-height:inherit}img{-ms-interpolation-mode:bicubic}table:not([class^=s-]){font-family:Helvetica,Arial,sans-serif;mso-table-lspace:0pt;mso-table-rspace:0pt;border-spacing:0px;border-collapse:collapse}table:not([class^=s-]) td{border-spacing:0px;border-collapse:collapse}@media screen and (max-width: 600px){.row-responsive.row{margin-right:0 !important}td.col-lg-3{display:block;width:100% !important;padding-left:0 !important;padding-right:0 !important}.w-full,.w-full>tbody>tr>td{width:100% !important}.p-4:not(table),.p-4:not(.btn)>tbody>tr>td,.p-4.btn td a{padding:16px !important",
                    "rendered": {
                      "text": ";font-weight:inherit;line-height:inherit}img{-ms-interpolation-mode:bicubic}table:not([class^=s-]){font-family:Helvetica,Arial,sans-serif;mso-table-lspace:0pt;mso-table-rspace:0pt;border-spacing:0px;border-collapse:collapse}table:not([class^=s-]) td{border-spacing:0px;border-collapse:collapse}@media screen and (max-width: 600px){.row-responsive.row{margin-right:0 !important}td.col-lg-3{display:block;width:100% !important;padding-left:0 !important;padding-right:0 !important}.w-full,.w-full>tbody>tr>td{width:100% !important}.p-4:not(table),.p-4:not(.btn)>tbody>tr>td,.p-4.btn td a{padding:16px !important",
                      "markdown": "`;font-weight:inherit;line-height:inherit}img{-ms-interpolation-mode:bicubic}table:not([class^=s-]){font-family:Helvetica,Arial,sans-serif;mso-table-lspace:0pt;mso-table-rspace:0pt;border-spacing:0px;border-collapse:collapse}table:not([class^=s-]) td{border-spacing:0px;border-collapse:collapse}@media screen and (max-width: 600px){.row-responsive.row{margin-right:0 !important}td.col-lg-3{display:block;width:100% !important;padding-left:0 !important;padding-right:0 !important}.w-full,.w-full>tbody>tr>td{width:100% !important}.p-4:not(table),.p-4:not(.btn)>tbody>tr>td,.p-4.btn td a{padding:16px !important`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/docs/SETUP.md"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 9,
                  "endLine": 24,
                  "snippet": {
                    "text": "\n```bash\nhelm repo add policy-reporter https://kyverno.github.io/policy-reporter\nhelm repo update\n```\n\nInstall the Policy Reporter Preview\n\n",
                    "rendered": {
                      "text": "\n```bash\nhelm repo add policy-reporter https://kyverno.github.io/policy-reporter\nhelm repo update\n```\n\nInstall the Policy Reporter Preview\n\n",
                      "markdown": "`\n```bash\nhelm repo add policy-reporter https://kyverno.github.io/policy-reporter\nhelm repo update\n```\n\nInstall the Policy Reporter Preview\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/docs/SETUP.md"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 9,
                  "endLine": 10,
                  "snippet": {
                    "text": "\n```bash\nhelm repo add kyverno https://kyverno.github.io/kyverno/\nhelm repo update\n```\n\nInstall Kyverno + PSS Policies\n\n",
                    "rendered": {
                      "text": "\n```bash\nhelm repo add kyverno https://kyverno.github.io/kyverno/\nhelm repo update\n```\n\nInstall Kyverno + PSS Policies\n\n",
                      "markdown": "`\n```bash\nhelm repo add kyverno https://kyverno.github.io/kyverno/\nhelm repo update\n```\n\nInstall Kyverno + PSS Policies\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 1335,
                  "startColumn": 10,
                  "endLine": 1335,
                  "endColumn": 18,
                  "snippet": {
                    "text": "      # regcred:\n      #   registry: foo.example.com\n      #   username: foobar\n      #   password: secret\n\n    serviceAccount:\n      # -- Create ServiceAccount\n",
                    "rendered": {
                      "text": "      # regcred:\n      #   registry: foo.example.com\n      #   username: foobar\n      #   password: secret\n\n    serviceAccount:\n      # -- Create ServiceAccount\n",
                      "markdown": "`      # regcred:\n      #   registry: foo.example.com\n      #   username: foobar\n      #   password: secret\n\n    serviceAccount:\n      # -- Create ServiceAccount\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 1327,
                  "startColumn": 64,
                  "endLine": 1327,
                  "endColumn": 72,
                  "snippet": {
                    "text": "      # -- TLS Certificate\n      certificate: \"\"\n      # -- Secret to read the API configuration from\n      # supports `host`, `certificate`, `skipTLS`, `username`, `password` key\n      secretRef: \"\"\n\n    # -- Image pull secrets for image verification policies, this will define the `--imagePullSecrets` argument\n",
                    "rendered": {
                      "text": "      # -- TLS Certificate\n      certificate: \"\"\n      # -- Secret to read the API configuration from\n      # supports `host`, `certificate`, `skipTLS`, `username`, `password` key\n      secretRef: \"\"\n\n    # -- Image pull secrets for image verification policies, this will define the `--imagePullSecrets` argument\n",
                      "markdown": "`      # -- TLS Certificate\n      certificate: \"\"\n      # -- Secret to read the API configuration from\n      # supports `host`, `certificate`, `skipTLS`, `username`, `password` key\n      secretRef: \"\"\n\n    # -- Image pull secrets for image verification policies, this will define the `--imagePullSecrets` argument\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 1147,
                  "startColumn": 10,
                  "endLine": 1147,
                  "endColumn": 18,
                  "snippet": {
                    "text": "      # regcred:\n      #   registry: foo.example.com\n      #   username: foobar\n      #   password: secret\n\n    serviceAccount:\n      # -- Create ServiceAccount\n",
                    "rendered": {
                      "text": "      # regcred:\n      #   registry: foo.example.com\n      #   username: foobar\n      #   password: secret\n\n    serviceAccount:\n      # -- Create ServiceAccount\n",
                      "markdown": "`      # regcred:\n      #   registry: foo.example.com\n      #   username: foobar\n      #   password: secret\n\n    serviceAccount:\n      # -- Create ServiceAccount\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 940,
                  "startColumn": 8,
                  "endLine": 940,
                  "endColumn": 16,
                  "snippet": {
                    "text": "    # regcred:\n    #   registry: foo.example.com\n    #   username: foobar\n    #   password: secret\n\n  serviceAccount:\n    # -- Create ServiceAccount\n",
                    "rendered": {
                      "text": "    # regcred:\n    #   registry: foo.example.com\n    #   username: foobar\n    #   password: secret\n\n  serviceAccount:\n    # -- Create ServiceAccount\n",
                      "markdown": "`    # regcred:\n    #   registry: foo.example.com\n    #   username: foobar\n    #   password: secret\n\n  serviceAccount:\n    # -- Create ServiceAccount\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 754,
                  "startColumn": 32,
                  "endLine": 754,
                  "endColumn": 40,
                  "snippet": {
                    "text": "  # supported fields: username, password, host, dsn, database\n  secretRef: \"\"\n  # Read configuration from a mounted Secret, required the information in JSON format\n  # supported fields: username, password, host, dsn, database\n  mountedSecret: \"\"\n\n# enabled if replicaCount > 1\n",
                    "rendered": {
                      "text": "  # supported fields: username, password, host, dsn, database\n  secretRef: \"\"\n  # Read configuration from a mounted Secret, required the information in JSON format\n  # supported fields: username, password, host, dsn, database\n  mountedSecret: \"\"\n\n# enabled if replicaCount > 1\n",
                      "markdown": "`  # supported fields: username, password, host, dsn, database\n  secretRef: \"\"\n  # Read configuration from a mounted Secret, required the information in JSON format\n  # supported fields: username, password, host, dsn, database\n  mountedSecret: \"\"\n\n# enabled if replicaCount > 1\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 751,
                  "startColumn": 32,
                  "endLine": 751,
                  "endColumn": 40,
                  "snippet": {
                    "text": "  # example mysql: root:password@tcp(localhost:3306)/test?tls=false\n  dsn: \"\"\n  # -- Read configuration from an existing Secret\n  # supported fields: username, password, host, dsn, database\n  secretRef: \"\"\n  # Read configuration from a mounted Secret, required the information in JSON format\n  # supported fields: username, password, host, dsn, database\n",
                    "rendered": {
                      "text": "  # example mysql: root:password@tcp(localhost:3306)/test?tls=false\n  dsn: \"\"\n  # -- Read configuration from an existing Secret\n  # supported fields: username, password, host, dsn, database\n  secretRef: \"\"\n  # Read configuration from a mounted Secret, required the information in JSON format\n  # supported fields: username, password, host, dsn, database\n",
                      "markdown": "`  # example mysql: root:password@tcp(localhost:3306)/test?tls=false\n  dsn: \"\"\n  # -- Read configuration from an existing Secret\n  # supported fields: username, password, host, dsn, database\n  secretRef: \"\"\n  # Read configuration from a mounted Secret, required the information in JSON format\n  # supported fields: username, password, host, dsn, database\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 748,
                  "startColumn": 24,
                  "endLine": 748,
                  "endColumn": 32,
                  "snippet": {
                    "text": "  enableSSL: false\n  # -- Instead of configure the individual values you can also provide an DSN string\n  # example postgres: postgres://postgres:password@localhost:5432/postgres?sslmode=disable\n  # example mysql: root:password@tcp(localhost:3306)/test?tls=false\n  dsn: \"\"\n  # -- Read configuration from an existing Secret\n  # supported fields: username, password, host, dsn, database\n",
                    "rendered": {
                      "text": "  enableSSL: false\n  # -- Instead of configure the individual values you can also provide an DSN string\n  # example postgres: postgres://postgres:password@localhost:5432/postgres?sslmode=disable\n  # example mysql: root:password@tcp(localhost:3306)/test?tls=false\n  dsn: \"\"\n  # -- Read configuration from an existing Secret\n  # supported fields: username, password, host, dsn, database\n",
                      "markdown": "`  enableSSL: false\n  # -- Instead of configure the individual values you can also provide an DSN string\n  # example postgres: postgres://postgres:password@localhost:5432/postgres?sslmode=disable\n  # example mysql: root:password@tcp(localhost:3306)/test?tls=false\n  dsn: \"\"\n  # -- Read configuration from an existing Secret\n  # supported fields: username, password, host, dsn, database\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 747,
                  "startColumn": 42,
                  "endLine": 747,
                  "endColumn": 50,
                  "snippet": {
                    "text": "  # -- Enables SSL\n  enableSSL: false\n  # -- Instead of configure the individual values you can also provide an DSN string\n  # example postgres: postgres://postgres:password@localhost:5432/postgres?sslmode=disable\n  # example mysql: root:password@tcp(localhost:3306)/test?tls=false\n  dsn: \"\"\n  # -- Read configuration from an existing Secret\n",
                    "rendered": {
                      "text": "  # -- Enables SSL\n  enableSSL: false\n  # -- Instead of configure the individual values you can also provide an DSN string\n  # example postgres: postgres://postgres:password@localhost:5432/postgres?sslmode=disable\n  # example mysql: root:password@tcp(localhost:3306)/test?tls=false\n  dsn: \"\"\n  # -- Read configuration from an existing Secret\n",
                      "markdown": "`  # -- Enables SSL\n  enableSSL: false\n  # -- Instead of configure the individual values you can also provide an DSN string\n  # example postgres: postgres://postgres:password@localhost:5432/postgres?sslmode=disable\n  # example mysql: root:password@tcp(localhost:3306)/test?tls=false\n  dsn: \"\"\n  # -- Read configuration from an existing Secret\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 741,
                  "startColumn": 2,
                  "endLine": 741,
                  "endColumn": 10,
                  "snippet": {
                    "text": "  # -- Username\n  username: \"\"\n  # -- Password\n  password: \"\"\n  # -- Host Address\n  host: \"\"\n  # -- Enables SSL\n",
                    "rendered": {
                      "text": "  # -- Username\n  username: \"\"\n  # -- Password\n  password: \"\"\n  # -- Host Address\n  host: \"\"\n  # -- Enables SSL\n",
                      "markdown": "`  # -- Username\n  username: \"\"\n  # -- Password\n  password: \"\"\n  # -- Host Address\n  host: \"\"\n  # -- Enables SSL\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 740,
                  "startColumn": 7,
                  "endLine": 740,
                  "endColumn": 15,
                  "snippet": {
                    "text": "  database: \"\"\n  # -- Username\n  username: \"\"\n  # -- Password\n  password: \"\"\n  # -- Host Address\n  host: \"\"\n",
                    "rendered": {
                      "text": "  database: \"\"\n  # -- Username\n  username: \"\"\n  # -- Password\n  password: \"\"\n  # -- Host Address\n  host: \"\"\n",
                      "markdown": "`  database: \"\"\n  # -- Username\n  username: \"\"\n  # -- Password\n  password: \"\"\n  # -- Host Address\n  host: \"\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 731,
                  "startColumn": 2,
                  "endLine": 731,
                  "endColumn": 10,
                  "snippet": {
                    "text": "  # -- (optional) Username\n  username: \"\"\n  # -- (optional) Password\n  password: \"\"\n\ndatabase:\n  # -- Use an external Database, supported: mysql, postgres, mariadb\n",
                    "rendered": {
                      "text": "  # -- (optional) Username\n  username: \"\"\n  # -- (optional) Password\n  password: \"\"\n\ndatabase:\n  # -- Use an external Database, supported: mysql, postgres, mariadb\n",
                      "markdown": "`  # -- (optional) Username\n  username: \"\"\n  # -- (optional) Password\n  password: \"\"\n\ndatabase:\n  # -- Use an external Database, supported: mysql, postgres, mariadb\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 730,
                  "startColumn": 18,
                  "endLine": 730,
                  "endColumn": 26,
                  "snippet": {
                    "text": "  prefix: \"policy-reporter\"\n  # -- (optional) Username\n  username: \"\"\n  # -- (optional) Password\n  password: \"\"\n\ndatabase:\n",
                    "rendered": {
                      "text": "  prefix: \"policy-reporter\"\n  # -- (optional) Username\n  username: \"\"\n  # -- (optional) Password\n  password: \"\"\n\ndatabase:\n",
                      "markdown": "`  prefix: \"policy-reporter\"\n  # -- (optional) Username\n  username: \"\"\n  # -- (optional) Password\n  password: \"\"\n\ndatabase:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 393,
                  "startColumn": 4,
                  "endLine": 393,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    # -- HTTP BasicAuth username\n    username: \"\"\n    # -- HTTP BasicAuth password\n    password: \"\"\n    # -- Elasticsearch API Key for api key authentication\n    apiKey: \"\"\n    # -- Read configuration from an already existing Secret\n",
                    "rendered": {
                      "text": "    # -- HTTP BasicAuth username\n    username: \"\"\n    # -- HTTP BasicAuth password\n    password: \"\"\n    # -- Elasticsearch API Key for api key authentication\n    apiKey: \"\"\n    # -- Read configuration from an already existing Secret\n",
                      "markdown": "`    # -- HTTP BasicAuth username\n    username: \"\"\n    # -- HTTP BasicAuth password\n    password: \"\"\n    # -- Elasticsearch API Key for api key authentication\n    apiKey: \"\"\n    # -- Read configuration from an already existing Secret\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 392,
                  "startColumn": 24,
                  "endLine": 392,
                  "endColumn": 32,
                  "snippet": {
                    "text": "    typelessApi: false\n    # -- HTTP BasicAuth username\n    username: \"\"\n    # -- HTTP BasicAuth password\n    password: \"\"\n    # -- Elasticsearch API Key for api key authentication\n    apiKey: \"\"\n",
                    "rendered": {
                      "text": "    typelessApi: false\n    # -- HTTP BasicAuth username\n    username: \"\"\n    # -- HTTP BasicAuth password\n    password: \"\"\n    # -- Elasticsearch API Key for api key authentication\n    apiKey: \"\"\n",
                      "markdown": "`    typelessApi: false\n    # -- HTTP BasicAuth username\n    username: \"\"\n    # -- HTTP BasicAuth password\n    password: \"\"\n    # -- Elasticsearch API Key for api key authentication\n    apiKey: \"\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 350,
                  "startColumn": 4,
                  "endLine": 350,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    # -- HTTP BasicAuth username\n    username: \"\"\n    # -- HTTP BasicAuth password\n    password: \"\"\n    # -- Filter Results which should send to this target\n    # Wildcars for namespaces and policies are supported, you can either define exclude or include values\n    # Filters are available for all targets except the UI\n",
                    "rendered": {
                      "text": "    # -- HTTP BasicAuth username\n    username: \"\"\n    # -- HTTP BasicAuth password\n    password: \"\"\n    # -- Filter Results which should send to this target\n    # Wildcars for namespaces and policies are supported, you can either define exclude or include values\n    # Filters are available for all targets except the UI\n",
                      "markdown": "`    # -- HTTP BasicAuth username\n    username: \"\"\n    # -- HTTP BasicAuth password\n    password: \"\"\n    # -- Filter Results which should send to this target\n    # Wildcars for namespaces and policies are supported, you can either define exclude or include values\n    # Filters are available for all targets except the UI\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 349,
                  "startColumn": 24,
                  "endLine": 349,
                  "endColumn": 32,
                  "snippet": {
                    "text": "    headers: {}\n    # -- HTTP BasicAuth username\n    username: \"\"\n    # -- HTTP BasicAuth password\n    password: \"\"\n    # -- Filter Results which should send to this target\n    # Wildcars for namespaces and policies are supported, you can either define exclude or include values\n",
                    "rendered": {
                      "text": "    headers: {}\n    # -- HTTP BasicAuth username\n    username: \"\"\n    # -- HTTP BasicAuth password\n    password: \"\"\n    # -- Filter Results which should send to this target\n    # Wildcars for namespaces and policies are supported, you can either define exclude or include values\n",
                      "markdown": "`    headers: {}\n    # -- HTTP BasicAuth username\n    username: \"\"\n    # -- HTTP BasicAuth password\n    password: \"\"\n    # -- Filter Results which should send to this target\n    # Wildcars for namespaces and policies are supported, you can either define exclude or include values\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 234,
                  "startColumn": 4,
                  "endLine": 234,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    # -- SMTP Username\n    username: \"\"\n    # -- SMTP Password\n    password: \"\"\n    # -- Displayed from email address\n    from: \"\"\n    # -- SMTP Encryption\n",
                    "rendered": {
                      "text": "    # -- SMTP Username\n    username: \"\"\n    # -- SMTP Password\n    password: \"\"\n    # -- Displayed from email address\n    from: \"\"\n    # -- SMTP Encryption\n",
                      "markdown": "`    # -- SMTP Username\n    username: \"\"\n    # -- SMTP Password\n    password: \"\"\n    # -- Displayed from email address\n    from: \"\"\n    # -- SMTP Encryption\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 233,
                  "startColumn": 14,
                  "endLine": 233,
                  "endColumn": 22,
                  "snippet": {
                    "text": "    port: 465\n    # -- SMTP Username\n    username: \"\"\n    # -- SMTP Password\n    password: \"\"\n    # -- Displayed from email address\n    from: \"\"\n",
                    "rendered": {
                      "text": "    port: 465\n    # -- SMTP Username\n    username: \"\"\n    # -- SMTP Password\n    password: \"\"\n    # -- Displayed from email address\n    from: \"\"\n",
                      "markdown": "`    port: 465\n    # -- SMTP Username\n    username: \"\"\n    # -- SMTP Password\n    password: \"\"\n    # -- Displayed from email address\n    from: \"\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 214,
                  "startColumn": 58,
                  "endLine": 214,
                  "endColumn": 66,
                  "snippet": {
                    "text": "  username: \"\"\n  # -- HTTP BasicAuth password\n  password: \"\"\n  # -- (optional) Secret reference to get username and/or password from\n  secretRef: \"\"\n\nemailReports:\n",
                    "rendered": {
                      "text": "  username: \"\"\n  # -- HTTP BasicAuth password\n  password: \"\"\n  # -- (optional) Secret reference to get username and/or password from\n  secretRef: \"\"\n\nemailReports:\n",
                      "markdown": "`  username: \"\"\n  # -- HTTP BasicAuth password\n  password: \"\"\n  # -- (optional) Secret reference to get username and/or password from\n  secretRef: \"\"\n\nemailReports:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 213,
                  "startColumn": 2,
                  "endLine": 213,
                  "endColumn": 10,
                  "snippet": {
                    "text": "  # -- HTTP BasicAuth username\n  username: \"\"\n  # -- HTTP BasicAuth password\n  password: \"\"\n  # -- (optional) Secret reference to get username and/or password from\n  secretRef: \"\"\n\n",
                    "rendered": {
                      "text": "  # -- HTTP BasicAuth username\n  username: \"\"\n  # -- HTTP BasicAuth password\n  password: \"\"\n  # -- (optional) Secret reference to get username and/or password from\n  secretRef: \"\"\n\n",
                      "markdown": "`  # -- HTTP BasicAuth username\n  username: \"\"\n  # -- HTTP BasicAuth password\n  password: \"\"\n  # -- (optional) Secret reference to get username and/or password from\n  secretRef: \"\"\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 212,
                  "startColumn": 22,
                  "endLine": 212,
                  "endColumn": 30,
                  "snippet": {
                    "text": "basicAuth:\n  # -- HTTP BasicAuth username\n  username: \"\"\n  # -- HTTP BasicAuth password\n  password: \"\"\n  # -- (optional) Secret reference to get username and/or password from\n  secretRef: \"\"\n",
                    "rendered": {
                      "text": "basicAuth:\n  # -- HTTP BasicAuth username\n  username: \"\"\n  # -- HTTP BasicAuth password\n  password: \"\"\n  # -- (optional) Secret reference to get username and/or password from\n  secretRef: \"\"\n",
                      "markdown": "`basicAuth:\n  # -- HTTP BasicAuth username\n  username: \"\"\n  # -- HTTP BasicAuth password\n  password: \"\"\n  # -- (optional) Secret reference to get username and/or password from\n  secretRef: \"\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 1353,
                  "startColumn": 19,
                  "endLine": 1353,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    # -- Additional labels to add to each pod\n    podLabels: {}\n\n    # -- Deployment update strategy.\n    # Ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy\n    updateStrategy: {}\n    #  rollingUpdate:\n",
                    "rendered": {
                      "text": "    # -- Additional labels to add to each pod\n    podLabels: {}\n\n    # -- Deployment update strategy.\n    # Ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy\n    updateStrategy: {}\n    #  rollingUpdate:\n",
                      "markdown": "`    # -- Additional labels to add to each pod\n    podLabels: {}\n\n    # -- Deployment update strategy.\n    # Ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy\n    updateStrategy: {}\n    #  rollingUpdate:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 1165,
                  "startColumn": 19,
                  "endLine": 1165,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    # -- Additional labels to add to each pod\n    podLabels: {}\n\n    # -- Deployment update strategy.\n    # Ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy\n    updateStrategy: {}\n    #  rollingUpdate:\n",
                    "rendered": {
                      "text": "    # -- Additional labels to add to each pod\n    podLabels: {}\n\n    # -- Deployment update strategy.\n    # Ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy\n    updateStrategy: {}\n    #  rollingUpdate:\n",
                      "markdown": "`    # -- Additional labels to add to each pod\n    podLabels: {}\n\n    # -- Deployment update strategy.\n    # Ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy\n    updateStrategy: {}\n    #  rollingUpdate:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 976,
                  "startColumn": 17,
                  "endLine": 976,
                  "endColumn": 25,
                  "snippet": {
                    "text": "  # -- Additional labels to add to each pod\n  podLabels: {}\n\n  # -- Deployment update strategy.\n  # Ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy\n  updateStrategy: {}\n  #  rollingUpdate:\n",
                    "rendered": {
                      "text": "  # -- Additional labels to add to each pod\n  podLabels: {}\n\n  # -- Deployment update strategy.\n  # Ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy\n  updateStrategy: {}\n  #  rollingUpdate:\n",
                      "markdown": "`  # -- Additional labels to add to each pod\n  podLabels: {}\n\n  # -- Deployment update strategy.\n  # Ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy\n  updateStrategy: {}\n  #  rollingUpdate:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 1495,
                  "startColumn": 25,
                  "endLine": 1495,
                  "endColumn": 31,
                  "snippet": {
                    "text": "      enabled: true\n      # -- Label to find dashboards using the k8s sidecar\n      label: grafana_dashboard\n      # -- Label value to find dashboards using the k8s sidecar\n      value: \"1\"\n      # -- List of custom label filter\n      # Used to add filter for report label based metric labels defined in custom mode\n",
                    "rendered": {
                      "text": "      enabled: true\n      # -- Label to find dashboards using the k8s sidecar\n      label: grafana_dashboard\n      # -- Label value to find dashboards using the k8s sidecar\n      value: \"1\"\n      # -- List of custom label filter\n      # Used to add filter for report label based metric labels defined in custom mode\n",
                      "markdown": "`      enabled: true\n      # -- Label to find dashboards using the k8s sidecar\n      label: grafana_dashboard\n      # -- Label value to find dashboards using the k8s sidecar\n      value: \"1\"\n      # -- List of custom label filter\n      # Used to add filter for report label based metric labels defined in custom mode\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 1493,
                  "startColumn": 19,
                  "endLine": 1493,
                  "endColumn": 25,
                  "snippet": {
                    "text": "    dashboards:\n      # -- Enable the deployment of grafana dashboards\n      enabled: true\n      # -- Label to find dashboards using the k8s sidecar\n      label: grafana_dashboard\n      # -- Label value to find dashboards using the k8s sidecar\n      value: \"1\"\n",
                    "rendered": {
                      "text": "    dashboards:\n      # -- Enable the deployment of grafana dashboards\n      enabled: true\n      # -- Label to find dashboards using the k8s sidecar\n      label: grafana_dashboard\n      # -- Label value to find dashboards using the k8s sidecar\n      value: \"1\"\n",
                      "markdown": "`    dashboards:\n      # -- Enable the deployment of grafana dashboards\n      enabled: true\n      # -- Label to find dashboards using the k8s sidecar\n      label: grafana_dashboard\n      # -- Label value to find dashboards using the k8s sidecar\n      value: \"1\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 1455,
                  "startColumn": 16,
                  "endLine": 1455,
                  "endColumn": 22,
                  "snippet": {
                    "text": "    # -- Node labels for pod assignment\n    nodeSelector: {}\n\n    # -- List of node taints to tolerate\n    tolerations: []\n\n      # -- Affinity constraints.\n",
                    "rendered": {
                      "text": "    # -- Node labels for pod assignment\n    nodeSelector: {}\n\n    # -- List of node taints to tolerate\n    tolerations: []\n\n      # -- Affinity constraints.\n",
                      "markdown": "`    # -- Node labels for pod assignment\n    nodeSelector: {}\n\n    # -- List of node taints to tolerate\n    tolerations: []\n\n      # -- Affinity constraints.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 1452,
                  "startColumn": 8,
                  "endLine": 1452,
                  "endColumn": 14,
                  "snippet": {
                    "text": "      # Cannot be used if `minAvailable` is set.\n      maxUnavailable:\n\n    # -- Node labels for pod assignment\n    nodeSelector: {}\n\n    # -- List of node taints to tolerate\n",
                    "rendered": {
                      "text": "      # Cannot be used if `minAvailable` is set.\n      maxUnavailable:\n\n    # -- Node labels for pod assignment\n    nodeSelector: {}\n\n    # -- List of node taints to tolerate\n",
                      "markdown": "`      # Cannot be used if `minAvailable` is set.\n      maxUnavailable:\n\n    # -- Node labels for pod assignment\n    nodeSelector: {}\n\n    # -- List of node taints to tolerate\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 1395,
                  "startColumn": 10,
                  "endLine": 1395,
                  "endColumn": 19,
                  "snippet": {
                    "text": "      port: 8080\n      # -- Service annotations.\n      annotations: {}\n      # -- Service labels.\n      labels: {}\n\n    ingress:\n",
                    "rendered": {
                      "text": "      port: 8080\n      # -- Service annotations.\n      annotations: {}\n      # -- Service labels.\n      labels: {}\n\n    ingress:\n",
                      "markdown": "`      port: 8080\n      # -- Service annotations.\n      annotations: {}\n      # -- Service labels.\n      labels: {}\n\n    ingress:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 1393,
                  "startColumn": 10,
                  "endLine": 1393,
                  "endColumn": 19,
                  "snippet": {
                    "text": "      type: ClusterIP\n      # -- Service port.\n      port: 8080\n      # -- Service annotations.\n      annotations: {}\n      # -- Service labels.\n      labels: {}\n",
                    "rendered": {
                      "text": "      type: ClusterIP\n      # -- Service port.\n      port: 8080\n      # -- Service annotations.\n      annotations: {}\n      # -- Service labels.\n      labels: {}\n",
                      "markdown": "`      type: ClusterIP\n      # -- Service port.\n      port: 8080\n      # -- Service annotations.\n      annotations: {}\n      # -- Service labels.\n      labels: {}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 1391,
                  "startColumn": 10,
                  "endLine": 1391,
                  "endColumn": 19,
                  "snippet": {
                    "text": "    service:\n      # -- Service type.\n      type: ClusterIP\n      # -- Service port.\n      port: 8080\n      # -- Service annotations.\n      annotations: {}\n",
                    "rendered": {
                      "text": "    service:\n      # -- Service type.\n      type: ClusterIP\n      # -- Service port.\n      port: 8080\n      # -- Service annotations.\n      annotations: {}\n",
                      "markdown": "`    service:\n      # -- Service type.\n      type: ClusterIP\n      # -- Service port.\n      port: 8080\n      # -- Service annotations.\n      annotations: {}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 1389,
                  "startColumn": 10,
                  "endLine": 1389,
                  "endColumn": 19,
                  "snippet": {
                    "text": "        type: RuntimeDefault\n\n    service:\n      # -- Service type.\n      type: ClusterIP\n      # -- Service port.\n      port: 8080\n",
                    "rendered": {
                      "text": "        type: RuntimeDefault\n\n    service:\n      # -- Service type.\n      type: ClusterIP\n      # -- Service port.\n      port: 8080\n",
                      "markdown": "`        type: RuntimeDefault\n\n    service:\n      # -- Service type.\n      type: ClusterIP\n      # -- Service port.\n      port: 8080\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 1369,
                  "startColumn": 25,
                  "endLine": 1369,
                  "endColumn": 30,
                  "snippet": {
                    "text": "      runAsUser: 1234\n      runAsGroup: 1234\n\n    # -- Allow additional env variables to be added\n    envVars: []\n\n    rbac:\n",
                    "rendered": {
                      "text": "      runAsUser: 1234\n      runAsGroup: 1234\n\n    # -- Allow additional env variables to be added\n    envVars: []\n\n    rbac:\n",
                      "markdown": "`      runAsUser: 1234\n      runAsGroup: 1234\n\n    # -- Allow additional env variables to be added\n    envVars: []\n\n    rbac:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 1282,
                  "startColumn": 16,
                  "endLine": 1282,
                  "endColumn": 22,
                  "snippet": {
                    "text": "    # -- Node labels for pod assignment\n    nodeSelector: {}\n\n    # -- List of node taints to tolerate\n    tolerations: []\n\n      # -- Affinity constraints.\n",
                    "rendered": {
                      "text": "    # -- Node labels for pod assignment\n    nodeSelector: {}\n\n    # -- List of node taints to tolerate\n    tolerations: []\n\n      # -- Affinity constraints.\n",
                      "markdown": "`    # -- Node labels for pod assignment\n    nodeSelector: {}\n\n    # -- List of node taints to tolerate\n    tolerations: []\n\n      # -- Affinity constraints.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 1279,
                  "startColumn": 8,
                  "endLine": 1279,
                  "endColumn": 14,
                  "snippet": {
                    "text": "      # Cannot be used if `minAvailable` is set.\n      maxUnavailable:\n\n    # -- Node labels for pod assignment\n    nodeSelector: {}\n\n    # -- List of node taints to tolerate\n",
                    "rendered": {
                      "text": "      # Cannot be used if `minAvailable` is set.\n      maxUnavailable:\n\n    # -- Node labels for pod assignment\n    nodeSelector: {}\n\n    # -- List of node taints to tolerate\n",
                      "markdown": "`      # Cannot be used if `minAvailable` is set.\n      maxUnavailable:\n\n    # -- Node labels for pod assignment\n    nodeSelector: {}\n\n    # -- List of node taints to tolerate\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 1207,
                  "startColumn": 10,
                  "endLine": 1207,
                  "endColumn": 19,
                  "snippet": {
                    "text": "      port: 8080\n      # -- Service annotations.\n      annotations: {}\n      # -- Service labels.\n      labels: {}\n\n    ingress:\n",
                    "rendered": {
                      "text": "      port: 8080\n      # -- Service annotations.\n      annotations: {}\n      # -- Service labels.\n      labels: {}\n\n    ingress:\n",
                      "markdown": "`      port: 8080\n      # -- Service annotations.\n      annotations: {}\n      # -- Service labels.\n      labels: {}\n\n    ingress:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 1205,
                  "startColumn": 10,
                  "endLine": 1205,
                  "endColumn": 19,
                  "snippet": {
                    "text": "      type: ClusterIP\n      # -- Service port.\n      port: 8080\n      # -- Service annotations.\n      annotations: {}\n      # -- Service labels.\n      labels: {}\n",
                    "rendered": {
                      "text": "      type: ClusterIP\n      # -- Service port.\n      port: 8080\n      # -- Service annotations.\n      annotations: {}\n      # -- Service labels.\n      labels: {}\n",
                      "markdown": "`      type: ClusterIP\n      # -- Service port.\n      port: 8080\n      # -- Service annotations.\n      annotations: {}\n      # -- Service labels.\n      labels: {}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 1203,
                  "startColumn": 10,
                  "endLine": 1203,
                  "endColumn": 19,
                  "snippet": {
                    "text": "    service:\n      # -- Service type.\n      type: ClusterIP\n      # -- Service port.\n      port: 8080\n      # -- Service annotations.\n      annotations: {}\n",
                    "rendered": {
                      "text": "    service:\n      # -- Service type.\n      type: ClusterIP\n      # -- Service port.\n      port: 8080\n      # -- Service annotations.\n      annotations: {}\n",
                      "markdown": "`    service:\n      # -- Service type.\n      type: ClusterIP\n      # -- Service port.\n      port: 8080\n      # -- Service annotations.\n      annotations: {}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 1201,
                  "startColumn": 10,
                  "endLine": 1201,
                  "endColumn": 19,
                  "snippet": {
                    "text": "        type: RuntimeDefault\n\n    service:\n      # -- Service type.\n      type: ClusterIP\n      # -- Service port.\n      port: 8080\n",
                    "rendered": {
                      "text": "        type: RuntimeDefault\n\n    service:\n      # -- Service type.\n      type: ClusterIP\n      # -- Service port.\n      port: 8080\n",
                      "markdown": "`        type: RuntimeDefault\n\n    service:\n      # -- Service type.\n      type: ClusterIP\n      # -- Service port.\n      port: 8080\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 1181,
                  "startColumn": 25,
                  "endLine": 1181,
                  "endColumn": 30,
                  "snippet": {
                    "text": "      runAsUser: 1234\n      runAsGroup: 1234\n\n    # -- Allow additional env variables to be added\n    envVars: []\n\n    rbac:\n",
                    "rendered": {
                      "text": "      runAsUser: 1234\n      runAsGroup: 1234\n\n    # -- Allow additional env variables to be added\n    envVars: []\n\n    rbac:\n",
                      "markdown": "`      runAsUser: 1234\n      runAsGroup: 1234\n\n    # -- Allow additional env variables to be added\n    envVars: []\n\n    rbac:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 1129,
                  "startColumn": 22,
                  "endLine": 1129,
                  "endColumn": 29,
                  "snippet": {
                    "text": "      # -- Enables he BlockReport feature\n      enabled: false\n      # -- Watches for Kyverno Events in the configured namespace\n      # leave blank to watch in all namespaces\n      eventNamespace: default\n      results:\n        # -- Max items per PolicyReport resource\n",
                    "rendered": {
                      "text": "      # -- Enables he BlockReport feature\n      enabled: false\n      # -- Watches for Kyverno Events in the configured namespace\n      # leave blank to watch in all namespaces\n      eventNamespace: default\n      results:\n        # -- Max items per PolicyReport resource\n",
                      "markdown": "`      # -- Enables he BlockReport feature\n      enabled: false\n      # -- Watches for Kyverno Events in the configured namespace\n      # leave blank to watch in all namespaces\n      eventNamespace: default\n      results:\n        # -- Max items per PolicyReport resource\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 1086,
                  "startColumn": 14,
                  "endLine": 1086,
                  "endColumn": 20,
                  "snippet": {
                    "text": "  # -- Node labels for pod assignment\n  nodeSelector: {}\n\n  # -- List of node taints to tolerate\n  tolerations: []\n\n    # -- Affinity constraints.\n",
                    "rendered": {
                      "text": "  # -- Node labels for pod assignment\n  nodeSelector: {}\n\n  # -- List of node taints to tolerate\n  tolerations: []\n\n    # -- Affinity constraints.\n",
                      "markdown": "`  # -- Node labels for pod assignment\n  nodeSelector: {}\n\n  # -- List of node taints to tolerate\n  tolerations: []\n\n    # -- Affinity constraints.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 1083,
                  "startColumn": 6,
                  "endLine": 1083,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    # Cannot be used if `minAvailable` is set.\n    maxUnavailable:\n\n  # -- Node labels for pod assignment\n  nodeSelector: {}\n\n  # -- List of node taints to tolerate\n",
                    "rendered": {
                      "text": "    # Cannot be used if `minAvailable` is set.\n    maxUnavailable:\n\n  # -- Node labels for pod assignment\n  nodeSelector: {}\n\n  # -- List of node taints to tolerate\n",
                      "markdown": "`    # Cannot be used if `minAvailable` is set.\n    maxUnavailable:\n\n  # -- Node labels for pod assignment\n  nodeSelector: {}\n\n  # -- List of node taints to tolerate\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 1030,
                  "startColumn": 62,
                  "endLine": 1031,
                  "snippet": {
                    "text": "  ingress:\n    # -- Create ingress resource.\n    enabled: false\n    # -- Redirect ingress to an additional defined port on the service\n    port: null\n    # -- Ingress class name.\n    className: \"\"\n    # -- Ingress labels.\n",
                    "rendered": {
                      "text": "  ingress:\n    # -- Create ingress resource.\n    enabled: false\n    # -- Redirect ingress to an additional defined port on the service\n    port: null\n    # -- Ingress class name.\n    className: \"\"\n    # -- Ingress labels.\n",
                      "markdown": "`  ingress:\n    # -- Create ingress resource.\n    enabled: false\n    # -- Redirect ingress to an additional defined port on the service\n    port: null\n    # -- Ingress class name.\n    className: \"\"\n    # -- Ingress labels.\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 1020,
                  "startColumn": 19,
                  "endLine": 1020,
                  "endColumn": 28,
                  "snippet": {
                    "text": "    annotations: {}\n    # -- Service labels.\n    labels: {}\n    # -- Additional service ports for e.g. Sidecars  # - name: authenticated\n    # additionalPorts:\n    # - name: authenticated\n    #   port: 8081\n",
                    "rendered": {
                      "text": "    annotations: {}\n    # -- Service labels.\n    labels: {}\n    # -- Additional service ports for e.g. Sidecars  # - name: authenticated\n    # additionalPorts:\n    # - name: authenticated\n    #   port: 8081\n",
                      "markdown": "`    annotations: {}\n    # -- Service labels.\n    labels: {}\n    # -- Additional service ports for e.g. Sidecars  # - name: authenticated\n    # additionalPorts:\n    # - name: authenticated\n    #   port: 8081\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 1018,
                  "startColumn": 8,
                  "endLine": 1018,
                  "endColumn": 17,
                  "snippet": {
                    "text": "    port: 8080\n    # -- Service annotations.\n    annotations: {}\n    # -- Service labels.\n    labels: {}\n    # -- Additional service ports for e.g. Sidecars  # - name: authenticated\n    # additionalPorts:\n",
                    "rendered": {
                      "text": "    port: 8080\n    # -- Service annotations.\n    annotations: {}\n    # -- Service labels.\n    labels: {}\n    # -- Additional service ports for e.g. Sidecars  # - name: authenticated\n    # additionalPorts:\n",
                      "markdown": "`    port: 8080\n    # -- Service annotations.\n    annotations: {}\n    # -- Service labels.\n    labels: {}\n    # -- Additional service ports for e.g. Sidecars  # - name: authenticated\n    # additionalPorts:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 1016,
                  "startColumn": 8,
                  "endLine": 1016,
                  "endColumn": 17,
                  "snippet": {
                    "text": "    type: ClusterIP\n    # -- Service port.\n    port: 8080\n    # -- Service annotations.\n    annotations: {}\n    # -- Service labels.\n    labels: {}\n",
                    "rendered": {
                      "text": "    type: ClusterIP\n    # -- Service port.\n    port: 8080\n    # -- Service annotations.\n    annotations: {}\n    # -- Service labels.\n    labels: {}\n",
                      "markdown": "`    type: ClusterIP\n    # -- Service port.\n    port: 8080\n    # -- Service annotations.\n    annotations: {}\n    # -- Service labels.\n    labels: {}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 1014,
                  "startColumn": 8,
                  "endLine": 1014,
                  "endColumn": 17,
                  "snippet": {
                    "text": "  service:\n    # -- Service type.\n    type: ClusterIP\n    # -- Service port.\n    port: 8080\n    # -- Service annotations.\n    annotations: {}\n",
                    "rendered": {
                      "text": "  service:\n    # -- Service type.\n    type: ClusterIP\n    # -- Service port.\n    port: 8080\n    # -- Service annotations.\n    annotations: {}\n",
                      "markdown": "`  service:\n    # -- Service type.\n    type: ClusterIP\n    # -- Service port.\n    port: 8080\n    # -- Service annotations.\n    annotations: {}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 1012,
                  "startColumn": 8,
                  "endLine": 1012,
                  "endColumn": 17,
                  "snippet": {
                    "text": "      type: RuntimeDefault\n\n  service:\n    # -- Service type.\n    type: ClusterIP\n    # -- Service port.\n    port: 8080\n",
                    "rendered": {
                      "text": "      type: RuntimeDefault\n\n  service:\n    # -- Service type.\n    type: ClusterIP\n    # -- Service port.\n    port: 8080\n",
                      "markdown": "`      type: RuntimeDefault\n\n  service:\n    # -- Service type.\n    type: ClusterIP\n    # -- Service port.\n    port: 8080\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 992,
                  "startColumn": 23,
                  "endLine": 992,
                  "endColumn": 28,
                  "snippet": {
                    "text": "    runAsUser: 1234\n    runAsGroup: 1234\n\n  # -- Allow additional env variables to be added\n  envVars: []\n\n  rbac:\n",
                    "rendered": {
                      "text": "    runAsUser: 1234\n    runAsGroup: 1234\n\n  # -- Allow additional env variables to be added\n  envVars: []\n\n  rbac:\n",
                      "markdown": "`    runAsUser: 1234\n    runAsGroup: 1234\n\n  # -- Allow additional env variables to be added\n  envVars: []\n\n  rbac:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 804,
                  "startColumn": 21,
                  "endLine": 804,
                  "endColumn": 26,
                  "snippet": {
                    "text": "  # emptyDir:\n  #   sizeLimit: 10Mi\n\n# -- Allow additional env variables to be added\nenvVars: []\n\n# -- Allow custom configuration of the /tmp volume\n",
                    "rendered": {
                      "text": "  # emptyDir:\n  #   sizeLimit: 10Mi\n\n# -- Allow additional env variables to be added\nenvVars: []\n\n# -- Allow custom configuration of the /tmp volume\n",
                      "markdown": "`  # emptyDir:\n  #   sizeLimit: 10Mi\n\n# -- Allow additional env variables to be added\nenvVars: []\n\n# -- Allow custom configuration of the /tmp volume\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 774,
                  "startColumn": 83,
                  "endLine": 775,
                  "snippet": {
                    "text": "# ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/\ntolerations: []\n\n# -- Anti-affinity to disallow deploying client and master nodes on the same worker node\naffinity: {}\n\n# -- Topology Spread Constraints to better spread pods\ntopologySpreadConstraints: []\n",
                    "rendered": {
                      "text": "# ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/\ntolerations: []\n\n# -- Anti-affinity to disallow deploying client and master nodes on the same worker node\naffinity: {}\n\n# -- Topology Spread Constraints to better spread pods\ntopologySpreadConstraints: []\n",
                      "markdown": "`# ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/\ntolerations: []\n\n# -- Anti-affinity to disallow deploying client and master nodes on the same worker node\naffinity: {}\n\n# -- Topology Spread Constraints to better spread pods\ntopologySpreadConstraints: []\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 766,
                  "startColumn": 4,
                  "endLine": 766,
                  "endColumn": 10,
                  "snippet": {
                    "text": "  # Cannot be used if `minAvailable` is set.\n  maxUnavailable:\n\n# -- Node labels for pod assignment\n# ref: https://kubernetes.io/docs/user-guide/node-selection/\nnodeSelector: {}\n\n",
                    "rendered": {
                      "text": "  # Cannot be used if `minAvailable` is set.\n  maxUnavailable:\n\n# -- Node labels for pod assignment\n# ref: https://kubernetes.io/docs/user-guide/node-selection/\nnodeSelector: {}\n\n",
                      "markdown": "`  # Cannot be used if `minAvailable` is set.\n  maxUnavailable:\n\n# -- Node labels for pod assignment\n# ref: https://kubernetes.io/docs/user-guide/node-selection/\nnodeSelector: {}\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 688,
                  "startColumn": 46,
                  "endLine": 688,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\n  # Authentication via PodIdentity is also supported\n  gcs:\n    # -- (optional) GCS (Google Cloud Storage) Service Accout Credentials\n    credentials: \"\"\n    # -- (required) GCS Bucket\n    bucket: \"\"\n",
                    "rendered": {
                      "text": "\n  # Authentication via PodIdentity is also supported\n  gcs:\n    # -- (optional) GCS (Google Cloud Storage) Service Accout Credentials\n    credentials: \"\"\n    # -- (required) GCS Bucket\n    bucket: \"\"\n",
                      "markdown": "`\n  # Authentication via PodIdentity is also supported\n  gcs:\n    # -- (optional) GCS (Google Cloud Storage) Service Accout Credentials\n    credentials: \"\"\n    # -- (required) GCS Bucket\n    bucket: \"\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 6,
                  "endLine": 70,
                  "endColumn": 15,
                  "snippet": {
                    "text": "  port: 8080\n  # -- Service annotations\n  annotations: {}\n  # -- Service labels\n  labels: {}\n\n# -- Security context for the pod\n",
                    "rendered": {
                      "text": "  port: 8080\n  # -- Service annotations\n  annotations: {}\n  # -- Service labels\n  labels: {}\n\n# -- Security context for the pod\n",
                      "markdown": "`  port: 8080\n  # -- Service annotations\n  annotations: {}\n  # -- Service labels\n  labels: {}\n\n# -- Security context for the pod\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 6,
                  "endLine": 68,
                  "endColumn": 15,
                  "snippet": {
                    "text": "  type: ClusterIP\n  # -- Service port\n  port: 8080\n  # -- Service annotations\n  annotations: {}\n  # -- Service labels\n  labels: {}\n",
                    "rendered": {
                      "text": "  type: ClusterIP\n  # -- Service port\n  port: 8080\n  # -- Service annotations\n  annotations: {}\n  # -- Service labels\n  labels: {}\n",
                      "markdown": "`  type: ClusterIP\n  # -- Service port\n  port: 8080\n  # -- Service annotations\n  annotations: {}\n  # -- Service labels\n  labels: {}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 6,
                  "endLine": 66,
                  "endColumn": 15,
                  "snippet": {
                    "text": "  enabled: true\n  # -- Service type\n  type: ClusterIP\n  # -- Service port\n  port: 8080\n  # -- Service annotations\n  annotations: {}\n",
                    "rendered": {
                      "text": "  enabled: true\n  # -- Service type\n  type: ClusterIP\n  # -- Service port\n  port: 8080\n  # -- Service annotations\n  annotations: {}\n",
                      "markdown": "`  enabled: true\n  # -- Service type\n  type: ClusterIP\n  # -- Service port\n  port: 8080\n  # -- Service annotations\n  annotations: {}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 6,
                  "endLine": 64,
                  "endColumn": 15,
                  "snippet": {
                    "text": "service:\n  # -- Create Service\n  enabled: true\n  # -- Service type\n  type: ClusterIP\n  # -- Service port\n  port: 8080\n",
                    "rendered": {
                      "text": "service:\n  # -- Create Service\n  enabled: true\n  # -- Service type\n  type: ClusterIP\n  # -- Service port\n  port: 8080\n",
                      "markdown": "`service:\n  # -- Create Service\n  enabled: true\n  # -- Service type\n  type: ClusterIP\n  # -- Service port\n  port: 8080\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/values.yaml"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 13,
                  "endLine": 63,
                  "snippet": {
                    "text": "  name: \"\"\n\nservice:\n  # -- Create Service\n  enabled: true\n  # -- Service type\n  type: ClusterIP\n  # -- Service port\n",
                    "rendered": {
                      "text": "  name: \"\"\n\nservice:\n  # -- Create Service\n  enabled: true\n  # -- Service type\n  type: ClusterIP\n  # -- Service port\n",
                      "markdown": "`  name: \"\"\n\nservice:\n  # -- Create Service\n  enabled: true\n  # -- Service type\n  type: ClusterIP\n  # -- Service port\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/elasticsearch/elasticsearch.go"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 10,
                  "endLine": 111,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t\toptions.Host,\n\t\toptions.Index,\n\t\toptions.Username,\n\t\toptions.Password,\n\t\toptions.ApiKey,\n\t\toptions.Rotation,\n\t\toptions.CustomFields,\n",
                    "rendered": {
                      "text": "\t\toptions.Host,\n\t\toptions.Index,\n\t\toptions.Username,\n\t\toptions.Password,\n\t\toptions.ApiKey,\n\t\toptions.Rotation,\n\t\toptions.CustomFields,\n",
                      "markdown": "`\t\toptions.Host,\n\t\toptions.Index,\n\t\toptions.Username,\n\t\toptions.Password,\n\t\toptions.ApiKey,\n\t\toptions.Rotation,\n\t\toptions.CustomFields,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/elasticsearch/elasticsearch.go"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 33,
                  "endLine": 91,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\t}\n\n\tif e.username != \"\" {\n\t\treq.SetBasicAuth(e.username, e.password)\n\t} else if e.apiKey != \"\" {\n\t\treq.Header.Add(\"Authorization\", \"ApiKey \"+e.apiKey)\n\t}\n",
                    "rendered": {
                      "text": "\t}\n\n\tif e.username != \"\" {\n\t\treq.SetBasicAuth(e.username, e.password)\n\t} else if e.apiKey != \"\" {\n\t\treq.Header.Add(\"Authorization\", \"ApiKey \"+e.apiKey)\n\t}\n",
                      "markdown": "`\t}\n\n\tif e.username != \"\" {\n\t\treq.SetBasicAuth(e.username, e.password)\n\t} else if e.apiKey != \"\" {\n\t\treq.Header.Add(\"Authorization\", \"ApiKey \"+e.apiKey)\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/elasticsearch/elasticsearch.go"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 1,
                  "endLine": 42,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thost         string\n\tindex        string\n\tusername     string\n\tpassword     string\n\tapiKey       string\n\trotation     Rotation\n\tcustomFields map[string]string\n",
                    "rendered": {
                      "text": "\thost         string\n\tindex        string\n\tusername     string\n\tpassword     string\n\tapiKey       string\n\trotation     Rotation\n\tcustomFields map[string]string\n",
                      "markdown": "`\thost         string\n\tindex        string\n\tusername     string\n\tpassword     string\n\tapiKey       string\n\trotation     Rotation\n\tcustomFields map[string]string\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/elasticsearch/elasticsearch.go"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\ttarget.ClientOptions\n\tHost         string\n\tUsername     string\n\tPassword     string\n\tApiKey       string\n\tIndex        string\n\tRotation     string\n",
                    "rendered": {
                      "text": "\ttarget.ClientOptions\n\tHost         string\n\tUsername     string\n\tPassword     string\n\tApiKey       string\n\tIndex        string\n\tRotation     string\n",
                      "markdown": "`\ttarget.ClientOptions\n\tHost         string\n\tUsername     string\n\tPassword     string\n\tApiKey       string\n\tIndex        string\n\tRotation     string\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/googlechat/googlechat_test.go"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 25,
                  "endLine": 43,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\t\t\tt.Errorf(\"Unexpected Host: %s\", url)\n\t\t\t}\n\n\t\t\tif value := req.Header.Get(\"X-Code\"); value != \"1234\" {\n\t\t\t\tt.Errorf(\"Unexpected Header X-Code: %s\", value)\n\t\t\t}\n\n",
                    "rendered": {
                      "text": "\t\t\t\tt.Errorf(\"Unexpected Host: %s\", url)\n\t\t\t}\n\n\t\t\tif value := req.Header.Get(\"X-Code\"); value != \"1234\" {\n\t\t\t\tt.Errorf(\"Unexpected Header X-Code: %s\", value)\n\t\t\t}\n\n",
                      "markdown": "`\t\t\t\tt.Errorf(\"Unexpected Host: %s\", url)\n\t\t\t}\n\n\t\t\tif value := req.Header.Get(\"X-Code\"); value != \"1234\" {\n\t\t\t\tt.Errorf(\"Unexpected Header X-Code: %s\", value)\n\t\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/googlechat/googlechat_test.go"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 25,
                  "endLine": 35,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n",
                    "rendered": {
                      "text": "\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n",
                      "markdown": "`\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/googlechat/googlechat_test.go"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 31,
                  "endLine": 31,
                  "endColumn": 36,
                  "snippet": {
                    "text": "func Test_GoogleChatTarget(t *testing.T) {\n\tt.Run(\"Send\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) error {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json; charset=utf-8\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n",
                    "rendered": {
                      "text": "func Test_GoogleChatTarget(t *testing.T) {\n\tt.Run(\"Send\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) error {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json; charset=utf-8\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n",
                      "markdown": "`func Test_GoogleChatTarget(t *testing.T) {\n\tt.Run(\"Send\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) error {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json; charset=utf-8\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/ui/_helpers.tpl"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 11,
                  "endLine": 10,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n{{/*\nCreate a default fully qualified app name.\nWe truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).\nIf release name contains chart name it will be used as a full name.\n*/}}\n{{- define \"ui.fullname\" -}}\n",
                    "rendered": {
                      "text": "\n{{/*\nCreate a default fully qualified app name.\nWe truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).\nIf release name contains chart name it will be used as a full name.\n*/}}\n{{- define \"ui.fullname\" -}}\n",
                      "markdown": "`\n{{/*\nCreate a default fully qualified app name.\nWe truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).\nIf release name contains chart name it will be used as a full name.\n*/}}\n{{- define \"ui.fullname\" -}}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/ui/_helpers.tpl"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 4,
                  "endLine": 2,
                  "endColumn": 7,
                  "snippet": {
                    "text": "{{/*\nExpand the name of the chart.\n*/}}\n{{- define \"ui.name\" -}}\n{{ template \"policyreporter.name\" . }}-ui\n",
                    "rendered": {
                      "text": "{{/*\nExpand the name of the chart.\n*/}}\n{{- define \"ui.name\" -}}\n{{ template \"policyreporter.name\" . }}-ui\n",
                      "markdown": "`{{/*\nExpand the name of the chart.\n*/}}\n{{- define \"ui.name\" -}}\n{{ template \"policyreporter.name\" . }}-ui\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/ui/_helpers.tpl"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 22,
                  "endLine": 48,
                  "endColumn": 31,
                  "snippet": {
                    "text": "{{- end }}\n\n{{/*\nCreate the name of the service account to use\n*/}}\n{{- define \"ui.serviceAccountName\" -}}\n{{- if .Values.plugin.kyverno.serviceAccount.create }}\n",
                    "rendered": {
                      "text": "{{- end }}\n\n{{/*\nCreate the name of the service account to use\n*/}}\n{{- define \"ui.serviceAccountName\" -}}\n{{- if .Values.plugin.kyverno.serviceAccount.create }}\n",
                      "markdown": "`{{- end }}\n\n{{/*\nCreate the name of the service account to use\n*/}}\n{{- define \"ui.serviceAccountName\" -}}\n{{- if .Values.plugin.kyverno.serviceAccount.create }}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/ui/_helpers.tpl"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 4,
                  "endLine": 2,
                  "endColumn": 7,
                  "snippet": {
                    "text": "{{/*\nExpand the name of the chart.\n*/}}\n{{- define \"ui.name\" -}}\n{{ template \"policyreporter.name\" . }}-ui\n",
                    "rendered": {
                      "text": "{{/*\nExpand the name of the chart.\n*/}}\n{{- define \"ui.name\" -}}\n{{ template \"policyreporter.name\" . }}-ui\n",
                      "markdown": "`{{/*\nExpand the name of the chart.\n*/}}\n{{- define \"ui.name\" -}}\n{{ template \"policyreporter.name\" . }}-ui\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/plugins/kyverno/service.yaml"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 5,
                  "endLine": 4,
                  "snippet": {
                    "text": "{{- if .Values.plugin.kyverno.enabled -}}\napiVersion: v1\nkind: Service\nmetadata:\n  name: {{ include \"kyverno-plugin.fullname\" . }}\n  namespace: {{ include \"policyreporter.namespace\" . }}\n  labels:\n",
                    "rendered": {
                      "text": "{{- if .Values.plugin.kyverno.enabled -}}\napiVersion: v1\nkind: Service\nmetadata:\n  name: {{ include \"kyverno-plugin.fullname\" . }}\n  namespace: {{ include \"policyreporter.namespace\" . }}\n  labels:\n",
                      "markdown": "`{{- if .Values.plugin.kyverno.enabled -}}\napiVersion: v1\nkind: Service\nmetadata:\n  name: {{ include \"kyverno-plugin.fullname\" . }}\n  namespace: {{ include \"policyreporter.namespace\" . }}\n  labels:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/kubernetes/retry_test.go"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 13,
                  "endLine": 123,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\t\tassert.NotNil(t, err)\n\t})\n\n\tt.Run(\"retry service unavailable\", func(t *testing.T) {\n\t\ttry := 0\n\n\t\t_, err := kubernetes.Retry(func() (any, error) {\n",
                    "rendered": {
                      "text": "\t\tassert.NotNil(t, err)\n\t})\n\n\tt.Run(\"retry service unavailable\", func(t *testing.T) {\n\t\ttry := 0\n\n\t\t_, err := kubernetes.Retry(func() (any, error) {\n",
                      "markdown": "`\t\tassert.NotNil(t, err)\n\t})\n\n\tt.Run(\"retry service unavailable\", func(t *testing.T) {\n\t\ttry := 0\n\n\t\t_, err := kubernetes.Retry(func() (any, error) {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/kubernetes/debouncer_test.go"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 18,
                  "endLine": 83,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t\t}\n\t})\n\n\tt.Run(\"Skip Empty Update when delete event follows directly\", func(t *testing.T) {\n\t\tcounter := 0\n\t\twg := sync.WaitGroup{}\n\t\twg.Add(2)\n",
                    "rendered": {
                      "text": "\t\t}\n\t})\n\n\tt.Run(\"Skip Empty Update when delete event follows directly\", func(t *testing.T) {\n\t\tcounter := 0\n\t\twg := sync.WaitGroup{}\n\t\twg.Add(2)\n",
                      "markdown": "`\t\t}\n\t})\n\n\tt.Run(\"Skip Empty Update when delete event follows directly\", func(t *testing.T) {\n\t\tcounter := 0\n\t\twg := sync.WaitGroup{}\n\t\twg.Add(2)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/kubernetes/debouncer_test.go"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 37,
                  "endLine": 79,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\t\twg.Wait()\n\n\t\tif counter != 2 {\n\t\t\tt.Error(\"Expected to execute empty update event after wait time\")\n\t\t}\n\t})\n\n",
                    "rendered": {
                      "text": "\t\twg.Wait()\n\n\t\tif counter != 2 {\n\t\t\tt.Error(\"Expected to execute empty update event after wait time\")\n\t\t}\n\t})\n\n",
                      "markdown": "`\t\twg.Wait()\n\n\t\tif counter != 2 {\n\t\t\tt.Error(\"Expected to execute empty update event after wait time\")\n\t\t}\n\t})\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/kubernetes/queue.go"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 47,
                  "endLine": 77,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\tif namespace == \"\" {\n\t\tpolr, err = q.client.ClusterPolicyReports().Get(context.Background(), name, v1.GetOptions{})\n\t} else {\n\t\tpolr, err = q.client.PolicyReports(namespace).Get(context.Background(), name, v1.GetOptions{})\n\t}\n\n\tif errors.IsNotFound(err) {\n",
                    "rendered": {
                      "text": "\tif namespace == \"\" {\n\t\tpolr, err = q.client.ClusterPolicyReports().Get(context.Background(), name, v1.GetOptions{})\n\t} else {\n\t\tpolr, err = q.client.PolicyReports(namespace).Get(context.Background(), name, v1.GetOptions{})\n\t}\n\n\tif errors.IsNotFound(err) {\n",
                      "markdown": "`\tif namespace == \"\" {\n\t\tpolr, err = q.client.ClusterPolicyReports().Get(context.Background(), name, v1.GetOptions{})\n\t} else {\n\t\tpolr, err = q.client.PolicyReports(namespace).Get(context.Background(), name, v1.GetOptions{})\n\t}\n\n\tif errors.IsNotFound(err) {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/kubernetes/queue.go"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 45,
                  "endLine": 75,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\tvar polr pr.ReportInterface\n\n\tif namespace == \"\" {\n\t\tpolr, err = q.client.ClusterPolicyReports().Get(context.Background(), name, v1.GetOptions{})\n\t} else {\n\t\tpolr, err = q.client.PolicyReports(namespace).Get(context.Background(), name, v1.GetOptions{})\n\t}\n",
                    "rendered": {
                      "text": "\tvar polr pr.ReportInterface\n\n\tif namespace == \"\" {\n\t\tpolr, err = q.client.ClusterPolicyReports().Get(context.Background(), name, v1.GetOptions{})\n\t} else {\n\t\tpolr, err = q.client.PolicyReports(namespace).Get(context.Background(), name, v1.GetOptions{})\n\t}\n",
                      "markdown": "`\tvar polr pr.ReportInterface\n\n\tif namespace == \"\" {\n\t\tpolr, err = q.client.ClusterPolicyReports().Get(context.Background(), name, v1.GetOptions{})\n\t} else {\n\t\tpolr, err = q.client.PolicyReports(namespace).Get(context.Background(), name, v1.GetOptions{})\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/kubernetes/queue.go"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 21,
                  "endLine": 60,
                  "endColumn": 26,
                  "snippet": {
                    "text": "}\n\nfunc (q *Queue) processNextItem() bool {\n\tkey, quit := q.queue.Get()\n\tif quit {\n\t\treturn false\n\t}\n",
                    "rendered": {
                      "text": "}\n\nfunc (q *Queue) processNextItem() bool {\n\tkey, quit := q.queue.Get()\n\tif quit {\n\t\treturn false\n\t}\n",
                      "markdown": "`}\n\nfunc (q *Queue) processNextItem() bool {\n\tkey, quit := q.queue.Get()\n\tif quit {\n\t\treturn false\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/crd/client/informers/externalversions/policyreport/v1alpha2/policyreport.go"
                },
                "region": {
                  "startLine": 27,
                  "endLine": 27,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n\tv1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n\truntime \"k8s.io/apimachinery/pkg/runtime\"\n\twatch \"k8s.io/apimachinery/pkg/watch\"\n\tcache \"k8s.io/client-go/tools/cache\"\n\n\tpolicyreportv1alpha2 \"github.com/kyverno/policy-reporter/pkg/crd/api/policyreport/v1alpha2\"\n",
                    "rendered": {
                      "text": "\n\tv1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n\truntime \"k8s.io/apimachinery/pkg/runtime\"\n\twatch \"k8s.io/apimachinery/pkg/watch\"\n\tcache \"k8s.io/client-go/tools/cache\"\n\n\tpolicyreportv1alpha2 \"github.com/kyverno/policy-reporter/pkg/crd/api/policyreport/v1alpha2\"\n",
                      "markdown": "`\n\tv1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n\truntime \"k8s.io/apimachinery/pkg/runtime\"\n\twatch \"k8s.io/apimachinery/pkg/watch\"\n\tcache \"k8s.io/client-go/tools/cache\"\n\n\tpolicyreportv1alpha2 \"github.com/kyverno/policy-reporter/pkg/crd/api/policyreport/v1alpha2\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/crd/client/informers/externalversions/policyreport/v1alpha2/policyreport.go"
                },
                "region": {
                  "startLine": 23,
                  "endLine": 23,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nimport (\n\t\"context\"\n\ttime \"time\"\n\n\tv1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n\truntime \"k8s.io/apimachinery/pkg/runtime\"\n",
                    "rendered": {
                      "text": "\nimport (\n\t\"context\"\n\ttime \"time\"\n\n\tv1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n\truntime \"k8s.io/apimachinery/pkg/runtime\"\n",
                      "markdown": "`\nimport (\n\t\"context\"\n\ttime \"time\"\n\n\tv1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n\truntime \"k8s.io/apimachinery/pkg/runtime\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/crd/client/informers/externalversions/factory.go"
                },
                "region": {
                  "startLine": 24,
                  "endLine": 24,
                  "endColumn": 6,
                  "snippet": {
                    "text": "import (\n\treflect \"reflect\"\n\tsync \"sync\"\n\ttime \"time\"\n\n\tv1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n\truntime \"k8s.io/apimachinery/pkg/runtime\"\n",
                    "rendered": {
                      "text": "import (\n\treflect \"reflect\"\n\tsync \"sync\"\n\ttime \"time\"\n\n\tv1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n\truntime \"k8s.io/apimachinery/pkg/runtime\"\n",
                      "markdown": "`import (\n\treflect \"reflect\"\n\tsync \"sync\"\n\ttime \"time\"\n\n\tv1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n\truntime \"k8s.io/apimachinery/pkg/runtime\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/server_test.go"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 7,
                  "endLine": 115,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\tengine := gin.New()\n\tserver := api.NewServer(engine, api.WithLogging(zap.L()))\n\n\tengine.GET(\"/recover\", func(ctx *gin.Context) {\n\t\tpanic(\"recover\")\n\t})\n\n",
                    "rendered": {
                      "text": "\tengine := gin.New()\n\tserver := api.NewServer(engine, api.WithLogging(zap.L()))\n\n\tengine.GET(\"/recover\", func(ctx *gin.Context) {\n\t\tpanic(\"recover\")\n\t})\n\n",
                      "markdown": "`\tengine := gin.New()\n\tserver := api.NewServer(engine, api.WithLogging(zap.L()))\n\n\tengine.GET(\"/recover\", func(ctx *gin.Context) {\n\t\tpanic(\"recover\")\n\t})\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/server_test.go"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 7,
                  "endLine": 97,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\tengine := gin.New()\n\tserver := api.NewServer(engine, api.WithRecovery())\n\n\tengine.GET(\"/recover\", func(ctx *gin.Context) {\n\t\tpanic(\"recover\")\n\t})\n\n",
                    "rendered": {
                      "text": "\tengine := gin.New()\n\tserver := api.NewServer(engine, api.WithRecovery())\n\n\tengine.GET(\"/recover\", func(ctx *gin.Context) {\n\t\tpanic(\"recover\")\n\t})\n\n",
                      "markdown": "`\tengine := gin.New()\n\tserver := api.NewServer(engine, api.WithRecovery())\n\n\tengine.GET(\"/recover\", func(ctx *gin.Context) {\n\t\tpanic(\"recover\")\n\t})\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/server_test.go"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 6,
                  "endLine": 70,
                  "endColumn": 11,
                  "snippet": {
                    "text": "type testHandler struct{}\n\nfunc (h *testHandler) Register(group *gin.RouterGroup) error {\n\tgroup.GET(\"\", func(ctx *gin.Context) {\n\t\tctx.JSON(http.StatusOK, nil)\n\t})\n\n",
                    "rendered": {
                      "text": "type testHandler struct{}\n\nfunc (h *testHandler) Register(group *gin.RouterGroup) error {\n\tgroup.GET(\"\", func(ctx *gin.Context) {\n\t\tctx.JSON(http.StatusOK, nil)\n\t})\n\n",
                      "markdown": "`type testHandler struct{}\n\nfunc (h *testHandler) Register(group *gin.RouterGroup) error {\n\tgroup.GET(\"\", func(ctx *gin.Context) {\n\t\tctx.JSON(http.StatusOK, nil)\n\t})\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/server_test.go"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 32,
                  "endLine": 50,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\n\tassert := assert.New(t)\n\tassert.Equal(http.StatusOK, w.Code)\n\tassert.Equal(\"gzip\", w.Header().Get(\"Content-Encoding\"))\n}\n\nfunc TestWithProfiling(t *testing.T) {\n",
                    "rendered": {
                      "text": "\n\tassert := assert.New(t)\n\tassert.Equal(http.StatusOK, w.Code)\n\tassert.Equal(\"gzip\", w.Header().Get(\"Content-Encoding\"))\n}\n\nfunc TestWithProfiling(t *testing.T) {\n",
                      "markdown": "`\n\tassert := assert.New(t)\n\tassert.Equal(http.StatusOK, w.Code)\n\tassert.Equal(\"gzip\", w.Header().Get(\"Content-Encoding\"))\n}\n\nfunc TestWithProfiling(t *testing.T) {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/server_test.go"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 28,
                  "endLine": 34,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n\tassert := assert.New(t)\n\tassert.Equal(http.StatusOK, w.Code)\n\tassert.Equal(\"\", w.Header().Get(\"Content-Encoding\"))\n}\n\nfunc TestWithGZIP(t *testing.T) {\n",
                    "rendered": {
                      "text": "\n\tassert := assert.New(t)\n\tassert.Equal(http.StatusOK, w.Code)\n\tassert.Equal(\"\", w.Header().Get(\"Content-Encoding\"))\n}\n\nfunc TestWithGZIP(t *testing.T) {\n",
                      "markdown": "`\n\tassert := assert.New(t)\n\tassert.Equal(http.StatusOK, w.Code)\n\tassert.Equal(\"\", w.Header().Get(\"Content-Encoding\"))\n}\n\nfunc TestWithGZIP(t *testing.T) {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/monitoring/servicemonitor.yaml"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 13,
                  "endLine": 38,
                  "endColumn": 21,
                  "snippet": {
                    "text": "    basicAuth:\n      password:\n        name: {{ .Values.basicAuth.secretRef }}\n        key: password\n      username:\n        name: {{ .Values.basicAuth.secretRef }}\n        key: username\n",
                    "rendered": {
                      "text": "    basicAuth:\n      password:\n        name: {{ .Values.basicAuth.secretRef }}\n        key: password\n      username:\n        name: {{ .Values.basicAuth.secretRef }}\n        key: username\n",
                      "markdown": "`    basicAuth:\n      password:\n        name: {{ .Values.basicAuth.secretRef }}\n        key: password\n      username:\n        name: {{ .Values.basicAuth.secretRef }}\n        key: username\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/monitoring/servicemonitor.yaml"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 14,
                  "snippet": {
                    "text": "        key: username\n    {{- else if .Values.basicAuth.secretRef }}\n    basicAuth:\n      password:\n        name: {{ .Values.basicAuth.secretRef }}\n        key: password\n      username:\n",
                    "rendered": {
                      "text": "        key: username\n    {{- else if .Values.basicAuth.secretRef }}\n    basicAuth:\n      password:\n        name: {{ .Values.basicAuth.secretRef }}\n        key: password\n      username:\n",
                      "markdown": "`        key: username\n    {{- else if .Values.basicAuth.secretRef }}\n    basicAuth:\n      password:\n        name: {{ .Values.basicAuth.secretRef }}\n        key: password\n      username:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/monitoring/servicemonitor.yaml"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 13,
                  "endLine": 30,
                  "endColumn": 21,
                  "snippet": {
                    "text": "    basicAuth:\n      password:\n        name: {{ include \"monitoring.fullname\" . }}-auth\n        key: password\n      username:\n        name: {{ include \"monitoring.fullname\" . }}-auth\n        key: username\n",
                    "rendered": {
                      "text": "    basicAuth:\n      password:\n        name: {{ include \"monitoring.fullname\" . }}-auth\n        key: password\n      username:\n        name: {{ include \"monitoring.fullname\" . }}-auth\n        key: username\n",
                      "markdown": "`    basicAuth:\n      password:\n        name: {{ include \"monitoring.fullname\" . }}-auth\n        key: password\n      username:\n        name: {{ include \"monitoring.fullname\" . }}-auth\n        key: username\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/monitoring/servicemonitor.yaml"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 6,
                  "endLine": 28,
                  "endColumn": 14,
                  "snippet": {
                    "text": "  - port: http\n    {{- if and .Values.basicAuth.username .Values.basicAuth.password }}\n    basicAuth:\n      password:\n        name: {{ include \"monitoring.fullname\" . }}-auth\n        key: password\n      username:\n",
                    "rendered": {
                      "text": "  - port: http\n    {{- if and .Values.basicAuth.username .Values.basicAuth.password }}\n    basicAuth:\n      password:\n        name: {{ include \"monitoring.fullname\" . }}-auth\n        key: password\n      username:\n",
                      "markdown": "`  - port: http\n    {{- if and .Values.basicAuth.username .Values.basicAuth.password }}\n    basicAuth:\n      password:\n        name: {{ include \"monitoring.fullname\" . }}-auth\n        key: password\n      username:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/monitoring/servicemonitor.yaml"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 60,
                  "endLine": 26,
                  "endColumn": 68,
                  "snippet": {
                    "text": "  {{- end }}\n  endpoints:\n  - port: http\n    {{- if and .Values.basicAuth.username .Values.basicAuth.password }}\n    basicAuth:\n      password:\n        name: {{ include \"monitoring.fullname\" . }}-auth\n",
                    "rendered": {
                      "text": "  {{- end }}\n  endpoints:\n  - port: http\n    {{- if and .Values.basicAuth.username .Values.basicAuth.password }}\n    basicAuth:\n      password:\n        name: {{ include \"monitoring.fullname\" . }}-auth\n",
                      "markdown": "`  {{- end }}\n  endpoints:\n  - port: http\n    {{- if and .Values.basicAuth.username .Values.basicAuth.password }}\n    basicAuth:\n      password:\n        name: {{ include \"monitoring.fullname\" . }}-auth\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/cronjob-violations-report.yaml"
                },
                "region": {
                  "startLine": 109,
                  "startColumn": 18,
                  "endLine": 109,
                  "endColumn": 27,
                  "snippet": {
                    "text": "                    optional: true\n              - name: EMAIL_REPORTS_SMTP_ENCRYPTION\n                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: encryption\n                    optional: true\n",
                    "rendered": {
                      "text": "                    optional: true\n              - name: EMAIL_REPORTS_SMTP_ENCRYPTION\n                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: encryption\n                    optional: true\n",
                      "markdown": "`                    optional: true\n              - name: EMAIL_REPORTS_SMTP_ENCRYPTION\n                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: encryption\n                    optional: true\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/cronjob-violations-report.yaml"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 18,
                  "endLine": 103,
                  "endColumn": 27,
                  "snippet": {
                    "text": "                    optional: true\n              - name: EMAIL_REPORTS_SMTP_FROM\n                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: from\n                    optional: true\n",
                    "rendered": {
                      "text": "                    optional: true\n              - name: EMAIL_REPORTS_SMTP_FROM\n                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: from\n                    optional: true\n",
                      "markdown": "`                    optional: true\n              - name: EMAIL_REPORTS_SMTP_FROM\n                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: from\n                    optional: true\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/cronjob-violations-report.yaml"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 25,
                  "endLine": 99,
                  "endColumn": 33,
                  "snippet": {
                    "text": "                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: password\n                    optional: true\n              - name: EMAIL_REPORTS_SMTP_FROM\n                valueFrom:\n",
                    "rendered": {
                      "text": "                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: password\n                    optional: true\n              - name: EMAIL_REPORTS_SMTP_FROM\n                valueFrom:\n",
                      "markdown": "`                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: password\n                    optional: true\n              - name: EMAIL_REPORTS_SMTP_FROM\n                valueFrom:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/cronjob-violations-report.yaml"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 18,
                  "endLine": 97,
                  "endColumn": 27,
                  "snippet": {
                    "text": "                    optional: true\n              - name: EMAIL_REPORTS_SMTP_PASSWORD\n                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: password\n                    optional: true\n",
                    "rendered": {
                      "text": "                    optional: true\n              - name: EMAIL_REPORTS_SMTP_PASSWORD\n                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: password\n                    optional: true\n",
                      "markdown": "`                    optional: true\n              - name: EMAIL_REPORTS_SMTP_PASSWORD\n                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: password\n                    optional: true\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/cronjob-violations-report.yaml"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 41,
                  "endLine": 95,
                  "endColumn": 49,
                  "snippet": {
                    "text": "                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: username\n                    optional: true\n              - name: EMAIL_REPORTS_SMTP_PASSWORD\n                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n",
                    "rendered": {
                      "text": "                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: username\n                    optional: true\n              - name: EMAIL_REPORTS_SMTP_PASSWORD\n                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n",
                      "markdown": "`                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: username\n                    optional: true\n              - name: EMAIL_REPORTS_SMTP_PASSWORD\n                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/cronjob-violations-report.yaml"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 18,
                  "endLine": 91,
                  "endColumn": 27,
                  "snippet": {
                    "text": "                    optional: true\n              - name: EMAIL_REPORTS_SMTP_USERNAME\n                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: username\n                    optional: true\n",
                    "rendered": {
                      "text": "                    optional: true\n              - name: EMAIL_REPORTS_SMTP_USERNAME\n                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: username\n                    optional: true\n",
                      "markdown": "`                    optional: true\n              - name: EMAIL_REPORTS_SMTP_USERNAME\n                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: username\n                    optional: true\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/cronjob-violations-report.yaml"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 18,
                  "endLine": 85,
                  "endColumn": 27,
                  "snippet": {
                    "text": "                    optional: true\n              - name: EMAIL_REPORTS_SMTP_PORT\n                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: port\n                    optional: true\n",
                    "rendered": {
                      "text": "                    optional: true\n              - name: EMAIL_REPORTS_SMTP_PORT\n                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: port\n                    optional: true\n",
                      "markdown": "`                    optional: true\n              - name: EMAIL_REPORTS_SMTP_PORT\n                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: port\n                    optional: true\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/cronjob-violations-report.yaml"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 18,
                  "endLine": 79,
                  "endColumn": 27,
                  "snippet": {
                    "text": "              env:\n              - name: EMAIL_REPORTS_SMTP_HOST\n                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: host\n                    optional: true\n",
                    "rendered": {
                      "text": "              env:\n              - name: EMAIL_REPORTS_SMTP_HOST\n                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: host\n                    optional: true\n",
                      "markdown": "`              env:\n              - name: EMAIL_REPORTS_SMTP_HOST\n                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: host\n                    optional: true\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/email/client_test.go"
                },
                "region": {
                  "startLine": 6,
                  "endLine": 6,
                  "endColumn": 6,
                  "snippet": {
                    "text": "import (\n\t\"testing\"\n\n\tmail \"github.com/xhit/go-simple-mail/v2\"\n\n\t\"github.com/kyverno/policy-reporter/pkg/email\"\n)\n",
                    "rendered": {
                      "text": "import (\n\t\"testing\"\n\n\tmail \"github.com/xhit/go-simple-mail/v2\"\n\n\t\"github.com/kyverno/policy-reporter/pkg/email\"\n)\n",
                      "markdown": "`import (\n\t\"testing\"\n\n\tmail \"github.com/xhit/go-simple-mail/v2\"\n\n\t\"github.com/kyverno/policy-reporter/pkg/email\"\n)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/email/client.go"
                },
                "region": {
                  "startLine": 7,
                  "endLine": 7,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\"fmt\"\n\t\"strings\"\n\n\tmail \"github.com/xhit/go-simple-mail/v2\"\n)\n\nfunc EncryptionFromString(enc string) mail.Encryption {\n",
                    "rendered": {
                      "text": "\t\"fmt\"\n\t\"strings\"\n\n\tmail \"github.com/xhit/go-simple-mail/v2\"\n)\n\nfunc EncryptionFromString(enc string) mail.Encryption {\n",
                      "markdown": "`\t\"fmt\"\n\t\"strings\"\n\n\tmail \"github.com/xhit/go-simple-mail/v2\"\n)\n\nfunc EncryptionFromString(enc string) mail.Encryption {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/kubernetes/pods/client.go"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 39,
                  "endLine": 23,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\nfunc (c *k8sClient) Get(scope *corev1.ObjectReference) (*corev1.Pod, error) {\n\treturn kubernetes.Retry(func() (*corev1.Pod, error) {\n\t\treturn c.client.Pods(scope.Namespace).Get(context.Background(), scope.Name, metav1.GetOptions{})\n\t})\n}\n\n",
                    "rendered": {
                      "text": "\nfunc (c *k8sClient) Get(scope *corev1.ObjectReference) (*corev1.Pod, error) {\n\treturn kubernetes.Retry(func() (*corev1.Pod, error) {\n\t\treturn c.client.Pods(scope.Namespace).Get(context.Background(), scope.Name, metav1.GetOptions{})\n\t})\n}\n\n",
                      "markdown": "`\nfunc (c *k8sClient) Get(scope *corev1.ObjectReference) (*corev1.Pod, error) {\n\treturn kubernetes.Retry(func() (*corev1.Pod, error) {\n\t\treturn c.client.Pods(scope.Namespace).Get(context.Background(), scope.Name, metav1.GetOptions{})\n\t})\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/kubernetes/namespaces/client.go"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 25,
                  "endLine": 26,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\nfunc (c *k8sClient) List(ctx context.Context, selector map[string]string) ([]string, error) {\n\tlabelSelector := metav1.FormatLabelSelector(&metav1.LabelSelector{MatchLabels: selector})\n\tif cached, ok := c.cache.Get(labelSelector); ok {\n\t\treturn cached.([]string), nil\n\t}\n\n",
                    "rendered": {
                      "text": "\nfunc (c *k8sClient) List(ctx context.Context, selector map[string]string) ([]string, error) {\n\tlabelSelector := metav1.FormatLabelSelector(&metav1.LabelSelector{MatchLabels: selector})\n\tif cached, ok := c.cache.Get(labelSelector); ok {\n\t\treturn cached.([]string), nil\n\t}\n\n",
                      "markdown": "`\nfunc (c *k8sClient) List(ctx context.Context, selector map[string]string) ([]string, error) {\n\tlabelSelector := metav1.FormatLabelSelector(&metav1.LabelSelector{MatchLabels: selector})\n\tif cached, ok := c.cache.Get(labelSelector); ok {\n\t\treturn cached.([]string), nil\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/kubernetes/secrets/client_test.go"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 18,
                  "endLine": 105,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\t})\n\n\tt.Run(\"Get values from not existing secret\", func(t *testing.T) {\n\t\t_, err := client.Get(context.Background(), \"not-exist\")\n\t\tif !errors.IsNotFound(err) {\n\t\t\tt.Errorf(\"Expected not found error\")\n\t\t}\n",
                    "rendered": {
                      "text": "\t})\n\n\tt.Run(\"Get values from not existing secret\", func(t *testing.T) {\n\t\t_, err := client.Get(context.Background(), \"not-exist\")\n\t\tif !errors.IsNotFound(err) {\n\t\t\tt.Errorf(\"Expected not found error\")\n\t\t}\n",
                      "markdown": "`\t})\n\n\tt.Run(\"Get values from not existing secret\", func(t *testing.T) {\n\t\t_, err := client.Get(context.Background(), \"not-exist\")\n\t\tif !errors.IsNotFound(err) {\n\t\t\tt.Errorf(\"Expected not found error\")\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/kubernetes/secrets/client_test.go"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 23,
                  "endLine": 46,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\tclient := secrets.NewClient(newFakeClient())\n\n\tt.Run(\"Get values from existing secret\", func(t *testing.T) {\n\t\tvalues, err := client.Get(context.Background(), secretName)\n\t\tif err != nil {\n\t\t\tt.Errorf(\"Unexpected error while fetching secret: %s\", err)\n\t\t}\n",
                    "rendered": {
                      "text": "\tclient := secrets.NewClient(newFakeClient())\n\n\tt.Run(\"Get values from existing secret\", func(t *testing.T) {\n\t\tvalues, err := client.Get(context.Background(), secretName)\n\t\tif err != nil {\n\t\t\tt.Errorf(\"Unexpected error while fetching secret: %s\", err)\n\t\t}\n",
                      "markdown": "`\tclient := secrets.NewClient(newFakeClient())\n\n\tt.Run(\"Get values from existing secret\", func(t *testing.T) {\n\t\tvalues, err := client.Get(context.Background(), secretName)\n\t\tif err != nil {\n\t\t\tt.Errorf(\"Unexpected error while fetching secret: %s\", err)\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/kubernetes/secrets/client_test.go"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 46,
                  "endLine": 64,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t}\n\n\t\tif values.Password != \"password\" {\n\t\t\tt.Errorf(\"Unexpected Password: %s\", values.Password)\n\t\t}\n\n\t\tif values.APIKey != \"apiKey\" {\n",
                    "rendered": {
                      "text": "\t\t}\n\n\t\tif values.Password != \"password\" {\n\t\t\tt.Errorf(\"Unexpected Password: %s\", values.Password)\n\t\t}\n\n\t\tif values.APIKey != \"apiKey\" {\n",
                      "markdown": "`\t\t}\n\n\t\tif values.Password != \"password\" {\n\t\t\tt.Errorf(\"Unexpected Password: %s\", values.Password)\n\t\t}\n\n\t\tif values.APIKey != \"apiKey\" {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/kubernetes/secrets/client_test.go"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 24,
                  "endLine": 64,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t\t}\n\n\t\tif values.Password != \"password\" {\n\t\t\tt.Errorf(\"Unexpected Password: %s\", values.Password)\n\t\t}\n\n\t\tif values.APIKey != \"apiKey\" {\n",
                    "rendered": {
                      "text": "\t\t}\n\n\t\tif values.Password != \"password\" {\n\t\t\tt.Errorf(\"Unexpected Password: %s\", values.Password)\n\t\t}\n\n\t\tif values.APIKey != \"apiKey\" {\n",
                      "markdown": "`\t\t}\n\n\t\tif values.Password != \"password\" {\n\t\t\tt.Errorf(\"Unexpected Password: %s\", values.Password)\n\t\t}\n\n\t\tif values.APIKey != \"apiKey\" {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/kubernetes/secrets/client_test.go"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 25,
                  "endLine": 63,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\t\t\tt.Errorf(\"Unexpected Username: %s\", values.Username)\n\t\t}\n\n\t\tif values.Password != \"password\" {\n\t\t\tt.Errorf(\"Unexpected Password: %s\", values.Password)\n\t\t}\n\n",
                    "rendered": {
                      "text": "\t\t\tt.Errorf(\"Unexpected Username: %s\", values.Username)\n\t\t}\n\n\t\tif values.Password != \"password\" {\n\t\t\tt.Errorf(\"Unexpected Password: %s\", values.Password)\n\t\t}\n\n",
                      "markdown": "`\t\t\tt.Errorf(\"Unexpected Username: %s\", values.Username)\n\t\t}\n\n\t\tif values.Password != \"password\" {\n\t\t\tt.Errorf(\"Unexpected Password: %s\", values.Password)\n\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/kubernetes/secrets/client_test.go"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 12,
                  "endLine": 63,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t\tt.Errorf(\"Unexpected Username: %s\", values.Username)\n\t\t}\n\n\t\tif values.Password != \"password\" {\n\t\t\tt.Errorf(\"Unexpected Password: %s\", values.Password)\n\t\t}\n\n",
                    "rendered": {
                      "text": "\t\t\tt.Errorf(\"Unexpected Username: %s\", values.Username)\n\t\t}\n\n\t\tif values.Password != \"password\" {\n\t\t\tt.Errorf(\"Unexpected Password: %s\", values.Password)\n\t\t}\n\n",
                      "markdown": "`\t\t\tt.Errorf(\"Unexpected Username: %s\", values.Username)\n\t\t}\n\n\t\tif values.Password != \"password\" {\n\t\t\tt.Errorf(\"Unexpected Password: %s\", values.Password)\n\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/kubernetes/secrets/client_test.go"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 30,
                  "endLine": 27,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\t\tData: map[string][]byte{\n\t\t\t\"host\":            []byte(\"http://localhost:9200\"),\n\t\t\t\"username\":        []byte(\"username\"),\n\t\t\t\"password\":        []byte(\"password\"),\n\t\t\t\"apiKey\":          []byte(\"apiKey\"),\n\t\t\t\"webhook\":         []byte(\"http://localhost:9200/webhook\"),\n\t\t\t\"accessKeyId\":     []byte(\"accessKeyId\"),\n",
                    "rendered": {
                      "text": "\t\tData: map[string][]byte{\n\t\t\t\"host\":            []byte(\"http://localhost:9200\"),\n\t\t\t\"username\":        []byte(\"username\"),\n\t\t\t\"password\":        []byte(\"password\"),\n\t\t\t\"apiKey\":          []byte(\"apiKey\"),\n\t\t\t\"webhook\":         []byte(\"http://localhost:9200/webhook\"),\n\t\t\t\"accessKeyId\":     []byte(\"accessKeyId\"),\n",
                      "markdown": "`\t\tData: map[string][]byte{\n\t\t\t\"host\":            []byte(\"http://localhost:9200\"),\n\t\t\t\"username\":        []byte(\"username\"),\n\t\t\t\"password\":        []byte(\"password\"),\n\t\t\t\"apiKey\":          []byte(\"apiKey\"),\n\t\t\t\"webhook\":         []byte(\"http://localhost:9200/webhook\"),\n\t\t\t\"accessKeyId\":     []byte(\"accessKeyId\"),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/kubernetes/secrets/client_test.go"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 4,
                  "endLine": 27,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\tData: map[string][]byte{\n\t\t\t\"host\":            []byte(\"http://localhost:9200\"),\n\t\t\t\"username\":        []byte(\"username\"),\n\t\t\t\"password\":        []byte(\"password\"),\n\t\t\t\"apiKey\":          []byte(\"apiKey\"),\n\t\t\t\"webhook\":         []byte(\"http://localhost:9200/webhook\"),\n\t\t\t\"accessKeyId\":     []byte(\"accessKeyId\"),\n",
                    "rendered": {
                      "text": "\t\tData: map[string][]byte{\n\t\t\t\"host\":            []byte(\"http://localhost:9200\"),\n\t\t\t\"username\":        []byte(\"username\"),\n\t\t\t\"password\":        []byte(\"password\"),\n\t\t\t\"apiKey\":          []byte(\"apiKey\"),\n\t\t\t\"webhook\":         []byte(\"http://localhost:9200/webhook\"),\n\t\t\t\"accessKeyId\":     []byte(\"accessKeyId\"),\n",
                      "markdown": "`\t\tData: map[string][]byte{\n\t\t\t\"host\":            []byte(\"http://localhost:9200\"),\n\t\t\t\"username\":        []byte(\"username\"),\n\t\t\t\"password\":        []byte(\"password\"),\n\t\t\t\"apiKey\":          []byte(\"apiKey\"),\n\t\t\t\"webhook\":         []byte(\"http://localhost:9200/webhook\"),\n\t\t\t\"accessKeyId\":     []byte(\"accessKeyId\"),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/kubernetes/secrets/client.go"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 17,
                  "endLine": 42,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\nfunc (c *k8sClient) Get(ctx context.Context, name string) (Values, error) {\n\tsecret, err := kubernetes.Retry(func() (*corev1.Secret, error) {\n\t\treturn c.client.Get(ctx, name, metav1.GetOptions{})\n\t})\n\n\tvalues := Values{}\n",
                    "rendered": {
                      "text": "\nfunc (c *k8sClient) Get(ctx context.Context, name string) (Values, error) {\n\tsecret, err := kubernetes.Retry(func() (*corev1.Secret, error) {\n\t\treturn c.client.Get(ctx, name, metav1.GetOptions{})\n\t})\n\n\tvalues := Values{}\n",
                      "markdown": "`\nfunc (c *k8sClient) Get(ctx context.Context, name string) (Values, error) {\n\tsecret, err := kubernetes.Retry(func() (*corev1.Secret, error) {\n\t\treturn c.client.Get(ctx, name, metav1.GetOptions{})\n\t})\n\n\tvalues := Values{}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/kubernetes/secrets/client.go"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 27,
                  "endLine": 67,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\t}\n\n\tif password, ok := secret.Data[\"password\"]; ok {\n\t\tvalues.Password = string(password)\n\t}\n\n\tif apiKey, ok := secret.Data[\"apiKey\"]; ok {\n",
                    "rendered": {
                      "text": "\t}\n\n\tif password, ok := secret.Data[\"password\"]; ok {\n\t\tvalues.Password = string(password)\n\t}\n\n\tif apiKey, ok := secret.Data[\"apiKey\"]; ok {\n",
                      "markdown": "`\t}\n\n\tif password, ok := secret.Data[\"password\"]; ok {\n\t\tvalues.Password = string(password)\n\t}\n\n\tif apiKey, ok := secret.Data[\"apiKey\"]; ok {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/kubernetes/secrets/client.go"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 9,
                  "endLine": 67,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t}\n\n\tif password, ok := secret.Data[\"password\"]; ok {\n\t\tvalues.Password = string(password)\n\t}\n\n\tif apiKey, ok := secret.Data[\"apiKey\"]; ok {\n",
                    "rendered": {
                      "text": "\t}\n\n\tif password, ok := secret.Data[\"password\"]; ok {\n\t\tvalues.Password = string(password)\n\t}\n\n\tif apiKey, ok := secret.Data[\"apiKey\"]; ok {\n",
                      "markdown": "`\t}\n\n\tif password, ok := secret.Data[\"password\"]; ok {\n\t\tvalues.Password = string(password)\n\t}\n\n\tif apiKey, ok := secret.Data[\"apiKey\"]; ok {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/kubernetes/secrets/client.go"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 33,
                  "endLine": 66,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\t\tvalues.Username = string(username)\n\t}\n\n\tif password, ok := secret.Data[\"password\"]; ok {\n\t\tvalues.Password = string(password)\n\t}\n\n",
                    "rendered": {
                      "text": "\t\tvalues.Username = string(username)\n\t}\n\n\tif password, ok := secret.Data[\"password\"]; ok {\n\t\tvalues.Password = string(password)\n\t}\n\n",
                      "markdown": "`\t\tvalues.Username = string(username)\n\t}\n\n\tif password, ok := secret.Data[\"password\"]; ok {\n\t\tvalues.Password = string(password)\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/kubernetes/secrets/client.go"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 4,
                  "endLine": 66,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\tvalues.Username = string(username)\n\t}\n\n\tif password, ok := secret.Data[\"password\"]; ok {\n\t\tvalues.Password = string(password)\n\t}\n\n",
                    "rendered": {
                      "text": "\t\tvalues.Username = string(username)\n\t}\n\n\tif password, ok := secret.Data[\"password\"]; ok {\n\t\tvalues.Password = string(password)\n\t}\n\n",
                      "markdown": "`\t\tvalues.Username = string(username)\n\t}\n\n\tif password, ok := secret.Data[\"password\"]; ok {\n\t\tvalues.Password = string(password)\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/kubernetes/secrets/client.go"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 31,
                  "endLine": 19,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\tWebhook         string `json:\"webhook,omitempty\"`\n\tChannel         string `json:\"channel,omitempty\"`\n\tUsername        string `json:\"username,omitempty\"`\n\tPassword        string `json:\"password,omitempty\"`\n\tAPIKey          string `json:\"apiKey,omitempty\"`\n\tAccessKeyID     string `json:\"accessKeyId,omitempty\"`\n\tSecretAccessKey string `json:\"secretAccessKey,omitempty\"`\n",
                    "rendered": {
                      "text": "\tWebhook         string `json:\"webhook,omitempty\"`\n\tChannel         string `json:\"channel,omitempty\"`\n\tUsername        string `json:\"username,omitempty\"`\n\tPassword        string `json:\"password,omitempty\"`\n\tAPIKey          string `json:\"apiKey,omitempty\"`\n\tAccessKeyID     string `json:\"accessKeyId,omitempty\"`\n\tSecretAccessKey string `json:\"secretAccessKey,omitempty\"`\n",
                      "markdown": "`\tWebhook         string `json:\"webhook,omitempty\"`\n\tChannel         string `json:\"channel,omitempty\"`\n\tUsername        string `json:\"username,omitempty\"`\n\tPassword        string `json:\"password,omitempty\"`\n\tAPIKey          string `json:\"apiKey,omitempty\"`\n\tAccessKeyID     string `json:\"accessKeyId,omitempty\"`\n\tSecretAccessKey string `json:\"secretAccessKey,omitempty\"`\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/kubernetes/secrets/client.go"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 1,
                  "endLine": 19,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tWebhook         string `json:\"webhook,omitempty\"`\n\tChannel         string `json:\"channel,omitempty\"`\n\tUsername        string `json:\"username,omitempty\"`\n\tPassword        string `json:\"password,omitempty\"`\n\tAPIKey          string `json:\"apiKey,omitempty\"`\n\tAccessKeyID     string `json:\"accessKeyId,omitempty\"`\n\tSecretAccessKey string `json:\"secretAccessKey,omitempty\"`\n",
                    "rendered": {
                      "text": "\tWebhook         string `json:\"webhook,omitempty\"`\n\tChannel         string `json:\"channel,omitempty\"`\n\tUsername        string `json:\"username,omitempty\"`\n\tPassword        string `json:\"password,omitempty\"`\n\tAPIKey          string `json:\"apiKey,omitempty\"`\n\tAccessKeyID     string `json:\"accessKeyId,omitempty\"`\n\tSecretAccessKey string `json:\"secretAccessKey,omitempty\"`\n",
                      "markdown": "`\tWebhook         string `json:\"webhook,omitempty\"`\n\tChannel         string `json:\"channel,omitempty\"`\n\tUsername        string `json:\"username,omitempty\"`\n\tPassword        string `json:\"password,omitempty\"`\n\tAPIKey          string `json:\"apiKey,omitempty\"`\n\tAccessKeyID     string `json:\"accessKeyId,omitempty\"`\n\tSecretAccessKey string `json:\"secretAccessKey,omitempty\"`\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/collection_test.go"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 28,
                  "endLine": 72,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\t\tassert.Nil(t, collection.Client(\"Invalid\"))\n\t})\n\n\tt.Run(\"usesSecret checks if at least on target has a secretRef configured\", func(t *testing.T) {\n\t\tassert.False(t, target.NewCollection().UsesSecrets())\n\t\tassert.True(t, collection.UsesSecrets())\n\t})\n",
                    "rendered": {
                      "text": "\t\tassert.Nil(t, collection.Client(\"Invalid\"))\n\t})\n\n\tt.Run(\"usesSecret checks if at least on target has a secretRef configured\", func(t *testing.T) {\n\t\tassert.False(t, target.NewCollection().UsesSecrets())\n\t\tassert.True(t, collection.UsesSecrets())\n\t})\n",
                      "markdown": "`\t\tassert.Nil(t, collection.Client(\"Invalid\"))\n\t})\n\n\tt.Run(\"usesSecret checks if at least on target has a secretRef configured\", func(t *testing.T) {\n\t\tassert.False(t, target.NewCollection().UsesSecrets())\n\t\tassert.True(t, collection.UsesSecrets())\n\t})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v1/api.go"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 8,
                  "endLine": 49,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\tcluster.GET(\"kinds\", h.ListClusterFilter(\"resource_kind\"))\n\tcluster.GET(\"resources\", h.ListClusterResources)\n\tcluster.GET(\"status-counts\", h.ListClusterStatusCounts)\n\tcluster.GET(\"results\", h.ListClusterResults)\n\n\treturn nil\n}\n",
                    "rendered": {
                      "text": "\tcluster.GET(\"kinds\", h.ListClusterFilter(\"resource_kind\"))\n\tcluster.GET(\"resources\", h.ListClusterResources)\n\tcluster.GET(\"status-counts\", h.ListClusterStatusCounts)\n\tcluster.GET(\"results\", h.ListClusterResults)\n\n\treturn nil\n}\n",
                      "markdown": "`\tcluster.GET(\"kinds\", h.ListClusterFilter(\"resource_kind\"))\n\tcluster.GET(\"resources\", h.ListClusterResources)\n\tcluster.GET(\"status-counts\", h.ListClusterStatusCounts)\n\tcluster.GET(\"results\", h.ListClusterResults)\n\n\treturn nil\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v1/api.go"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 8,
                  "endLine": 48,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\tcluster.GET(\"policies\", h.ListClusterFilter(\"policy\"))\n\tcluster.GET(\"kinds\", h.ListClusterFilter(\"resource_kind\"))\n\tcluster.GET(\"resources\", h.ListClusterResources)\n\tcluster.GET(\"status-counts\", h.ListClusterStatusCounts)\n\tcluster.GET(\"results\", h.ListClusterResults)\n\n\treturn nil\n",
                    "rendered": {
                      "text": "\tcluster.GET(\"policies\", h.ListClusterFilter(\"policy\"))\n\tcluster.GET(\"kinds\", h.ListClusterFilter(\"resource_kind\"))\n\tcluster.GET(\"resources\", h.ListClusterResources)\n\tcluster.GET(\"status-counts\", h.ListClusterStatusCounts)\n\tcluster.GET(\"results\", h.ListClusterResults)\n\n\treturn nil\n",
                      "markdown": "`\tcluster.GET(\"policies\", h.ListClusterFilter(\"policy\"))\n\tcluster.GET(\"kinds\", h.ListClusterFilter(\"resource_kind\"))\n\tcluster.GET(\"resources\", h.ListClusterResources)\n\tcluster.GET(\"status-counts\", h.ListClusterStatusCounts)\n\tcluster.GET(\"results\", h.ListClusterResults)\n\n\treturn nil\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v1/api.go"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 8,
                  "endLine": 47,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\tcluster.GET(\"categories\", h.ListClusterFilter(\"category\"))\n\tcluster.GET(\"policies\", h.ListClusterFilter(\"policy\"))\n\tcluster.GET(\"kinds\", h.ListClusterFilter(\"resource_kind\"))\n\tcluster.GET(\"resources\", h.ListClusterResources)\n\tcluster.GET(\"status-counts\", h.ListClusterStatusCounts)\n\tcluster.GET(\"results\", h.ListClusterResults)\n\n",
                    "rendered": {
                      "text": "\tcluster.GET(\"categories\", h.ListClusterFilter(\"category\"))\n\tcluster.GET(\"policies\", h.ListClusterFilter(\"policy\"))\n\tcluster.GET(\"kinds\", h.ListClusterFilter(\"resource_kind\"))\n\tcluster.GET(\"resources\", h.ListClusterResources)\n\tcluster.GET(\"status-counts\", h.ListClusterStatusCounts)\n\tcluster.GET(\"results\", h.ListClusterResults)\n\n",
                      "markdown": "`\tcluster.GET(\"categories\", h.ListClusterFilter(\"category\"))\n\tcluster.GET(\"policies\", h.ListClusterFilter(\"policy\"))\n\tcluster.GET(\"kinds\", h.ListClusterFilter(\"resource_kind\"))\n\tcluster.GET(\"resources\", h.ListClusterResources)\n\tcluster.GET(\"status-counts\", h.ListClusterStatusCounts)\n\tcluster.GET(\"results\", h.ListClusterResults)\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v1/api.go"
                },
                "region": {
                  "startLine": 46,
                  "startColumn": 8,
                  "endLine": 46,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\tcluster.GET(\"sources\", h.ListClusterFilter(\"source\"))\n\tcluster.GET(\"categories\", h.ListClusterFilter(\"category\"))\n\tcluster.GET(\"policies\", h.ListClusterFilter(\"policy\"))\n\tcluster.GET(\"kinds\", h.ListClusterFilter(\"resource_kind\"))\n\tcluster.GET(\"resources\", h.ListClusterResources)\n\tcluster.GET(\"status-counts\", h.ListClusterStatusCounts)\n\tcluster.GET(\"results\", h.ListClusterResults)\n",
                    "rendered": {
                      "text": "\tcluster.GET(\"sources\", h.ListClusterFilter(\"source\"))\n\tcluster.GET(\"categories\", h.ListClusterFilter(\"category\"))\n\tcluster.GET(\"policies\", h.ListClusterFilter(\"policy\"))\n\tcluster.GET(\"kinds\", h.ListClusterFilter(\"resource_kind\"))\n\tcluster.GET(\"resources\", h.ListClusterResources)\n\tcluster.GET(\"status-counts\", h.ListClusterStatusCounts)\n\tcluster.GET(\"results\", h.ListClusterResults)\n",
                      "markdown": "`\tcluster.GET(\"sources\", h.ListClusterFilter(\"source\"))\n\tcluster.GET(\"categories\", h.ListClusterFilter(\"category\"))\n\tcluster.GET(\"policies\", h.ListClusterFilter(\"policy\"))\n\tcluster.GET(\"kinds\", h.ListClusterFilter(\"resource_kind\"))\n\tcluster.GET(\"resources\", h.ListClusterResources)\n\tcluster.GET(\"status-counts\", h.ListClusterStatusCounts)\n\tcluster.GET(\"results\", h.ListClusterResults)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v1/api.go"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 8,
                  "endLine": 45,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\tcluster := engine.Group(\"cluster-resources\")\n\tcluster.GET(\"sources\", h.ListClusterFilter(\"source\"))\n\tcluster.GET(\"categories\", h.ListClusterFilter(\"category\"))\n\tcluster.GET(\"policies\", h.ListClusterFilter(\"policy\"))\n\tcluster.GET(\"kinds\", h.ListClusterFilter(\"resource_kind\"))\n\tcluster.GET(\"resources\", h.ListClusterResources)\n\tcluster.GET(\"status-counts\", h.ListClusterStatusCounts)\n",
                    "rendered": {
                      "text": "\tcluster := engine.Group(\"cluster-resources\")\n\tcluster.GET(\"sources\", h.ListClusterFilter(\"source\"))\n\tcluster.GET(\"categories\", h.ListClusterFilter(\"category\"))\n\tcluster.GET(\"policies\", h.ListClusterFilter(\"policy\"))\n\tcluster.GET(\"kinds\", h.ListClusterFilter(\"resource_kind\"))\n\tcluster.GET(\"resources\", h.ListClusterResources)\n\tcluster.GET(\"status-counts\", h.ListClusterStatusCounts)\n",
                      "markdown": "`\tcluster := engine.Group(\"cluster-resources\")\n\tcluster.GET(\"sources\", h.ListClusterFilter(\"source\"))\n\tcluster.GET(\"categories\", h.ListClusterFilter(\"category\"))\n\tcluster.GET(\"policies\", h.ListClusterFilter(\"policy\"))\n\tcluster.GET(\"kinds\", h.ListClusterFilter(\"resource_kind\"))\n\tcluster.GET(\"resources\", h.ListClusterResources)\n\tcluster.GET(\"status-counts\", h.ListClusterStatusCounts)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v1/api.go"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 8,
                  "endLine": 44,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\n\tcluster := engine.Group(\"cluster-resources\")\n\tcluster.GET(\"sources\", h.ListClusterFilter(\"source\"))\n\tcluster.GET(\"categories\", h.ListClusterFilter(\"category\"))\n\tcluster.GET(\"policies\", h.ListClusterFilter(\"policy\"))\n\tcluster.GET(\"kinds\", h.ListClusterFilter(\"resource_kind\"))\n\tcluster.GET(\"resources\", h.ListClusterResources)\n",
                    "rendered": {
                      "text": "\n\tcluster := engine.Group(\"cluster-resources\")\n\tcluster.GET(\"sources\", h.ListClusterFilter(\"source\"))\n\tcluster.GET(\"categories\", h.ListClusterFilter(\"category\"))\n\tcluster.GET(\"policies\", h.ListClusterFilter(\"policy\"))\n\tcluster.GET(\"kinds\", h.ListClusterFilter(\"resource_kind\"))\n\tcluster.GET(\"resources\", h.ListClusterResources)\n",
                      "markdown": "`\n\tcluster := engine.Group(\"cluster-resources\")\n\tcluster.GET(\"sources\", h.ListClusterFilter(\"source\"))\n\tcluster.GET(\"categories\", h.ListClusterFilter(\"category\"))\n\tcluster.GET(\"policies\", h.ListClusterFilter(\"policy\"))\n\tcluster.GET(\"kinds\", h.ListClusterFilter(\"resource_kind\"))\n\tcluster.GET(\"resources\", h.ListClusterResources)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v1/api.go"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 8,
                  "endLine": 43,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\tns.GET(\"results\", h.ListNamespacedResults)\n\n\tcluster := engine.Group(\"cluster-resources\")\n\tcluster.GET(\"sources\", h.ListClusterFilter(\"source\"))\n\tcluster.GET(\"categories\", h.ListClusterFilter(\"category\"))\n\tcluster.GET(\"policies\", h.ListClusterFilter(\"policy\"))\n\tcluster.GET(\"kinds\", h.ListClusterFilter(\"resource_kind\"))\n",
                    "rendered": {
                      "text": "\tns.GET(\"results\", h.ListNamespacedResults)\n\n\tcluster := engine.Group(\"cluster-resources\")\n\tcluster.GET(\"sources\", h.ListClusterFilter(\"source\"))\n\tcluster.GET(\"categories\", h.ListClusterFilter(\"category\"))\n\tcluster.GET(\"policies\", h.ListClusterFilter(\"policy\"))\n\tcluster.GET(\"kinds\", h.ListClusterFilter(\"resource_kind\"))\n",
                      "markdown": "`\tns.GET(\"results\", h.ListNamespacedResults)\n\n\tcluster := engine.Group(\"cluster-resources\")\n\tcluster.GET(\"sources\", h.ListClusterFilter(\"source\"))\n\tcluster.GET(\"categories\", h.ListClusterFilter(\"category\"))\n\tcluster.GET(\"policies\", h.ListClusterFilter(\"policy\"))\n\tcluster.GET(\"kinds\", h.ListClusterFilter(\"resource_kind\"))\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v1/api.go"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 3,
                  "endLine": 40,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\tns.GET(\"kinds\", h.ListNamespacedFilter(\"resource_kind\"))\n\tns.GET(\"resources\", h.ListNamespacedResources)\n\tns.GET(\"status-counts\", h.ListNamespacedStatusCounts)\n\tns.GET(\"results\", h.ListNamespacedResults)\n\n\tcluster := engine.Group(\"cluster-resources\")\n\tcluster.GET(\"sources\", h.ListClusterFilter(\"source\"))\n",
                    "rendered": {
                      "text": "\tns.GET(\"kinds\", h.ListNamespacedFilter(\"resource_kind\"))\n\tns.GET(\"resources\", h.ListNamespacedResources)\n\tns.GET(\"status-counts\", h.ListNamespacedStatusCounts)\n\tns.GET(\"results\", h.ListNamespacedResults)\n\n\tcluster := engine.Group(\"cluster-resources\")\n\tcluster.GET(\"sources\", h.ListClusterFilter(\"source\"))\n",
                      "markdown": "`\tns.GET(\"kinds\", h.ListNamespacedFilter(\"resource_kind\"))\n\tns.GET(\"resources\", h.ListNamespacedResources)\n\tns.GET(\"status-counts\", h.ListNamespacedStatusCounts)\n\tns.GET(\"results\", h.ListNamespacedResults)\n\n\tcluster := engine.Group(\"cluster-resources\")\n\tcluster.GET(\"sources\", h.ListClusterFilter(\"source\"))\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v1/api.go"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 3,
                  "endLine": 39,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\tns.GET(\"policies\", h.ListNamespacedFilter(\"policy\"))\n\tns.GET(\"kinds\", h.ListNamespacedFilter(\"resource_kind\"))\n\tns.GET(\"resources\", h.ListNamespacedResources)\n\tns.GET(\"status-counts\", h.ListNamespacedStatusCounts)\n\tns.GET(\"results\", h.ListNamespacedResults)\n\n\tcluster := engine.Group(\"cluster-resources\")\n",
                    "rendered": {
                      "text": "\tns.GET(\"policies\", h.ListNamespacedFilter(\"policy\"))\n\tns.GET(\"kinds\", h.ListNamespacedFilter(\"resource_kind\"))\n\tns.GET(\"resources\", h.ListNamespacedResources)\n\tns.GET(\"status-counts\", h.ListNamespacedStatusCounts)\n\tns.GET(\"results\", h.ListNamespacedResults)\n\n\tcluster := engine.Group(\"cluster-resources\")\n",
                      "markdown": "`\tns.GET(\"policies\", h.ListNamespacedFilter(\"policy\"))\n\tns.GET(\"kinds\", h.ListNamespacedFilter(\"resource_kind\"))\n\tns.GET(\"resources\", h.ListNamespacedResources)\n\tns.GET(\"status-counts\", h.ListNamespacedStatusCounts)\n\tns.GET(\"results\", h.ListNamespacedResults)\n\n\tcluster := engine.Group(\"cluster-resources\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v1/api.go"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 3,
                  "endLine": 38,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\tns.GET(\"categories\", h.ListNamespacedFilter(\"category\"))\n\tns.GET(\"policies\", h.ListNamespacedFilter(\"policy\"))\n\tns.GET(\"kinds\", h.ListNamespacedFilter(\"resource_kind\"))\n\tns.GET(\"resources\", h.ListNamespacedResources)\n\tns.GET(\"status-counts\", h.ListNamespacedStatusCounts)\n\tns.GET(\"results\", h.ListNamespacedResults)\n\n",
                    "rendered": {
                      "text": "\tns.GET(\"categories\", h.ListNamespacedFilter(\"category\"))\n\tns.GET(\"policies\", h.ListNamespacedFilter(\"policy\"))\n\tns.GET(\"kinds\", h.ListNamespacedFilter(\"resource_kind\"))\n\tns.GET(\"resources\", h.ListNamespacedResources)\n\tns.GET(\"status-counts\", h.ListNamespacedStatusCounts)\n\tns.GET(\"results\", h.ListNamespacedResults)\n\n",
                      "markdown": "`\tns.GET(\"categories\", h.ListNamespacedFilter(\"category\"))\n\tns.GET(\"policies\", h.ListNamespacedFilter(\"policy\"))\n\tns.GET(\"kinds\", h.ListNamespacedFilter(\"resource_kind\"))\n\tns.GET(\"resources\", h.ListNamespacedResources)\n\tns.GET(\"status-counts\", h.ListNamespacedStatusCounts)\n\tns.GET(\"results\", h.ListNamespacedResults)\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v1/api.go"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 3,
                  "endLine": 37,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\tns.GET(\"sources\", h.ListNamespacedFilter(\"source\"))\n\tns.GET(\"categories\", h.ListNamespacedFilter(\"category\"))\n\tns.GET(\"policies\", h.ListNamespacedFilter(\"policy\"))\n\tns.GET(\"kinds\", h.ListNamespacedFilter(\"resource_kind\"))\n\tns.GET(\"resources\", h.ListNamespacedResources)\n\tns.GET(\"status-counts\", h.ListNamespacedStatusCounts)\n\tns.GET(\"results\", h.ListNamespacedResults)\n",
                    "rendered": {
                      "text": "\tns.GET(\"sources\", h.ListNamespacedFilter(\"source\"))\n\tns.GET(\"categories\", h.ListNamespacedFilter(\"category\"))\n\tns.GET(\"policies\", h.ListNamespacedFilter(\"policy\"))\n\tns.GET(\"kinds\", h.ListNamespacedFilter(\"resource_kind\"))\n\tns.GET(\"resources\", h.ListNamespacedResources)\n\tns.GET(\"status-counts\", h.ListNamespacedStatusCounts)\n\tns.GET(\"results\", h.ListNamespacedResults)\n",
                      "markdown": "`\tns.GET(\"sources\", h.ListNamespacedFilter(\"source\"))\n\tns.GET(\"categories\", h.ListNamespacedFilter(\"category\"))\n\tns.GET(\"policies\", h.ListNamespacedFilter(\"policy\"))\n\tns.GET(\"kinds\", h.ListNamespacedFilter(\"resource_kind\"))\n\tns.GET(\"resources\", h.ListNamespacedResources)\n\tns.GET(\"status-counts\", h.ListNamespacedStatusCounts)\n\tns.GET(\"results\", h.ListNamespacedResults)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v1/api.go"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 3,
                  "endLine": 36,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\tns := engine.Group(\"namespaced-resources\")\n\tns.GET(\"sources\", h.ListNamespacedFilter(\"source\"))\n\tns.GET(\"categories\", h.ListNamespacedFilter(\"category\"))\n\tns.GET(\"policies\", h.ListNamespacedFilter(\"policy\"))\n\tns.GET(\"kinds\", h.ListNamespacedFilter(\"resource_kind\"))\n\tns.GET(\"resources\", h.ListNamespacedResources)\n\tns.GET(\"status-counts\", h.ListNamespacedStatusCounts)\n",
                    "rendered": {
                      "text": "\tns := engine.Group(\"namespaced-resources\")\n\tns.GET(\"sources\", h.ListNamespacedFilter(\"source\"))\n\tns.GET(\"categories\", h.ListNamespacedFilter(\"category\"))\n\tns.GET(\"policies\", h.ListNamespacedFilter(\"policy\"))\n\tns.GET(\"kinds\", h.ListNamespacedFilter(\"resource_kind\"))\n\tns.GET(\"resources\", h.ListNamespacedResources)\n\tns.GET(\"status-counts\", h.ListNamespacedStatusCounts)\n",
                      "markdown": "`\tns := engine.Group(\"namespaced-resources\")\n\tns.GET(\"sources\", h.ListNamespacedFilter(\"source\"))\n\tns.GET(\"categories\", h.ListNamespacedFilter(\"category\"))\n\tns.GET(\"policies\", h.ListNamespacedFilter(\"policy\"))\n\tns.GET(\"kinds\", h.ListNamespacedFilter(\"resource_kind\"))\n\tns.GET(\"resources\", h.ListNamespacedResources)\n\tns.GET(\"status-counts\", h.ListNamespacedStatusCounts)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v1/api.go"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 3,
                  "endLine": 35,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n\tns := engine.Group(\"namespaced-resources\")\n\tns.GET(\"sources\", h.ListNamespacedFilter(\"source\"))\n\tns.GET(\"categories\", h.ListNamespacedFilter(\"category\"))\n\tns.GET(\"policies\", h.ListNamespacedFilter(\"policy\"))\n\tns.GET(\"kinds\", h.ListNamespacedFilter(\"resource_kind\"))\n\tns.GET(\"resources\", h.ListNamespacedResources)\n",
                    "rendered": {
                      "text": "\n\tns := engine.Group(\"namespaced-resources\")\n\tns.GET(\"sources\", h.ListNamespacedFilter(\"source\"))\n\tns.GET(\"categories\", h.ListNamespacedFilter(\"category\"))\n\tns.GET(\"policies\", h.ListNamespacedFilter(\"policy\"))\n\tns.GET(\"kinds\", h.ListNamespacedFilter(\"resource_kind\"))\n\tns.GET(\"resources\", h.ListNamespacedResources)\n",
                      "markdown": "`\n\tns := engine.Group(\"namespaced-resources\")\n\tns.GET(\"sources\", h.ListNamespacedFilter(\"source\"))\n\tns.GET(\"categories\", h.ListNamespacedFilter(\"category\"))\n\tns.GET(\"policies\", h.ListNamespacedFilter(\"policy\"))\n\tns.GET(\"kinds\", h.ListNamespacedFilter(\"resource_kind\"))\n\tns.GET(\"resources\", h.ListNamespacedResources)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v1/api.go"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 3,
                  "endLine": 34,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\tengine.GET(\"html-report/violations\", h.HTMLViolationsReport)\n\n\tns := engine.Group(\"namespaced-resources\")\n\tns.GET(\"sources\", h.ListNamespacedFilter(\"source\"))\n\tns.GET(\"categories\", h.ListNamespacedFilter(\"category\"))\n\tns.GET(\"policies\", h.ListNamespacedFilter(\"policy\"))\n\tns.GET(\"kinds\", h.ListNamespacedFilter(\"resource_kind\"))\n",
                    "rendered": {
                      "text": "\tengine.GET(\"html-report/violations\", h.HTMLViolationsReport)\n\n\tns := engine.Group(\"namespaced-resources\")\n\tns.GET(\"sources\", h.ListNamespacedFilter(\"source\"))\n\tns.GET(\"categories\", h.ListNamespacedFilter(\"category\"))\n\tns.GET(\"policies\", h.ListNamespacedFilter(\"policy\"))\n\tns.GET(\"kinds\", h.ListNamespacedFilter(\"resource_kind\"))\n",
                      "markdown": "`\tengine.GET(\"html-report/violations\", h.HTMLViolationsReport)\n\n\tns := engine.Group(\"namespaced-resources\")\n\tns.GET(\"sources\", h.ListNamespacedFilter(\"source\"))\n\tns.GET(\"categories\", h.ListNamespacedFilter(\"category\"))\n\tns.GET(\"policies\", h.ListNamespacedFilter(\"policy\"))\n\tns.GET(\"kinds\", h.ListNamespacedFilter(\"resource_kind\"))\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v1/api.go"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 7,
                  "endLine": 31,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\tengine.GET(\"policy-reports\", h.ListPolicyReports)\n\tengine.GET(\"cluster-policy-reports\", h.ListClusterPolicyReports)\n\tengine.GET(\"rule-status-count\", h.RuleStatusCounts)\n\tengine.GET(\"html-report/violations\", h.HTMLViolationsReport)\n\n\tns := engine.Group(\"namespaced-resources\")\n\tns.GET(\"sources\", h.ListNamespacedFilter(\"source\"))\n",
                    "rendered": {
                      "text": "\tengine.GET(\"policy-reports\", h.ListPolicyReports)\n\tengine.GET(\"cluster-policy-reports\", h.ListClusterPolicyReports)\n\tengine.GET(\"rule-status-count\", h.RuleStatusCounts)\n\tengine.GET(\"html-report/violations\", h.HTMLViolationsReport)\n\n\tns := engine.Group(\"namespaced-resources\")\n\tns.GET(\"sources\", h.ListNamespacedFilter(\"source\"))\n",
                      "markdown": "`\tengine.GET(\"policy-reports\", h.ListPolicyReports)\n\tengine.GET(\"cluster-policy-reports\", h.ListClusterPolicyReports)\n\tengine.GET(\"rule-status-count\", h.RuleStatusCounts)\n\tengine.GET(\"html-report/violations\", h.HTMLViolationsReport)\n\n\tns := engine.Group(\"namespaced-resources\")\n\tns.GET(\"sources\", h.ListNamespacedFilter(\"source\"))\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v1/api.go"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 7,
                  "endLine": 30,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\tengine.GET(\"namespaces\", h.ListNamespaces)\n\tengine.GET(\"policy-reports\", h.ListPolicyReports)\n\tengine.GET(\"cluster-policy-reports\", h.ListClusterPolicyReports)\n\tengine.GET(\"rule-status-count\", h.RuleStatusCounts)\n\tengine.GET(\"html-report/violations\", h.HTMLViolationsReport)\n\n\tns := engine.Group(\"namespaced-resources\")\n",
                    "rendered": {
                      "text": "\tengine.GET(\"namespaces\", h.ListNamespaces)\n\tengine.GET(\"policy-reports\", h.ListPolicyReports)\n\tengine.GET(\"cluster-policy-reports\", h.ListClusterPolicyReports)\n\tengine.GET(\"rule-status-count\", h.RuleStatusCounts)\n\tengine.GET(\"html-report/violations\", h.HTMLViolationsReport)\n\n\tns := engine.Group(\"namespaced-resources\")\n",
                      "markdown": "`\tengine.GET(\"namespaces\", h.ListNamespaces)\n\tengine.GET(\"policy-reports\", h.ListPolicyReports)\n\tengine.GET(\"cluster-policy-reports\", h.ListClusterPolicyReports)\n\tengine.GET(\"rule-status-count\", h.RuleStatusCounts)\n\tengine.GET(\"html-report/violations\", h.HTMLViolationsReport)\n\n\tns := engine.Group(\"namespaced-resources\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v1/api.go"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 7,
                  "endLine": 29,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\tengine.GET(\"targets\", h.ListTargets)\n\tengine.GET(\"namespaces\", h.ListNamespaces)\n\tengine.GET(\"policy-reports\", h.ListPolicyReports)\n\tengine.GET(\"cluster-policy-reports\", h.ListClusterPolicyReports)\n\tengine.GET(\"rule-status-count\", h.RuleStatusCounts)\n\tengine.GET(\"html-report/violations\", h.HTMLViolationsReport)\n\n",
                    "rendered": {
                      "text": "\tengine.GET(\"targets\", h.ListTargets)\n\tengine.GET(\"namespaces\", h.ListNamespaces)\n\tengine.GET(\"policy-reports\", h.ListPolicyReports)\n\tengine.GET(\"cluster-policy-reports\", h.ListClusterPolicyReports)\n\tengine.GET(\"rule-status-count\", h.RuleStatusCounts)\n\tengine.GET(\"html-report/violations\", h.HTMLViolationsReport)\n\n",
                      "markdown": "`\tengine.GET(\"targets\", h.ListTargets)\n\tengine.GET(\"namespaces\", h.ListNamespaces)\n\tengine.GET(\"policy-reports\", h.ListPolicyReports)\n\tengine.GET(\"cluster-policy-reports\", h.ListClusterPolicyReports)\n\tengine.GET(\"rule-status-count\", h.RuleStatusCounts)\n\tengine.GET(\"html-report/violations\", h.HTMLViolationsReport)\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v1/api.go"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 7,
                  "endLine": 28,
                  "endColumn": 12,
                  "snippet": {
                    "text": "func (h *APIHandler) Register(engine *gin.RouterGroup) error {\n\tengine.GET(\"targets\", h.ListTargets)\n\tengine.GET(\"namespaces\", h.ListNamespaces)\n\tengine.GET(\"policy-reports\", h.ListPolicyReports)\n\tengine.GET(\"cluster-policy-reports\", h.ListClusterPolicyReports)\n\tengine.GET(\"rule-status-count\", h.RuleStatusCounts)\n\tengine.GET(\"html-report/violations\", h.HTMLViolationsReport)\n",
                    "rendered": {
                      "text": "func (h *APIHandler) Register(engine *gin.RouterGroup) error {\n\tengine.GET(\"targets\", h.ListTargets)\n\tengine.GET(\"namespaces\", h.ListNamespaces)\n\tengine.GET(\"policy-reports\", h.ListPolicyReports)\n\tengine.GET(\"cluster-policy-reports\", h.ListClusterPolicyReports)\n\tengine.GET(\"rule-status-count\", h.RuleStatusCounts)\n\tengine.GET(\"html-report/violations\", h.HTMLViolationsReport)\n",
                      "markdown": "`func (h *APIHandler) Register(engine *gin.RouterGroup) error {\n\tengine.GET(\"targets\", h.ListTargets)\n\tengine.GET(\"namespaces\", h.ListNamespaces)\n\tengine.GET(\"policy-reports\", h.ListPolicyReports)\n\tengine.GET(\"cluster-policy-reports\", h.ListClusterPolicyReports)\n\tengine.GET(\"rule-status-count\", h.RuleStatusCounts)\n\tengine.GET(\"html-report/violations\", h.HTMLViolationsReport)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v1/api.go"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 7,
                  "endLine": 27,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\nfunc (h *APIHandler) Register(engine *gin.RouterGroup) error {\n\tengine.GET(\"targets\", h.ListTargets)\n\tengine.GET(\"namespaces\", h.ListNamespaces)\n\tengine.GET(\"policy-reports\", h.ListPolicyReports)\n\tengine.GET(\"cluster-policy-reports\", h.ListClusterPolicyReports)\n\tengine.GET(\"rule-status-count\", h.RuleStatusCounts)\n",
                    "rendered": {
                      "text": "\nfunc (h *APIHandler) Register(engine *gin.RouterGroup) error {\n\tengine.GET(\"targets\", h.ListTargets)\n\tengine.GET(\"namespaces\", h.ListNamespaces)\n\tengine.GET(\"policy-reports\", h.ListPolicyReports)\n\tengine.GET(\"cluster-policy-reports\", h.ListClusterPolicyReports)\n\tengine.GET(\"rule-status-count\", h.RuleStatusCounts)\n",
                      "markdown": "`\nfunc (h *APIHandler) Register(engine *gin.RouterGroup) error {\n\tengine.GET(\"targets\", h.ListTargets)\n\tengine.GET(\"namespaces\", h.ListNamespaces)\n\tengine.GET(\"policy-reports\", h.ListPolicyReports)\n\tengine.GET(\"cluster-policy-reports\", h.ListClusterPolicyReports)\n\tengine.GET(\"rule-status-count\", h.RuleStatusCounts)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v1/api.go"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 7,
                  "endLine": 26,
                  "endColumn": 12,
                  "snippet": {
                    "text": "}\n\nfunc (h *APIHandler) Register(engine *gin.RouterGroup) error {\n\tengine.GET(\"targets\", h.ListTargets)\n\tengine.GET(\"namespaces\", h.ListNamespaces)\n\tengine.GET(\"policy-reports\", h.ListPolicyReports)\n\tengine.GET(\"cluster-policy-reports\", h.ListClusterPolicyReports)\n",
                    "rendered": {
                      "text": "}\n\nfunc (h *APIHandler) Register(engine *gin.RouterGroup) error {\n\tengine.GET(\"targets\", h.ListTargets)\n\tengine.GET(\"namespaces\", h.ListNamespaces)\n\tengine.GET(\"policy-reports\", h.ListPolicyReports)\n\tengine.GET(\"cluster-policy-reports\", h.ListClusterPolicyReports)\n",
                      "markdown": "`}\n\nfunc (h *APIHandler) Register(engine *gin.RouterGroup) error {\n\tengine.GET(\"targets\", h.ListTargets)\n\tengine.GET(\"namespaces\", h.ListNamespaces)\n\tengine.GET(\"policy-reports\", h.ListPolicyReports)\n\tengine.GET(\"cluster-policy-reports\", h.ListClusterPolicyReports)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/configs/core.tmpl"
                },
                "region": {
                  "startLine": 171,
                  "startColumn": 32,
                  "endLine": 171,
                  "endColumn": 40,
                  "snippet": {
                    "text": "  type: {{ .Values.database.type }}\n  database: {{ .Values.database.database }}\n  username: {{ .Values.database.username }}\n  password: {{ .Values.database.password }}\n  host: {{ .Values.database.host }}\n  enableSSL: {{ .Values.database.enableSSL }}\n  dsn: {{ .Values.database.dsn }}\n",
                    "rendered": {
                      "text": "  type: {{ .Values.database.type }}\n  database: {{ .Values.database.database }}\n  username: {{ .Values.database.username }}\n  password: {{ .Values.database.password }}\n  host: {{ .Values.database.host }}\n  enableSSL: {{ .Values.database.enableSSL }}\n  dsn: {{ .Values.database.dsn }}\n",
                      "markdown": "`  type: {{ .Values.database.type }}\n  database: {{ .Values.database.database }}\n  username: {{ .Values.database.username }}\n  password: {{ .Values.database.password }}\n  host: {{ .Values.database.host }}\n  enableSSL: {{ .Values.database.enableSSL }}\n  dsn: {{ .Values.database.dsn }}\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/configs/core.tmpl"
                },
                "region": {
                  "startLine": 171,
                  "startColumn": 2,
                  "endLine": 171,
                  "endColumn": 10,
                  "snippet": {
                    "text": "  type: {{ .Values.database.type }}\n  database: {{ .Values.database.database }}\n  username: {{ .Values.database.username }}\n  password: {{ .Values.database.password }}\n  host: {{ .Values.database.host }}\n  enableSSL: {{ .Values.database.enableSSL }}\n  dsn: {{ .Values.database.dsn }}\n",
                    "rendered": {
                      "text": "  type: {{ .Values.database.type }}\n  database: {{ .Values.database.database }}\n  username: {{ .Values.database.username }}\n  password: {{ .Values.database.password }}\n  host: {{ .Values.database.host }}\n  enableSSL: {{ .Values.database.enableSSL }}\n  dsn: {{ .Values.database.dsn }}\n",
                      "markdown": "`  type: {{ .Values.database.type }}\n  database: {{ .Values.database.database }}\n  username: {{ .Values.database.username }}\n  password: {{ .Values.database.password }}\n  host: {{ .Values.database.host }}\n  enableSSL: {{ .Values.database.enableSSL }}\n  dsn: {{ .Values.database.dsn }}\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/configs/core.tmpl"
                },
                "region": {
                  "startLine": 164,
                  "startColumn": 35,
                  "endLine": 164,
                  "endColumn": 43,
                  "snippet": {
                    "text": "api:\n  basicAuth:\n    username: {{ .Values.basicAuth.username }}\n    password: {{ .Values.basicAuth.password }}\n    secretRef: {{ .Values.basicAuth.secretRef }}\n\ndatabase:\n",
                    "rendered": {
                      "text": "api:\n  basicAuth:\n    username: {{ .Values.basicAuth.username }}\n    password: {{ .Values.basicAuth.password }}\n    secretRef: {{ .Values.basicAuth.secretRef }}\n\ndatabase:\n",
                      "markdown": "`api:\n  basicAuth:\n    username: {{ .Values.basicAuth.username }}\n    password: {{ .Values.basicAuth.password }}\n    secretRef: {{ .Values.basicAuth.secretRef }}\n\ndatabase:\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/configs/core.tmpl"
                },
                "region": {
                  "startLine": 164,
                  "startColumn": 4,
                  "endLine": 164,
                  "endColumn": 12,
                  "snippet": {
                    "text": "api:\n  basicAuth:\n    username: {{ .Values.basicAuth.username }}\n    password: {{ .Values.basicAuth.password }}\n    secretRef: {{ .Values.basicAuth.secretRef }}\n\ndatabase:\n",
                    "rendered": {
                      "text": "api:\n  basicAuth:\n    username: {{ .Values.basicAuth.username }}\n    password: {{ .Values.basicAuth.password }}\n    secretRef: {{ .Values.basicAuth.secretRef }}\n\ndatabase:\n",
                      "markdown": "`api:\n  basicAuth:\n    username: {{ .Values.basicAuth.username }}\n    password: {{ .Values.basicAuth.password }}\n    secretRef: {{ .Values.basicAuth.secretRef }}\n\ndatabase:\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/plugins/trivy/service.yaml"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 5,
                  "endLine": 4,
                  "snippet": {
                    "text": "{{- if .Values.plugin.trivy.enabled -}}\napiVersion: v1\nkind: Service\nmetadata:\n  name: {{ include \"trivy-plugin.fullname\" . }}\n  namespace: {{ include \"policyreporter.namespace\" . }}\n  labels:\n",
                    "rendered": {
                      "text": "{{- if .Values.plugin.trivy.enabled -}}\napiVersion: v1\nkind: Service\nmetadata:\n  name: {{ include \"trivy-plugin.fullname\" . }}\n  namespace: {{ include \"policyreporter.namespace\" . }}\n  labels:\n",
                      "markdown": "`{{- if .Values.plugin.trivy.enabled -}}\napiVersion: v1\nkind: Service\nmetadata:\n  name: {{ include \"trivy-plugin.fullname\" . }}\n  namespace: {{ include \"policyreporter.namespace\" . }}\n  labels:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/secret-role.yaml"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 3,
                  "endLine": 21,
                  "snippet": {
                    "text": "  verbs:\n  - get\n  - list\n  - watch\n{{- end -}}\n",
                    "rendered": {
                      "text": "  verbs:\n  - get\n  - list\n  - watch\n{{- end -}}\n",
                      "markdown": "`  verbs:\n  - get\n  - list\n  - watch\n{{- end -}}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/cache/redis.go"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 26,
                  "endLine": 82,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\n\tkeys, err := results.Result()\n\tif err != nil {\n\t\tzap.L().Error(\"failed to find cache keys in redis\", zap.Error(err))\n\t}\n\n\tfor _, key := range keys {\n",
                    "rendered": {
                      "text": "\n\tkeys, err := results.Result()\n\tif err != nil {\n\t\tzap.L().Error(\"failed to find cache keys in redis\", zap.Error(err))\n\t}\n\n\tfor _, key := range keys {\n",
                      "markdown": "`\n\tkeys, err := results.Result()\n\tif err != nil {\n\t\tzap.L().Error(\"failed to find cache keys in redis\", zap.Error(err))\n\t}\n\n\tfor _, key := range keys {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/telegram/telegram.go"
                },
                "region": {
                  "startLine": 62,
                  "endLine": 62,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\ntype values struct {\n\tResult   v1alpha2.PolicyReportResult\n\tTime     time.Time\n\tResource *corev1.ObjectReference\n\tProps    map[string]string\n\tPriority string\n",
                    "rendered": {
                      "text": "\ntype values struct {\n\tResult   v1alpha2.PolicyReportResult\n\tTime     time.Time\n\tResource *corev1.ObjectReference\n\tProps    map[string]string\n\tPriority string\n",
                      "markdown": "`\ntype values struct {\n\tResult   v1alpha2.PolicyReportResult\n\tTime     time.Time\n\tResource *corev1.ObjectReference\n\tProps    map[string]string\n\tPriority string\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/telegram/telegram_test.go"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 25,
                  "endLine": 43,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\t\t\tt.Errorf(\"Unexpected Host: %s\", url)\n\t\t\t}\n\n\t\t\tif value := req.Header.Get(\"X-Code\"); value != \"1234\" {\n\t\t\t\tt.Errorf(\"Unexpected Header X-Code: %s\", value)\n\t\t\t}\n\n",
                    "rendered": {
                      "text": "\t\t\t\tt.Errorf(\"Unexpected Host: %s\", url)\n\t\t\t}\n\n\t\t\tif value := req.Header.Get(\"X-Code\"); value != \"1234\" {\n\t\t\t\tt.Errorf(\"Unexpected Header X-Code: %s\", value)\n\t\t\t}\n\n",
                      "markdown": "`\t\t\t\tt.Errorf(\"Unexpected Host: %s\", url)\n\t\t\t}\n\n\t\t\tif value := req.Header.Get(\"X-Code\"); value != \"1234\" {\n\t\t\t\tt.Errorf(\"Unexpected Header X-Code: %s\", value)\n\t\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/telegram/telegram_test.go"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 25,
                  "endLine": 35,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n",
                    "rendered": {
                      "text": "\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n",
                      "markdown": "`\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/telegram/telegram_test.go"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 31,
                  "endLine": 31,
                  "endColumn": 36,
                  "snippet": {
                    "text": "func Test_TelegramTarget(t *testing.T) {\n\tt.Run(\"Send\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) error {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json; charset=utf-8\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n",
                    "rendered": {
                      "text": "func Test_TelegramTarget(t *testing.T) {\n\tt.Run(\"Send\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) error {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json; charset=utf-8\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n",
                      "markdown": "`func Test_TelegramTarget(t *testing.T) {\n\tt.Run(\"Send\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) error {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json; charset=utf-8\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/webhook/webhook_test.go"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 25,
                  "endLine": 43,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\t\t\tt.Errorf(\"Unexpected Host: %s\", url)\n\t\t\t}\n\n\t\t\tif value := req.Header.Get(\"X-Code\"); value != \"1234\" {\n\t\t\t\tt.Errorf(\"Unexpected Header X-Code: %s\", value)\n\t\t\t}\n\n",
                    "rendered": {
                      "text": "\t\t\t\tt.Errorf(\"Unexpected Host: %s\", url)\n\t\t\t}\n\n\t\t\tif value := req.Header.Get(\"X-Code\"); value != \"1234\" {\n\t\t\t\tt.Errorf(\"Unexpected Header X-Code: %s\", value)\n\t\t\t}\n\n",
                      "markdown": "`\t\t\t\tt.Errorf(\"Unexpected Host: %s\", url)\n\t\t\t}\n\n\t\t\tif value := req.Header.Get(\"X-Code\"); value != \"1234\" {\n\t\t\t\tt.Errorf(\"Unexpected Header X-Code: %s\", value)\n\t\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/webhook/webhook_test.go"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 25,
                  "endLine": 35,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n",
                    "rendered": {
                      "text": "\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n",
                      "markdown": "`\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/webhook/webhook_test.go"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 31,
                  "endLine": 31,
                  "endColumn": 36,
                  "snippet": {
                    "text": "func Test_UITarget(t *testing.T) {\n\tt.Run(\"Send\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) error {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json; charset=utf-8\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n",
                    "rendered": {
                      "text": "func Test_UITarget(t *testing.T) {\n\tt.Run(\"Send\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) error {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json; charset=utf-8\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n",
                      "markdown": "`func Test_UITarget(t *testing.T) {\n\tt.Run(\"Send\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) error {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json; charset=utf-8\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/loki/loki.go"
                },
                "region": {
                  "startLine": 150,
                  "startColumn": 10,
                  "endLine": 150,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\t\toptions.CustomFields,\n\t\toptions.Headers,\n\t\toptions.Username,\n\t\toptions.Password,\n\t}\n}\n",
                    "rendered": {
                      "text": "\t\toptions.CustomFields,\n\t\toptions.Headers,\n\t\toptions.Username,\n\t\toptions.Password,\n\t}\n}\n",
                      "markdown": "`\t\toptions.CustomFields,\n\t\toptions.Headers,\n\t\toptions.Username,\n\t\toptions.Password,\n\t}\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/loki/loki.go"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 33,
                  "endLine": 130,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\t}\n\n\tif l.username != \"\" {\n\t\treq.SetBasicAuth(l.username, l.password)\n\t}\n\n\tresp, err := l.client.Do(req)\n",
                    "rendered": {
                      "text": "\t}\n\n\tif l.username != \"\" {\n\t\treq.SetBasicAuth(l.username, l.password)\n\t}\n\n\tresp, err := l.client.Do(req)\n",
                      "markdown": "`\t}\n\n\tif l.username != \"\" {\n\t\treq.SetBasicAuth(l.username, l.password)\n\t}\n\n\tresp, err := l.client.Do(req)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/loki/loki.go"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 1,
                  "endLine": 101,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tcustomFields map[string]string\n\theaders      map[string]string\n\tusername     string\n\tpassword     string\n}\n\nfunc (l *client) Send(result v1alpha2.PolicyReportResult) {\n",
                    "rendered": {
                      "text": "\tcustomFields map[string]string\n\theaders      map[string]string\n\tusername     string\n\tpassword     string\n}\n\nfunc (l *client) Send(result v1alpha2.PolicyReportResult) {\n",
                      "markdown": "`\tcustomFields map[string]string\n\theaders      map[string]string\n\tusername     string\n\tpassword     string\n}\n\nfunc (l *client) Send(result v1alpha2.PolicyReportResult) {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/loki/loki.go"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 1,
                  "endLine": 27,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tHeaders      map[string]string\n\tHTTPClient   http.Client\n\tUsername     string\n\tPassword     string\n}\n\ntype Payload struct {\n",
                    "rendered": {
                      "text": "\tHeaders      map[string]string\n\tHTTPClient   http.Client\n\tUsername     string\n\tPassword     string\n}\n\ntype Payload struct {\n",
                      "markdown": "`\tHeaders      map[string]string\n\tHTTPClient   http.Client\n\tUsername     string\n\tPassword     string\n}\n\ntype Payload struct {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/loki/loki_test.go"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 25,
                  "endLine": 92,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n",
                    "rendered": {
                      "text": "\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n",
                      "markdown": "`\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/loki/loki_test.go"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 31,
                  "endLine": 88,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\n\tt.Run(\"Send Minimal Result\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n",
                    "rendered": {
                      "text": "\n\tt.Run(\"Send Minimal Result\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n",
                      "markdown": "`\n\tt.Run(\"Send Minimal Result\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/loki/loki_test.go"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 16,
                  "endLine": 48,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\t\t\tt.Errorf(\"Unexpected Host: %s\", url)\n\t\t\t}\n\n\t\t\tif req.Header.Get(\"Authorization\") == \"\" {\n\t\t\t\tt.Error(\"Expected Authentication header for BasicAuth is set\")\n\t\t\t}\n\n",
                    "rendered": {
                      "text": "\t\t\t\tt.Errorf(\"Unexpected Host: %s\", url)\n\t\t\t}\n\n\t\t\tif req.Header.Get(\"Authorization\") == \"\" {\n\t\t\t\tt.Error(\"Expected Authentication header for BasicAuth is set\")\n\t\t\t}\n\n",
                      "markdown": "`\t\t\t\tt.Errorf(\"Unexpected Host: %s\", url)\n\t\t\t}\n\n\t\t\tif req.Header.Get(\"Authorization\") == \"\" {\n\t\t\t\tt.Error(\"Expected Authentication header for BasicAuth is set\")\n\t\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/loki/loki_test.go"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 25,
                  "endLine": 40,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\t\t\tt.Errorf(\"Unexpected Header Value: %s\", header)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n",
                    "rendered": {
                      "text": "\t\t\t\tt.Errorf(\"Unexpected Header Value: %s\", header)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n",
                      "markdown": "`\t\t\t\tt.Errorf(\"Unexpected Header Value: %s\", header)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/loki/loki_test.go"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 26,
                  "endLine": 36,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\t\t\tif header := req.Header.Get(\"X-Forward\"); header != \"http://loki\" {\n\t\t\t\tt.Errorf(\"Unexpected Header Value: %s\", header)\n\t\t\t}\n\n",
                    "rendered": {
                      "text": "\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\t\t\tif header := req.Header.Get(\"X-Forward\"); header != \"http://loki\" {\n\t\t\t\tt.Errorf(\"Unexpected Header Value: %s\", header)\n\t\t\t}\n\n",
                      "markdown": "`\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\t\t\tif header := req.Header.Get(\"X-Forward\"); header != \"http://loki\" {\n\t\t\t\tt.Errorf(\"Unexpected Header Value: %s\", header)\n\t\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/loki/loki_test.go"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 31,
                  "endLine": 33,
                  "endColumn": 36,
                  "snippet": {
                    "text": "func Test_LokiTarget(t *testing.T) {\n\tt.Run(\"Send Complete Result\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\t\t\tif header := req.Header.Get(\"X-Forward\"); header != \"http://loki\" {\n",
                    "rendered": {
                      "text": "func Test_LokiTarget(t *testing.T) {\n\tt.Run(\"Send Complete Result\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\t\t\tif header := req.Header.Get(\"X-Forward\"); header != \"http://loki\" {\n",
                      "markdown": "`func Test_LokiTarget(t *testing.T) {\n\tt.Run(\"Send Complete Result\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\t\t\tif header := req.Header.Get(\"X-Forward\"); header != \"http://loki\" {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/loki/loki_test.go"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 18,
                  "endLine": 80,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t\t\tCustomFields: map[string]string{\"custom\": \"label\"},\n\t\t\tHTTPClient:   testClient{callback, 200},\n\t\t\tUsername:     \"username\",\n\t\t\tPassword:     \"password\",\n\t\t\tHeaders:      map[string]string{\"X-Forward\": \"http://loki\"},\n\t\t})\n\t\tclient.Send(fixtures.CompleteTargetSendResult)\n",
                    "rendered": {
                      "text": "\t\t\tCustomFields: map[string]string{\"custom\": \"label\"},\n\t\t\tHTTPClient:   testClient{callback, 200},\n\t\t\tUsername:     \"username\",\n\t\t\tPassword:     \"password\",\n\t\t\tHeaders:      map[string]string{\"X-Forward\": \"http://loki\"},\n\t\t})\n\t\tclient.Send(fixtures.CompleteTargetSendResult)\n",
                      "markdown": "`\t\t\tCustomFields: map[string]string{\"custom\": \"label\"},\n\t\t\tHTTPClient:   testClient{callback, 200},\n\t\t\tUsername:     \"username\",\n\t\t\tPassword:     \"password\",\n\t\t\tHeaders:      map[string]string{\"X-Forward\": \"http://loki\"},\n\t\t})\n\t\tclient.Send(fixtures.CompleteTargetSendResult)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/loki/loki_test.go"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 3,
                  "endLine": 80,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\t\tCustomFields: map[string]string{\"custom\": \"label\"},\n\t\t\tHTTPClient:   testClient{callback, 200},\n\t\t\tUsername:     \"username\",\n\t\t\tPassword:     \"password\",\n\t\t\tHeaders:      map[string]string{\"X-Forward\": \"http://loki\"},\n\t\t})\n\t\tclient.Send(fixtures.CompleteTargetSendResult)\n",
                    "rendered": {
                      "text": "\t\t\tCustomFields: map[string]string{\"custom\": \"label\"},\n\t\t\tHTTPClient:   testClient{callback, 200},\n\t\t\tUsername:     \"username\",\n\t\t\tPassword:     \"password\",\n\t\t\tHeaders:      map[string]string{\"X-Forward\": \"http://loki\"},\n\t\t})\n\t\tclient.Send(fixtures.CompleteTargetSendResult)\n",
                      "markdown": "`\t\t\tCustomFields: map[string]string{\"custom\": \"label\"},\n\t\t\tHTTPClient:   testClient{callback, 200},\n\t\t\tUsername:     \"username\",\n\t\t\tPassword:     \"password\",\n\t\t\tHeaders:      map[string]string{\"X-Forward\": \"http://loki\"},\n\t\t})\n\t\tclient.Send(fixtures.CompleteTargetSendResult)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/fixtures/policy_results.go"
                },
                "region": {
                  "startLine": 163,
                  "startColumn": 109,
                  "endLine": 163,
                  "endColumn": 113,
                  "snippet": {
                    "text": "}\n\nvar ScopeResult = v1alpha2.PolicyReportResult{\n\tMessage:  \"validation error: requests and limits required. Rule autogen-check-for-requests-and-limits failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:   \"require-requests-and-limits-required\",\n\tRule:     \"autogen-check-for-requests-and-limits\",\n\tResult:   v1alpha2.StatusFail,\n",
                    "rendered": {
                      "text": "}\n\nvar ScopeResult = v1alpha2.PolicyReportResult{\n\tMessage:  \"validation error: requests and limits required. Rule autogen-check-for-requests-and-limits failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:   \"require-requests-and-limits-required\",\n\tRule:     \"autogen-check-for-requests-and-limits\",\n\tResult:   v1alpha2.StatusFail,\n",
                      "markdown": "`}\n\nvar ScopeResult = v1alpha2.PolicyReportResult{\n\tMessage:  \"validation error: requests and limits required. Rule autogen-check-for-requests-and-limits failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:   \"require-requests-and-limits-required\",\n\tRule:     \"autogen-check-for-requests-and-limits\",\n\tResult:   v1alpha2.StatusFail,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/fixtures/policy_results.go"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 109,
                  "endLine": 116,
                  "endColumn": 113,
                  "snippet": {
                    "text": "}\n\nvar FailResultWithoutResource = v1alpha2.PolicyReportResult{\n\tMessage:  \"validation error: requests and limits required. Rule autogen-check-for-requests-and-limits failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:   \"require-requests-and-limits-required\",\n\tRule:     \"autogen-check-for-requests-and-limits\",\n\tResult:   v1alpha2.StatusFail,\n",
                    "rendered": {
                      "text": "}\n\nvar FailResultWithoutResource = v1alpha2.PolicyReportResult{\n\tMessage:  \"validation error: requests and limits required. Rule autogen-check-for-requests-and-limits failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:   \"require-requests-and-limits-required\",\n\tRule:     \"autogen-check-for-requests-and-limits\",\n\tResult:   v1alpha2.StatusFail,\n",
                      "markdown": "`}\n\nvar FailResultWithoutResource = v1alpha2.PolicyReportResult{\n\tMessage:  \"validation error: requests and limits required. Rule autogen-check-for-requests-and-limits failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:   \"require-requests-and-limits-required\",\n\tRule:     \"autogen-check-for-requests-and-limits\",\n\tResult:   v1alpha2.StatusFail,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/fixtures/policy_results.go"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 109,
                  "endLine": 99,
                  "endColumn": 113,
                  "snippet": {
                    "text": "\nvar FailPodResult = v1alpha2.PolicyReportResult{\n\tID:       \"124\",\n\tMessage:  \"validation error: requests and limits required. Rule autogen-check-for-requests-and-limits failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:   \"require-requests-and-limits-required\",\n\tRule:     \"autogen-check-for-requests-and-limits\",\n\tResult:   v1alpha2.StatusFail,\n",
                    "rendered": {
                      "text": "\nvar FailPodResult = v1alpha2.PolicyReportResult{\n\tID:       \"124\",\n\tMessage:  \"validation error: requests and limits required. Rule autogen-check-for-requests-and-limits failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:   \"require-requests-and-limits-required\",\n\tRule:     \"autogen-check-for-requests-and-limits\",\n\tResult:   v1alpha2.StatusFail,\n",
                      "markdown": "`\nvar FailPodResult = v1alpha2.PolicyReportResult{\n\tID:       \"124\",\n\tMessage:  \"validation error: requests and limits required. Rule autogen-check-for-requests-and-limits failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:   \"require-requests-and-limits-required\",\n\tRule:     \"autogen-check-for-requests-and-limits\",\n\tResult:   v1alpha2.StatusFail,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/fixtures/policy_results.go"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 109,
                  "endLine": 80,
                  "endColumn": 113,
                  "snippet": {
                    "text": "\nvar FailDisallowRuleResult = v1alpha2.PolicyReportResult{\n\tID:       \"123\",\n\tMessage:  \"validation error: requests and limits required. Rule autogen-check-for-requests-and-limits failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:   \"disallow-policy\",\n\tRule:     \"disallow-policy\",\n\tResult:   v1alpha2.StatusFail,\n",
                    "rendered": {
                      "text": "\nvar FailDisallowRuleResult = v1alpha2.PolicyReportResult{\n\tID:       \"123\",\n\tMessage:  \"validation error: requests and limits required. Rule autogen-check-for-requests-and-limits failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:   \"disallow-policy\",\n\tRule:     \"disallow-policy\",\n\tResult:   v1alpha2.StatusFail,\n",
                      "markdown": "`\nvar FailDisallowRuleResult = v1alpha2.PolicyReportResult{\n\tID:       \"123\",\n\tMessage:  \"validation error: requests and limits required. Rule autogen-check-for-requests-and-limits failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:   \"disallow-policy\",\n\tRule:     \"disallow-policy\",\n\tResult:   v1alpha2.StatusFail,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/fixtures/policy_results.go"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 109,
                  "endLine": 61,
                  "endColumn": 113,
                  "snippet": {
                    "text": "\nvar FailResult = v1alpha2.PolicyReportResult{\n\tID:       \"123\",\n\tMessage:  \"validation error: requests and limits required. Rule autogen-check-for-requests-and-limits failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:   \"require-requests-and-limits-required\",\n\tRule:     \"autogen-check-for-requests-and-limits\",\n\tResult:   v1alpha2.StatusFail,\n",
                    "rendered": {
                      "text": "\nvar FailResult = v1alpha2.PolicyReportResult{\n\tID:       \"123\",\n\tMessage:  \"validation error: requests and limits required. Rule autogen-check-for-requests-and-limits failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:   \"require-requests-and-limits-required\",\n\tRule:     \"autogen-check-for-requests-and-limits\",\n\tResult:   v1alpha2.StatusFail,\n",
                      "markdown": "`\nvar FailResult = v1alpha2.PolicyReportResult{\n\tID:       \"123\",\n\tMessage:  \"validation error: requests and limits required. Rule autogen-check-for-requests-and-limits failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:   \"require-requests-and-limits-required\",\n\tRule:     \"autogen-check-for-requests-and-limits\",\n\tResult:   v1alpha2.StatusFail,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/fixtures/policy_results.go"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 109,
                  "endLine": 31,
                  "endColumn": 113,
                  "snippet": {
                    "text": "\nvar PassPodResult = v1alpha2.PolicyReportResult{\n\tID:       \"124\",\n\tMessage:  \"validation error: requests and limits required. Rule autogen-check-for-requests-and-limits failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:   \"require-requests-and-limits-required\",\n\tRule:     \"autogen-check-for-requests-and-limits\",\n\tResult:   v1alpha2.StatusPass,\n",
                    "rendered": {
                      "text": "\nvar PassPodResult = v1alpha2.PolicyReportResult{\n\tID:       \"124\",\n\tMessage:  \"validation error: requests and limits required. Rule autogen-check-for-requests-and-limits failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:   \"require-requests-and-limits-required\",\n\tRule:     \"autogen-check-for-requests-and-limits\",\n\tResult:   v1alpha2.StatusPass,\n",
                      "markdown": "`\nvar PassPodResult = v1alpha2.PolicyReportResult{\n\tID:       \"124\",\n\tMessage:  \"validation error: requests and limits required. Rule autogen-check-for-requests-and-limits failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:   \"require-requests-and-limits-required\",\n\tRule:     \"autogen-check-for-requests-and-limits\",\n\tResult:   v1alpha2.StatusPass,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/fixtures/policy_results.go"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 109,
                  "endLine": 11,
                  "endColumn": 113,
                  "snippet": {
                    "text": "\nvar PassResult = v1alpha2.PolicyReportResult{\n\tID:       \"123\",\n\tMessage:  \"validation error: requests and limits required. Rule autogen-check-for-requests-and-limits failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:   \"require-requests-and-limits-required\",\n\tRule:     \"autogen-check-for-requests-and-limits\",\n\tResult:   v1alpha2.StatusPass,\n",
                    "rendered": {
                      "text": "\nvar PassResult = v1alpha2.PolicyReportResult{\n\tID:       \"123\",\n\tMessage:  \"validation error: requests and limits required. Rule autogen-check-for-requests-and-limits failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:   \"require-requests-and-limits-required\",\n\tRule:     \"autogen-check-for-requests-and-limits\",\n\tResult:   v1alpha2.StatusPass,\n",
                      "markdown": "`\nvar PassResult = v1alpha2.PolicyReportResult{\n\tID:       \"123\",\n\tMessage:  \"validation error: requests and limits required. Rule autogen-check-for-requests-and-limits failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:   \"require-requests-and-limits-required\",\n\tRule:     \"autogen-check-for-requests-and-limits\",\n\tResult:   v1alpha2.StatusPass,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v2/api.go"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 8,
                  "endLine": 58,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\tcluster.GET(\":source/status-counts\", h.GetClusterStatusCounts)\n\tcluster.GET(\":source/severity-counts\", h.GetClusterSeverityCounts)\n\tcluster.GET(\"kinds\", h.ListClusterKinds)\n\tcluster.GET(\"results\", h.ListPolicyResults(false))\n\n\treturn nil\n}\n",
                    "rendered": {
                      "text": "\tcluster.GET(\":source/status-counts\", h.GetClusterStatusCounts)\n\tcluster.GET(\":source/severity-counts\", h.GetClusterSeverityCounts)\n\tcluster.GET(\"kinds\", h.ListClusterKinds)\n\tcluster.GET(\"results\", h.ListPolicyResults(false))\n\n\treturn nil\n}\n",
                      "markdown": "`\tcluster.GET(\":source/status-counts\", h.GetClusterStatusCounts)\n\tcluster.GET(\":source/severity-counts\", h.GetClusterSeverityCounts)\n\tcluster.GET(\"kinds\", h.ListClusterKinds)\n\tcluster.GET(\"results\", h.ListPolicyResults(false))\n\n\treturn nil\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v2/api.go"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 8,
                  "endLine": 57,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\tcluster.GET(\"resource-results\", h.ListClusterResourceResults)\n\tcluster.GET(\":source/status-counts\", h.GetClusterStatusCounts)\n\tcluster.GET(\":source/severity-counts\", h.GetClusterSeverityCounts)\n\tcluster.GET(\"kinds\", h.ListClusterKinds)\n\tcluster.GET(\"results\", h.ListPolicyResults(false))\n\n\treturn nil\n",
                    "rendered": {
                      "text": "\tcluster.GET(\"resource-results\", h.ListClusterResourceResults)\n\tcluster.GET(\":source/status-counts\", h.GetClusterStatusCounts)\n\tcluster.GET(\":source/severity-counts\", h.GetClusterSeverityCounts)\n\tcluster.GET(\"kinds\", h.ListClusterKinds)\n\tcluster.GET(\"results\", h.ListPolicyResults(false))\n\n\treturn nil\n",
                      "markdown": "`\tcluster.GET(\"resource-results\", h.ListClusterResourceResults)\n\tcluster.GET(\":source/status-counts\", h.GetClusterStatusCounts)\n\tcluster.GET(\":source/severity-counts\", h.GetClusterSeverityCounts)\n\tcluster.GET(\"kinds\", h.ListClusterKinds)\n\tcluster.GET(\"results\", h.ListPolicyResults(false))\n\n\treturn nil\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v2/api.go"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 8,
                  "endLine": 56,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\tcluster := engine.Group(\"cluster-scoped\")\n\tcluster.GET(\"resource-results\", h.ListClusterResourceResults)\n\tcluster.GET(\":source/status-counts\", h.GetClusterStatusCounts)\n\tcluster.GET(\":source/severity-counts\", h.GetClusterSeverityCounts)\n\tcluster.GET(\"kinds\", h.ListClusterKinds)\n\tcluster.GET(\"results\", h.ListPolicyResults(false))\n\n",
                    "rendered": {
                      "text": "\tcluster := engine.Group(\"cluster-scoped\")\n\tcluster.GET(\"resource-results\", h.ListClusterResourceResults)\n\tcluster.GET(\":source/status-counts\", h.GetClusterStatusCounts)\n\tcluster.GET(\":source/severity-counts\", h.GetClusterSeverityCounts)\n\tcluster.GET(\"kinds\", h.ListClusterKinds)\n\tcluster.GET(\"results\", h.ListPolicyResults(false))\n\n",
                      "markdown": "`\tcluster := engine.Group(\"cluster-scoped\")\n\tcluster.GET(\"resource-results\", h.ListClusterResourceResults)\n\tcluster.GET(\":source/status-counts\", h.GetClusterStatusCounts)\n\tcluster.GET(\":source/severity-counts\", h.GetClusterSeverityCounts)\n\tcluster.GET(\"kinds\", h.ListClusterKinds)\n\tcluster.GET(\"results\", h.ListPolicyResults(false))\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v2/api.go"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 8,
                  "endLine": 55,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\n\tcluster := engine.Group(\"cluster-scoped\")\n\tcluster.GET(\"resource-results\", h.ListClusterResourceResults)\n\tcluster.GET(\":source/status-counts\", h.GetClusterStatusCounts)\n\tcluster.GET(\":source/severity-counts\", h.GetClusterSeverityCounts)\n\tcluster.GET(\"kinds\", h.ListClusterKinds)\n\tcluster.GET(\"results\", h.ListPolicyResults(false))\n",
                    "rendered": {
                      "text": "\n\tcluster := engine.Group(\"cluster-scoped\")\n\tcluster.GET(\"resource-results\", h.ListClusterResourceResults)\n\tcluster.GET(\":source/status-counts\", h.GetClusterStatusCounts)\n\tcluster.GET(\":source/severity-counts\", h.GetClusterSeverityCounts)\n\tcluster.GET(\"kinds\", h.ListClusterKinds)\n\tcluster.GET(\"results\", h.ListPolicyResults(false))\n",
                      "markdown": "`\n\tcluster := engine.Group(\"cluster-scoped\")\n\tcluster.GET(\"resource-results\", h.ListClusterResourceResults)\n\tcluster.GET(\":source/status-counts\", h.GetClusterStatusCounts)\n\tcluster.GET(\":source/severity-counts\", h.GetClusterSeverityCounts)\n\tcluster.GET(\"kinds\", h.ListClusterKinds)\n\tcluster.GET(\"results\", h.ListPolicyResults(false))\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v2/api.go"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 8,
                  "endLine": 54,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\tns.GET(\"results\", h.ListPolicyResults(true))\n\n\tcluster := engine.Group(\"cluster-scoped\")\n\tcluster.GET(\"resource-results\", h.ListClusterResourceResults)\n\tcluster.GET(\":source/status-counts\", h.GetClusterStatusCounts)\n\tcluster.GET(\":source/severity-counts\", h.GetClusterSeverityCounts)\n\tcluster.GET(\"kinds\", h.ListClusterKinds)\n",
                    "rendered": {
                      "text": "\tns.GET(\"results\", h.ListPolicyResults(true))\n\n\tcluster := engine.Group(\"cluster-scoped\")\n\tcluster.GET(\"resource-results\", h.ListClusterResourceResults)\n\tcluster.GET(\":source/status-counts\", h.GetClusterStatusCounts)\n\tcluster.GET(\":source/severity-counts\", h.GetClusterSeverityCounts)\n\tcluster.GET(\"kinds\", h.ListClusterKinds)\n",
                      "markdown": "`\tns.GET(\"results\", h.ListPolicyResults(true))\n\n\tcluster := engine.Group(\"cluster-scoped\")\n\tcluster.GET(\"resource-results\", h.ListClusterResourceResults)\n\tcluster.GET(\":source/status-counts\", h.GetClusterStatusCounts)\n\tcluster.GET(\":source/severity-counts\", h.GetClusterSeverityCounts)\n\tcluster.GET(\"kinds\", h.ListClusterKinds)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v2/api.go"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 3,
                  "endLine": 51,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\tns.GET(\":source/status-counts\", h.GetNamespaceStatusCounts)\n\tns.GET(\":source/severity-counts\", h.GetNamespaceSeverityCounts)\n\tns.GET(\"kinds\", h.ListNamespaceKinds)\n\tns.GET(\"results\", h.ListPolicyResults(true))\n\n\tcluster := engine.Group(\"cluster-scoped\")\n\tcluster.GET(\"resource-results\", h.ListClusterResourceResults)\n",
                    "rendered": {
                      "text": "\tns.GET(\":source/status-counts\", h.GetNamespaceStatusCounts)\n\tns.GET(\":source/severity-counts\", h.GetNamespaceSeverityCounts)\n\tns.GET(\"kinds\", h.ListNamespaceKinds)\n\tns.GET(\"results\", h.ListPolicyResults(true))\n\n\tcluster := engine.Group(\"cluster-scoped\")\n\tcluster.GET(\"resource-results\", h.ListClusterResourceResults)\n",
                      "markdown": "`\tns.GET(\":source/status-counts\", h.GetNamespaceStatusCounts)\n\tns.GET(\":source/severity-counts\", h.GetNamespaceSeverityCounts)\n\tns.GET(\"kinds\", h.ListNamespaceKinds)\n\tns.GET(\"results\", h.ListPolicyResults(true))\n\n\tcluster := engine.Group(\"cluster-scoped\")\n\tcluster.GET(\"resource-results\", h.ListClusterResourceResults)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v2/api.go"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 3,
                  "endLine": 50,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\tns.GET(\"resource-results\", h.ListNamespaceResourceResults)\n\tns.GET(\":source/status-counts\", h.GetNamespaceStatusCounts)\n\tns.GET(\":source/severity-counts\", h.GetNamespaceSeverityCounts)\n\tns.GET(\"kinds\", h.ListNamespaceKinds)\n\tns.GET(\"results\", h.ListPolicyResults(true))\n\n\tcluster := engine.Group(\"cluster-scoped\")\n",
                    "rendered": {
                      "text": "\tns.GET(\"resource-results\", h.ListNamespaceResourceResults)\n\tns.GET(\":source/status-counts\", h.GetNamespaceStatusCounts)\n\tns.GET(\":source/severity-counts\", h.GetNamespaceSeverityCounts)\n\tns.GET(\"kinds\", h.ListNamespaceKinds)\n\tns.GET(\"results\", h.ListPolicyResults(true))\n\n\tcluster := engine.Group(\"cluster-scoped\")\n",
                      "markdown": "`\tns.GET(\"resource-results\", h.ListNamespaceResourceResults)\n\tns.GET(\":source/status-counts\", h.GetNamespaceStatusCounts)\n\tns.GET(\":source/severity-counts\", h.GetNamespaceSeverityCounts)\n\tns.GET(\"kinds\", h.ListNamespaceKinds)\n\tns.GET(\"results\", h.ListPolicyResults(true))\n\n\tcluster := engine.Group(\"cluster-scoped\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v2/api.go"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 3,
                  "endLine": 49,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\tns := engine.Group(\"namespace-scoped\")\n\tns.GET(\"resource-results\", h.ListNamespaceResourceResults)\n\tns.GET(\":source/status-counts\", h.GetNamespaceStatusCounts)\n\tns.GET(\":source/severity-counts\", h.GetNamespaceSeverityCounts)\n\tns.GET(\"kinds\", h.ListNamespaceKinds)\n\tns.GET(\"results\", h.ListPolicyResults(true))\n\n",
                    "rendered": {
                      "text": "\tns := engine.Group(\"namespace-scoped\")\n\tns.GET(\"resource-results\", h.ListNamespaceResourceResults)\n\tns.GET(\":source/status-counts\", h.GetNamespaceStatusCounts)\n\tns.GET(\":source/severity-counts\", h.GetNamespaceSeverityCounts)\n\tns.GET(\"kinds\", h.ListNamespaceKinds)\n\tns.GET(\"results\", h.ListPolicyResults(true))\n\n",
                      "markdown": "`\tns := engine.Group(\"namespace-scoped\")\n\tns.GET(\"resource-results\", h.ListNamespaceResourceResults)\n\tns.GET(\":source/status-counts\", h.GetNamespaceStatusCounts)\n\tns.GET(\":source/severity-counts\", h.GetNamespaceSeverityCounts)\n\tns.GET(\"kinds\", h.ListNamespaceKinds)\n\tns.GET(\"results\", h.ListPolicyResults(true))\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v2/api.go"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 3,
                  "endLine": 48,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n\tns := engine.Group(\"namespace-scoped\")\n\tns.GET(\"resource-results\", h.ListNamespaceResourceResults)\n\tns.GET(\":source/status-counts\", h.GetNamespaceStatusCounts)\n\tns.GET(\":source/severity-counts\", h.GetNamespaceSeverityCounts)\n\tns.GET(\"kinds\", h.ListNamespaceKinds)\n\tns.GET(\"results\", h.ListPolicyResults(true))\n",
                    "rendered": {
                      "text": "\n\tns := engine.Group(\"namespace-scoped\")\n\tns.GET(\"resource-results\", h.ListNamespaceResourceResults)\n\tns.GET(\":source/status-counts\", h.GetNamespaceStatusCounts)\n\tns.GET(\":source/severity-counts\", h.GetNamespaceSeverityCounts)\n\tns.GET(\"kinds\", h.ListNamespaceKinds)\n\tns.GET(\"results\", h.ListPolicyResults(true))\n",
                      "markdown": "`\n\tns := engine.Group(\"namespace-scoped\")\n\tns.GET(\"resource-results\", h.ListNamespaceResourceResults)\n\tns.GET(\":source/status-counts\", h.GetNamespaceStatusCounts)\n\tns.GET(\":source/severity-counts\", h.GetNamespaceSeverityCounts)\n\tns.GET(\"kinds\", h.ListNamespaceKinds)\n\tns.GET(\"results\", h.ListPolicyResults(true))\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v2/api.go"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 3,
                  "endLine": 47,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\tengine.GET(\"properties/:property\", h.ListProperty)\n\n\tns := engine.Group(\"namespace-scoped\")\n\tns.GET(\"resource-results\", h.ListNamespaceResourceResults)\n\tns.GET(\":source/status-counts\", h.GetNamespaceStatusCounts)\n\tns.GET(\":source/severity-counts\", h.GetNamespaceSeverityCounts)\n\tns.GET(\"kinds\", h.ListNamespaceKinds)\n",
                    "rendered": {
                      "text": "\tengine.GET(\"properties/:property\", h.ListProperty)\n\n\tns := engine.Group(\"namespace-scoped\")\n\tns.GET(\"resource-results\", h.ListNamespaceResourceResults)\n\tns.GET(\":source/status-counts\", h.GetNamespaceStatusCounts)\n\tns.GET(\":source/severity-counts\", h.GetNamespaceSeverityCounts)\n\tns.GET(\"kinds\", h.ListNamespaceKinds)\n",
                      "markdown": "`\tengine.GET(\"properties/:property\", h.ListProperty)\n\n\tns := engine.Group(\"namespace-scoped\")\n\tns.GET(\"resource-results\", h.ListNamespaceResourceResults)\n\tns.GET(\":source/status-counts\", h.GetNamespaceStatusCounts)\n\tns.GET(\":source/severity-counts\", h.GetNamespaceSeverityCounts)\n\tns.GET(\"kinds\", h.ListNamespaceKinds)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v2/api.go"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 7,
                  "endLine": 44,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\tengine.GET(\"severity-findings\", h.ListSeverityFindings)\n\tengine.GET(\"results-without-resources\", h.ListResultsWithoutResource)\n\tengine.GET(\"targets\", h.ListTargets)\n\tengine.GET(\"properties/:property\", h.ListProperty)\n\n\tns := engine.Group(\"namespace-scoped\")\n\tns.GET(\"resource-results\", h.ListNamespaceResourceResults)\n",
                    "rendered": {
                      "text": "\tengine.GET(\"severity-findings\", h.ListSeverityFindings)\n\tengine.GET(\"results-without-resources\", h.ListResultsWithoutResource)\n\tengine.GET(\"targets\", h.ListTargets)\n\tengine.GET(\"properties/:property\", h.ListProperty)\n\n\tns := engine.Group(\"namespace-scoped\")\n\tns.GET(\"resource-results\", h.ListNamespaceResourceResults)\n",
                      "markdown": "`\tengine.GET(\"severity-findings\", h.ListSeverityFindings)\n\tengine.GET(\"results-without-resources\", h.ListResultsWithoutResource)\n\tengine.GET(\"targets\", h.ListTargets)\n\tengine.GET(\"properties/:property\", h.ListProperty)\n\n\tns := engine.Group(\"namespace-scoped\")\n\tns.GET(\"resource-results\", h.ListNamespaceResourceResults)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v2/api.go"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 7,
                  "endLine": 43,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\tengine.GET(\"findings\", h.ListFindings)\n\tengine.GET(\"severity-findings\", h.ListSeverityFindings)\n\tengine.GET(\"results-without-resources\", h.ListResultsWithoutResource)\n\tengine.GET(\"targets\", h.ListTargets)\n\tengine.GET(\"properties/:property\", h.ListProperty)\n\n\tns := engine.Group(\"namespace-scoped\")\n",
                    "rendered": {
                      "text": "\tengine.GET(\"findings\", h.ListFindings)\n\tengine.GET(\"severity-findings\", h.ListSeverityFindings)\n\tengine.GET(\"results-without-resources\", h.ListResultsWithoutResource)\n\tengine.GET(\"targets\", h.ListTargets)\n\tengine.GET(\"properties/:property\", h.ListProperty)\n\n\tns := engine.Group(\"namespace-scoped\")\n",
                      "markdown": "`\tengine.GET(\"findings\", h.ListFindings)\n\tengine.GET(\"severity-findings\", h.ListSeverityFindings)\n\tengine.GET(\"results-without-resources\", h.ListResultsWithoutResource)\n\tengine.GET(\"targets\", h.ListTargets)\n\tengine.GET(\"properties/:property\", h.ListProperty)\n\n\tns := engine.Group(\"namespace-scoped\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v2/api.go"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 7,
                  "endLine": 42,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\tengine.GET(\"policies\", h.ListPolicies)\n\tengine.GET(\"findings\", h.ListFindings)\n\tengine.GET(\"severity-findings\", h.ListSeverityFindings)\n\tengine.GET(\"results-without-resources\", h.ListResultsWithoutResource)\n\tengine.GET(\"targets\", h.ListTargets)\n\tengine.GET(\"properties/:property\", h.ListProperty)\n\n",
                    "rendered": {
                      "text": "\tengine.GET(\"policies\", h.ListPolicies)\n\tengine.GET(\"findings\", h.ListFindings)\n\tengine.GET(\"severity-findings\", h.ListSeverityFindings)\n\tengine.GET(\"results-without-resources\", h.ListResultsWithoutResource)\n\tengine.GET(\"targets\", h.ListTargets)\n\tengine.GET(\"properties/:property\", h.ListProperty)\n\n",
                      "markdown": "`\tengine.GET(\"policies\", h.ListPolicies)\n\tengine.GET(\"findings\", h.ListFindings)\n\tengine.GET(\"severity-findings\", h.ListSeverityFindings)\n\tengine.GET(\"results-without-resources\", h.ListResultsWithoutResource)\n\tengine.GET(\"targets\", h.ListTargets)\n\tengine.GET(\"properties/:property\", h.ListProperty)\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v2/api.go"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 7,
                  "endLine": 41,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\tengine.GET(\"sources/categories\", h.ListSourceWithCategories)\n\tengine.GET(\"policies\", h.ListPolicies)\n\tengine.GET(\"findings\", h.ListFindings)\n\tengine.GET(\"severity-findings\", h.ListSeverityFindings)\n\tengine.GET(\"results-without-resources\", h.ListResultsWithoutResource)\n\tengine.GET(\"targets\", h.ListTargets)\n\tengine.GET(\"properties/:property\", h.ListProperty)\n",
                    "rendered": {
                      "text": "\tengine.GET(\"sources/categories\", h.ListSourceWithCategories)\n\tengine.GET(\"policies\", h.ListPolicies)\n\tengine.GET(\"findings\", h.ListFindings)\n\tengine.GET(\"severity-findings\", h.ListSeverityFindings)\n\tengine.GET(\"results-without-resources\", h.ListResultsWithoutResource)\n\tengine.GET(\"targets\", h.ListTargets)\n\tengine.GET(\"properties/:property\", h.ListProperty)\n",
                      "markdown": "`\tengine.GET(\"sources/categories\", h.ListSourceWithCategories)\n\tengine.GET(\"policies\", h.ListPolicies)\n\tengine.GET(\"findings\", h.ListFindings)\n\tengine.GET(\"severity-findings\", h.ListSeverityFindings)\n\tengine.GET(\"results-without-resources\", h.ListResultsWithoutResource)\n\tengine.GET(\"targets\", h.ListTargets)\n\tengine.GET(\"properties/:property\", h.ListProperty)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v2/api.go"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 7,
                  "endLine": 40,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\tengine.GET(\"sources/:source/severity-counts\", h.GetTotalSeverityCounts)\n\tengine.GET(\"sources/categories\", h.ListSourceWithCategories)\n\tengine.GET(\"policies\", h.ListPolicies)\n\tengine.GET(\"findings\", h.ListFindings)\n\tengine.GET(\"severity-findings\", h.ListSeverityFindings)\n\tengine.GET(\"results-without-resources\", h.ListResultsWithoutResource)\n\tengine.GET(\"targets\", h.ListTargets)\n",
                    "rendered": {
                      "text": "\tengine.GET(\"sources/:source/severity-counts\", h.GetTotalSeverityCounts)\n\tengine.GET(\"sources/categories\", h.ListSourceWithCategories)\n\tengine.GET(\"policies\", h.ListPolicies)\n\tengine.GET(\"findings\", h.ListFindings)\n\tengine.GET(\"severity-findings\", h.ListSeverityFindings)\n\tengine.GET(\"results-without-resources\", h.ListResultsWithoutResource)\n\tengine.GET(\"targets\", h.ListTargets)\n",
                      "markdown": "`\tengine.GET(\"sources/:source/severity-counts\", h.GetTotalSeverityCounts)\n\tengine.GET(\"sources/categories\", h.ListSourceWithCategories)\n\tengine.GET(\"policies\", h.ListPolicies)\n\tengine.GET(\"findings\", h.ListFindings)\n\tengine.GET(\"severity-findings\", h.ListSeverityFindings)\n\tengine.GET(\"results-without-resources\", h.ListResultsWithoutResource)\n\tengine.GET(\"targets\", h.ListTargets)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v2/api.go"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 7,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\tengine.GET(\"sources/:source/status-counts\", h.GetTotalStatusCounts)\n\tengine.GET(\"sources/:source/severity-counts\", h.GetTotalSeverityCounts)\n\tengine.GET(\"sources/categories\", h.ListSourceWithCategories)\n\tengine.GET(\"policies\", h.ListPolicies)\n\tengine.GET(\"findings\", h.ListFindings)\n\tengine.GET(\"severity-findings\", h.ListSeverityFindings)\n\tengine.GET(\"results-without-resources\", h.ListResultsWithoutResource)\n",
                    "rendered": {
                      "text": "\tengine.GET(\"sources/:source/status-counts\", h.GetTotalStatusCounts)\n\tengine.GET(\"sources/:source/severity-counts\", h.GetTotalSeverityCounts)\n\tengine.GET(\"sources/categories\", h.ListSourceWithCategories)\n\tengine.GET(\"policies\", h.ListPolicies)\n\tengine.GET(\"findings\", h.ListFindings)\n\tengine.GET(\"severity-findings\", h.ListSeverityFindings)\n\tengine.GET(\"results-without-resources\", h.ListResultsWithoutResource)\n",
                      "markdown": "`\tengine.GET(\"sources/:source/status-counts\", h.GetTotalStatusCounts)\n\tengine.GET(\"sources/:source/severity-counts\", h.GetTotalSeverityCounts)\n\tengine.GET(\"sources/categories\", h.ListSourceWithCategories)\n\tengine.GET(\"policies\", h.ListPolicies)\n\tengine.GET(\"findings\", h.ListFindings)\n\tengine.GET(\"severity-findings\", h.ListSeverityFindings)\n\tengine.GET(\"results-without-resources\", h.ListResultsWithoutResource)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v2/api.go"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 7,
                  "endLine": 38,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\tengine.GET(\"sources/:source/use-resources\", h.UseResources)\n\tengine.GET(\"sources/:source/status-counts\", h.GetTotalStatusCounts)\n\tengine.GET(\"sources/:source/severity-counts\", h.GetTotalSeverityCounts)\n\tengine.GET(\"sources/categories\", h.ListSourceWithCategories)\n\tengine.GET(\"policies\", h.ListPolicies)\n\tengine.GET(\"findings\", h.ListFindings)\n\tengine.GET(\"severity-findings\", h.ListSeverityFindings)\n",
                    "rendered": {
                      "text": "\tengine.GET(\"sources/:source/use-resources\", h.UseResources)\n\tengine.GET(\"sources/:source/status-counts\", h.GetTotalStatusCounts)\n\tengine.GET(\"sources/:source/severity-counts\", h.GetTotalSeverityCounts)\n\tengine.GET(\"sources/categories\", h.ListSourceWithCategories)\n\tengine.GET(\"policies\", h.ListPolicies)\n\tengine.GET(\"findings\", h.ListFindings)\n\tengine.GET(\"severity-findings\", h.ListSeverityFindings)\n",
                      "markdown": "`\tengine.GET(\"sources/:source/use-resources\", h.UseResources)\n\tengine.GET(\"sources/:source/status-counts\", h.GetTotalStatusCounts)\n\tengine.GET(\"sources/:source/severity-counts\", h.GetTotalSeverityCounts)\n\tengine.GET(\"sources/categories\", h.ListSourceWithCategories)\n\tengine.GET(\"policies\", h.ListPolicies)\n\tengine.GET(\"findings\", h.ListFindings)\n\tengine.GET(\"severity-findings\", h.ListSeverityFindings)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v2/api.go"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 7,
                  "endLine": 37,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\tengine.GET(\"sources\", h.ListSources)\n\tengine.GET(\"sources/:source/use-resources\", h.UseResources)\n\tengine.GET(\"sources/:source/status-counts\", h.GetTotalStatusCounts)\n\tengine.GET(\"sources/:source/severity-counts\", h.GetTotalSeverityCounts)\n\tengine.GET(\"sources/categories\", h.ListSourceWithCategories)\n\tengine.GET(\"policies\", h.ListPolicies)\n\tengine.GET(\"findings\", h.ListFindings)\n",
                    "rendered": {
                      "text": "\tengine.GET(\"sources\", h.ListSources)\n\tengine.GET(\"sources/:source/use-resources\", h.UseResources)\n\tengine.GET(\"sources/:source/status-counts\", h.GetTotalStatusCounts)\n\tengine.GET(\"sources/:source/severity-counts\", h.GetTotalSeverityCounts)\n\tengine.GET(\"sources/categories\", h.ListSourceWithCategories)\n\tengine.GET(\"policies\", h.ListPolicies)\n\tengine.GET(\"findings\", h.ListFindings)\n",
                      "markdown": "`\tengine.GET(\"sources\", h.ListSources)\n\tengine.GET(\"sources/:source/use-resources\", h.UseResources)\n\tengine.GET(\"sources/:source/status-counts\", h.GetTotalStatusCounts)\n\tengine.GET(\"sources/:source/severity-counts\", h.GetTotalSeverityCounts)\n\tengine.GET(\"sources/categories\", h.ListSourceWithCategories)\n\tengine.GET(\"policies\", h.ListPolicies)\n\tengine.GET(\"findings\", h.ListFindings)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v2/api.go"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 7,
                  "endLine": 36,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\tengine.GET(\"namespaces\", h.ListNamespaces)\n\tengine.GET(\"sources\", h.ListSources)\n\tengine.GET(\"sources/:source/use-resources\", h.UseResources)\n\tengine.GET(\"sources/:source/status-counts\", h.GetTotalStatusCounts)\n\tengine.GET(\"sources/:source/severity-counts\", h.GetTotalSeverityCounts)\n\tengine.GET(\"sources/categories\", h.ListSourceWithCategories)\n\tengine.GET(\"policies\", h.ListPolicies)\n",
                    "rendered": {
                      "text": "\tengine.GET(\"namespaces\", h.ListNamespaces)\n\tengine.GET(\"sources\", h.ListSources)\n\tengine.GET(\"sources/:source/use-resources\", h.UseResources)\n\tengine.GET(\"sources/:source/status-counts\", h.GetTotalStatusCounts)\n\tengine.GET(\"sources/:source/severity-counts\", h.GetTotalSeverityCounts)\n\tengine.GET(\"sources/categories\", h.ListSourceWithCategories)\n\tengine.GET(\"policies\", h.ListPolicies)\n",
                      "markdown": "`\tengine.GET(\"namespaces\", h.ListNamespaces)\n\tengine.GET(\"sources\", h.ListSources)\n\tengine.GET(\"sources/:source/use-resources\", h.UseResources)\n\tengine.GET(\"sources/:source/status-counts\", h.GetTotalStatusCounts)\n\tengine.GET(\"sources/:source/severity-counts\", h.GetTotalSeverityCounts)\n\tengine.GET(\"sources/categories\", h.ListSourceWithCategories)\n\tengine.GET(\"policies\", h.ListPolicies)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v2/api.go"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 7,
                  "endLine": 35,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\tengine.POST(\"namespaces/resolve-selector\", h.ResolveNamespaceSelector)\n\tengine.GET(\"namespaces\", h.ListNamespaces)\n\tengine.GET(\"sources\", h.ListSources)\n\tengine.GET(\"sources/:source/use-resources\", h.UseResources)\n\tengine.GET(\"sources/:source/status-counts\", h.GetTotalStatusCounts)\n\tengine.GET(\"sources/:source/severity-counts\", h.GetTotalSeverityCounts)\n\tengine.GET(\"sources/categories\", h.ListSourceWithCategories)\n",
                    "rendered": {
                      "text": "\tengine.POST(\"namespaces/resolve-selector\", h.ResolveNamespaceSelector)\n\tengine.GET(\"namespaces\", h.ListNamespaces)\n\tengine.GET(\"sources\", h.ListSources)\n\tengine.GET(\"sources/:source/use-resources\", h.UseResources)\n\tengine.GET(\"sources/:source/status-counts\", h.GetTotalStatusCounts)\n\tengine.GET(\"sources/:source/severity-counts\", h.GetTotalSeverityCounts)\n\tengine.GET(\"sources/categories\", h.ListSourceWithCategories)\n",
                      "markdown": "`\tengine.POST(\"namespaces/resolve-selector\", h.ResolveNamespaceSelector)\n\tengine.GET(\"namespaces\", h.ListNamespaces)\n\tengine.GET(\"sources\", h.ListSources)\n\tengine.GET(\"sources/:source/use-resources\", h.UseResources)\n\tengine.GET(\"sources/:source/status-counts\", h.GetTotalStatusCounts)\n\tengine.GET(\"sources/:source/severity-counts\", h.GetTotalSeverityCounts)\n\tengine.GET(\"sources/categories\", h.ListSourceWithCategories)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v2/api.go"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 7,
                  "endLine": 34,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\n\tengine.POST(\"namespaces/resolve-selector\", h.ResolveNamespaceSelector)\n\tengine.GET(\"namespaces\", h.ListNamespaces)\n\tengine.GET(\"sources\", h.ListSources)\n\tengine.GET(\"sources/:source/use-resources\", h.UseResources)\n\tengine.GET(\"sources/:source/status-counts\", h.GetTotalStatusCounts)\n\tengine.GET(\"sources/:source/severity-counts\", h.GetTotalSeverityCounts)\n",
                    "rendered": {
                      "text": "\n\tengine.POST(\"namespaces/resolve-selector\", h.ResolveNamespaceSelector)\n\tengine.GET(\"namespaces\", h.ListNamespaces)\n\tengine.GET(\"sources\", h.ListSources)\n\tengine.GET(\"sources/:source/use-resources\", h.UseResources)\n\tengine.GET(\"sources/:source/status-counts\", h.GetTotalStatusCounts)\n\tengine.GET(\"sources/:source/severity-counts\", h.GetTotalSeverityCounts)\n",
                      "markdown": "`\n\tengine.POST(\"namespaces/resolve-selector\", h.ResolveNamespaceSelector)\n\tengine.GET(\"namespaces\", h.ListNamespaces)\n\tengine.GET(\"sources\", h.ListSources)\n\tengine.GET(\"sources/:source/use-resources\", h.UseResources)\n\tengine.GET(\"sources/:source/status-counts\", h.GetTotalStatusCounts)\n\tengine.GET(\"sources/:source/severity-counts\", h.GetTotalSeverityCounts)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v2/api.go"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 7,
                  "endLine": 33,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\tengine.GET(\"resource/:id/source-categories\", h.ListResourceCategories)\n\n\tengine.POST(\"namespaces/resolve-selector\", h.ResolveNamespaceSelector)\n\tengine.GET(\"namespaces\", h.ListNamespaces)\n\tengine.GET(\"sources\", h.ListSources)\n\tengine.GET(\"sources/:source/use-resources\", h.UseResources)\n\tengine.GET(\"sources/:source/status-counts\", h.GetTotalStatusCounts)\n",
                    "rendered": {
                      "text": "\tengine.GET(\"resource/:id/source-categories\", h.ListResourceCategories)\n\n\tengine.POST(\"namespaces/resolve-selector\", h.ResolveNamespaceSelector)\n\tengine.GET(\"namespaces\", h.ListNamespaces)\n\tengine.GET(\"sources\", h.ListSources)\n\tengine.GET(\"sources/:source/use-resources\", h.UseResources)\n\tengine.GET(\"sources/:source/status-counts\", h.GetTotalStatusCounts)\n",
                      "markdown": "`\tengine.GET(\"resource/:id/source-categories\", h.ListResourceCategories)\n\n\tengine.POST(\"namespaces/resolve-selector\", h.ResolveNamespaceSelector)\n\tengine.GET(\"namespaces\", h.ListNamespaces)\n\tengine.GET(\"sources\", h.ListSources)\n\tengine.GET(\"sources/:source/use-resources\", h.UseResources)\n\tengine.GET(\"sources/:source/status-counts\", h.GetTotalStatusCounts)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v2/api.go"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 7,
                  "endLine": 32,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\tengine.GET(\"resource/:id\", h.GetResource)\n\tengine.GET(\"resource/:id/source-categories\", h.ListResourceCategories)\n\n\tengine.POST(\"namespaces/resolve-selector\", h.ResolveNamespaceSelector)\n\tengine.GET(\"namespaces\", h.ListNamespaces)\n\tengine.GET(\"sources\", h.ListSources)\n\tengine.GET(\"sources/:source/use-resources\", h.UseResources)\n",
                    "rendered": {
                      "text": "\tengine.GET(\"resource/:id\", h.GetResource)\n\tengine.GET(\"resource/:id/source-categories\", h.ListResourceCategories)\n\n\tengine.POST(\"namespaces/resolve-selector\", h.ResolveNamespaceSelector)\n\tengine.GET(\"namespaces\", h.ListNamespaces)\n\tengine.GET(\"sources\", h.ListSources)\n\tengine.GET(\"sources/:source/use-resources\", h.UseResources)\n",
                      "markdown": "`\tengine.GET(\"resource/:id\", h.GetResource)\n\tengine.GET(\"resource/:id/source-categories\", h.ListResourceCategories)\n\n\tengine.POST(\"namespaces/resolve-selector\", h.ResolveNamespaceSelector)\n\tengine.GET(\"namespaces\", h.ListNamespaces)\n\tengine.GET(\"sources\", h.ListSources)\n\tengine.GET(\"sources/:source/use-resources\", h.UseResources)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v2/api.go"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 7,
                  "endLine": 30,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\tengine.GET(\"resource/:id/resource-results\", h.ListResourceResults)\n\tengine.GET(\"resource/:id/results\", h.ListResourcePolilcyResults)\n\tengine.GET(\"resource/:id\", h.GetResource)\n\tengine.GET(\"resource/:id/source-categories\", h.ListResourceCategories)\n\n\tengine.POST(\"namespaces/resolve-selector\", h.ResolveNamespaceSelector)\n\tengine.GET(\"namespaces\", h.ListNamespaces)\n",
                    "rendered": {
                      "text": "\tengine.GET(\"resource/:id/resource-results\", h.ListResourceResults)\n\tengine.GET(\"resource/:id/results\", h.ListResourcePolilcyResults)\n\tengine.GET(\"resource/:id\", h.GetResource)\n\tengine.GET(\"resource/:id/source-categories\", h.ListResourceCategories)\n\n\tengine.POST(\"namespaces/resolve-selector\", h.ResolveNamespaceSelector)\n\tengine.GET(\"namespaces\", h.ListNamespaces)\n",
                      "markdown": "`\tengine.GET(\"resource/:id/resource-results\", h.ListResourceResults)\n\tengine.GET(\"resource/:id/results\", h.ListResourcePolilcyResults)\n\tengine.GET(\"resource/:id\", h.GetResource)\n\tengine.GET(\"resource/:id/source-categories\", h.ListResourceCategories)\n\n\tengine.POST(\"namespaces/resolve-selector\", h.ResolveNamespaceSelector)\n\tengine.GET(\"namespaces\", h.ListNamespaces)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v2/api.go"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 7,
                  "endLine": 29,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\tengine.GET(\"resource/:id/severity-counts\", h.GetResourceSeverityCounts)\n\tengine.GET(\"resource/:id/resource-results\", h.ListResourceResults)\n\tengine.GET(\"resource/:id/results\", h.ListResourcePolilcyResults)\n\tengine.GET(\"resource/:id\", h.GetResource)\n\tengine.GET(\"resource/:id/source-categories\", h.ListResourceCategories)\n\n\tengine.POST(\"namespaces/resolve-selector\", h.ResolveNamespaceSelector)\n",
                    "rendered": {
                      "text": "\tengine.GET(\"resource/:id/severity-counts\", h.GetResourceSeverityCounts)\n\tengine.GET(\"resource/:id/resource-results\", h.ListResourceResults)\n\tengine.GET(\"resource/:id/results\", h.ListResourcePolilcyResults)\n\tengine.GET(\"resource/:id\", h.GetResource)\n\tengine.GET(\"resource/:id/source-categories\", h.ListResourceCategories)\n\n\tengine.POST(\"namespaces/resolve-selector\", h.ResolveNamespaceSelector)\n",
                      "markdown": "`\tengine.GET(\"resource/:id/severity-counts\", h.GetResourceSeverityCounts)\n\tengine.GET(\"resource/:id/resource-results\", h.ListResourceResults)\n\tengine.GET(\"resource/:id/results\", h.ListResourcePolilcyResults)\n\tengine.GET(\"resource/:id\", h.GetResource)\n\tengine.GET(\"resource/:id/source-categories\", h.ListResourceCategories)\n\n\tengine.POST(\"namespaces/resolve-selector\", h.ResolveNamespaceSelector)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v2/api.go"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 7,
                  "endLine": 28,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\tengine.GET(\"resource/:id/status-counts\", h.GetResourceStatusCounts)\n\tengine.GET(\"resource/:id/severity-counts\", h.GetResourceSeverityCounts)\n\tengine.GET(\"resource/:id/resource-results\", h.ListResourceResults)\n\tengine.GET(\"resource/:id/results\", h.ListResourcePolilcyResults)\n\tengine.GET(\"resource/:id\", h.GetResource)\n\tengine.GET(\"resource/:id/source-categories\", h.ListResourceCategories)\n\n",
                    "rendered": {
                      "text": "\tengine.GET(\"resource/:id/status-counts\", h.GetResourceStatusCounts)\n\tengine.GET(\"resource/:id/severity-counts\", h.GetResourceSeverityCounts)\n\tengine.GET(\"resource/:id/resource-results\", h.ListResourceResults)\n\tengine.GET(\"resource/:id/results\", h.ListResourcePolilcyResults)\n\tengine.GET(\"resource/:id\", h.GetResource)\n\tengine.GET(\"resource/:id/source-categories\", h.ListResourceCategories)\n\n",
                      "markdown": "`\tengine.GET(\"resource/:id/status-counts\", h.GetResourceStatusCounts)\n\tengine.GET(\"resource/:id/severity-counts\", h.GetResourceSeverityCounts)\n\tengine.GET(\"resource/:id/resource-results\", h.ListResourceResults)\n\tengine.GET(\"resource/:id/results\", h.ListResourcePolilcyResults)\n\tengine.GET(\"resource/:id\", h.GetResource)\n\tengine.GET(\"resource/:id/source-categories\", h.ListResourceCategories)\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v2/api.go"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 7,
                  "endLine": 27,
                  "endColumn": 12,
                  "snippet": {
                    "text": "func (h *APIHandler) Register(engine *gin.RouterGroup) error {\n\tengine.GET(\"resource/:id/status-counts\", h.GetResourceStatusCounts)\n\tengine.GET(\"resource/:id/severity-counts\", h.GetResourceSeverityCounts)\n\tengine.GET(\"resource/:id/resource-results\", h.ListResourceResults)\n\tengine.GET(\"resource/:id/results\", h.ListResourcePolilcyResults)\n\tengine.GET(\"resource/:id\", h.GetResource)\n\tengine.GET(\"resource/:id/source-categories\", h.ListResourceCategories)\n",
                    "rendered": {
                      "text": "func (h *APIHandler) Register(engine *gin.RouterGroup) error {\n\tengine.GET(\"resource/:id/status-counts\", h.GetResourceStatusCounts)\n\tengine.GET(\"resource/:id/severity-counts\", h.GetResourceSeverityCounts)\n\tengine.GET(\"resource/:id/resource-results\", h.ListResourceResults)\n\tengine.GET(\"resource/:id/results\", h.ListResourcePolilcyResults)\n\tengine.GET(\"resource/:id\", h.GetResource)\n\tengine.GET(\"resource/:id/source-categories\", h.ListResourceCategories)\n",
                      "markdown": "`func (h *APIHandler) Register(engine *gin.RouterGroup) error {\n\tengine.GET(\"resource/:id/status-counts\", h.GetResourceStatusCounts)\n\tengine.GET(\"resource/:id/severity-counts\", h.GetResourceSeverityCounts)\n\tengine.GET(\"resource/:id/resource-results\", h.ListResourceResults)\n\tengine.GET(\"resource/:id/results\", h.ListResourcePolilcyResults)\n\tengine.GET(\"resource/:id\", h.GetResource)\n\tengine.GET(\"resource/:id/source-categories\", h.ListResourceCategories)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v2/api.go"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 7,
                  "endLine": 26,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\nfunc (h *APIHandler) Register(engine *gin.RouterGroup) error {\n\tengine.GET(\"resource/:id/status-counts\", h.GetResourceStatusCounts)\n\tengine.GET(\"resource/:id/severity-counts\", h.GetResourceSeverityCounts)\n\tengine.GET(\"resource/:id/resource-results\", h.ListResourceResults)\n\tengine.GET(\"resource/:id/results\", h.ListResourcePolilcyResults)\n\tengine.GET(\"resource/:id\", h.GetResource)\n",
                    "rendered": {
                      "text": "\nfunc (h *APIHandler) Register(engine *gin.RouterGroup) error {\n\tengine.GET(\"resource/:id/status-counts\", h.GetResourceStatusCounts)\n\tengine.GET(\"resource/:id/severity-counts\", h.GetResourceSeverityCounts)\n\tengine.GET(\"resource/:id/resource-results\", h.ListResourceResults)\n\tengine.GET(\"resource/:id/results\", h.ListResourcePolilcyResults)\n\tengine.GET(\"resource/:id\", h.GetResource)\n",
                      "markdown": "`\nfunc (h *APIHandler) Register(engine *gin.RouterGroup) error {\n\tengine.GET(\"resource/:id/status-counts\", h.GetResourceStatusCounts)\n\tengine.GET(\"resource/:id/severity-counts\", h.GetResourceSeverityCounts)\n\tengine.GET(\"resource/:id/resource-results\", h.ListResourceResults)\n\tengine.GET(\"resource/:id/results\", h.ListResourcePolilcyResults)\n\tengine.GET(\"resource/:id\", h.GetResource)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v2/api.go"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 7,
                  "endLine": 25,
                  "endColumn": 12,
                  "snippet": {
                    "text": "}\n\nfunc (h *APIHandler) Register(engine *gin.RouterGroup) error {\n\tengine.GET(\"resource/:id/status-counts\", h.GetResourceStatusCounts)\n\tengine.GET(\"resource/:id/severity-counts\", h.GetResourceSeverityCounts)\n\tengine.GET(\"resource/:id/resource-results\", h.ListResourceResults)\n\tengine.GET(\"resource/:id/results\", h.ListResourcePolilcyResults)\n",
                    "rendered": {
                      "text": "}\n\nfunc (h *APIHandler) Register(engine *gin.RouterGroup) error {\n\tengine.GET(\"resource/:id/status-counts\", h.GetResourceStatusCounts)\n\tengine.GET(\"resource/:id/severity-counts\", h.GetResourceSeverityCounts)\n\tengine.GET(\"resource/:id/resource-results\", h.ListResourceResults)\n\tengine.GET(\"resource/:id/results\", h.ListResourcePolilcyResults)\n",
                      "markdown": "`}\n\nfunc (h *APIHandler) Register(engine *gin.RouterGroup) error {\n\tengine.GET(\"resource/:id/status-counts\", h.GetResourceStatusCounts)\n\tengine.GET(\"resource/:id/severity-counts\", h.GetResourceSeverityCounts)\n\tengine.GET(\"resource/:id/resource-results\", h.ListResourceResults)\n\tengine.GET(\"resource/:id/results\", h.ListResourcePolilcyResults)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v2/views.go"
                },
                "region": {
                  "startLine": 611,
                  "startColumn": 49,
                  "endLine": 611,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\tt.Host = ta.Config.Host\n\tt.SkipTLS = ta.Config.SkipTLS\n\tt.UseTLS = ta.Config.Certificate != \"\"\n\tt.Auth = (ta.Config.Username != \"\" && ta.Config.Password != \"\") || ta.Config.APIKey != \"\"\n\tt.Properties[\"rotation\"] = ta.Config.Rotation\n\tt.Properties[\"index\"] = ta.Config.Index\n\n",
                    "rendered": {
                      "text": "\tt.Host = ta.Config.Host\n\tt.SkipTLS = ta.Config.SkipTLS\n\tt.UseTLS = ta.Config.Certificate != \"\"\n\tt.Auth = (ta.Config.Username != \"\" && ta.Config.Password != \"\") || ta.Config.APIKey != \"\"\n\tt.Properties[\"rotation\"] = ta.Config.Rotation\n\tt.Properties[\"index\"] = ta.Config.Index\n\n",
                      "markdown": "`\tt.Host = ta.Config.Host\n\tt.SkipTLS = ta.Config.SkipTLS\n\tt.UseTLS = ta.Config.Certificate != \"\"\n\tt.Auth = (ta.Config.Username != \"\" && ta.Config.Password != \"\") || ta.Config.APIKey != \"\"\n\tt.Properties[\"rotation\"] = ta.Config.Rotation\n\tt.Properties[\"index\"] = ta.Config.Index\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/v2/views.go"
                },
                "region": {
                  "startLine": 598,
                  "startColumn": 49,
                  "endLine": 598,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\n\tif v, ok := ta.Config.Headers[\"Authorization\"]; ok && v != \"\" {\n\t\tt.Auth = true\n\t} else if ta.Config.Username != \"\" && ta.Config.Password != \"\" {\n\t\tt.Auth = true\n\t}\n\n",
                    "rendered": {
                      "text": "\n\tif v, ok := ta.Config.Headers[\"Authorization\"]; ok && v != \"\" {\n\t\tt.Auth = true\n\t} else if ta.Config.Username != \"\" && ta.Config.Password != \"\" {\n\t\tt.Auth = true\n\t}\n\n",
                      "markdown": "`\n\tif v, ok := ta.Config.Headers[\"Authorization\"]; ok && v != \"\" {\n\t\tt.Auth = true\n\t} else if ta.Config.Username != \"\" && ta.Config.Password != \"\" {\n\t\tt.Auth = true\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/ui/service.yaml"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 5,
                  "endLine": 4,
                  "snippet": {
                    "text": "{{- if .Values.ui.enabled -}}\napiVersion: v1\nkind: Service\nmetadata:\n  name: {{ include \"ui.fullname\" . }}\n  namespace: {{ include \"policyreporter.namespace\" . }}\n  labels:\n",
                    "rendered": {
                      "text": "{{- if .Values.ui.enabled -}}\napiVersion: v1\nkind: Service\nmetadata:\n  name: {{ include \"ui.fullname\" . }}\n  namespace: {{ include \"policyreporter.namespace\" . }}\n  labels:\n",
                      "markdown": "`{{- if .Values.ui.enabled -}}\napiVersion: v1\nkind: Service\nmetadata:\n  name: {{ include \"ui.fullname\" . }}\n  namespace: {{ include \"policyreporter.namespace\" . }}\n  labels:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/plugins/kyverno/role.yaml"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 3,
                  "endLine": 21,
                  "snippet": {
                    "text": "  - delete\n  - get\n  - patch\n  - update\n{{- end }}\n{{- end }}",
                    "rendered": {
                      "text": "  - delete\n  - get\n  - patch\n  - update\n{{- end }}\n{{- end }}",
                      "markdown": "`  - delete\n  - get\n  - patch\n  - update\n{{- end }}\n{{- end }}`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/cluster-secret.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 16,
                  "endLine": 25,
                  "endColumn": 24,
                  "snippet": {
                    "text": "  {{- $host := printf \"http://%s:%d/vulnr\" (include \"trivy-plugin.fullname\" .) (.Values.plugin.trivy.service.port | int) }}\n  plugin.trivy: {{ (printf \"{\\\"host\\\":\\\"%s\\\", \\\"name\\\":\\\"Trivy Vulnerability\\\", \\\"username\\\":\\\"%s\\\", \\\"password\\\":\\\"%s\\\"}\" $host $username $password) | b64enc }}\n  username: {{ $username | b64enc }}\n  password: {{ $password | b64enc }}\n  {{- end }}",
                    "rendered": {
                      "text": "  {{- $host := printf \"http://%s:%d/vulnr\" (include \"trivy-plugin.fullname\" .) (.Values.plugin.trivy.service.port | int) }}\n  plugin.trivy: {{ (printf \"{\\\"host\\\":\\\"%s\\\", \\\"name\\\":\\\"Trivy Vulnerability\\\", \\\"username\\\":\\\"%s\\\", \\\"password\\\":\\\"%s\\\"}\" $host $username $password) | b64enc }}\n  username: {{ $username | b64enc }}\n  password: {{ $password | b64enc }}\n  {{- end }}",
                      "markdown": "`  {{- $host := printf \"http://%s:%d/vulnr\" (include \"trivy-plugin.fullname\" .) (.Values.plugin.trivy.service.port | int) }}\n  plugin.trivy: {{ (printf \"{\\\"host\\\":\\\"%s\\\", \\\"name\\\":\\\"Trivy Vulnerability\\\", \\\"username\\\":\\\"%s\\\", \\\"password\\\":\\\"%s\\\"}\" $host $username $password) | b64enc }}\n  username: {{ $username | b64enc }}\n  password: {{ $password | b64enc }}\n  {{- end }}`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/cluster-secret.yaml"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 2,
                  "endLine": 25,
                  "endColumn": 10,
                  "snippet": {
                    "text": "  {{- $host := printf \"http://%s:%d/vulnr\" (include \"trivy-plugin.fullname\" .) (.Values.plugin.trivy.service.port | int) }}\n  plugin.trivy: {{ (printf \"{\\\"host\\\":\\\"%s\\\", \\\"name\\\":\\\"Trivy Vulnerability\\\", \\\"username\\\":\\\"%s\\\", \\\"password\\\":\\\"%s\\\"}\" $host $username $password) | b64enc }}\n  username: {{ $username | b64enc }}\n  password: {{ $password | b64enc }}\n  {{- end }}",
                    "rendered": {
                      "text": "  {{- $host := printf \"http://%s:%d/vulnr\" (include \"trivy-plugin.fullname\" .) (.Values.plugin.trivy.service.port | int) }}\n  plugin.trivy: {{ (printf \"{\\\"host\\\":\\\"%s\\\", \\\"name\\\":\\\"Trivy Vulnerability\\\", \\\"username\\\":\\\"%s\\\", \\\"password\\\":\\\"%s\\\"}\" $host $username $password) | b64enc }}\n  username: {{ $username | b64enc }}\n  password: {{ $password | b64enc }}\n  {{- end }}",
                      "markdown": "`  {{- $host := printf \"http://%s:%d/vulnr\" (include \"trivy-plugin.fullname\" .) (.Values.plugin.trivy.service.port | int) }}\n  plugin.trivy: {{ (printf \"{\\\"host\\\":\\\"%s\\\", \\\"name\\\":\\\"Trivy Vulnerability\\\", \\\"username\\\":\\\"%s\\\", \\\"password\\\":\\\"%s\\\"}\" $host $username $password) | b64enc }}\n  username: {{ $username | b64enc }}\n  password: {{ $password | b64enc }}\n  {{- end }}`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/cluster-secret.yaml"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 140,
                  "endLine": 23,
                  "endColumn": 148,
                  "snippet": {
                    "text": "  {{- end }}\n  {{- if .Values.plugin.trivy.enabled }}\n  {{- $host := printf \"http://%s:%d/vulnr\" (include \"trivy-plugin.fullname\" .) (.Values.plugin.trivy.service.port | int) }}\n  plugin.trivy: {{ (printf \"{\\\"host\\\":\\\"%s\\\", \\\"name\\\":\\\"Trivy Vulnerability\\\", \\\"username\\\":\\\"%s\\\", \\\"password\\\":\\\"%s\\\"}\" $host $username $password) | b64enc }}\n  username: {{ $username | b64enc }}\n  password: {{ $password | b64enc }}\n  {{- end }}",
                    "rendered": {
                      "text": "  {{- end }}\n  {{- if .Values.plugin.trivy.enabled }}\n  {{- $host := printf \"http://%s:%d/vulnr\" (include \"trivy-plugin.fullname\" .) (.Values.plugin.trivy.service.port | int) }}\n  plugin.trivy: {{ (printf \"{\\\"host\\\":\\\"%s\\\", \\\"name\\\":\\\"Trivy Vulnerability\\\", \\\"username\\\":\\\"%s\\\", \\\"password\\\":\\\"%s\\\"}\" $host $username $password) | b64enc }}\n  username: {{ $username | b64enc }}\n  password: {{ $password | b64enc }}\n  {{- end }}",
                      "markdown": "`  {{- end }}\n  {{- if .Values.plugin.trivy.enabled }}\n  {{- $host := printf \"http://%s:%d/vulnr\" (include \"trivy-plugin.fullname\" .) (.Values.plugin.trivy.service.port | int) }}\n  plugin.trivy: {{ (printf \"{\\\"host\\\":\\\"%s\\\", \\\"name\\\":\\\"Trivy Vulnerability\\\", \\\"username\\\":\\\"%s\\\", \\\"password\\\":\\\"%s\\\"}\" $host $username $password) | b64enc }}\n  username: {{ $username | b64enc }}\n  password: {{ $password | b64enc }}\n  {{- end }}`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/cluster-secret.yaml"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 103,
                  "endLine": 23,
                  "endColumn": 111,
                  "snippet": {
                    "text": "  {{- end }}\n  {{- if .Values.plugin.trivy.enabled }}\n  {{- $host := printf \"http://%s:%d/vulnr\" (include \"trivy-plugin.fullname\" .) (.Values.plugin.trivy.service.port | int) }}\n  plugin.trivy: {{ (printf \"{\\\"host\\\":\\\"%s\\\", \\\"name\\\":\\\"Trivy Vulnerability\\\", \\\"username\\\":\\\"%s\\\", \\\"password\\\":\\\"%s\\\"}\" $host $username $password) | b64enc }}\n  username: {{ $username | b64enc }}\n  password: {{ $password | b64enc }}\n  {{- end }}",
                    "rendered": {
                      "text": "  {{- end }}\n  {{- if .Values.plugin.trivy.enabled }}\n  {{- $host := printf \"http://%s:%d/vulnr\" (include \"trivy-plugin.fullname\" .) (.Values.plugin.trivy.service.port | int) }}\n  plugin.trivy: {{ (printf \"{\\\"host\\\":\\\"%s\\\", \\\"name\\\":\\\"Trivy Vulnerability\\\", \\\"username\\\":\\\"%s\\\", \\\"password\\\":\\\"%s\\\"}\" $host $username $password) | b64enc }}\n  username: {{ $username | b64enc }}\n  password: {{ $password | b64enc }}\n  {{- end }}",
                      "markdown": "`  {{- end }}\n  {{- if .Values.plugin.trivy.enabled }}\n  {{- $host := printf \"http://%s:%d/vulnr\" (include \"trivy-plugin.fullname\" .) (.Values.plugin.trivy.service.port | int) }}\n  plugin.trivy: {{ (printf \"{\\\"host\\\":\\\"%s\\\", \\\"name\\\":\\\"Trivy Vulnerability\\\", \\\"username\\\":\\\"%s\\\", \\\"password\\\":\\\"%s\\\"}\" $host $username $password) | b64enc }}\n  username: {{ $username | b64enc }}\n  password: {{ $password | b64enc }}\n  {{- end }}`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/cluster-secret.yaml"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 130,
                  "endLine": 19,
                  "endColumn": 138,
                  "snippet": {
                    "text": "  host: {{ printf \"http://%s:%d\" (include \"policyreporter.fullname\" .) (.Values.service.port | int) | b64enc }}\n  {{- if .Values.plugin.kyverno.enabled }}\n  {{- $host := printf \"http://%s:%d\" (include \"kyverno-plugin.fullname\" .) (.Values.plugin.kyverno.service.port | int) }}\n  plugin.kyverno: {{ (printf \"{\\\"host\\\":\\\"%s\\\", \\\"name\\\":\\\"kyverno\\\", \\\"username\\\":\\\"%s\\\", \\\"password\\\":\\\"%s\\\"}\" $host $username $password) | b64enc }}\n  {{- end }}\n  {{- if .Values.plugin.trivy.enabled }}\n  {{- $host := printf \"http://%s:%d/vulnr\" (include \"trivy-plugin.fullname\" .) (.Values.plugin.trivy.service.port | int) }}\n",
                    "rendered": {
                      "text": "  host: {{ printf \"http://%s:%d\" (include \"policyreporter.fullname\" .) (.Values.service.port | int) | b64enc }}\n  {{- if .Values.plugin.kyverno.enabled }}\n  {{- $host := printf \"http://%s:%d\" (include \"kyverno-plugin.fullname\" .) (.Values.plugin.kyverno.service.port | int) }}\n  plugin.kyverno: {{ (printf \"{\\\"host\\\":\\\"%s\\\", \\\"name\\\":\\\"kyverno\\\", \\\"username\\\":\\\"%s\\\", \\\"password\\\":\\\"%s\\\"}\" $host $username $password) | b64enc }}\n  {{- end }}\n  {{- if .Values.plugin.trivy.enabled }}\n  {{- $host := printf \"http://%s:%d/vulnr\" (include \"trivy-plugin.fullname\" .) (.Values.plugin.trivy.service.port | int) }}\n",
                      "markdown": "`  host: {{ printf \"http://%s:%d\" (include \"policyreporter.fullname\" .) (.Values.service.port | int) | b64enc }}\n  {{- if .Values.plugin.kyverno.enabled }}\n  {{- $host := printf \"http://%s:%d\" (include \"kyverno-plugin.fullname\" .) (.Values.plugin.kyverno.service.port | int) }}\n  plugin.kyverno: {{ (printf \"{\\\"host\\\":\\\"%s\\\", \\\"name\\\":\\\"kyverno\\\", \\\"username\\\":\\\"%s\\\", \\\"password\\\":\\\"%s\\\"}\" $host $username $password) | b64enc }}\n  {{- end }}\n  {{- if .Values.plugin.trivy.enabled }}\n  {{- $host := printf \"http://%s:%d/vulnr\" (include \"trivy-plugin.fullname\" .) (.Values.plugin.trivy.service.port | int) }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/cluster-secret.yaml"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 93,
                  "endLine": 19,
                  "endColumn": 101,
                  "snippet": {
                    "text": "  host: {{ printf \"http://%s:%d\" (include \"policyreporter.fullname\" .) (.Values.service.port | int) | b64enc }}\n  {{- if .Values.plugin.kyverno.enabled }}\n  {{- $host := printf \"http://%s:%d\" (include \"kyverno-plugin.fullname\" .) (.Values.plugin.kyverno.service.port | int) }}\n  plugin.kyverno: {{ (printf \"{\\\"host\\\":\\\"%s\\\", \\\"name\\\":\\\"kyverno\\\", \\\"username\\\":\\\"%s\\\", \\\"password\\\":\\\"%s\\\"}\" $host $username $password) | b64enc }}\n  {{- end }}\n  {{- if .Values.plugin.trivy.enabled }}\n  {{- $host := printf \"http://%s:%d/vulnr\" (include \"trivy-plugin.fullname\" .) (.Values.plugin.trivy.service.port | int) }}\n",
                    "rendered": {
                      "text": "  host: {{ printf \"http://%s:%d\" (include \"policyreporter.fullname\" .) (.Values.service.port | int) | b64enc }}\n  {{- if .Values.plugin.kyverno.enabled }}\n  {{- $host := printf \"http://%s:%d\" (include \"kyverno-plugin.fullname\" .) (.Values.plugin.kyverno.service.port | int) }}\n  plugin.kyverno: {{ (printf \"{\\\"host\\\":\\\"%s\\\", \\\"name\\\":\\\"kyverno\\\", \\\"username\\\":\\\"%s\\\", \\\"password\\\":\\\"%s\\\"}\" $host $username $password) | b64enc }}\n  {{- end }}\n  {{- if .Values.plugin.trivy.enabled }}\n  {{- $host := printf \"http://%s:%d/vulnr\" (include \"trivy-plugin.fullname\" .) (.Values.plugin.trivy.service.port | int) }}\n",
                      "markdown": "`  host: {{ printf \"http://%s:%d\" (include \"policyreporter.fullname\" .) (.Values.service.port | int) | b64enc }}\n  {{- if .Values.plugin.kyverno.enabled }}\n  {{- $host := printf \"http://%s:%d\" (include \"kyverno-plugin.fullname\" .) (.Values.plugin.kyverno.service.port | int) }}\n  plugin.kyverno: {{ (printf \"{\\\"host\\\":\\\"%s\\\", \\\"name\\\":\\\"kyverno\\\", \\\"username\\\":\\\"%s\\\", \\\"password\\\":\\\"%s\\\"}\" $host $username $password) | b64enc }}\n  {{- end }}\n  {{- if .Values.plugin.trivy.enabled }}\n  {{- $host := printf \"http://%s:%d/vulnr\" (include \"trivy-plugin.fullname\" .) (.Values.plugin.trivy.service.port | int) }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/cluster-secret.yaml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 37,
                  "endLine": 15,
                  "endColumn": 45,
                  "snippet": {
                    "text": "type: Opaque\ndata:\n  {{- $username := .Values.basicAuth.username }}\n  {{- $password := .Values.basicAuth.password }}\n  host: {{ printf \"http://%s:%d\" (include \"policyreporter.fullname\" .) (.Values.service.port | int) | b64enc }}\n  {{- if .Values.plugin.kyverno.enabled }}\n  {{- $host := printf \"http://%s:%d\" (include \"kyverno-plugin.fullname\" .) (.Values.plugin.kyverno.service.port | int) }}\n",
                    "rendered": {
                      "text": "type: Opaque\ndata:\n  {{- $username := .Values.basicAuth.username }}\n  {{- $password := .Values.basicAuth.password }}\n  host: {{ printf \"http://%s:%d\" (include \"policyreporter.fullname\" .) (.Values.service.port | int) | b64enc }}\n  {{- if .Values.plugin.kyverno.enabled }}\n  {{- $host := printf \"http://%s:%d\" (include \"kyverno-plugin.fullname\" .) (.Values.plugin.kyverno.service.port | int) }}\n",
                      "markdown": "`type: Opaque\ndata:\n  {{- $username := .Values.basicAuth.username }}\n  {{- $password := .Values.basicAuth.password }}\n  host: {{ printf \"http://%s:%d\" (include \"policyreporter.fullname\" .) (.Values.service.port | int) | b64enc }}\n  {{- if .Values.plugin.kyverno.enabled }}\n  {{- $host := printf \"http://%s:%d\" (include \"kyverno-plugin.fullname\" .) (.Values.plugin.kyverno.service.port | int) }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/cluster-secret.yaml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 7,
                  "endLine": 15,
                  "endColumn": 15,
                  "snippet": {
                    "text": "type: Opaque\ndata:\n  {{- $username := .Values.basicAuth.username }}\n  {{- $password := .Values.basicAuth.password }}\n  host: {{ printf \"http://%s:%d\" (include \"policyreporter.fullname\" .) (.Values.service.port | int) | b64enc }}\n  {{- if .Values.plugin.kyverno.enabled }}\n  {{- $host := printf \"http://%s:%d\" (include \"kyverno-plugin.fullname\" .) (.Values.plugin.kyverno.service.port | int) }}\n",
                    "rendered": {
                      "text": "type: Opaque\ndata:\n  {{- $username := .Values.basicAuth.username }}\n  {{- $password := .Values.basicAuth.password }}\n  host: {{ printf \"http://%s:%d\" (include \"policyreporter.fullname\" .) (.Values.service.port | int) | b64enc }}\n  {{- if .Values.plugin.kyverno.enabled }}\n  {{- $host := printf \"http://%s:%d\" (include \"kyverno-plugin.fullname\" .) (.Values.plugin.kyverno.service.port | int) }}\n",
                      "markdown": "`type: Opaque\ndata:\n  {{- $username := .Values.basicAuth.username }}\n  {{- $password := .Values.basicAuth.password }}\n  host: {{ printf \"http://%s:%d\" (include \"policyreporter.fullname\" .) (.Values.service.port | int) | b64enc }}\n  {{- if .Values.plugin.kyverno.enabled }}\n  {{- $host := printf \"http://%s:%d\" (include \"kyverno-plugin.fullname\" .) (.Values.plugin.kyverno.service.port | int) }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/cronjob-summary-report.yaml"
                },
                "region": {
                  "startLine": 109,
                  "startColumn": 18,
                  "endLine": 109,
                  "endColumn": 27,
                  "snippet": {
                    "text": "                    optional: true\n              - name: EMAIL_REPORTS_SMTP_ENCRYPTION\n                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: encryption\n                    optional: true\n",
                    "rendered": {
                      "text": "                    optional: true\n              - name: EMAIL_REPORTS_SMTP_ENCRYPTION\n                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: encryption\n                    optional: true\n",
                      "markdown": "`                    optional: true\n              - name: EMAIL_REPORTS_SMTP_ENCRYPTION\n                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: encryption\n                    optional: true\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/cronjob-summary-report.yaml"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 18,
                  "endLine": 103,
                  "endColumn": 27,
                  "snippet": {
                    "text": "                    optional: true\n              - name: EMAIL_REPORTS_SMTP_FROM\n                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: from\n                    optional: true\n",
                    "rendered": {
                      "text": "                    optional: true\n              - name: EMAIL_REPORTS_SMTP_FROM\n                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: from\n                    optional: true\n",
                      "markdown": "`                    optional: true\n              - name: EMAIL_REPORTS_SMTP_FROM\n                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: from\n                    optional: true\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/cronjob-summary-report.yaml"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 25,
                  "endLine": 99,
                  "endColumn": 33,
                  "snippet": {
                    "text": "                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: password\n                    optional: true\n              - name: EMAIL_REPORTS_SMTP_FROM\n                valueFrom:\n",
                    "rendered": {
                      "text": "                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: password\n                    optional: true\n              - name: EMAIL_REPORTS_SMTP_FROM\n                valueFrom:\n",
                      "markdown": "`                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: password\n                    optional: true\n              - name: EMAIL_REPORTS_SMTP_FROM\n                valueFrom:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/cronjob-summary-report.yaml"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 18,
                  "endLine": 97,
                  "endColumn": 27,
                  "snippet": {
                    "text": "                    optional: true\n              - name: EMAIL_REPORTS_SMTP_PASSWORD\n                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: password\n                    optional: true\n",
                    "rendered": {
                      "text": "                    optional: true\n              - name: EMAIL_REPORTS_SMTP_PASSWORD\n                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: password\n                    optional: true\n",
                      "markdown": "`                    optional: true\n              - name: EMAIL_REPORTS_SMTP_PASSWORD\n                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: password\n                    optional: true\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/cronjob-summary-report.yaml"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 41,
                  "endLine": 95,
                  "endColumn": 49,
                  "snippet": {
                    "text": "                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: username\n                    optional: true\n              - name: EMAIL_REPORTS_SMTP_PASSWORD\n                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n",
                    "rendered": {
                      "text": "                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: username\n                    optional: true\n              - name: EMAIL_REPORTS_SMTP_PASSWORD\n                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n",
                      "markdown": "`                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: username\n                    optional: true\n              - name: EMAIL_REPORTS_SMTP_PASSWORD\n                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/cronjob-summary-report.yaml"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 18,
                  "endLine": 91,
                  "endColumn": 27,
                  "snippet": {
                    "text": "                    optional: true\n              - name: EMAIL_REPORTS_SMTP_USERNAME\n                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: username\n                    optional: true\n",
                    "rendered": {
                      "text": "                    optional: true\n              - name: EMAIL_REPORTS_SMTP_USERNAME\n                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: username\n                    optional: true\n",
                      "markdown": "`                    optional: true\n              - name: EMAIL_REPORTS_SMTP_USERNAME\n                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: username\n                    optional: true\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/cronjob-summary-report.yaml"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 18,
                  "endLine": 85,
                  "endColumn": 27,
                  "snippet": {
                    "text": "                    optional: true\n              - name: EMAIL_REPORTS_SMTP_PORT\n                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: port\n                    optional: true\n",
                    "rendered": {
                      "text": "                    optional: true\n              - name: EMAIL_REPORTS_SMTP_PORT\n                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: port\n                    optional: true\n",
                      "markdown": "`                    optional: true\n              - name: EMAIL_REPORTS_SMTP_PORT\n                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: port\n                    optional: true\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/cronjob-summary-report.yaml"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 18,
                  "endLine": 79,
                  "endColumn": 27,
                  "snippet": {
                    "text": "              env:\n              - name: EMAIL_REPORTS_SMTP_HOST\n                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: host\n                    optional: true\n",
                    "rendered": {
                      "text": "              env:\n              - name: EMAIL_REPORTS_SMTP_HOST\n                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: host\n                    optional: true\n",
                      "markdown": "`              env:\n              - name: EMAIL_REPORTS_SMTP_HOST\n                valueFrom:\n                  secretKeyRef:\n                    name: {{ .Values.emailReports.smtp.secret }}\n                    key: host\n                    optional: true\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.github/workflows/docs.yaml"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 9,
                  "endLine": 33,
                  "endColumn": 13,
                  "snippet": {
                    "text": "        run: |\n          cd ..\n          cp index.yaml ./dist/index.yaml\n          cp artifacthub-repo.yml ./dist/artifacthub-repo.yml\n\n      - name: Deploy\n        uses: peaceiris/actions-gh-pages@4f9cc6602d3f66b9c108549d475ec49e8ef4d45e #v4.0.0\n",
                    "rendered": {
                      "text": "        run: |\n          cd ..\n          cp index.yaml ./dist/index.yaml\n          cp artifacthub-repo.yml ./dist/artifacthub-repo.yml\n\n      - name: Deploy\n        uses: peaceiris/actions-gh-pages@4f9cc6602d3f66b9c108549d475ec49e8ef4d45e #v4.0.0\n",
                      "markdown": "`        run: |\n          cd ..\n          cp index.yaml ./dist/index.yaml\n          cp artifacthub-repo.yml ./dist/artifacthub-repo.yml\n\n      - name: Deploy\n        uses: peaceiris/actions-gh-pages@4f9cc6602d3f66b9c108549d475ec49e8ef4d45e #v4.0.0\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.github/workflows/docs.yaml"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 9,
                  "endLine": 32,
                  "endColumn": 13,
                  "snippet": {
                    "text": "      - name: Copy Helm files\n        run: |\n          cd ..\n          cp index.yaml ./dist/index.yaml\n          cp artifacthub-repo.yml ./dist/artifacthub-repo.yml\n\n      - name: Deploy\n",
                    "rendered": {
                      "text": "      - name: Copy Helm files\n        run: |\n          cd ..\n          cp index.yaml ./dist/index.yaml\n          cp artifacthub-repo.yml ./dist/artifacthub-repo.yml\n\n      - name: Deploy\n",
                      "markdown": "`      - name: Copy Helm files\n        run: |\n          cd ..\n          cp index.yaml ./dist/index.yaml\n          cp artifacthub-repo.yml ./dist/artifacthub-repo.yml\n\n      - name: Deploy\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.github/workflows/docs.yaml"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 19,
                  "endLine": 15,
                  "endColumn": 25,
                  "snippet": {
                    "text": "      - name: Checkout\n        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1\n\n      - name: Setup node env\n        uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 #v4.0.4\n        with:\n          node-version: 16\n",
                    "rendered": {
                      "text": "      - name: Checkout\n        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1\n\n      - name: Setup node env\n        uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 #v4.0.4\n        with:\n          node-version: 16\n",
                      "markdown": "`      - name: Checkout\n        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1\n\n      - name: Setup node env\n        uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 #v4.0.4\n        with:\n          node-version: 16\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/plugins/kyverno/_helpers.tpl"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 11,
                  "endLine": 10,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n{{/*\nCreate a default fully qualified app name.\nWe truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).\nIf release name contains chart name it will be used as a full name.\n*/}}\n{{- define \"kyverno-plugin.fullname\" -}}\n",
                    "rendered": {
                      "text": "\n{{/*\nCreate a default fully qualified app name.\nWe truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).\nIf release name contains chart name it will be used as a full name.\n*/}}\n{{- define \"kyverno-plugin.fullname\" -}}\n",
                      "markdown": "`\n{{/*\nCreate a default fully qualified app name.\nWe truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).\nIf release name contains chart name it will be used as a full name.\n*/}}\n{{- define \"kyverno-plugin.fullname\" -}}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/plugins/kyverno/_helpers.tpl"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 4,
                  "endLine": 2,
                  "endColumn": 7,
                  "snippet": {
                    "text": "{{/*\nExpand the name of the chart.\n*/}}\n{{- define \"kyverno-plugin.name\" -}}\n{{ template \"policyreporter.name\" . }}-kyverno-plugin\n",
                    "rendered": {
                      "text": "{{/*\nExpand the name of the chart.\n*/}}\n{{- define \"kyverno-plugin.name\" -}}\n{{ template \"policyreporter.name\" . }}-kyverno-plugin\n",
                      "markdown": "`{{/*\nExpand the name of the chart.\n*/}}\n{{- define \"kyverno-plugin.name\" -}}\n{{ template \"policyreporter.name\" . }}-kyverno-plugin\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/plugins/kyverno/_helpers.tpl"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 22,
                  "endLine": 48,
                  "endColumn": 31,
                  "snippet": {
                    "text": "{{- end }}\n\n{{/*\nCreate the name of the service account to use\n*/}}\n{{- define \"kyverno-plugin.serviceAccountName\" -}}\n{{- if .Values.plugin.kyverno.serviceAccount.create }}\n",
                    "rendered": {
                      "text": "{{- end }}\n\n{{/*\nCreate the name of the service account to use\n*/}}\n{{- define \"kyverno-plugin.serviceAccountName\" -}}\n{{- if .Values.plugin.kyverno.serviceAccount.create }}\n",
                      "markdown": "`{{- end }}\n\n{{/*\nCreate the name of the service account to use\n*/}}\n{{- define \"kyverno-plugin.serviceAccountName\" -}}\n{{- if .Values.plugin.kyverno.serviceAccount.create }}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/plugins/kyverno/_helpers.tpl"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 4,
                  "endLine": 2,
                  "endColumn": 7,
                  "snippet": {
                    "text": "{{/*\nExpand the name of the chart.\n*/}}\n{{- define \"kyverno-plugin.name\" -}}\n{{ template \"policyreporter.name\" . }}-kyverno-plugin\n",
                    "rendered": {
                      "text": "{{/*\nExpand the name of the chart.\n*/}}\n{{- define \"kyverno-plugin.name\" -}}\n{{ template \"policyreporter.name\" . }}-kyverno-plugin\n",
                      "markdown": "`{{/*\nExpand the name of the chart.\n*/}}\n{{- define \"kyverno-plugin.name\" -}}\n{{ template \"policyreporter.name\" . }}-kyverno-plugin\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.github/workflows/ci.yaml"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 9,
                  "endLine": 43,
                  "endColumn": 14,
                  "snippet": {
                    "text": "        run: |\n          set -e\n          make fmt\n          git diff --exit-code\n\n      - name: Calc coverage\n        run: make coverage\n",
                    "rendered": {
                      "text": "        run: |\n          set -e\n          make fmt\n          git diff --exit-code\n\n      - name: Calc coverage\n        run: make coverage\n",
                      "markdown": "`        run: |\n          set -e\n          make fmt\n          git diff --exit-code\n\n      - name: Calc coverage\n        run: make coverage\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.github/workflows/ci.yaml"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 14,
                  "endLine": 43,
                  "snippet": {
                    "text": "      - name: Check code format\n        run: |\n          set -e\n          make fmt\n          git diff --exit-code\n\n      - name: Calc coverage\n        run: make coverage\n",
                    "rendered": {
                      "text": "      - name: Check code format\n        run: |\n          set -e\n          make fmt\n          git diff --exit-code\n\n      - name: Calc coverage\n        run: make coverage\n",
                      "markdown": "`      - name: Check code format\n        run: |\n          set -e\n          make fmt\n          git diff --exit-code\n\n      - name: Calc coverage\n        run: make coverage\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.github/workflows/ci.yaml"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 24,
                  "endLine": 37,
                  "endColumn": 29,
                  "snippet": {
                    "text": "      - name: Check go.mod\n        run: |\n          set -e\n          go mod tidy && git diff --exit-code\n\n      - name: Check code format\n        run: |\n",
                    "rendered": {
                      "text": "      - name: Check go.mod\n        run: |\n          set -e\n          go mod tidy && git diff --exit-code\n\n      - name: Check code format\n        run: |\n",
                      "markdown": "`      - name: Check go.mod\n        run: |\n          set -e\n          go mod tidy && git diff --exit-code\n\n      - name: Check code format\n        run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/Makefile"
                },
                "region": {
                  "startLine": 158,
                  "startColumn": 130,
                  "endLine": 158,
                  "endColumn": 136,
                  "snippet": {
                    "text": ".PHONY: coverage\ncoverage:\n\tgo test -v ./... -covermode=count -coverprofile=coverage.out.tmp -timeout=30s\n\tcat coverage.out.tmp | grep -v \"github.com/kyverno/policy-reporter/cmd/\" | grep -v \"github.com/kyverno/policy-reporter/main.go\" | grep -v \"github.com/kyverno/policy-reporter/pkg/crd/\" > coverage.out\n\trm coverage.out.tmp\n\n.PHONY: build\n",
                    "rendered": {
                      "text": ".PHONY: coverage\ncoverage:\n\tgo test -v ./... -covermode=count -coverprofile=coverage.out.tmp -timeout=30s\n\tcat coverage.out.tmp | grep -v \"github.com/kyverno/policy-reporter/cmd/\" | grep -v \"github.com/kyverno/policy-reporter/main.go\" | grep -v \"github.com/kyverno/policy-reporter/pkg/crd/\" > coverage.out\n\trm coverage.out.tmp\n\n.PHONY: build\n",
                      "markdown": "`.PHONY: coverage\ncoverage:\n\tgo test -v ./... -covermode=count -coverprofile=coverage.out.tmp -timeout=30s\n\tcat coverage.out.tmp | grep -v \"github.com/kyverno/policy-reporter/cmd/\" | grep -v \"github.com/kyverno/policy-reporter/main.go\" | grep -v \"github.com/kyverno/policy-reporter/pkg/crd/\" > coverage.out\n\trm coverage.out.tmp\n\n.PHONY: build\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/Makefile"
                },
                "region": {
                  "startLine": 158,
                  "startColumn": 75,
                  "endLine": 158,
                  "endColumn": 81,
                  "snippet": {
                    "text": ".PHONY: coverage\ncoverage:\n\tgo test -v ./... -covermode=count -coverprofile=coverage.out.tmp -timeout=30s\n\tcat coverage.out.tmp | grep -v \"github.com/kyverno/policy-reporter/cmd/\" | grep -v \"github.com/kyverno/policy-reporter/main.go\" | grep -v \"github.com/kyverno/policy-reporter/pkg/crd/\" > coverage.out\n\trm coverage.out.tmp\n\n.PHONY: build\n",
                    "rendered": {
                      "text": ".PHONY: coverage\ncoverage:\n\tgo test -v ./... -covermode=count -coverprofile=coverage.out.tmp -timeout=30s\n\tcat coverage.out.tmp | grep -v \"github.com/kyverno/policy-reporter/cmd/\" | grep -v \"github.com/kyverno/policy-reporter/main.go\" | grep -v \"github.com/kyverno/policy-reporter/pkg/crd/\" > coverage.out\n\trm coverage.out.tmp\n\n.PHONY: build\n",
                      "markdown": "`.PHONY: coverage\ncoverage:\n\tgo test -v ./... -covermode=count -coverprofile=coverage.out.tmp -timeout=30s\n\tcat coverage.out.tmp | grep -v \"github.com/kyverno/policy-reporter/cmd/\" | grep -v \"github.com/kyverno/policy-reporter/main.go\" | grep -v \"github.com/kyverno/policy-reporter/pkg/crd/\" > coverage.out\n\trm coverage.out.tmp\n\n.PHONY: build\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/Makefile"
                },
                "region": {
                  "startLine": 158,
                  "startColumn": 23,
                  "endLine": 158,
                  "endColumn": 29,
                  "snippet": {
                    "text": ".PHONY: coverage\ncoverage:\n\tgo test -v ./... -covermode=count -coverprofile=coverage.out.tmp -timeout=30s\n\tcat coverage.out.tmp | grep -v \"github.com/kyverno/policy-reporter/cmd/\" | grep -v \"github.com/kyverno/policy-reporter/main.go\" | grep -v \"github.com/kyverno/policy-reporter/pkg/crd/\" > coverage.out\n\trm coverage.out.tmp\n\n.PHONY: build\n",
                    "rendered": {
                      "text": ".PHONY: coverage\ncoverage:\n\tgo test -v ./... -covermode=count -coverprofile=coverage.out.tmp -timeout=30s\n\tcat coverage.out.tmp | grep -v \"github.com/kyverno/policy-reporter/cmd/\" | grep -v \"github.com/kyverno/policy-reporter/main.go\" | grep -v \"github.com/kyverno/policy-reporter/pkg/crd/\" > coverage.out\n\trm coverage.out.tmp\n\n.PHONY: build\n",
                      "markdown": "`.PHONY: coverage\ncoverage:\n\tgo test -v ./... -covermode=count -coverprofile=coverage.out.tmp -timeout=30s\n\tcat coverage.out.tmp | grep -v \"github.com/kyverno/policy-reporter/cmd/\" | grep -v \"github.com/kyverno/policy-reporter/main.go\" | grep -v \"github.com/kyverno/policy-reporter/pkg/crd/\" > coverage.out\n\trm coverage.out.tmp\n\n.PHONY: build\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/Makefile"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": ".PHONY: coverage\ncoverage:\n\tgo test -v ./... -covermode=count -coverprofile=coverage.out.tmp -timeout=30s\n\tcat coverage.out.tmp | grep -v \"github.com/kyverno/policy-reporter/cmd/\" | grep -v \"github.com/kyverno/policy-reporter/main.go\" | grep -v \"github.com/kyverno/policy-reporter/pkg/crd/\" > coverage.out\n\trm coverage.out.tmp\n\n.PHONY: build\n",
                    "rendered": {
                      "text": ".PHONY: coverage\ncoverage:\n\tgo test -v ./... -covermode=count -coverprofile=coverage.out.tmp -timeout=30s\n\tcat coverage.out.tmp | grep -v \"github.com/kyverno/policy-reporter/cmd/\" | grep -v \"github.com/kyverno/policy-reporter/main.go\" | grep -v \"github.com/kyverno/policy-reporter/pkg/crd/\" > coverage.out\n\trm coverage.out.tmp\n\n.PHONY: build\n",
                      "markdown": "`.PHONY: coverage\ncoverage:\n\tgo test -v ./... -covermode=count -coverprofile=coverage.out.tmp -timeout=30s\n\tcat coverage.out.tmp | grep -v \"github.com/kyverno/policy-reporter/cmd/\" | grep -v \"github.com/kyverno/policy-reporter/main.go\" | grep -v \"github.com/kyverno/policy-reporter/pkg/crd/\" > coverage.out\n\trm coverage.out.tmp\n\n.PHONY: build\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/Makefile"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 5,
                  "endLine": 139,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t@git --no-pager diff -- charts\n\t@echo 'If this test fails, it is because the git diff is non-empty after running \"make codegen-helm-docs\".' >&2\n\t@echo 'To correct this, locally run \"make codegen-helm-docs\", commit the changes, and re-run tests.' >&2\n\t@git diff --quiet --exit-code -- charts\n\nall: build\n\n",
                    "rendered": {
                      "text": "\t@git --no-pager diff -- charts\n\t@echo 'If this test fails, it is because the git diff is non-empty after running \"make codegen-helm-docs\".' >&2\n\t@echo 'To correct this, locally run \"make codegen-helm-docs\", commit the changes, and re-run tests.' >&2\n\t@git diff --quiet --exit-code -- charts\n\nall: build\n\n",
                      "markdown": "`\t@git --no-pager diff -- charts\n\t@echo 'If this test fails, it is because the git diff is non-empty after running \"make codegen-helm-docs\".' >&2\n\t@echo 'To correct this, locally run \"make codegen-helm-docs\", commit the changes, and re-run tests.' >&2\n\t@git diff --quiet --exit-code -- charts\n\nall: build\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/Makefile"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 45,
                  "endLine": 137,
                  "endColumn": 50,
                  "snippet": {
                    "text": "verify-helm-docs: codegen-helm-docs ## Check Helm charts are up to date\n\t@echo Checking helm charts are up to date... >&2\n\t@git --no-pager diff -- charts\n\t@echo 'If this test fails, it is because the git diff is non-empty after running \"make codegen-helm-docs\".' >&2\n\t@echo 'To correct this, locally run \"make codegen-helm-docs\", commit the changes, and re-run tests.' >&2\n\t@git diff --quiet --exit-code -- charts\n\n",
                    "rendered": {
                      "text": "verify-helm-docs: codegen-helm-docs ## Check Helm charts are up to date\n\t@echo Checking helm charts are up to date... >&2\n\t@git --no-pager diff -- charts\n\t@echo 'If this test fails, it is because the git diff is non-empty after running \"make codegen-helm-docs\".' >&2\n\t@echo 'To correct this, locally run \"make codegen-helm-docs\", commit the changes, and re-run tests.' >&2\n\t@git diff --quiet --exit-code -- charts\n\n",
                      "markdown": "`verify-helm-docs: codegen-helm-docs ## Check Helm charts are up to date\n\t@echo Checking helm charts are up to date... >&2\n\t@git --no-pager diff -- charts\n\t@echo 'If this test fails, it is because the git diff is non-empty after running \"make codegen-helm-docs\".' >&2\n\t@echo 'To correct this, locally run \"make codegen-helm-docs\", commit the changes, and re-run tests.' >&2\n\t@git diff --quiet --exit-code -- charts\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/Makefile"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 16,
                  "endLine": 136,
                  "endColumn": 22,
                  "snippet": {
                    "text": ".PHONY: verify-helm-docs\nverify-helm-docs: codegen-helm-docs ## Check Helm charts are up to date\n\t@echo Checking helm charts are up to date... >&2\n\t@git --no-pager diff -- charts\n\t@echo 'If this test fails, it is because the git diff is non-empty after running \"make codegen-helm-docs\".' >&2\n\t@echo 'To correct this, locally run \"make codegen-helm-docs\", commit the changes, and re-run tests.' >&2\n\t@git diff --quiet --exit-code -- charts\n",
                    "rendered": {
                      "text": ".PHONY: verify-helm-docs\nverify-helm-docs: codegen-helm-docs ## Check Helm charts are up to date\n\t@echo Checking helm charts are up to date... >&2\n\t@git --no-pager diff -- charts\n\t@echo 'If this test fails, it is because the git diff is non-empty after running \"make codegen-helm-docs\".' >&2\n\t@echo 'To correct this, locally run \"make codegen-helm-docs\", commit the changes, and re-run tests.' >&2\n\t@git diff --quiet --exit-code -- charts\n",
                      "markdown": "`.PHONY: verify-helm-docs\nverify-helm-docs: codegen-helm-docs ## Check Helm charts are up to date\n\t@echo Checking helm charts are up to date... >&2\n\t@git --no-pager diff -- charts\n\t@echo 'If this test fails, it is because the git diff is non-empty after running \"make codegen-helm-docs\".' >&2\n\t@echo 'To correct this, locally run \"make codegen-helm-docs\", commit the changes, and re-run tests.' >&2\n\t@git diff --quiet --exit-code -- charts\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/Makefile"
                },
                "region": {
                  "startLine": 91,
                  "startColumn": 7,
                  "endLine": 92,
                  "snippet": {
                    "text": "\t@echo \"Running gofumpt\"\n\t@$(GOFUMPT) -w .\n\n.PHONY: fmt\nfmt: gci gofumpt\n\n.PHONY: install-tools\ninstall-tools: $(TOOLS) ## Install tools\n",
                    "rendered": {
                      "text": "\t@echo \"Running gofumpt\"\n\t@$(GOFUMPT) -w .\n\n.PHONY: fmt\nfmt: gci gofumpt\n\n.PHONY: install-tools\ninstall-tools: $(TOOLS) ## Install tools\n",
                      "markdown": "`\t@echo \"Running gofumpt\"\n\t@$(GOFUMPT) -w .\n\n.PHONY: fmt\nfmt: gci gofumpt\n\n.PHONY: install-tools\ninstall-tools: $(TOOLS) ## Install tools\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/Makefile"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 33,
                  "endLine": 21,
                  "endColumn": 38,
                  "snippet": {
                    "text": "GIT_SHA             := $(shell git rev-parse HEAD)\nTIMESTAMP           := $(shell date '+%Y-%m-%d_%I:%M:%S%p')\nGOOS                ?= $(shell go env GOOS)\nGOARCH              ?= $(shell go env GOARCH)\nREGISTRY            ?= ghcr.io\nOWNER               ?= kyverno\nKO_REGISTRY         := ko.local\n",
                    "rendered": {
                      "text": "GIT_SHA             := $(shell git rev-parse HEAD)\nTIMESTAMP           := $(shell date '+%Y-%m-%d_%I:%M:%S%p')\nGOOS                ?= $(shell go env GOOS)\nGOARCH              ?= $(shell go env GOARCH)\nREGISTRY            ?= ghcr.io\nOWNER               ?= kyverno\nKO_REGISTRY         := ko.local\n",
                      "markdown": "`GIT_SHA             := $(shell git rev-parse HEAD)\nTIMESTAMP           := $(shell date '+%Y-%m-%d_%I:%M:%S%p')\nGOOS                ?= $(shell go env GOOS)\nGOARCH              ?= $(shell go env GOARCH)\nREGISTRY            ?= ghcr.io\nOWNER               ?= kyverno\nKO_REGISTRY         := ko.local\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/Makefile"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 33,
                  "endLine": 20,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\nGIT_SHA             := $(shell git rev-parse HEAD)\nTIMESTAMP           := $(shell date '+%Y-%m-%d_%I:%M:%S%p')\nGOOS                ?= $(shell go env GOOS)\nGOARCH              ?= $(shell go env GOARCH)\nREGISTRY            ?= ghcr.io\nOWNER               ?= kyverno\n",
                    "rendered": {
                      "text": "\nGIT_SHA             := $(shell git rev-parse HEAD)\nTIMESTAMP           := $(shell date '+%Y-%m-%d_%I:%M:%S%p')\nGOOS                ?= $(shell go env GOOS)\nGOARCH              ?= $(shell go env GOARCH)\nREGISTRY            ?= ghcr.io\nOWNER               ?= kyverno\n",
                      "markdown": "`\nGIT_SHA             := $(shell git rev-parse HEAD)\nTIMESTAMP           := $(shell date '+%Y-%m-%d_%I:%M:%S%p')\nGOOS                ?= $(shell go env GOOS)\nGOARCH              ?= $(shell go env GOARCH)\nREGISTRY            ?= ghcr.io\nOWNER               ?= kyverno\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/Makefile"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 30,
                  "endLine": 18,
                  "endColumn": 35,
                  "snippet": {
                    "text": "# VARIABLES #\n#############\n\nGIT_SHA             := $(shell git rev-parse HEAD)\nTIMESTAMP           := $(shell date '+%Y-%m-%d_%I:%M:%S%p')\nGOOS                ?= $(shell go env GOOS)\nGOARCH              ?= $(shell go env GOARCH)\n",
                    "rendered": {
                      "text": "# VARIABLES #\n#############\n\nGIT_SHA             := $(shell git rev-parse HEAD)\nTIMESTAMP           := $(shell date '+%Y-%m-%d_%I:%M:%S%p')\nGOOS                ?= $(shell go env GOOS)\nGOARCH              ?= $(shell go env GOARCH)\n",
                      "markdown": "`# VARIABLES #\n#############\n\nGIT_SHA             := $(shell git rev-parse HEAD)\nTIMESTAMP           := $(shell date '+%Y-%m-%d_%I:%M:%S%p')\nGOOS                ?= $(shell go env GOOS)\nGOARCH              ?= $(shell go env GOARCH)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/Makefile"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 26,
                  "endLine": 9,
                  "endColumn": 4,
                  "snippet": {
                    "text": "KIND_IMAGE           ?= kindest/node:v1.30.2\nKIND_NAME            ?= kyverno\nUSE_CONFIG           ?= standard,no-ingress,in-cluster,all-read-rbac\nKUBECONFIG           ?= \"\"\nPIP                  ?= \"pip3\"\nGO \t\t\t\t\t ?= go\nBUILD \t\t\t\t ?= build\nIMAGE_TAG \t\t\t ?= 3.0.0\n",
                    "rendered": {
                      "text": "KIND_IMAGE           ?= kindest/node:v1.30.2\nKIND_NAME            ?= kyverno\nUSE_CONFIG           ?= standard,no-ingress,in-cluster,all-read-rbac\nKUBECONFIG           ?= \"\"\nPIP                  ?= \"pip3\"\nGO \t\t\t\t\t ?= go\nBUILD \t\t\t\t ?= build\nIMAGE_TAG \t\t\t ?= 3.0.0\n",
                      "markdown": "`KIND_IMAGE           ?= kindest/node:v1.30.2\nKIND_NAME            ?= kyverno\nUSE_CONFIG           ?= standard,no-ingress,in-cluster,all-read-rbac\nKUBECONFIG           ?= \"\"\nPIP                  ?= \"pip3\"\nGO \t\t\t\t\t ?= go\nBUILD \t\t\t\t ?= build\nIMAGE_TAG \t\t\t ?= 3.0.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/listener/metrics/cache.go"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 23,
                  "endLine": 60,
                  "endColumn": 28,
                  "snippet": {
                    "text": "}\n\nfunc (c *Cache) GetReportLabels(id string) []*CacheItem {\n\tif item, ok := c.cache.Get(id); ok {\n\t\treturn item.([]*CacheItem)\n\t}\n\n",
                    "rendered": {
                      "text": "}\n\nfunc (c *Cache) GetReportLabels(id string) []*CacheItem {\n\tif item, ok := c.cache.Get(id); ok {\n\t\treturn item.([]*CacheItem)\n\t}\n\n",
                      "markdown": "`}\n\nfunc (c *Cache) GetReportLabels(id string) []*CacheItem {\n\tif item, ok := c.cache.Get(id); ok {\n\t\treturn item.([]*CacheItem)\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/resolver.go"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 33,
                  "endLine": 70,
                  "endColumn": 38,
                  "snippet": {
                    "text": "// APIServer resolver method\nfunc (r *Resolver) Server(ctx context.Context, options []api.ServerOption) (*api.Server, error) {\n\tif r.config.API.BasicAuth.SecretRef != \"\" {\n\t\tvalues, err := r.SecretClient().Get(ctx, r.config.API.BasicAuth.SecretRef)\n\t\tif err != nil {\n\t\t\tzap.L().Error(\"failed to load basic auth secret\", zap.Error(err))\n\t\t}\n",
                    "rendered": {
                      "text": "// APIServer resolver method\nfunc (r *Resolver) Server(ctx context.Context, options []api.ServerOption) (*api.Server, error) {\n\tif r.config.API.BasicAuth.SecretRef != \"\" {\n\t\tvalues, err := r.SecretClient().Get(ctx, r.config.API.BasicAuth.SecretRef)\n\t\tif err != nil {\n\t\t\tzap.L().Error(\"failed to load basic auth secret\", zap.Error(err))\n\t\t}\n",
                      "markdown": "`// APIServer resolver method\nfunc (r *Resolver) Server(ctx context.Context, options []api.ServerOption) (*api.Server, error) {\n\tif r.config.API.BasicAuth.SecretRef != \"\" {\n\t\tvalues, err := r.SecretClient().Get(ctx, r.config.API.BasicAuth.SecretRef)\n\t\tif err != nil {\n\t\t\tzap.L().Error(\"failed to load basic auth secret\", zap.Error(err))\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/resolver.go"
                },
                "region": {
                  "startLine": 583,
                  "startColumn": 29,
                  "endLine": 583,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\t\t\tgoredis.NewClient(&goredis.Options{\n\t\t\t\tAddr:     r.config.Redis.Address,\n\t\t\t\tUsername: r.config.Redis.Username,\n\t\t\t\tPassword: r.config.Redis.Password,\n\t\t\t\tDB:       r.config.Redis.Database,\n\t\t\t}),\n\t\t\t6*time.Hour,\n",
                    "rendered": {
                      "text": "\t\t\tgoredis.NewClient(&goredis.Options{\n\t\t\t\tAddr:     r.config.Redis.Address,\n\t\t\t\tUsername: r.config.Redis.Username,\n\t\t\t\tPassword: r.config.Redis.Password,\n\t\t\t\tDB:       r.config.Redis.Database,\n\t\t\t}),\n\t\t\t6*time.Hour,\n",
                      "markdown": "`\t\t\tgoredis.NewClient(&goredis.Options{\n\t\t\t\tAddr:     r.config.Redis.Address,\n\t\t\t\tUsername: r.config.Redis.Username,\n\t\t\t\tPassword: r.config.Redis.Password,\n\t\t\t\tDB:       r.config.Redis.Database,\n\t\t\t}),\n\t\t\t6*time.Hour,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/resolver.go"
                },
                "region": {
                  "startLine": 583,
                  "startColumn": 4,
                  "endLine": 583,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\tgoredis.NewClient(&goredis.Options{\n\t\t\t\tAddr:     r.config.Redis.Address,\n\t\t\t\tUsername: r.config.Redis.Username,\n\t\t\t\tPassword: r.config.Redis.Password,\n\t\t\t\tDB:       r.config.Redis.Database,\n\t\t\t}),\n\t\t\t6*time.Hour,\n",
                    "rendered": {
                      "text": "\t\t\tgoredis.NewClient(&goredis.Options{\n\t\t\t\tAddr:     r.config.Redis.Address,\n\t\t\t\tUsername: r.config.Redis.Username,\n\t\t\t\tPassword: r.config.Redis.Password,\n\t\t\t\tDB:       r.config.Redis.Database,\n\t\t\t}),\n\t\t\t6*time.Hour,\n",
                      "markdown": "`\t\t\tgoredis.NewClient(&goredis.Options{\n\t\t\t\tAddr:     r.config.Redis.Address,\n\t\t\t\tUsername: r.config.Redis.Username,\n\t\t\t\tPassword: r.config.Redis.Password,\n\t\t\t\tDB:       r.config.Redis.Database,\n\t\t\t}),\n\t\t\t6*time.Hour,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/resolver.go"
                },
                "region": {
                  "startLine": 518,
                  "startColumn": 24,
                  "endLine": 518,
                  "endColumn": 32,
                  "snippet": {
                    "text": "\tserver.Host = smtp.Host\n\tserver.Port = smtp.Port\n\tserver.Username = smtp.Username\n\tserver.Password = smtp.Password\n\tserver.ConnectTimeout = 10 * time.Second\n\tserver.SendTimeout = 10 * time.Second\n\tserver.Encryption = email.EncryptionFromString(smtp.Encryption)\n",
                    "rendered": {
                      "text": "\tserver.Host = smtp.Host\n\tserver.Port = smtp.Port\n\tserver.Username = smtp.Username\n\tserver.Password = smtp.Password\n\tserver.ConnectTimeout = 10 * time.Second\n\tserver.SendTimeout = 10 * time.Second\n\tserver.Encryption = email.EncryptionFromString(smtp.Encryption)\n",
                      "markdown": "`\tserver.Host = smtp.Host\n\tserver.Port = smtp.Port\n\tserver.Username = smtp.Username\n\tserver.Password = smtp.Password\n\tserver.ConnectTimeout = 10 * time.Second\n\tserver.SendTimeout = 10 * time.Second\n\tserver.Encryption = email.EncryptionFromString(smtp.Encryption)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/resolver.go"
                },
                "region": {
                  "startLine": 518,
                  "startColumn": 8,
                  "endLine": 518,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\tserver.Host = smtp.Host\n\tserver.Port = smtp.Port\n\tserver.Username = smtp.Username\n\tserver.Password = smtp.Password\n\tserver.ConnectTimeout = 10 * time.Second\n\tserver.SendTimeout = 10 * time.Second\n\tserver.Encryption = email.EncryptionFromString(smtp.Encryption)\n",
                    "rendered": {
                      "text": "\tserver.Host = smtp.Host\n\tserver.Port = smtp.Port\n\tserver.Username = smtp.Username\n\tserver.Password = smtp.Password\n\tserver.ConnectTimeout = 10 * time.Second\n\tserver.SendTimeout = 10 * time.Second\n\tserver.Encryption = email.EncryptionFromString(smtp.Encryption)\n",
                      "markdown": "`\tserver.Host = smtp.Host\n\tserver.Port = smtp.Port\n\tserver.Username = smtp.Username\n\tserver.Password = smtp.Password\n\tserver.ConnectTimeout = 10 * time.Second\n\tserver.SendTimeout = 10 * time.Second\n\tserver.Encryption = email.EncryptionFromString(smtp.Encryption)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/resolver.go"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 36,
                  "endLine": 96,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\tif r.config.API.BasicAuth.Username != \"\" && r.config.API.BasicAuth.Password != \"\" {\n\t\tdefaults = append(defaults, api.WithBasicAuth(api.BasicAuth{\n\t\t\tUsername: r.config.API.BasicAuth.Username,\n\t\t\tPassword: r.config.API.BasicAuth.Password,\n\t\t}))\n\n\t\tzap.L().Info(\"API BasicAuth enabled\")\n",
                    "rendered": {
                      "text": "\tif r.config.API.BasicAuth.Username != \"\" && r.config.API.BasicAuth.Password != \"\" {\n\t\tdefaults = append(defaults, api.WithBasicAuth(api.BasicAuth{\n\t\t\tUsername: r.config.API.BasicAuth.Username,\n\t\t\tPassword: r.config.API.BasicAuth.Password,\n\t\t}))\n\n\t\tzap.L().Info(\"API BasicAuth enabled\")\n",
                      "markdown": "`\tif r.config.API.BasicAuth.Username != \"\" && r.config.API.BasicAuth.Password != \"\" {\n\t\tdefaults = append(defaults, api.WithBasicAuth(api.BasicAuth{\n\t\t\tUsername: r.config.API.BasicAuth.Username,\n\t\t\tPassword: r.config.API.BasicAuth.Password,\n\t\t}))\n\n\t\tzap.L().Info(\"API BasicAuth enabled\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/resolver.go"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 3,
                  "endLine": 96,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\tif r.config.API.BasicAuth.Username != \"\" && r.config.API.BasicAuth.Password != \"\" {\n\t\tdefaults = append(defaults, api.WithBasicAuth(api.BasicAuth{\n\t\t\tUsername: r.config.API.BasicAuth.Username,\n\t\t\tPassword: r.config.API.BasicAuth.Password,\n\t\t}))\n\n\t\tzap.L().Info(\"API BasicAuth enabled\")\n",
                    "rendered": {
                      "text": "\tif r.config.API.BasicAuth.Username != \"\" && r.config.API.BasicAuth.Password != \"\" {\n\t\tdefaults = append(defaults, api.WithBasicAuth(api.BasicAuth{\n\t\t\tUsername: r.config.API.BasicAuth.Username,\n\t\t\tPassword: r.config.API.BasicAuth.Password,\n\t\t}))\n\n\t\tzap.L().Info(\"API BasicAuth enabled\")\n",
                      "markdown": "`\tif r.config.API.BasicAuth.Username != \"\" && r.config.API.BasicAuth.Password != \"\" {\n\t\tdefaults = append(defaults, api.WithBasicAuth(api.BasicAuth{\n\t\t\tUsername: r.config.API.BasicAuth.Username,\n\t\t\tPassword: r.config.API.BasicAuth.Password,\n\t\t}))\n\n\t\tzap.L().Info(\"API BasicAuth enabled\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/resolver.go"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 68,
                  "endLine": 93,
                  "endColumn": 76,
                  "snippet": {
                    "text": "\t\tdefaults = append(defaults, api.WithRecovery())\n\t}\n\n\tif r.config.API.BasicAuth.Username != \"\" && r.config.API.BasicAuth.Password != \"\" {\n\t\tdefaults = append(defaults, api.WithBasicAuth(api.BasicAuth{\n\t\t\tUsername: r.config.API.BasicAuth.Username,\n\t\t\tPassword: r.config.API.BasicAuth.Password,\n",
                    "rendered": {
                      "text": "\t\tdefaults = append(defaults, api.WithRecovery())\n\t}\n\n\tif r.config.API.BasicAuth.Username != \"\" && r.config.API.BasicAuth.Password != \"\" {\n\t\tdefaults = append(defaults, api.WithBasicAuth(api.BasicAuth{\n\t\t\tUsername: r.config.API.BasicAuth.Username,\n\t\t\tPassword: r.config.API.BasicAuth.Password,\n",
                      "markdown": "`\t\tdefaults = append(defaults, api.WithRecovery())\n\t}\n\n\tif r.config.API.BasicAuth.Username != \"\" && r.config.API.BasicAuth.Password != \"\" {\n\t\tdefaults = append(defaults, api.WithBasicAuth(api.BasicAuth{\n\t\t\tUsername: r.config.API.BasicAuth.Username,\n\t\t\tPassword: r.config.API.BasicAuth.Password,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/resolver.go"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 44,
                  "endLine": 79,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\t\t\tr.config.API.BasicAuth.Username = values.Username\n\t\t}\n\t\tif values.Password != \"\" {\n\t\t\tr.config.API.BasicAuth.Password = values.Password\n\t\t}\n\t}\n\n",
                    "rendered": {
                      "text": "\t\t\tr.config.API.BasicAuth.Username = values.Username\n\t\t}\n\t\tif values.Password != \"\" {\n\t\t\tr.config.API.BasicAuth.Password = values.Password\n\t\t}\n\t}\n\n",
                      "markdown": "`\t\t\tr.config.API.BasicAuth.Username = values.Username\n\t\t}\n\t\tif values.Password != \"\" {\n\t\t\tr.config.API.BasicAuth.Password = values.Password\n\t\t}\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/resolver.go"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 26,
                  "endLine": 79,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\t\t\tr.config.API.BasicAuth.Username = values.Username\n\t\t}\n\t\tif values.Password != \"\" {\n\t\t\tr.config.API.BasicAuth.Password = values.Password\n\t\t}\n\t}\n\n",
                    "rendered": {
                      "text": "\t\t\tr.config.API.BasicAuth.Username = values.Username\n\t\t}\n\t\tif values.Password != \"\" {\n\t\t\tr.config.API.BasicAuth.Password = values.Password\n\t\t}\n\t}\n\n",
                      "markdown": "`\t\t\tr.config.API.BasicAuth.Username = values.Username\n\t\t}\n\t\tif values.Password != \"\" {\n\t\t\tr.config.API.BasicAuth.Password = values.Password\n\t\t}\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/resolver.go"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 12,
                  "endLine": 78,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\tif values.Username != \"\" {\n\t\t\tr.config.API.BasicAuth.Username = values.Username\n\t\t}\n\t\tif values.Password != \"\" {\n\t\t\tr.config.API.BasicAuth.Password = values.Password\n\t\t}\n\t}\n",
                    "rendered": {
                      "text": "\t\tif values.Username != \"\" {\n\t\t\tr.config.API.BasicAuth.Username = values.Username\n\t\t}\n\t\tif values.Password != \"\" {\n\t\t\tr.config.API.BasicAuth.Password = values.Password\n\t\t}\n\t}\n",
                      "markdown": "`\t\tif values.Username != \"\" {\n\t\t\tr.config.API.BasicAuth.Username = values.Username\n\t\t}\n\t\tif values.Password != \"\" {\n\t\t\tr.config.API.BasicAuth.Password = values.Password\n\t\t}\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/resolver.go"
                },
                "region": {
                  "startLine": 17,
                  "endLine": 17,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\tgocache \"github.com/patrickmn/go-cache\"\n\t\"github.com/uptrace/bun\"\n\t\"github.com/uptrace/bun/dialect\"\n\tmail \"github.com/xhit/go-simple-mail/v2\"\n\t\"go.uber.org/zap\"\n\t\"go.uber.org/zap/zapcore\"\n\tk8s \"k8s.io/client-go/kubernetes\"\n",
                    "rendered": {
                      "text": "\tgocache \"github.com/patrickmn/go-cache\"\n\t\"github.com/uptrace/bun\"\n\t\"github.com/uptrace/bun/dialect\"\n\tmail \"github.com/xhit/go-simple-mail/v2\"\n\t\"go.uber.org/zap\"\n\t\"go.uber.org/zap/zapcore\"\n\tk8s \"k8s.io/client-go/kubernetes\"\n",
                      "markdown": "`\tgocache \"github.com/patrickmn/go-cache\"\n\t\"github.com/uptrace/bun\"\n\t\"github.com/uptrace/bun/dialect\"\n\tmail \"github.com/xhit/go-simple-mail/v2\"\n\t\"go.uber.org/zap\"\n\t\"go.uber.org/zap/zapcore\"\n\tk8s \"k8s.io/client-go/kubernetes\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/resolver_test.go"
                },
                "region": {
                  "startLine": 352,
                  "startColumn": 60,
                  "endLine": 352,
                  "endColumn": 68,
                  "snippet": {
                    "text": "func Test_ResolveAPIServer(t *testing.T) {\n\tresolver := config.NewResolver(&config.Config{\n\t\tAPI: config.API{\n\t\t\tBasicAuth: config.BasicAuth{Username: \"user\", Password: \"password\"},\n\t\t},\n\t}, &rest.Config{})\n\n",
                    "rendered": {
                      "text": "func Test_ResolveAPIServer(t *testing.T) {\n\tresolver := config.NewResolver(&config.Config{\n\t\tAPI: config.API{\n\t\t\tBasicAuth: config.BasicAuth{Username: \"user\", Password: \"password\"},\n\t\t},\n\t}, &rest.Config{})\n\n",
                      "markdown": "`func Test_ResolveAPIServer(t *testing.T) {\n\tresolver := config.NewResolver(&config.Config{\n\t\tAPI: config.API{\n\t\t\tBasicAuth: config.BasicAuth{Username: \"user\", Password: \"password\"},\n\t\t},\n\t}, &rest.Config{})\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/resolver_test.go"
                },
                "region": {
                  "startLine": 352,
                  "startColumn": 49,
                  "endLine": 352,
                  "endColumn": 57,
                  "snippet": {
                    "text": "func Test_ResolveAPIServer(t *testing.T) {\n\tresolver := config.NewResolver(&config.Config{\n\t\tAPI: config.API{\n\t\t\tBasicAuth: config.BasicAuth{Username: \"user\", Password: \"password\"},\n\t\t},\n\t}, &rest.Config{})\n\n",
                    "rendered": {
                      "text": "func Test_ResolveAPIServer(t *testing.T) {\n\tresolver := config.NewResolver(&config.Config{\n\t\tAPI: config.API{\n\t\t\tBasicAuth: config.BasicAuth{Username: \"user\", Password: \"password\"},\n\t\t},\n\t}, &rest.Config{})\n\n",
                      "markdown": "`func Test_ResolveAPIServer(t *testing.T) {\n\tresolver := config.NewResolver(&config.Config{\n\t\tAPI: config.API{\n\t\t\tBasicAuth: config.BasicAuth{Username: \"user\", Password: \"password\"},\n\t\t},\n\t}, &rest.Config{})\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/resolver_test.go"
                },
                "region": {
                  "startLine": 217,
                  "startColumn": 16,
                  "endLine": 217,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t\t\tHost:       \"localhost\",\n\t\t\tPort:       465,\n\t\t\tUsername:   \"policy-reporter@kyverno.io\",\n\t\t\tPassword:   \"password\",\n\t\t\tFrom:       \"policy-reporter@kyverno.io\",\n\t\t\tEncryption: \"ssl/tls\",\n\t\t},\n",
                    "rendered": {
                      "text": "\t\t\tHost:       \"localhost\",\n\t\t\tPort:       465,\n\t\t\tUsername:   \"policy-reporter@kyverno.io\",\n\t\t\tPassword:   \"password\",\n\t\t\tFrom:       \"policy-reporter@kyverno.io\",\n\t\t\tEncryption: \"ssl/tls\",\n\t\t},\n",
                      "markdown": "`\t\t\tHost:       \"localhost\",\n\t\t\tPort:       465,\n\t\t\tUsername:   \"policy-reporter@kyverno.io\",\n\t\t\tPassword:   \"password\",\n\t\t\tFrom:       \"policy-reporter@kyverno.io\",\n\t\t\tEncryption: \"ssl/tls\",\n\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/resolver_test.go"
                },
                "region": {
                  "startLine": 217,
                  "startColumn": 3,
                  "endLine": 217,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\t\tHost:       \"localhost\",\n\t\t\tPort:       465,\n\t\t\tUsername:   \"policy-reporter@kyverno.io\",\n\t\t\tPassword:   \"password\",\n\t\t\tFrom:       \"policy-reporter@kyverno.io\",\n\t\t\tEncryption: \"ssl/tls\",\n\t\t},\n",
                    "rendered": {
                      "text": "\t\t\tHost:       \"localhost\",\n\t\t\tPort:       465,\n\t\t\tUsername:   \"policy-reporter@kyverno.io\",\n\t\t\tPassword:   \"password\",\n\t\t\tFrom:       \"policy-reporter@kyverno.io\",\n\t\t\tEncryption: \"ssl/tls\",\n\t\t},\n",
                      "markdown": "`\t\t\tHost:       \"localhost\",\n\t\t\tPort:       465,\n\t\t\tUsername:   \"policy-reporter@kyverno.io\",\n\t\t\tPassword:   \"password\",\n\t\t\tFrom:       \"policy-reporter@kyverno.io\",\n\t\t\tEncryption: \"ssl/tls\",\n\t\t},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/config.go"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 37,
                  "endLine": 147,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\tType          string `mapstructure:\"type\"`\n\tDSN           string `mapstructure:\"dsn\"`\n\tUsername      string `mapstructure:\"username\"`\n\tPassword      string `mapstructure:\"password\"`\n\tDatabase      string `mapstructure:\"database\"`\n\tHost          string `mapstructure:\"host\"`\n\tEnableSSL     bool   `mapstructure:\"enableSSL\"`\n",
                    "rendered": {
                      "text": "\tType          string `mapstructure:\"type\"`\n\tDSN           string `mapstructure:\"dsn\"`\n\tUsername      string `mapstructure:\"username\"`\n\tPassword      string `mapstructure:\"password\"`\n\tDatabase      string `mapstructure:\"database\"`\n\tHost          string `mapstructure:\"host\"`\n\tEnableSSL     bool   `mapstructure:\"enableSSL\"`\n",
                      "markdown": "`\tType          string `mapstructure:\"type\"`\n\tDSN           string `mapstructure:\"dsn\"`\n\tUsername      string `mapstructure:\"username\"`\n\tPassword      string `mapstructure:\"password\"`\n\tDatabase      string `mapstructure:\"database\"`\n\tHost          string `mapstructure:\"host\"`\n\tEnableSSL     bool   `mapstructure:\"enableSSL\"`\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/config.go"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 1,
                  "endLine": 147,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tType          string `mapstructure:\"type\"`\n\tDSN           string `mapstructure:\"dsn\"`\n\tUsername      string `mapstructure:\"username\"`\n\tPassword      string `mapstructure:\"password\"`\n\tDatabase      string `mapstructure:\"database\"`\n\tHost          string `mapstructure:\"host\"`\n\tEnableSSL     bool   `mapstructure:\"enableSSL\"`\n",
                    "rendered": {
                      "text": "\tType          string `mapstructure:\"type\"`\n\tDSN           string `mapstructure:\"dsn\"`\n\tUsername      string `mapstructure:\"username\"`\n\tPassword      string `mapstructure:\"password\"`\n\tDatabase      string `mapstructure:\"database\"`\n\tHost          string `mapstructure:\"host\"`\n\tEnableSSL     bool   `mapstructure:\"enableSSL\"`\n",
                      "markdown": "`\tType          string `mapstructure:\"type\"`\n\tDSN           string `mapstructure:\"dsn\"`\n\tUsername      string `mapstructure:\"username\"`\n\tPassword      string `mapstructure:\"password\"`\n\tDatabase      string `mapstructure:\"database\"`\n\tHost          string `mapstructure:\"host\"`\n\tEnableSSL     bool   `mapstructure:\"enableSSL\"`\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/config.go"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 32,
                  "endLine": 113,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\tAddress  string `mapstructure:\"address\"`\n\tPrefix   string `mapstructure:\"prefix\"`\n\tUsername string `mapstructure:\"username\"`\n\tPassword string `mapstructure:\"password\"`\n\tDatabase int    `mapstructure:\"database\"`\n}\n\n",
                    "rendered": {
                      "text": "\tAddress  string `mapstructure:\"address\"`\n\tPrefix   string `mapstructure:\"prefix\"`\n\tUsername string `mapstructure:\"username\"`\n\tPassword string `mapstructure:\"password\"`\n\tDatabase int    `mapstructure:\"database\"`\n}\n\n",
                      "markdown": "`\tAddress  string `mapstructure:\"address\"`\n\tPrefix   string `mapstructure:\"prefix\"`\n\tUsername string `mapstructure:\"username\"`\n\tPassword string `mapstructure:\"password\"`\n\tDatabase int    `mapstructure:\"database\"`\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/config.go"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 1,
                  "endLine": 113,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tAddress  string `mapstructure:\"address\"`\n\tPrefix   string `mapstructure:\"prefix\"`\n\tUsername string `mapstructure:\"username\"`\n\tPassword string `mapstructure:\"password\"`\n\tDatabase int    `mapstructure:\"database\"`\n}\n\n",
                    "rendered": {
                      "text": "\tAddress  string `mapstructure:\"address\"`\n\tPrefix   string `mapstructure:\"prefix\"`\n\tUsername string `mapstructure:\"username\"`\n\tPassword string `mapstructure:\"password\"`\n\tDatabase int    `mapstructure:\"database\"`\n}\n\n",
                      "markdown": "`\tAddress  string `mapstructure:\"address\"`\n\tPrefix   string `mapstructure:\"prefix\"`\n\tUsername string `mapstructure:\"username\"`\n\tPassword string `mapstructure:\"password\"`\n\tDatabase int    `mapstructure:\"database\"`\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/config.go"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 33,
                  "endLine": 70,
                  "endColumn": 41,
                  "snippet": {
                    "text": "// BasicAuth configuration\ntype BasicAuth struct {\n\tUsername  string `mapstructure:\"username\"`\n\tPassword  string `mapstructure:\"password\"`\n\tSecretRef string `mapstructure:\"secretRef\"`\n}\n\n",
                    "rendered": {
                      "text": "// BasicAuth configuration\ntype BasicAuth struct {\n\tUsername  string `mapstructure:\"username\"`\n\tPassword  string `mapstructure:\"password\"`\n\tSecretRef string `mapstructure:\"secretRef\"`\n}\n\n",
                      "markdown": "`// BasicAuth configuration\ntype BasicAuth struct {\n\tUsername  string `mapstructure:\"username\"`\n\tPassword  string `mapstructure:\"password\"`\n\tSecretRef string `mapstructure:\"secretRef\"`\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/config.go"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 1,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "// BasicAuth configuration\ntype BasicAuth struct {\n\tUsername  string `mapstructure:\"username\"`\n\tPassword  string `mapstructure:\"password\"`\n\tSecretRef string `mapstructure:\"secretRef\"`\n}\n\n",
                    "rendered": {
                      "text": "// BasicAuth configuration\ntype BasicAuth struct {\n\tUsername  string `mapstructure:\"username\"`\n\tPassword  string `mapstructure:\"password\"`\n\tSecretRef string `mapstructure:\"secretRef\"`\n}\n\n",
                      "markdown": "`// BasicAuth configuration\ntype BasicAuth struct {\n\tUsername  string `mapstructure:\"username\"`\n\tPassword  string `mapstructure:\"password\"`\n\tSecretRef string `mapstructure:\"secretRef\"`\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/config.go"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 35,
                  "endLine": 38,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\tHost        string `mapstructure:\"host\"`\n\tPort        int    `mapstructure:\"port\"`\n\tUsername    string `mapstructure:\"username\"`\n\tPassword    string `mapstructure:\"password\"`\n\tFrom        string `mapstructure:\"from\"`\n\tEncryption  string `mapstructure:\"encryption\"`\n\tSkipTLS     bool   `mapstructure:\"skipTLS\"`\n",
                    "rendered": {
                      "text": "\tHost        string `mapstructure:\"host\"`\n\tPort        int    `mapstructure:\"port\"`\n\tUsername    string `mapstructure:\"username\"`\n\tPassword    string `mapstructure:\"password\"`\n\tFrom        string `mapstructure:\"from\"`\n\tEncryption  string `mapstructure:\"encryption\"`\n\tSkipTLS     bool   `mapstructure:\"skipTLS\"`\n",
                      "markdown": "`\tHost        string `mapstructure:\"host\"`\n\tPort        int    `mapstructure:\"port\"`\n\tUsername    string `mapstructure:\"username\"`\n\tPassword    string `mapstructure:\"password\"`\n\tFrom        string `mapstructure:\"from\"`\n\tEncryption  string `mapstructure:\"encryption\"`\n\tSkipTLS     bool   `mapstructure:\"skipTLS\"`\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/config.go"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tHost        string `mapstructure:\"host\"`\n\tPort        int    `mapstructure:\"port\"`\n\tUsername    string `mapstructure:\"username\"`\n\tPassword    string `mapstructure:\"password\"`\n\tFrom        string `mapstructure:\"from\"`\n\tEncryption  string `mapstructure:\"encryption\"`\n\tSkipTLS     bool   `mapstructure:\"skipTLS\"`\n",
                    "rendered": {
                      "text": "\tHost        string `mapstructure:\"host\"`\n\tPort        int    `mapstructure:\"port\"`\n\tUsername    string `mapstructure:\"username\"`\n\tPassword    string `mapstructure:\"password\"`\n\tFrom        string `mapstructure:\"from\"`\n\tEncryption  string `mapstructure:\"encryption\"`\n\tSkipTLS     bool   `mapstructure:\"skipTLS\"`\n",
                      "markdown": "`\tHost        string `mapstructure:\"host\"`\n\tPort        int    `mapstructure:\"port\"`\n\tUsername    string `mapstructure:\"username\"`\n\tPassword    string `mapstructure:\"password\"`\n\tFrom        string `mapstructure:\"from\"`\n\tEncryption  string `mapstructure:\"encryption\"`\n\tSkipTLS     bool   `mapstructure:\"skipTLS\"`\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/database/bun.go"
                },
                "region": {
                  "startLine": 27,
                  "endLine": 27,
                  "endColumn": 7,
                  "snippet": {
                    "text": "type Type = string\n\nconst (\n\tMySQL      Type = \"mysql\"\n\tMariaDB    Type = \"mariadb\"\n\tPostgreSQL Type = \"postgres\"\n\tSQLite     Type = \"sqlite\"\n",
                    "rendered": {
                      "text": "type Type = string\n\nconst (\n\tMySQL      Type = \"mysql\"\n\tMariaDB    Type = \"mariadb\"\n\tPostgreSQL Type = \"postgres\"\n\tSQLite     Type = \"sqlite\"\n",
                      "markdown": "`type Type = string\n\nconst (\n\tMySQL      Type = \"mysql\"\n\tMariaDB    Type = \"mariadb\"\n\tPostgreSQL Type = \"postgres\"\n\tSQLite     Type = \"sqlite\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/fixtures/target_results.go"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 75,
                  "endLine": 123,
                  "endColumn": 79,
                  "snippet": {
                    "text": "}\n\nvar DebugSendResult = v1alpha2.PolicyReportResult{\n\tMessage: \"validation error: label required. Rule app-label-required failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:  \"app-label-requirement\",\n\tResult:  v1alpha2.StatusFail,\n\tScored:  true,\n",
                    "rendered": {
                      "text": "}\n\nvar DebugSendResult = v1alpha2.PolicyReportResult{\n\tMessage: \"validation error: label required. Rule app-label-required failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:  \"app-label-requirement\",\n\tResult:  v1alpha2.StatusFail,\n\tScored:  true,\n",
                      "markdown": "`}\n\nvar DebugSendResult = v1alpha2.PolicyReportResult{\n\tMessage: \"validation error: label required. Rule app-label-required failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:  \"app-label-requirement\",\n\tResult:  v1alpha2.StatusFail,\n\tScored:  true,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/fixtures/target_results.go"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 75,
                  "endLine": 116,
                  "endColumn": 79,
                  "snippet": {
                    "text": "}\n\nvar InfoSendResult = v1alpha2.PolicyReportResult{\n\tMessage: \"validation error: label required. Rule app-label-required failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:  \"app-label-requirement\",\n\tResult:  v1alpha2.StatusFail,\n\tScored:  true,\n",
                    "rendered": {
                      "text": "}\n\nvar InfoSendResult = v1alpha2.PolicyReportResult{\n\tMessage: \"validation error: label required. Rule app-label-required failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:  \"app-label-requirement\",\n\tResult:  v1alpha2.StatusFail,\n\tScored:  true,\n",
                      "markdown": "`}\n\nvar InfoSendResult = v1alpha2.PolicyReportResult{\n\tMessage: \"validation error: label required. Rule app-label-required failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:  \"app-label-requirement\",\n\tResult:  v1alpha2.StatusFail,\n\tScored:  true,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/fixtures/target_results.go"
                },
                "region": {
                  "startLine": 109,
                  "startColumn": 75,
                  "endLine": 109,
                  "endColumn": 79,
                  "snippet": {
                    "text": "}\n\nvar CritcalSendResult = v1alpha2.PolicyReportResult{\n\tMessage: \"validation error: label required. Rule app-label-required failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:  \"app-label-requirement\",\n\tResult:  v1alpha2.StatusFail,\n\tScored:  true,\n",
                    "rendered": {
                      "text": "}\n\nvar CritcalSendResult = v1alpha2.PolicyReportResult{\n\tMessage: \"validation error: label required. Rule app-label-required failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:  \"app-label-requirement\",\n\tResult:  v1alpha2.StatusFail,\n\tScored:  true,\n",
                      "markdown": "`}\n\nvar CritcalSendResult = v1alpha2.PolicyReportResult{\n\tMessage: \"validation error: label required. Rule app-label-required failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:  \"app-label-requirement\",\n\tResult:  v1alpha2.StatusFail,\n\tScored:  true,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/fixtures/target_results.go"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 75,
                  "endLine": 102,
                  "endColumn": 79,
                  "snippet": {
                    "text": "}\n\nvar ErrorSendResult = v1alpha2.PolicyReportResult{\n\tMessage: \"validation error: label required. Rule app-label-required failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:  \"app-label-requirement\",\n\tResult:  v1alpha2.StatusFail,\n\tScored:  true,\n",
                    "rendered": {
                      "text": "}\n\nvar ErrorSendResult = v1alpha2.PolicyReportResult{\n\tMessage: \"validation error: label required. Rule app-label-required failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:  \"app-label-requirement\",\n\tResult:  v1alpha2.StatusFail,\n\tScored:  true,\n",
                      "markdown": "`}\n\nvar ErrorSendResult = v1alpha2.PolicyReportResult{\n\tMessage: \"validation error: label required. Rule app-label-required failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:  \"app-label-requirement\",\n\tResult:  v1alpha2.StatusFail,\n\tScored:  true,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/fixtures/target_results.go"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 110,
                  "endLine": 82,
                  "endColumn": 114,
                  "snippet": {
                    "text": "}\n\nvar MissingAPIVersionSendResult = v1alpha2.PolicyReportResult{\n\tMessage:   \"validation error: requests and limits required. Rule autogen-check-for-requests-and-limits failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:    \"require-requests-and-limits-required\",\n\tRule:      \"check-for-requests-and-limits\",\n\tTimestamp: v1.Timestamp{Seconds: seconds},\n",
                    "rendered": {
                      "text": "}\n\nvar MissingAPIVersionSendResult = v1alpha2.PolicyReportResult{\n\tMessage:   \"validation error: requests and limits required. Rule autogen-check-for-requests-and-limits failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:    \"require-requests-and-limits-required\",\n\tRule:      \"check-for-requests-and-limits\",\n\tTimestamp: v1.Timestamp{Seconds: seconds},\n",
                      "markdown": "`}\n\nvar MissingAPIVersionSendResult = v1alpha2.PolicyReportResult{\n\tMessage:   \"validation error: requests and limits required. Rule autogen-check-for-requests-and-limits failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:    \"require-requests-and-limits-required\",\n\tRule:      \"check-for-requests-and-limits\",\n\tTimestamp: v1.Timestamp{Seconds: seconds},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/fixtures/target_results.go"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 110,
                  "endLine": 62,
                  "endColumn": 114,
                  "snippet": {
                    "text": "}\n\nvar MissingUIDSendResult = v1alpha2.PolicyReportResult{\n\tMessage:   \"validation error: requests and limits required. Rule autogen-check-for-requests-and-limits failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:    \"require-requests-and-limits-required\",\n\tRule:      \"check-for-requests-and-limits\",\n\tTimestamp: v1.Timestamp{Seconds: seconds},\n",
                    "rendered": {
                      "text": "}\n\nvar MissingUIDSendResult = v1alpha2.PolicyReportResult{\n\tMessage:   \"validation error: requests and limits required. Rule autogen-check-for-requests-and-limits failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:    \"require-requests-and-limits-required\",\n\tRule:      \"check-for-requests-and-limits\",\n\tTimestamp: v1.Timestamp{Seconds: seconds},\n",
                      "markdown": "`}\n\nvar MissingUIDSendResult = v1alpha2.PolicyReportResult{\n\tMessage:   \"validation error: requests and limits required. Rule autogen-check-for-requests-and-limits failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:    \"require-requests-and-limits-required\",\n\tRule:      \"check-for-requests-and-limits\",\n\tTimestamp: v1.Timestamp{Seconds: seconds},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/fixtures/target_results.go"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 110,
                  "endLine": 42,
                  "endColumn": 114,
                  "snippet": {
                    "text": "}\n\nvar EnforceTargetSendResult = v1alpha2.PolicyReportResult{\n\tMessage:   \"validation error: requests and limits required. Rule autogen-check-for-requests-and-limits failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:    \"require-requests-and-limits-required\",\n\tRule:      \"check-for-requests-and-limits\",\n\tTimestamp: v1.Timestamp{Seconds: seconds},\n",
                    "rendered": {
                      "text": "}\n\nvar EnforceTargetSendResult = v1alpha2.PolicyReportResult{\n\tMessage:   \"validation error: requests and limits required. Rule autogen-check-for-requests-and-limits failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:    \"require-requests-and-limits-required\",\n\tRule:      \"check-for-requests-and-limits\",\n\tTimestamp: v1.Timestamp{Seconds: seconds},\n",
                      "markdown": "`}\n\nvar EnforceTargetSendResult = v1alpha2.PolicyReportResult{\n\tMessage:   \"validation error: requests and limits required. Rule autogen-check-for-requests-and-limits failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:    \"require-requests-and-limits-required\",\n\tRule:      \"check-for-requests-and-limits\",\n\tTimestamp: v1.Timestamp{Seconds: seconds},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/fixtures/target_results.go"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 75,
                  "endLine": 35,
                  "endColumn": 79,
                  "snippet": {
                    "text": "}\n\nvar MinimalTargetSendResult = v1alpha2.PolicyReportResult{\n\tMessage: \"validation error: label required. Rule app-label-required failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:  \"app-label-requirement\",\n\tResult:  v1alpha2.StatusFail,\n\tScored:  true,\n",
                    "rendered": {
                      "text": "}\n\nvar MinimalTargetSendResult = v1alpha2.PolicyReportResult{\n\tMessage: \"validation error: label required. Rule app-label-required failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:  \"app-label-requirement\",\n\tResult:  v1alpha2.StatusFail,\n\tScored:  true,\n",
                      "markdown": "`}\n\nvar MinimalTargetSendResult = v1alpha2.PolicyReportResult{\n\tMessage: \"validation error: label required. Rule app-label-required failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:  \"app-label-requirement\",\n\tResult:  v1alpha2.StatusFail,\n\tScored:  true,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/fixtures/target_results.go"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 110,
                  "endLine": 15,
                  "endColumn": 114,
                  "snippet": {
                    "text": "var seconds = time.Date(2021, time.February, 23, 15, 10, 0, 0, time.UTC).Unix()\n\nvar CompleteTargetSendResult = v1alpha2.PolicyReportResult{\n\tMessage:   \"validation error: requests and limits required. Rule autogen-check-for-requests-and-limits failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:    \"require-requests-and-limits-required\",\n\tRule:      \"autogen-check-for-requests-and-limits\",\n\tTimestamp: v1.Timestamp{Seconds: seconds},\n",
                    "rendered": {
                      "text": "var seconds = time.Date(2021, time.February, 23, 15, 10, 0, 0, time.UTC).Unix()\n\nvar CompleteTargetSendResult = v1alpha2.PolicyReportResult{\n\tMessage:   \"validation error: requests and limits required. Rule autogen-check-for-requests-and-limits failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:    \"require-requests-and-limits-required\",\n\tRule:      \"autogen-check-for-requests-and-limits\",\n\tTimestamp: v1.Timestamp{Seconds: seconds},\n",
                      "markdown": "`var seconds = time.Date(2021, time.February, 23, 15, 10, 0, 0, time.UTC).Unix()\n\nvar CompleteTargetSendResult = v1alpha2.PolicyReportResult{\n\tMessage:   \"validation error: requests and limits required. Rule autogen-check-for-requests-and-limits failed at path /spec/template/spec/containers/0/resources/requests/\",\n\tPolicy:    \"require-requests-and-limits-required\",\n\tRule:      \"autogen-check-for-requests-and-limits\",\n\tTimestamp: v1.Timestamp{Seconds: seconds},\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/plugins/trivy/_helpers.tpl"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 11,
                  "endLine": 10,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n{{/*\nCreate a default fully qualified app name.\nWe truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).\nIf release name contains chart name it will be used as a full name.\n*/}}\n{{- define \"trivy-plugin.fullname\" -}}\n",
                    "rendered": {
                      "text": "\n{{/*\nCreate a default fully qualified app name.\nWe truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).\nIf release name contains chart name it will be used as a full name.\n*/}}\n{{- define \"trivy-plugin.fullname\" -}}\n",
                      "markdown": "`\n{{/*\nCreate a default fully qualified app name.\nWe truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).\nIf release name contains chart name it will be used as a full name.\n*/}}\n{{- define \"trivy-plugin.fullname\" -}}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/plugins/trivy/_helpers.tpl"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 4,
                  "endLine": 2,
                  "endColumn": 7,
                  "snippet": {
                    "text": "{{/*\nExpand the name of the chart.\n*/}}\n{{- define \"trivy-plugin.name\" -}}\n{{ template \"policyreporter.name\" . }}-trivy-plugin\n",
                    "rendered": {
                      "text": "{{/*\nExpand the name of the chart.\n*/}}\n{{- define \"trivy-plugin.name\" -}}\n{{ template \"policyreporter.name\" . }}-trivy-plugin\n",
                      "markdown": "`{{/*\nExpand the name of the chart.\n*/}}\n{{- define \"trivy-plugin.name\" -}}\n{{ template \"policyreporter.name\" . }}-trivy-plugin\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/plugins/trivy/_helpers.tpl"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 22,
                  "endLine": 48,
                  "endColumn": 31,
                  "snippet": {
                    "text": "{{- end }}\n\n{{/*\nCreate the name of the service account to use\n*/}}\n{{- define \"trivy-plugin.serviceAccountName\" -}}\n{{- if .Values.plugin.trivy.serviceAccount.create }}\n",
                    "rendered": {
                      "text": "{{- end }}\n\n{{/*\nCreate the name of the service account to use\n*/}}\n{{- define \"trivy-plugin.serviceAccountName\" -}}\n{{- if .Values.plugin.trivy.serviceAccount.create }}\n",
                      "markdown": "`{{- end }}\n\n{{/*\nCreate the name of the service account to use\n*/}}\n{{- define \"trivy-plugin.serviceAccountName\" -}}\n{{- if .Values.plugin.trivy.serviceAccount.create }}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/plugins/trivy/_helpers.tpl"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 4,
                  "endLine": 2,
                  "endColumn": 7,
                  "snippet": {
                    "text": "{{/*\nExpand the name of the chart.\n*/}}\n{{- define \"trivy-plugin.name\" -}}\n{{ template \"policyreporter.name\" . }}-trivy-plugin\n",
                    "rendered": {
                      "text": "{{/*\nExpand the name of the chart.\n*/}}\n{{- define \"trivy-plugin.name\" -}}\n{{ template \"policyreporter.name\" . }}-trivy-plugin\n",
                      "markdown": "`{{/*\nExpand the name of the chart.\n*/}}\n{{- define \"trivy-plugin.name\" -}}\n{{ template \"policyreporter.name\" . }}-trivy-plugin\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.github/workflows/release-chart.yaml"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 10,
                  "endLine": 67,
                  "endColumn": 18,
                  "snippet": {
                    "text": "        with:\n          registry: ghcr.io\n          username: ${{ github.actor }}\n          password: ${{ secrets.GITHUB_TOKEN }}\n\n      - name: Set version\n        run: |\n",
                    "rendered": {
                      "text": "        with:\n          registry: ghcr.io\n          username: ${{ github.actor }}\n          password: ${{ secrets.GITHUB_TOKEN }}\n\n      - name: Set version\n        run: |\n",
                      "markdown": "`        with:\n          registry: ghcr.io\n          username: ${{ github.actor }}\n          password: ${{ secrets.GITHUB_TOKEN }}\n\n      - name: Set version\n        run: |\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.github/workflows/release-chart.yaml"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 10,
                  "endLine": 42,
                  "endColumn": 16,
                  "snippet": {
                    "text": "          gpg_dir=.cr-gpg\n          mkdir \"$gpg_dir\"\n          keyring=\"$gpg_dir/secring.gpg\"\n          base64 -d <<< \"$GPG_KEYRING_BASE64\" > \"$keyring\"\n          passphrase_file=\"$gpg_dir/passphrase\"\n          echo \"$GPG_PASSPHRASE\" > \"$passphrase_file\"\n          echo \"CR_PASSPHRASE_FILE=$passphrase_file\" >> \"$GITHUB_ENV\"\n",
                    "rendered": {
                      "text": "          gpg_dir=.cr-gpg\n          mkdir \"$gpg_dir\"\n          keyring=\"$gpg_dir/secring.gpg\"\n          base64 -d <<< \"$GPG_KEYRING_BASE64\" > \"$keyring\"\n          passphrase_file=\"$gpg_dir/passphrase\"\n          echo \"$GPG_PASSPHRASE\" > \"$passphrase_file\"\n          echo \"CR_PASSPHRASE_FILE=$passphrase_file\" >> \"$GITHUB_ENV\"\n",
                      "markdown": "`          gpg_dir=.cr-gpg\n          mkdir \"$gpg_dir\"\n          keyring=\"$gpg_dir/secring.gpg\"\n          base64 -d <<< \"$GPG_KEYRING_BASE64\" > \"$keyring\"\n          passphrase_file=\"$gpg_dir/passphrase\"\n          echo \"$GPG_PASSPHRASE\" > \"$passphrase_file\"\n          echo \"CR_PASSPHRASE_FILE=$passphrase_file\" >> \"$GITHUB_ENV\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.github/workflows/release-chart.yaml"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 50,
                  "endLine": 79,
                  "endColumn": 55,
                  "snippet": {
                    "text": "        run: |\n          set -e\n          output=$(helm push .cr-release-packages/policy-reporter-${{ env.VERSION }}.tgz oci://ghcr.io/${{github.repository_owner}}/charts 2>&1)\n          digest=$( echo \"$output\" | grep Digest | cut -c9-)\n          echo CR_DIGEST=$digest\n          echo \"CR_DIGEST=$digest\" >> \"$GITHUB_ENV\"\n\n",
                    "rendered": {
                      "text": "        run: |\n          set -e\n          output=$(helm push .cr-release-packages/policy-reporter-${{ env.VERSION }}.tgz oci://ghcr.io/${{github.repository_owner}}/charts 2>&1)\n          digest=$( echo \"$output\" | grep Digest | cut -c9-)\n          echo CR_DIGEST=$digest\n          echo \"CR_DIGEST=$digest\" >> \"$GITHUB_ENV\"\n\n",
                      "markdown": "`        run: |\n          set -e\n          output=$(helm push .cr-release-packages/policy-reporter-${{ env.VERSION }}.tgz oci://ghcr.io/${{github.repository_owner}}/charts 2>&1)\n          digest=$( echo \"$output\" | grep Digest | cut -c9-)\n          echo CR_DIGEST=$digest\n          echo \"CR_DIGEST=$digest\" >> \"$GITHUB_ENV\"\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.github/workflows/release-chart.yaml"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 36,
                  "endLine": 79,
                  "endColumn": 42,
                  "snippet": {
                    "text": "        run: |\n          set -e\n          output=$(helm push .cr-release-packages/policy-reporter-${{ env.VERSION }}.tgz oci://ghcr.io/${{github.repository_owner}}/charts 2>&1)\n          digest=$( echo \"$output\" | grep Digest | cut -c9-)\n          echo CR_DIGEST=$digest\n          echo \"CR_DIGEST=$digest\" >> \"$GITHUB_ENV\"\n\n",
                    "rendered": {
                      "text": "        run: |\n          set -e\n          output=$(helm push .cr-release-packages/policy-reporter-${{ env.VERSION }}.tgz oci://ghcr.io/${{github.repository_owner}}/charts 2>&1)\n          digest=$( echo \"$output\" | grep Digest | cut -c9-)\n          echo CR_DIGEST=$digest\n          echo \"CR_DIGEST=$digest\" >> \"$GITHUB_ENV\"\n\n",
                      "markdown": "`        run: |\n          set -e\n          output=$(helm push .cr-release-packages/policy-reporter-${{ env.VERSION }}.tgz oci://ghcr.io/${{github.repository_owner}}/charts 2>&1)\n          digest=$( echo \"$output\" | grep Digest | cut -c9-)\n          echo CR_DIGEST=$digest\n          echo \"CR_DIGEST=$digest\" >> \"$GITHUB_ENV\"\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.github/workflows/release-chart.yaml"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 9,
                  "endLine": 42,
                  "endColumn": 17,
                  "snippet": {
                    "text": "          gpg_dir=.cr-gpg\n          mkdir \"$gpg_dir\"\n          keyring=\"$gpg_dir/secring.gpg\"\n          base64 -d <<< \"$GPG_KEYRING_BASE64\" > \"$keyring\"\n          passphrase_file=\"$gpg_dir/passphrase\"\n          echo \"$GPG_PASSPHRASE\" > \"$passphrase_file\"\n          echo \"CR_PASSPHRASE_FILE=$passphrase_file\" >> \"$GITHUB_ENV\"\n",
                    "rendered": {
                      "text": "          gpg_dir=.cr-gpg\n          mkdir \"$gpg_dir\"\n          keyring=\"$gpg_dir/secring.gpg\"\n          base64 -d <<< \"$GPG_KEYRING_BASE64\" > \"$keyring\"\n          passphrase_file=\"$gpg_dir/passphrase\"\n          echo \"$GPG_PASSPHRASE\" > \"$passphrase_file\"\n          echo \"CR_PASSPHRASE_FILE=$passphrase_file\" >> \"$GITHUB_ENV\"\n",
                      "markdown": "`          gpg_dir=.cr-gpg\n          mkdir \"$gpg_dir\"\n          keyring=\"$gpg_dir/secring.gpg\"\n          base64 -d <<< \"$GPG_KEYRING_BASE64\" > \"$keyring\"\n          passphrase_file=\"$gpg_dir/passphrase\"\n          echo \"$GPG_PASSPHRASE\" > \"$passphrase_file\"\n          echo \"CR_PASSPHRASE_FILE=$passphrase_file\" >> \"$GITHUB_ENV\"\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.github/workflows/release-chart.yaml"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 9,
                  "endLine": 30,
                  "endColumn": 14,
                  "snippet": {
                    "text": "      - name: Configure Git\n        run: |\n          git config user.name \"$GITHUB_ACTOR\"\n          git config user.email \"$GITHUB_ACTOR@users.noreply.github.com\"\n\n      - name: Install Helm\n        uses: azure/setup-helm@fe7b79cd5ee1e45176fcad797de68ecaf3ca4814 # v4.2.0\n",
                    "rendered": {
                      "text": "      - name: Configure Git\n        run: |\n          git config user.name \"$GITHUB_ACTOR\"\n          git config user.email \"$GITHUB_ACTOR@users.noreply.github.com\"\n\n      - name: Install Helm\n        uses: azure/setup-helm@fe7b79cd5ee1e45176fcad797de68ecaf3ca4814 # v4.2.0\n",
                      "markdown": "`      - name: Configure Git\n        run: |\n          git config user.name \"$GITHUB_ACTOR\"\n          git config user.email \"$GITHUB_ACTOR@users.noreply.github.com\"\n\n      - name: Install Helm\n        uses: azure/setup-helm@fe7b79cd5ee1e45176fcad797de68ecaf3ca4814 # v4.2.0\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.github/workflows/release-chart.yaml"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 9,
                  "endLine": 29,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\n      - name: Configure Git\n        run: |\n          git config user.name \"$GITHUB_ACTOR\"\n          git config user.email \"$GITHUB_ACTOR@users.noreply.github.com\"\n\n      - name: Install Helm\n",
                    "rendered": {
                      "text": "\n      - name: Configure Git\n        run: |\n          git config user.name \"$GITHUB_ACTOR\"\n          git config user.email \"$GITHUB_ACTOR@users.noreply.github.com\"\n\n      - name: Install Helm\n",
                      "markdown": "`\n      - name: Configure Git\n        run: |\n          git config user.name \"$GITHUB_ACTOR\"\n          git config user.email \"$GITHUB_ACTOR@users.noreply.github.com\"\n\n      - name: Install Helm\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.github/workflows/release-chart.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 23,
                  "endLine": 28,
                  "snippet": {
                    "text": "          set -e\n          make verify-helm-docs\n\n      - name: Configure Git\n        run: |\n          git config user.name \"$GITHUB_ACTOR\"\n          git config user.email \"$GITHUB_ACTOR@users.noreply.github.com\"\n\n",
                    "rendered": {
                      "text": "          set -e\n          make verify-helm-docs\n\n      - name: Configure Git\n        run: |\n          git config user.name \"$GITHUB_ACTOR\"\n          git config user.email \"$GITHUB_ACTOR@users.noreply.github.com\"\n\n",
                      "markdown": "`          set -e\n          make verify-helm-docs\n\n      - name: Configure Git\n        run: |\n          git config user.name \"$GITHUB_ACTOR\"\n          git config user.email \"$GITHUB_ACTOR@users.noreply.github.com\"\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/Dockerfile"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 6,
                  "endLine": 12,
                  "endColumn": 11,
                  "snippet": {
                    "text": "    export GOARCH=$(echo ${TARGETPLATFORM} | cut -d / -f2)\n\nCOPY go.* ./\nRUN go env && go mod download\n\nCOPY . .\n\n",
                    "rendered": {
                      "text": "    export GOARCH=$(echo ${TARGETPLATFORM} | cut -d / -f2)\n\nCOPY go.* ./\nRUN go env && go mod download\n\nCOPY . .\n\n",
                      "markdown": "`    export GOARCH=$(echo ${TARGETPLATFORM} | cut -d / -f2)\n\nCOPY go.* ./\nRUN go env && go mod download\n\nCOPY . .\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/Dockerfile"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 44,
                  "endLine": 9,
                  "endColumn": 49,
                  "snippet": {
                    "text": "WORKDIR /app\n\nRUN export GOOS=$(echo ${TARGETPLATFORM} | cut -d / -f1) && \\\n    export GOARCH=$(echo ${TARGETPLATFORM} | cut -d / -f2)\n\nCOPY go.* ./\nRUN go env && go mod download\n",
                    "rendered": {
                      "text": "WORKDIR /app\n\nRUN export GOOS=$(echo ${TARGETPLATFORM} | cut -d / -f1) && \\\n    export GOARCH=$(echo ${TARGETPLATFORM} | cut -d / -f2)\n\nCOPY go.* ./\nRUN go env && go mod download\n",
                      "markdown": "`WORKDIR /app\n\nRUN export GOOS=$(echo ${TARGETPLATFORM} | cut -d / -f1) && \\\n    export GOARCH=$(echo ${TARGETPLATFORM} | cut -d / -f2)\n\nCOPY go.* ./\nRUN go env && go mod download\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/Dockerfile"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 42,
                  "endLine": 8,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\nWORKDIR /app\n\nRUN export GOOS=$(echo ${TARGETPLATFORM} | cut -d / -f1) && \\\n    export GOARCH=$(echo ${TARGETPLATFORM} | cut -d / -f2)\n\nCOPY go.* ./\n",
                    "rendered": {
                      "text": "\nWORKDIR /app\n\nRUN export GOOS=$(echo ${TARGETPLATFORM} | cut -d / -f1) && \\\n    export GOARCH=$(echo ${TARGETPLATFORM} | cut -d / -f2)\n\nCOPY go.* ./\n",
                      "markdown": "`\nWORKDIR /app\n\nRUN export GOOS=$(echo ${TARGETPLATFORM} | cut -d / -f1) && \\\n    export GOARCH=$(echo ${TARGETPLATFORM} | cut -d / -f2)\n\nCOPY go.* ./\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/cache/memory.go"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 22,
                  "endLine": 50,
                  "endColumn": 27,
                  "snippet": {
                    "text": "}\n\nfunc (c *inMemoryCache) getCache(id string) (*gocache.Cache, bool) {\n\tcache, ok := c.caches.Get(id)\n\tif !ok {\n\t\treturn nil, false\n\t}\n",
                    "rendered": {
                      "text": "}\n\nfunc (c *inMemoryCache) getCache(id string) (*gocache.Cache, bool) {\n\tcache, ok := c.caches.Get(id)\n\tif !ok {\n\t\treturn nil, false\n\t}\n",
                      "markdown": "`}\n\nfunc (c *inMemoryCache) getCache(id string) (*gocache.Cache, bool) {\n\tcache, ok := c.caches.Get(id)\n\tif !ok {\n\t\treturn nil, false\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/discord/discord_test.go"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 25,
                  "endLine": 57,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n",
                    "rendered": {
                      "text": "\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n",
                      "markdown": "`\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/discord/discord_test.go"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 31,
                  "endLine": 53,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\n\tt.Run(\"Send Minimal Result\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json; charset=utf-8\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n",
                    "rendered": {
                      "text": "\n\tt.Run(\"Send Minimal Result\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json; charset=utf-8\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n",
                      "markdown": "`\n\tt.Run(\"Send Minimal Result\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json; charset=utf-8\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/discord/discord_test.go"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n",
                    "rendered": {
                      "text": "\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n",
                      "markdown": "`\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/discord/discord_test.go"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 31,
                  "endLine": 28,
                  "endColumn": 36,
                  "snippet": {
                    "text": "func Test_LokiTarget(t *testing.T) {\n\tt.Run(\"Send Complete Result\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json; charset=utf-8\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n",
                    "rendered": {
                      "text": "func Test_LokiTarget(t *testing.T) {\n\tt.Run(\"Send Complete Result\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json; charset=utf-8\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n",
                      "markdown": "`func Test_LokiTarget(t *testing.T) {\n\tt.Run(\"Send Complete Result\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json; charset=utf-8\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/elasticsearch/elasticsearch_test.go"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 16,
                  "endLine": 71,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\t\t\tt.Errorf(\"Unexpected Host: %s\", url)\n\t\t\t}\n\n\t\t\tif req.Header.Get(\"Authorization\") != \"\" {\n\t\t\t\tt.Error(\"Expected Authentication header is not set\")\n\t\t\t}\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\tt.Errorf(\"Unexpected Host: %s\", url)\n\t\t\t}\n\n\t\t\tif req.Header.Get(\"Authorization\") != \"\" {\n\t\t\t\tt.Error(\"Expected Authentication header is not set\")\n\t\t\t}\n\t\t}\n",
                      "markdown": "`\t\t\t\tt.Errorf(\"Unexpected Host: %s\", url)\n\t\t\t}\n\n\t\t\tif req.Header.Get(\"Authorization\") != \"\" {\n\t\t\t\tt.Error(\"Expected Authentication header is not set\")\n\t\t\t}\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/elasticsearch/elasticsearch_test.go"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 16,
                  "endLine": 41,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\t\t\tt.Errorf(\"Unexpected Host: %s\", url)\n\t\t\t}\n\n\t\t\tif req.Header.Get(\"Authorization\") == \"\" {\n\t\t\t\tt.Error(\"Expected Authentication header for BasicAuth is set\")\n\t\t\t}\n\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\tt.Errorf(\"Unexpected Host: %s\", url)\n\t\t\t}\n\n\t\t\tif req.Header.Get(\"Authorization\") == \"\" {\n\t\t\t\tt.Error(\"Expected Authentication header for BasicAuth is set\")\n\t\t\t}\n\t\t}\n",
                      "markdown": "`\t\t\t\tt.Errorf(\"Unexpected Host: %s\", url)\n\t\t\t}\n\n\t\t\tif req.Header.Get(\"Authorization\") == \"\" {\n\t\t\t\tt.Error(\"Expected Authentication header for BasicAuth is set\")\n\t\t\t}\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/elasticsearch/elasticsearch_test.go"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 25,
                  "endLine": 33,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n",
                    "rendered": {
                      "text": "\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n",
                      "markdown": "`\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n\t\t\tif agend := req.Header.Get(\"User-Agent\"); agend != \"Policy-Reporter\" {\n\t\t\t\tt.Errorf(\"Unexpected Host: %s\", agend)\n\t\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/elasticsearch/elasticsearch_test.go"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 31,
                  "endLine": 29,
                  "endColumn": 36,
                  "snippet": {
                    "text": "func Test_ElasticsearchTarget(t *testing.T) {\n\tt.Run(\"Send with Annually Result\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json; charset=utf-8\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n",
                    "rendered": {
                      "text": "func Test_ElasticsearchTarget(t *testing.T) {\n\tt.Run(\"Send with Annually Result\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json; charset=utf-8\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n",
                      "markdown": "`func Test_ElasticsearchTarget(t *testing.T) {\n\tt.Run(\"Send with Annually Result\", func(t *testing.T) {\n\t\tcallback := func(req *http.Request) {\n\t\t\tif contentType := req.Header.Get(\"Content-Type\"); contentType != \"application/json; charset=utf-8\" {\n\t\t\t\tt.Errorf(\"Unexpected Content-Type: %s\", contentType)\n\t\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/elasticsearch/elasticsearch_test.go"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 18,
                  "endLine": 52,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t\t\t},\n\t\t\tHost:         \"http://localhost:9200\",\n\t\t\tUsername:     \"username\",\n\t\t\tPassword:     \"password\",\n\t\t\tApiKey:       \"ApiKey\",\n\t\t\tIndex:        \"policy-reporter\",\n\t\t\tRotation:     elasticsearch.Annually,\n",
                    "rendered": {
                      "text": "\t\t\t},\n\t\t\tHost:         \"http://localhost:9200\",\n\t\t\tUsername:     \"username\",\n\t\t\tPassword:     \"password\",\n\t\t\tApiKey:       \"ApiKey\",\n\t\t\tIndex:        \"policy-reporter\",\n\t\t\tRotation:     elasticsearch.Annually,\n",
                      "markdown": "`\t\t\t},\n\t\t\tHost:         \"http://localhost:9200\",\n\t\t\tUsername:     \"username\",\n\t\t\tPassword:     \"password\",\n\t\t\tApiKey:       \"ApiKey\",\n\t\t\tIndex:        \"policy-reporter\",\n\t\t\tRotation:     elasticsearch.Annually,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/elasticsearch/elasticsearch_test.go"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 3,
                  "endLine": 52,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\t\t},\n\t\t\tHost:         \"http://localhost:9200\",\n\t\t\tUsername:     \"username\",\n\t\t\tPassword:     \"password\",\n\t\t\tApiKey:       \"ApiKey\",\n\t\t\tIndex:        \"policy-reporter\",\n\t\t\tRotation:     elasticsearch.Annually,\n",
                    "rendered": {
                      "text": "\t\t\t},\n\t\t\tHost:         \"http://localhost:9200\",\n\t\t\tUsername:     \"username\",\n\t\t\tPassword:     \"password\",\n\t\t\tApiKey:       \"ApiKey\",\n\t\t\tIndex:        \"policy-reporter\",\n\t\t\tRotation:     elasticsearch.Annually,\n",
                      "markdown": "`\t\t\t},\n\t\t\tHost:         \"http://localhost:9200\",\n\t\t\tUsername:     \"username\",\n\t\t\tPassword:     \"password\",\n\t\t\tApiKey:       \"ApiKey\",\n\t\t\tIndex:        \"policy-reporter\",\n\t\t\tRotation:     elasticsearch.Annually,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/crd/client/clientset/versioned/fake/clientset_generated.go"
                },
                "region": {
                  "startLine": 67,
                  "endLine": 67,
                  "endColumn": 9,
                  "snippet": {
                    "text": "type Clientset struct {\n\ttesting.Fake\n\tdiscovery *fakediscovery.FakeDiscovery\n\ttracker   testing.ObjectTracker\n}\n\nfunc (c *Clientset) Discovery() discovery.DiscoveryInterface {\n",
                    "rendered": {
                      "text": "type Clientset struct {\n\ttesting.Fake\n\tdiscovery *fakediscovery.FakeDiscovery\n\ttracker   testing.ObjectTracker\n}\n\nfunc (c *Clientset) Discovery() discovery.DiscoveryInterface {\n",
                      "markdown": "`type Clientset struct {\n\ttesting.Fake\n\tdiscovery *fakediscovery.FakeDiscovery\n\ttracker   testing.ObjectTracker\n}\n\nfunc (c *Clientset) Discovery() discovery.DiscoveryInterface {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/utils_test.go"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 7,
                  "endLine": 41,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\tengine := gin.New()\n\tserver := api.NewServer(engine, api.WithRecovery())\n\n\tengine.GET(\"/send\", func(ctx *gin.Context) {\n\t\tapi.SendResponse(ctx, nil, \"errorMsg\", errors.New(\"error\"))\n\t})\n\n",
                    "rendered": {
                      "text": "\tengine := gin.New()\n\tserver := api.NewServer(engine, api.WithRecovery())\n\n\tengine.GET(\"/send\", func(ctx *gin.Context) {\n\t\tapi.SendResponse(ctx, nil, \"errorMsg\", errors.New(\"error\"))\n\t})\n\n",
                      "markdown": "`\tengine := gin.New()\n\tserver := api.NewServer(engine, api.WithRecovery())\n\n\tengine.GET(\"/send\", func(ctx *gin.Context) {\n\t\tapi.SendResponse(ctx, nil, \"errorMsg\", errors.New(\"error\"))\n\t})\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/utils_test.go"
                },
                "region": {
                  "startLine": 22,
                  "startColumn": 7,
                  "endLine": 22,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\tengine := gin.New()\n\tserver := api.NewServer(engine, api.WithRecovery())\n\n\tengine.GET(\"/send\", func(ctx *gin.Context) {\n\t\tapi.SendResponse(ctx, \"data\", \"\", nil)\n\t})\n\n",
                    "rendered": {
                      "text": "\tengine := gin.New()\n\tserver := api.NewServer(engine, api.WithRecovery())\n\n\tengine.GET(\"/send\", func(ctx *gin.Context) {\n\t\tapi.SendResponse(ctx, \"data\", \"\", nil)\n\t})\n\n",
                      "markdown": "`\tengine := gin.New()\n\tserver := api.NewServer(engine, api.WithRecovery())\n\n\tengine.GET(\"/send\", func(ctx *gin.Context) {\n\t\tapi.SendResponse(ctx, \"data\", \"\", nil)\n\t})\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/server.go"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 10,
                  "endLine": 121,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\nfunc WithMetrics() ServerOption {\n\treturn func(s *Server) error {\n\t\ts.engine.GET(\"metrics\", append(s.middleware, MetricsHandler())...)\n\n\t\treturn nil\n\t}\n",
                    "rendered": {
                      "text": "\nfunc WithMetrics() ServerOption {\n\treturn func(s *Server) error {\n\t\ts.engine.GET(\"metrics\", append(s.middleware, MetricsHandler())...)\n\n\t\treturn nil\n\t}\n",
                      "markdown": "`\nfunc WithMetrics() ServerOption {\n\treturn func(s *Server) error {\n\t\ts.engine.GET(\"metrics\", append(s.middleware, MetricsHandler())...)\n\n\t\treturn nil\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/server.go"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 10,
                  "endLine": 72,
                  "endColumn": 15,
                  "snippet": {
                    "text": "func WithHealthChecks(checks []HealthCheck) ServerOption {\n\treturn func(s *Server) error {\n\t\ts.engine.GET(\"healthz\", HealthzHandler(checks))\n\t\ts.engine.GET(\"ready\", HealthzHandler(checks))\n\n\t\treturn nil\n\t}\n",
                    "rendered": {
                      "text": "func WithHealthChecks(checks []HealthCheck) ServerOption {\n\treturn func(s *Server) error {\n\t\ts.engine.GET(\"healthz\", HealthzHandler(checks))\n\t\ts.engine.GET(\"ready\", HealthzHandler(checks))\n\n\t\treturn nil\n\t}\n",
                      "markdown": "`func WithHealthChecks(checks []HealthCheck) ServerOption {\n\treturn func(s *Server) error {\n\t\ts.engine.GET(\"healthz\", HealthzHandler(checks))\n\t\ts.engine.GET(\"ready\", HealthzHandler(checks))\n\n\t\treturn nil\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/server.go"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 10,
                  "endLine": 71,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\nfunc WithHealthChecks(checks []HealthCheck) ServerOption {\n\treturn func(s *Server) error {\n\t\ts.engine.GET(\"healthz\", HealthzHandler(checks))\n\t\ts.engine.GET(\"ready\", HealthzHandler(checks))\n\n\t\treturn nil\n",
                    "rendered": {
                      "text": "\nfunc WithHealthChecks(checks []HealthCheck) ServerOption {\n\treturn func(s *Server) error {\n\t\ts.engine.GET(\"healthz\", HealthzHandler(checks))\n\t\ts.engine.GET(\"ready\", HealthzHandler(checks))\n\n\t\treturn nil\n",
                      "markdown": "`\nfunc WithHealthChecks(checks []HealthCheck) ServerOption {\n\treturn func(s *Server) error {\n\t\ts.engine.GET(\"healthz\", HealthzHandler(checks))\n\t\ts.engine.GET(\"ready\", HealthzHandler(checks))\n\n\t\treturn nil\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/server.go"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 23,
                  "endLine": 62,
                  "endColumn": 31,
                  "snippet": {
                    "text": "func WithBasicAuth(auth BasicAuth) ServerOption {\n\treturn func(s *Server) error {\n\t\ts.middleware = append(s.middleware, gin.BasicAuth(gin.Accounts{\n\t\t\tauth.Username: auth.Password,\n\t\t}))\n\n\t\treturn nil\n",
                    "rendered": {
                      "text": "func WithBasicAuth(auth BasicAuth) ServerOption {\n\treturn func(s *Server) error {\n\t\ts.middleware = append(s.middleware, gin.BasicAuth(gin.Accounts{\n\t\t\tauth.Username: auth.Password,\n\t\t}))\n\n\t\treturn nil\n",
                      "markdown": "`func WithBasicAuth(auth BasicAuth) ServerOption {\n\treturn func(s *Server) error {\n\t\ts.middleware = append(s.middleware, gin.BasicAuth(gin.Accounts{\n\t\t\tauth.Username: auth.Password,\n\t\t}))\n\n\t\treturn nil\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/server.go"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 1,
                  "endLine": 23,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\ntype BasicAuth struct {\n\tUsername string\n\tPassword string\n}\n\ntype Server struct {\n",
                    "rendered": {
                      "text": "\ntype BasicAuth struct {\n\tUsername string\n\tPassword string\n}\n\ntype Server struct {\n",
                      "markdown": "`\ntype BasicAuth struct {\n\tUsername string\n\tPassword string\n}\n\ntype Server struct {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/metrics_test.go"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 27,
                  "endLine": 54,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\t}), api.WithMetrics())\n\n\treq, _ := http.NewRequest(\"GET\", \"/metrics\", nil)\n\treq.SetBasicAuth(\"user\", \"password\")\n\tw := httptest.NewRecorder()\n\n\tserver.Serve(w, req)\n",
                    "rendered": {
                      "text": "\t}), api.WithMetrics())\n\n\treq, _ := http.NewRequest(\"GET\", \"/metrics\", nil)\n\treq.SetBasicAuth(\"user\", \"password\")\n\tw := httptest.NewRecorder()\n\n\tserver.Serve(w, req)\n",
                      "markdown": "`\t}), api.WithMetrics())\n\n\treq, _ := http.NewRequest(\"GET\", \"/metrics\", nil)\n\treq.SetBasicAuth(\"user\", \"password\")\n\tw := httptest.NewRecorder()\n\n\tserver.Serve(w, req)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/metrics_test.go"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 13,
                  "endLine": 50,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\n\tserver := api.NewServer(gin.New(), api.WithBasicAuth(api.BasicAuth{\n\t\tUsername: \"user\",\n\t\tPassword: \"password\",\n\t}), api.WithMetrics())\n\n\treq, _ := http.NewRequest(\"GET\", \"/metrics\", nil)\n",
                    "rendered": {
                      "text": "\n\tserver := api.NewServer(gin.New(), api.WithBasicAuth(api.BasicAuth{\n\t\tUsername: \"user\",\n\t\tPassword: \"password\",\n\t}), api.WithMetrics())\n\n\treq, _ := http.NewRequest(\"GET\", \"/metrics\", nil)\n",
                      "markdown": "`\n\tserver := api.NewServer(gin.New(), api.WithBasicAuth(api.BasicAuth{\n\t\tUsername: \"user\",\n\t\tPassword: \"password\",\n\t}), api.WithMetrics())\n\n\treq, _ := http.NewRequest(\"GET\", \"/metrics\", nil)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/metrics_test.go"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 2,
                  "endLine": 50,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n\tserver := api.NewServer(gin.New(), api.WithBasicAuth(api.BasicAuth{\n\t\tUsername: \"user\",\n\t\tPassword: \"password\",\n\t}), api.WithMetrics())\n\n\treq, _ := http.NewRequest(\"GET\", \"/metrics\", nil)\n",
                    "rendered": {
                      "text": "\n\tserver := api.NewServer(gin.New(), api.WithBasicAuth(api.BasicAuth{\n\t\tUsername: \"user\",\n\t\tPassword: \"password\",\n\t}), api.WithMetrics())\n\n\treq, _ := http.NewRequest(\"GET\", \"/metrics\", nil)\n",
                      "markdown": "`\n\tserver := api.NewServer(gin.New(), api.WithBasicAuth(api.BasicAuth{\n\t\tUsername: \"user\",\n\t\tPassword: \"password\",\n\t}), api.WithMetrics())\n\n\treq, _ := http.NewRequest(\"GET\", \"/metrics\", nil)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/metrics_test.go"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 13,
                  "endLine": 33,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\n\tserver := api.NewServer(gin.New(), api.WithBasicAuth(api.BasicAuth{\n\t\tUsername: \"user\",\n\t\tPassword: \"password\",\n\t}), api.WithMetrics())\n\n\treq, _ := http.NewRequest(\"GET\", \"/metrics\", nil)\n",
                    "rendered": {
                      "text": "\n\tserver := api.NewServer(gin.New(), api.WithBasicAuth(api.BasicAuth{\n\t\tUsername: \"user\",\n\t\tPassword: \"password\",\n\t}), api.WithMetrics())\n\n\treq, _ := http.NewRequest(\"GET\", \"/metrics\", nil)\n",
                      "markdown": "`\n\tserver := api.NewServer(gin.New(), api.WithBasicAuth(api.BasicAuth{\n\t\tUsername: \"user\",\n\t\tPassword: \"password\",\n\t}), api.WithMetrics())\n\n\treq, _ := http.NewRequest(\"GET\", \"/metrics\", nil)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/api/metrics_test.go"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 2,
                  "endLine": 33,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n\tserver := api.NewServer(gin.New(), api.WithBasicAuth(api.BasicAuth{\n\t\tUsername: \"user\",\n\t\tPassword: \"password\",\n\t}), api.WithMetrics())\n\n\treq, _ := http.NewRequest(\"GET\", \"/metrics\", nil)\n",
                    "rendered": {
                      "text": "\n\tserver := api.NewServer(gin.New(), api.WithBasicAuth(api.BasicAuth{\n\t\tUsername: \"user\",\n\t\tPassword: \"password\",\n\t}), api.WithMetrics())\n\n\treq, _ := http.NewRequest(\"GET\", \"/metrics\", nil)\n",
                      "markdown": "`\n\tserver := api.NewServer(gin.New(), api.WithBasicAuth(api.BasicAuth{\n\t\tUsername: \"user\",\n\t\tPassword: \"password\",\n\t}), api.WithMetrics())\n\n\treq, _ := http.NewRequest(\"GET\", \"/metrics\", nil)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/docs/UI_AUTH.md"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 73,
                  "endLine": 6,
                  "endColumn": 77,
                  "snippet": {
                    "text": "With Policy Reporter UI v2 it is possible to use either OAuth2 or OpenIDConnect as authentication mechanism.\n\nIts not possible to reduce or configure view permission based on roles or any other information yet. \nAuthentication ensures that no unauthorized person is able to open the UI at all.\n\n## OAuth2\n\n",
                    "rendered": {
                      "text": "With Policy Reporter UI v2 it is possible to use either OAuth2 or OpenIDConnect as authentication mechanism.\n\nIts not possible to reduce or configure view permission based on roles or any other information yet. \nAuthentication ensures that no unauthorized person is able to open the UI at all.\n\n## OAuth2\n\n",
                      "markdown": "`With Policy Reporter UI v2 it is possible to use either OAuth2 or OpenIDConnect as authentication mechanism.\n\nIts not possible to reduce or configure view permission based on roles or any other information yet. \nAuthentication ensures that no unauthorized person is able to open the UI at all.\n\n## OAuth2\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/configs/kyverno-plugin.tmpl"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 35,
                  "endLine": 18,
                  "endColumn": 43,
                  "snippet": {
                    "text": "server:\n  basicAuth:\n    username: {{ .Values.basicAuth.username }}\n    password: {{ .Values.basicAuth.password }}\n    secretRef: {{ .Values.basicAuth.secretRef }}\n\ncore:\n",
                    "rendered": {
                      "text": "server:\n  basicAuth:\n    username: {{ .Values.basicAuth.username }}\n    password: {{ .Values.basicAuth.password }}\n    secretRef: {{ .Values.basicAuth.secretRef }}\n\ncore:\n",
                      "markdown": "`server:\n  basicAuth:\n    username: {{ .Values.basicAuth.username }}\n    password: {{ .Values.basicAuth.password }}\n    secretRef: {{ .Values.basicAuth.secretRef }}\n\ncore:\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/configs/kyverno-plugin.tmpl"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 4,
                  "endLine": 18,
                  "endColumn": 12,
                  "snippet": {
                    "text": "server:\n  basicAuth:\n    username: {{ .Values.basicAuth.username }}\n    password: {{ .Values.basicAuth.password }}\n    secretRef: {{ .Values.basicAuth.secretRef }}\n\ncore:\n",
                    "rendered": {
                      "text": "server:\n  basicAuth:\n    username: {{ .Values.basicAuth.username }}\n    password: {{ .Values.basicAuth.password }}\n    secretRef: {{ .Values.basicAuth.secretRef }}\n\ncore:\n",
                      "markdown": "`server:\n  basicAuth:\n    username: {{ .Values.basicAuth.username }}\n    password: {{ .Values.basicAuth.password }}\n    secretRef: {{ .Values.basicAuth.secretRef }}\n\ncore:\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/configs/trivy-plugin.tmpl"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 35,
                  "endLine": 20,
                  "endColumn": 43,
                  "snippet": {
                    "text": "  secretRef: {{ .Values.plugin.trivy.policyReporter.secretRef }}\n  basicAuth:\n    username: {{ .Values.basicAuth.username }}\n    password: {{ .Values.basicAuth.password }}\n",
                    "rendered": {
                      "text": "  secretRef: {{ .Values.plugin.trivy.policyReporter.secretRef }}\n  basicAuth:\n    username: {{ .Values.basicAuth.username }}\n    password: {{ .Values.basicAuth.password }}\n",
                      "markdown": "`  secretRef: {{ .Values.plugin.trivy.policyReporter.secretRef }}\n  basicAuth:\n    username: {{ .Values.basicAuth.username }}\n    password: {{ .Values.basicAuth.password }}\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/configs/trivy-plugin.tmpl"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 4,
                  "endLine": 20,
                  "endColumn": 12,
                  "snippet": {
                    "text": "  secretRef: {{ .Values.plugin.trivy.policyReporter.secretRef }}\n  basicAuth:\n    username: {{ .Values.basicAuth.username }}\n    password: {{ .Values.basicAuth.password }}\n",
                    "rendered": {
                      "text": "  secretRef: {{ .Values.plugin.trivy.policyReporter.secretRef }}\n  basicAuth:\n    username: {{ .Values.basicAuth.username }}\n    password: {{ .Values.basicAuth.password }}\n",
                      "markdown": "`  secretRef: {{ .Values.plugin.trivy.policyReporter.secretRef }}\n  basicAuth:\n    username: {{ .Values.basicAuth.username }}\n    password: {{ .Values.basicAuth.password }}\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/configs/trivy-plugin.tmpl"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 35,
                  "endLine": 10,
                  "endColumn": 43,
                  "snippet": {
                    "text": "server:\n  basicAuth:\n    username: {{ .Values.basicAuth.username }}\n    password: {{ .Values.basicAuth.password }}\n    secretRef: {{ .Values.basicAuth.secretRef }}\n\ncore:\n",
                    "rendered": {
                      "text": "server:\n  basicAuth:\n    username: {{ .Values.basicAuth.username }}\n    password: {{ .Values.basicAuth.password }}\n    secretRef: {{ .Values.basicAuth.secretRef }}\n\ncore:\n",
                      "markdown": "`server:\n  basicAuth:\n    username: {{ .Values.basicAuth.username }}\n    password: {{ .Values.basicAuth.password }}\n    secretRef: {{ .Values.basicAuth.secretRef }}\n\ncore:\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/configs/trivy-plugin.tmpl"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 4,
                  "endLine": 10,
                  "endColumn": 12,
                  "snippet": {
                    "text": "server:\n  basicAuth:\n    username: {{ .Values.basicAuth.username }}\n    password: {{ .Values.basicAuth.password }}\n    secretRef: {{ .Values.basicAuth.secretRef }}\n\ncore:\n",
                    "rendered": {
                      "text": "server:\n  basicAuth:\n    username: {{ .Values.basicAuth.username }}\n    password: {{ .Values.basicAuth.password }}\n    secretRef: {{ .Values.basicAuth.secretRef }}\n\ncore:\n",
                      "markdown": "`server:\n  basicAuth:\n    username: {{ .Values.basicAuth.username }}\n    password: {{ .Values.basicAuth.password }}\n    secretRef: {{ .Values.basicAuth.secretRef }}\n\ncore:\n`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/monitoring/_helpers.tpl"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 11,
                  "endLine": 3,
                  "endColumn": 15,
                  "snippet": {
                    "text": "{{/*\nCreate a default fully qualified app name.\nWe truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).\nIf release name contains chart name it will be used as a full name.\n*/}}\n{{- define \"monitoring.fullname\" -}}\n",
                    "rendered": {
                      "text": "{{/*\nCreate a default fully qualified app name.\nWe truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).\nIf release name contains chart name it will be used as a full name.\n*/}}\n{{- define \"monitoring.fullname\" -}}\n",
                      "markdown": "`{{/*\nCreate a default fully qualified app name.\nWe truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).\nIf release name contains chart name it will be used as a full name.\n*/}}\n{{- define \"monitoring.fullname\" -}}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/plugins/kyverno/clusterrole.yaml"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 3,
                  "endLine": 42,
                  "snippet": {
                    "text": "  - get\n  - list\n  - create\n  - update\n  - delete\n{{- end }}\n{{- end }}\n{{- end }}",
                    "rendered": {
                      "text": "  - get\n  - list\n  - create\n  - update\n  - delete\n{{- end }}\n{{- end }}\n{{- end }}",
                      "markdown": "`  - get\n  - list\n  - create\n  - update\n  - delete\n{{- end }}\n{{- end }}\n{{- end }}`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/plugins/kyverno/clusterrole.yaml"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 3,
                  "endLine": 30,
                  "snippet": {
                    "text": "  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - '*'\n  resources:\n  - policyreports\n",
                    "rendered": {
                      "text": "  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - '*'\n  resources:\n  - policyreports\n",
                      "markdown": "`  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - '*'\n  resources:\n  - policyreports\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/service.yaml"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 5,
                  "endLine": 4,
                  "snippet": {
                    "text": "{{- if .Values.service.enabled -}}\napiVersion: v1\nkind: Service\nmetadata:\n  name: {{ include \"policyreporter.fullname\" . }}\n  namespace: {{ include \"policyreporter.namespace\" . }}\n  labels:\n",
                    "rendered": {
                      "text": "{{- if .Values.service.enabled -}}\napiVersion: v1\nkind: Service\nmetadata:\n  name: {{ include \"policyreporter.fullname\" . }}\n  namespace: {{ include \"policyreporter.namespace\" . }}\n  labels:\n",
                      "markdown": "`{{- if .Values.service.enabled -}}\napiVersion: v1\nkind: Service\nmetadata:\n  name: {{ include \"policyreporter.fullname\" . }}\n  namespace: {{ include \"policyreporter.namespace\" . }}\n  labels:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/clusterrole.yaml"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 3,
                  "endLine": 25,
                  "snippet": {
                    "text": "  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - ''\n  resources:\n  - namespaces\n",
                    "rendered": {
                      "text": "  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - ''\n  resources:\n  - namespaces\n",
                      "markdown": "`  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - ''\n  resources:\n  - namespaces\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 18,
                  "endLine": 44,
                  "endColumn": 26,
                  "snippet": {
                    "text": "Get the link of your forked repository, paste it in your device terminal and clone it using the command.\n\n```sh\ngit clone https://hostname/YOUR-USERNAME/YOUR-REPOSITORY\n```\n\n2. **Create a branch:**\n",
                    "rendered": {
                      "text": "Get the link of your forked repository, paste it in your device terminal and clone it using the command.\n\n```sh\ngit clone https://hostname/YOUR-USERNAME/YOUR-REPOSITORY\n```\n\n2. **Create a branch:**\n",
                      "markdown": "`Get the link of your forked repository, paste it in your device terminal and clone it using the command.\n\n```sh\ngit clone https://hostname/YOUR-USERNAME/YOUR-REPOSITORY\n```\n\n2. **Create a branch:**\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 44,
                  "endLine": 85,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\nFor contributors to certify that they wrote or otherwise have the right to submit the code they are contributing to the project, we are requiring everyone to acknowledge this by signing their work which indicates you agree to the DCO found [here](https://developercertificate.org/).\n\nTo sign your work, just add a line like this at the end of your commit message:\n\n```sh\nSigned-off-by: Random J Developer <random@developer.example.org>\n",
                    "rendered": {
                      "text": "\nFor contributors to certify that they wrote or otherwise have the right to submit the code they are contributing to the project, we are requiring everyone to acknowledge this by signing their work which indicates you agree to the DCO found [here](https://developercertificate.org/).\n\nTo sign your work, just add a line like this at the end of your commit message:\n\n```sh\nSigned-off-by: Random J Developer <random@developer.example.org>\n",
                      "markdown": "`\nFor contributors to certify that they wrote or otherwise have the right to submit the code they are contributing to the project, we are requiring everyone to acknowledge this by signing their work which indicates you agree to the DCO found [here](https://developercertificate.org/).\n\nTo sign your work, just add a line like this at the end of your commit message:\n\n```sh\nSigned-off-by: Random J Developer <random@developer.example.org>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 5,
                  "endLine": 94,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nThis can easily be done with the `-s` command line option to append this automatically to your commit message.\n\n```sh\ngit commit -s -m 'This is my commit message'\n```\n",
                    "rendered": {
                      "text": "\nThis can easily be done with the `-s` command line option to append this automatically to your commit message.\n\n```sh\ngit commit -s -m 'This is my commit message'\n```\n",
                      "markdown": "`\nThis can easily be done with the `-s` command line option to append this automatically to your commit message.\n\n```sh\ngit commit -s -m 'This is my commit message'\n```\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 5,
                  "endLine": 74,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nGo ahead and push your changes to GitHub using this command.\n\n```sh\ngit push\n```\n\n## Engage with us\n",
                    "rendered": {
                      "text": "\nGo ahead and push your changes to GitHub using this command.\n\n```sh\ngit push\n```\n\n## Engage with us\n",
                      "markdown": "`\nGo ahead and push your changes to GitHub using this command.\n\n```sh\ngit push\n```\n\n## Engage with us\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 5,
                  "endLine": 66,
                  "endColumn": 4,
                  "snippet": {
                    "text": "git add .\n```\n\n```sh\ngit commit -s -m \"Commit message\"\n```\n\nThe `-s` signifies that you have signed off the commit.\n",
                    "rendered": {
                      "text": "git add .\n```\n\n```sh\ngit commit -s -m \"Commit message\"\n```\n\nThe `-s` signifies that you have signed off the commit.\n",
                      "markdown": "`git add .\n```\n\n```sh\ngit commit -s -m \"Commit message\"\n```\n\nThe `-s` signifies that you have signed off the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 5,
                  "endLine": 62,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nNow that we have implemented the required changes, use the command below to stage the changes and commit them.\n\n```sh\ngit add .\n```\n\n```sh\n",
                    "rendered": {
                      "text": "\nNow that we have implemented the required changes, use the command below to stage the changes and commit them.\n\n```sh\ngit add .\n```\n\n```sh\n",
                      "markdown": "`\nNow that we have implemented the required changes, use the command below to stage the changes and commit them.\n\n```sh\ngit add .\n```\n\n```sh\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 11,
                  "endLine": 55,
                  "endColumn": 17,
                  "snippet": {
                    "text": "git checkout -b <new-branch>\n```\n\nGreat, it's time to start hacking! You can now go ahead to make all the changes you want.\n\n3. **Stage, Commit, and Push changes:**\n\n",
                    "rendered": {
                      "text": "git checkout -b <new-branch>\n```\n\nGreat, it's time to start hacking! You can now go ahead to make all the changes you want.\n\n3. **Stage, Commit, and Push changes:**\n\n",
                      "markdown": "`git checkout -b <new-branch>\n```\n\nGreat, it's time to start hacking! You can now go ahead to make all the changes you want.\n\n3. **Stage, Commit, and Push changes:**\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 5,
                  "endLine": 52,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nCreate a new brach and navigate to the branch using this command.\n\n```sh\ngit checkout -b <new-branch>\n```\n\nGreat, it's time to start hacking! You can now go ahead to make all the changes you want.\n",
                    "rendered": {
                      "text": "\nCreate a new brach and navigate to the branch using this command.\n\n```sh\ngit checkout -b <new-branch>\n```\n\nGreat, it's time to start hacking! You can now go ahead to make all the changes you want.\n",
                      "markdown": "`\nCreate a new brach and navigate to the branch using this command.\n\n```sh\ngit checkout -b <new-branch>\n```\n\nGreat, it's time to start hacking! You can now go ahead to make all the changes you want.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 5,
                  "endLine": 44,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nGet the link of your forked repository, paste it in your device terminal and clone it using the command.\n\n```sh\ngit clone https://hostname/YOUR-USERNAME/YOUR-REPOSITORY\n```\n\n2. **Create a branch:**\n",
                    "rendered": {
                      "text": "\nGet the link of your forked repository, paste it in your device terminal and clone it using the command.\n\n```sh\ngit clone https://hostname/YOUR-USERNAME/YOUR-REPOSITORY\n```\n\n2. **Create a branch:**\n",
                      "markdown": "`\nGet the link of your forked repository, paste it in your device terminal and clone it using the command.\n\n```sh\ngit clone https://hostname/YOUR-USERNAME/YOUR-REPOSITORY\n```\n\n2. **Create a branch:**\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 36,
                  "endLine": 37,
                  "endColumn": 5,
                  "snippet": {
                    "text": "Once you wish to get started contributing to the code base, please refer to our [local development mode](https://kyverno.github.io/policy-reporter/core/development) for local setup guide.\n\n## How to Create a PR\n\nHead over to the project repository on GitHub and click the **\"Fork\"** button. With the forked copy, you can try new ideas and implement changes to the project.\n\n1. **Clone the repository to your device:**\n\n",
                    "rendered": {
                      "text": "Once you wish to get started contributing to the code base, please refer to our [local development mode](https://kyverno.github.io/policy-reporter/core/development) for local setup guide.\n\n## How to Create a PR\n\nHead over to the project repository on GitHub and click the **\"Fork\"** button. With the forked copy, you can try new ideas and implement changes to the project.\n\n1. **Clone the repository to your device:**\n\n",
                      "markdown": "`Once you wish to get started contributing to the code base, please refer to our [local development mode](https://kyverno.github.io/policy-reporter/core/development) for local setup guide.\n\n## How to Create a PR\n\nHead over to the project repository on GitHub and click the **\"Fork\"** button. With the forked copy, you can try new ideas and implement changes to the project.\n\n1. **Clone the repository to your device:**\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 8,
                  "endLine": 33,
                  "endColumn": 14,
                  "snippet": {
                    "text": "equests/about-pull-requests) (PRs) allow you to contribute back the changes you've made on your side enabling others in the community to benefit from your hard work. They are the main source by which all changes are made to this project and are a standard piece of GitHub operational flows.\n\nOnce you wish to get started contributing to the code base, please refer to our [local development mode](https://kyverno.github.io/policy-reporter/core/development) for local setup guide.\n\n## How to Create a PR\n\nHead over to the project repository on GitHub and click the **\"Fork\"** button. With the forked copy, y",
                    "rendered": {
                      "text": "equests/about-pull-requests) (PRs) allow you to contribute back the changes you've made on your side enabling others in the community to benefit from your hard work. They are the main source by which all changes are made to this project and are a standard piece of GitHub operational flows.\n\nOnce you wish to get started contributing to the code base, please refer to our [local development mode](https://kyverno.github.io/policy-reporter/core/development) for local setup guide.\n\n## How to Create a PR\n\nHead over to the project repository on GitHub and click the **\"Fork\"** button. With the forked copy, y",
                      "markdown": "`equests/about-pull-requests) (PRs) allow you to contribute back the changes you've made on your side enabling others in the community to benefit from your hard work. They are the main source by which all changes are made to this project and are a standard piece of GitHub operational flows.\n\nOnce you wish to get started contributing to the code base, please refer to our [local development mode](https://kyverno.github.io/policy-reporter/core/development) for local setup guide.\n\n## How to Create a PR\n\nHead over to the project repository on GitHub and click the **\"Fork\"** button. With the forked copy, y`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/report/model_test.go"
                },
                "region": {
                  "startLine": 81,
                  "endLine": 81,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\tSummary: v1alpha2.PolicyReportSummary{},\n\t}\n\n\tdiff := report.FindNewResults(preport2, preport1)\n\tif len(diff) != 1 {\n\t\tt.Fatal(\"should only return one new result\")\n\t}\n",
                    "rendered": {
                      "text": "\t\tSummary: v1alpha2.PolicyReportSummary{},\n\t}\n\n\tdiff := report.FindNewResults(preport2, preport1)\n\tif len(diff) != 1 {\n\t\tt.Fatal(\"should only return one new result\")\n\t}\n",
                      "markdown": "`\t\tSummary: v1alpha2.PolicyReportSummary{},\n\t}\n\n\tdiff := report.FindNewResults(preport2, preport1)\n\tif len(diff) != 1 {\n\t\tt.Fatal(\"should only return one new result\")\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/report/store.go"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 15,
                  "endLine": 71,
                  "endColumn": 20,
                  "snippet": {
                    "text": "}\n\nfunc (s *policyReportStore) Remove(ctx context.Context, id string) error {\n\tif r, err := s.Get(ctx, id); err == nil {\n\t\ts.rwm.Lock()\n\t\tdefer s.rwm.Unlock()\n\t\tdelete(s.store[GetType(r)], id)\n",
                    "rendered": {
                      "text": "}\n\nfunc (s *policyReportStore) Remove(ctx context.Context, id string) error {\n\tif r, err := s.Get(ctx, id); err == nil {\n\t\ts.rwm.Lock()\n\t\tdefer s.rwm.Unlock()\n\t\tdelete(s.store[GetType(r)], id)\n",
                      "markdown": "`}\n\nfunc (s *policyReportStore) Remove(ctx context.Context, id string) error {\n\tif r, err := s.Get(ctx, id); err == nil {\n\t\ts.rwm.Lock()\n\t\tdefer s.rwm.Unlock()\n\t\tdelete(s.store[GetType(r)], id)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/report/store.go"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 3,
                  "endLine": 18,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\tGet(ctx context.Context, id string) (v1alpha2.ReportInterface, error)\n\t// Add a PolicyReport to the Store\n\tAdd(ctx context.Context, r v1alpha2.ReportInterface) error\n\t// Update a PolicyReport to the Store\n\tUpdate(ctx context.Context, r v1alpha2.ReportInterface) error\n\t// Remove a PolicyReport with the given Type and ID from the Store\n\tRemove(ctx context.Context, id string) error\n",
                    "rendered": {
                      "text": "\tGet(ctx context.Context, id string) (v1alpha2.ReportInterface, error)\n\t// Add a PolicyReport to the Store\n\tAdd(ctx context.Context, r v1alpha2.ReportInterface) error\n\t// Update a PolicyReport to the Store\n\tUpdate(ctx context.Context, r v1alpha2.ReportInterface) error\n\t// Remove a PolicyReport with the given Type and ID from the Store\n\tRemove(ctx context.Context, id string) error\n",
                      "markdown": "`\tGet(ctx context.Context, id string) (v1alpha2.ReportInterface, error)\n\t// Add a PolicyReport to the Store\n\tAdd(ctx context.Context, r v1alpha2.ReportInterface) error\n\t// Update a PolicyReport to the Store\n\tUpdate(ctx context.Context, r v1alpha2.ReportInterface) error\n\t// Remove a PolicyReport with the given Type and ID from the Store\n\tRemove(ctx context.Context, id string) error\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/kubernetes/jobs/client.go"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 39,
                  "endLine": 24,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\nfunc (c *k8sClient) Get(scope *corev1.ObjectReference) (*batchv1.Job, error) {\n\treturn kubernetes.Retry(func() (*batchv1.Job, error) {\n\t\treturn c.client.Jobs(scope.Namespace).Get(context.Background(), scope.Name, metav1.GetOptions{})\n\t})\n}\n\n",
                    "rendered": {
                      "text": "\nfunc (c *k8sClient) Get(scope *corev1.ObjectReference) (*batchv1.Job, error) {\n\treturn kubernetes.Retry(func() (*batchv1.Job, error) {\n\t\treturn c.client.Jobs(scope.Namespace).Get(context.Background(), scope.Name, metav1.GetOptions{})\n\t})\n}\n\n",
                      "markdown": "`\nfunc (c *k8sClient) Get(scope *corev1.ObjectReference) (*batchv1.Job, error) {\n\treturn kubernetes.Retry(func() (*batchv1.Job, error) {\n\t\treturn c.client.Jobs(scope.Namespace).Get(context.Background(), scope.Name, metav1.GetOptions{})\n\t})\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/http/utils_test.go"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 47,
                  "endLine": 39,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\t\tassert.Equal(t, []string{\"test\"}, list)\n\t\tassert.Equal(t, \"GET\", req.Method)\n\t\tassert.Equal(t, \"application/json; charset=utf-8\", req.Header.Get(\"Content-Type\"))\n\t\tassert.Equal(t, \"Policy-Reporter\", req.Header.Get(\"User-Agent\"))\n\t})\n\n\tt.Run(\"error\", func(t *testing.T) {\n",
                    "rendered": {
                      "text": "\t\tassert.Equal(t, []string{\"test\"}, list)\n\t\tassert.Equal(t, \"GET\", req.Method)\n\t\tassert.Equal(t, \"application/json; charset=utf-8\", req.Header.Get(\"Content-Type\"))\n\t\tassert.Equal(t, \"Policy-Reporter\", req.Header.Get(\"User-Agent\"))\n\t})\n\n\tt.Run(\"error\", func(t *testing.T) {\n",
                      "markdown": "`\t\tassert.Equal(t, []string{\"test\"}, list)\n\t\tassert.Equal(t, \"GET\", req.Method)\n\t\tassert.Equal(t, \"application/json; charset=utf-8\", req.Header.Get(\"Content-Type\"))\n\t\tassert.Equal(t, \"Policy-Reporter\", req.Header.Get(\"User-Agent\"))\n\t})\n\n\tt.Run(\"error\", func(t *testing.T) {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/http/utils_test.go"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 63,
                  "endLine": 38,
                  "endColumn": 68,
                  "snippet": {
                    "text": "\n\t\tassert.Equal(t, []string{\"test\"}, list)\n\t\tassert.Equal(t, \"GET\", req.Method)\n\t\tassert.Equal(t, \"application/json; charset=utf-8\", req.Header.Get(\"Content-Type\"))\n\t\tassert.Equal(t, \"Policy-Reporter\", req.Header.Get(\"User-Agent\"))\n\t})\n\n",
                    "rendered": {
                      "text": "\n\t\tassert.Equal(t, []string{\"test\"}, list)\n\t\tassert.Equal(t, \"GET\", req.Method)\n\t\tassert.Equal(t, \"application/json; charset=utf-8\", req.Header.Get(\"Content-Type\"))\n\t\tassert.Equal(t, \"Policy-Reporter\", req.Header.Get(\"User-Agent\"))\n\t})\n\n",
                      "markdown": "`\n\t\tassert.Equal(t, []string{\"test\"}, list)\n\t\tassert.Equal(t, \"GET\", req.Method)\n\t\tassert.Equal(t, \"application/json; charset=utf-8\", req.Header.Get(\"Content-Type\"))\n\t\tassert.Equal(t, \"Policy-Reporter\", req.Header.Get(\"User-Agent\"))\n\t})\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/crd/client/clientset/versioned/typed/policyreport/v1alpha2/policyreport.go"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 15,
                  "endLine": 115,
                  "endColumn": 21,
                  "snippet": {
                    "text": "// Create takes the representation of a policyReport and creates it.  Returns the server's representation of the policyReport, and an error, if there is any.\nfunc (c *policyReports) Create(ctx context.Context, policyReport *v1alpha2.PolicyReport, opts v1.CreateOptions) (result *v1alpha2.PolicyReport, err error) {\n\tresult = &v1alpha2.PolicyReport{}\n\terr = c.client.Post().\n\t\tNamespace(c.ns).\n\t\tResource(\"policyreports\").\n\t\tVersionedParams(&opts, scheme.ParameterCodec).\n",
                    "rendered": {
                      "text": "// Create takes the representation of a policyReport and creates it.  Returns the server's representation of the policyReport, and an error, if there is any.\nfunc (c *policyReports) Create(ctx context.Context, policyReport *v1alpha2.PolicyReport, opts v1.CreateOptions) (result *v1alpha2.PolicyReport, err error) {\n\tresult = &v1alpha2.PolicyReport{}\n\terr = c.client.Post().\n\t\tNamespace(c.ns).\n\t\tResource(\"policyreports\").\n\t\tVersionedParams(&opts, scheme.ParameterCodec).\n",
                      "markdown": "`// Create takes the representation of a policyReport and creates it.  Returns the server's representation of the policyReport, and an error, if there is any.\nfunc (c *policyReports) Create(ctx context.Context, policyReport *v1alpha2.PolicyReport, opts v1.CreateOptions) (result *v1alpha2.PolicyReport, err error) {\n\tresult = &v1alpha2.PolicyReport{}\n\terr = c.client.Post().\n\t\tNamespace(c.ns).\n\t\tResource(\"policyreports\").\n\t\tVersionedParams(&opts, scheme.ParameterCodec).\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/crd/client/clientset/versioned/typed/policyreport/v1alpha2/policyreport.go"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 16,
                  "endLine": 104,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\ttimeout = time.Duration(*opts.TimeoutSeconds) * time.Second\n\t}\n\topts.Watch = true\n\treturn c.client.Get().\n\t\tNamespace(c.ns).\n\t\tResource(\"policyreports\").\n\t\tVersionedParams(&opts, scheme.ParameterCodec).\n",
                    "rendered": {
                      "text": "\t\ttimeout = time.Duration(*opts.TimeoutSeconds) * time.Second\n\t}\n\topts.Watch = true\n\treturn c.client.Get().\n\t\tNamespace(c.ns).\n\t\tResource(\"policyreports\").\n\t\tVersionedParams(&opts, scheme.ParameterCodec).\n",
                      "markdown": "`\t\ttimeout = time.Duration(*opts.TimeoutSeconds) * time.Second\n\t}\n\topts.Watch = true\n\treturn c.client.Get().\n\t\tNamespace(c.ns).\n\t\tResource(\"policyreports\").\n\t\tVersionedParams(&opts, scheme.ParameterCodec).\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/crd/client/clientset/versioned/typed/policyreport/v1alpha2/policyreport.go"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 15,
                  "endLine": 87,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\ttimeout = time.Duration(*opts.TimeoutSeconds) * time.Second\n\t}\n\tresult = &v1alpha2.PolicyReportList{}\n\terr = c.client.Get().\n\t\tNamespace(c.ns).\n\t\tResource(\"policyreports\").\n\t\tVersionedParams(&opts, scheme.ParameterCodec).\n",
                    "rendered": {
                      "text": "\t\ttimeout = time.Duration(*opts.TimeoutSeconds) * time.Second\n\t}\n\tresult = &v1alpha2.PolicyReportList{}\n\terr = c.client.Get().\n\t\tNamespace(c.ns).\n\t\tResource(\"policyreports\").\n\t\tVersionedParams(&opts, scheme.ParameterCodec).\n",
                      "markdown": "`\t\ttimeout = time.Duration(*opts.TimeoutSeconds) * time.Second\n\t}\n\tresult = &v1alpha2.PolicyReportList{}\n\terr = c.client.Get().\n\t\tNamespace(c.ns).\n\t\tResource(\"policyreports\").\n\t\tVersionedParams(&opts, scheme.ParameterCodec).\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/crd/client/clientset/versioned/typed/policyreport/v1alpha2/policyreport.go"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 15,
                  "endLine": 70,
                  "endColumn": 20,
                  "snippet": {
                    "text": "// Get takes name of the policyReport, and returns the corresponding policyReport object, and an error if there is any.\nfunc (c *policyReports) Get(ctx context.Context, name string, options v1.GetOptions) (result *v1alpha2.PolicyReport, err error) {\n\tresult = &v1alpha2.PolicyReport{}\n\terr = c.client.Get().\n\t\tNamespace(c.ns).\n\t\tResource(\"policyreports\").\n\t\tName(name).\n",
                    "rendered": {
                      "text": "// Get takes name of the policyReport, and returns the corresponding policyReport object, and an error if there is any.\nfunc (c *policyReports) Get(ctx context.Context, name string, options v1.GetOptions) (result *v1alpha2.PolicyReport, err error) {\n\tresult = &v1alpha2.PolicyReport{}\n\terr = c.client.Get().\n\t\tNamespace(c.ns).\n\t\tResource(\"policyreports\").\n\t\tName(name).\n",
                      "markdown": "`// Get takes name of the policyReport, and returns the corresponding policyReport object, and an error if there is any.\nfunc (c *policyReports) Get(ctx context.Context, name string, options v1.GetOptions) (result *v1alpha2.PolicyReport, err error) {\n\tresult = &v1alpha2.PolicyReport{}\n\terr = c.client.Get().\n\t\tNamespace(c.ns).\n\t\tResource(\"policyreports\").\n\t\tName(name).\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/crd/client/clientset/versioned/typed/policyreport/v1alpha2/policyreport.go"
                },
                "region": {
                  "startLine": 154,
                  "startColumn": 1,
                  "endLine": 154,
                  "endColumn": 10,
                  "snippet": {
                    "text": "func (c *policyReports) DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error {\n\tvar timeout time.Duration\n\tif listOpts.TimeoutSeconds != nil {\n\t\ttimeout = time.Duration(*listOpts.TimeoutSeconds) * time.Second\n\t}\n\treturn c.client.Delete().\n\t\tNamespace(c.ns).\n",
                    "rendered": {
                      "text": "func (c *policyReports) DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error {\n\tvar timeout time.Duration\n\tif listOpts.TimeoutSeconds != nil {\n\t\ttimeout = time.Duration(*listOpts.TimeoutSeconds) * time.Second\n\t}\n\treturn c.client.Delete().\n\t\tNamespace(c.ns).\n",
                      "markdown": "`func (c *policyReports) DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error {\n\tvar timeout time.Duration\n\tif listOpts.TimeoutSeconds != nil {\n\t\ttimeout = time.Duration(*listOpts.TimeoutSeconds) * time.Second\n\t}\n\treturn c.client.Delete().\n\t\tNamespace(c.ns).\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/crd/client/clientset/versioned/typed/policyreport/v1alpha2/policyreport.go"
                },
                "region": {
                  "startLine": 152,
                  "startColumn": 4,
                  "endLine": 152,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\n// DeleteCollection deletes a collection of objects.\nfunc (c *policyReports) DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error {\n\tvar timeout time.Duration\n\tif listOpts.TimeoutSeconds != nil {\n\t\ttimeout = time.Duration(*listOpts.TimeoutSeconds) * time.Second\n\t}\n",
                    "rendered": {
                      "text": "\n// DeleteCollection deletes a collection of objects.\nfunc (c *policyReports) DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error {\n\tvar timeout time.Duration\n\tif listOpts.TimeoutSeconds != nil {\n\t\ttimeout = time.Duration(*listOpts.TimeoutSeconds) * time.Second\n\t}\n",
                      "markdown": "`\n// DeleteCollection deletes a collection of objects.\nfunc (c *policyReports) DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error {\n\tvar timeout time.Duration\n\tif listOpts.TimeoutSeconds != nil {\n\t\ttimeout = time.Duration(*listOpts.TimeoutSeconds) * time.Second\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/crd/client/clientset/versioned/typed/policyreport/v1alpha2/policyreport.go"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 1,
                  "endLine": 101,
                  "endColumn": 10,
                  "snippet": {
                    "text": "func (c *policyReports) Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error) {\n\tvar timeout time.Duration\n\tif opts.TimeoutSeconds != nil {\n\t\ttimeout = time.Duration(*opts.TimeoutSeconds) * time.Second\n\t}\n\topts.Watch = true\n\treturn c.client.Get().\n",
                    "rendered": {
                      "text": "func (c *policyReports) Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error) {\n\tvar timeout time.Duration\n\tif opts.TimeoutSeconds != nil {\n\t\ttimeout = time.Duration(*opts.TimeoutSeconds) * time.Second\n\t}\n\topts.Watch = true\n\treturn c.client.Get().\n",
                      "markdown": "`func (c *policyReports) Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error) {\n\tvar timeout time.Duration\n\tif opts.TimeoutSeconds != nil {\n\t\ttimeout = time.Duration(*opts.TimeoutSeconds) * time.Second\n\t}\n\topts.Watch = true\n\treturn c.client.Get().\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/crd/client/clientset/versioned/typed/policyreport/v1alpha2/policyreport.go"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 4,
                  "endLine": 99,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\n// Watch returns a watch.Interface that watches the requested policyReports.\nfunc (c *policyReports) Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error) {\n\tvar timeout time.Duration\n\tif opts.TimeoutSeconds != nil {\n\t\ttimeout = time.Duration(*opts.TimeoutSeconds) * time.Second\n\t}\n",
                    "rendered": {
                      "text": "\n// Watch returns a watch.Interface that watches the requested policyReports.\nfunc (c *policyReports) Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error) {\n\tvar timeout time.Duration\n\tif opts.TimeoutSeconds != nil {\n\t\ttimeout = time.Duration(*opts.TimeoutSeconds) * time.Second\n\t}\n",
                      "markdown": "`\n// Watch returns a watch.Interface that watches the requested policyReports.\nfunc (c *policyReports) Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error) {\n\tvar timeout time.Duration\n\tif opts.TimeoutSeconds != nil {\n\t\ttimeout = time.Duration(*opts.TimeoutSeconds) * time.Second\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/crd/client/clientset/versioned/typed/policyreport/v1alpha2/policyreport.go"
                },
                "region": {
                  "startLine": 97,
                  "startColumn": 2,
                  "endLine": 97,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\treturn\n}\n\n// Watch returns a watch.Interface that watches the requested policyReports.\nfunc (c *policyReports) Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error) {\n\tvar timeout time.Duration\n\tif opts.TimeoutSeconds != nil {\n",
                    "rendered": {
                      "text": "\treturn\n}\n\n// Watch returns a watch.Interface that watches the requested policyReports.\nfunc (c *policyReports) Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error) {\n\tvar timeout time.Duration\n\tif opts.TimeoutSeconds != nil {\n",
                      "markdown": "`\treturn\n}\n\n// Watch returns a watch.Interface that watches the requested policyReports.\nfunc (c *policyReports) Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error) {\n\tvar timeout time.Duration\n\tif opts.TimeoutSeconds != nil {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/crd/client/clientset/versioned/typed/policyreport/v1alpha2/policyreport.go"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 1,
                  "endLine": 84,
                  "endColumn": 10,
                  "snippet": {
                    "text": "func (c *policyReports) List(ctx context.Context, opts v1.ListOptions) (result *v1alpha2.PolicyReportList, err error) {\n\tvar timeout time.Duration\n\tif opts.TimeoutSeconds != nil {\n\t\ttimeout = time.Duration(*opts.TimeoutSeconds) * time.Second\n\t}\n\tresult = &v1alpha2.PolicyReportList{}\n\terr = c.client.Get().\n",
                    "rendered": {
                      "text": "func (c *policyReports) List(ctx context.Context, opts v1.ListOptions) (result *v1alpha2.PolicyReportList, err error) {\n\tvar timeout time.Duration\n\tif opts.TimeoutSeconds != nil {\n\t\ttimeout = time.Duration(*opts.TimeoutSeconds) * time.Second\n\t}\n\tresult = &v1alpha2.PolicyReportList{}\n\terr = c.client.Get().\n",
                      "markdown": "`func (c *policyReports) List(ctx context.Context, opts v1.ListOptions) (result *v1alpha2.PolicyReportList, err error) {\n\tvar timeout time.Duration\n\tif opts.TimeoutSeconds != nil {\n\t\ttimeout = time.Duration(*opts.TimeoutSeconds) * time.Second\n\t}\n\tresult = &v1alpha2.PolicyReportList{}\n\terr = c.client.Get().\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/crd/client/clientset/versioned/typed/policyreport/v1alpha2/policyreport.go"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 4,
                  "endLine": 82,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\n// List takes label and field selectors, and returns the list of PolicyReports that match those selectors.\nfunc (c *policyReports) List(ctx context.Context, opts v1.ListOptions) (result *v1alpha2.PolicyReportList, err error) {\n\tvar timeout time.Duration\n\tif opts.TimeoutSeconds != nil {\n\t\ttimeout = time.Duration(*opts.TimeoutSeconds) * time.Second\n\t}\n",
                    "rendered": {
                      "text": "\n// List takes label and field selectors, and returns the list of PolicyReports that match those selectors.\nfunc (c *policyReports) List(ctx context.Context, opts v1.ListOptions) (result *v1alpha2.PolicyReportList, err error) {\n\tvar timeout time.Duration\n\tif opts.TimeoutSeconds != nil {\n\t\ttimeout = time.Duration(*opts.TimeoutSeconds) * time.Second\n\t}\n",
                      "markdown": "`\n// List takes label and field selectors, and returns the list of PolicyReports that match those selectors.\nfunc (c *policyReports) List(ctx context.Context, opts v1.ListOptions) (result *v1alpha2.PolicyReportList, err error) {\n\tvar timeout time.Duration\n\tif opts.TimeoutSeconds != nil {\n\t\ttimeout = time.Duration(*opts.TimeoutSeconds) * time.Second\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/crd/client/clientset/versioned/typed/policyreport/v1alpha2/policyreport.go"
                },
                "region": {
                  "startLine": 27,
                  "endLine": 27,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\n\tv1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n\ttypes \"k8s.io/apimachinery/pkg/types\"\n\twatch \"k8s.io/apimachinery/pkg/watch\"\n\trest \"k8s.io/client-go/rest\"\n\n\tv1alpha2 \"github.com/kyverno/policy-reporter/pkg/crd/api/policyreport/v1alpha2\"\n",
                    "rendered": {
                      "text": "\n\tv1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n\ttypes \"k8s.io/apimachinery/pkg/types\"\n\twatch \"k8s.io/apimachinery/pkg/watch\"\n\trest \"k8s.io/client-go/rest\"\n\n\tv1alpha2 \"github.com/kyverno/policy-reporter/pkg/crd/api/policyreport/v1alpha2\"\n",
                      "markdown": "`\n\tv1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n\ttypes \"k8s.io/apimachinery/pkg/types\"\n\twatch \"k8s.io/apimachinery/pkg/watch\"\n\trest \"k8s.io/client-go/rest\"\n\n\tv1alpha2 \"github.com/kyverno/policy-reporter/pkg/crd/api/policyreport/v1alpha2\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/templates/violations.html"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 688,
                  "endLine": 10,
                  "endColumn": 696,
                  "snippet": {
                    "text": ";font-weight:inherit;line-height:inherit}img{-ms-interpolation-mode:bicubic}table:not([class^=s-]){font-family:Helvetica,Arial,sans-serif;mso-table-lspace:0pt;mso-table-rspace:0pt;border-spacing:0px;border-collapse:collapse}table:not([class^=s-]) td{border-spacing:0px;border-collapse:collapse}@media screen and (max-width: 600px){.row-responsive.row{margin-right:0 !important}td.col-lg-3{display:block;width:100% !important;padding-left:0 !important;padding-right:0 !important}.w-full,.w-full>tbody>tr>td{width:100% !important}.p-4:not(table),.p-4:not(.btn)>tbody>tr>td,.p-4.btn td a{padding:16px !important",
                    "rendered": {
                      "text": ";font-weight:inherit;line-height:inherit}img{-ms-interpolation-mode:bicubic}table:not([class^=s-]){font-family:Helvetica,Arial,sans-serif;mso-table-lspace:0pt;mso-table-rspace:0pt;border-spacing:0px;border-collapse:collapse}table:not([class^=s-]) td{border-spacing:0px;border-collapse:collapse}@media screen and (max-width: 600px){.row-responsive.row{margin-right:0 !important}td.col-lg-3{display:block;width:100% !important;padding-left:0 !important;padding-right:0 !important}.w-full,.w-full>tbody>tr>td{width:100% !important}.p-4:not(table),.p-4:not(.btn)>tbody>tr>td,.p-4.btn td a{padding:16px !important",
                      "markdown": "`;font-weight:inherit;line-height:inherit}img{-ms-interpolation-mode:bicubic}table:not([class^=s-]){font-family:Helvetica,Arial,sans-serif;mso-table-lspace:0pt;mso-table-rspace:0pt;border-spacing:0px;border-collapse:collapse}table:not([class^=s-]) td{border-spacing:0px;border-collapse:collapse}@media screen and (max-width: 600px){.row-responsive.row{margin-right:0 !important}td.col-lg-3{display:block;width:100% !important;padding-left:0 !important;padding-right:0 !important}.w-full,.w-full>tbody>tr>td{width:100% !important}.p-4:not(table),.p-4:not(.btn)>tbody>tr>td,.p-4.btn td a{padding:16px !important`"
                    }
                  },
                  "sourceLanguage": "html"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/monitoring/auth-secret.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 33,
                  "endLine": 17,
                  "endColumn": 41,
                  "snippet": {
                    "text": "type: Opaque\ndata:\n  username: {{ .Values.basicAuth.username | b64enc }}\n  password: {{ .Values.basicAuth.password | b64enc }}\n{{- end }}\n{{- end }}",
                    "rendered": {
                      "text": "type: Opaque\ndata:\n  username: {{ .Values.basicAuth.username | b64enc }}\n  password: {{ .Values.basicAuth.password | b64enc }}\n{{- end }}\n{{- end }}",
                      "markdown": "`type: Opaque\ndata:\n  username: {{ .Values.basicAuth.username | b64enc }}\n  password: {{ .Values.basicAuth.password | b64enc }}\n{{- end }}\n{{- end }}`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/monitoring/auth-secret.yaml"
                },
                "region": {
                  "startLine": 17,
                  "startColumn": 2,
                  "endLine": 17,
                  "endColumn": 10,
                  "snippet": {
                    "text": "type: Opaque\ndata:\n  username: {{ .Values.basicAuth.username | b64enc }}\n  password: {{ .Values.basicAuth.password | b64enc }}\n{{- end }}\n{{- end }}",
                    "rendered": {
                      "text": "type: Opaque\ndata:\n  username: {{ .Values.basicAuth.username | b64enc }}\n  password: {{ .Values.basicAuth.password | b64enc }}\n{{- end }}\n{{- end }}",
                      "markdown": "`type: Opaque\ndata:\n  username: {{ .Values.basicAuth.username | b64enc }}\n  password: {{ .Values.basicAuth.password | b64enc }}\n{{- end }}\n{{- end }}`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/monitoring/auth-secret.yaml"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 56,
                  "endLine": 2,
                  "endColumn": 64,
                  "snippet": {
                    "text": "{{- if and .Values.monitoring.enabled }}\n{{- if and .Values.basicAuth.username .Values.basicAuth.password }}\napiVersion: v1\nkind: Secret\nmetadata:\n",
                    "rendered": {
                      "text": "{{- if and .Values.monitoring.enabled }}\n{{- if and .Values.basicAuth.username .Values.basicAuth.password }}\napiVersion: v1\nkind: Secret\nmetadata:\n",
                      "markdown": "`{{- if and .Values.monitoring.enabled }}\n{{- if and .Values.basicAuth.username .Values.basicAuth.password }}\napiVersion: v1\nkind: Secret\nmetadata:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/_helpers.tpl"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 16,
                  "endLine": 159,
                  "endColumn": 24,
                  "snippet": {
                    "text": "  certificate: {{ .certificate | quote }}\n  skipTLS: {{ .skipTLS }}\n  username: {{ .username | quote }}\n  password: {{ .password | quote }}\n  apiKey: {{ .apiKey | quote }}\n  index: {{ .index| quote }}\n  rotation: {{ .rotation | quote }}\n",
                    "rendered": {
                      "text": "  certificate: {{ .certificate | quote }}\n  skipTLS: {{ .skipTLS }}\n  username: {{ .username | quote }}\n  password: {{ .password | quote }}\n  apiKey: {{ .apiKey | quote }}\n  index: {{ .index| quote }}\n  rotation: {{ .rotation | quote }}\n",
                      "markdown": "`  certificate: {{ .certificate | quote }}\n  skipTLS: {{ .skipTLS }}\n  username: {{ .username | quote }}\n  password: {{ .password | quote }}\n  apiKey: {{ .apiKey | quote }}\n  index: {{ .index| quote }}\n  rotation: {{ .rotation | quote }}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/_helpers.tpl"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 2,
                  "endLine": 159,
                  "endColumn": 10,
                  "snippet": {
                    "text": "  certificate: {{ .certificate | quote }}\n  skipTLS: {{ .skipTLS }}\n  username: {{ .username | quote }}\n  password: {{ .password | quote }}\n  apiKey: {{ .apiKey | quote }}\n  index: {{ .index| quote }}\n  rotation: {{ .rotation | quote }}\n",
                    "rendered": {
                      "text": "  certificate: {{ .certificate | quote }}\n  skipTLS: {{ .skipTLS }}\n  username: {{ .username | quote }}\n  password: {{ .password | quote }}\n  apiKey: {{ .apiKey | quote }}\n  index: {{ .index| quote }}\n  rotation: {{ .rotation | quote }}\n",
                      "markdown": "`  certificate: {{ .certificate | quote }}\n  skipTLS: {{ .skipTLS }}\n  username: {{ .username | quote }}\n  password: {{ .password | quote }}\n  apiKey: {{ .apiKey | quote }}\n  index: {{ .index| quote }}\n  rotation: {{ .rotation | quote }}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/_helpers.tpl"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 11,
                  "endLine": 7,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n{{/*\nCreate a default fully qualified app name.\nWe truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).\nIf release name contains chart name it will be used as a full name.\n*/}}\n{{- define \"policyreporter.fullname\" -}}\n",
                    "rendered": {
                      "text": "\n{{/*\nCreate a default fully qualified app name.\nWe truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).\nIf release name contains chart name it will be used as a full name.\n*/}}\n{{- define \"policyreporter.fullname\" -}}\n",
                      "markdown": "`\n{{/*\nCreate a default fully qualified app name.\nWe truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).\nIf release name contains chart name it will be used as a full name.\n*/}}\n{{- define \"policyreporter.fullname\" -}}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/_helpers.tpl"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 22,
                  "endLine": 63,
                  "endColumn": 31,
                  "snippet": {
                    "text": "{{- end }}\n\n{{/*\nCreate the name of the service account to use\n*/}}\n{{- define \"policyreporter.serviceAccountName\" -}}\n{{- if .Values.serviceAccount.create }}\n",
                    "rendered": {
                      "text": "{{- end }}\n\n{{/*\nCreate the name of the service account to use\n*/}}\n{{- define \"policyreporter.serviceAccountName\" -}}\n{{- if .Values.serviceAccount.create }}\n",
                      "markdown": "`{{- end }}\n\n{{/*\nCreate the name of the service account to use\n*/}}\n{{- define \"policyreporter.serviceAccountName\" -}}\n{{- if .Values.serviceAccount.create }}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md.gotmpl"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 116,
                  "endLine": 23,
                  "endColumn": 120,
                  "snippet": {
                    "text": "\n### Basic Installation\n\nThe basic installation provides an Prometheus Metrics Endpoint and different REST APIs, for more details have a look at the [Documentation](https://kyverno.github.io/policy-reporter/guide/02-getting-started).\n\n```bash\nhelm install policy-reporter policy-reporter/policy-reporter -n policy-reporter --create-namespace\n",
                    "rendered": {
                      "text": "\n### Basic Installation\n\nThe basic installation provides an Prometheus Metrics Endpoint and different REST APIs, for more details have a look at the [Documentation](https://kyverno.github.io/policy-reporter/guide/02-getting-started).\n\n```bash\nhelm install policy-reporter policy-reporter/policy-reporter -n policy-reporter --create-namespace\n",
                      "markdown": "`\n### Basic Installation\n\nThe basic installation provides an Prometheus Metrics Endpoint and different REST APIs, for more details have a look at the [Documentation](https://kyverno.github.io/policy-reporter/guide/02-getting-started).\n\n```bash\nhelm install policy-reporter policy-reporter/policy-reporter -n policy-reporter --create-namespace\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md.gotmpl"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 9,
                  "endLine": 19,
                  "snippet": {
                    "text": "### Add the Helm repository\n```bash\nhelm repo add policy-reporter https://kyverno.github.io/policy-reporter\nhelm repo update\n```\n\n### Basic Installation\n\n",
                    "rendered": {
                      "text": "### Add the Helm repository\n```bash\nhelm repo add policy-reporter https://kyverno.github.io/policy-reporter\nhelm repo update\n```\n\n### Basic Installation\n\n",
                      "markdown": "`### Add the Helm repository\n```bash\nhelm repo add policy-reporter https://kyverno.github.io/policy-reporter\nhelm repo update\n```\n\n### Basic Installation\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/README.md.gotmpl"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 7,
                  "endLine": 9,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\n## Documentation\n\nYou can find detailed Information and Screens about Features and Configurations in the [Documentation](https://kyverno.github.io/policy-reporter-docs).\n\n## Installation with Helm v3\n\n",
                    "rendered": {
                      "text": "\n## Documentation\n\nYou can find detailed Information and Screens about Features and Configurations in the [Documentation](https://kyverno.github.io/policy-reporter-docs).\n\n## Installation with Helm v3\n\n",
                      "markdown": "`\n## Documentation\n\nYou can find detailed Information and Screens about Features and Configurations in the [Documentation](https://kyverno.github.io/policy-reporter-docs).\n\n## Installation with Helm v3\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.github/workflows/release-image.yaml"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 10,
                  "endLine": 39,
                  "endColumn": 18,
                  "snippet": {
                    "text": "        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.CR_PAT }}\n\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0\n",
                    "rendered": {
                      "text": "        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.CR_PAT }}\n\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0\n",
                      "markdown": "`        with:\n          registry: ghcr.io\n          username: ${{ github.repository_owner }}\n          password: ${{ secrets.CR_PAT }}\n\n      - name: Set up QEMU\n        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.github/workflows/release-image.yaml"
                },
                "region": {
                  "startLine": 166,
                  "startColumn": 67,
                  "endLine": 166,
                  "endColumn": 80,
                  "snippet": {
                    "text": "            -a \"repo=${{ github.repository }}\" \\\n            -a \"workflow=${{ github.workflow }}\" \\\n            -a \"ref=${{ github.sha }}\" \\\n          ghcr.io/${{github.repository_owner}}/policy-reporter@${{ env.PROVENANCE_DIGEST_ARM64}}\n",
                    "rendered": {
                      "text": "            -a \"repo=${{ github.repository }}\" \\\n            -a \"workflow=${{ github.workflow }}\" \\\n            -a \"ref=${{ github.sha }}\" \\\n          ghcr.io/${{github.repository_owner}}/policy-reporter@${{ env.PROVENANCE_DIGEST_ARM64}}\n",
                      "markdown": "`            -a \"repo=${{ github.repository }}\" \\\n            -a \"workflow=${{ github.workflow }}\" \\\n            -a \"ref=${{ github.sha }}\" \\\n          ghcr.io/${{github.repository_owner}}/policy-reporter@${{ env.PROVENANCE_DIGEST_ARM64}}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.github/workflows/release-image.yaml"
                },
                "region": {
                  "startLine": 160,
                  "startColumn": 67,
                  "endLine": 160,
                  "endColumn": 80,
                  "snippet": {
                    "text": "            -a \"repo=${{ github.repository }}\" \\\n            -a \"workflow=${{ github.workflow }}\" \\\n            -a \"ref=${{ github.sha }}\" \\\n          ghcr.io/${{github.repository_owner}}/policy-reporter@${{ env.PROVENANCE_DIGEST_AMD64}}\n\n          cosign sign --yes \\\n            -a \"repo=${{ github.repository }}\" \\\n",
                    "rendered": {
                      "text": "            -a \"repo=${{ github.repository }}\" \\\n            -a \"workflow=${{ github.workflow }}\" \\\n            -a \"ref=${{ github.sha }}\" \\\n          ghcr.io/${{github.repository_owner}}/policy-reporter@${{ env.PROVENANCE_DIGEST_AMD64}}\n\n          cosign sign --yes \\\n            -a \"repo=${{ github.repository }}\" \\\n",
                      "markdown": "`            -a \"repo=${{ github.repository }}\" \\\n            -a \"workflow=${{ github.workflow }}\" \\\n            -a \"ref=${{ github.sha }}\" \\\n          ghcr.io/${{github.repository_owner}}/policy-reporter@${{ env.PROVENANCE_DIGEST_AMD64}}\n\n          cosign sign --yes \\\n            -a \"repo=${{ github.repository }}\" \\\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.github/workflows/release-image.yaml"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 14,
                  "endLine": 107,
                  "snippet": {
                    "text": "        uses: kubewarden/github-actions/crane-installer@d94509d260ee11a92b4f65bc0acd297feec24d7f # v3.3.5\n\n      - name: Find platform digest\n        shell: bash\n        run: |\n          set -e\n          DIGEST_AMD64=$(crane digest \\\n            --platform \"linux/amd64\" \\\n",
                    "rendered": {
                      "text": "        uses: kubewarden/github-actions/crane-installer@d94509d260ee11a92b4f65bc0acd297feec24d7f # v3.3.5\n\n      - name: Find platform digest\n        shell: bash\n        run: |\n          set -e\n          DIGEST_AMD64=$(crane digest \\\n            --platform \"linux/amd64\" \\\n",
                      "markdown": "`        uses: kubewarden/github-actions/crane-installer@d94509d260ee11a92b4f65bc0acd297feec24d7f # v3.3.5\n\n      - name: Find platform digest\n        shell: bash\n        run: |\n          set -e\n          DIGEST_AMD64=$(crane digest \\\n            --platform \"linux/amd64\" \\\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.github/workflows/release-image.yaml"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 14,
                  "endLine": 97,
                  "snippet": {
                    "text": "          path: policy-reporter-bom.cdx.json\n\n      - name: Attach SBOM to image\n        shell: bash\n        env:\n          COSIGN_REPOSITORY: ghcr.io/${{github.repository_owner}}/sbom\n        run: |\n          cosign attach sbom --sbom ./policy-reporter-bom.cdx.json --type cyclonedx ghcr.io/${{github.repository_owner}}/policy-reporter@${{ steps.push.outputs.digest }}\n",
                    "rendered": {
                      "text": "          path: policy-reporter-bom.cdx.json\n\n      - name: Attach SBOM to image\n        shell: bash\n        env:\n          COSIGN_REPOSITORY: ghcr.io/${{github.repository_owner}}/sbom\n        run: |\n          cosign attach sbom --sbom ./policy-reporter-bom.cdx.json --type cyclonedx ghcr.io/${{github.repository_owner}}/policy-reporter@${{ steps.push.outputs.digest }}\n",
                      "markdown": "`          path: policy-reporter-bom.cdx.json\n\n      - name: Attach SBOM to image\n        shell: bash\n        env:\n          COSIGN_REPOSITORY: ghcr.io/${{github.repository_owner}}/sbom\n        run: |\n          cosign attach sbom --sbom ./policy-reporter-bom.cdx.json --type cyclonedx ghcr.io/${{github.repository_owner}}/policy-reporter@${{ steps.push.outputs.digest }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.github/workflows/release-image.yaml"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 14,
                  "endLine": 68,
                  "snippet": {
                    "text": "        uses: sigstore/cosign-installer@dc72c7d5c4d10cd6bcb8cf6e3fd625a9e5e537da # v3.7.0\n\n      - name: Sign image\n        shell: bash\n        env:\n          COSIGN_REPOSITORY: ghcr.io/${{github.repository_owner}}/signatures\n        run: |\n          set -e\n",
                    "rendered": {
                      "text": "        uses: sigstore/cosign-installer@dc72c7d5c4d10cd6bcb8cf6e3fd625a9e5e537da # v3.7.0\n\n      - name: Sign image\n        shell: bash\n        env:\n          COSIGN_REPOSITORY: ghcr.io/${{github.repository_owner}}/signatures\n        run: |\n          set -e\n",
                      "markdown": "`        uses: sigstore/cosign-installer@dc72c7d5c4d10cd6bcb8cf6e3fd625a9e5e537da # v3.7.0\n\n      - name: Sign image\n        shell: bash\n        env:\n          COSIGN_REPOSITORY: ghcr.io/${{github.repository_owner}}/signatures\n        run: |\n          set -e\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.github/workflows/release-image.yaml"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 13,
                  "endLine": 144,
                  "endColumn": 19,
                  "snippet": {
                    "text": "            -a \"ref=${{ github.sha }}\" \\\n            ghcr.io/${{github.repository_owner}}/policy-reporter@${{ env.ATTESTATION_MANIFEST_DIGEST_ARM64}}\n\n      - name: Find provenance manifest digest\n        run: |\n          set -e\n          DIGEST_AMD64=$(crane manifest ghcr.io/${{github.repository_owner}}/policy-reporter@${{ env.ATTESTATION_MANIFEST_DIGEST_AMD64}} | \\\n",
                    "rendered": {
                      "text": "            -a \"ref=${{ github.sha }}\" \\\n            ghcr.io/${{github.repository_owner}}/policy-reporter@${{ env.ATTESTATION_MANIFEST_DIGEST_ARM64}}\n\n      - name: Find provenance manifest digest\n        run: |\n          set -e\n          DIGEST_AMD64=$(crane manifest ghcr.io/${{github.repository_owner}}/policy-reporter@${{ env.ATTESTATION_MANIFEST_DIGEST_AMD64}} | \\\n",
                      "markdown": "`            -a \"ref=${{ github.sha }}\" \\\n            ghcr.io/${{github.repository_owner}}/policy-reporter@${{ env.ATTESTATION_MANIFEST_DIGEST_ARM64}}\n\n      - name: Find provenance manifest digest\n        run: |\n          set -e\n          DIGEST_AMD64=$(crane manifest ghcr.io/${{github.repository_owner}}/policy-reporter@${{ env.ATTESTATION_MANIFEST_DIGEST_AMD64}} | \\\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.github/workflows/release-image.yaml"
                },
                "region": {
                  "startLine": 118,
                  "startColumn": 13,
                  "endLine": 118,
                  "endColumn": 19,
                  "snippet": {
                    "text": "            ghcr.io/${{github.repository_owner}}/policy-reporter@${{ steps.push.outputs.digest }})\n          echo \"PLATFORM_DIGEST_ARM64=${DIGEST_ARM64}\" >> \"$GITHUB_ENV\"\n\n      - name: Find attestation digest\n        run: |\n          set -e\n          DIGEST_AMD64=$(crane manifest ghcr.io/${{github.repository_owner}}/policy-reporter@${{ steps.push.outputs.digest }} \\\n",
                    "rendered": {
                      "text": "            ghcr.io/${{github.repository_owner}}/policy-reporter@${{ steps.push.outputs.digest }})\n          echo \"PLATFORM_DIGEST_ARM64=${DIGEST_ARM64}\" >> \"$GITHUB_ENV\"\n\n      - name: Find attestation digest\n        run: |\n          set -e\n          DIGEST_AMD64=$(crane manifest ghcr.io/${{github.repository_owner}}/policy-reporter@${{ steps.push.outputs.digest }} \\\n",
                      "markdown": "`            ghcr.io/${{github.repository_owner}}/policy-reporter@${{ steps.push.outputs.digest }})\n          echo \"PLATFORM_DIGEST_ARM64=${DIGEST_ARM64}\" >> \"$GITHUB_ENV\"\n\n      - name: Find attestation digest\n        run: |\n          set -e\n          DIGEST_AMD64=$(crane manifest ghcr.io/${{github.repository_owner}}/policy-reporter@${{ steps.push.outputs.digest }} \\\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.github/workflows/release-image.yaml"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 14,
                  "endLine": 107,
                  "snippet": {
                    "text": "        uses: kubewarden/github-actions/crane-installer@d94509d260ee11a92b4f65bc0acd297feec24d7f # v3.3.5\n\n      - name: Find platform digest\n        shell: bash\n        run: |\n          set -e\n          DIGEST_AMD64=$(crane digest \\\n            --platform \"linux/amd64\" \\\n",
                    "rendered": {
                      "text": "        uses: kubewarden/github-actions/crane-installer@d94509d260ee11a92b4f65bc0acd297feec24d7f # v3.3.5\n\n      - name: Find platform digest\n        shell: bash\n        run: |\n          set -e\n          DIGEST_AMD64=$(crane digest \\\n            --platform \"linux/amd64\" \\\n",
                      "markdown": "`        uses: kubewarden/github-actions/crane-installer@d94509d260ee11a92b4f65bc0acd297feec24d7f # v3.3.5\n\n      - name: Find platform digest\n        shell: bash\n        run: |\n          set -e\n          DIGEST_AMD64=$(crane digest \\\n            --platform \"linux/amd64\" \\\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.github/workflows/release-image.yaml"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 13,
                  "endLine": 105,
                  "endColumn": 19,
                  "snippet": {
                    "text": "      - name: Install the crane command\n        uses: kubewarden/github-actions/crane-installer@d94509d260ee11a92b4f65bc0acd297feec24d7f # v3.3.5\n\n      - name: Find platform digest\n        shell: bash\n        run: |\n          set -e\n",
                    "rendered": {
                      "text": "      - name: Install the crane command\n        uses: kubewarden/github-actions/crane-installer@d94509d260ee11a92b4f65bc0acd297feec24d7f # v3.3.5\n\n      - name: Find platform digest\n        shell: bash\n        run: |\n          set -e\n",
                      "markdown": "`      - name: Install the crane command\n        uses: kubewarden/github-actions/crane-installer@d94509d260ee11a92b4f65bc0acd297feec24d7f # v3.3.5\n\n      - name: Find platform digest\n        shell: bash\n        run: |\n          set -e\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.github/workflows/release-image.yaml"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 14,
                  "endLine": 97,
                  "snippet": {
                    "text": "          path: policy-reporter-bom.cdx.json\n\n      - name: Attach SBOM to image\n        shell: bash\n        env:\n          COSIGN_REPOSITORY: ghcr.io/${{github.repository_owner}}/sbom\n        run: |\n          cosign attach sbom --sbom ./policy-reporter-bom.cdx.json --type cyclonedx ghcr.io/${{github.repository_owner}}/policy-reporter@${{ steps.push.outputs.digest }}\n",
                    "rendered": {
                      "text": "          path: policy-reporter-bom.cdx.json\n\n      - name: Attach SBOM to image\n        shell: bash\n        env:\n          COSIGN_REPOSITORY: ghcr.io/${{github.repository_owner}}/sbom\n        run: |\n          cosign attach sbom --sbom ./policy-reporter-bom.cdx.json --type cyclonedx ghcr.io/${{github.repository_owner}}/policy-reporter@${{ steps.push.outputs.digest }}\n",
                      "markdown": "`          path: policy-reporter-bom.cdx.json\n\n      - name: Attach SBOM to image\n        shell: bash\n        env:\n          COSIGN_REPOSITORY: ghcr.io/${{github.repository_owner}}/sbom\n        run: |\n          cosign attach sbom --sbom ./policy-reporter-bom.cdx.json --type cyclonedx ghcr.io/${{github.repository_owner}}/policy-reporter@${{ steps.push.outputs.digest }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.github/workflows/release-image.yaml"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 14,
                  "endLine": 68,
                  "snippet": {
                    "text": "        uses: sigstore/cosign-installer@dc72c7d5c4d10cd6bcb8cf6e3fd625a9e5e537da # v3.7.0\n\n      - name: Sign image\n        shell: bash\n        env:\n          COSIGN_REPOSITORY: ghcr.io/${{github.repository_owner}}/signatures\n        run: |\n          set -e\n",
                    "rendered": {
                      "text": "        uses: sigstore/cosign-installer@dc72c7d5c4d10cd6bcb8cf6e3fd625a9e5e537da # v3.7.0\n\n      - name: Sign image\n        shell: bash\n        env:\n          COSIGN_REPOSITORY: ghcr.io/${{github.repository_owner}}/signatures\n        run: |\n          set -e\n",
                      "markdown": "`        uses: sigstore/cosign-installer@dc72c7d5c4d10cd6bcb8cf6e3fd625a9e5e537da # v3.7.0\n\n      - name: Sign image\n        shell: bash\n        env:\n          COSIGN_REPOSITORY: ghcr.io/${{github.repository_owner}}/signatures\n        run: |\n          set -e\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.github/workflows/release-image.yaml"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 20,
                  "endLine": 44,
                  "endColumn": 28,
                  "snippet": {
                    "text": "      - name: Set up QEMU\n        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 #v3.7.1\n        id: buildx\n        with:\n",
                    "rendered": {
                      "text": "      - name: Set up QEMU\n        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 #v3.7.1\n        id: buildx\n        with:\n",
                      "markdown": "`      - name: Set up QEMU\n        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0\n\n      - name: Set up Docker Buildx\n        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 #v3.7.1\n        id: buildx\n        with:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.github/workflows/release-image.yaml"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 81,
                  "endLine": 30,
                  "endColumn": 86,
                  "snippet": {
                    "text": "          # Strip git ref prefix from version\n          VERSION=$(echo \"${{ github.ref }}\" | sed -e 's,.*/\\(.*\\),\\1,')\n          # Strip \"v\" prefix from tag name\n          [[ \"${{ github.ref }}\" == \"refs/tags/\"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')\n          echo VERSION=$VERSION\n          echo \"VERSION=$VERSION\" >> \"$GITHUB_ENV\"\n\n",
                    "rendered": {
                      "text": "          # Strip git ref prefix from version\n          VERSION=$(echo \"${{ github.ref }}\" | sed -e 's,.*/\\(.*\\),\\1,')\n          # Strip \"v\" prefix from tag name\n          [[ \"${{ github.ref }}\" == \"refs/tags/\"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')\n          echo VERSION=$VERSION\n          echo \"VERSION=$VERSION\" >> \"$GITHUB_ENV\"\n\n",
                      "markdown": "`          # Strip git ref prefix from version\n          VERSION=$(echo \"${{ github.ref }}\" | sed -e 's,.*/\\(.*\\),\\1,')\n          # Strip \"v\" prefix from tag name\n          [[ \"${{ github.ref }}\" == \"refs/tags/\"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')\n          echo VERSION=$VERSION\n          echo \"VERSION=$VERSION\" >> \"$GITHUB_ENV\"\n\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.github/workflows/release-image.yaml"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 46,
                  "endLine": 28,
                  "endColumn": 51,
                  "snippet": {
                    "text": "        id: params\n        run: |\n          # Strip git ref prefix from version\n          VERSION=$(echo \"${{ github.ref }}\" | sed -e 's,.*/\\(.*\\),\\1,')\n          # Strip \"v\" prefix from tag name\n          [[ \"${{ github.ref }}\" == \"refs/tags/\"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')\n          echo VERSION=$VERSION\n",
                    "rendered": {
                      "text": "        id: params\n        run: |\n          # Strip git ref prefix from version\n          VERSION=$(echo \"${{ github.ref }}\" | sed -e 's,.*/\\(.*\\),\\1,')\n          # Strip \"v\" prefix from tag name\n          [[ \"${{ github.ref }}\" == \"refs/tags/\"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')\n          echo VERSION=$VERSION\n",
                      "markdown": "`        id: params\n        run: |\n          # Strip git ref prefix from version\n          VERSION=$(echo \"${{ github.ref }}\" | sed -e 's,.*/\\(.*\\),\\1,')\n          # Strip \"v\" prefix from tag name\n          [[ \"${{ github.ref }}\" == \"refs/tags/\"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')\n          echo VERSION=$VERSION\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/.github/workflows/release-image.yaml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 17,
                  "endLine": 27,
                  "endColumn": 22,
                  "snippet": {
                    "text": "      - name: Parse Version\n        id: params\n        run: |\n          # Strip git ref prefix from version\n          VERSION=$(echo \"${{ github.ref }}\" | sed -e 's,.*/\\(.*\\),\\1,')\n          # Strip \"v\" prefix from tag name\n          [[ \"${{ github.ref }}\" == \"refs/tags/\"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')\n",
                    "rendered": {
                      "text": "      - name: Parse Version\n        id: params\n        run: |\n          # Strip git ref prefix from version\n          VERSION=$(echo \"${{ github.ref }}\" | sed -e 's,.*/\\(.*\\),\\1,')\n          # Strip \"v\" prefix from tag name\n          [[ \"${{ github.ref }}\" == \"refs/tags/\"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')\n",
                      "markdown": "`      - name: Parse Version\n        id: params\n        run: |\n          # Strip git ref prefix from version\n          VERSION=$(echo \"${{ github.ref }}\" | sed -e 's,.*/\\(.*\\),\\1,')\n          # Strip \"v\" prefix from tag name\n          [[ \"${{ github.ref }}\" == \"refs/tags/\"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/README.md"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 9,
                  "endLine": 21,
                  "snippet": {
                    "text": "### Add the Helm repository\n```bash\nhelm repo add policy-reporter https://kyverno.github.io/policy-reporter\nhelm repo update\n```\n\n### Installation with Policy Reporter UI and Kyverno Plugin enabled\n```bash\n",
                    "rendered": {
                      "text": "### Add the Helm repository\n```bash\nhelm repo add policy-reporter https://kyverno.github.io/policy-reporter\nhelm repo update\n```\n\n### Installation with Policy Reporter UI and Kyverno Plugin enabled\n```bash\n",
                      "markdown": "`### Add the Helm repository\n```bash\nhelm repo add policy-reporter https://kyverno.github.io/policy-reporter\nhelm repo update\n```\n\n### Installation with Policy Reporter UI and Kyverno Plugin enabled\n```bash\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/cmd/send/summary.go"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 7,
                  "endLine": 125,
                  "snippet": {
                    "text": "\t\t},\n\t}\n\n\treturn cmd\n}\n",
                    "rendered": {
                      "text": "\t\t},\n\t}\n\n\treturn cmd\n}\n",
                      "markdown": "`\t\t},\n\t}\n\n\treturn cmd\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/cmd/send/summary.go"
                },
                "region": {
                  "startLine": 17,
                  "endLine": 17,
                  "endColumn": 5,
                  "snippet": {
                    "text": ")\n\nfunc NewSummaryCMD() *cobra.Command {\n\tcmd := &cobra.Command{\n\t\tUse:   \"summary\",\n\t\tShort: \"Send a summary e-mail to the configured emails\",\n\t\tRunE: func(cmd *cobra.Command, args []string) error {\n",
                    "rendered": {
                      "text": ")\n\nfunc NewSummaryCMD() *cobra.Command {\n\tcmd := &cobra.Command{\n\t\tUse:   \"summary\",\n\t\tShort: \"Send a summary e-mail to the configured emails\",\n\t\tRunE: func(cmd *cobra.Command, args []string) error {\n",
                      "markdown": "`)\n\nfunc NewSummaryCMD() *cobra.Command {\n\tcmd := &cobra.Command{\n\t\tUse:   \"summary\",\n\t\tShort: \"Send a summary e-mail to the configured emails\",\n\t\tRunE: func(cmd *cobra.Command, args []string) error {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/cmd/send.go"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 7,
                  "endLine": 27,
                  "snippet": {
                    "text": "\n\tflag.Parse()\n\n\treturn cmd\n}\n",
                    "rendered": {
                      "text": "\n\tflag.Parse()\n\n\treturn cmd\n}\n",
                      "markdown": "`\n\tflag.Parse()\n\n\treturn cmd\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/cmd/send.go"
                },
                "region": {
                  "startLine": 12,
                  "endLine": 12,
                  "endColumn": 5,
                  "snippet": {
                    "text": ")\n\nfunc newSendCMD() *cobra.Command {\n\tcmd := &cobra.Command{\n\t\tUse:   \"send\",\n\t\tShort: \"Send different kinds of email reports\",\n\t}\n",
                    "rendered": {
                      "text": ")\n\nfunc newSendCMD() *cobra.Command {\n\tcmd := &cobra.Command{\n\t\tUse:   \"send\",\n\t\tShort: \"Send different kinds of email reports\",\n\t}\n",
                      "markdown": "`)\n\nfunc newSendCMD() *cobra.Command {\n\tcmd := &cobra.Command{\n\t\tUse:   \"send\",\n\t\tShort: \"Send different kinds of email reports\",\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/cmd/send.go"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 7,
                  "endLine": 2,
                  "snippet": {
                    "text": "package cmd\n\nimport (\n\t\"flag\"\n\n",
                    "rendered": {
                      "text": "package cmd\n\nimport (\n\t\"flag\"\n\n",
                      "markdown": "`package cmd\n\nimport (\n\t\"flag\"\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/cmd/version.go"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 7,
                  "endLine": 2,
                  "snippet": {
                    "text": "package cmd\n\nimport (\n\t\"fmt\"\n\n",
                    "rendered": {
                      "text": "package cmd\n\nimport (\n\t\"fmt\"\n\n",
                      "markdown": "`package cmd\n\nimport (\n\t\"fmt\"\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/cmd/run.go"
                },
                "region": {
                  "startLine": 236,
                  "startColumn": 7,
                  "endLine": 237,
                  "snippet": {
                    "text": "\n\tflag.Parse()\n\n\treturn cmd\n}\n",
                    "rendered": {
                      "text": "\n\tflag.Parse()\n\n\treturn cmd\n}\n",
                      "markdown": "`\n\tflag.Parse()\n\n\treturn cmd\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/cmd/run.go"
                },
                "region": {
                  "startLine": 23,
                  "endLine": 23,
                  "endColumn": 5,
                  "snippet": {
                    "text": ")\n\nfunc newRunCMD(version string) *cobra.Command {\n\tcmd := &cobra.Command{\n\t\tUse:   \"run\",\n\t\tShort: \"Run PolicyReporter Watcher & HTTP Metrics Server\",\n\t\tRunE: func(cmd *cobra.Command, args []string) error {\n",
                    "rendered": {
                      "text": ")\n\nfunc newRunCMD(version string) *cobra.Command {\n\tcmd := &cobra.Command{\n\t\tUse:   \"run\",\n\t\tShort: \"Run PolicyReporter Watcher & HTTP Metrics Server\",\n\t\tRunE: func(cmd *cobra.Command, args []string) error {\n",
                      "markdown": "`)\n\nfunc newRunCMD(version string) *cobra.Command {\n\tcmd := &cobra.Command{\n\t\tUse:   \"run\",\n\t\tShort: \"Run PolicyReporter Watcher & HTTP Metrics Server\",\n\t\tRunE: func(cmd *cobra.Command, args []string) error {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/cmd/run.go"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 7,
                  "endLine": 2,
                  "snippet": {
                    "text": "package cmd\n\nimport (\n\t\"context\"\n\t\"errors\"\n",
                    "rendered": {
                      "text": "package cmd\n\nimport (\n\t\"context\"\n\t\"errors\"\n",
                      "markdown": "`package cmd\n\nimport (\n\t\"context\"\n\t\"errors\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/cmd/root.go"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 7,
                  "endLine": 2,
                  "snippet": {
                    "text": "package cmd\n\nimport (\n\t\"github.com/spf13/cobra\"\n)\n",
                    "rendered": {
                      "text": "package cmd\n\nimport (\n\t\"github.com/spf13/cobra\"\n)\n",
                      "markdown": "`package cmd\n\nimport (\n\t\"github.com/spf13/cobra\"\n)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/listener/store_test.go"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 20,
                  "endLine": 36,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\tslistener := listener.NewStoreListener(ctx, store)\n\t\tslistener(report.LifecycleEvent{Type: report.Deleted, PolicyReport: preport2})\n\n\t\tif _, err := store.Get(ctx, preport2.GetID()); err == nil {\n\t\t\tt.Error(\"Expected Report to be removed\")\n\t\t}\n\t})\n",
                    "rendered": {
                      "text": "\t\tslistener := listener.NewStoreListener(ctx, store)\n\t\tslistener(report.LifecycleEvent{Type: report.Deleted, PolicyReport: preport2})\n\n\t\tif _, err := store.Get(ctx, preport2.GetID()); err == nil {\n\t\t\tt.Error(\"Expected Report to be removed\")\n\t\t}\n\t})\n",
                      "markdown": "`\t\tslistener := listener.NewStoreListener(ctx, store)\n\t\tslistener(report.LifecycleEvent{Type: report.Deleted, PolicyReport: preport2})\n\n\t\tif _, err := store.Get(ctx, preport2.GetID()); err == nil {\n\t\t\tt.Error(\"Expected Report to be removed\")\n\t\t}\n\t})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/listener/store_test.go"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 26,
                  "endLine": 28,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\t\tslistener := listener.NewStoreListener(ctx, store)\n\t\tslistener(report.LifecycleEvent{Type: report.Updated, PolicyReport: preport2})\n\n\t\tif preport, err := store.Get(ctx, preport2.GetID()); err != nil && len(preport.GetResults()) == 2 {\n\t\t\tt.Error(\"Expected Report to be updated\")\n\t\t}\n\t})\n",
                    "rendered": {
                      "text": "\t\tslistener := listener.NewStoreListener(ctx, store)\n\t\tslistener(report.LifecycleEvent{Type: report.Updated, PolicyReport: preport2})\n\n\t\tif preport, err := store.Get(ctx, preport2.GetID()); err != nil && len(preport.GetResults()) == 2 {\n\t\t\tt.Error(\"Expected Report to be updated\")\n\t\t}\n\t})\n",
                      "markdown": "`\t\tslistener := listener.NewStoreListener(ctx, store)\n\t\tslistener(report.LifecycleEvent{Type: report.Updated, PolicyReport: preport2})\n\n\t\tif preport, err := store.Get(ctx, preport2.GetID()); err != nil && len(preport.GetResults()) == 2 {\n\t\t\tt.Error(\"Expected Report to be updated\")\n\t\t}\n\t})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/listener/store_test.go"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 20,
                  "endLine": 20,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\tslistener := listener.NewStoreListener(ctx, store)\n\t\tslistener(report.LifecycleEvent{Type: report.Added, PolicyReport: preport1})\n\n\t\tif _, err := store.Get(ctx, preport1.GetID()); err != nil {\n\t\t\tt.Error(\"Expected Report to be stored\")\n\t\t}\n\t})\n",
                    "rendered": {
                      "text": "\t\tslistener := listener.NewStoreListener(ctx, store)\n\t\tslistener(report.LifecycleEvent{Type: report.Added, PolicyReport: preport1})\n\n\t\tif _, err := store.Get(ctx, preport1.GetID()); err != nil {\n\t\t\tt.Error(\"Expected Report to be stored\")\n\t\t}\n\t})\n",
                      "markdown": "`\t\tslistener := listener.NewStoreListener(ctx, store)\n\t\tslistener(report.LifecycleEvent{Type: report.Added, PolicyReport: preport1})\n\n\t\tif _, err := store.Get(ctx, preport1.GetID()); err != nil {\n\t\t\tt.Error(\"Expected Report to be stored\")\n\t\t}\n\t})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/load_test.go"
                },
                "region": {
                  "startLine": 29,
                  "endLine": 29,
                  "endColumn": 5,
                  "snippet": {
                    "text": "}\n\nfunc Test_Load(t *testing.T) {\n\tcmd := createCMD()\n\n\t_ = cmd.Flags().Set(\"kubeconfig\", \"./config\")\n\t_ = cmd.Flags().Set(\"port\", \"8081\")\n",
                    "rendered": {
                      "text": "}\n\nfunc Test_Load(t *testing.T) {\n\tcmd := createCMD()\n\n\t_ = cmd.Flags().Set(\"kubeconfig\", \"./config\")\n\t_ = cmd.Flags().Set(\"port\", \"8081\")\n",
                      "markdown": "`}\n\nfunc Test_Load(t *testing.T) {\n\tcmd := createCMD()\n\n\t_ = cmd.Flags().Set(\"kubeconfig\", \"./config\")\n\t_ = cmd.Flags().Set(\"port\", \"8081\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/load_test.go"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 7,
                  "endLine": 26,
                  "snippet": {
                    "text": "\tcmd.Flags().String(\"lease-name\", \"policy-reporter\", \"name of the LeaseLock\")\n\tcmd.Flags().String(\"pod-name\", \"policy-reporter\", \"name of the pod, used for leaderelection\")\n\n\treturn cmd\n}\n\nfunc Test_Load(t *testing.T) {\n\tcmd := createCMD()\n",
                    "rendered": {
                      "text": "\tcmd.Flags().String(\"lease-name\", \"policy-reporter\", \"name of the LeaseLock\")\n\tcmd.Flags().String(\"pod-name\", \"policy-reporter\", \"name of the pod, used for leaderelection\")\n\n\treturn cmd\n}\n\nfunc Test_Load(t *testing.T) {\n\tcmd := createCMD()\n",
                      "markdown": "`\tcmd.Flags().String(\"lease-name\", \"policy-reporter\", \"name of the LeaseLock\")\n\tcmd.Flags().String(\"pod-name\", \"policy-reporter\", \"name of the pod, used for leaderelection\")\n\n\treturn cmd\n}\n\nfunc Test_Load(t *testing.T) {\n\tcmd := createCMD()\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/load_test.go"
                },
                "region": {
                  "startLine": 12,
                  "endLine": 12,
                  "endColumn": 5,
                  "snippet": {
                    "text": ")\n\nfunc createCMD() *cobra.Command {\n\tcmd := &cobra.Command{}\n\n\tcmd.Flags().StringP(\"kubeconfig\", \"k\", \"\", \"absolute path to the kubeconfig file\")\n\tcmd.Flags().StringP(\"config\", \"c\", \"\", \"target configuration file\")\n",
                    "rendered": {
                      "text": ")\n\nfunc createCMD() *cobra.Command {\n\tcmd := &cobra.Command{}\n\n\tcmd.Flags().StringP(\"kubeconfig\", \"k\", \"\", \"absolute path to the kubeconfig file\")\n\tcmd.Flags().StringP(\"config\", \"c\", \"\", \"target configuration file\")\n",
                      "markdown": "`)\n\nfunc createCMD() *cobra.Command {\n\tcmd := &cobra.Command{}\n\n\tcmd.Flags().StringP(\"kubeconfig\", \"k\", \"\", \"absolute path to the kubeconfig file\")\n\tcmd.Flags().StringP(\"config\", \"c\", \"\", \"target configuration file\")\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/database_factory.go"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 37,
                  "endLine": 101,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\tvalues := secrets.Values{}\n\n\tif ref != \"\" {\n\t\tsecretValues, err := f.secretClient.Get(context.Background(), ref)\n\t\tvalues = secretValues\n\t\tif err != nil {\n\t\t\tzap.L().Warn(\"failed to get secret reference\", zap.Error(err))\n",
                    "rendered": {
                      "text": "\tvalues := secrets.Values{}\n\n\tif ref != \"\" {\n\t\tsecretValues, err := f.secretClient.Get(context.Background(), ref)\n\t\tvalues = secretValues\n\t\tif err != nil {\n\t\t\tzap.L().Warn(\"failed to get secret reference\", zap.Error(err))\n",
                      "markdown": "`\tvalues := secrets.Values{}\n\n\tif ref != \"\" {\n\t\tsecretValues, err := f.secretClient.Get(context.Background(), ref)\n\t\tvalues = secretValues\n\t\tif err != nil {\n\t\t\tzap.L().Warn(\"failed to get secret reference\", zap.Error(err))\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/database_factory.go"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 23,
                  "endLine": 130,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\t\t\tc.Username = values.Username\n\t\t}\n\t\tif values.Password != \"\" {\n\t\t\tc.Password = values.Password\n\t\t}\n\t\tif values.Database != \"\" {\n\t\t\tc.Database = values.Database\n",
                    "rendered": {
                      "text": "\t\t\tc.Username = values.Username\n\t\t}\n\t\tif values.Password != \"\" {\n\t\t\tc.Password = values.Password\n\t\t}\n\t\tif values.Database != \"\" {\n\t\t\tc.Database = values.Database\n",
                      "markdown": "`\t\t\tc.Username = values.Username\n\t\t}\n\t\tif values.Password != \"\" {\n\t\t\tc.Password = values.Password\n\t\t}\n\t\tif values.Database != \"\" {\n\t\t\tc.Database = values.Database\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/database_factory.go"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 5,
                  "endLine": 130,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\t\t\tc.Username = values.Username\n\t\t}\n\t\tif values.Password != \"\" {\n\t\t\tc.Password = values.Password\n\t\t}\n\t\tif values.Database != \"\" {\n\t\t\tc.Database = values.Database\n",
                    "rendered": {
                      "text": "\t\t\tc.Username = values.Username\n\t\t}\n\t\tif values.Password != \"\" {\n\t\t\tc.Password = values.Password\n\t\t}\n\t\tif values.Database != \"\" {\n\t\t\tc.Database = values.Database\n",
                      "markdown": "`\t\t\tc.Username = values.Username\n\t\t}\n\t\tif values.Password != \"\" {\n\t\t\tc.Password = values.Password\n\t\t}\n\t\tif values.Database != \"\" {\n\t\t\tc.Database = values.Database\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/database_factory.go"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 12,
                  "endLine": 129,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\tif values.Username != \"\" {\n\t\t\tc.Username = values.Username\n\t\t}\n\t\tif values.Password != \"\" {\n\t\t\tc.Password = values.Password\n\t\t}\n\t\tif values.Database != \"\" {\n",
                    "rendered": {
                      "text": "\t\tif values.Username != \"\" {\n\t\t\tc.Username = values.Username\n\t\t}\n\t\tif values.Password != \"\" {\n\t\t\tc.Password = values.Password\n\t\t}\n\t\tif values.Database != \"\" {\n",
                      "markdown": "`\t\tif values.Username != \"\" {\n\t\t\tc.Username = values.Username\n\t\t}\n\t\tif values.Password != \"\" {\n\t\t\tc.Password = values.Password\n\t\t}\n\t\tif values.Database != \"\" {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/database_factory.go"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 71,
                  "endLine": 69,
                  "endColumn": 79,
                  "snippet": {
                    "text": "\n\tdsn := config.DSN\n\tif config.DSN == \"\" {\n\t\tdsn = fmt.Sprintf(\"%s:%s@tcp(%s)/%s?tls=%v\", config.Username, config.Password, config.Host, config.Database, config.EnableSSL)\n\t}\n\n\tsqldb, err := sql.Open(\"mysql\", dsn)\n",
                    "rendered": {
                      "text": "\n\tdsn := config.DSN\n\tif config.DSN == \"\" {\n\t\tdsn = fmt.Sprintf(\"%s:%s@tcp(%s)/%s?tls=%v\", config.Username, config.Password, config.Host, config.Database, config.EnableSSL)\n\t}\n\n\tsqldb, err := sql.Open(\"mysql\", dsn)\n",
                      "markdown": "`\n\tdsn := config.DSN\n\tif config.DSN == \"\" {\n\t\tdsn = fmt.Sprintf(\"%s:%s@tcp(%s)/%s?tls=%v\", config.Username, config.Password, config.Host, config.Database, config.EnableSSL)\n\t}\n\n\tsqldb, err := sql.Open(\"mysql\", dsn)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/database_factory.go"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 81,
                  "endLine": 47,
                  "endColumn": 89,
                  "snippet": {
                    "text": "\t\t\tsslMode = \"verify-full\"\n\t\t}\n\n\t\tdsn = fmt.Sprintf(\"postgres://%s:%s@%s/%s?sslmode=%s\", config.Username, config.Password, config.Host, config.Database, sslMode)\n\t}\n\n\tsqldb := sql.OpenDB(pgdriver.NewConnector(pgdriver.WithDSN(dsn)))\n",
                    "rendered": {
                      "text": "\t\t\tsslMode = \"verify-full\"\n\t\t}\n\n\t\tdsn = fmt.Sprintf(\"postgres://%s:%s@%s/%s?sslmode=%s\", config.Username, config.Password, config.Host, config.Database, sslMode)\n\t}\n\n\tsqldb := sql.OpenDB(pgdriver.NewConnector(pgdriver.WithDSN(dsn)))\n",
                      "markdown": "`\t\t\tsslMode = \"verify-full\"\n\t\t}\n\n\t\tdsn = fmt.Sprintf(\"postgres://%s:%s@%s/%s?sslmode=%s\", config.Username, config.Password, config.Host, config.Database, sslMode)\n\t}\n\n\tsqldb := sql.OpenDB(pgdriver.NewConnector(pgdriver.WithDSN(dsn)))\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/database_factory.go"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 33,
                  "endLine": 74,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\n\tsqldb, err := sql.Open(\"mysql\", dsn)\n\tif err != nil {\n\t\tzap.L().Error(\"failed to create mysql connection\", zap.Error(err))\n\t\treturn nil\n\t}\n\n",
                    "rendered": {
                      "text": "\n\tsqldb, err := sql.Open(\"mysql\", dsn)\n\tif err != nil {\n\t\tzap.L().Error(\"failed to create mysql connection\", zap.Error(err))\n\t\treturn nil\n\t}\n\n",
                      "markdown": "`\n\tsqldb, err := sql.Open(\"mysql\", dsn)\n\tif err != nil {\n\t\tzap.L().Error(\"failed to create mysql connection\", zap.Error(err))\n\t\treturn nil\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/database_factory_test.go"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tt.Run(\"PostgreSQL\", func(t *testing.T) {\n\t\tdb := factory.NewPostgres(config.Database{\n\t\t\tUsername:  \"admin\",\n\t\t\tPassword:  \"password\",\n\t\t\tHost:      \"localhost:5432\",\n\t\t\tEnableSSL: true,\n\t\t})\n",
                    "rendered": {
                      "text": "\tt.Run(\"PostgreSQL\", func(t *testing.T) {\n\t\tdb := factory.NewPostgres(config.Database{\n\t\t\tUsername:  \"admin\",\n\t\t\tPassword:  \"password\",\n\t\t\tHost:      \"localhost:5432\",\n\t\t\tEnableSSL: true,\n\t\t})\n",
                      "markdown": "`\tt.Run(\"PostgreSQL\", func(t *testing.T) {\n\t\tdb := factory.NewPostgres(config.Database{\n\t\t\tUsername:  \"admin\",\n\t\t\tPassword:  \"password\",\n\t\t\tHost:      \"localhost:5432\",\n\t\t\tEnableSSL: true,\n\t\t})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/database_factory_test.go"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 3,
                  "endLine": 77,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\tt.Run(\"PostgreSQL\", func(t *testing.T) {\n\t\tdb := factory.NewPostgres(config.Database{\n\t\t\tUsername:  \"admin\",\n\t\t\tPassword:  \"password\",\n\t\t\tHost:      \"localhost:5432\",\n\t\t\tEnableSSL: true,\n\t\t})\n",
                    "rendered": {
                      "text": "\tt.Run(\"PostgreSQL\", func(t *testing.T) {\n\t\tdb := factory.NewPostgres(config.Database{\n\t\t\tUsername:  \"admin\",\n\t\t\tPassword:  \"password\",\n\t\t\tHost:      \"localhost:5432\",\n\t\t\tEnableSSL: true,\n\t\t})\n",
                      "markdown": "`\tt.Run(\"PostgreSQL\", func(t *testing.T) {\n\t\tdb := factory.NewPostgres(config.Database{\n\t\t\tUsername:  \"admin\",\n\t\t\tPassword:  \"password\",\n\t\t\tHost:      \"localhost:5432\",\n\t\t\tEnableSSL: true,\n\t\t})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/database_factory_test.go"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 15,
                  "endLine": 65,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tt.Run(\"MySQL\", func(t *testing.T) {\n\t\tdb := factory.NewMySQL(config.Database{\n\t\t\tUsername:  \"admin\",\n\t\t\tPassword:  \"password\",\n\t\t\tHost:      \"localhost:3306\",\n\t\t\tEnableSSL: true,\n\t\t})\n",
                    "rendered": {
                      "text": "\tt.Run(\"MySQL\", func(t *testing.T) {\n\t\tdb := factory.NewMySQL(config.Database{\n\t\t\tUsername:  \"admin\",\n\t\t\tPassword:  \"password\",\n\t\t\tHost:      \"localhost:3306\",\n\t\t\tEnableSSL: true,\n\t\t})\n",
                      "markdown": "`\tt.Run(\"MySQL\", func(t *testing.T) {\n\t\tdb := factory.NewMySQL(config.Database{\n\t\t\tUsername:  \"admin\",\n\t\t\tPassword:  \"password\",\n\t\t\tHost:      \"localhost:3306\",\n\t\t\tEnableSSL: true,\n\t\t})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/database_factory_test.go"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 3,
                  "endLine": 65,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\tt.Run(\"MySQL\", func(t *testing.T) {\n\t\tdb := factory.NewMySQL(config.Database{\n\t\t\tUsername:  \"admin\",\n\t\t\tPassword:  \"password\",\n\t\t\tHost:      \"localhost:3306\",\n\t\t\tEnableSSL: true,\n\t\t})\n",
                    "rendered": {
                      "text": "\tt.Run(\"MySQL\", func(t *testing.T) {\n\t\tdb := factory.NewMySQL(config.Database{\n\t\t\tUsername:  \"admin\",\n\t\t\tPassword:  \"password\",\n\t\t\tHost:      \"localhost:3306\",\n\t\t\tEnableSSL: true,\n\t\t})\n",
                      "markdown": "`\tt.Run(\"MySQL\", func(t *testing.T) {\n\t\tdb := factory.NewMySQL(config.Database{\n\t\t\tUsername:  \"admin\",\n\t\t\tPassword:  \"password\",\n\t\t\tHost:      \"localhost:3306\",\n\t\t\tEnableSSL: true,\n\t\t})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/database_factory_test.go"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 13,
                  "endLine": 44,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\tsecretValues := secrets.Values{\n\t\tHost:     \"http://localhost:9200\",\n\t\tUsername: \"username\",\n\t\tPassword: \"password\",\n\t\tDatabase: \"database\",\n\t\tDSN:      \"\",\n\t}\n",
                    "rendered": {
                      "text": "\tsecretValues := secrets.Values{\n\t\tHost:     \"http://localhost:9200\",\n\t\tUsername: \"username\",\n\t\tPassword: \"password\",\n\t\tDatabase: \"database\",\n\t\tDSN:      \"\",\n\t}\n",
                      "markdown": "`\tsecretValues := secrets.Values{\n\t\tHost:     \"http://localhost:9200\",\n\t\tUsername: \"username\",\n\t\tPassword: \"password\",\n\t\tDatabase: \"database\",\n\t\tDSN:      \"\",\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/database_factory_test.go"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 2,
                  "endLine": 44,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\tsecretValues := secrets.Values{\n\t\tHost:     \"http://localhost:9200\",\n\t\tUsername: \"username\",\n\t\tPassword: \"password\",\n\t\tDatabase: \"database\",\n\t\tDSN:      \"\",\n\t}\n",
                    "rendered": {
                      "text": "\tsecretValues := secrets.Values{\n\t\tHost:     \"http://localhost:9200\",\n\t\tUsername: \"username\",\n\t\tPassword: \"password\",\n\t\tDatabase: \"database\",\n\t\tDSN:      \"\",\n\t}\n",
                      "markdown": "`\tsecretValues := secrets.Values{\n\t\tHost:     \"http://localhost:9200\",\n\t\tUsername: \"username\",\n\t\tPassword: \"password\",\n\t\tDatabase: \"database\",\n\t\tDSN:      \"\",\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/database_factory_test.go"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 23,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\t\tData: map[string][]byte{\n\t\t\t\"host\":     []byte(\"http://localhost:9200\"),\n\t\t\t\"username\": []byte(\"username\"),\n\t\t\t\"password\": []byte(\"password\"),\n\t\t\t\"apiKey\":   []byte(\"apiKey\"),\n\t\t\t\"database\": []byte(\"database\"),\n\t\t\t\"dsn\":      []byte(\"\"),\n",
                    "rendered": {
                      "text": "\t\tData: map[string][]byte{\n\t\t\t\"host\":     []byte(\"http://localhost:9200\"),\n\t\t\t\"username\": []byte(\"username\"),\n\t\t\t\"password\": []byte(\"password\"),\n\t\t\t\"apiKey\":   []byte(\"apiKey\"),\n\t\t\t\"database\": []byte(\"database\"),\n\t\t\t\"dsn\":      []byte(\"\"),\n",
                      "markdown": "`\t\tData: map[string][]byte{\n\t\t\t\"host\":     []byte(\"http://localhost:9200\"),\n\t\t\t\"username\": []byte(\"username\"),\n\t\t\t\"password\": []byte(\"password\"),\n\t\t\t\"apiKey\":   []byte(\"apiKey\"),\n\t\t\t\"database\": []byte(\"database\"),\n\t\t\t\"dsn\":      []byte(\"\"),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/database_factory_test.go"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 4,
                  "endLine": 32,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\tData: map[string][]byte{\n\t\t\t\"host\":     []byte(\"http://localhost:9200\"),\n\t\t\t\"username\": []byte(\"username\"),\n\t\t\t\"password\": []byte(\"password\"),\n\t\t\t\"apiKey\":   []byte(\"apiKey\"),\n\t\t\t\"database\": []byte(\"database\"),\n\t\t\t\"dsn\":      []byte(\"\"),\n",
                    "rendered": {
                      "text": "\t\tData: map[string][]byte{\n\t\t\t\"host\":     []byte(\"http://localhost:9200\"),\n\t\t\t\"username\": []byte(\"username\"),\n\t\t\t\"password\": []byte(\"password\"),\n\t\t\t\"apiKey\":   []byte(\"apiKey\"),\n\t\t\t\"database\": []byte(\"database\"),\n\t\t\t\"dsn\":      []byte(\"\"),\n",
                      "markdown": "`\t\tData: map[string][]byte{\n\t\t\t\"host\":     []byte(\"http://localhost:9200\"),\n\t\t\t\"username\": []byte(\"username\"),\n\t\t\t\"password\": []byte(\"password\"),\n\t\t\t\"apiKey\":   []byte(\"apiKey\"),\n\t\t\t\"database\": []byte(\"database\"),\n\t\t\t\"dsn\":      []byte(\"\"),\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/database_factory_test.go"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 20,
                  "endLine": 101,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\tt.Run(\"Values from MountedSecret\", func(t *testing.T) {\n\t\tdb := factory.NewMySQL(config.Database{MountedSecret: mountedSecret, EnableSSL: false})\n\t\tif db == nil {\n\t\t\tt.Error(\"Expected MySQL connection created\")\n\t\t}\n\t})\n\n",
                    "rendered": {
                      "text": "\tt.Run(\"Values from MountedSecret\", func(t *testing.T) {\n\t\tdb := factory.NewMySQL(config.Database{MountedSecret: mountedSecret, EnableSSL: false})\n\t\tif db == nil {\n\t\t\tt.Error(\"Expected MySQL connection created\")\n\t\t}\n\t})\n\n",
                      "markdown": "`\tt.Run(\"Values from MountedSecret\", func(t *testing.T) {\n\t\tdb := factory.NewMySQL(config.Database{MountedSecret: mountedSecret, EnableSSL: false})\n\t\tif db == nil {\n\t\t\tt.Error(\"Expected MySQL connection created\")\n\t\t}\n\t})\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/config/database_factory_test.go"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 20,
                  "endLine": 70,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t\t\tEnableSSL: true,\n\t\t})\n\t\tif db == nil || db.Dialect().Name() != dialect.MySQL {\n\t\t\tt.Error(\"Expected MySQL DB\")\n\t\t}\n\t})\n\n",
                    "rendered": {
                      "text": "\t\t\tEnableSSL: true,\n\t\t})\n\t\tif db == nil || db.Dialect().Name() != dialect.MySQL {\n\t\t\tt.Error(\"Expected MySQL DB\")\n\t\t}\n\t})\n\n",
                      "markdown": "`\t\t\tEnableSSL: true,\n\t\t})\n\t\tif db == nil || db.Dialect().Name() != dialect.MySQL {\n\t\t\tt.Error(\"Expected MySQL DB\")\n\t\t}\n\t})\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/factory.go"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 35,
                  "endLine": 108,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\tIndex       string `mapstructure:\"index\"`\n\tRotation    string `mapstructure:\"rotation\"`\n\tUsername    string `mapstructure:\"username\"`\n\tPassword    string `mapstructure:\"password\"`\n\tAPIKey      string `mapstructure:\"apiKey\"`\n\tTypelessAPI bool   `mapstructure:\"typelessApi\"`\n}\n",
                    "rendered": {
                      "text": "\tIndex       string `mapstructure:\"index\"`\n\tRotation    string `mapstructure:\"rotation\"`\n\tUsername    string `mapstructure:\"username\"`\n\tPassword    string `mapstructure:\"password\"`\n\tAPIKey      string `mapstructure:\"apiKey\"`\n\tTypelessAPI bool   `mapstructure:\"typelessApi\"`\n}\n",
                      "markdown": "`\tIndex       string `mapstructure:\"index\"`\n\tRotation    string `mapstructure:\"rotation\"`\n\tUsername    string `mapstructure:\"username\"`\n\tPassword    string `mapstructure:\"password\"`\n\tAPIKey      string `mapstructure:\"apiKey\"`\n\tTypelessAPI bool   `mapstructure:\"typelessApi\"`\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/factory.go"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 1,
                  "endLine": 108,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tIndex       string `mapstructure:\"index\"`\n\tRotation    string `mapstructure:\"rotation\"`\n\tUsername    string `mapstructure:\"username\"`\n\tPassword    string `mapstructure:\"password\"`\n\tAPIKey      string `mapstructure:\"apiKey\"`\n\tTypelessAPI bool   `mapstructure:\"typelessApi\"`\n}\n",
                    "rendered": {
                      "text": "\tIndex       string `mapstructure:\"index\"`\n\tRotation    string `mapstructure:\"rotation\"`\n\tUsername    string `mapstructure:\"username\"`\n\tPassword    string `mapstructure:\"password\"`\n\tAPIKey      string `mapstructure:\"apiKey\"`\n\tTypelessAPI bool   `mapstructure:\"typelessApi\"`\n}\n",
                      "markdown": "`\tIndex       string `mapstructure:\"index\"`\n\tRotation    string `mapstructure:\"rotation\"`\n\tUsername    string `mapstructure:\"username\"`\n\tPassword    string `mapstructure:\"password\"`\n\tAPIKey      string `mapstructure:\"apiKey\"`\n\tTypelessAPI bool   `mapstructure:\"typelessApi\"`\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/factory.go"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 35,
                  "endLine": 99,
                  "endColumn": 43,
                  "snippet": {
                    "text": "type LokiOptions struct {\n\tHostOptions `mapstructure:\",squash\"`\n\tUsername    string `mapstructure:\"username\"`\n\tPassword    string `mapstructure:\"password\"`\n\tPath        string `mapstructure:\"path\"`\n}\n\n",
                    "rendered": {
                      "text": "type LokiOptions struct {\n\tHostOptions `mapstructure:\",squash\"`\n\tUsername    string `mapstructure:\"username\"`\n\tPassword    string `mapstructure:\"password\"`\n\tPath        string `mapstructure:\"path\"`\n}\n\n",
                      "markdown": "`type LokiOptions struct {\n\tHostOptions `mapstructure:\",squash\"`\n\tUsername    string `mapstructure:\"username\"`\n\tPassword    string `mapstructure:\"password\"`\n\tPath        string `mapstructure:\"path\"`\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/target/factory.go"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 1,
                  "endLine": 99,
                  "endColumn": 9,
                  "snippet": {
                    "text": "type LokiOptions struct {\n\tHostOptions `mapstructure:\",squash\"`\n\tUsername    string `mapstructure:\"username\"`\n\tPassword    string `mapstructure:\"password\"`\n\tPath        string `mapstructure:\"path\"`\n}\n\n",
                    "rendered": {
                      "text": "type LokiOptions struct {\n\tHostOptions `mapstructure:\",squash\"`\n\tUsername    string `mapstructure:\"username\"`\n\tPassword    string `mapstructure:\"password\"`\n\tPath        string `mapstructure:\"path\"`\n}\n\n",
                      "markdown": "`type LokiOptions struct {\n\tHostOptions `mapstructure:\",squash\"`\n\tUsername    string `mapstructure:\"username\"`\n\tPassword    string `mapstructure:\"password\"`\n\tPath        string `mapstructure:\"path\"`\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/pkg/crd/client/informers/externalversions/internalinterfaces/factory_interfaces.go"
                },
                "region": {
                  "startLine": 22,
                  "endLine": 22,
                  "endColumn": 6,
                  "snippet": {
                    "text": "package internalinterfaces\n\nimport (\n\ttime \"time\"\n\n\tv1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n\truntime \"k8s.io/apimachinery/pkg/runtime\"\n",
                    "rendered": {
                      "text": "package internalinterfaces\n\nimport (\n\ttime \"time\"\n\n\tv1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n\truntime \"k8s.io/apimachinery/pkg/runtime\"\n",
                      "markdown": "`package internalinterfaces\n\nimport (\n\ttime \"time\"\n\n\tv1 \"k8s.io/apimachinery/pkg/apis/meta/v1\"\n\truntime \"k8s.io/apimachinery/pkg/runtime\"\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/charts/policy-reporter/templates/role.yaml"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 3,
                  "endLine": 24,
                  "snippet": {
                    "text": "  - delete\n  - get\n  - patch\n  - update\n{{- end -}}\n",
                    "rendered": {
                      "text": "  - delete\n  - get\n  - patch\n  - update\n{{- end -}}\n",
                      "markdown": "`  - delete\n  - get\n  - patch\n  - update\n{{- end -}}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 330,
                  "startColumn": 105,
                  "endLine": 330,
                  "endColumn": 113,
                  "snippet": {
                    "text": "# 2.11.3\n* Policy Reporter\n    * New `emailReports.smtp.secret` configuration to use an existing external secret to configure your SMTP connection\n        * You can set all or a subset of the available keys in your secret: `host`, `port`, `username`, `password`, `from`, `encryption`\n        * Keys available in your secret have a higher priority as your Helm release values.\n\n# 2.11.2\n",
                    "rendered": {
                      "text": "# 2.11.3\n* Policy Reporter\n    * New `emailReports.smtp.secret` configuration to use an existing external secret to configure your SMTP connection\n        * You can set all or a subset of the available keys in your secret: `host`, `port`, `username`, `password`, `from`, `encryption`\n        * Keys available in your secret have a higher priority as your Helm release values.\n\n# 2.11.2\n",
                      "markdown": "`# 2.11.3\n* Policy Reporter\n    * New `emailReports.smtp.secret` configuration to use an existing external secret to configure your SMTP connection\n        * You can set all or a subset of the available keys in your secret: `host`, `port`, `username`, `password`, `from`, `encryption`\n        * Keys available in your secret have a higher priority as your Helm release values.\n\n# 2.11.2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 322,
                  "startColumn": 79,
                  "endLine": 322,
                  "endColumn": 87,
                  "snippet": {
                    "text": "# 2.12.0\n* Policy Reporter\n    * New Helm Chart value to add extra volumes to PolicyReporter deployment [[#186](https://github.com/kyverno/policy-reporter/pull/186) by [preved911](https://github.com/preved911)]\n    * HTTP Basic authentication for Elasticsearch targets with `username` and `password` configuration fields\n    * `target.slack.customFields` map property for Slack pushes to add additional metadata to notifications like clustername\n    * Add timestamp to Result REST APIs\n    * Overwrite the installation target namespace via the new `global.namespace` value.\n",
                    "rendered": {
                      "text": "# 2.12.0\n* Policy Reporter\n    * New Helm Chart value to add extra volumes to PolicyReporter deployment [[#186](https://github.com/kyverno/policy-reporter/pull/186) by [preved911](https://github.com/preved911)]\n    * HTTP Basic authentication for Elasticsearch targets with `username` and `password` configuration fields\n    * `target.slack.customFields` map property for Slack pushes to add additional metadata to notifications like clustername\n    * Add timestamp to Result REST APIs\n    * Overwrite the installation target namespace via the new `global.namespace` value.\n",
                      "markdown": "`# 2.12.0\n* Policy Reporter\n    * New Helm Chart value to add extra volumes to PolicyReporter deployment [[#186](https://github.com/kyverno/policy-reporter/pull/186) by [preved911](https://github.com/preved911)]\n    * HTTP Basic authentication for Elasticsearch targets with `username` and `password` configuration fields\n    * `target.slack.customFields` map property for Slack pushes to add additional metadata to notifications like clustername\n    * Add timestamp to Result REST APIs\n    * Overwrite the installation target namespace via the new `global.namespace` value.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 312,
                  "startColumn": 86,
                  "endLine": 312,
                  "endColumn": 94,
                  "snippet": {
                    "text": "ebhook` and `ui`, to set the path to your custom certificate for the related client.\n    * New `skipTLS` config for `loki`, `elasticsearch`, `teams`, `webhook` and `ui`, to skip tls if needed for the given target.\n    * New `secretRef` for targets to reference a secret with the related `username`, `password`, `webhook`, `host`, `accessKeyId`, `secretAccessKey` information of the given target, instead of configure your credentials directly.\n* Policy Reporter UI\n    * New value `refreshInterval` to configure the default refresh interval for API polling. Set `0` to disable polling.\n* Policy Reporter Kyve",
                    "rendered": {
                      "text": "ebhook` and `ui`, to set the path to your custom certificate for the related client.\n    * New `skipTLS` config for `loki`, `elasticsearch`, `teams`, `webhook` and `ui`, to skip tls if needed for the given target.\n    * New `secretRef` for targets to reference a secret with the related `username`, `password`, `webhook`, `host`, `accessKeyId`, `secretAccessKey` information of the given target, instead of configure your credentials directly.\n* Policy Reporter UI\n    * New value `refreshInterval` to configure the default refresh interval for API polling. Set `0` to disable polling.\n* Policy Reporter Kyve",
                      "markdown": "`ebhook` and `ui`, to set the path to your custom certificate for the related client.\n    * New `skipTLS` config for `loki`, `elasticsearch`, `teams`, `webhook` and `ui`, to skip tls if needed for the given target.\n    * New `secretRef` for targets to reference a secret with the related `username`, `password`, `webhook`, `host`, `accessKeyId`, `secretAccessKey` information of the given target, instead of configure your credentials directly.\n* Policy Reporter UI\n    * New value `refreshInterval` to configure the default refresh interval for API polling. Set `0` to disable polling.\n* Policy Reporter Kyve`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 804,
                  "startColumn": 20,
                  "endLine": 805,
                  "snippet": {
                    "text": "\n## 0.20.2\n\n* Policy Reporter UI update\n  * Select All option for Policy Filter\n  * New Namespace Filter for PolicyReport View\n\n## 0.20.0\n",
                    "rendered": {
                      "text": "\n## 0.20.2\n\n* Policy Reporter UI update\n  * Select All option for Policy Filter\n  * New Namespace Filter for PolicyReport View\n\n## 0.20.0\n",
                      "markdown": "`\n## 0.20.2\n\n* Policy Reporter UI update\n  * Select All option for Policy Filter\n  * New Namespace Filter for PolicyReport View\n\n## 0.20.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 737,
                  "startColumn": 1,
                  "endLine": 737,
                  "endColumn": 9,
                  "snippet": {
                    "text": "## 1.3.2\n\n* Compress REST API with GZIP\n* Update Policy Reporter UI to 0.8.0\n    * Support for GZIP Responses\n\n## 1.3.1\n",
                    "rendered": {
                      "text": "## 1.3.2\n\n* Compress REST API with GZIP\n* Update Policy Reporter UI to 0.8.0\n    * Support for GZIP Responses\n\n## 1.3.1\n",
                      "markdown": "`## 1.3.2\n\n* Compress REST API with GZIP\n* Update Policy Reporter UI to 0.8.0\n    * Support for GZIP Responses\n\n## 1.3.1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 731,
                  "startColumn": 5,
                  "endLine": 731,
                  "endColumn": 13,
                  "snippet": {
                    "text": "## 1.3.3\n\n* Update Policy Reporter UI to v0.9.0\n    * expand Tables with Validation Message\n* Reduce log messages\n\n## 1.3.2\n",
                    "rendered": {
                      "text": "## 1.3.3\n\n* Update Policy Reporter UI to v0.9.0\n    * expand Tables with Validation Message\n* Reduce log messages\n\n## 1.3.2\n",
                      "markdown": "`## 1.3.3\n\n* Update Policy Reporter UI to v0.9.0\n    * expand Tables with Validation Message\n* Reduce log messages\n\n## 1.3.2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 730,
                  "startColumn": 1,
                  "endLine": 730,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n## 1.3.3\n\n* Update Policy Reporter UI to v0.9.0\n    * expand Tables with Validation Message\n* Reduce log messages\n\n",
                    "rendered": {
                      "text": "\n## 1.3.3\n\n* Update Policy Reporter UI to v0.9.0\n    * expand Tables with Validation Message\n* Reduce log messages\n\n",
                      "markdown": "`\n## 1.3.3\n\n* Update Policy Reporter UI to v0.9.0\n    * expand Tables with Validation Message\n* Reduce log messages\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 716,
                  "startColumn": 1,
                  "endLine": 716,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# 1.4.1\n* Update Kyverno Plugin\n    * Fix Rule Type mapping\n* Update Policy Reporter UI\n    * Fix Chart rerender when values are the same\n\n# 1.4.0\n",
                    "rendered": {
                      "text": "# 1.4.1\n* Update Kyverno Plugin\n    * Fix Rule Type mapping\n* Update Policy Reporter UI\n    * Fix Chart rerender when values are the same\n\n# 1.4.0\n",
                      "markdown": "`# 1.4.1\n* Update Kyverno Plugin\n    * Fix Rule Type mapping\n* Update Policy Reporter UI\n    * Fix Chart rerender when values are the same\n\n# 1.4.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 714,
                  "startColumn": 1,
                  "endLine": 714,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    * Upate UI handling with Results without Resources\n\n# 1.4.1\n* Update Kyverno Plugin\n    * Fix Rule Type mapping\n* Update Policy Reporter UI\n    * Fix Chart rerender when values are the same\n",
                    "rendered": {
                      "text": "    * Upate UI handling with Results without Resources\n\n# 1.4.1\n* Update Kyverno Plugin\n    * Fix Rule Type mapping\n* Update Policy Reporter UI\n    * Fix Chart rerender when values are the same\n",
                      "markdown": "`    * Upate UI handling with Results without Resources\n\n# 1.4.1\n* Update Kyverno Plugin\n    * Fix Rule Type mapping\n* Update Policy Reporter UI\n    * Fix Chart rerender when values are the same\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 681,
                  "startColumn": 1,
                  "endLine": 681,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    * New APIs for Liveness and Readiness Probes\n\n# 1.7.2\n* Update Policy Reporter - Kyverno Plugin to 0.1.2\n    * Fix Handling of Validations with empty messages\n\n# 1.7.1\n",
                    "rendered": {
                      "text": "    * New APIs for Liveness and Readiness Probes\n\n# 1.7.2\n* Update Policy Reporter - Kyverno Plugin to 0.1.2\n    * Fix Handling of Validations with empty messages\n\n# 1.7.1\n",
                      "markdown": "`    * New APIs for Liveness and Readiness Probes\n\n# 1.7.2\n* Update Policy Reporter - Kyverno Plugin to 0.1.2\n    * Fix Handling of Validations with empty messages\n\n# 1.7.1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 677,
                  "startColumn": 1,
                  "endLine": 677,
                  "endColumn": 9,
                  "snippet": {
                    "text": "* ARM64 Support for all Components\n\n# 1.7.3\n* Update Policy Reporter - Kyverno Plugin to 0.2.0\n    * New APIs for Liveness and Readiness Probes\n\n# 1.7.2\n",
                    "rendered": {
                      "text": "* ARM64 Support for all Components\n\n# 1.7.3\n* Update Policy Reporter - Kyverno Plugin to 0.2.0\n    * New APIs for Liveness and Readiness Probes\n\n# 1.7.2\n",
                      "markdown": "`* ARM64 Support for all Components\n\n# 1.7.3\n* Update Policy Reporter - Kyverno Plugin to 0.2.0\n    * New APIs for Liveness and Readiness Probes\n\n# 1.7.2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 670,
                  "startColumn": 5,
                  "endLine": 670,
                  "endColumn": 13,
                  "snippet": {
                    "text": "* Fix `scored` mapping for `v1alpha2/policyreports`\n* Disable KyvernPlugin as default as expected\n* Support `source` and `properties` for `policyreports/v1alpha2` in Policy Reporter UI\n    * Update Policy Reporter UI to `0.12.0`\n\n# 1.8.1\n* Customize label and annotation for Grafana dashboards [[#43](https://github.com/kyverno/policy-reporter/pull/43) by [nlamirault](https://github.com/nlamirault)]\n",
                    "rendered": {
                      "text": "* Fix `scored` mapping for `v1alpha2/policyreports`\n* Disable KyvernPlugin as default as expected\n* Support `source` and `properties` for `policyreports/v1alpha2` in Policy Reporter UI\n    * Update Policy Reporter UI to `0.12.0`\n\n# 1.8.1\n* Customize label and annotation for Grafana dashboards [[#43](https://github.com/kyverno/policy-reporter/pull/43) by [nlamirault](https://github.com/nlamirault)]\n",
                      "markdown": "`* Fix `scored` mapping for `v1alpha2/policyreports`\n* Disable KyvernPlugin as default as expected\n* Support `source` and `properties` for `policyreports/v1alpha2` in Policy Reporter UI\n    * Update Policy Reporter UI to `0.12.0`\n\n# 1.8.1\n* Customize label and annotation for Grafana dashboards [[#43](https://github.com/kyverno/policy-reporter/pull/43) by [nlamirault](https://github.com/nlamirault)]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 662,
                  "startColumn": 1,
                  "endLine": 662,
                  "endColumn": 9,
                  "snippet": {
                    "text": "* Changed Organization\n\n# 1.8.3\n* Update Policy Reporter UI to 0.13.0\n    * Change Result Grouping between by Status and by Category\n    * Add source filter to ClusterPolicyReports\n\n",
                    "rendered": {
                      "text": "* Changed Organization\n\n# 1.8.3\n* Update Policy Reporter UI to 0.13.0\n    * Change Result Grouping between by Status and by Category\n    * Add source filter to ClusterPolicyReports\n\n",
                      "markdown": "`* Changed Organization\n\n# 1.8.3\n* Update Policy Reporter UI to 0.13.0\n    * Change Result Grouping between by Status and by Category\n    * Add source filter to ClusterPolicyReports\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 652,
                  "startColumn": 1,
                  "endLine": 652,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    * Hide Rule Chips if rule name is empty\n* Update Policy Reporter Kyvern Plugin to 0.3.2\n    * Improved LivenessProbe, checks now if Kyverno CRDs are available\n* Update Policy Reporter to 1.8.4\n    * Improved LivenessProbe, checks now if any PolicyReport CRD is available\n\n# 1.8.5\n",
                    "rendered": {
                      "text": "    * Hide Rule Chips if rule name is empty\n* Update Policy Reporter Kyvern Plugin to 0.3.2\n    * Improved LivenessProbe, checks now if Kyverno CRDs are available\n* Update Policy Reporter to 1.8.4\n    * Improved LivenessProbe, checks now if any PolicyReport CRD is available\n\n# 1.8.5\n",
                      "markdown": "`    * Hide Rule Chips if rule name is empty\n* Update Policy Reporter Kyvern Plugin to 0.3.2\n    * Improved LivenessProbe, checks now if Kyverno CRDs are available\n* Update Policy Reporter to 1.8.4\n    * Improved LivenessProbe, checks now if any PolicyReport CRD is available\n\n# 1.8.5\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 650,
                  "startColumn": 1,
                  "endLine": 650,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# 1.8.6\n* Update Policy Reporter UI to 0.13.1\n    * Hide Rule Chips if rule name is empty\n* Update Policy Reporter Kyvern Plugin to 0.3.2\n    * Improved LivenessProbe, checks now if Kyverno CRDs are available\n* Update Policy Reporter to 1.8.4\n    * Improved LivenessProbe, checks now if any PolicyReport CRD is available\n",
                    "rendered": {
                      "text": "# 1.8.6\n* Update Policy Reporter UI to 0.13.1\n    * Hide Rule Chips if rule name is empty\n* Update Policy Reporter Kyvern Plugin to 0.3.2\n    * Improved LivenessProbe, checks now if Kyverno CRDs are available\n* Update Policy Reporter to 1.8.4\n    * Improved LivenessProbe, checks now if any PolicyReport CRD is available\n",
                      "markdown": "`# 1.8.6\n* Update Policy Reporter UI to 0.13.1\n    * Hide Rule Chips if rule name is empty\n* Update Policy Reporter Kyvern Plugin to 0.3.2\n    * Improved LivenessProbe, checks now if Kyverno CRDs are available\n* Update Policy Reporter to 1.8.4\n    * Improved LivenessProbe, checks now if any PolicyReport CRD is available\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 648,
                  "startColumn": 1,
                  "endLine": 648,
                  "endColumn": 9,
                  "snippet": {
                    "text": "* Allow to override namespace for serviceMonitor [[#57](https://github.com/kyverno/policy-reporter/pull/57) by [Issif](https://github.com/Issif)]\n\n# 1.8.6\n* Update Policy Reporter UI to 0.13.1\n    * Hide Rule Chips if rule name is empty\n* Update Policy Reporter Kyvern Plugin to 0.3.2\n    * Improved LivenessProbe, checks now if Kyverno CRDs are available\n",
                    "rendered": {
                      "text": "* Allow to override namespace for serviceMonitor [[#57](https://github.com/kyverno/policy-reporter/pull/57) by [Issif](https://github.com/Issif)]\n\n# 1.8.6\n* Update Policy Reporter UI to 0.13.1\n    * Hide Rule Chips if rule name is empty\n* Update Policy Reporter Kyvern Plugin to 0.3.2\n    * Improved LivenessProbe, checks now if Kyverno CRDs are available\n",
                      "markdown": "`* Allow to override namespace for serviceMonitor [[#57](https://github.com/kyverno/policy-reporter/pull/57) by [Issif](https://github.com/Issif)]\n\n# 1.8.6\n* Update Policy Reporter UI to 0.13.1\n    * Hide Rule Chips if rule name is empty\n* Update Policy Reporter Kyvern Plugin to 0.3.2\n    * Improved LivenessProbe, checks now if Kyverno CRDs are available\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 640,
                  "startColumn": 1,
                  "endLine": 640,
                  "endColumn": 9,
                  "snippet": {
                    "text": "* Separat Namespace Configuration for Monitoring ConfigMaps with `monitoring.grafana.namespace`\n\n# 1.8.7\n* Update Policy Reporter UI to 0.14.0\n    * Colored Diagrams\n    * Suppport SubPath Configuration\n* Restart CRD Watches when no CRDs are found\n",
                    "rendered": {
                      "text": "* Separat Namespace Configuration for Monitoring ConfigMaps with `monitoring.grafana.namespace`\n\n# 1.8.7\n* Update Policy Reporter UI to 0.14.0\n    * Colored Diagrams\n    * Suppport SubPath Configuration\n* Restart CRD Watches when no CRDs are found\n",
                      "markdown": "`* Separat Namespace Configuration for Monitoring ConfigMaps with `monitoring.grafana.namespace`\n\n# 1.8.7\n* Update Policy Reporter UI to 0.14.0\n    * Colored Diagrams\n    * Suppport SubPath Configuration\n* Restart CRD Watches when no CRDs are found\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 608,
                  "startColumn": 1,
                  "endLine": 608,
                  "endColumn": 9,
                  "snippet": {
                    "text": "* Add Yandex as new Target for Policy Reporter\n\n# 1.10.0\n* Update Policy Reporter UI to v0.15.0\n    * Add Filters as Query Parameters, make them shareable over links\n* Hosting all new Images on the GitHub Container Registry instead of DockerHub\n* Go Version updates to Go 1.17 of all components\n",
                    "rendered": {
                      "text": "* Add Yandex as new Target for Policy Reporter\n\n# 1.10.0\n* Update Policy Reporter UI to v0.15.0\n    * Add Filters as Query Parameters, make them shareable over links\n* Hosting all new Images on the GitHub Container Registry instead of DockerHub\n* Go Version updates to Go 1.17 of all components\n",
                      "markdown": "`* Add Yandex as new Target for Policy Reporter\n\n# 1.10.0\n* Update Policy Reporter UI to v0.15.0\n    * Add Filters as Query Parameters, make them shareable over links\n* Hosting all new Images on the GitHub Container Registry instead of DockerHub\n* Go Version updates to Go 1.17 of all components\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 590,
                  "startColumn": 12,
                  "endLine": 591,
                  "snippet": {
                    "text": "    * Policy Reporter Kyverno Plugin [[#9](https://github.com/kyverno/policy-reporter-ui/pull/9) by [realshuting](https://github.com/realshuting)]\n\n# 1.12.5\n* Dependency Update\n\n# 1.12.4\n* Fix policy-reporter-ui ServiceName function [[#87](https://github.com/kyverno/policy-reporter/pull/87) by [m-yosefpor](https://github.com/m-yosefpor)]\n\n",
                    "rendered": {
                      "text": "    * Policy Reporter Kyverno Plugin [[#9](https://github.com/kyverno/policy-reporter-ui/pull/9) by [realshuting](https://github.com/realshuting)]\n\n# 1.12.5\n* Dependency Update\n\n# 1.12.4\n* Fix policy-reporter-ui ServiceName function [[#87](https://github.com/kyverno/policy-reporter/pull/87) by [m-yosefpor](https://github.com/m-yosefpor)]\n\n",
                      "markdown": "`    * Policy Reporter Kyverno Plugin [[#9](https://github.com/kyverno/policy-reporter-ui/pull/9) by [realshuting](https://github.com/realshuting)]\n\n# 1.12.5\n* Dependency Update\n\n# 1.12.4\n* Fix policy-reporter-ui ServiceName function [[#87](https://github.com/kyverno/policy-reporter/pull/87) by [m-yosefpor](https://github.com/m-yosefpor)]\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 584,
                  "startColumn": 1,
                  "endLine": 584,
                  "endColumn": 9,
                  "snippet": {
                    "text": "* improved CRD watch logic with Kubernetes client informer\n\n# 1.12.6\n* Update Go Base Image for all Components\n    * Policy Reporter [[#90](https://github.com/kyverno/policy-reporter-ui/pull/90) by [fjogeleit](https://github.com/fjogeleit)]\n    * Policy Reporter UI [[#11](https://github.com/kyverno/policy-reporter-ui/pull/11) by [realshuting](https://github.com/realshuting)]\n    * Policy Reporter Kyverno Plugin [[#9](https://github.com/kyverno/policy-reporter-ui/pull/9) by [realshuting](https://github.com/realshuting)]\n",
                    "rendered": {
                      "text": "* improved CRD watch logic with Kubernetes client informer\n\n# 1.12.6\n* Update Go Base Image for all Components\n    * Policy Reporter [[#90](https://github.com/kyverno/policy-reporter-ui/pull/90) by [fjogeleit](https://github.com/fjogeleit)]\n    * Policy Reporter UI [[#11](https://github.com/kyverno/policy-reporter-ui/pull/11) by [realshuting](https://github.com/realshuting)]\n    * Policy Reporter Kyverno Plugin [[#9](https://github.com/kyverno/policy-reporter-ui/pull/9) by [realshuting](https://github.com/realshuting)]\n",
                      "markdown": "`* improved CRD watch logic with Kubernetes client informer\n\n# 1.12.6\n* Update Go Base Image for all Components\n    * Policy Reporter [[#90](https://github.com/kyverno/policy-reporter-ui/pull/90) by [fjogeleit](https://github.com/fjogeleit)]\n    * Policy Reporter UI [[#11](https://github.com/kyverno/policy-reporter-ui/pull/11) by [realshuting](https://github.com/realshuting)]\n    * Policy Reporter Kyverno Plugin [[#9](https://github.com/kyverno/policy-reporter-ui/pull/9) by [realshuting](https://github.com/realshuting)]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 543,
                  "startColumn": 1,
                  "endLine": 543,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n# 2.0.1\n* Remove NetworkPolicy ingress rule for UI if not enabled\n* Update Policy Reporter UI\n    * Fix: Show PolicyReportResult Properties in Tables\n\n# 2.0.0\n",
                    "rendered": {
                      "text": "\n# 2.0.1\n* Remove NetworkPolicy ingress rule for UI if not enabled\n* Update Policy Reporter UI\n    * Fix: Show PolicyReportResult Properties in Tables\n\n# 2.0.0\n",
                      "markdown": "`\n# 2.0.1\n* Remove NetworkPolicy ingress rule for UI if not enabled\n* Update Policy Reporter UI\n    * Fix: Show PolicyReportResult Properties in Tables\n\n# 2.0.0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 512,
                  "startColumn": 5,
                  "endLine": 512,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    * Update dependencies\n\n* Policy Reporter KyvernoPlugin\n    * Update Go  to 1.17.6 [[#12](https://github.com/kyverno/policy-reporter-kyverno-plugin/pull/12) by [realshuting](https://github.com/realshuting)]\n\n# 2.2.4\n* Fix PolicyReport Napper - string casting\n",
                    "rendered": {
                      "text": "    * Update dependencies\n\n* Policy Reporter KyvernoPlugin\n    * Update Go  to 1.17.6 [[#12](https://github.com/kyverno/policy-reporter-kyverno-plugin/pull/12) by [realshuting](https://github.com/realshuting)]\n\n# 2.2.4\n* Fix PolicyReport Napper - string casting\n",
                      "markdown": "`    * Update dependencies\n\n* Policy Reporter KyvernoPlugin\n    * Update Go  to 1.17.6 [[#12](https://github.com/kyverno/policy-reporter-kyverno-plugin/pull/12) by [realshuting](https://github.com/realshuting)]\n\n# 2.2.4\n* Fix PolicyReport Napper - string casting\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 509,
                  "startColumn": 5,
                  "endLine": 509,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\n* Policy Reporter UI\n    * Update Go  to 1.17.6 [[#93](https://github.com/kyverno/policy-reporter-ui/pull/93) by [realshuting](https://github.com/realshuting)]\n    * Update dependencies\n\n* Policy Reporter KyvernoPlugin\n    * Update Go  to 1.17.6 [[#12](https://github.com/kyverno/policy-reporter-kyverno-plugin/pull/12) by [realshuting](https://github.com/realshuting)]\n",
                    "rendered": {
                      "text": "\n* Policy Reporter UI\n    * Update Go  to 1.17.6 [[#93](https://github.com/kyverno/policy-reporter-ui/pull/93) by [realshuting](https://github.com/realshuting)]\n    * Update dependencies\n\n* Policy Reporter KyvernoPlugin\n    * Update Go  to 1.17.6 [[#12](https://github.com/kyverno/policy-reporter-kyverno-plugin/pull/12) by [realshuting](https://github.com/realshuting)]\n",
                      "markdown": "`\n* Policy Reporter UI\n    * Update Go  to 1.17.6 [[#93](https://github.com/kyverno/policy-reporter-ui/pull/93) by [realshuting](https://github.com/realshuting)]\n    * Update dependencies\n\n* Policy Reporter KyvernoPlugin\n    * Update Go  to 1.17.6 [[#12](https://github.com/kyverno/policy-reporter-kyverno-plugin/pull/12) by [realshuting](https://github.com/realshuting)]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 508,
                  "startColumn": 5,
                  "endLine": 508,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    * Update dependencies\n\n* Policy Reporter UI\n    * Update Go  to 1.17.6 [[#93](https://github.com/kyverno/policy-reporter-ui/pull/93) by [realshuting](https://github.com/realshuting)]\n    * Update dependencies\n\n* Policy Reporter KyvernoPlugin\n",
                    "rendered": {
                      "text": "    * Update dependencies\n\n* Policy Reporter UI\n    * Update Go  to 1.17.6 [[#93](https://github.com/kyverno/policy-reporter-ui/pull/93) by [realshuting](https://github.com/realshuting)]\n    * Update dependencies\n\n* Policy Reporter KyvernoPlugin\n",
                      "markdown": "`    * Update dependencies\n\n* Policy Reporter UI\n    * Update Go  to 1.17.6 [[#93](https://github.com/kyverno/policy-reporter-ui/pull/93) by [realshuting](https://github.com/realshuting)]\n    * Update dependencies\n\n* Policy Reporter KyvernoPlugin\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 505,
                  "startColumn": 5,
                  "endLine": 505,
                  "endColumn": 13,
                  "snippet": {
                    "text": "* Policy Reporter\n    * Update Go  to 1.17.6 [[#110](https://github.com/kyverno/policy-reporter/pull/110) by [realshuting](https://github.com/realshuting)]\n    * Update Helm Chart with new component versions\n    * Update dependencies\n\n* Policy Reporter UI\n    * Update Go  to 1.17.6 [[#93](https://github.com/kyverno/policy-reporter-ui/pull/93) by [realshuting](https://github.com/realshuting)]\n",
                    "rendered": {
                      "text": "* Policy Reporter\n    * Update Go  to 1.17.6 [[#110](https://github.com/kyverno/policy-reporter/pull/110) by [realshuting](https://github.com/realshuting)]\n    * Update Helm Chart with new component versions\n    * Update dependencies\n\n* Policy Reporter UI\n    * Update Go  to 1.17.6 [[#93](https://github.com/kyverno/policy-reporter-ui/pull/93) by [realshuting](https://github.com/realshuting)]\n",
                      "markdown": "`* Policy Reporter\n    * Update Go  to 1.17.6 [[#110](https://github.com/kyverno/policy-reporter/pull/110) by [realshuting](https://github.com/realshuting)]\n    * Update Helm Chart with new component versions\n    * Update dependencies\n\n* Policy Reporter UI\n    * Update Go  to 1.17.6 [[#93](https://github.com/kyverno/policy-reporter-ui/pull/93) by [realshuting](https://github.com/realshuting)]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 504,
                  "startColumn": 5,
                  "endLine": 504,
                  "endColumn": 13,
                  "snippet": {
                    "text": "# 2.2.5\n* Policy Reporter\n    * Update Go  to 1.17.6 [[#110](https://github.com/kyverno/policy-reporter/pull/110) by [realshuting](https://github.com/realshuting)]\n    * Update Helm Chart with new component versions\n    * Update dependencies\n\n* Policy Reporter UI\n",
                    "rendered": {
                      "text": "# 2.2.5\n* Policy Reporter\n    * Update Go  to 1.17.6 [[#110](https://github.com/kyverno/policy-reporter/pull/110) by [realshuting](https://github.com/realshuting)]\n    * Update Helm Chart with new component versions\n    * Update dependencies\n\n* Policy Reporter UI\n",
                      "markdown": "`# 2.2.5\n* Policy Reporter\n    * Update Go  to 1.17.6 [[#110](https://github.com/kyverno/policy-reporter/pull/110) by [realshuting](https://github.com/realshuting)]\n    * Update Helm Chart with new component versions\n    * Update dependencies\n\n* Policy Reporter UI\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 503,
                  "startColumn": 5,
                  "endLine": 503,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\n# 2.2.5\n* Policy Reporter\n    * Update Go  to 1.17.6 [[#110](https://github.com/kyverno/policy-reporter/pull/110) by [realshuting](https://github.com/realshuting)]\n    * Update Helm Chart with new component versions\n    * Update dependencies\n\n",
                    "rendered": {
                      "text": "\n# 2.2.5\n* Policy Reporter\n    * Update Go  to 1.17.6 [[#110](https://github.com/kyverno/policy-reporter/pull/110) by [realshuting](https://github.com/realshuting)]\n    * Update Helm Chart with new component versions\n    * Update dependencies\n\n",
                      "markdown": "`\n# 2.2.5\n* Policy Reporter\n    * Update Go  to 1.17.6 [[#110](https://github.com/kyverno/policy-reporter/pull/110) by [realshuting](https://github.com/realshuting)]\n    * Update Helm Chart with new component versions\n    * Update dependencies\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 473,
                  "startColumn": 1,
                  "endLine": 473,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# 2.6.1\n* Update Policy Reporter UI to v1.3.2\n    * Support access over Subpaths, e.g. Rancher Reverse Proxy\n* Update Policy Reporter Monitoring to v2.1.0\n    * Fix Failing ClusterPolicyRules Columns of the PolicyReports Dashboard\n    * Add Filter to the PolicyReports Dashboard\n\n",
                    "rendered": {
                      "text": "# 2.6.1\n* Update Policy Reporter UI to v1.3.2\n    * Support access over Subpaths, e.g. Rancher Reverse Proxy\n* Update Policy Reporter Monitoring to v2.1.0\n    * Fix Failing ClusterPolicyRules Columns of the PolicyReports Dashboard\n    * Add Filter to the PolicyReports Dashboard\n\n",
                      "markdown": "`# 2.6.1\n* Update Policy Reporter UI to v1.3.2\n    * Support access over Subpaths, e.g. Rancher Reverse Proxy\n* Update Policy Reporter Monitoring to v2.1.0\n    * Fix Failing ClusterPolicyRules Columns of the PolicyReports Dashboard\n    * Add Filter to the PolicyReports Dashboard\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 471,
                  "startColumn": 1,
                  "endLine": 471,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    * Update Go  to 1.17.8\n\n# 2.6.1\n* Update Policy Reporter UI to v1.3.2\n    * Support access over Subpaths, e.g. Rancher Reverse Proxy\n* Update Policy Reporter Monitoring to v2.1.0\n    * Fix Failing ClusterPolicyRules Columns of the PolicyReports Dashboard\n",
                    "rendered": {
                      "text": "    * Update Go  to 1.17.8\n\n# 2.6.1\n* Update Policy Reporter UI to v1.3.2\n    * Support access over Subpaths, e.g. Rancher Reverse Proxy\n* Update Policy Reporter Monitoring to v2.1.0\n    * Fix Failing ClusterPolicyRules Columns of the PolicyReports Dashboard\n",
                      "markdown": "`    * Update Go  to 1.17.8\n\n# 2.6.1\n* Update Policy Reporter UI to v1.3.2\n    * Support access over Subpaths, e.g. Rancher Reverse Proxy\n* Update Policy Reporter Monitoring to v2.1.0\n    * Fix Failing ClusterPolicyRules Columns of the PolicyReports Dashboard\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 468,
                  "startColumn": 5,
                  "endLine": 468,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    * Update Go  to 1.17.8\n\n* Policy Reporter KyvernoPlugin\n    * Update Go  to 1.17.8\n\n# 2.6.1\n* Update Policy Reporter UI to v1.3.2\n",
                    "rendered": {
                      "text": "    * Update Go  to 1.17.8\n\n* Policy Reporter KyvernoPlugin\n    * Update Go  to 1.17.8\n\n# 2.6.1\n* Update Policy Reporter UI to v1.3.2\n",
                      "markdown": "`    * Update Go  to 1.17.8\n\n* Policy Reporter KyvernoPlugin\n    * Update Go  to 1.17.8\n\n# 2.6.1\n* Update Policy Reporter UI to v1.3.2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 465,
                  "startColumn": 5,
                  "endLine": 465,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    * Add `kyverno.serviceMonitor.relabelings` and `kyverno.serviceMonitor.metricRelabelings` for the KyvernoPlugin ServiceMonitor configuration in the `monitoring` Subchart.\n\n* Policy Reporter UI\n    * Update Go  to 1.17.8\n\n* Policy Reporter KyvernoPlugin\n    * Update Go  to 1.17.8\n",
                    "rendered": {
                      "text": "    * Add `kyverno.serviceMonitor.relabelings` and `kyverno.serviceMonitor.metricRelabelings` for the KyvernoPlugin ServiceMonitor configuration in the `monitoring` Subchart.\n\n* Policy Reporter UI\n    * Update Go  to 1.17.8\n\n* Policy Reporter KyvernoPlugin\n    * Update Go  to 1.17.8\n",
                      "markdown": "`    * Add `kyverno.serviceMonitor.relabelings` and `kyverno.serviceMonitor.metricRelabelings` for the KyvernoPlugin ServiceMonitor configuration in the `monitoring` Subchart.\n\n* Policy Reporter UI\n    * Update Go  to 1.17.8\n\n* Policy Reporter KyvernoPlugin\n    * Update Go  to 1.17.8\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 460,
                  "startColumn": 5,
                  "endLine": 460,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\n# 2.6.2\n* Policy Reporter\n    * Update Go  to 1.17.8\n    * Add `serviceMonitor.relabelings` and `serviceMonitor.metricRelabelings` for ServiceMonitor configuration in the `monitoring` Subchart.\n    * Add `kyverno.serviceMonitor.relabelings` and `kyverno.serviceMonitor.metricRelabelings` for the KyvernoPlugin ServiceMonitor configuration in the `monitoring` Subchart.\n\n",
                    "rendered": {
                      "text": "\n# 2.6.2\n* Policy Reporter\n    * Update Go  to 1.17.8\n    * Add `serviceMonitor.relabelings` and `serviceMonitor.metricRelabelings` for ServiceMonitor configuration in the `monitoring` Subchart.\n    * Add `kyverno.serviceMonitor.relabelings` and `kyverno.serviceMonitor.metricRelabelings` for the KyvernoPlugin ServiceMonitor configuration in the `monitoring` Subchart.\n\n",
                      "markdown": "`\n# 2.6.2\n* Policy Reporter\n    * Update Go  to 1.17.8\n    * Add `serviceMonitor.relabelings` and `serviceMonitor.metricRelabelings` for ServiceMonitor configuration in the `monitoring` Subchart.\n    * Add `kyverno.serviceMonitor.relabelings` and `kyverno.serviceMonitor.metricRelabelings` for the KyvernoPlugin ServiceMonitor configuration in the `monitoring` Subchart.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 336,
                  "startColumn": 5,
                  "endLine": 336,
                  "endColumn": 13,
                  "snippet": {
                    "text": "# 2.11.2\n* Policy Reporter\n    * Add new Severity values `info` and `critical`\n    * Update PolicyReport ID generierung\n* Policy Reporter UI\n    * Fix Grouping by Policy and Categories\n    * Fix ReverseProxy RequestHost\n",
                    "rendered": {
                      "text": "# 2.11.2\n* Policy Reporter\n    * Add new Severity values `info` and `critical`\n    * Update PolicyReport ID generierung\n* Policy Reporter UI\n    * Fix Grouping by Policy and Categories\n    * Fix ReverseProxy RequestHost\n",
                      "markdown": "`# 2.11.2\n* Policy Reporter\n    * Add new Severity values `info` and `critical`\n    * Update PolicyReport ID generierung\n* Policy Reporter UI\n    * Fix Grouping by Policy and Categories\n    * Fix ReverseProxy RequestHost\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 283,
                  "startColumn": 8,
                  "endLine": 283,
                  "endColumn": 16,
                  "snippet": {
                    "text": "* UI\n    * Integrate new Compliance Reports\n    * New PolicyReport label based filter, use `ui.labelFilter` to define a list of labels to add\n    * Go update to 1.19\n\n# 2.13.5\n* Add configuration `target.s3.pathStyle` for the `S3` output\n",
                    "rendered": {
                      "text": "* UI\n    * Integrate new Compliance Reports\n    * New PolicyReport label based filter, use `ui.labelFilter` to define a list of labels to add\n    * Go update to 1.19\n\n# 2.13.5\n* Add configuration `target.s3.pathStyle` for the `S3` output\n",
                      "markdown": "`* UI\n    * Integrate new Compliance Reports\n    * New PolicyReport label based filter, use `ui.labelFilter` to define a list of labels to add\n    * Go update to 1.19\n\n# 2.13.5\n* Add configuration `target.s3.pathStyle` for the `S3` output\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 279,
                  "startColumn": 8,
                  "endLine": 279,
                  "endColumn": 16,
                  "snippet": {
                    "text": "    * New HTML Compliance Reports\n        * Grouped by Policy with Details per Namespace and Resource\n        * Grouped by Namespace with Details per Policy and Resource\n    * Go update to 1.19\n* UI\n    * Integrate new Compliance Reports\n    * New PolicyReport label based filter, use `ui.labelFilter` to define a list of labels to add\n",
                    "rendered": {
                      "text": "    * New HTML Compliance Reports\n        * Grouped by Policy with Details per Namespace and Resource\n        * Grouped by Namespace with Details per Policy and Resource\n    * Go update to 1.19\n* UI\n    * Integrate new Compliance Reports\n    * New PolicyReport label based filter, use `ui.labelFilter` to define a list of labels to add\n",
                      "markdown": "`    * New HTML Compliance Reports\n        * Grouped by Policy with Details per Namespace and Resource\n        * Grouped by Namespace with Details per Policy and Resource\n    * Go update to 1.19\n* UI\n    * Integrate new Compliance Reports\n    * New PolicyReport label based filter, use `ui.labelFilter` to define a list of labels to add\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 228,
                  "startColumn": 24,
                  "endLine": 228,
                  "endColumn": 33,
                  "snippet": {
                    "text": "# 2.17.0\n* Policy Reporter\n    * Use metaclient to reduce informer memory usage\n    * Use workerqueue to control concurrent processing of PolicyReports\n    * Remove internal PolicyReport structures\n    * Make sqlite volume configurable [[#255](https://github.com/kyverno/policy-reporter/pull/255) by [monotek](https://github.com/monotek)]\n    * use defer to unlock when possible [[#259](https://github.com/kyverno/policy-reporter/pull/259) by [eddycharly](https://github.com/eddycharly)]\n",
                    "rendered": {
                      "text": "# 2.17.0\n* Policy Reporter\n    * Use metaclient to reduce informer memory usage\n    * Use workerqueue to control concurrent processing of PolicyReports\n    * Remove internal PolicyReport structures\n    * Make sqlite volume configurable [[#255](https://github.com/kyverno/policy-reporter/pull/255) by [monotek](https://github.com/monotek)]\n    * use defer to unlock when possible [[#259](https://github.com/kyverno/policy-reporter/pull/259) by [eddycharly](https://github.com/eddycharly)]\n",
                      "markdown": "`# 2.17.0\n* Policy Reporter\n    * Use metaclient to reduce informer memory usage\n    * Use workerqueue to control concurrent processing of PolicyReports\n    * Remove internal PolicyReport structures\n    * Make sqlite volume configurable [[#255](https://github.com/kyverno/policy-reporter/pull/255) by [monotek](https://github.com/monotek)]\n    * use defer to unlock when possible [[#259](https://github.com/kyverno/policy-reporter/pull/259) by [eddycharly](https://github.com/eddycharly)]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 189,
                  "startColumn": 39,
                  "endLine": 189,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\n* Policy Reporter UI\n    * Container signing and SBOM generation\n    * New config `api.overwriteHost` to control the proxy host behavior\n\n# 2.18.1\n\n",
                    "rendered": {
                      "text": "\n* Policy Reporter UI\n    * Container signing and SBOM generation\n    * New config `api.overwriteHost` to control the proxy host behavior\n\n# 2.18.1\n\n",
                      "markdown": "`\n* Policy Reporter UI\n    * Container signing and SBOM generation\n    * New config `api.overwriteHost` to control the proxy host behavior\n\n# 2.18.1\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 176,
                  "startColumn": 5,
                  "endLine": 176,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    * Split Category API into namespaced scoped and cluster scoped API\n    * Support search for contained words in the results API\n* Policy Reporter UI\n    * Update API requests\n\n# 2.18.3\n* Policy Reporter\n",
                    "rendered": {
                      "text": "    * Split Category API into namespaced scoped and cluster scoped API\n    * Support search for contained words in the results API\n* Policy Reporter UI\n    * Update API requests\n\n# 2.18.3\n* Policy Reporter\n",
                      "markdown": "`    * Split Category API into namespaced scoped and cluster scoped API\n    * Support search for contained words in the results API\n* Policy Reporter UI\n    * Update API requests\n\n# 2.18.3\n* Policy Reporter\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 8,
                  "endLine": 145,
                  "endColumn": 16,
                  "snippet": {
                    "text": "    * Go update to v1.21\n* Policy Reporter KyvernoPlugin\n    * Support HTTP BasicAuth for API and metrics\n    * Go update to v1.21\n\n# 2.19.4\n* Helm Chart\n",
                    "rendered": {
                      "text": "    * Go update to v1.21\n* Policy Reporter KyvernoPlugin\n    * Support HTTP BasicAuth for API and metrics\n    * Go update to v1.21\n\n# 2.19.4\n* Helm Chart\n",
                      "markdown": "`    * Go update to v1.21\n* Policy Reporter KyvernoPlugin\n    * Support HTTP BasicAuth for API and metrics\n    * Go update to v1.21\n\n# 2.19.4\n* Helm Chart\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 8,
                  "endLine": 142,
                  "endColumn": 16,
                  "snippet": {
                    "text": "    * Go update to v1.21\n* Policy Reporter UI\n    * Support HTTP BasicAuth authenticated API calls\n    * Go update to v1.21\n* Policy Reporter KyvernoPlugin\n    * Support HTTP BasicAuth for API and metrics\n    * Go update to v1.21\n",
                    "rendered": {
                      "text": "    * Go update to v1.21\n* Policy Reporter UI\n    * Support HTTP BasicAuth authenticated API calls\n    * Go update to v1.21\n* Policy Reporter KyvernoPlugin\n    * Support HTTP BasicAuth for API and metrics\n    * Go update to v1.21\n",
                      "markdown": "`    * Go update to v1.21\n* Policy Reporter UI\n    * Support HTTP BasicAuth authenticated API calls\n    * Go update to v1.21\n* Policy Reporter KyvernoPlugin\n    * Support HTTP BasicAuth for API and metrics\n    * Go update to v1.21\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 8,
                  "endLine": 139,
                  "endColumn": 16,
                  "snippet": {
                    "text": "    * Support GoogleChat as new notification target\n    * Support Telegram as new notification target\n    * Support HTTP BasicAuth for API and metrics\n    * Go update to v1.21\n* Policy Reporter UI\n    * Support HTTP BasicAuth authenticated API calls\n    * Go update to v1.21\n",
                    "rendered": {
                      "text": "    * Support GoogleChat as new notification target\n    * Support Telegram as new notification target\n    * Support HTTP BasicAuth for API and metrics\n    * Go update to v1.21\n* Policy Reporter UI\n    * Support HTTP BasicAuth authenticated API calls\n    * Go update to v1.21\n",
                      "markdown": "`    * Support GoogleChat as new notification target\n    * Support Telegram as new notification target\n    * Support HTTP BasicAuth for API and metrics\n    * Go update to v1.21\n* Policy Reporter UI\n    * Support HTTP BasicAuth authenticated API calls\n    * Go update to v1.21\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 126,
                  "startColumn": 5,
                  "endLine": 126,
                  "endColumn": 13,
                  "snippet": {
                    "text": "* Policy Reporter UI\n    * Update GO dependencies\n* Policy Reporter Kyverno Plugin\n    * Update GO dependencies\n\n# 2.20.1\n* Policy Reporter\n",
                    "rendered": {
                      "text": "* Policy Reporter UI\n    * Update GO dependencies\n* Policy Reporter Kyverno Plugin\n    * Update GO dependencies\n\n# 2.20.1\n* Policy Reporter\n",
                      "markdown": "`* Policy Reporter UI\n    * Update GO dependencies\n* Policy Reporter Kyverno Plugin\n    * Update GO dependencies\n\n# 2.20.1\n* Policy Reporter\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 124,
                  "startColumn": 5,
                  "endLine": 124,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    * Dependency Update\n    * Create Roles/ Rolebindings when service account is not managed [[#348](https://github.com/kyverno/policy-reporter/pull/348) by [josqu4red](https://github.com/josqu4red)]\n* Policy Reporter UI\n    * Update GO dependencies\n* Policy Reporter Kyverno Plugin\n    * Update GO dependencies\n\n",
                    "rendered": {
                      "text": "    * Dependency Update\n    * Create Roles/ Rolebindings when service account is not managed [[#348](https://github.com/kyverno/policy-reporter/pull/348) by [josqu4red](https://github.com/josqu4red)]\n* Policy Reporter UI\n    * Update GO dependencies\n* Policy Reporter Kyverno Plugin\n    * Update GO dependencies\n\n",
                      "markdown": "`    * Dependency Update\n    * Create Roles/ Rolebindings when service account is not managed [[#348](https://github.com/kyverno/policy-reporter/pull/348) by [josqu4red](https://github.com/josqu4red)]\n* Policy Reporter UI\n    * Update GO dependencies\n* Policy Reporter Kyverno Plugin\n    * Update GO dependencies\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 16,
                  "endLine": 122,
                  "snippet": {
                    "text": "# 2.21.0\n* Policy Reporter\n    * Migrate to AWS SDK v2\n    * Dependency Update\n    * Create Roles/ Rolebindings when service account is not managed [[#348](https://github.com/kyverno/policy-reporter/pull/348) by [josqu4red](https://github.com/josqu4red)]\n* Policy Reporter UI\n    * Update GO dependencies\n* Policy Reporter Kyverno Plugin\n",
                    "rendered": {
                      "text": "# 2.21.0\n* Policy Reporter\n    * Migrate to AWS SDK v2\n    * Dependency Update\n    * Create Roles/ Rolebindings when service account is not managed [[#348](https://github.com/kyverno/policy-reporter/pull/348) by [josqu4red](https://github.com/josqu4red)]\n* Policy Reporter UI\n    * Update GO dependencies\n* Policy Reporter Kyverno Plugin\n",
                      "markdown": "`# 2.21.0\n* Policy Reporter\n    * Migrate to AWS SDK v2\n    * Dependency Update\n    * Create Roles/ Rolebindings when service account is not managed [[#348](https://github.com/kyverno/policy-reporter/pull/348) by [josqu4red](https://github.com/josqu4red)]\n* Policy Reporter UI\n    * Update GO dependencies\n* Policy Reporter Kyverno Plugin\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 9,
                  "endLine": 66,
                  "endColumn": 17,
                  "snippet": {
                    "text": " E-Mails\n\n# 2.22.1\n* Helm Chart\n    * Fix indentation in SummaryReport CronJob\n\n# 2.22.0\n* Helm Chart\n    * Policy Reporter v2.18.0\n        * Support HTTP BasicAuth for Loki [[#394](https://github.com/kyverno/policy-reporter/pull/394) by [YannickTeKulve](https://github.com/YannickTeKulve)]\n        * Update README Targets and Links [[#396](https://github.com/kyverno/policy-reporter/pull/396) by [vponoikoait](https://github.com/vponoikoait)]\n        * AccoundID for SecurityHub is now optional if IRSA is used.\n        * Removed unused from config.yaml. Stream name isn't a property of SecurityHub [[#403](",
                    "rendered": {
                      "text": " E-Mails\n\n# 2.22.1\n* Helm Chart\n    * Fix indentation in SummaryReport CronJob\n\n# 2.22.0\n* Helm Chart\n    * Policy Reporter v2.18.0\n        * Support HTTP BasicAuth for Loki [[#394](https://github.com/kyverno/policy-reporter/pull/394) by [YannickTeKulve](https://github.com/YannickTeKulve)]\n        * Update README Targets and Links [[#396](https://github.com/kyverno/policy-reporter/pull/396) by [vponoikoait](https://github.com/vponoikoait)]\n        * AccoundID for SecurityHub is now optional if IRSA is used.\n        * Removed unused from config.yaml. Stream name isn't a property of SecurityHub [[#403](",
                      "markdown": "` E-Mails\n\n# 2.22.1\n* Helm Chart\n    * Fix indentation in SummaryReport CronJob\n\n# 2.22.0\n* Helm Chart\n    * Policy Reporter v2.18.0\n        * Support HTTP BasicAuth for Loki [[#394](https://github.com/kyverno/policy-reporter/pull/394) by [YannickTeKulve](https://github.com/YannickTeKulve)]\n        * Update README Targets and Links [[#396](https://github.com/kyverno/policy-reporter/pull/396) by [vponoikoait](https://github.com/vponoikoait)]\n        * AccoundID for SecurityHub is now optional if IRSA is used.\n        * Removed unused from config.yaml. Stream name isn't a property of SecurityHub [[#403](`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 5,
                  "endLine": 25,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\n# 2.23.1\n* Helm Chart\n    * Update AppVersion in `values.yaml`\n\n# 2.23.0\n* Helm Chart\n",
                    "rendered": {
                      "text": "\n# 2.23.1\n* Helm Chart\n    * Update AppVersion in `values.yaml`\n\n# 2.23.0\n* Helm Chart\n",
                      "markdown": "`\n# 2.23.1\n* Helm Chart\n    * Update AppVersion in `values.yaml`\n\n# 2.23.0\n* Helm Chart\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 731,
                  "startColumn": 5,
                  "endLine": 731,
                  "endColumn": 13,
                  "snippet": {
                    "text": "## 1.3.3\n\n* Update Policy Reporter UI to v0.9.0\n    * expand Tables with Validation Message\n* Reduce log messages\n\n## 1.3.2\n",
                    "rendered": {
                      "text": "## 1.3.3\n\n* Update Policy Reporter UI to v0.9.0\n    * expand Tables with Validation Message\n* Reduce log messages\n\n## 1.3.2\n",
                      "markdown": "`## 1.3.3\n\n* Update Policy Reporter UI to v0.9.0\n    * expand Tables with Validation Message\n* Reduce log messages\n\n## 1.3.2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 724,
                  "startColumn": 20,
                  "endLine": 724,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n## 1.3.4\n\n* Configure Debounce Time in seconds for Cleanup Events over Helm Chart\n    * Helm Value `cleanupDebounceTime` - default: 20\n* Improved securityContext defaults\n\n",
                    "rendered": {
                      "text": "\n## 1.3.4\n\n* Configure Debounce Time in seconds for Cleanup Events over Helm Chart\n    * Helm Value `cleanupDebounceTime` - default: 20\n* Improved securityContext defaults\n\n",
                      "markdown": "`\n## 1.3.4\n\n* Configure Debounce Time in seconds for Cleanup Events over Helm Chart\n    * Helm Value `cleanupDebounceTime` - default: 20\n* Improved securityContext defaults\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 695,
                  "startColumn": 25,
                  "endLine": 695,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    * Add default labels on every resource\n\n# 1.6.2\n* Increase Result Caching Time to handle Kyverno issues with Policy reconcilation [Issue](https://github.com/kyverno/kyverno/issues/1921)\n* Fix golint errors\n\n# 1.6.1\n",
                    "rendered": {
                      "text": "    * Add default labels on every resource\n\n# 1.6.2\n* Increase Result Caching Time to handle Kyverno issues with Policy reconcilation [Issue](https://github.com/kyverno/kyverno/issues/1921)\n* Fix golint errors\n\n# 1.6.1\n",
                      "markdown": "`    * Add default labels on every resource\n\n# 1.6.2\n* Increase Result Caching Time to handle Kyverno issues with Policy reconcilation [Issue](https://github.com/kyverno/kyverno/issues/1921)\n* Fix golint errors\n\n# 1.6.1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 581,
                  "startColumn": 14,
                  "endLine": 581,
                  "endColumn": 21,
                  "snippet": {
                    "text": "    * REST API\n    * Metrics API\n* metrics and REST API using the same HTTP Server (were separated before)\n* improved CRD watch logic with Kubernetes client informer\n\n# 1.12.6\n* Update Go Base Image for all Components\n",
                    "rendered": {
                      "text": "    * REST API\n    * Metrics API\n* metrics and REST API using the same HTTP Server (were separated before)\n* improved CRD watch logic with Kubernetes client informer\n\n# 1.12.6\n* Update Go Base Image for all Components\n",
                      "markdown": "`    * REST API\n    * Metrics API\n* metrics and REST API using the same HTTP Server (were separated before)\n* improved CRD watch logic with Kubernetes client informer\n\n# 1.12.6\n* Update Go Base Image for all Components\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 568,
                  "startColumn": 14,
                  "endLine": 568,
                  "endColumn": 21,
                  "snippet": {
                    "text": "* extended REST API based on the new SQLite DB for filters and grouping of data\n* metrics API is now optional\n* metrics and REST API using the same HTTP Server (were separated before)\n* improved CRD watch logic with Kubernetes client informer\n* `Yandex` changed to a general `S3` target.\n\n## Policy Reporter UI\n",
                    "rendered": {
                      "text": "* extended REST API based on the new SQLite DB for filters and grouping of data\n* metrics API is now optional\n* metrics and REST API using the same HTTP Server (were separated before)\n* improved CRD watch logic with Kubernetes client informer\n* `Yandex` changed to a general `S3` target.\n\n## Policy Reporter UI\n",
                      "markdown": "`* extended REST API based on the new SQLite DB for filters and grouping of data\n* metrics API is now optional\n* metrics and REST API using the same HTTP Server (were separated before)\n* improved CRD watch logic with Kubernetes client informer\n* `Yandex` changed to a general `S3` target.\n\n## Policy Reporter UI\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 550,
                  "startColumn": 84,
                  "endLine": 550,
                  "endColumn": 91,
                  "snippet": {
                    "text": "\n## Chart\n* Removed deprecated values `crdVersion`, `cleanupDebounceTime`\n* Simplify `policyPriorities`, `policyPriorities.enabled` was removed along with the watch feature\n    * Priority determined mainly over severity\n* Add `sources` filter to target configurations\n* Improved `NetworkPolicy` configuration for all components\n",
                    "rendered": {
                      "text": "\n## Chart\n* Removed deprecated values `crdVersion`, `cleanupDebounceTime`\n* Simplify `policyPriorities`, `policyPriorities.enabled` was removed along with the watch feature\n    * Priority determined mainly over severity\n* Add `sources` filter to target configurations\n* Improved `NetworkPolicy` configuration for all components\n",
                      "markdown": "`\n## Chart\n* Removed deprecated values `crdVersion`, `cleanupDebounceTime`\n* Simplify `policyPriorities`, `policyPriorities.enabled` was removed along with the watch feature\n    * Priority determined mainly over severity\n* Add `sources` filter to target configurations\n* Improved `NetworkPolicy` configuration for all components\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 532,
                  "startColumn": 54,
                  "endLine": 533,
                  "snippet": {
                    "text": "\n# 2.1.1\n* Fix KyvernoPlugin Metrics ServiceMonitor Port [[#96](https://github.com/kyverno/policy-reporter-ui/pull/96) by [z0rc](https://github.com/z0rc)]\n* Remove unused Port from KyvernoPlugin Deployment and Service\n\n# 2.1.0\n* KyvernoPlugin v1.1.0\n    * New KyvernoPlugin API - VerifyImages Rules (<a href=\"https://kyverno.github.io/policy-reporter/guide/06-troubleshooting#readinessprobe-fails\" target=\"_blank\">details</a>)\n",
                    "rendered": {
                      "text": "\n# 2.1.1\n* Fix KyvernoPlugin Metrics ServiceMonitor Port [[#96](https://github.com/kyverno/policy-reporter-ui/pull/96) by [z0rc](https://github.com/z0rc)]\n* Remove unused Port from KyvernoPlugin Deployment and Service\n\n# 2.1.0\n* KyvernoPlugin v1.1.0\n    * New KyvernoPlugin API - VerifyImages Rules (<a href=\"https://kyverno.github.io/policy-reporter/guide/06-troubleshooting#readinessprobe-fails\" target=\"_blank\">details</a>)\n",
                      "markdown": "`\n# 2.1.1\n* Fix KyvernoPlugin Metrics ServiceMonitor Port [[#96](https://github.com/kyverno/policy-reporter-ui/pull/96) by [z0rc](https://github.com/z0rc)]\n* Remove unused Port from KyvernoPlugin Deployment and Service\n\n# 2.1.0\n* KyvernoPlugin v1.1.0\n    * New KyvernoPlugin API - VerifyImages Rules (<a href=\"https://kyverno.github.io/policy-reporter/guide/06-troubleshooting#readinessprobe-fails\" target=\"_blank\">details</a>)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 37,
                  "endLine": 122,
                  "endColumn": 46,
                  "snippet": {
                    "text": "* Policy Reporter\n    * Migrate to AWS SDK v2\n    * Dependency Update\n    * Create Roles/ Rolebindings when service account is not managed [[#348](https://github.com/kyverno/policy-reporter/pull/348) by [josqu4red](https://github.com/josqu4red)]\n* Policy Reporter UI\n    * Update GO dependencies\n* Policy Reporter Kyverno Plugin\n",
                    "rendered": {
                      "text": "* Policy Reporter\n    * Migrate to AWS SDK v2\n    * Dependency Update\n    * Create Roles/ Rolebindings when service account is not managed [[#348](https://github.com/kyverno/policy-reporter/pull/348) by [josqu4red](https://github.com/josqu4red)]\n* Policy Reporter UI\n    * Update GO dependencies\n* Policy Reporter Kyverno Plugin\n",
                      "markdown": "`* Policy Reporter\n    * Migrate to AWS SDK v2\n    * Dependency Update\n    * Create Roles/ Rolebindings when service account is not managed [[#348](https://github.com/kyverno/policy-reporter/pull/348) by [josqu4red](https://github.com/josqu4red)]\n* Policy Reporter UI\n    * Update GO dependencies\n* Policy Reporter Kyverno Plugin\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/kyverno-policy-reporter.zip/CHANGELOG.md"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 22,
                  "endLine": 96,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n# 2.21.4\n* Helm Chart\n    * Allow additional env variables to be added [[#378](https://github.com/kyverno/policy-reporter/pull/378) by [kbcbals](https://github.com/kbcbals)]\n\n# 2.21.3\n* Policy Reporter v2.17.4\n",
                    "rendered": {
                      "text": "\n# 2.21.4\n* Helm Chart\n    * Allow additional env variables to be added [[#378](https://github.com/kyverno/policy-reporter/pull/378) by [kbcbals](https://github.com/kbcbals)]\n\n# 2.21.3\n* Policy Reporter v2.17.4\n",
                      "markdown": "`\n# 2.21.4\n* Helm Chart\n    * Allow additional env variables to be added [[#378](https://github.com/kyverno/policy-reporter/pull/378) by [kbcbals](https://github.com/kbcbals)]\n\n# 2.21.3\n* Policy Reporter v2.17.4\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}