{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/man/man1/getfattr.1"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 41,
                  "endLine": 77,
                  "endColumn": 47,
                  "snippet": {
                    "text": ".I en\nare \"text\", \"hex\", and \"base64\".\nValues encoded as text strings are enclosed in double quotes (\"),\nwhile strings encoded as hexadecimal and base64 are prefixed with\n0x and 0s, respectively.\n.TP\n.BR \\-h \", \" \\-\\-no-dereference\n",
                    "rendered": {
                      "text": ".I en\nare \"text\", \"hex\", and \"base64\".\nValues encoded as text strings are enclosed in double quotes (\"),\nwhile strings encoded as hexadecimal and base64 are prefixed with\n0x and 0s, respectively.\n.TP\n.BR \\-h \", \" \\-\\-no-dereference\n",
                      "markdown": "`.I en\nare \"text\", \"hex\", and \"base64\".\nValues encoded as text strings are enclosed in double quotes (\"),\nwhile strings encoded as hexadecimal and base64 are prefixed with\n0x and 0s, respectively.\n.TP\n.BR \\-h \", \" \\-\\-no-dereference\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/man/man1/getfattr.1"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 24,
                  "endLine": 75,
                  "endColumn": 30,
                  "snippet": {
                    "text": "Encode values after retrieving them.\nValid values of\n.I en\nare \"text\", \"hex\", and \"base64\".\nValues encoded as text strings are enclosed in double quotes (\"),\nwhile strings encoded as hexadecimal and base64 are prefixed with\n0x and 0s, respectively.\n",
                    "rendered": {
                      "text": "Encode values after retrieving them.\nValid values of\n.I en\nare \"text\", \"hex\", and \"base64\".\nValues encoded as text strings are enclosed in double quotes (\"),\nwhile strings encoded as hexadecimal and base64 are prefixed with\n0x and 0s, respectively.\n",
                      "markdown": "`Encode values after retrieving them.\nValid values of\n.I en\nare \"text\", \"hex\", and \"base64\".\nValues encoded as text strings are enclosed in double quotes (\"),\nwhile strings encoded as hexadecimal and base64 are prefixed with\n0x and 0s, respectively.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/man/man1/getfattr.1"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 12,
                  "endLine": 129,
                  "endColumn": 18,
                  "snippet": {
                    "text": ".B \\-\\-\nEnd of command line options.\nAll remaining parameters are interpreted as file names, even if they\nstart with a dash character.\n.SH AUTHOR\nAndreas Gruenbacher,\n.RI < andreas.gruenbacher@gmail.com >\n",
                    "rendered": {
                      "text": ".B \\-\\-\nEnd of command line options.\nAll remaining parameters are interpreted as file names, even if they\nstart with a dash character.\n.SH AUTHOR\nAndreas Gruenbacher,\n.RI < andreas.gruenbacher@gmail.com >\n",
                      "markdown": "`.B \\-\\-\nEnd of command line options.\nAll remaining parameters are interpreted as file names, even if they\nstart with a dash character.\n.SH AUTHOR\nAndreas Gruenbacher,\n.RI < andreas.gruenbacher@gmail.com >\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/man/man1/getfattr.1"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 40,
                  "endLine": 77,
                  "endColumn": 48,
                  "snippet": {
                    "text": ".I en\nare \"text\", \"hex\", and \"base64\".\nValues encoded as text strings are enclosed in double quotes (\"),\nwhile strings encoded as hexadecimal and base64 are prefixed with\n0x and 0s, respectively.\n.TP\n.BR \\-h \", \" \\-\\-no-dereference\n",
                    "rendered": {
                      "text": ".I en\nare \"text\", \"hex\", and \"base64\".\nValues encoded as text strings are enclosed in double quotes (\"),\nwhile strings encoded as hexadecimal and base64 are prefixed with\n0x and 0s, respectively.\n.TP\n.BR \\-h \", \" \\-\\-no-dereference\n",
                      "markdown": "`.I en\nare \"text\", \"hex\", and \"base64\".\nValues encoded as text strings are enclosed in double quotes (\"),\nwhile strings encoded as hexadecimal and base64 are prefixed with\n0x and 0s, respectively.\n.TP\n.BR \\-h \", \" \\-\\-no-dereference\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/INSTALL"
                },
                "region": {
                  "startLine": 329,
                  "startColumn": 11,
                  "endLine": 329,
                  "endColumn": 16,
                  "snippet": {
                    "text": "'--help=recursive'\n     Print a summary of the options unique to this package's\n     'configure', and exit.  The 'short' variant lists options used only\n     in the top level, while the 'recursive' variant lists options also\n     present in any nested packages.\n\n'--version'\n",
                    "rendered": {
                      "text": "'--help=recursive'\n     Print a summary of the options unique to this package's\n     'configure', and exit.  The 'short' variant lists options used only\n     in the top level, while the 'recursive' variant lists options also\n     present in any nested packages.\n\n'--version'\n",
                      "markdown": "`'--help=recursive'\n     Print a summary of the options unique to this package's\n     'configure', and exit.  The 'short' variant lists options used only\n     in the top level, while the 'recursive' variant lists options also\n     present in any nested packages.\n\n'--version'\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/INSTALL"
                },
                "region": {
                  "startLine": 298,
                  "startColumn": 40,
                  "endLine": 298,
                  "endColumn": 48,
                  "snippet": {
                    "text": "Defining Variables\n==================\n\n   Variables not defined in a site shell script can be set in the\nenvironment passed to 'configure'.  However, some packages may run\nconfigure again during the build, and the customized values of these\nvariables may be lost.  In order to avoid this problem, you should set\n",
                    "rendered": {
                      "text": "Defining Variables\n==================\n\n   Variables not defined in a site shell script can be set in the\nenvironment passed to 'configure'.  However, some packages may run\nconfigure again during the build, and the customized values of these\nvariables may be lost.  In order to avoid this problem, you should set\n",
                      "markdown": "`Defining Variables\n==================\n\n   Variables not defined in a site shell script can be set in the\nenvironment passed to 'configure'.  However, some packages may run\nconfigure again during the build, and the customized values of these\nvariables may be lost.  In order to avoid this problem, you should set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/INSTALL"
                },
                "region": {
                  "startLine": 288,
                  "startColumn": 27,
                  "endLine": 288,
                  "endColumn": 35,
                  "snippet": {
                    "text": "================\n\n   If you want to set default values for 'configure' scripts to share,\nyou can create a site shell script called 'config.site' that gives\ndefault values for variables like 'CC', 'cache_file', and 'prefix'.\n'configure' looks for 'PREFIX/share/config.site' if it exists, then\n'PREFIX/etc/config.site' if it exists.  Or, you can set the\n",
                    "rendered": {
                      "text": "================\n\n   If you want to set default values for 'configure' scripts to share,\nyou can create a site shell script called 'config.site' that gives\ndefault values for variables like 'CC', 'cache_file', and 'prefix'.\n'configure' looks for 'PREFIX/share/config.site' if it exists, then\n'PREFIX/etc/config.site' if it exists.  Or, you can set the\n",
                      "markdown": "`================\n\n   If you want to set default values for 'configure' scripts to share,\nyou can create a site shell script called 'config.site' that gives\ndefault values for variables like 'CC', 'cache_file', and 'prefix'.\n'configure' looks for 'PREFIX/share/config.site' if it exists, then\n'PREFIX/etc/config.site' if it exists.  Or, you can set the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/INSTALL"
                },
                "region": {
                  "startLine": 205,
                  "startColumn": 69,
                  "endLine": 206,
                  "endColumn": 5,
                  "snippet": {
                    "text": "'README' should mention any '--enable-' and '--with-' options that the\npackage recognizes.\n\n   For packages that use the X Window System, 'configure' can usually\nfind the X include and library files automatically, but if it doesn't,\nyou can use the 'configure' options '--x-includes=DIR' and\n'--x-libraries=DIR' to specify their locations.\n\n",
                    "rendered": {
                      "text": "'README' should mention any '--enable-' and '--with-' options that the\npackage recognizes.\n\n   For packages that use the X Window System, 'configure' can usually\nfind the X include and library files automatically, but if it doesn't,\nyou can use the 'configure' options '--x-includes=DIR' and\n'--x-libraries=DIR' to specify their locations.\n\n",
                      "markdown": "`'README' should mention any '--enable-' and '--with-' options that the\npackage recognizes.\n\n   For packages that use the X Window System, 'configure' can usually\nfind the X include and library files automatically, but if it doesn't,\nyou can use the 'configure' options '--x-includes=DIR' and\n'--x-libraries=DIR' to specify their locations.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/INSTALL"
                },
                "region": {
                  "startLine": 174,
                  "startColumn": 67,
                  "endLine": 175,
                  "snippet": {
                    "text": "prefix=/alternate/directory' will choose an alternate location for all\ndirectory configuration variables that were expressed in terms of\n'${prefix}'.  Any directories that were specified during 'configure',\nbut not in terms of '${prefix}', must each be overridden at install time\nfor the entire installation to be relocated.  The approach of makefile\nvariable overrides for each directory variable is required by the GNU\nCoding Standards, and ideally causes no recompilation.  However, some\nplatforms have known limitations with the semantics of shared libraries\n",
                    "rendered": {
                      "text": "prefix=/alternate/directory' will choose an alternate location for all\ndirectory configuration variables that were expressed in terms of\n'${prefix}'.  Any directories that were specified during 'configure',\nbut not in terms of '${prefix}', must each be overridden at install time\nfor the entire installation to be relocated.  The approach of makefile\nvariable overrides for each directory variable is required by the GNU\nCoding Standards, and ideally causes no recompilation.  However, some\nplatforms have known limitations with the semantics of shared libraries\n",
                      "markdown": "`prefix=/alternate/directory' will choose an alternate location for all\ndirectory configuration variables that were expressed in terms of\n'${prefix}'.  Any directories that were specified during 'configure',\nbut not in terms of '${prefix}', must each be overridden at install time\nfor the entire installation to be relocated.  The approach of makefile\nvariable overrides for each directory variable is required by the GNU\nCoding Standards, and ideally causes no recompilation.  However, some\nplatforms have known limitations with the semantics of shared libraries\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/INSTALL"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 39,
                  "endLine": 137,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                 CPP=\"gcc -E\" CXXCPP=\"g++ -E\"\n\n   This is not guaranteed to produce working output in all cases, you\nmay have to build one architecture at a time and combine the results\nusing the 'lipo' tool if you have problems.\n\nInstallation Names\n",
                    "rendered": {
                      "text": "                 CPP=\"gcc -E\" CXXCPP=\"g++ -E\"\n\n   This is not guaranteed to produce working output in all cases, you\nmay have to build one architecture at a time and combine the results\nusing the 'lipo' tool if you have problems.\n\nInstallation Names\n",
                      "markdown": "`                 CPP=\"gcc -E\" CXXCPP=\"g++ -E\"\n\n   This is not guaranteed to produce working output in all cases, you\nmay have to build one architecture at a time and combine the results\nusing the 'lipo' tool if you have problems.\n\nInstallation Names\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/INSTALL"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 17,
                  "endLine": 122,
                  "endColumn": 23,
                  "snippet": {
                    "text": "as a \"VPATH\" build.\n\n   With a non-GNU 'make', it is safer to compile the package for one\narchitecture at a time in the source code directory.  After you have\ninstalled the package for one architecture, use 'make distclean' before\nreconfiguring for another architecture.\n\n",
                    "rendered": {
                      "text": "as a \"VPATH\" build.\n\n   With a non-GNU 'make', it is safer to compile the package for one\narchitecture at a time in the source code directory.  After you have\ninstalled the package for one architecture, use 'make distclean' before\nreconfiguring for another architecture.\n\n",
                      "markdown": "`as a \"VPATH\" build.\n\n   With a non-GNU 'make', it is safer to compile the package for one\narchitecture at a time in the source code directory.  After you have\ninstalled the package for one architecture, use 'make distclean' before\nreconfiguring for another architecture.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/INSTALL"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 15,
                  "endLine": 99,
                  "endColumn": 23,
                  "snippet": {
                    "text": "=====================\n\n   Some systems require unusual options for compilation or linking that\nthe 'configure' script does not know about.  Run './configure --help'\nfor details on some of the pertinent environment variables.\n\n   You can give 'configure' initial values for configuration parameters\n",
                    "rendered": {
                      "text": "=====================\n\n   Some systems require unusual options for compilation or linking that\nthe 'configure' script does not know about.  Run './configure --help'\nfor details on some of the pertinent environment variables.\n\n   You can give 'configure' initial values for configuration parameters\n",
                      "markdown": "`=====================\n\n   Some systems require unusual options for compilation or linking that\nthe 'configure' script does not know about.  Run './configure --help'\nfor details on some of the pertinent environment variables.\n\n   You can give 'configure' initial values for configuration parameters\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/INSTALL"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 9,
                  "endLine": 70,
                  "endColumn": 15,
                  "snippet": {
                    "text": "     privileges.\n\n  5. Optionally, type 'make installcheck' to repeat any self-tests, but\n     this time using the binaries in their final installed location.\n     This target does not install anything.  Running this target as a\n     regular user, particularly if the prior 'make install' required\n     root privileges, verifies that the installation completed\n",
                    "rendered": {
                      "text": "     privileges.\n\n  5. Optionally, type 'make installcheck' to repeat any self-tests, but\n     this time using the binaries in their final installed location.\n     This target does not install anything.  Running this target as a\n     regular user, particularly if the prior 'make install' required\n     root privileges, verifies that the installation completed\n",
                      "markdown": "`     privileges.\n\n  5. Optionally, type 'make installcheck' to repeat any self-tests, but\n     this time using the binaries in their final installed location.\n     This target does not install anything.  Running this target as a\n     regular user, particularly if the prior 'make install' required\n     root privileges, verifies that the installation completed\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/INSTALL"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 65,
                  "endLine": 40,
                  "snippet": {
                    "text": "default to prevent problems with accidental use of stale cache files.\n\n   If you need to do unusual things to compile the package, please try\nto figure out how 'configure' could check whether to do them, and mail\ndiffs or instructions to the address given in the 'README' so they can\nbe considered for the next release.  If you are using the cache, and at\nsome point 'config.cache' contains results you don't want to keep, you\nmay remove or edit it.\n",
                    "rendered": {
                      "text": "default to prevent problems with accidental use of stale cache files.\n\n   If you need to do unusual things to compile the package, please try\nto figure out how 'configure' could check whether to do them, and mail\ndiffs or instructions to the address given in the 'README' so they can\nbe considered for the next release.  If you are using the cache, and at\nsome point 'config.cache' contains results you don't want to keep, you\nmay remove or edit it.\n",
                      "markdown": "`default to prevent problems with accidental use of stale cache files.\n\n   If you need to do unusual things to compile the package, please try\nto figure out how 'configure' could check whether to do them, and mail\ndiffs or instructions to the address given in the 'README' so they can\nbe considered for the next release.  If you are using the cache, and at\nsome point 'config.cache' contains results you don't want to keep, you\nmay remove or edit it.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/INSTALL"
                },
                "region": {
                  "startLine": 28,
                  "startColumn": 41,
                  "endLine": 28,
                  "endColumn": 49,
                  "snippet": {
                    "text": "various system-dependent variables used during compilation.  It uses\nthose values to create a 'Makefile' in each directory of the package.\nIt may also create one or more '.h' files containing system-dependent\ndefinitions.  Finally, it creates a shell script 'config.status' that\nyou can run in the future to recreate the current configuration, and a\nfile 'config.log' containing compiler output (useful mainly for\ndebugging 'configure').\n",
                    "rendered": {
                      "text": "various system-dependent variables used during compilation.  It uses\nthose values to create a 'Makefile' in each directory of the package.\nIt may also create one or more '.h' files containing system-dependent\ndefinitions.  Finally, it creates a shell script 'config.status' that\nyou can run in the future to recreate the current configuration, and a\nfile 'config.log' containing compiler output (useful mainly for\ndebugging 'configure').\n",
                      "markdown": "`various system-dependent variables used during compilation.  It uses\nthose values to create a 'Makefile' in each directory of the package.\nIt may also create one or more '.h' files containing system-dependent\ndefinitions.  Finally, it creates a shell script 'config.status' that\nyou can run in the future to recreate the current configuration, and a\nfile 'config.log' containing compiler output (useful mainly for\ndebugging 'configure').\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/INSTALL"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 24,
                  "endLine": 24,
                  "endColumn": 32,
                  "snippet": {
                    "text": "necessarily a bug.  More recommendations for GNU packages can be found\nin *note Makefile Conventions: (standards)Makefile Conventions.\n\n   The 'configure' shell script attempts to guess correct values for\nvarious system-dependent variables used during compilation.  It uses\nthose values to create a 'Makefile' in each directory of the package.\nIt may also create one or more '.h' files containing system-dependent\n",
                    "rendered": {
                      "text": "necessarily a bug.  More recommendations for GNU packages can be found\nin *note Makefile Conventions: (standards)Makefile Conventions.\n\n   The 'configure' shell script attempts to guess correct values for\nvarious system-dependent variables used during compilation.  It uses\nthose values to create a 'Makefile' in each directory of the package.\nIt may also create one or more '.h' files containing system-dependent\n",
                      "markdown": "`necessarily a bug.  More recommendations for GNU packages can be found\nin *note Makefile Conventions: (standards)Makefile Conventions.\n\n   The 'configure' shell script attempts to guess correct values for\nvarious system-dependent variables used during compilation.  It uses\nthose values to create a 'Makefile' in each directory of the package.\nIt may also create one or more '.h' files containing system-dependent\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/INSTALL"
                },
                "region": {
                  "startLine": 318,
                  "startColumn": 50,
                  "endLine": 318,
                  "endColumn": 59,
                  "snippet": {
                    "text": "'configure' Invocation\n======================\n\n   'configure' recognizes the following options to control how it\noperates.\n\n'--help'\n",
                    "rendered": {
                      "text": "'configure' Invocation\n======================\n\n   'configure' recognizes the following options to control how it\noperates.\n\n'--help'\n",
                      "markdown": "`'configure' Invocation\n======================\n\n   'configure' recognizes the following options to control how it\noperates.\n\n'--help'\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/INSTALL"
                },
                "region": {
                  "startLine": 188,
                  "startColumn": 70,
                  "endLine": 189,
                  "endColumn": 3,
                  "snippet": {
                    "text": "'DESTDIR' overrides is not required by the GNU Coding Standards, and\ndoes not work on platforms that have drive letters.  On the other hand,\nit does better at avoiding recompilation issues, and works well even\nwhen some directory options were not specified in terms of '${prefix}'\nat 'configure' time.\n\nOptional Features\n=================\n",
                    "rendered": {
                      "text": "'DESTDIR' overrides is not required by the GNU Coding Standards, and\ndoes not work on platforms that have drive letters.  On the other hand,\nit does better at avoiding recompilation issues, and works well even\nwhen some directory options were not specified in terms of '${prefix}'\nat 'configure' time.\n\nOptional Features\n=================\n",
                      "markdown": "`'DESTDIR' overrides is not required by the GNU Coding Standards, and\ndoes not work on platforms that have drive letters.  On the other hand,\nit does better at avoiding recompilation issues, and works well even\nwhen some directory options were not specified in terms of '${prefix}'\nat 'configure' time.\n\nOptional Features\n=================\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/INSTALL"
                },
                "region": {
                  "startLine": 187,
                  "startColumn": 14,
                  "endLine": 187,
                  "endColumn": 18,
                  "snippet": {
                    "text": "'/alternate/directory' before all installation names.  The approach of\n'DESTDIR' overrides is not required by the GNU Coding Standards, and\ndoes not work on platforms that have drive letters.  On the other hand,\nit does better at avoiding recompilation issues, and works well even\nwhen some directory options were not specified in terms of '${prefix}'\nat 'configure' time.\n\n",
                    "rendered": {
                      "text": "'/alternate/directory' before all installation names.  The approach of\n'DESTDIR' overrides is not required by the GNU Coding Standards, and\ndoes not work on platforms that have drive letters.  On the other hand,\nit does better at avoiding recompilation issues, and works well even\nwhen some directory options were not specified in terms of '${prefix}'\nat 'configure' time.\n\n",
                      "markdown": "`'/alternate/directory' before all installation names.  The approach of\n'DESTDIR' overrides is not required by the GNU Coding Standards, and\ndoes not work on platforms that have drive letters.  On the other hand,\nit does better at avoiding recompilation issues, and works well even\nwhen some directory options were not specified in terms of '${prefix}'\nat 'configure' time.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/INSTALL"
                },
                "region": {
                  "startLine": 174,
                  "startColumn": 56,
                  "endLine": 174,
                  "endColumn": 60,
                  "snippet": {
                    "text": "prefix=/alternate/directory' will choose an alternate location for all\ndirectory configuration variables that were expressed in terms of\n'${prefix}'.  Any directories that were specified during 'configure',\nbut not in terms of '${prefix}', must each be overridden at install time\nfor the entire installation to be relocated.  The approach of makefile\nvariable overrides for each directory variable is required by the GNU\nCoding Standards, and ideally causes no recompilation.  However, some\n",
                    "rendered": {
                      "text": "prefix=/alternate/directory' will choose an alternate location for all\ndirectory configuration variables that were expressed in terms of\n'${prefix}'.  Any directories that were specified during 'configure',\nbut not in terms of '${prefix}', must each be overridden at install time\nfor the entire installation to be relocated.  The approach of makefile\nvariable overrides for each directory variable is required by the GNU\nCoding Standards, and ideally causes no recompilation.  However, some\n",
                      "markdown": "`prefix=/alternate/directory' will choose an alternate location for all\ndirectory configuration variables that were expressed in terms of\n'${prefix}'.  Any directories that were specified during 'configure',\nbut not in terms of '${prefix}', must each be overridden at install time\nfor the entire installation to be relocated.  The approach of makefile\nvariable overrides for each directory variable is required by the GNU\nCoding Standards, and ideally causes no recompilation.  However, some\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/INSTALL"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 34,
                  "endLine": 137,
                  "endColumn": 38,
                  "snippet": {
                    "text": "                 CPP=\"gcc -E\" CXXCPP=\"g++ -E\"\n\n   This is not guaranteed to produce working output in all cases, you\nmay have to build one architecture at a time and combine the results\nusing the 'lipo' tool if you have problems.\n\nInstallation Names\n",
                    "rendered": {
                      "text": "                 CPP=\"gcc -E\" CXXCPP=\"g++ -E\"\n\n   This is not guaranteed to produce working output in all cases, you\nmay have to build one architecture at a time and combine the results\nusing the 'lipo' tool if you have problems.\n\nInstallation Names\n",
                      "markdown": "`                 CPP=\"gcc -E\" CXXCPP=\"g++ -E\"\n\n   This is not guaranteed to produce working output in all cases, you\nmay have to build one architecture at a time and combine the results\nusing the 'lipo' tool if you have problems.\n\nInstallation Names\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/INSTALL"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 12,
                  "endLine": 122,
                  "endColumn": 16,
                  "snippet": {
                    "text": "as a \"VPATH\" build.\n\n   With a non-GNU 'make', it is safer to compile the package for one\narchitecture at a time in the source code directory.  After you have\ninstalled the package for one architecture, use 'make distclean' before\nreconfiguring for another architecture.\n\n",
                    "rendered": {
                      "text": "as a \"VPATH\" build.\n\n   With a non-GNU 'make', it is safer to compile the package for one\narchitecture at a time in the source code directory.  After you have\ninstalled the package for one architecture, use 'make distclean' before\nreconfiguring for another architecture.\n\n",
                      "markdown": "`as a \"VPATH\" build.\n\n   With a non-GNU 'make', it is safer to compile the package for one\narchitecture at a time in the source code directory.  After you have\ninstalled the package for one architecture, use 'make distclean' before\nreconfiguring for another architecture.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/INSTALL"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 65,
                  "endLine": 113,
                  "endColumn": 69,
                  "snippet": {
                    "text": "Compiling For Multiple Architectures\n====================================\n\n   You can compile the package for more than one kind of computer at the\nsame time, by placing the object files for each architecture in their\nown directory.  To do this, you can use GNU 'make'.  'cd' to the\ndirectory where you want the object files and executables to go and run\n",
                    "rendered": {
                      "text": "Compiling For Multiple Architectures\n====================================\n\n   You can compile the package for more than one kind of computer at the\nsame time, by placing the object files for each architecture in their\nown directory.  To do this, you can use GNU 'make'.  'cd' to the\ndirectory where you want the object files and executables to go and run\n",
                      "markdown": "`Compiling For Multiple Architectures\n====================================\n\n   You can compile the package for more than one kind of computer at the\nsame time, by placing the object files for each architecture in their\nown directory.  To do this, you can use GNU 'make'.  'cd' to the\ndirectory where you want the object files and executables to go and run\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/INSTALL"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 68,
                  "endLine": 42,
                  "snippet": {
                    "text": "   If you need to do unusual things to compile the package, please try\nto figure out how 'configure' could check whether to do them, and mail\ndiffs or instructions to the address given in the 'README' so they can\nbe considered for the next release.  If you are using the cache, and at\nsome point 'config.cache' contains results you don't want to keep, you\nmay remove or edit it.\n\n   The file 'configure.ac' (or 'configure.in') is used to create\n",
                    "rendered": {
                      "text": "   If you need to do unusual things to compile the package, please try\nto figure out how 'configure' could check whether to do them, and mail\ndiffs or instructions to the address given in the 'README' so they can\nbe considered for the next release.  If you are using the cache, and at\nsome point 'config.cache' contains results you don't want to keep, you\nmay remove or edit it.\n\n   The file 'configure.ac' (or 'configure.in') is used to create\n",
                      "markdown": "`   If you need to do unusual things to compile the package, please try\nto figure out how 'configure' could check whether to do them, and mail\ndiffs or instructions to the address given in the 'README' so they can\nbe considered for the next release.  If you are using the cache, and at\nsome point 'config.cache' contains results you don't want to keep, you\nmay remove or edit it.\n\n   The file 'configure.ac' (or 'configure.in') is used to create\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/COPYING"
                },
                "region": {
                  "startLine": 338,
                  "startColumn": 35,
                  "endLine": 338,
                  "endColumn": 39,
                  "snippet": {
                    "text": "necessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n",
                    "rendered": {
                      "text": "necessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n",
                      "markdown": "`necessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/COPYING"
                },
                "region": {
                  "startLine": 298,
                  "startColumn": 59,
                  "endLine": 298,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n",
                    "rendered": {
                      "text": "\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n",
                      "markdown": "`\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/COPYING"
                },
                "region": {
                  "startLine": 212,
                  "startColumn": 30,
                  "endLine": 212,
                  "endColumn": 34,
                  "snippet": {
                    "text": "excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n",
                    "rendered": {
                      "text": "excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n",
                      "markdown": "`excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/COPYING"
                },
                "region": {
                  "startLine": 166,
                  "startColumn": 63,
                  "endLine": 167,
                  "endColumn": 8,
                  "snippet": {
                    "text": "The source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\n",
                    "rendered": {
                      "text": "The source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\n",
                      "markdown": "`The source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/COPYING"
                },
                "region": {
                  "startLine": 150,
                  "startColumn": 51,
                  "endLine": 150,
                  "endColumn": 55,
                  "snippet": {
                    "text": "    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n",
                    "rendered": {
                      "text": "    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n",
                      "markdown": "`    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/COPYING"
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 21,
                  "endLine": 134,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\n",
                    "rendered": {
                      "text": "\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\n",
                      "markdown": "`\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/COPYING"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 43,
                  "endLine": 108,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n",
                    "rendered": {
                      "text": "\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n",
                      "markdown": "`\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/COPYING"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 7,
                  "endLine": 96,
                  "endColumn": 11,
                  "snippet": {
                    "text": "along with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\n",
                    "rendered": {
                      "text": "along with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\n",
                      "markdown": "`along with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/COPYING"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 63,
                  "endLine": 62,
                  "endColumn": 67,
                  "snippet": {
                    "text": "patents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n",
                    "rendered": {
                      "text": "patents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n",
                      "markdown": "`patents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/COPYING"
                },
                "region": {
                  "startLine": 258,
                  "startColumn": 12,
                  "endLine": 258,
                  "endColumn": 18,
                  "snippet": {
                    "text": "this License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\n",
                    "rendered": {
                      "text": "this License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\n",
                      "markdown": "`this License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/COPYING"
                },
                "region": {
                  "startLine": 246,
                  "startColumn": 34,
                  "endLine": 246,
                  "endColumn": 40,
                  "snippet": {
                    "text": "the limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n",
                    "rendered": {
                      "text": "the limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n",
                      "markdown": "`the limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/COPYING"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 9,
                  "endLine": 197,
                  "endColumn": 15,
                  "snippet": {
                    "text": "all its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\n",
                    "rendered": {
                      "text": "all its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\n",
                      "markdown": "`all its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/COPYING"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 12,
                  "endLine": 59,
                  "endColumn": 18,
                  "snippet": {
                    "text": "authors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n",
                    "rendered": {
                      "text": "authors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n",
                      "markdown": "`authors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/COPYING"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 4,
                  "endLine": 32,
                  "endColumn": 13,
                  "snippet": {
                    "text": "  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n",
                    "rendered": {
                      "text": "  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n",
                      "markdown": "`  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/COPYING.LGPL"
                },
                "region": {
                  "startLine": 479,
                  "startColumn": 59,
                  "endLine": 479,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n",
                    "rendered": {
                      "text": "\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n",
                      "markdown": "`\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/COPYING.LGPL"
                },
                "region": {
                  "startLine": 390,
                  "startColumn": 30,
                  "endLine": 390,
                  "endColumn": 34,
                  "snippet": {
                    "text": "excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n",
                    "rendered": {
                      "text": "excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n",
                      "markdown": "`excuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/COPYING.LGPL"
                },
                "region": {
                  "startLine": 315,
                  "startColumn": 57,
                  "endLine": 316,
                  "snippet": {
                    "text": "    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n",
                    "rendered": {
                      "text": "    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n",
                      "markdown": "`    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/COPYING.LGPL"
                },
                "region": {
                  "startLine": 308,
                  "startColumn": 55,
                  "endLine": 308,
                  "endColumn": 59,
                  "snippet": {
                    "text": "    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n",
                    "rendered": {
                      "text": "    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n",
                      "markdown": "`    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/COPYING.LGPL"
                },
                "region": {
                  "startLine": 212,
                  "startColumn": 21,
                  "endLine": 212,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\n",
                    "rendered": {
                      "text": "\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\n",
                      "markdown": "`\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/COPYING.LGPL"
                },
                "region": {
                  "startLine": 181,
                  "startColumn": 58,
                  "endLine": 181,
                  "endColumn": 62,
                  "snippet": {
                    "text": "    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n",
                    "rendered": {
                      "text": "    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n",
                      "markdown": "`    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/COPYING.LGPL"
                },
                "region": {
                  "startLine": 168,
                  "startColumn": 11,
                  "endLine": 168,
                  "endColumn": 15,
                  "snippet": {
                    "text": "Library.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\n",
                    "rendered": {
                      "text": "Library.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\n",
                      "markdown": "`Library.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/COPYING.LGPL"
                },
                "region": {
                  "startLine": 148,
                  "startColumn": 52,
                  "endLine": 148,
                  "endColumn": 61,
                  "snippet": {
                    "text": "  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\n",
                    "rendered": {
                      "text": "  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\n",
                      "markdown": "`  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/COPYING.LGPL"
                },
                "region": {
                  "startLine": 435,
                  "startColumn": 12,
                  "endLine": 435,
                  "endColumn": 18,
                  "snippet": {
                    "text": "license version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\n",
                    "rendered": {
                      "text": "license version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\n",
                      "markdown": "`license version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/COPYING.LGPL"
                },
                "region": {
                  "startLine": 423,
                  "startColumn": 50,
                  "endLine": 423,
                  "endColumn": 56,
                  "snippet": {
                    "text": "written in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\n",
                    "rendered": {
                      "text": "written in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\n",
                      "markdown": "`written in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/COPYING.LGPL"
                },
                "region": {
                  "startLine": 375,
                  "startColumn": 10,
                  "endLine": 375,
                  "endColumn": 16,
                  "snippet": {
                    "text": "all its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\n",
                    "rendered": {
                      "text": "all its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\n",
                      "markdown": "`all its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/COPYING.LGPL"
                },
                "region": {
                  "startLine": 356,
                  "startColumn": 12,
                  "endLine": 356,
                  "endColumn": 18,
                  "snippet": {
                    "text": "\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\n",
                    "rendered": {
                      "text": "\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\n",
                      "markdown": "`\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/COPYING.LGPL"
                },
                "region": {
                  "startLine": 308,
                  "startColumn": 62,
                  "endLine": 308,
                  "endColumn": 68,
                  "snippet": {
                    "text": "    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n",
                    "rendered": {
                      "text": "    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n",
                      "markdown": "`    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/COPYING.LGPL"
                },
                "region": {
                  "startLine": 233,
                  "startColumn": 32,
                  "endLine": 233,
                  "endColumn": 38,
                  "snippet": {
                    "text": "that copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\n",
                    "rendered": {
                      "text": "that copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\n",
                      "markdown": "`that copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/COPYING.LGPL"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 21,
                  "endLine": 69,
                  "endColumn": 27,
                  "snippet": {
                    "text": "introduced by others.\n\f\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\n",
                    "rendered": {
                      "text": "introduced by others.\n\f\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\n",
                      "markdown": "`introduced by others.\n\f\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/COPYING.LGPL"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 8,
                  "endLine": 39,
                  "endColumn": 17,
                  "snippet": {
                    "text": "  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n",
                    "rendered": {
                      "text": "  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n",
                      "markdown": "`  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/CHANGES"
                },
                "region": {
                  "startLine": 334,
                  "startColumn": 2,
                  "endLine": 334,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\nattr-1.0.2 (24 April 2001)\n\t- rearrange headers to make system call internals private\n\t- update package descriptions\n\nattr-1.0.1 (30 January 2001)\n\t- minor rpm and deb packaging work\n",
                    "rendered": {
                      "text": "\nattr-1.0.2 (24 April 2001)\n\t- rearrange headers to make system call internals private\n\t- update package descriptions\n\nattr-1.0.1 (30 January 2001)\n\t- minor rpm and deb packaging work\n",
                      "markdown": "`\nattr-1.0.2 (24 April 2001)\n\t- rearrange headers to make system call internals private\n\t- update package descriptions\n\nattr-1.0.1 (30 January 2001)\n\t- minor rpm and deb packaging work\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/CHANGES"
                },
                "region": {
                  "startLine": 309,
                  "startColumn": 51,
                  "endLine": 309,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\t- bug fix from Juer Lee, syscall use on non-i386 was broken\n\t- tested on PowerPC and i386; code is simpler and works\n\t- install an additional library symlink for ld, so that the\n\t  shared lib is always found before the static lib at link time\n\nattr-1.1.2 (27 July 2001)\n\t- fixes for (hopefully) the last few nits in libtool usage\n",
                    "rendered": {
                      "text": "\t- bug fix from Juer Lee, syscall use on non-i386 was broken\n\t- tested on PowerPC and i386; code is simpler and works\n\t- install an additional library symlink for ld, so that the\n\t  shared lib is always found before the static lib at link time\n\nattr-1.1.2 (27 July 2001)\n\t- fixes for (hopefully) the last few nits in libtool usage\n",
                      "markdown": "`\t- bug fix from Juer Lee, syscall use on non-i386 was broken\n\t- tested on PowerPC and i386; code is simpler and works\n\t- install an additional library symlink for ld, so that the\n\t  shared lib is always found before the static lib at link time\n\nattr-1.1.2 (27 July 2001)\n\t- fixes for (hopefully) the last few nits in libtool usage\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/CHANGES"
                },
                "region": {
                  "startLine": 216,
                  "startColumn": 2,
                  "endLine": 216,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t- Added routines to libattr for copying extended attributes -\n\t  attr_copy_file and attr_copy_fd.\n\t- libattr.so version updated to reflect these changes.\n\t- Update licensing notice in system call man pages for aeb.\n\nattr-2.2.0 (30 November 2002)\n\t- Complete the internationalisation support, and added initial\n",
                    "rendered": {
                      "text": "\t- Added routines to libattr for copying extended attributes -\n\t  attr_copy_file and attr_copy_fd.\n\t- libattr.so version updated to reflect these changes.\n\t- Update licensing notice in system call man pages for aeb.\n\nattr-2.2.0 (30 November 2002)\n\t- Complete the internationalisation support, and added initial\n",
                      "markdown": "`\t- Added routines to libattr for copying extended attributes -\n\t  attr_copy_file and attr_copy_fd.\n\t- libattr.so version updated to reflect these changes.\n\t- Update licensing notice in system call man pages for aeb.\n\nattr-2.2.0 (30 November 2002)\n\t- Complete the internationalisation support, and added initial\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/CHANGES"
                },
                "region": {
                  "startLine": 170,
                  "startColumn": 2,
                  "endLine": 170,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t  high_water_alloc.\n\t- Quote special characters in path names and attribute names.\n\t- Use high_water_alloc everywhere instead of malloc/realloc.\n\t- Update the test scripts.\n\nattr-2.4.5 (03 July 2003)\n\t- Tweak the build so we don't always run msgmerge,\n",
                    "rendered": {
                      "text": "\t  high_water_alloc.\n\t- Quote special characters in path names and attribute names.\n\t- Use high_water_alloc everywhere instead of malloc/realloc.\n\t- Update the test scripts.\n\nattr-2.4.5 (03 July 2003)\n\t- Tweak the build so we don't always run msgmerge,\n",
                      "markdown": "`\t  high_water_alloc.\n\t- Quote special characters in path names and attribute names.\n\t- Use high_water_alloc everywhere instead of malloc/realloc.\n\t- Update the test scripts.\n\nattr-2.4.5 (03 July 2003)\n\t- Tweak the build so we don't always run msgmerge,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/CHANGES"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 2,
                  "endLine": 122,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t- Update outdated email addresses.\n\nattr-2.4.19 (29 September 2004)\n\t- Update m4 macros, incorporating some portability changes.\n\nattr-2.4.18 (21 September 2004)\n\t- Add Dutch translation (thanks to Luk Claes)\n",
                    "rendered": {
                      "text": "\t- Update outdated email addresses.\n\nattr-2.4.19 (29 September 2004)\n\t- Update m4 macros, incorporating some portability changes.\n\nattr-2.4.18 (21 September 2004)\n\t- Add Dutch translation (thanks to Luk Claes)\n",
                      "markdown": "`\t- Update outdated email addresses.\n\nattr-2.4.19 (29 September 2004)\n\t- Update m4 macros, incorporating some portability changes.\n\nattr-2.4.18 (21 September 2004)\n\t- Add Dutch translation (thanks to Luk Claes)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/CHANGES"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 2,
                  "endLine": 119,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\nattr-2.4.20 (30 November 2004)\n\t- Licensing fixes and clarifications.\n\t- Update outdated email addresses.\n\nattr-2.4.19 (29 September 2004)\n\t- Update m4 macros, incorporating some portability changes.\n",
                    "rendered": {
                      "text": "\nattr-2.4.20 (30 November 2004)\n\t- Licensing fixes and clarifications.\n\t- Update outdated email addresses.\n\nattr-2.4.19 (29 September 2004)\n\t- Update m4 macros, incorporating some portability changes.\n",
                      "markdown": "`\nattr-2.4.20 (30 November 2004)\n\t- Licensing fixes and clarifications.\n\t- Update outdated email addresses.\n\nattr-2.4.19 (29 September 2004)\n\t- Update m4 macros, incorporating some portability changes.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/CHANGES"
                },
                "region": {
                  "startLine": 94,
                  "startColumn": 2,
                  "endLine": 94,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\nattr-2.4.26 (10 November 2005)\n\t- Sync up build system (m4 macros, etc) with other projects\n\t- Update SGI copyright/licence notices\n\nattr-2.4.25 (11 October 2005)\n\t- Add French translation from the debian-l10n-french folks\n",
                    "rendered": {
                      "text": "\nattr-2.4.26 (10 November 2005)\n\t- Sync up build system (m4 macros, etc) with other projects\n\t- Update SGI copyright/licence notices\n\nattr-2.4.25 (11 October 2005)\n\t- Add French translation from the debian-l10n-french folks\n",
                      "markdown": "`\nattr-2.4.26 (10 November 2005)\n\t- Sync up build system (m4 macros, etc) with other projects\n\t- Update SGI copyright/licence notices\n\nattr-2.4.25 (11 October 2005)\n\t- Add French translation from the debian-l10n-french folks\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/CHANGES"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 2,
                  "endLine": 56,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t- Fix issues with makedepend on libtool libraries.\n\nattr-2.4.33 (03 July 2006)\n\t- Update translation Makefile to work better with the Ubuntu\n\t  translation system.  Thanks to feedback from Martin Pitt.\n\t- Fix annoying \"ignores datarootdir\" warning from configure.\n\t- Fix issues with makedepend build infrastructure.\n",
                    "rendered": {
                      "text": "\t- Fix issues with makedepend on libtool libraries.\n\nattr-2.4.33 (03 July 2006)\n\t- Update translation Makefile to work better with the Ubuntu\n\t  translation system.  Thanks to feedback from Martin Pitt.\n\t- Fix annoying \"ignores datarootdir\" warning from configure.\n\t- Fix issues with makedepend build infrastructure.\n",
                      "markdown": "`\t- Fix issues with makedepend on libtool libraries.\n\nattr-2.4.33 (03 July 2006)\n\t- Update translation Makefile to work better with the Ubuntu\n\t  translation system.  Thanks to feedback from Martin Pitt.\n\t- Fix annoying \"ignores datarootdir\" warning from configure.\n\t- Fix issues with makedepend build infrastructure.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/CHANGES"
                },
                "region": {
                  "startLine": 337,
                  "startColumn": 8,
                  "endLine": 337,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\t- update package descriptions\n\nattr-1.0.1 (30 January 2001)\n\t- minor rpm and deb packaging work\n\nattr-1.0.0 (15 January 2001)\n\t- extended attribute code abstracted from xfs-cmds package\n",
                    "rendered": {
                      "text": "\t- update package descriptions\n\nattr-1.0.1 (30 January 2001)\n\t- minor rpm and deb packaging work\n\nattr-1.0.0 (15 January 2001)\n\t- extended attribute code abstracted from xfs-cmds package\n",
                      "markdown": "`\t- update package descriptions\n\nattr-1.0.1 (30 January 2001)\n\t- minor rpm and deb packaging work\n\nattr-1.0.0 (15 January 2001)\n\t- extended attribute code abstracted from xfs-cmds package\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/CHANGES"
                },
                "region": {
                  "startLine": 309,
                  "startColumn": 59,
                  "endLine": 310,
                  "snippet": {
                    "text": "\t- bug fix from Juer Lee, syscall use on non-i386 was broken\n\t- tested on PowerPC and i386; code is simpler and works\n\t- install an additional library symlink for ld, so that the\n\t  shared lib is always found before the static lib at link time\n\nattr-1.1.2 (27 July 2001)\n\t- fixes for (hopefully) the last few nits in libtool usage\n\n",
                    "rendered": {
                      "text": "\t- bug fix from Juer Lee, syscall use on non-i386 was broken\n\t- tested on PowerPC and i386; code is simpler and works\n\t- install an additional library symlink for ld, so that the\n\t  shared lib is always found before the static lib at link time\n\nattr-1.1.2 (27 July 2001)\n\t- fixes for (hopefully) the last few nits in libtool usage\n\n",
                      "markdown": "`\t- bug fix from Juer Lee, syscall use on non-i386 was broken\n\t- tested on PowerPC and i386; code is simpler and works\n\t- install an additional library symlink for ld, so that the\n\t  shared lib is always found before the static lib at link time\n\nattr-1.1.2 (27 July 2001)\n\t- fixes for (hopefully) the last few nits in libtool usage\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/CHANGES"
                },
                "region": {
                  "startLine": 295,
                  "startColumn": 14,
                  "endLine": 295,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\nattr-2.0.1 (26 February 2002)\n\t- incorporate several documentation changes from Andreas,\n\t  including a script to convert from the aget format of\n\t  attribute backup file, to the new getfattr format\n\t- fix IA64 syscall numbering\n\n",
                    "rendered": {
                      "text": "\nattr-2.0.1 (26 February 2002)\n\t- incorporate several documentation changes from Andreas,\n\t  including a script to convert from the aget format of\n\t  attribute backup file, to the new getfattr format\n\t- fix IA64 syscall numbering\n\n",
                      "markdown": "`\nattr-2.0.1 (26 February 2002)\n\t- incorporate several documentation changes from Andreas,\n\t  including a script to convert from the aget format of\n\t  attribute backup file, to the new getfattr format\n\t- fix IA64 syscall numbering\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/CHANGES"
                },
                "region": {
                  "startLine": 288,
                  "startColumn": 46,
                  "endLine": 288,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\nattr-2.0.2 (27 February 2002)\n\t- add in S/390 system call numbers from Martin Schwidefsky\n\t- revert IA64 syscall numbering after further mail with\n\t  David Mosberger (apparently sys_tkill will be moved)\n\t  See:\thttps://external-lists.valinux.com/archives/\\\n\t\t\t/linux-ia64/2002-February/002990.html\n",
                    "rendered": {
                      "text": "\nattr-2.0.2 (27 February 2002)\n\t- add in S/390 system call numbers from Martin Schwidefsky\n\t- revert IA64 syscall numbering after further mail with\n\t  David Mosberger (apparently sys_tkill will be moved)\n\t  See:\thttps://external-lists.valinux.com/archives/\\\n\t\t\t/linux-ia64/2002-February/002990.html\n",
                      "markdown": "`\nattr-2.0.2 (27 February 2002)\n\t- add in S/390 system call numbers from Martin Schwidefsky\n\t- revert IA64 syscall numbering after further mail with\n\t  David Mosberger (apparently sys_tkill will be moved)\n\t  See:\thttps://external-lists.valinux.com/archives/\\\n\t\t\t/linux-ia64/2002-February/002990.html\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/CHANGES"
                },
                "region": {
                  "startLine": 280,
                  "startColumn": 33,
                  "endLine": 281,
                  "snippet": {
                    "text": "\t- Man page updates\n\nattr-2.0.4 (05 March 2002)\n\t- A minor change to the test/run script\n\nattr-2.0.3 (01 March 2002)\n\t- add in ARM architecture system call numbers\n\t- updates to the test output from Andreas\n",
                    "rendered": {
                      "text": "\t- Man page updates\n\nattr-2.0.4 (05 March 2002)\n\t- A minor change to the test/run script\n\nattr-2.0.3 (01 March 2002)\n\t- add in ARM architecture system call numbers\n\t- updates to the test output from Andreas\n",
                      "markdown": "`\t- Man page updates\n\nattr-2.0.4 (05 March 2002)\n\t- A minor change to the test/run script\n\nattr-2.0.3 (01 March 2002)\n\t- add in ARM architecture system call numbers\n\t- updates to the test output from Andreas\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/CHANGES"
                },
                "region": {
                  "startLine": 276,
                  "startColumn": 7,
                  "endLine": 276,
                  "endColumn": 15,
                  "snippet": {
                    "text": "attr-2.0.5 (12 March 2002)\n\t- Fix build for architectures which don't have syscalls yet\n\t- Fix the syscall number used on Sparc for fremovexattr(2)\n\t- Test script updates\n\t- Man page updates\n\nattr-2.0.4 (05 March 2002)\n",
                    "rendered": {
                      "text": "attr-2.0.5 (12 March 2002)\n\t- Fix build for architectures which don't have syscalls yet\n\t- Fix the syscall number used on Sparc for fremovexattr(2)\n\t- Test script updates\n\t- Man page updates\n\nattr-2.0.4 (05 March 2002)\n",
                      "markdown": "`attr-2.0.5 (12 March 2002)\n\t- Fix build for architectures which don't have syscalls yet\n\t- Fix the syscall number used on Sparc for fremovexattr(2)\n\t- Test script updates\n\t- Man page updates\n\nattr-2.0.4 (05 March 2002)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/CHANGES"
                },
                "region": {
                  "startLine": 251,
                  "startColumn": 26,
                  "endLine": 251,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\t- Add system call numbers for the m68k architecture\n\t- Add missing \"enabling\" #define for the Alpha architecture\n\t- Build updates to allow rpmbuild to build rpms (newer versions\n\t  of rpm require this, as rpm itself can no longer build rpms)\n\t- Several section 3 man page corrections (minor)\n\nattr-2.0.9 (04 July 2002)\n",
                    "rendered": {
                      "text": "\t- Add system call numbers for the m68k architecture\n\t- Add missing \"enabling\" #define for the Alpha architecture\n\t- Build updates to allow rpmbuild to build rpms (newer versions\n\t  of rpm require this, as rpm itself can no longer build rpms)\n\t- Several section 3 man page corrections (minor)\n\nattr-2.0.9 (04 July 2002)\n",
                      "markdown": "`\t- Add system call numbers for the m68k architecture\n\t- Add missing \"enabling\" #define for the Alpha architecture\n\t- Build updates to allow rpmbuild to build rpms (newer versions\n\t  of rpm require this, as rpm itself can no longer build rpms)\n\t- Several section 3 man page corrections (minor)\n\nattr-2.0.9 (04 July 2002)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/CHANGES"
                },
                "region": {
                  "startLine": 251,
                  "startColumn": 5,
                  "endLine": 251,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\t- Add system call numbers for the m68k architecture\n\t- Add missing \"enabling\" #define for the Alpha architecture\n\t- Build updates to allow rpmbuild to build rpms (newer versions\n\t  of rpm require this, as rpm itself can no longer build rpms)\n\t- Several section 3 man page corrections (minor)\n\nattr-2.0.9 (04 July 2002)\n",
                    "rendered": {
                      "text": "\t- Add system call numbers for the m68k architecture\n\t- Add missing \"enabling\" #define for the Alpha architecture\n\t- Build updates to allow rpmbuild to build rpms (newer versions\n\t  of rpm require this, as rpm itself can no longer build rpms)\n\t- Several section 3 man page corrections (minor)\n\nattr-2.0.9 (04 July 2002)\n",
                      "markdown": "`\t- Add system call numbers for the m68k architecture\n\t- Add missing \"enabling\" #define for the Alpha architecture\n\t- Build updates to allow rpmbuild to build rpms (newer versions\n\t  of rpm require this, as rpm itself can no longer build rpms)\n\t- Several section 3 man page corrections (minor)\n\nattr-2.0.9 (04 July 2002)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/CHANGES"
                },
                "region": {
                  "startLine": 242,
                  "startColumn": 20,
                  "endLine": 242,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\t  ACL extended attribute name (there were bugs with these).\n\nattr-2.0.11 (04 September 2002)\n\t- Make the test/run script return a proper status code.\n\t- Fix up the error message returned for ENODATA rather\n\t  than ENOATTR, so if ENOATR is assigned a separate number\n\t  we don't mess with ENOATTR's text message.\n",
                    "rendered": {
                      "text": "\t  ACL extended attribute name (there were bugs with these).\n\nattr-2.0.11 (04 September 2002)\n\t- Make the test/run script return a proper status code.\n\t- Fix up the error message returned for ENODATA rather\n\t  than ENOATTR, so if ENOATR is assigned a separate number\n\t  we don't mess with ENOATTR's text message.\n",
                      "markdown": "`\t  ACL extended attribute name (there were bugs with these).\n\nattr-2.0.11 (04 September 2002)\n\t- Make the test/run script return a proper status code.\n\t- Fix up the error message returned for ENODATA rather\n\t  than ENOATTR, so if ENOATR is assigned a separate number\n\t  we don't mess with ENOATTR's text message.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/CHANGES"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 24,
                  "endLine": 197,
                  "endColumn": 29,
                  "snippet": {
                    "text": "attr-2.4.0 (26 February 2003)\n\t- Add symbol level versioning to libattr. This improves link\n\t  time consistency checks. The library versions are also\n\t  honored by RPM, so an RPM package built against say,\n\t  libattr.so.1(ATTR_1.1) won't link against\n\t  libattr.so.1(ATTR_1.0), which was not checked before.\n\t- Make the default check function used by attr_copy_{fd,file}()\n",
                    "rendered": {
                      "text": "attr-2.4.0 (26 February 2003)\n\t- Add symbol level versioning to libattr. This improves link\n\t  time consistency checks. The library versions are also\n\t  honored by RPM, so an RPM package built against say,\n\t  libattr.so.1(ATTR_1.1) won't link against\n\t  libattr.so.1(ATTR_1.0), which was not checked before.\n\t- Make the default check function used by attr_copy_{fd,file}()\n",
                      "markdown": "`attr-2.4.0 (26 February 2003)\n\t- Add symbol level versioning to libattr. This improves link\n\t  time consistency checks. The library versions are also\n\t  honored by RPM, so an RPM package built against say,\n\t  libattr.so.1(ATTR_1.1) won't link against\n\t  libattr.so.1(ATTR_1.0), which was not checked before.\n\t- Make the default check function used by attr_copy_{fd,file}()\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/CHANGES"
                },
                "region": {
                  "startLine": 196,
                  "startColumn": 2,
                  "endLine": 196,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\nattr-2.4.0 (26 February 2003)\n\t- Add symbol level versioning to libattr. This improves link\n\t  time consistency checks. The library versions are also\n\t  honored by RPM, so an RPM package built against say,\n\t  libattr.so.1(ATTR_1.1) won't link against\n\t  libattr.so.1(ATTR_1.0), which was not checked before.\n",
                    "rendered": {
                      "text": "\nattr-2.4.0 (26 February 2003)\n\t- Add symbol level versioning to libattr. This improves link\n\t  time consistency checks. The library versions are also\n\t  honored by RPM, so an RPM package built against say,\n\t  libattr.so.1(ATTR_1.1) won't link against\n\t  libattr.so.1(ATTR_1.0), which was not checked before.\n",
                      "markdown": "`\nattr-2.4.0 (26 February 2003)\n\t- Add symbol level versioning to libattr. This improves link\n\t  time consistency checks. The library versions are also\n\t  honored by RPM, so an RPM package built against say,\n\t  libattr.so.1(ATTR_1.1) won't link against\n\t  libattr.so.1(ATTR_1.0), which was not checked before.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/CHANGES"
                },
                "region": {
                  "startLine": 191,
                  "startColumn": 11,
                  "endLine": 191,
                  "endColumn": 19,
                  "snippet": {
                    "text": "attr-2.4.1 (27 March 2003)\n\t- Cleanups to the build process, in particular the automatic\n\t  rpm package generation Makefile and spec file template.\n\t- Makepkgs script can now propagate failures back from make.\n\t- Change default --prefix to /usr.\n\nattr-2.4.0 (26 February 2003)\n",
                    "rendered": {
                      "text": "attr-2.4.1 (27 March 2003)\n\t- Cleanups to the build process, in particular the automatic\n\t  rpm package generation Makefile and spec file template.\n\t- Makepkgs script can now propagate failures back from make.\n\t- Change default --prefix to /usr.\n\nattr-2.4.0 (26 February 2003)\n",
                      "markdown": "`attr-2.4.1 (27 March 2003)\n\t- Cleanups to the build process, in particular the automatic\n\t  rpm package generation Makefile and spec file template.\n\t- Makepkgs script can now propagate failures back from make.\n\t- Change default --prefix to /usr.\n\nattr-2.4.0 (26 February 2003)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/CHANGES"
                },
                "region": {
                  "startLine": 190,
                  "startColumn": 2,
                  "endLine": 190,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\nattr-2.4.1 (27 March 2003)\n\t- Cleanups to the build process, in particular the automatic\n\t  rpm package generation Makefile and spec file template.\n\t- Makepkgs script can now propagate failures back from make.\n\t- Change default --prefix to /usr.\n\n",
                    "rendered": {
                      "text": "\nattr-2.4.1 (27 March 2003)\n\t- Cleanups to the build process, in particular the automatic\n\t  rpm package generation Makefile and spec file template.\n\t- Makepkgs script can now propagate failures back from make.\n\t- Change default --prefix to /usr.\n\n",
                      "markdown": "`\nattr-2.4.1 (27 March 2003)\n\t- Cleanups to the build process, in particular the automatic\n\t  rpm package generation Makefile and spec file template.\n\t- Makepkgs script can now propagate failures back from make.\n\t- Change default --prefix to /usr.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/doc/CHANGES"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 8,
                  "endLine": 79,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\t  Thanks to Jakub Bogusz <qboosh@pld-linux.org> for this.\n\t- Initial Swedish Translation, from the Debian translators.\n\t  Thanks to Daniel Nylander <yeager@lidkoping.net> for this.\n\t- Fixed rpm specfile with respect to INSTALL_{USER,GROUP}.\n\t- Fixed a couple of double frees in libattr attr copy\n\t  routines, thanks to Andreas.\n\n",
                    "rendered": {
                      "text": "\t  Thanks to Jakub Bogusz <qboosh@pld-linux.org> for this.\n\t- Initial Swedish Translation, from the Debian translators.\n\t  Thanks to Daniel Nylander <yeager@lidkoping.net> for this.\n\t- Fixed rpm specfile with respect to INSTALL_{USER,GROUP}.\n\t- Fixed a couple of double frees in libattr attr copy\n\t  routines, thanks to Andreas.\n\n",
                      "markdown": "`\t  Thanks to Jakub Bogusz <qboosh@pld-linux.org> for this.\n\t- Initial Swedish Translation, from the Debian translators.\n\t  Thanks to Daniel Nylander <yeager@lidkoping.net> for this.\n\t- Fixed rpm specfile with respect to INSTALL_{USER,GROUP}.\n\t- Fixed a couple of double frees in libattr attr copy\n\t  routines, thanks to Andreas.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/m4/visibility_hidden.m4"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 10,
                  "endLine": 26,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\t\t  if ${CC-cc} -Werror -S conftest.c -o conftest.s \\\n\t\t\t>/dev/null 2>&1; then\n\t\t    if grep '\\.hidden.*foo' conftest.s >/dev/null; then\n\t\t      if grep '\\.protected.*bar' conftest.s >/dev/null; then\n\t\t\tlibc_cv_visibility_attribute=yes\n\t\t      fi\n\t\t    fi\n",
                    "rendered": {
                      "text": "\t\t  if ${CC-cc} -Werror -S conftest.c -o conftest.s \\\n\t\t\t>/dev/null 2>&1; then\n\t\t    if grep '\\.hidden.*foo' conftest.s >/dev/null; then\n\t\t      if grep '\\.protected.*bar' conftest.s >/dev/null; then\n\t\t\tlibc_cv_visibility_attribute=yes\n\t\t      fi\n\t\t    fi\n",
                      "markdown": "`\t\t  if ${CC-cc} -Werror -S conftest.c -o conftest.s \\\n\t\t\t>/dev/null 2>&1; then\n\t\t    if grep '\\.hidden.*foo' conftest.s >/dev/null; then\n\t\t      if grep '\\.protected.*bar' conftest.s >/dev/null; then\n\t\t\tlibc_cv_visibility_attribute=yes\n\t\t      fi\n\t\t    fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/m4/visibility_hidden.m4"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 8,
                  "endLine": 25,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\t\t  libc_cv_visibility_attribute=no\n\t\t  if ${CC-cc} -Werror -S conftest.c -o conftest.s \\\n\t\t\t>/dev/null 2>&1; then\n\t\t    if grep '\\.hidden.*foo' conftest.s >/dev/null; then\n\t\t      if grep '\\.protected.*bar' conftest.s >/dev/null; then\n\t\t\tlibc_cv_visibility_attribute=yes\n\t\t      fi\n",
                    "rendered": {
                      "text": "\t\t  libc_cv_visibility_attribute=no\n\t\t  if ${CC-cc} -Werror -S conftest.c -o conftest.s \\\n\t\t\t>/dev/null 2>&1; then\n\t\t    if grep '\\.hidden.*foo' conftest.s >/dev/null; then\n\t\t      if grep '\\.protected.*bar' conftest.s >/dev/null; then\n\t\t\tlibc_cv_visibility_attribute=yes\n\t\t      fi\n",
                      "markdown": "`\t\t  libc_cv_visibility_attribute=no\n\t\t  if ${CC-cc} -Werror -S conftest.c -o conftest.s \\\n\t\t\t>/dev/null 2>&1; then\n\t\t    if grep '\\.hidden.*foo' conftest.s >/dev/null; then\n\t\t      if grep '\\.protected.*bar' conftest.s >/dev/null; then\n\t\t\tlibc_cv_visibility_attribute=yes\n\t\t      fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/test/root/getfattr.test"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 2,
                  "endLine": 72,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nMake sure we recurse into sub-directories:\n\t$ mkdir sub\n\t$ mv f l sub\n\t$ getfattr -m- -Rd . | sort-getfattr-output\n\t> # file: sub/f\n\t> user.test=\"test\"\n",
                    "rendered": {
                      "text": "\nMake sure we recurse into sub-directories:\n\t$ mkdir sub\n\t$ mv f l sub\n\t$ getfattr -m- -Rd . | sort-getfattr-output\n\t> # file: sub/f\n\t> user.test=\"test\"\n",
                      "markdown": "`\nMake sure we recurse into sub-directories:\n\t$ mkdir sub\n\t$ mv f l sub\n\t$ getfattr -m- -Rd . | sort-getfattr-output\n\t> # file: sub/f\n\t> user.test=\"test\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/test/root/getfattr.test"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 27,
                  "endLine": 31,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\t> trusted.test=\"test\"\n\t>\n\nDo the same for symlinks we find in a directory hierarchy:\n\t$ getfattr -m- -Rd . | sort-getfattr-output\n\t> # file: f\n\t> user.test=\"test\"\n",
                    "rendered": {
                      "text": "\t> trusted.test=\"test\"\n\t>\n\nDo the same for symlinks we find in a directory hierarchy:\n\t$ getfattr -m- -Rd . | sort-getfattr-output\n\t> # file: f\n\t> user.test=\"test\"\n",
                      "markdown": "`\t> trusted.test=\"test\"\n\t>\n\nDo the same for symlinks we find in a directory hierarchy:\n\t$ getfattr -m- -Rd . | sort-getfattr-output\n\t> # file: f\n\t> user.test=\"test\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/test/attr.test"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 18,
                  "endLine": 77,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t> user.name3=0xdeface\n\t> \n\t\n\t$ getfattr -d -e base64 f\n\t> # file: f\n\t> user.name=0sur4=\n\t> user.name2=0s3q2+7w==\n",
                    "rendered": {
                      "text": "\t> user.name3=0xdeface\n\t> \n\t\n\t$ getfattr -d -e base64 f\n\t> # file: f\n\t> user.name=0sur4=\n\t> user.name2=0s3q2+7w==\n",
                      "markdown": "`\t> user.name3=0xdeface\n\t> \n\t\n\t$ getfattr -d -e base64 f\n\t> # file: f\n\t> user.name=0sur4=\n\t> user.name2=0s3q2+7w==\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/test/attr.test"
                },
                "region": {
                  "startLine": 397,
                  "startColumn": 2,
                  "endLine": 397,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nTest for large-file support\n\n\t$ dd bs=65536 seek=32768 if=/dev/null of=large-file 2>/dev/null ||:\n\t$ sh -c 'if test -f large-file; then getfattr large-file; fi'\n\t$ rm large-file\n",
                    "rendered": {
                      "text": "\nTest for large-file support\n\n\t$ dd bs=65536 seek=32768 if=/dev/null of=large-file 2>/dev/null ||:\n\t$ sh -c 'if test -f large-file; then getfattr large-file; fi'\n\t$ rm large-file\n",
                      "markdown": "`\nTest for large-file support\n\n\t$ dd bs=65536 seek=32768 if=/dev/null of=large-file 2>/dev/null ||:\n\t$ sh -c 'if test -f large-file; then getfattr large-file; fi'\n\t$ rm large-file\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/test/attr.test"
                },
                "region": {
                  "startLine": 299,
                  "startColumn": 40,
                  "endLine": 299,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\t> user.a\n\t>\n\n\t$ getfattr -h -P -R -m '.' -e hex 1/2 | grep -v selinux | sort-getfattr-output\n\t> # file: 1/2\n\t> user.9\n\t> user.a\n",
                    "rendered": {
                      "text": "\t> user.a\n\t>\n\n\t$ getfattr -h -P -R -m '.' -e hex 1/2 | grep -v selinux | sort-getfattr-output\n\t> # file: 1/2\n\t> user.9\n\t> user.a\n",
                      "markdown": "`\t> user.a\n\t>\n\n\t$ getfattr -h -P -R -m '.' -e hex 1/2 | grep -v selinux | sort-getfattr-output\n\t> # file: 1/2\n\t> user.9\n\t> user.a\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/test/attr.test"
                },
                "region": {
                  "startLine": 285,
                  "startColumn": 38,
                  "endLine": 285,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t$ setfattr -n \"user.9\" 1/2/3\n\t$ setfattr -n \"user.a\" 1/2/3\n\n\t$ getfattr -h -L -R -m '.' -e hex 1 | grep -v selinux | sort-getfattr-output\n\t> # file: 1\n\t> user.9\n\t> user.a\n",
                    "rendered": {
                      "text": "\t$ setfattr -n \"user.9\" 1/2/3\n\t$ setfattr -n \"user.a\" 1/2/3\n\n\t$ getfattr -h -L -R -m '.' -e hex 1 | grep -v selinux | sort-getfattr-output\n\t> # file: 1\n\t> user.9\n\t> user.a\n",
                      "markdown": "`\t$ setfattr -n \"user.9\" 1/2/3\n\t$ setfattr -n \"user.a\" 1/2/3\n\n\t$ getfattr -h -L -R -m '.' -e hex 1 | grep -v selinux | sort-getfattr-output\n\t> # file: 1\n\t> user.9\n\t> user.a\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/test/attr.test"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 17,
                  "endLine": 77,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t> user.name3=0xdeface\n\t> \n\t\n\t$ getfattr -d -e base64 f\n\t> # file: f\n\t> user.name=0sur4=\n\t> user.name2=0s3q2+7w==\n",
                    "rendered": {
                      "text": "\t> user.name3=0xdeface\n\t> \n\t\n\t$ getfattr -d -e base64 f\n\t> # file: f\n\t> user.name=0sur4=\n\t> user.name2=0s3q2+7w==\n",
                      "markdown": "`\t> user.name3=0xdeface\n\t> \n\t\n\t$ getfattr -d -e base64 f\n\t> # file: f\n\t> user.name=0sur4=\n\t> user.name2=0s3q2+7w==\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/test/attr.test"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 33,
                  "endLine": 3,
                  "endColumn": 41,
                  "snippet": {
                    "text": "Tests for extended attributes on file systems.\n\nExecute this test using the `run' script in this directory:\n\n\trun attr.text\n\n",
                    "rendered": {
                      "text": "Tests for extended attributes on file systems.\n\nExecute this test using the `run' script in this directory:\n\n\trun attr.text\n\n",
                      "markdown": "`Tests for extended attributes on file systems.\n\nExecute this test using the `run' script in this directory:\n\n\trun attr.text\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/test/sort-getfattr-output"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 18,
                  "endLine": 4,
                  "endColumn": 24,
                  "snippet": {
                    "text": "#! /usr/bin/perl -w\n\nundef $/;\nprint join(\"\\n\\n\", sort split(/\\n\\n/, <>)), \"\\n\\n\";\n",
                    "rendered": {
                      "text": "#! /usr/bin/perl -w\n\nundef $/;\nprint join(\"\\n\\n\", sort split(/\\n\\n/, <>)), \"\\n\\n\";\n",
                      "markdown": "`#! /usr/bin/perl -w\n\nundef $/;\nprint join(\"\\n\\n\", sort split(/\\n\\n/, <>)), \"\\n\\n\";\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/po/sv.po"
                },
                "region": {
                  "startLine": 144,
                  "startColumn": 3,
                  "endLine": 144,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\"  -n, --name=namn         h�mta angivet ut�kat attributv�rde\\n\"\n\"  -d, --dump              h�mta alla ut�kade attributv�rden\\n\"\n\"  -e, --encoding=...      koda v�rden (som \\\"text\\\", \\\"hex\\\" eller \"\n\"\\\"base64\\\")\\n\"\n\"      --match=m�nster     h�mta endast attribut med namn som matchar \"\n\"m�nster\\n\"\n\"      --only-values       skriv endast ut v�rden\\n\"\n",
                    "rendered": {
                      "text": "\"  -n, --name=namn         h�mta angivet ut�kat attributv�rde\\n\"\n\"  -d, --dump              h�mta alla ut�kade attributv�rden\\n\"\n\"  -e, --encoding=...      koda v�rden (som \\\"text\\\", \\\"hex\\\" eller \"\n\"\\\"base64\\\")\\n\"\n\"      --match=m�nster     h�mta endast attribut med namn som matchar \"\n\"m�nster\\n\"\n\"      --only-values       skriv endast ut v�rden\\n\"\n",
                      "markdown": "`\"  -n, --name=namn         h�mta angivet ut�kat attributv�rde\\n\"\n\"  -d, --dump              h�mta alla ut�kade attributv�rden\\n\"\n\"  -e, --encoding=...      koda v�rden (som \\\"text\\\", \\\"hex\\\" eller \"\n\"\\\"base64\\\")\\n\"\n\"      --match=m�nster     h�mta endast attribut med namn som matchar \"\n\"m�nster\\n\"\n\"      --only-values       skriv endast ut v�rden\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/po/sv.po"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 63,
                  "endLine": 129,
                  "endColumn": 69,
                  "snippet": {
                    "text": "msgid \"\"\n\"  -n, --name=name         get the named extended attribute value\\n\"\n\"  -d, --dump              get all extended attribute values\\n\"\n\"  -e, --encoding=...      encode values (as 'text', 'hex' or 'base64')\\n\"\n\"      --match=pattern     only get attributes with names matching pattern\\n\"\n\"      --only-values       print the bare values only\\n\"\n\"  -h, --no-dereference    do not dereference symbolic links\\n\"\n",
                    "rendered": {
                      "text": "msgid \"\"\n\"  -n, --name=name         get the named extended attribute value\\n\"\n\"  -d, --dump              get all extended attribute values\\n\"\n\"  -e, --encoding=...      encode values (as 'text', 'hex' or 'base64')\\n\"\n\"      --match=pattern     only get attributes with names matching pattern\\n\"\n\"      --only-values       print the bare values only\\n\"\n\"  -h, --no-dereference    do not dereference symbolic links\\n\"\n",
                      "markdown": "`msgid \"\"\n\"  -n, --name=name         get the named extended attribute value\\n\"\n\"  -d, --dump              get all extended attribute values\\n\"\n\"  -e, --encoding=...      encode values (as 'text', 'hex' or 'base64')\\n\"\n\"      --match=pattern     only get attributes with names matching pattern\\n\"\n\"      --only-values       print the bare values only\\n\"\n\"  -h, --no-dereference    do not dereference symbolic links\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/po/LINGUAS"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 17,
                  "endLine": 1,
                  "endColumn": 21,
                  "snippet": {
                    "text": "cs de es fr gl ka nl pl sv\nen@boldquot\nen@quot\n",
                    "rendered": {
                      "text": "cs de es fr gl ka nl pl sv\nen@boldquot\nen@quot\n",
                      "markdown": "`cs de es fr gl ka nl pl sv\nen@boldquot\nen@quot\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/po/de.po"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 66,
                  "endLine": 145,
                  "endColumn": 72,
                  "snippet": {
                    "text": "msgstr \"\"\n\"  -n, --name=name         Das angegebene erweiterte Attribut lesen\\n\"\n\"  -d, --dump              Alle erweiterten Attribute lesen\\n\"\n\"  -e, --encoding=...      Wert codieren (als 'text', 'hex' oder 'base64')\\n\"\n\"      --match=muster      Nur Attribute, die mit muster übereinstimmen\\n\"\n\"      --only-values       Die Attributwerte ohne Codierung ausgeben\\n\"\n\"  -h, --no-dereference    Symbolische Links nicht dereferenzieren\\n\"\n",
                    "rendered": {
                      "text": "msgstr \"\"\n\"  -n, --name=name         Das angegebene erweiterte Attribut lesen\\n\"\n\"  -d, --dump              Alle erweiterten Attribute lesen\\n\"\n\"  -e, --encoding=...      Wert codieren (als 'text', 'hex' oder 'base64')\\n\"\n\"      --match=muster      Nur Attribute, die mit muster übereinstimmen\\n\"\n\"      --only-values       Die Attributwerte ohne Codierung ausgeben\\n\"\n\"  -h, --no-dereference    Symbolische Links nicht dereferenzieren\\n\"\n",
                      "markdown": "`msgstr \"\"\n\"  -n, --name=name         Das angegebene erweiterte Attribut lesen\\n\"\n\"  -d, --dump              Alle erweiterten Attribute lesen\\n\"\n\"  -e, --encoding=...      Wert codieren (als 'text', 'hex' oder 'base64')\\n\"\n\"      --match=muster      Nur Attribute, die mit muster übereinstimmen\\n\"\n\"      --only-values       Die Attributwerte ohne Codierung ausgeben\\n\"\n\"  -h, --no-dereference    Symbolische Links nicht dereferenzieren\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/po/de.po"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 63,
                  "endLine": 131,
                  "endColumn": 69,
                  "snippet": {
                    "text": "msgid \"\"\n\"  -n, --name=name         get the named extended attribute value\\n\"\n\"  -d, --dump              get all extended attribute values\\n\"\n\"  -e, --encoding=...      encode values (as 'text', 'hex' or 'base64')\\n\"\n\"      --match=pattern     only get attributes with names matching pattern\\n\"\n\"      --only-values       print the bare values only\\n\"\n\"  -h, --no-dereference    do not dereference symbolic links\\n\"\n",
                    "rendered": {
                      "text": "msgid \"\"\n\"  -n, --name=name         get the named extended attribute value\\n\"\n\"  -d, --dump              get all extended attribute values\\n\"\n\"  -e, --encoding=...      encode values (as 'text', 'hex' or 'base64')\\n\"\n\"      --match=pattern     only get attributes with names matching pattern\\n\"\n\"      --only-values       print the bare values only\\n\"\n\"  -h, --no-dereference    do not dereference symbolic links\\n\"\n",
                      "markdown": "`msgid \"\"\n\"  -n, --name=name         get the named extended attribute value\\n\"\n\"  -d, --dump              get all extended attribute values\\n\"\n\"  -e, --encoding=...      encode values (as 'text', 'hex' or 'base64')\\n\"\n\"      --match=pattern     only get attributes with names matching pattern\\n\"\n\"      --only-values       print the bare values only\\n\"\n\"  -h, --no-dereference    do not dereference symbolic links\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/po/Makevars"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 66,
                  "endLine": 29,
                  "endColumn": 72,
                  "snippet": {
                    "text": "#   in the GNU gettext documentation, section 'Preparing Strings'.\n# - Strings which use unclear terms or require additional context to be\n#   understood.\n# - Strings which make invalid assumptions about notation of date, time or\n#   money.\n# - Pluralisation problems.\n# - Incorrect English spelling.\n",
                    "rendered": {
                      "text": "#   in the GNU gettext documentation, section 'Preparing Strings'.\n# - Strings which use unclear terms or require additional context to be\n#   understood.\n# - Strings which make invalid assumptions about notation of date, time or\n#   money.\n# - Pluralisation problems.\n# - Incorrect English spelling.\n",
                      "markdown": "`#   in the GNU gettext documentation, section 'Preparing Strings'.\n# - Strings which use unclear terms or require additional context to be\n#   understood.\n# - Strings which make invalid assumptions about notation of date, time or\n#   money.\n# - Pluralisation problems.\n# - Incorrect English spelling.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/man/man3/attr_list.3"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 4,
                  "endLine": 64,
                  "endColumn": 8,
                  "snippet": {
                    "text": "The\n.I buffer\nmust be sufficiently large to hold the appropriate data structures\nplus at least one maximally sized attribute name,\nbut cannot be more than ATTR_MAX_VALUELEN (currently 64KB) bytes in length.\n.PP\nThe contents of an \\f4attrlist_t\\fP structure include the following members:\n",
                    "rendered": {
                      "text": "The\n.I buffer\nmust be sufficiently large to hold the appropriate data structures\nplus at least one maximally sized attribute name,\nbut cannot be more than ATTR_MAX_VALUELEN (currently 64KB) bytes in length.\n.PP\nThe contents of an \\f4attrlist_t\\fP structure include the following members:\n",
                      "markdown": "`The\n.I buffer\nmust be sufficiently large to hold the appropriate data structures\nplus at least one maximally sized attribute name,\nbut cannot be more than ATTR_MAX_VALUELEN (currently 64KB) bytes in length.\n.PP\nThe contents of an \\f4attrlist_t\\fP structure include the following members:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/man/man3/attr_list.3"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 42,
                  "endLine": 53,
                  "endColumn": 46,
                  "snippet": {
                    "text": "refers to the file descriptor associated with a file.\nThe\n.I buffer\nwill be filled with a structure describing at least a portion of the\nattributes associated with the given filesystem object.\n.I Buffer\nwill be overwritten with an \\f4attrlist_t\\fP structure\n",
                    "rendered": {
                      "text": "refers to the file descriptor associated with a file.\nThe\n.I buffer\nwill be filled with a structure describing at least a portion of the\nattributes associated with the given filesystem object.\n.I Buffer\nwill be overwritten with an \\f4attrlist_t\\fP structure\n",
                      "markdown": "`refers to the file descriptor associated with a file.\nThe\n.I buffer\nwill be filled with a structure describing at least a portion of the\nattributes associated with the given filesystem object.\n.I Buffer\nwill be overwritten with an \\f4attrlist_t\\fP structure\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/libattr/Makemodule.am"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 15,
                  "endLine": 6,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# No other library exports version info, otherwise we'd have to add\n# \"libattr_\" prefix to all these variables.\nLT_CURRENT = 2\n# The configure script will set this for us automatically.\n#LT_REVISION =\nLT_AGE = 1\nLTVERSION = $(LT_CURRENT):$(LT_REVISION):$(LT_AGE)\n",
                    "rendered": {
                      "text": "# No other library exports version info, otherwise we'd have to add\n# \"libattr_\" prefix to all these variables.\nLT_CURRENT = 2\n# The configure script will set this for us automatically.\n#LT_REVISION =\nLT_AGE = 1\nLTVERSION = $(LT_CURRENT):$(LT_REVISION):$(LT_AGE)\n",
                      "markdown": "`# No other library exports version info, otherwise we'd have to add\n# \"libattr_\" prefix to all these variables.\nLT_CURRENT = 2\n# The configure script will set this for us automatically.\n#LT_REVISION =\nLT_AGE = 1\nLTVERSION = $(LT_CURRENT):$(LT_REVISION):$(LT_AGE)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/test/run"
                },
                "region": {
                  "startLine": 279,
                  "startColumn": 5,
                  "endLine": 279,
                  "endColumn": 19,
                  "snippet": {
                    "text": "    if (!chdir $prog->[1]) {\n      return [ \"chdir: $prog->[1]: $!\\n\" ];\n    }\n    $ENV{PWD} = getcwd;\n    return [];\n  } elsif ($prog->[0] eq \"su\") {\n    return su($prog->[1]);\n",
                    "rendered": {
                      "text": "    if (!chdir $prog->[1]) {\n      return [ \"chdir: $prog->[1]: $!\\n\" ];\n    }\n    $ENV{PWD} = getcwd;\n    return [];\n  } elsif ($prog->[0] eq \"su\") {\n    return su($prog->[1]);\n",
                      "markdown": "`    if (!chdir $prog->[1]) {\n      return [ \"chdir: $prog->[1]: $!\\n\" ];\n    }\n    $ENV{PWD} = getcwd;\n    return [];\n  } elsif ($prog->[0] eq \"su\") {\n    return su($prog->[1]);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/test/run"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 1,
                  "endLine": 80,
                  "endColumn": 20,
                  "snippet": {
                    "text": "# Add the parent dir to PATH so we can find the compiled tools.\n$ENV{\"PATH\"} = dirname(abs_path(dirname($0))) . \":$ENV{PATH}\";\n$ENV{\"TUSER\"} = getpwuid($>);\n$ENV{\"TGROUP\"} = getgrgid($));\n\nopen(TEST_FILE, $ARGV[0]);\n\n",
                    "rendered": {
                      "text": "# Add the parent dir to PATH so we can find the compiled tools.\n$ENV{\"PATH\"} = dirname(abs_path(dirname($0))) . \":$ENV{PATH}\";\n$ENV{\"TUSER\"} = getpwuid($>);\n$ENV{\"TGROUP\"} = getgrgid($));\n\nopen(TEST_FILE, $ARGV[0]);\n\n",
                      "markdown": "`# Add the parent dir to PATH so we can find the compiled tools.\n$ENV{\"PATH\"} = dirname(abs_path(dirname($0))) . \":$ENV{PATH}\";\n$ENV{\"TUSER\"} = getpwuid($>);\n$ENV{\"TGROUP\"} = getgrgid($));\n\nopen(TEST_FILE, $ARGV[0]);\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/test/run"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 1,
                  "endLine": 79,
                  "endColumn": 19,
                  "snippet": {
                    "text": "$ENV{\"PATH\"} = $ENV{\"TESTDIR\"} . \":$ENV{PATH}\";\n# Add the parent dir to PATH so we can find the compiled tools.\n$ENV{\"PATH\"} = dirname(abs_path(dirname($0))) . \":$ENV{PATH}\";\n$ENV{\"TUSER\"} = getpwuid($>);\n$ENV{\"TGROUP\"} = getgrgid($));\n\nopen(TEST_FILE, $ARGV[0]);\n",
                    "rendered": {
                      "text": "$ENV{\"PATH\"} = $ENV{\"TESTDIR\"} . \":$ENV{PATH}\";\n# Add the parent dir to PATH so we can find the compiled tools.\n$ENV{\"PATH\"} = dirname(abs_path(dirname($0))) . \":$ENV{PATH}\";\n$ENV{\"TUSER\"} = getpwuid($>);\n$ENV{\"TGROUP\"} = getgrgid($));\n\nopen(TEST_FILE, $ARGV[0]);\n",
                      "markdown": "`$ENV{\"PATH\"} = $ENV{\"TESTDIR\"} . \":$ENV{PATH}\";\n# Add the parent dir to PATH so we can find the compiled tools.\n$ENV{\"PATH\"} = dirname(abs_path(dirname($0))) . \":$ENV{PATH}\";\n$ENV{\"TUSER\"} = getpwuid($>);\n$ENV{\"TGROUP\"} = getgrgid($));\n\nopen(TEST_FILE, $ARGV[0]);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/test/run"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 10,
                  "endLine": 50,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# - distinguish stdout and stderr output\n# - add environment variable like assignments\n# - run up to a specific line\n# - resume at a specific line\n#\n\nuse strict;\n",
                    "rendered": {
                      "text": "# - distinguish stdout and stderr output\n# - add environment variable like assignments\n# - run up to a specific line\n# - resume at a specific line\n#\n\nuse strict;\n",
                      "markdown": "`# - distinguish stdout and stderr output\n# - add environment variable like assignments\n# - run up to a specific line\n# - resume at a specific line\n#\n\nuse strict;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/test/run"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 38,
                  "endLine": 11,
                  "endColumn": 42,
                  "snippet": {
                    "text": "# are met:\n# 1. Redistributions of source code must retain the above copyright\n#    notice, this list of conditions, and the following disclaimer,\n#    without modification, immediately at the beginning of the file.\n# 2. The name of the author may not be used to endorse or promote products\n#    derived from this software without specific prior written permission.\n#\n",
                    "rendered": {
                      "text": "# are met:\n# 1. Redistributions of source code must retain the above copyright\n#    notice, this list of conditions, and the following disclaimer,\n#    without modification, immediately at the beginning of the file.\n# 2. The name of the author may not be used to endorse or promote products\n#    derived from this software without specific prior written permission.\n#\n",
                      "markdown": "`# are met:\n# 1. Redistributions of source code must retain the above copyright\n#    notice, this list of conditions, and the following disclaimer,\n#    without modification, immediately at the beginning of the file.\n# 2. The name of the author may not be used to endorse or promote products\n#    derived from this software without specific prior written permission.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/test/run"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 38,
                  "endLine": 77,
                  "endColumn": 44,
                  "snippet": {
                    "text": "$ENV{\"TESTDIR\"} = abs_path(dirname($0));\n# Add the current dir to PATH so we can find sort-getfattr-output and such.\n$ENV{\"PATH\"} = $ENV{\"TESTDIR\"} . \":$ENV{PATH}\";\n# Add the parent dir to PATH so we can find the compiled tools.\n$ENV{\"PATH\"} = dirname(abs_path(dirname($0))) . \":$ENV{PATH}\";\n$ENV{\"TUSER\"} = getpwuid($>);\n$ENV{\"TGROUP\"} = getgrgid($));\n",
                    "rendered": {
                      "text": "$ENV{\"TESTDIR\"} = abs_path(dirname($0));\n# Add the current dir to PATH so we can find sort-getfattr-output and such.\n$ENV{\"PATH\"} = $ENV{\"TESTDIR\"} . \":$ENV{PATH}\";\n# Add the parent dir to PATH so we can find the compiled tools.\n$ENV{\"PATH\"} = dirname(abs_path(dirname($0))) . \":$ENV{PATH}\";\n$ENV{\"TUSER\"} = getpwuid($>);\n$ENV{\"TGROUP\"} = getgrgid($));\n",
                      "markdown": "`$ENV{\"TESTDIR\"} = abs_path(dirname($0));\n# Add the current dir to PATH so we can find sort-getfattr-output and such.\n$ENV{\"PATH\"} = $ENV{\"TESTDIR\"} . \":$ENV{PATH}\";\n# Add the parent dir to PATH so we can find the compiled tools.\n$ENV{\"PATH\"} = dirname(abs_path(dirname($0))) . \":$ENV{PATH}\";\n$ENV{\"TUSER\"} = getpwuid($>);\n$ENV{\"TGROUP\"} = getgrgid($));\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/test/run"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 39,
                  "endLine": 75,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\n# Export this dir to tests so they can access data files if needed.\n$ENV{\"TESTDIR\"} = abs_path(dirname($0));\n# Add the current dir to PATH so we can find sort-getfattr-output and such.\n$ENV{\"PATH\"} = $ENV{\"TESTDIR\"} . \":$ENV{PATH}\";\n# Add the parent dir to PATH so we can find the compiled tools.\n$ENV{\"PATH\"} = dirname(abs_path(dirname($0))) . \":$ENV{PATH}\";\n",
                    "rendered": {
                      "text": "\n# Export this dir to tests so they can access data files if needed.\n$ENV{\"TESTDIR\"} = abs_path(dirname($0));\n# Add the current dir to PATH so we can find sort-getfattr-output and such.\n$ENV{\"PATH\"} = $ENV{\"TESTDIR\"} . \":$ENV{PATH}\";\n# Add the parent dir to PATH so we can find the compiled tools.\n$ENV{\"PATH\"} = dirname(abs_path(dirname($0))) . \":$ENV{PATH}\";\n",
                      "markdown": "`\n# Export this dir to tests so they can access data files if needed.\n$ENV{\"TESTDIR\"} = abs_path(dirname($0));\n# Add the current dir to PATH so we can find sort-getfattr-output and such.\n$ENV{\"PATH\"} = $ENV{\"TESTDIR\"} . \":$ENV{PATH}\";\n# Add the parent dir to PATH so we can find the compiled tools.\n$ENV{\"PATH\"} = dirname(abs_path(dirname($0))) . \":$ENV{PATH}\";\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/po/ka.po"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 106,
                  "endLine": 157,
                  "endColumn": 112,
                  "snippet": {
                    "text": "msgstr \"\"\n\"  -n, --name=name         მითითებული სახელის მქონე გაფართოებული ატრიბუტის მნიშვნელობის მიღება\\n\"\n\"  -d, --dump              ყველა გაფრთოებული ატრიბუტის მნიშვნელობის მიღება\\n\"\n\"  -e, --encoding=...      მნიშვნელბების კოდირება (როგორც 'text'(ტექსტი), 'hex'(თევსმეტობითი) ან 'base64'(base64-ით კოდირებული)\\n\"\n\"      --match=pattern     მხოლოდ მითითებულ შაბლონს რომ ემთხვევა, იმ ატრიბუტების გამოტანა\\n\"\n\"      --only-values       მხოლოდ მნიშვნელობების გამოტანა\\n\"\n\"  -h, --no-dereference    სიმბმბულების არ-მიყოლა\\n\"\n",
                    "rendered": {
                      "text": "msgstr \"\"\n\"  -n, --name=name         მითითებული სახელის მქონე გაფართოებული ატრიბუტის მნიშვნელობის მიღება\\n\"\n\"  -d, --dump              ყველა გაფრთოებული ატრიბუტის მნიშვნელობის მიღება\\n\"\n\"  -e, --encoding=...      მნიშვნელბების კოდირება (როგორც 'text'(ტექსტი), 'hex'(თევსმეტობითი) ან 'base64'(base64-ით კოდირებული)\\n\"\n\"      --match=pattern     მხოლოდ მითითებულ შაბლონს რომ ემთხვევა, იმ ატრიბუტების გამოტანა\\n\"\n\"      --only-values       მხოლოდ მნიშვნელობების გამოტანა\\n\"\n\"  -h, --no-dereference    სიმბმბულების არ-მიყოლა\\n\"\n",
                      "markdown": "`msgstr \"\"\n\"  -n, --name=name         მითითებული სახელის მქონე გაფართოებული ატრიბუტის მნიშვნელობის მიღება\\n\"\n\"  -d, --dump              ყველა გაფრთოებული ატრიბუტის მნიშვნელობის მიღება\\n\"\n\"  -e, --encoding=...      მნიშვნელბების კოდირება (როგორც 'text'(ტექსტი), 'hex'(თევსმეტობითი) ან 'base64'(base64-ით კოდირებული)\\n\"\n\"      --match=pattern     მხოლოდ მითითებულ შაბლონს რომ ემთხვევა, იმ ატრიბუტების გამოტანა\\n\"\n\"      --only-values       მხოლოდ მნიშვნელობების გამოტანა\\n\"\n\"  -h, --no-dereference    სიმბმბულების არ-მიყოლა\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/po/ka.po"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 98,
                  "endLine": 157,
                  "endColumn": 104,
                  "snippet": {
                    "text": "msgstr \"\"\n\"  -n, --name=name         მითითებული სახელის მქონე გაფართოებული ატრიბუტის მნიშვნელობის მიღება\\n\"\n\"  -d, --dump              ყველა გაფრთოებული ატრიბუტის მნიშვნელობის მიღება\\n\"\n\"  -e, --encoding=...      მნიშვნელბების კოდირება (როგორც 'text'(ტექსტი), 'hex'(თევსმეტობითი) ან 'base64'(base64-ით კოდირებული)\\n\"\n\"      --match=pattern     მხოლოდ მითითებულ შაბლონს რომ ემთხვევა, იმ ატრიბუტების გამოტანა\\n\"\n\"      --only-values       მხოლოდ მნიშვნელობების გამოტანა\\n\"\n\"  -h, --no-dereference    სიმბმბულების არ-მიყოლა\\n\"\n",
                    "rendered": {
                      "text": "msgstr \"\"\n\"  -n, --name=name         მითითებული სახელის მქონე გაფართოებული ატრიბუტის მნიშვნელობის მიღება\\n\"\n\"  -d, --dump              ყველა გაფრთოებული ატრიბუტის მნიშვნელობის მიღება\\n\"\n\"  -e, --encoding=...      მნიშვნელბების კოდირება (როგორც 'text'(ტექსტი), 'hex'(თევსმეტობითი) ან 'base64'(base64-ით კოდირებული)\\n\"\n\"      --match=pattern     მხოლოდ მითითებულ შაბლონს რომ ემთხვევა, იმ ატრიბუტების გამოტანა\\n\"\n\"      --only-values       მხოლოდ მნიშვნელობების გამოტანა\\n\"\n\"  -h, --no-dereference    სიმბმბულების არ-მიყოლა\\n\"\n",
                      "markdown": "`msgstr \"\"\n\"  -n, --name=name         მითითებული სახელის მქონე გაფართოებული ატრიბუტის მნიშვნელობის მიღება\\n\"\n\"  -d, --dump              ყველა გაფრთოებული ატრიბუტის მნიშვნელობის მიღება\\n\"\n\"  -e, --encoding=...      მნიშვნელბების კოდირება (როგორც 'text'(ტექსტი), 'hex'(თევსმეტობითი) ან 'base64'(base64-ით კოდირებული)\\n\"\n\"      --match=pattern     მხოლოდ მითითებულ შაბლონს რომ ემთხვევა, იმ ატრიბუტების გამოტანა\\n\"\n\"      --only-values       მხოლოდ მნიშვნელობების გამოტანა\\n\"\n\"  -h, --no-dereference    სიმბმბულების არ-მიყოლა\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/po/ka.po"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 63,
                  "endLine": 143,
                  "endColumn": 69,
                  "snippet": {
                    "text": "msgid \"\"\n\"  -n, --name=name         get the named extended attribute value\\n\"\n\"  -d, --dump              get all extended attribute values\\n\"\n\"  -e, --encoding=...      encode values (as 'text', 'hex' or 'base64')\\n\"\n\"      --match=pattern     only get attributes with names matching pattern\\n\"\n\"      --only-values       print the bare values only\\n\"\n\"  -h, --no-dereference    do not dereference symbolic links\\n\"\n",
                    "rendered": {
                      "text": "msgid \"\"\n\"  -n, --name=name         get the named extended attribute value\\n\"\n\"  -d, --dump              get all extended attribute values\\n\"\n\"  -e, --encoding=...      encode values (as 'text', 'hex' or 'base64')\\n\"\n\"      --match=pattern     only get attributes with names matching pattern\\n\"\n\"      --only-values       print the bare values only\\n\"\n\"  -h, --no-dereference    do not dereference symbolic links\\n\"\n",
                      "markdown": "`msgid \"\"\n\"  -n, --name=name         get the named extended attribute value\\n\"\n\"  -d, --dump              get all extended attribute values\\n\"\n\"  -e, --encoding=...      encode values (as 'text', 'hex' or 'base64')\\n\"\n\"      --match=pattern     only get attributes with names matching pattern\\n\"\n\"      --only-values       print the bare values only\\n\"\n\"  -h, --no-dereference    do not dereference symbolic links\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/po/fr.po"
                },
                "region": {
                  "startLine": 163,
                  "startColumn": 67,
                  "endLine": 163,
                  "endColumn": 73,
                  "snippet": {
                    "text": "msgstr \"\"\n\" -n, --name=nom         donner la valeur de l'attribut étendu nom\\n\"\n\" -d, --dump             donner la valeur de tous les attributs étendus\\n\"\n\" -e, --encoding=...     typer les valeurs (« text », « hex » ou « base64 »)\\n\"\n\"     --match=motif      ne prendre en compte que les attributs \"\n\"correspondants\\n\"\n\"                        au motif\\n\"\n",
                    "rendered": {
                      "text": "msgstr \"\"\n\" -n, --name=nom         donner la valeur de l'attribut étendu nom\\n\"\n\" -d, --dump             donner la valeur de tous les attributs étendus\\n\"\n\" -e, --encoding=...     typer les valeurs (« text », « hex » ou « base64 »)\\n\"\n\"     --match=motif      ne prendre en compte que les attributs \"\n\"correspondants\\n\"\n\"                        au motif\\n\"\n",
                      "markdown": "`msgstr \"\"\n\" -n, --name=nom         donner la valeur de l'attribut étendu nom\\n\"\n\" -d, --dump             donner la valeur de tous les attributs étendus\\n\"\n\" -e, --encoding=...     typer les valeurs (« text », « hex » ou « base64 »)\\n\"\n\"     --match=motif      ne prendre en compte que les attributs \"\n\"correspondants\\n\"\n\"                        au motif\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/po/fr.po"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 63,
                  "endLine": 149,
                  "endColumn": 69,
                  "snippet": {
                    "text": "msgid \"\"\n\"  -n, --name=name         get the named extended attribute value\\n\"\n\"  -d, --dump              get all extended attribute values\\n\"\n\"  -e, --encoding=...      encode values (as 'text', 'hex' or 'base64')\\n\"\n\"      --match=pattern     only get attributes with names matching pattern\\n\"\n\"      --only-values       print the bare values only\\n\"\n\"  -h, --no-dereference    do not dereference symbolic links\\n\"\n",
                    "rendered": {
                      "text": "msgid \"\"\n\"  -n, --name=name         get the named extended attribute value\\n\"\n\"  -d, --dump              get all extended attribute values\\n\"\n\"  -e, --encoding=...      encode values (as 'text', 'hex' or 'base64')\\n\"\n\"      --match=pattern     only get attributes with names matching pattern\\n\"\n\"      --only-values       print the bare values only\\n\"\n\"  -h, --no-dereference    do not dereference symbolic links\\n\"\n",
                      "markdown": "`msgid \"\"\n\"  -n, --name=name         get the named extended attribute value\\n\"\n\"  -d, --dump              get all extended attribute values\\n\"\n\"  -e, --encoding=...      encode values (as 'text', 'hex' or 'base64')\\n\"\n\"      --match=pattern     only get attributes with names matching pattern\\n\"\n\"      --only-values       print the bare values only\\n\"\n\"  -h, --no-dereference    do not dereference symbolic links\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/po/fr.po"
                },
                "region": {
                  "startLine": 135,
                  "startColumn": 66,
                  "endLine": 135,
                  "endColumn": 72,
                  "snippet": {
                    "text": "#| msgid \"\"\n#| \"  -n, --name=name         get the named extended attribute value\\n\"\n#| \"  -d, --dump              get all extended attribute values\\n\"\n#| \"  -e, --encoding=...      encode values (as 'text', 'hex' or 'base64')\\n\"\n#| \"      --match=pattern     only get attributes with names matching \"\n#| \"pattern\\n\"\n#| \"      --only-values       print the bare values only\\n\"\n",
                    "rendered": {
                      "text": "#| msgid \"\"\n#| \"  -n, --name=name         get the named extended attribute value\\n\"\n#| \"  -d, --dump              get all extended attribute values\\n\"\n#| \"  -e, --encoding=...      encode values (as 'text', 'hex' or 'base64')\\n\"\n#| \"      --match=pattern     only get attributes with names matching \"\n#| \"pattern\\n\"\n#| \"      --only-values       print the bare values only\\n\"\n",
                      "markdown": "`#| msgid \"\"\n#| \"  -n, --name=name         get the named extended attribute value\\n\"\n#| \"  -d, --dump              get all extended attribute values\\n\"\n#| \"  -e, --encoding=...      encode values (as 'text', 'hex' or 'base64')\\n\"\n#| \"      --match=pattern     only get attributes with names matching \"\n#| \"pattern\\n\"\n#| \"      --only-values       print the bare values only\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/po/fr.po"
                },
                "region": {
                  "startLine": 163,
                  "startColumn": 66,
                  "endLine": 163,
                  "endColumn": 74,
                  "snippet": {
                    "text": "msgstr \"\"\n\" -n, --name=nom         donner la valeur de l'attribut étendu nom\\n\"\n\" -d, --dump             donner la valeur de tous les attributs étendus\\n\"\n\" -e, --encoding=...     typer les valeurs (« text », « hex » ou « base64 »)\\n\"\n\"     --match=motif      ne prendre en compte que les attributs \"\n\"correspondants\\n\"\n\"                        au motif\\n\"\n",
                    "rendered": {
                      "text": "msgstr \"\"\n\" -n, --name=nom         donner la valeur de l'attribut étendu nom\\n\"\n\" -d, --dump             donner la valeur de tous les attributs étendus\\n\"\n\" -e, --encoding=...     typer les valeurs (« text », « hex » ou « base64 »)\\n\"\n\"     --match=motif      ne prendre en compte que les attributs \"\n\"correspondants\\n\"\n\"                        au motif\\n\"\n",
                      "markdown": "`msgstr \"\"\n\" -n, --name=nom         donner la valeur de l'attribut étendu nom\\n\"\n\" -d, --dump             donner la valeur de tous les attributs étendus\\n\"\n\" -e, --encoding=...     typer les valeurs (« text », « hex » ou « base64 »)\\n\"\n\"     --match=motif      ne prendre en compte que les attributs \"\n\"correspondants\\n\"\n\"                        au motif\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/po/update-potfiles"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 38,
                  "endLine": 13,
                  "snippet": {
                    "text": "\tlibmisc \\\n\ttools \\\n\t-name '*.[ch]' \\\n\t| grep -v include/config.h | LC_ALL=C sort\n) > po/POTFILES.in\n",
                    "rendered": {
                      "text": "\tlibmisc \\\n\ttools \\\n\t-name '*.[ch]' \\\n\t| grep -v include/config.h | LC_ALL=C sort\n) > po/POTFILES.in\n",
                      "markdown": "`\tlibmisc \\\n\ttools \\\n\t-name '*.[ch]' \\\n\t| grep -v include/config.h | LC_ALL=C sort\n) > po/POTFILES.in\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/po/update-potfiles"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 2,
                  "endLine": 12,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\tlibmisc \\\n\ttools \\\n\t-name '*.[ch]' \\\n\t| grep -v include/config.h | LC_ALL=C sort\n) > po/POTFILES.in\n",
                    "rendered": {
                      "text": "\tlibmisc \\\n\ttools \\\n\t-name '*.[ch]' \\\n\t| grep -v include/config.h | LC_ALL=C sort\n) > po/POTFILES.in\n",
                      "markdown": "`\tlibmisc \\\n\ttools \\\n\t-name '*.[ch]' \\\n\t| grep -v include/config.h | LC_ALL=C sort\n) > po/POTFILES.in\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/po/update-potfiles"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 4,
                  "endLine": 6,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\n(\necho \"# updated automatically by $0\"\necho\nfind \\\n\tinclude \\\n\tlibattr \\\n\tlibmisc \\\n",
                    "rendered": {
                      "text": "\n(\necho \"# updated automatically by $0\"\necho\nfind \\\n\tinclude \\\n\tlibattr \\\n\tlibmisc \\\n",
                      "markdown": "`\n(\necho \"# updated automatically by $0\"\necho\nfind \\\n\tinclude \\\n\tlibattr \\\n\tlibmisc \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/po/es.po"
                },
                "region": {
                  "startLine": 148,
                  "startColumn": 68,
                  "endLine": 148,
                  "endColumn": 74,
                  "snippet": {
                    "text": "msgstr \"\"\n\"  -n, --name=nombre       obtener el atributo extendido \\\"nombre\\\"\\n\"\n\"  -d, --dump              obtener valor de todos los atributos extendidos\\n\"\n\"  -e, --encoding=...      codificar valores (como 'text', 'hex' o 'base64')\\n\"\n\"      --match=patrón      sólo obtener atributos cuyo nombre coincida con \"\n\"\\\"patrón\\\"\\n\"\n\"      --only-values       sólo mostrar los valores en crudo\\n\"\n",
                    "rendered": {
                      "text": "msgstr \"\"\n\"  -n, --name=nombre       obtener el atributo extendido \\\"nombre\\\"\\n\"\n\"  -d, --dump              obtener valor de todos los atributos extendidos\\n\"\n\"  -e, --encoding=...      codificar valores (como 'text', 'hex' o 'base64')\\n\"\n\"      --match=patrón      sólo obtener atributos cuyo nombre coincida con \"\n\"\\\"patrón\\\"\\n\"\n\"      --only-values       sólo mostrar los valores en crudo\\n\"\n",
                      "markdown": "`msgstr \"\"\n\"  -n, --name=nombre       obtener el atributo extendido \\\"nombre\\\"\\n\"\n\"  -d, --dump              obtener valor de todos los atributos extendidos\\n\"\n\"  -e, --encoding=...      codificar valores (como 'text', 'hex' o 'base64')\\n\"\n\"      --match=patrón      sólo obtener atributos cuyo nombre coincida con \"\n\"\\\"patrón\\\"\\n\"\n\"      --only-values       sólo mostrar los valores en crudo\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/po/es.po"
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 63,
                  "endLine": 134,
                  "endColumn": 69,
                  "snippet": {
                    "text": "msgid \"\"\n\"  -n, --name=name         get the named extended attribute value\\n\"\n\"  -d, --dump              get all extended attribute values\\n\"\n\"  -e, --encoding=...      encode values (as 'text', 'hex' or 'base64')\\n\"\n\"      --match=pattern     only get attributes with names matching pattern\\n\"\n\"      --only-values       print the bare values only\\n\"\n\"  -h, --no-dereference    do not dereference symbolic links\\n\"\n",
                    "rendered": {
                      "text": "msgid \"\"\n\"  -n, --name=name         get the named extended attribute value\\n\"\n\"  -d, --dump              get all extended attribute values\\n\"\n\"  -e, --encoding=...      encode values (as 'text', 'hex' or 'base64')\\n\"\n\"      --match=pattern     only get attributes with names matching pattern\\n\"\n\"      --only-values       print the bare values only\\n\"\n\"  -h, --no-dereference    do not dereference symbolic links\\n\"\n",
                      "markdown": "`msgid \"\"\n\"  -n, --name=name         get the named extended attribute value\\n\"\n\"  -d, --dump              get all extended attribute values\\n\"\n\"  -e, --encoding=...      encode values (as 'text', 'hex' or 'base64')\\n\"\n\"      --match=pattern     only get attributes with names matching pattern\\n\"\n\"      --only-values       print the bare values only\\n\"\n\"  -h, --no-dereference    do not dereference symbolic links\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/po/cs.po"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 2,
                  "endLine": 145,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\"  -n, --name=název        zjistí hodnotu jmenovaného rozšířeného atributu\\n\"\n\"  -d, --dump              zjistí hodnoty všech rozšířených atributů\\n\"\n\"  -e, --encoding=…        zakóduje hodnotu (jako „text“, „hex“ nebo \"\n\"„base64“)\\n\"\n\"      --match=vzor        získá jen atributy, jejichž jména vyhovují vzoru\\n\"\n\"      --only-values       vypíše čistě jenom hodnoty\\n\"\n\"  -h, --no-dereference    nenásleduje symbolické odkazy\\n\"\n",
                    "rendered": {
                      "text": "\"  -n, --name=název        zjistí hodnotu jmenovaného rozšířeného atributu\\n\"\n\"  -d, --dump              zjistí hodnoty všech rozšířených atributů\\n\"\n\"  -e, --encoding=…        zakóduje hodnotu (jako „text“, „hex“ nebo \"\n\"„base64“)\\n\"\n\"      --match=vzor        získá jen atributy, jejichž jména vyhovují vzoru\\n\"\n\"      --only-values       vypíše čistě jenom hodnoty\\n\"\n\"  -h, --no-dereference    nenásleduje symbolické odkazy\\n\"\n",
                      "markdown": "`\"  -n, --name=název        zjistí hodnotu jmenovaného rozšířeného atributu\\n\"\n\"  -d, --dump              zjistí hodnoty všech rozšířených atributů\\n\"\n\"  -e, --encoding=…        zakóduje hodnotu (jako „text“, „hex“ nebo \"\n\"„base64“)\\n\"\n\"      --match=vzor        získá jen atributy, jejichž jména vyhovují vzoru\\n\"\n\"      --only-values       vypíše čistě jenom hodnoty\\n\"\n\"  -h, --no-dereference    nenásleduje symbolické odkazy\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/po/cs.po"
                },
                "region": {
                  "startLine": 130,
                  "startColumn": 63,
                  "endLine": 130,
                  "endColumn": 69,
                  "snippet": {
                    "text": "msgid \"\"\n\"  -n, --name=name         get the named extended attribute value\\n\"\n\"  -d, --dump              get all extended attribute values\\n\"\n\"  -e, --encoding=...      encode values (as 'text', 'hex' or 'base64')\\n\"\n\"      --match=pattern     only get attributes with names matching pattern\\n\"\n\"      --only-values       print the bare values only\\n\"\n\"  -h, --no-dereference    do not dereference symbolic links\\n\"\n",
                    "rendered": {
                      "text": "msgid \"\"\n\"  -n, --name=name         get the named extended attribute value\\n\"\n\"  -d, --dump              get all extended attribute values\\n\"\n\"  -e, --encoding=...      encode values (as 'text', 'hex' or 'base64')\\n\"\n\"      --match=pattern     only get attributes with names matching pattern\\n\"\n\"      --only-values       print the bare values only\\n\"\n\"  -h, --no-dereference    do not dereference symbolic links\\n\"\n",
                      "markdown": "`msgid \"\"\n\"  -n, --name=name         get the named extended attribute value\\n\"\n\"  -d, --dump              get all extended attribute values\\n\"\n\"  -e, --encoding=...      encode values (as 'text', 'hex' or 'base64')\\n\"\n\"      --match=pattern     only get attributes with names matching pattern\\n\"\n\"      --only-values       print the bare values only\\n\"\n\"  -h, --no-dereference    do not dereference symbolic links\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/man/man1/setfattr.1"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 4,
                  "endLine": 56,
                  "endColumn": 10,
                  "snippet": {
                    "text": "backslash. Any control characters can be encoded as a backslash followed by\nthree digits as its ASCII code in octal. If the given string begins with 0x or\n0X, it expresses a hexadecimal number. If the given string begins with 0s or\n0S, base64 encoding is expected.  Also see the \\-\\-encoding option of\ngetfattr(1).\n.TP\n.BR \\-x \" \\f2name\\f1, \" \\-\\-remove \"=\\f2name\\f1\"\n",
                    "rendered": {
                      "text": "backslash. Any control characters can be encoded as a backslash followed by\nthree digits as its ASCII code in octal. If the given string begins with 0x or\n0X, it expresses a hexadecimal number. If the given string begins with 0s or\n0S, base64 encoding is expected.  Also see the \\-\\-encoding option of\ngetfattr(1).\n.TP\n.BR \\-x \" \\f2name\\f1, \" \\-\\-remove \"=\\f2name\\f1\"\n",
                      "markdown": "`backslash. Any control characters can be encoded as a backslash followed by\nthree digits as its ASCII code in octal. If the given string begins with 0x or\n0X, it expresses a hexadecimal number. If the given string begins with 0s or\n0S, base64 encoding is expected.  Also see the \\-\\-encoding option of\ngetfattr(1).\n.TP\n.BR \\-x \" \\f2name\\f1, \" \\-\\-remove \"=\\f2name\\f1\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/man/man1/setfattr.1"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 14,
                  "endLine": 53,
                  "endColumn": 23,
                  "snippet": {
                    "text": "available for encoding the value.  If the given string is enclosed in double\nquotes, the inner string is treated as text. In that case, backslashes and\ndouble quotes have special meanings and need to be escaped by a preceding\nbackslash. Any control characters can be encoded as a backslash followed by\nthree digits as its ASCII code in octal. If the given string begins with 0x or\n0X, it expresses a hexadecimal number. If the given string begins with 0s or\n0S, base64 encoding is expected.  Also see the \\-\\-encoding option of\n",
                    "rendered": {
                      "text": "available for encoding the value.  If the given string is enclosed in double\nquotes, the inner string is treated as text. In that case, backslashes and\ndouble quotes have special meanings and need to be escaped by a preceding\nbackslash. Any control characters can be encoded as a backslash followed by\nthree digits as its ASCII code in octal. If the given string begins with 0x or\n0X, it expresses a hexadecimal number. If the given string begins with 0s or\n0S, base64 encoding is expected.  Also see the \\-\\-encoding option of\n",
                      "markdown": "`available for encoding the value.  If the given string is enclosed in double\nquotes, the inner string is treated as text. In that case, backslashes and\ndouble quotes have special meanings and need to be escaped by a preceding\nbackslash. Any control characters can be encoded as a backslash followed by\nthree digits as its ASCII code in octal. If the given string begins with 0x or\n0X, it expresses a hexadecimal number. If the given string begins with 0s or\n0S, base64 encoding is expected.  Also see the \\-\\-encoding option of\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/man/man1/setfattr.1"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 12,
                  "endLine": 96,
                  "endColumn": 18,
                  "snippet": {
                    "text": ".B \\-\\-\nEnd of command line options.\nAll remaining parameters are interpreted as file names, even if they\nstart with a dash character.\n.SH EXAMPLES\nAdd extended attribute to user namespace:\n.PP\n",
                    "rendered": {
                      "text": ".B \\-\\-\nEnd of command line options.\nAll remaining parameters are interpreted as file names, even if they\nstart with a dash character.\n.SH EXAMPLES\nAdd extended attribute to user namespace:\n.PP\n",
                      "markdown": "`.B \\-\\-\nEnd of command line options.\nAll remaining parameters are interpreted as file names, even if they\nstart with a dash character.\n.SH EXAMPLES\nAdd extended attribute to user namespace:\n.PP\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/man/man1/setfattr.1"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 10,
                  "snippet": {
                    "text": "command with the\n.B \\-\\-dump\noption.\nIf a dash (\\c\n.IR \\- )\nis given as the file name,\n.B setfattr\n",
                    "rendered": {
                      "text": "command with the\n.B \\-\\-dump\noption.\nIf a dash (\\c\n.IR \\- )\nis given as the file name,\n.B setfattr\n",
                      "markdown": "`command with the\n.B \\-\\-dump\noption.\nIf a dash (\\c\n.IR \\- )\nis given as the file name,\n.B setfattr\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/man/man1/setfattr.1"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 3,
                  "endLine": 56,
                  "endColumn": 11,
                  "snippet": {
                    "text": "backslash. Any control characters can be encoded as a backslash followed by\nthree digits as its ASCII code in octal. If the given string begins with 0x or\n0X, it expresses a hexadecimal number. If the given string begins with 0s or\n0S, base64 encoding is expected.  Also see the \\-\\-encoding option of\ngetfattr(1).\n.TP\n.BR \\-x \" \\f2name\\f1, \" \\-\\-remove \"=\\f2name\\f1\"\n",
                    "rendered": {
                      "text": "backslash. Any control characters can be encoded as a backslash followed by\nthree digits as its ASCII code in octal. If the given string begins with 0x or\n0X, it expresses a hexadecimal number. If the given string begins with 0s or\n0S, base64 encoding is expected.  Also see the \\-\\-encoding option of\ngetfattr(1).\n.TP\n.BR \\-x \" \\f2name\\f1, \" \\-\\-remove \"=\\f2name\\f1\"\n",
                      "markdown": "`backslash. Any control characters can be encoded as a backslash followed by\nthree digits as its ASCII code in octal. If the given string begins with 0x or\n0X, it expresses a hexadecimal number. If the given string begins with 0s or\n0S, base64 encoding is expected.  Also see the \\-\\-encoding option of\ngetfattr(1).\n.TP\n.BR \\-x \" \\f2name\\f1, \" \\-\\-remove \"=\\f2name\\f1\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/po/pl.po"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 2,
                  "endLine": 149,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\"  -d, --dump              odczyt wartości wszystkich rozszerzonych \"\n\"atrybutów\\n\"\n\"  -e, --encoding=...      kodowanie wartości (jako 'text', 'hex' lub \"\n\"'base64')\\n\"\n\"      --match=wzorzec     odczyt tylko wartości atrybutów pasujących do \"\n\"wzorca\\n\"\n\"      --only-values       wypisywanie tylko samych wartości\\n\"\n",
                    "rendered": {
                      "text": "\"  -d, --dump              odczyt wartości wszystkich rozszerzonych \"\n\"atrybutów\\n\"\n\"  -e, --encoding=...      kodowanie wartości (jako 'text', 'hex' lub \"\n\"'base64')\\n\"\n\"      --match=wzorzec     odczyt tylko wartości atrybutów pasujących do \"\n\"wzorca\\n\"\n\"      --only-values       wypisywanie tylko samych wartości\\n\"\n",
                      "markdown": "`\"  -d, --dump              odczyt wartości wszystkich rozszerzonych \"\n\"atrybutów\\n\"\n\"  -e, --encoding=...      kodowanie wartości (jako 'text', 'hex' lub \"\n\"'base64')\\n\"\n\"      --match=wzorzec     odczyt tylko wartości atrybutów pasujących do \"\n\"wzorca\\n\"\n\"      --only-values       wypisywanie tylko samych wartości\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/po/pl.po"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 63,
                  "endLine": 133,
                  "endColumn": 69,
                  "snippet": {
                    "text": "msgid \"\"\n\"  -n, --name=name         get the named extended attribute value\\n\"\n\"  -d, --dump              get all extended attribute values\\n\"\n\"  -e, --encoding=...      encode values (as 'text', 'hex' or 'base64')\\n\"\n\"      --match=pattern     only get attributes with names matching pattern\\n\"\n\"      --only-values       print the bare values only\\n\"\n\"  -h, --no-dereference    do not dereference symbolic links\\n\"\n",
                    "rendered": {
                      "text": "msgid \"\"\n\"  -n, --name=name         get the named extended attribute value\\n\"\n\"  -d, --dump              get all extended attribute values\\n\"\n\"  -e, --encoding=...      encode values (as 'text', 'hex' or 'base64')\\n\"\n\"      --match=pattern     only get attributes with names matching pattern\\n\"\n\"      --only-values       print the bare values only\\n\"\n\"  -h, --no-dereference    do not dereference symbolic links\\n\"\n",
                      "markdown": "`msgid \"\"\n\"  -n, --name=name         get the named extended attribute value\\n\"\n\"  -d, --dump              get all extended attribute values\\n\"\n\"  -e, --encoding=...      encode values (as 'text', 'hex' or 'base64')\\n\"\n\"      --match=pattern     only get attributes with names matching pattern\\n\"\n\"      --only-values       print the bare values only\\n\"\n\"  -h, --no-dereference    do not dereference symbolic links\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/po/gl.po"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 2,
                  "endLine": 149,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\"  -n, --name=nome         obter o valor de atributo estendido especificado\\n\"\n\"  -d, --dump              obté-lo valor de tódolos atributos estendidos\\n\"\n\"  -e, --encoding=...      codificar valores (coma 'text', 'hex' ou \"\n\"'base64')\\n\"\n\"      --match=patrón      só obté-los atributos de nome coincidente co \"\n\"patrón\\n\"\n\"      --only-values       só amosá-los valores crus dos atributos\\n\"\n",
                    "rendered": {
                      "text": "\"  -n, --name=nome         obter o valor de atributo estendido especificado\\n\"\n\"  -d, --dump              obté-lo valor de tódolos atributos estendidos\\n\"\n\"  -e, --encoding=...      codificar valores (coma 'text', 'hex' ou \"\n\"'base64')\\n\"\n\"      --match=patrón      só obté-los atributos de nome coincidente co \"\n\"patrón\\n\"\n\"      --only-values       só amosá-los valores crus dos atributos\\n\"\n",
                      "markdown": "`\"  -n, --name=nome         obter o valor de atributo estendido especificado\\n\"\n\"  -d, --dump              obté-lo valor de tódolos atributos estendidos\\n\"\n\"  -e, --encoding=...      codificar valores (coma 'text', 'hex' ou \"\n\"'base64')\\n\"\n\"      --match=patrón      só obté-los atributos de nome coincidente co \"\n\"patrón\\n\"\n\"      --only-values       só amosá-los valores crus dos atributos\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/po/gl.po"
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 63,
                  "endLine": 134,
                  "endColumn": 69,
                  "snippet": {
                    "text": "msgid \"\"\n\"  -n, --name=name         get the named extended attribute value\\n\"\n\"  -d, --dump              get all extended attribute values\\n\"\n\"  -e, --encoding=...      encode values (as 'text', 'hex' or 'base64')\\n\"\n\"      --match=pattern     only get attributes with names matching pattern\\n\"\n\"      --only-values       print the bare values only\\n\"\n\"  -h, --no-dereference    do not dereference symbolic links\\n\"\n",
                    "rendered": {
                      "text": "msgid \"\"\n\"  -n, --name=name         get the named extended attribute value\\n\"\n\"  -d, --dump              get all extended attribute values\\n\"\n\"  -e, --encoding=...      encode values (as 'text', 'hex' or 'base64')\\n\"\n\"      --match=pattern     only get attributes with names matching pattern\\n\"\n\"      --only-values       print the bare values only\\n\"\n\"  -h, --no-dereference    do not dereference symbolic links\\n\"\n",
                      "markdown": "`msgid \"\"\n\"  -n, --name=name         get the named extended attribute value\\n\"\n\"  -d, --dump              get all extended attribute values\\n\"\n\"  -e, --encoding=...      encode values (as 'text', 'hex' or 'base64')\\n\"\n\"      --match=pattern     only get attributes with names matching pattern\\n\"\n\"      --only-values       print the bare values only\\n\"\n\"  -h, --no-dereference    do not dereference symbolic links\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/po/nl.po"
                },
                "region": {
                  "startLine": 169,
                  "startColumn": 63,
                  "endLine": 169,
                  "endColumn": 69,
                  "snippet": {
                    "text": "msgstr \"\"\n\"  -n, --name=naam       verkrijg de uitgebreide attribuutwaarde voor naam\\n\"\n\"  -d, --dump            verkrijg alle uitgebreide attribuutwaarden\\n\"\n\"  -e, --encoding=...    codeer waarden (als 'text', 'hex' of 'base64')\\n\"\n\"      --match=patroon   verkrijg enkel attributen met namen die overeenkomen \"\n\"met het patroon\\n\"\n\"      --only-values     print enkel de waarden\\n\"\n",
                    "rendered": {
                      "text": "msgstr \"\"\n\"  -n, --name=naam       verkrijg de uitgebreide attribuutwaarde voor naam\\n\"\n\"  -d, --dump            verkrijg alle uitgebreide attribuutwaarden\\n\"\n\"  -e, --encoding=...    codeer waarden (als 'text', 'hex' of 'base64')\\n\"\n\"      --match=patroon   verkrijg enkel attributen met namen die overeenkomen \"\n\"met het patroon\\n\"\n\"      --only-values     print enkel de waarden\\n\"\n",
                      "markdown": "`msgstr \"\"\n\"  -n, --name=naam       verkrijg de uitgebreide attribuutwaarde voor naam\\n\"\n\"  -d, --dump            verkrijg alle uitgebreide attribuutwaarden\\n\"\n\"  -e, --encoding=...    codeer waarden (als 'text', 'hex' of 'base64')\\n\"\n\"      --match=patroon   verkrijg enkel attributen met namen die overeenkomen \"\n\"met het patroon\\n\"\n\"      --only-values     print enkel de waarden\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/po/nl.po"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 63,
                  "endLine": 155,
                  "endColumn": 69,
                  "snippet": {
                    "text": "msgid \"\"\n\"  -n, --name=name         get the named extended attribute value\\n\"\n\"  -d, --dump              get all extended attribute values\\n\"\n\"  -e, --encoding=...      encode values (as 'text', 'hex' or 'base64')\\n\"\n\"      --match=pattern     only get attributes with names matching pattern\\n\"\n\"      --only-values       print the bare values only\\n\"\n\"  -h, --no-dereference    do not dereference symbolic links\\n\"\n",
                    "rendered": {
                      "text": "msgid \"\"\n\"  -n, --name=name         get the named extended attribute value\\n\"\n\"  -d, --dump              get all extended attribute values\\n\"\n\"  -e, --encoding=...      encode values (as 'text', 'hex' or 'base64')\\n\"\n\"      --match=pattern     only get attributes with names matching pattern\\n\"\n\"      --only-values       print the bare values only\\n\"\n\"  -h, --no-dereference    do not dereference symbolic links\\n\"\n",
                      "markdown": "`msgid \"\"\n\"  -n, --name=name         get the named extended attribute value\\n\"\n\"  -d, --dump              get all extended attribute values\\n\"\n\"  -e, --encoding=...      encode values (as 'text', 'hex' or 'base64')\\n\"\n\"      --match=pattern     only get attributes with names matching pattern\\n\"\n\"      --only-values       print the bare values only\\n\"\n\"  -h, --no-dereference    do not dereference symbolic links\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/include/Makemodule.am"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 21,
                  "endLine": 12,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\nSUBST_INSTALL_HEADER = \\\n\tsubst_install_header() { \\\n\t  file=`echo \"$$1\" | sed -e 's,^.*/,,'`; \\\n\t  $(SED) -e \"s/\\<EXPORT\\>/extern/\" < \"$$1\" > \"include/$$file.t\" || exit 1; \\\n\t  $(MKDIR_P) \"$$2\" || exit 1; \\\n\t  $(INSTALL_HEADER) \"include/$$file.t\" \"$$2/$$file\" || exit 1; \\\n",
                    "rendered": {
                      "text": "\nSUBST_INSTALL_HEADER = \\\n\tsubst_install_header() { \\\n\t  file=`echo \"$$1\" | sed -e 's,^.*/,,'`; \\\n\t  $(SED) -e \"s/\\<EXPORT\\>/extern/\" < \"$$1\" > \"include/$$file.t\" || exit 1; \\\n\t  $(MKDIR_P) \"$$2\" || exit 1; \\\n\t  $(INSTALL_HEADER) \"include/$$file.t\" \"$$2/$$file\" || exit 1; \\\n",
                      "markdown": "`\nSUBST_INSTALL_HEADER = \\\n\tsubst_install_header() { \\\n\t  file=`echo \"$$1\" | sed -e 's,^.*/,,'`; \\\n\t  $(SED) -e \"s/\\<EXPORT\\>/extern/\" < \"$$1\" > \"include/$$file.t\" || exit 1; \\\n\t  $(MKDIR_P) \"$$2\" || exit 1; \\\n\t  $(INSTALL_HEADER) \"include/$$file.t\" \"$$2/$$file\" || exit 1; \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/man/man3/attr_multi.3"
                },
                "region": {
                  "startLine": 190,
                  "startColumn": 15,
                  "endLine": 190,
                  "endColumn": 24,
                  "snippet": {
                    "text": ".I flags\nargument to the\n.B attr_multi\ncall is used to control following of symbolic links in the\n.I path\nargument.\nThe default is to follow symbolic links,\n",
                    "rendered": {
                      "text": ".I flags\nargument to the\n.B attr_multi\ncall is used to control following of symbolic links in the\n.I path\nargument.\nThe default is to follow symbolic links,\n",
                      "markdown": "`.I flags\nargument to the\n.B attr_multi\ncall is used to control following of symbolic links in the\n.I path\nargument.\nThe default is to follow symbolic links,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/man/man3/attr_multi.3"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 8,
                  "endLine": 116,
                  "endColumn": 17,
                  "snippet": {
                    "text": "and\n.I am_flags\nfields are used to store the value of the named attribute,\nand some control flags for that sub-operation, respectively.\nTheir use varies depending on the value of the\n.I am_opcode\nfield.\n",
                    "rendered": {
                      "text": "and\n.I am_flags\nfields are used to store the value of the named attribute,\nand some control flags for that sub-operation, respectively.\nTheir use varies depending on the value of the\n.I am_opcode\nfield.\n",
                      "markdown": "`and\n.I am_flags\nfields are used to store the value of the named attribute,\nand some control flags for that sub-operation, respectively.\nTheir use varies depending on the value of the\n.I am_opcode\nfield.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/man/man3/attr_multi.3"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 17,
                  "endLine": 43,
                  "endColumn": 21,
                  "snippet": {
                    "text": "and\n.B attr_multif\nfunctions provide a way to operate on multiple attributes of a\nfilesystem object at once.\n.P\n.I Path\npoints to a path name for a filesystem object, and\n",
                    "rendered": {
                      "text": "and\n.B attr_multif\nfunctions provide a way to operate on multiple attributes of a\nfilesystem object at once.\n.P\n.I Path\npoints to a path name for a filesystem object, and\n",
                      "markdown": "`and\n.B attr_multif\nfunctions provide a way to operate on multiple attributes of a\nfilesystem object at once.\n.P\n.I Path\npoints to a path name for a filesystem object, and\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/man/man3/attr_multi.3"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 85,
                  "endLine": 25,
                  "endColumn": 89,
                  "snippet": {
                    "text": ".\\\"\n.TH ATTR_MULTI 3 \"Extended Attributes\" \"Dec 2001\" \"XFS Compatibility API\"\n.SH NAME\nattr_multi, attr_multif \\- manipulate multiple user attributes on a filesystem object at once\n.SH C SYNOPSIS\n.PP\n.sp\n",
                    "rendered": {
                      "text": ".\\\"\n.TH ATTR_MULTI 3 \"Extended Attributes\" \"Dec 2001\" \"XFS Compatibility API\"\n.SH NAME\nattr_multi, attr_multif \\- manipulate multiple user attributes on a filesystem object at once\n.SH C SYNOPSIS\n.PP\n.sp\n",
                      "markdown": "`.\\\"\n.TH ATTR_MULTI 3 \"Extended Attributes\" \"Dec 2001\" \"XFS Compatibility API\"\n.SH NAME\nattr_multi, attr_multif \\- manipulate multiple user attributes on a filesystem object at once\n.SH C SYNOPSIS\n.PP\n.sp\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/man/man1/attr.1"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 29,
                  "endLine": 45,
                  "endColumn": 33,
                  "snippet": {
                    "text": "This document describes the\n.I attr\ncommand, which is mostly compatible with the IRIX command of the same name.\nIt is thus aimed specifically at users of the XFS filesystem - for\nfilesystem independent extended attribute manipulation, consult the\n.IR getfattr (1)\nand \n",
                    "rendered": {
                      "text": "This document describes the\n.I attr\ncommand, which is mostly compatible with the IRIX command of the same name.\nIt is thus aimed specifically at users of the XFS filesystem - for\nfilesystem independent extended attribute manipulation, consult the\n.IR getfattr (1)\nand \n",
                      "markdown": "`This document describes the\n.I attr\ncommand, which is mostly compatible with the IRIX command of the same name.\nIt is thus aimed specifically at users of the XFS filesystem - for\nfilesystem independent extended attribute manipulation, consult the\n.IR getfattr (1)\nand \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/man/man1/attr.1"
                },
                "region": {
                  "startLine": 185,
                  "startColumn": 3,
                  "endLine": 185,
                  "endColumn": 8,
                  "snippet": {
                    "text": "but will not print status messages (to \\f4stdout\\fP).\n.SH \"NOTES\"\nThe standard file interchange/archive programs\n.IR tar (1),\nand\n.IR cpio (1)\nwill not archive or restore extended attributes,\n",
                    "rendered": {
                      "text": "but will not print status messages (to \\f4stdout\\fP).\n.SH \"NOTES\"\nThe standard file interchange/archive programs\n.IR tar (1),\nand\n.IR cpio (1)\nwill not archive or restore extended attributes,\n",
                      "markdown": "`but will not print status messages (to \\f4stdout\\fP).\n.SH \"NOTES\"\nThe standard file interchange/archive programs\n.IR tar (1),\nand\n.IR cpio (1)\nwill not archive or restore extended attributes,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/tools/getfattr.c"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 24,
                  "endLine": 430,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\t\t\tcase 'e':  /* encoding */\n\t\t\t\tif (strcmp(optarg, \"text\") != 0 &&\n\t\t\t\t    strcmp(optarg, \"hex\") != 0 &&\n\t\t\t\t    strcmp(optarg, \"base64\") != 0)\n\t\t\t\t\tgoto synopsis;\n\t\t\t\topt_encoding = optarg;\n\t\t\t\tbreak;\n",
                    "rendered": {
                      "text": "\t\t\tcase 'e':  /* encoding */\n\t\t\t\tif (strcmp(optarg, \"text\") != 0 &&\n\t\t\t\t    strcmp(optarg, \"hex\") != 0 &&\n\t\t\t\t    strcmp(optarg, \"base64\") != 0)\n\t\t\t\t\tgoto synopsis;\n\t\t\t\topt_encoding = optarg;\n\t\t\t\tbreak;\n",
                      "markdown": "`\t\t\tcase 'e':  /* encoding */\n\t\t\t\tif (strcmp(optarg, \"text\") != 0 &&\n\t\t\t\t    strcmp(optarg, \"hex\") != 0 &&\n\t\t\t\t    strcmp(optarg, \"base64\") != 0)\n\t\t\t\t\tgoto synopsis;\n\t\t\t\topt_encoding = optarg;\n\t\t\t\tbreak;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/tools/getfattr.c"
                },
                "region": {
                  "startLine": 392,
                  "startColumn": 63,
                  "endLine": 392,
                  "endColumn": 69,
                  "snippet": {
                    "text": "\tprintf(_(\n\"  -n, --name=name         get the named extended attribute value\\n\"\n\"  -d, --dump              get all extended attribute values\\n\"\n\"  -e, --encoding=...      encode values (as 'text', 'hex' or 'base64')\\n\"\n\"  -m, --match=pattern     only get attributes with names matching pattern\\n\"\n\"      --only-values       print the bare values only\\n\"\n\"  -h, --no-dereference    do not dereference symbolic links\\n\"\n",
                    "rendered": {
                      "text": "\tprintf(_(\n\"  -n, --name=name         get the named extended attribute value\\n\"\n\"  -d, --dump              get all extended attribute values\\n\"\n\"  -e, --encoding=...      encode values (as 'text', 'hex' or 'base64')\\n\"\n\"  -m, --match=pattern     only get attributes with names matching pattern\\n\"\n\"      --only-values       print the bare values only\\n\"\n\"  -h, --no-dereference    do not dereference symbolic links\\n\"\n",
                      "markdown": "`\tprintf(_(\n\"  -n, --name=name         get the named extended attribute value\\n\"\n\"  -d, --dump              get all extended attribute values\\n\"\n\"  -e, --encoding=...      encode values (as 'text', 'hex' or 'base64')\\n\"\n\"  -m, --match=pattern     only get attributes with names matching pattern\\n\"\n\"      --only-values       print the bare values only\\n\"\n\"  -h, --no-dereference    do not dereference symbolic links\\n\"\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/tools/getfattr.c"
                },
                "region": {
                  "startLine": 193,
                  "startColumn": 25,
                  "endLine": 193,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\t\t}\n\t\t*e = '\\0';\n\t\t*size = (e - encoded);\n\t} else if (strcmp(enc, \"base64\") == 0) {\n\t\tstatic const char *digits = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdef\"\n\t\t\t\t\t    \"ghijklmnopqrstuvwxyz0123456789+/\";\n\t\tsize_t n;\n",
                    "rendered": {
                      "text": "\t\t}\n\t\t*e = '\\0';\n\t\t*size = (e - encoded);\n\t} else if (strcmp(enc, \"base64\") == 0) {\n\t\tstatic const char *digits = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdef\"\n\t\t\t\t\t    \"ghijklmnopqrstuvwxyz0123456789+/\";\n\t\tsize_t n;\n",
                      "markdown": "`\t\t}\n\t\t*e = '\\0';\n\t\t*size = (e - encoded);\n\t} else if (strcmp(enc, \"base64\") == 0) {\n\t\tstatic const char *digits = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdef\"\n\t\t\t\t\t    \"ghijklmnopqrstuvwxyz0123456789+/\";\n\t\tsize_t n;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/tools/getfattr.c"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 10,
                  "endLine": 136,
                  "endColumn": 16,
                  "snippet": {
                    "text": "\t\tif (well_enough_printable(value, *size))\n\t\t\tenc = \"text\";\n\t\telse\n\t\t\tenc = \"base64\";\n\t} else\n\t\tenc = opt_encoding;\n\n",
                    "rendered": {
                      "text": "\t\tif (well_enough_printable(value, *size))\n\t\t\tenc = \"text\";\n\t\telse\n\t\t\tenc = \"base64\";\n\t} else\n\t\tenc = opt_encoding;\n\n",
                      "markdown": "`\t\tif (well_enough_printable(value, *size))\n\t\t\tenc = \"text\";\n\t\telse\n\t\t\tenc = \"base64\";\n\t} else\n\t\tenc = opt_encoding;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/panic-at-the-distro-malicious-apks/datasets/upstream_repos/attr.zip/autogen.sh"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 36,
                  "endLine": 5,
                  "endColumn": 3,
                  "snippet": {
                    "text": "#!/bin/sh -ex\npo/update-potfiles\nautopoint --force\nam_libdir=$(automake --print-libdir)\ncp \"${am_libdir}/INSTALL\" doc/\nexec autoreconf -f -i\n",
                    "rendered": {
                      "text": "#!/bin/sh -ex\npo/update-potfiles\nautopoint --force\nam_libdir=$(automake --print-libdir)\ncp \"${am_libdir}/INSTALL\" doc/\nexec autoreconf -f -i\n",
                      "markdown": "`#!/bin/sh -ex\npo/update-potfiles\nautopoint --force\nam_libdir=$(automake --print-libdir)\ncp \"${am_libdir}/INSTALL\" doc/\nexec autoreconf -f -i\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}