{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/Makefile"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 6,
                  "snippet": {
                    "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/licenses/testdata/copying/COPYING"
                },
                "region": {
                  "startLine": 194,
                  "startColumn": 39,
                  "endLine": 195,
                  "snippet": {
                    "text": "\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/licenses/testdata/copying/COPYING"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 57,
                  "endLine": 111,
                  "endColumn": 61,
                  "snippet": {
                    "text": "          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n",
                    "rendered": {
                      "text": "          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n",
                      "markdown": "`          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/licenses/testdata/copying/COPYING"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 60,
                  "endLine": 57,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n",
                    "rendered": {
                      "text": "      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n",
                      "markdown": "`      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/licenses/testdata/copying/COPYING"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 5,
                  "endLine": 18,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n",
                    "rendered": {
                      "text": "\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n",
                      "markdown": "`\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/licenses/testdata/copying/COPYING"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 24,
                  "endLine": 140,
                  "endColumn": 33,
                  "snippet": {
                    "text": "      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n",
                    "rendered": {
                      "text": "      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n",
                      "markdown": "`      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/licenses/library.go"
                },
                "region": {
                  "startLine": 193,
                  "startColumn": 27,
                  "endLine": 193,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\t\t\t\t\t}\n\n\t\t\t\t\tif module.Dir == \"\" {\n\t\t\t\t\t\tklog.Warningf(\"cannot find parent package of vendored module %s\", module.Path)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\t\t}\n\n\t\t\t\t\tif module.Dir == \"\" {\n\t\t\t\t\t\tklog.Warningf(\"cannot find parent package of vendored module %s\", module.Path)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n",
                      "markdown": "`\t\t\t\t\t}\n\n\t\t\t\t\tif module.Dir == \"\" {\n\t\t\t\t\t\tklog.Warningf(\"cannot find parent package of vendored module %s\", module.Path)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/internal/third_party/pkgsite/PATENTS"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 10,
                  "endLine": 1,
                  "endColumn": 14,
                  "snippet": {
                    "text": "Additional IP Rights Grant (Patents)\n\"This implementation\" means the copyrightable works distributed by\nGoogle as part of the Go project.\nGoogle hereby grants to You a perpetual, worldwide, non-exclusive,\n",
                    "rendered": {
                      "text": "Additional IP Rights Grant (Patents)\n\"This implementation\" means the copyrightable works distributed by\nGoogle as part of the Go project.\nGoogle hereby grants to You a perpetual, worldwide, non-exclusive,\n",
                      "markdown": "`Additional IP Rights Grant (Patents)\n\"This implementation\" means the copyrightable works distributed by\nGoogle as part of the Go project.\nGoogle hereby grants to You a perpetual, worldwide, non-exclusive,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/licenses/testdata/licence/LICENCE"
                },
                "region": {
                  "startLine": 194,
                  "startColumn": 39,
                  "endLine": 195,
                  "snippet": {
                    "text": "\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/licenses/testdata/licence/LICENCE"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 57,
                  "endLine": 111,
                  "endColumn": 61,
                  "snippet": {
                    "text": "          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n",
                    "rendered": {
                      "text": "          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n",
                      "markdown": "`          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/licenses/testdata/licence/LICENCE"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 60,
                  "endLine": 57,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n",
                    "rendered": {
                      "text": "      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n",
                      "markdown": "`      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/licenses/testdata/licence/LICENCE"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 5,
                  "endLine": 18,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n",
                    "rendered": {
                      "text": "\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n",
                      "markdown": "`\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/licenses/testdata/licence/LICENCE"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 24,
                  "endLine": 140,
                  "endColumn": 33,
                  "snippet": {
                    "text": "      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n",
                    "rendered": {
                      "text": "      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n",
                      "markdown": "`      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/licenses/testdata/lowercase/license"
                },
                "region": {
                  "startLine": 194,
                  "startColumn": 39,
                  "endLine": 195,
                  "snippet": {
                    "text": "\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/licenses/testdata/lowercase/license"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 57,
                  "endLine": 111,
                  "endColumn": 61,
                  "snippet": {
                    "text": "          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n",
                    "rendered": {
                      "text": "          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n",
                      "markdown": "`          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/licenses/testdata/lowercase/license"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 60,
                  "endLine": 57,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n",
                    "rendered": {
                      "text": "      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n",
                      "markdown": "`      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/licenses/testdata/lowercase/license"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 5,
                  "endLine": 18,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n",
                    "rendered": {
                      "text": "\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n",
                      "markdown": "`\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/licenses/testdata/lowercase/license"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 24,
                  "endLine": 140,
                  "endColumn": 33,
                  "snippet": {
                    "text": "      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n",
                    "rendered": {
                      "text": "      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n",
                      "markdown": "`      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/testdata/modules/hello01/licenses.md"
                },
                "region": {
                  "startLine": 197,
                  "startColumn": 39,
                  "endLine": 198,
                  "snippet": {
                    "text": "\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n",
                    "rendered": {
                      "text": "\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n",
                      "markdown": "`\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/testdata/modules/hello01/licenses.md"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 57,
                  "endLine": 114,
                  "endColumn": 61,
                  "snippet": {
                    "text": "          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n",
                    "rendered": {
                      "text": "          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n",
                      "markdown": "`          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/testdata/modules/hello01/licenses.md"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 60,
                  "endLine": 60,
                  "endColumn": 69,
                  "snippet": {
                    "text": "      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n",
                    "rendered": {
                      "text": "      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n",
                      "markdown": "`      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/testdata/modules/hello01/licenses.md"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 5,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n",
                    "rendered": {
                      "text": "\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n",
                      "markdown": "`\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/testdata/modules/hello01/licenses.md"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 24,
                  "endLine": 143,
                  "endColumn": 33,
                  "snippet": {
                    "text": "      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n",
                    "rendered": {
                      "text": "      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n",
                      "markdown": "`      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/testdata/modules/vendored03/vendor/github.com/mitchellh/go-homedir/homedir.go"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 16,
                  "endLine": 123,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\t\t\t}\n\t\t} else {\n\t\t\tif passwd := strings.TrimSpace(stdout.String()); passwd != \"\" {\n\t\t\t\t// username:password:uid:gid:gecos:home:shell\n\t\t\t\tpasswdParts := strings.SplitN(passwd, \":\", 7)\n\t\t\t\tif len(passwdParts) > 5 {\n\t\t\t\t\treturn passwdParts[5], nil\n",
                    "rendered": {
                      "text": "\t\t\t}\n\t\t} else {\n\t\t\tif passwd := strings.TrimSpace(stdout.String()); passwd != \"\" {\n\t\t\t\t// username:password:uid:gid:gecos:home:shell\n\t\t\t\tpasswdParts := strings.SplitN(passwd, \":\", 7)\n\t\t\t\tif len(passwdParts) > 5 {\n\t\t\t\t\treturn passwdParts[5], nil\n",
                      "markdown": "`\t\t\t}\n\t\t} else {\n\t\t\tif passwd := strings.TrimSpace(stdout.String()); passwd != \"\" {\n\t\t\t\t// username:password:uid:gid:gecos:home:shell\n\t\t\t\tpasswdParts := strings.SplitN(passwd, \":\", 7)\n\t\t\t\tif len(passwdParts) > 5 {\n\t\t\t\t\treturn passwdParts[5], nil\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000703"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Username)",
            "id": "BD000703"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/testdata/modules/vendored03/vendor/github.com/mitchellh/go-homedir/homedir.go"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 61,
                  "endLine": 105,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\n\t// If that fails, try OS specific commands\n\tif runtime.GOOS == \"darwin\" {\n\t\tcmd := exec.Command(\"sh\", \"-c\", `dscl -q . -read /Users/\"$(whoami)\" NFSHomeDirectory | sed 's/^[^ ]*: //'`)\n\t\tcmd.Stdout = &stdout\n\t\tif err := cmd.Run(); err == nil {\n\t\t\tresult := strings.TrimSpace(stdout.String())\n",
                    "rendered": {
                      "text": "\n\t// If that fails, try OS specific commands\n\tif runtime.GOOS == \"darwin\" {\n\t\tcmd := exec.Command(\"sh\", \"-c\", `dscl -q . -read /Users/\"$(whoami)\" NFSHomeDirectory | sed 's/^[^ ]*: //'`)\n\t\tcmd.Stdout = &stdout\n\t\tif err := cmd.Run(); err == nil {\n\t\t\tresult := strings.TrimSpace(stdout.String())\n",
                      "markdown": "`\n\t// If that fails, try OS specific commands\n\tif runtime.GOOS == \"darwin\" {\n\t\tcmd := exec.Command(\"sh\", \"-c\", `dscl -q . -read /Users/\"$(whoami)\" NFSHomeDirectory | sed 's/^[^ ]*: //'`)\n\t\tcmd.Stdout = &stdout\n\t\tif err := cmd.Run(); err == nil {\n\t\t\tresult := strings.TrimSpace(stdout.String())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/testdata/modules/vendored03/vendor/github.com/mitchellh/go-homedir/homedir.go"
                },
                "region": {
                  "startLine": 134,
                  "endLine": 134,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\n\t// If all else fails, try the shell\n\tstdout.Reset()\n\tcmd := exec.Command(\"sh\", \"-c\", \"cd && pwd\")\n\tcmd.Stdout = &stdout\n\tif err := cmd.Run(); err != nil {\n\t\treturn \"\", err\n",
                    "rendered": {
                      "text": "\n\t// If all else fails, try the shell\n\tstdout.Reset()\n\tcmd := exec.Command(\"sh\", \"-c\", \"cd && pwd\")\n\tcmd.Stdout = &stdout\n\tif err := cmd.Run(); err != nil {\n\t\treturn \"\", err\n",
                      "markdown": "`\n\t// If all else fails, try the shell\n\tstdout.Reset()\n\tcmd := exec.Command(\"sh\", \"-c\", \"cd && pwd\")\n\tcmd.Stdout = &stdout\n\tif err := cmd.Run(); err != nil {\n\t\treturn \"\", err\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/testdata/modules/vendored03/vendor/github.com/mitchellh/go-homedir/homedir.go"
                },
                "region": {
                  "startLine": 114,
                  "startColumn": 1,
                  "endLine": 114,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\t\t\t}\n\t\t}\n\t} else {\n\t\tcmd := exec.Command(\"getent\", \"passwd\", strconv.Itoa(os.Getuid()))\n\t\tcmd.Stdout = &stdout\n\t\tif err := cmd.Run(); err != nil {\n\t\t\t// If the error is ErrNotFound, we ignore it. Otherwise, return it.\n",
                    "rendered": {
                      "text": "\t\t\t}\n\t\t}\n\t} else {\n\t\tcmd := exec.Command(\"getent\", \"passwd\", strconv.Itoa(os.Getuid()))\n\t\tcmd.Stdout = &stdout\n\t\tif err := cmd.Run(); err != nil {\n\t\t\t// If the error is ErrNotFound, we ignore it. Otherwise, return it.\n",
                      "markdown": "`\t\t\t}\n\t\t}\n\t} else {\n\t\tcmd := exec.Command(\"getent\", \"passwd\", strconv.Itoa(os.Getuid()))\n\t\tcmd.Stdout = &stdout\n\t\tif err := cmd.Run(); err != nil {\n\t\t\t// If the error is ErrNotFound, we ignore it. Otherwise, return it.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/testdata/modules/vendored03/vendor/github.com/mitchellh/go-homedir/homedir.go"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 1,
                  "endLine": 105,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\n\t// If that fails, try OS specific commands\n\tif runtime.GOOS == \"darwin\" {\n\t\tcmd := exec.Command(\"sh\", \"-c\", `dscl -q . -read /Users/\"$(whoami)\" NFSHomeDirectory | sed 's/^[^ ]*: //'`)\n\t\tcmd.Stdout = &stdout\n\t\tif err := cmd.Run(); err == nil {\n\t\t\tresult := strings.TrimSpace(stdout.String())\n",
                    "rendered": {
                      "text": "\n\t// If that fails, try OS specific commands\n\tif runtime.GOOS == \"darwin\" {\n\t\tcmd := exec.Command(\"sh\", \"-c\", `dscl -q . -read /Users/\"$(whoami)\" NFSHomeDirectory | sed 's/^[^ ]*: //'`)\n\t\tcmd.Stdout = &stdout\n\t\tif err := cmd.Run(); err == nil {\n\t\t\tresult := strings.TrimSpace(stdout.String())\n",
                      "markdown": "`\n\t// If that fails, try OS specific commands\n\tif runtime.GOOS == \"darwin\" {\n\t\tcmd := exec.Command(\"sh\", \"-c\", `dscl -q . -read /Users/\"$(whoami)\" NFSHomeDirectory | sed 's/^[^ ]*: //'`)\n\t\tcmd.Stdout = &stdout\n\t\tif err := cmd.Run(); err == nil {\n\t\t\tresult := strings.TrimSpace(stdout.String())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/testdata/modules/vendored03/vendor/github.com/mitchellh/go-homedir/homedir.go"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 31,
                  "endLine": 68,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\t}\n\n\tif len(path) > 1 && path[1] != '/' && path[1] != '\\\\' {\n\t\treturn \"\", errors.New(\"cannot expand user-specific home dir\")\n\t}\n\n\tdir, err := Dir()\n",
                    "rendered": {
                      "text": "\t}\n\n\tif len(path) > 1 && path[1] != '/' && path[1] != '\\\\' {\n\t\treturn \"\", errors.New(\"cannot expand user-specific home dir\")\n\t}\n\n\tdir, err := Dir()\n",
                      "markdown": "`\t}\n\n\tif len(path) > 1 && path[1] != '/' && path[1] != '\\\\' {\n\t\treturn \"\", errors.New(\"cannot expand user-specific home dir\")\n\t}\n\n\tdir, err := Dir()\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/testdata/modules/vendored03/vendor/github.com/mitchellh/go-homedir/homedir.go"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 2,
                  "endLine": 55,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\treturn result, nil\n}\n\n// Expand expands the path to include the home directory if the path\n// is prefixed with `~`. If it isn't prefixed with `~`, the path is\n// returned as-is.\nfunc Expand(path string) (string, error) {\n",
                    "rendered": {
                      "text": "\treturn result, nil\n}\n\n// Expand expands the path to include the home directory if the path\n// is prefixed with `~`. If it isn't prefixed with `~`, the path is\n// returned as-is.\nfunc Expand(path string) (string, error) {\n",
                      "markdown": "`\treturn result, nil\n}\n\n// Expand expands the path to include the home directory if the path\n// is prefixed with `~`. If it isn't prefixed with `~`, the path is\n// returned as-is.\nfunc Expand(path string) (string, error) {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/testdata/modules/vendored03/vendor/github.com/mitchellh/go-homedir/homedir.go"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 88,
                  "endLine": 105,
                  "endColumn": 93,
                  "snippet": {
                    "text": "\n\t// If that fails, try OS specific commands\n\tif runtime.GOOS == \"darwin\" {\n\t\tcmd := exec.Command(\"sh\", \"-c\", `dscl -q . -read /Users/\"$(whoami)\" NFSHomeDirectory | sed 's/^[^ ]*: //'`)\n\t\tcmd.Stdout = &stdout\n\t\tif err := cmd.Run(); err == nil {\n\t\t\tresult := strings.TrimSpace(stdout.String())\n",
                    "rendered": {
                      "text": "\n\t// If that fails, try OS specific commands\n\tif runtime.GOOS == \"darwin\" {\n\t\tcmd := exec.Command(\"sh\", \"-c\", `dscl -q . -read /Users/\"$(whoami)\" NFSHomeDirectory | sed 's/^[^ ]*: //'`)\n\t\tcmd.Stdout = &stdout\n\t\tif err := cmd.Run(); err == nil {\n\t\t\tresult := strings.TrimSpace(stdout.String())\n",
                      "markdown": "`\n\t// If that fails, try OS specific commands\n\tif runtime.GOOS == \"darwin\" {\n\t\tcmd := exec.Command(\"sh\", \"-c\", `dscl -q . -read /Users/\"$(whoami)\" NFSHomeDirectory | sed 's/^[^ ]*: //'`)\n\t\tcmd.Stdout = &stdout\n\t\tif err := cmd.Run(); err == nil {\n\t\t\tresult := strings.TrimSpace(stdout.String())\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/testdata/modules/vendored03/vendor/github.com/mitchellh/go-homedir/homedir.go"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 14,
                  "endLine": 92,
                  "endColumn": 19,
                  "snippet": {
                    "text": "func dirUnix() (string, error) {\n\thomeEnv := \"HOME\"\n\tif runtime.GOOS == \"plan9\" {\n\t\t// On plan9, env vars are lowercase.\n\t\thomeEnv = \"home\"\n\t}\n\n",
                    "rendered": {
                      "text": "func dirUnix() (string, error) {\n\thomeEnv := \"HOME\"\n\tif runtime.GOOS == \"plan9\" {\n\t\t// On plan9, env vars are lowercase.\n\t\thomeEnv = \"home\"\n\t}\n\n",
                      "markdown": "`func dirUnix() (string, error) {\n\thomeEnv := \"HOME\"\n\tif runtime.GOOS == \"plan9\" {\n\t\t// On plan9, env vars are lowercase.\n\t\thomeEnv = \"home\"\n\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/testdata/modules/vendored03/vendor/github.com/mitchellh/go-homedir/homedir.go"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 2,
                  "endLine": 82,
                  "endColumn": 7,
                  "snippet": {
                    "text": "// Reset clears the cache, forcing the next call to Dir to re-detect\n// the home directory. This generally never has to be called, but can be\n// useful in tests if you're modifying the home directory via the HOME\n// env var or something.\nfunc Reset() {\n\tcacheLock.Lock()\n\tdefer cacheLock.Unlock()\n",
                    "rendered": {
                      "text": "// Reset clears the cache, forcing the next call to Dir to re-detect\n// the home directory. This generally never has to be called, but can be\n// useful in tests if you're modifying the home directory via the HOME\n// env var or something.\nfunc Reset() {\n\tcacheLock.Lock()\n\tdefer cacheLock.Unlock()\n",
                      "markdown": "`// Reset clears the cache, forcing the next call to Dir to re-detect\n// the home directory. This generally never has to be called, but can be\n// useful in tests if you're modifying the home directory via the HOME\n// env var or something.\nfunc Reset() {\n\tcacheLock.Lock()\n\tdefer cacheLock.Unlock()\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/testdata/modules/vendored03/vendor/github.com/mitchellh/go-homedir/homedir.go"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 31,
                  "endLine": 68,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\t}\n\n\tif len(path) > 1 && path[1] != '/' && path[1] != '\\\\' {\n\t\treturn \"\", errors.New(\"cannot expand user-specific home dir\")\n\t}\n\n\tdir, err := Dir()\n",
                    "rendered": {
                      "text": "\t}\n\n\tif len(path) > 1 && path[1] != '/' && path[1] != '\\\\' {\n\t\treturn \"\", errors.New(\"cannot expand user-specific home dir\")\n\t}\n\n\tdir, err := Dir()\n",
                      "markdown": "`\t}\n\n\tif len(path) > 1 && path[1] != '/' && path[1] != '\\\\' {\n\t\treturn \"\", errors.New(\"cannot expand user-specific home dir\")\n\t}\n\n\tdir, err := Dir()\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/testdata/modules/vendored03/vendor/github.com/mitchellh/go-homedir/homedir.go"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 2,
                  "endLine": 55,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\treturn result, nil\n}\n\n// Expand expands the path to include the home directory if the path\n// is prefixed with `~`. If it isn't prefixed with `~`, the path is\n// returned as-is.\nfunc Expand(path string) (string, error) {\n",
                    "rendered": {
                      "text": "\treturn result, nil\n}\n\n// Expand expands the path to include the home directory if the path\n// is prefixed with `~`. If it isn't prefixed with `~`, the path is\n// returned as-is.\nfunc Expand(path string) (string, error) {\n",
                      "markdown": "`\treturn result, nil\n}\n\n// Expand expands the path to include the home directory if the path\n// is prefixed with `~`. If it isn't prefixed with `~`, the path is\n// returned as-is.\nfunc Expand(path string) (string, error) {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/testdata/modules/vendored03/vendor/github.com/mitchellh/go-homedir/README.md"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 37,
                  "endLine": 7,
                  "endColumn": 45,
                  "snippet": {
                    "text": "the use of cgo, so the library can be used in cross-compilation environments.\n\nUsage is incredibly simple, just call `homedir.Dir()` to get the home directory\nfor a user, and `homedir.Expand()` to expand the `~` in a path to the home\ndirectory.\n\n**Why not just use `os/user`?** The built-in `os/user` package requires\n",
                    "rendered": {
                      "text": "the use of cgo, so the library can be used in cross-compilation environments.\n\nUsage is incredibly simple, just call `homedir.Dir()` to get the home directory\nfor a user, and `homedir.Expand()` to expand the `~` in a path to the home\ndirectory.\n\n**Why not just use `os/user`?** The built-in `os/user` package requires\n",
                      "markdown": "`the use of cgo, so the library can be used in cross-compilation environments.\n\nUsage is incredibly simple, just call `homedir.Dir()` to get the home directory\nfor a user, and `homedir.Expand()` to expand the `~` in a path to the home\ndirectory.\n\n**Why not just use `os/user`?** The built-in `os/user` package requires\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/testdata/modules/vendored03/vendor/github.com/mitchellh/go-homedir/README.md"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 36,
                  "endLine": 12,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\n**Why not just use `os/user`?** The built-in `os/user` package requires\ncgo on Darwin systems. This means that any Go code that uses that package\ncannot cross compile. But 99% of the time the use for `os/user` is just to\nretrieve the home directory, which we can do for the current user without\ncgo. This library does that, enabling cross-compilation.\n",
                    "rendered": {
                      "text": "\n**Why not just use `os/user`?** The built-in `os/user` package requires\ncgo on Darwin systems. This means that any Go code that uses that package\ncannot cross compile. But 99% of the time the use for `os/user` is just to\nretrieve the home directory, which we can do for the current user without\ncgo. This library does that, enabling cross-compilation.\n",
                      "markdown": "`\n**Why not just use `os/user`?** The built-in `os/user` package requires\ncgo on Darwin systems. This means that any Go code that uses that package\ncannot cross compile. But 99% of the time the use for `os/user` is just to\nretrieve the home directory, which we can do for the current user without\ncgo. This library does that, enabling cross-compilation.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/testdata/modules/vendored03/vendor/github.com/mitchellh/go-homedir/README.md"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 37,
                  "endLine": 7,
                  "endColumn": 45,
                  "snippet": {
                    "text": "the use of cgo, so the library can be used in cross-compilation environments.\n\nUsage is incredibly simple, just call `homedir.Dir()` to get the home directory\nfor a user, and `homedir.Expand()` to expand the `~` in a path to the home\ndirectory.\n\n**Why not just use `os/user`?** The built-in `os/user` package requires\n",
                    "rendered": {
                      "text": "the use of cgo, so the library can be used in cross-compilation environments.\n\nUsage is incredibly simple, just call `homedir.Dir()` to get the home directory\nfor a user, and `homedir.Expand()` to expand the `~` in a path to the home\ndirectory.\n\n**Why not just use `os/user`?** The built-in `os/user` package requires\n",
                      "markdown": "`the use of cgo, so the library can be used in cross-compilation environments.\n\nUsage is incredibly simple, just call `homedir.Dir()` to get the home directory\nfor a user, and `homedir.Expand()` to expand the `~` in a path to the home\ndirectory.\n\n**Why not just use `os/user`?** The built-in `os/user` package requires\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/internal/third_party/pkgsite/source/source_test.go"
                },
                "region": {
                  "startLine": 353,
                  "startColumn": 23,
                  "endLine": 353,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t\t\t\"https://github.com/gonum/gonum/raw/v0.6.1/doc.go\",\n\t\t},\n\t\t{\n\t\t\t\"custom with gotools at repo root\",\n\t\t\t\"dmitri.shuralyov.com/gpu/mtl\", \"v0.0.0-20191203043605-d42048ed14fd\", \"mtl.go\",\n\n\t\t\t\"https://dmitri.shuralyov.com/gpu/mtl/...\",\n",
                    "rendered": {
                      "text": "\t\t\t\"https://github.com/gonum/gonum/raw/v0.6.1/doc.go\",\n\t\t},\n\t\t{\n\t\t\t\"custom with gotools at repo root\",\n\t\t\t\"dmitri.shuralyov.com/gpu/mtl\", \"v0.0.0-20191203043605-d42048ed14fd\", \"mtl.go\",\n\n\t\t\t\"https://dmitri.shuralyov.com/gpu/mtl/...\",\n",
                      "markdown": "`\t\t\t\"https://github.com/gonum/gonum/raw/v0.6.1/doc.go\",\n\t\t},\n\t\t{\n\t\t\t\"custom with gotools at repo root\",\n\t\t\t\"dmitri.shuralyov.com/gpu/mtl\", \"v0.0.0-20191203043605-d42048ed14fd\", \"mtl.go\",\n\n\t\t\t\"https://dmitri.shuralyov.com/gpu/mtl/...\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/internal/third_party/pkgsite/source/source_test.go"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 21,
                  "endLine": 93,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\t\t\t\"https://github.com/pkg/errors/raw/v0.8.1/errors.go\",\n\t\t},\n\t\t{\n\t\t\t\"github module not at repo root\",\n\t\t\t\"github.com/hashicorp/consul/sdk\", \"v0.2.0\", \"freeport/freeport.go\",\n\n\t\t\t\"https://github.com/hashicorp/consul\",\n",
                    "rendered": {
                      "text": "\t\t\t\"https://github.com/pkg/errors/raw/v0.8.1/errors.go\",\n\t\t},\n\t\t{\n\t\t\t\"github module not at repo root\",\n\t\t\t\"github.com/hashicorp/consul/sdk\", \"v0.2.0\", \"freeport/freeport.go\",\n\n\t\t\t\"https://github.com/hashicorp/consul\",\n",
                      "markdown": "`\t\t\t\"https://github.com/pkg/errors/raw/v0.8.1/errors.go\",\n\t\t},\n\t\t{\n\t\t\t\"github module not at repo root\",\n\t\t\t\"github.com/hashicorp/consul/sdk\", \"v0.2.0\", \"freeport/freeport.go\",\n\n\t\t\t\"https://github.com/hashicorp/consul\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/internal/third_party/pkgsite/source/source_test.go"
                },
                "region": {
                  "startLine": 83,
                  "startColumn": 17,
                  "endLine": 83,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\t\t\"\",\n\t\t},\n\t\t{\n\t\t\t\"github module at repo root\",\n\t\t\t\"github.com/pkg/errors\", \"v0.8.1\", \"errors.go\",\n\n\t\t\t\"https://github.com/pkg/errors\",\n",
                    "rendered": {
                      "text": "\t\t\t\"\",\n\t\t},\n\t\t{\n\t\t\t\"github module at repo root\",\n\t\t\t\"github.com/pkg/errors\", \"v0.8.1\", \"errors.go\",\n\n\t\t\t\"https://github.com/pkg/errors\",\n",
                      "markdown": "`\t\t\t\"\",\n\t\t},\n\t\t{\n\t\t\t\"github module at repo root\",\n\t\t\t\"github.com/pkg/errors\", \"v0.8.1\", \"errors.go\",\n\n\t\t\t\"https://github.com/pkg/errors\",\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/internal/third_party/pkgsite/source/source_test.go"
                },
                "region": {
                  "startLine": 887,
                  "startColumn": 50,
                  "endLine": 887,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\t// Multiple go-import meta tags; one of which is a vgo-special mod vcs type\n\t\"http://myitcv.io/blah2\": `<!DOCTYPE html><html><head>` +\n\t\t`<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>` +\n\t\t`<meta name=\"go-import\" content=\"myitcv.io/blah2 git https://github.com/myitcv/x\">` +\n\t\t`<meta name=\"go-import\" content=\"myitcv.io/blah2 mod https://raw.githubusercontent.com/myitcv/pubx/master\">` +\n\t\t`</head>`,\n}\n",
                    "rendered": {
                      "text": "\t// Multiple go-import meta tags; one of which is a vgo-special mod vcs type\n\t\"http://myitcv.io/blah2\": `<!DOCTYPE html><html><head>` +\n\t\t`<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>` +\n\t\t`<meta name=\"go-import\" content=\"myitcv.io/blah2 git https://github.com/myitcv/x\">` +\n\t\t`<meta name=\"go-import\" content=\"myitcv.io/blah2 mod https://raw.githubusercontent.com/myitcv/pubx/master\">` +\n\t\t`</head>`,\n}\n",
                      "markdown": "`\t// Multiple go-import meta tags; one of which is a vgo-special mod vcs type\n\t\"http://myitcv.io/blah2\": `<!DOCTYPE html><html><head>` +\n\t\t`<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>` +\n\t\t`<meta name=\"go-import\" content=\"myitcv.io/blah2 git https://github.com/myitcv/x\">` +\n\t\t`<meta name=\"go-import\" content=\"myitcv.io/blah2 mod https://raw.githubusercontent.com/myitcv/pubx/master\">` +\n\t\t`</head>`,\n}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/internal/third_party/pkgsite/source/source_test.go"
                },
                "region": {
                  "startLine": 879,
                  "startColumn": 54,
                  "endLine": 879,
                  "endColumn": 59,
                  "snippet": {
                    "text": "kage with go-source meta tag, where {file} appears on the right of '#' in the file field URL template.\n\t\"https://azul3d.org/examples/abs\": `<!DOCTYPE html><html><head>` +\n\t\t`<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>` +\n\t\t`<meta name=\"go-import\" content=\"azul3d.org/examples git https://github.com/azul3d/examples\">` +\n\t\t`<meta name=\"go-source\" content=\"azul3d.org/examples https://github.com/azul3d/examples https://gotools.org/azul3d.org/examples{/dir} https://gotools.org/azul3d.org/examples{/dir}#{file}-L{line}\">` +\n\t\t`<meta http-equiv=\"refresh\" content=\"0; url=https://godo",
                    "rendered": {
                      "text": "kage with go-source meta tag, where {file} appears on the right of '#' in the file field URL template.\n\t\"https://azul3d.org/examples/abs\": `<!DOCTYPE html><html><head>` +\n\t\t`<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>` +\n\t\t`<meta name=\"go-import\" content=\"azul3d.org/examples git https://github.com/azul3d/examples\">` +\n\t\t`<meta name=\"go-source\" content=\"azul3d.org/examples https://github.com/azul3d/examples https://gotools.org/azul3d.org/examples{/dir} https://gotools.org/azul3d.org/examples{/dir}#{file}-L{line}\">` +\n\t\t`<meta http-equiv=\"refresh\" content=\"0; url=https://godo",
                      "markdown": "`kage with go-source meta tag, where {file} appears on the right of '#' in the file field URL template.\n\t\"https://azul3d.org/examples/abs\": `<!DOCTYPE html><html><head>` +\n\t\t`<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>` +\n\t\t`<meta name=\"go-import\" content=\"azul3d.org/examples git https://github.com/azul3d/examples\">` +\n\t\t`<meta name=\"go-source\" content=\"azul3d.org/examples https://github.com/azul3d/examples https://gotools.org/azul3d.org/examples{/dir} https://gotools.org/azul3d.org/examples{/dir}#{file}-L{line}\">` +\n\t\t`<meta http-equiv=\"refresh\" content=\"0; url=https://godo`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/internal/third_party/pkgsite/source/source_test.go"
                },
                "region": {
                  "startLine": 875,
                  "startColumn": 58,
                  "endLine": 875,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\t\"https://bob.com/bad/github\": `\n\t\t<head><meta name=\"go-import\" content=\"bob.com/bad/github git https://github.com/bob/bad/&quot;&gt;$\">`,\n\t\"https://bob.com/bad/apache\": `\n\t\t<head><meta name=\"go-import\" content=\"bob.com/bad/apache git https://git.apache.org/&gt;$\">`,\n\t// Package with go-source meta tag, where {file} appears on the right of '#' in the file field URL template.\n\t\"https://azul3d.org/examples/abs\": `<!DOCTYPE html><html><head>` +\n\t\t`<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>` +\n",
                    "rendered": {
                      "text": "\t\"https://bob.com/bad/github\": `\n\t\t<head><meta name=\"go-import\" content=\"bob.com/bad/github git https://github.com/bob/bad/&quot;&gt;$\">`,\n\t\"https://bob.com/bad/apache\": `\n\t\t<head><meta name=\"go-import\" content=\"bob.com/bad/apache git https://git.apache.org/&gt;$\">`,\n\t// Package with go-source meta tag, where {file} appears on the right of '#' in the file field URL template.\n\t\"https://azul3d.org/examples/abs\": `<!DOCTYPE html><html><head>` +\n\t\t`<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>` +\n",
                      "markdown": "`\t\"https://bob.com/bad/github\": `\n\t\t<head><meta name=\"go-import\" content=\"bob.com/bad/github git https://github.com/bob/bad/&quot;&gt;$\">`,\n\t\"https://bob.com/bad/apache\": `\n\t\t<head><meta name=\"go-import\" content=\"bob.com/bad/apache git https://git.apache.org/&gt;$\">`,\n\t// Package with go-source meta tag, where {file} appears on the right of '#' in the file field URL template.\n\t\"https://azul3d.org/examples/abs\": `<!DOCTYPE html><html><head>` +\n\t\t`<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>` +\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/internal/third_party/pkgsite/source/source_test.go"
                },
                "region": {
                  "startLine": 873,
                  "startColumn": 58,
                  "endLine": 873,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\t// Package at in sub-directory of a Git repo.\n\t\"https://bob.com/pkg/sub\": `<head> <meta name=\"go-import\" content=\"bob.com/pkg git https://vcs.net/bob/pkg.git\">`,\n\t\"https://bob.com/bad/github\": `\n\t\t<head><meta name=\"go-import\" content=\"bob.com/bad/github git https://github.com/bob/bad/&quot;&gt;$\">`,\n\t\"https://bob.com/bad/apache\": `\n\t\t<head><meta name=\"go-import\" content=\"bob.com/bad/apache git https://git.apache.org/&gt;$\">`,\n\t// Package with go-source meta tag, where {file} appears on the right of '#' in the file field URL template.\n",
                    "rendered": {
                      "text": "\t// Package at in sub-directory of a Git repo.\n\t\"https://bob.com/pkg/sub\": `<head> <meta name=\"go-import\" content=\"bob.com/pkg git https://vcs.net/bob/pkg.git\">`,\n\t\"https://bob.com/bad/github\": `\n\t\t<head><meta name=\"go-import\" content=\"bob.com/bad/github git https://github.com/bob/bad/&quot;&gt;$\">`,\n\t\"https://bob.com/bad/apache\": `\n\t\t<head><meta name=\"go-import\" content=\"bob.com/bad/apache git https://git.apache.org/&gt;$\">`,\n\t// Package with go-source meta tag, where {file} appears on the right of '#' in the file field URL template.\n",
                      "markdown": "`\t// Package at in sub-directory of a Git repo.\n\t\"https://bob.com/pkg/sub\": `<head> <meta name=\"go-import\" content=\"bob.com/pkg git https://vcs.net/bob/pkg.git\">`,\n\t\"https://bob.com/bad/github\": `\n\t\t<head><meta name=\"go-import\" content=\"bob.com/bad/github git https://github.com/bob/bad/&quot;&gt;$\">`,\n\t\"https://bob.com/bad/apache\": `\n\t\t<head><meta name=\"go-import\" content=\"bob.com/bad/apache git https://git.apache.org/&gt;$\">`,\n\t// Package with go-source meta tag, where {file} appears on the right of '#' in the file field URL template.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/internal/third_party/pkgsite/source/source_test.go"
                },
                "region": {
                  "startLine": 871,
                  "startColumn": 79,
                  "endLine": 871,
                  "endColumn": 84,
                  "snippet": {
                    "text": "\t// Package at root of a Git repo.\n\t\"https://bob.com/pkg\": `<head> <meta name=\"go-import\" content=\"bob.com/pkg git https://vcs.net/bob/pkg.git\">`,\n\t// Package at in sub-directory of a Git repo.\n\t\"https://bob.com/pkg/sub\": `<head> <meta name=\"go-import\" content=\"bob.com/pkg git https://vcs.net/bob/pkg.git\">`,\n\t\"https://bob.com/bad/github\": `\n\t\t<head><meta name=\"go-import\" content=\"bob.com/bad/github git https://github.com/bob/bad/&quot;&gt;$\">`,\n\t\"https://bob.com/bad/apache\": `\n",
                    "rendered": {
                      "text": "\t// Package at root of a Git repo.\n\t\"https://bob.com/pkg\": `<head> <meta name=\"go-import\" content=\"bob.com/pkg git https://vcs.net/bob/pkg.git\">`,\n\t// Package at in sub-directory of a Git repo.\n\t\"https://bob.com/pkg/sub\": `<head> <meta name=\"go-import\" content=\"bob.com/pkg git https://vcs.net/bob/pkg.git\">`,\n\t\"https://bob.com/bad/github\": `\n\t\t<head><meta name=\"go-import\" content=\"bob.com/bad/github git https://github.com/bob/bad/&quot;&gt;$\">`,\n\t\"https://bob.com/bad/apache\": `\n",
                      "markdown": "`\t// Package at root of a Git repo.\n\t\"https://bob.com/pkg\": `<head> <meta name=\"go-import\" content=\"bob.com/pkg git https://vcs.net/bob/pkg.git\">`,\n\t// Package at in sub-directory of a Git repo.\n\t\"https://bob.com/pkg/sub\": `<head> <meta name=\"go-import\" content=\"bob.com/pkg git https://vcs.net/bob/pkg.git\">`,\n\t\"https://bob.com/bad/github\": `\n\t\t<head><meta name=\"go-import\" content=\"bob.com/bad/github git https://github.com/bob/bad/&quot;&gt;$\">`,\n\t\"https://bob.com/bad/apache\": `\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/internal/third_party/pkgsite/source/source_test.go"
                },
                "region": {
                  "startLine": 869,
                  "startColumn": 75,
                  "endLine": 869,
                  "endColumn": 80,
                  "snippet": {
                    "text": "\t\t<meta name=\"go-source\" content=\"alice.org/pkg _ foo bar\">\n\t</head>`,\n\t// Package at root of a Git repo.\n\t\"https://bob.com/pkg\": `<head> <meta name=\"go-import\" content=\"bob.com/pkg git https://vcs.net/bob/pkg.git\">`,\n\t// Package at in sub-directory of a Git repo.\n\t\"https://bob.com/pkg/sub\": `<head> <meta name=\"go-import\" content=\"bob.com/pkg git https://vcs.net/bob/pkg.git\">`,\n\t\"https://bob.com/bad/github\": `\n",
                    "rendered": {
                      "text": "\t\t<meta name=\"go-source\" content=\"alice.org/pkg _ foo bar\">\n\t</head>`,\n\t// Package at root of a Git repo.\n\t\"https://bob.com/pkg\": `<head> <meta name=\"go-import\" content=\"bob.com/pkg git https://vcs.net/bob/pkg.git\">`,\n\t// Package at in sub-directory of a Git repo.\n\t\"https://bob.com/pkg/sub\": `<head> <meta name=\"go-import\" content=\"bob.com/pkg git https://vcs.net/bob/pkg.git\">`,\n\t\"https://bob.com/bad/github\": `\n",
                      "markdown": "`\t\t<meta name=\"go-source\" content=\"alice.org/pkg _ foo bar\">\n\t</head>`,\n\t// Package at root of a Git repo.\n\t\"https://bob.com/pkg\": `<head> <meta name=\"go-import\" content=\"bob.com/pkg git https://vcs.net/bob/pkg.git\">`,\n\t// Package at in sub-directory of a Git repo.\n\t\"https://bob.com/pkg/sub\": `<head> <meta name=\"go-import\" content=\"bob.com/pkg git https://vcs.net/bob/pkg.git\">`,\n\t\"https://bob.com/bad/github\": `\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/internal/third_party/pkgsite/source/source_test.go"
                },
                "region": {
                  "startLine": 865,
                  "startColumn": 47,
                  "endLine": 865,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\n\t// go-source repo defaults to go-import\n\t\"http://alice.org/pkg/default\": `<head>\n\t\t<meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\">\n\t\t<meta name=\"go-source\" content=\"alice.org/pkg _ foo bar\">\n\t</head>`,\n\t// Package at root of a Git repo.\n",
                    "rendered": {
                      "text": "\n\t// go-source repo defaults to go-import\n\t\"http://alice.org/pkg/default\": `<head>\n\t\t<meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\">\n\t\t<meta name=\"go-source\" content=\"alice.org/pkg _ foo bar\">\n\t</head>`,\n\t// Package at root of a Git repo.\n",
                      "markdown": "`\n\t// go-source repo defaults to go-import\n\t\"http://alice.org/pkg/default\": `<head>\n\t\t<meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\">\n\t\t<meta name=\"go-source\" content=\"alice.org/pkg _ foo bar\">\n\t</head>`,\n\t// Package at root of a Git repo.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/internal/third_party/pkgsite/source/source_test.go"
                },
                "region": {
                  "startLine": 861,
                  "startColumn": 48,
                  "endLine": 861,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\t\t`<meta name=\"go-import\" content=\"alice.org/other git https://github.com/alice/other\">` +\n\t\t`</head>` +\n\t\t// go-import outside of head\n\t\t`<meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\">`,\n\n\t// go-source repo defaults to go-import\n\t\"http://alice.org/pkg/default\": `<head>\n",
                    "rendered": {
                      "text": "\t\t`<meta name=\"go-import\" content=\"alice.org/other git https://github.com/alice/other\">` +\n\t\t`</head>` +\n\t\t// go-import outside of head\n\t\t`<meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\">`,\n\n\t// go-source repo defaults to go-import\n\t\"http://alice.org/pkg/default\": `<head>\n",
                      "markdown": "`\t\t`<meta name=\"go-import\" content=\"alice.org/other git https://github.com/alice/other\">` +\n\t\t`</head>` +\n\t\t// go-import outside of head\n\t\t`<meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\">`,\n\n\t// go-source repo defaults to go-import\n\t\"http://alice.org/pkg/default\": `<head>\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/internal/third_party/pkgsite/source/source_test.go"
                },
                "region": {
                  "startLine": 858,
                  "startColumn": 50,
                  "endLine": 858,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\t\t// meta tag for a different package\n\t\t`<meta name=\"go-import\" content=\"alice.org/other git https://github.com/alice/other\">` +\n\t\t// meta tag for a different package\n\t\t`<meta name=\"go-import\" content=\"alice.org/other git https://github.com/alice/other\">` +\n\t\t`</head>` +\n\t\t// go-import outside of head\n\t\t`<meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\">`,\n",
                    "rendered": {
                      "text": "\t\t// meta tag for a different package\n\t\t`<meta name=\"go-import\" content=\"alice.org/other git https://github.com/alice/other\">` +\n\t\t// meta tag for a different package\n\t\t`<meta name=\"go-import\" content=\"alice.org/other git https://github.com/alice/other\">` +\n\t\t`</head>` +\n\t\t// go-import outside of head\n\t\t`<meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\">`,\n",
                      "markdown": "`\t\t// meta tag for a different package\n\t\t`<meta name=\"go-import\" content=\"alice.org/other git https://github.com/alice/other\">` +\n\t\t// meta tag for a different package\n\t\t`<meta name=\"go-import\" content=\"alice.org/other git https://github.com/alice/other\">` +\n\t\t`</head>` +\n\t\t// go-import outside of head\n\t\t`<meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\">`,\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/internal/third_party/pkgsite/source/source_test.go"
                },
                "region": {
                  "startLine": 856,
                  "startColumn": 50,
                  "endLine": 856,
                  "endColumn": 55,
                  "snippet": {
                    "text": "\t\t// go-source with wrong number of fields\n\t\t`<meta name=\"go-source\" content=\"alice.org/pkg blah\">` +\n\t\t// meta tag for a different package\n\t\t`<meta name=\"go-import\" content=\"alice.org/other git https://github.com/alice/other\">` +\n\t\t// meta tag for a different package\n\t\t`<meta name=\"go-import\" content=\"alice.org/other git https://github.com/alice/other\">` +\n\t\t`</head>` +\n",
                    "rendered": {
                      "text": "\t\t// go-source with wrong number of fields\n\t\t`<meta name=\"go-source\" content=\"alice.org/pkg blah\">` +\n\t\t// meta tag for a different package\n\t\t`<meta name=\"go-import\" content=\"alice.org/other git https://github.com/alice/other\">` +\n\t\t// meta tag for a different package\n\t\t`<meta name=\"go-import\" content=\"alice.org/other git https://github.com/alice/other\">` +\n\t\t`</head>` +\n",
                      "markdown": "`\t\t// go-source with wrong number of fields\n\t\t`<meta name=\"go-source\" content=\"alice.org/pkg blah\">` +\n\t\t// meta tag for a different package\n\t\t`<meta name=\"go-import\" content=\"alice.org/other git https://github.com/alice/other\">` +\n\t\t// meta tag for a different package\n\t\t`<meta name=\"go-import\" content=\"alice.org/other git https://github.com/alice/other\">` +\n\t\t`</head>` +\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/internal/third_party/pkgsite/source/source_test.go"
                },
                "region": {
                  "startLine": 848,
                  "startColumn": 48,
                  "endLine": 848,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\t\t// go-source before go-meta\n\t\t`<meta name=\"go-source\" content=\"alice.org/pkg http://alice.org/pkg http://alice.org/pkg{/dir} http://alice.org/pkg{/dir}?f={file}#Line{line}\">` +\n\t\t// go-import tag for the package\n\t\t`<meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\">` +\n\t\t// go-import with wrong number of fields\n\t\t`<meta name=\"go-import\" content=\"alice.org/pkg https://github.com/alice/pkg\">` +\n\t\t// go-import with no fields\n",
                    "rendered": {
                      "text": "\t\t// go-source before go-meta\n\t\t`<meta name=\"go-source\" content=\"alice.org/pkg http://alice.org/pkg http://alice.org/pkg{/dir} http://alice.org/pkg{/dir}?f={file}#Line{line}\">` +\n\t\t// go-import tag for the package\n\t\t`<meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\">` +\n\t\t// go-import with wrong number of fields\n\t\t`<meta name=\"go-import\" content=\"alice.org/pkg https://github.com/alice/pkg\">` +\n\t\t// go-import with no fields\n",
                      "markdown": "`\t\t// go-source before go-meta\n\t\t`<meta name=\"go-source\" content=\"alice.org/pkg http://alice.org/pkg http://alice.org/pkg{/dir} http://alice.org/pkg{/dir}?f={file}#Line{line}\">` +\n\t\t// go-import tag for the package\n\t\t`<meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\">` +\n\t\t// go-import with wrong number of fields\n\t\t`<meta name=\"go-import\" content=\"alice.org/pkg https://github.com/alice/pkg\">` +\n\t\t// go-import with no fields\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/internal/third_party/pkgsite/source/source_test.go"
                },
                "region": {
                  "startLine": 839,
                  "startColumn": 48,
                  "endLine": 839,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\t\t`<meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\">`,\n\t// Package with go-source meta tag.\n\t\"https://alice.org/pkg/source\": `<head>` +\n\t\t`<meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\">` +\n\t\t`<meta name=\"go-source\" content=\"alice.org/pkg http://alice.org/pkg http://alice.org/pkg{/dir} http://alice.org/pkg{/dir}?f={file}#Line{line}\">`,\n\t\"https://alice.org/pkg/ignore\": `<head>` +\n\t\t`<title>Hello</title>` +\n",
                    "rendered": {
                      "text": "\t\t`<meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\">`,\n\t// Package with go-source meta tag.\n\t\"https://alice.org/pkg/source\": `<head>` +\n\t\t`<meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\">` +\n\t\t`<meta name=\"go-source\" content=\"alice.org/pkg http://alice.org/pkg http://alice.org/pkg{/dir} http://alice.org/pkg{/dir}?f={file}#Line{line}\">`,\n\t\"https://alice.org/pkg/ignore\": `<head>` +\n\t\t`<title>Hello</title>` +\n",
                      "markdown": "`\t\t`<meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\">`,\n\t// Package with go-source meta tag.\n\t\"https://alice.org/pkg/source\": `<head>` +\n\t\t`<meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\">` +\n\t\t`<meta name=\"go-source\" content=\"alice.org/pkg http://alice.org/pkg http://alice.org/pkg{/dir} http://alice.org/pkg{/dir}?f={file}#Line{line}\">`,\n\t\"https://alice.org/pkg/ignore\": `<head>` +\n\t\t`<title>Hello</title>` +\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/internal/third_party/pkgsite/source/source_test.go"
                },
                "region": {
                  "startLine": 836,
                  "startColumn": 48,
                  "endLine": 836,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\t// More than one matching meta tag.\n\t\"http://alice.org/pkg/multiple\": `<head> ` +\n\t\t`<meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\">` +\n\t\t`<meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\">`,\n\t// Package with go-source meta tag.\n\t\"https://alice.org/pkg/source\": `<head>` +\n\t\t`<meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\">` +\n",
                    "rendered": {
                      "text": "\t// More than one matching meta tag.\n\t\"http://alice.org/pkg/multiple\": `<head> ` +\n\t\t`<meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\">` +\n\t\t`<meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\">`,\n\t// Package with go-source meta tag.\n\t\"https://alice.org/pkg/source\": `<head>` +\n\t\t`<meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\">` +\n",
                      "markdown": "`\t// More than one matching meta tag.\n\t\"http://alice.org/pkg/multiple\": `<head> ` +\n\t\t`<meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\">` +\n\t\t`<meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\">`,\n\t// Package with go-source meta tag.\n\t\"https://alice.org/pkg/source\": `<head>` +\n\t\t`<meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\">` +\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/internal/third_party/pkgsite/source/source_test.go"
                },
                "region": {
                  "startLine": 835,
                  "startColumn": 48,
                  "endLine": 835,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\t\"https://alice.org/pkg/mismatch\": `<head> <meta name=\"go-import\" content=\"alice.org/pkg hg https://github.com/alice/pkg\">`,\n\t// More than one matching meta tag.\n\t\"http://alice.org/pkg/multiple\": `<head> ` +\n\t\t`<meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\">` +\n\t\t`<meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\">`,\n\t// Package with go-source meta tag.\n\t\"https://alice.org/pkg/source\": `<head>` +\n",
                    "rendered": {
                      "text": "\t\"https://alice.org/pkg/mismatch\": `<head> <meta name=\"go-import\" content=\"alice.org/pkg hg https://github.com/alice/pkg\">`,\n\t// More than one matching meta tag.\n\t\"http://alice.org/pkg/multiple\": `<head> ` +\n\t\t`<meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\">` +\n\t\t`<meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\">`,\n\t// Package with go-source meta tag.\n\t\"https://alice.org/pkg/source\": `<head>` +\n",
                      "markdown": "`\t\"https://alice.org/pkg/mismatch\": `<head> <meta name=\"go-import\" content=\"alice.org/pkg hg https://github.com/alice/pkg\">`,\n\t// More than one matching meta tag.\n\t\"http://alice.org/pkg/multiple\": `<head> ` +\n\t\t`<meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\">` +\n\t\t`<meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\">`,\n\t// Package with go-source meta tag.\n\t\"https://alice.org/pkg/source\": `<head>` +\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/internal/third_party/pkgsite/source/source_test.go"
                },
                "region": {
                  "startLine": 830,
                  "startColumn": 83,
                  "endLine": 830,
                  "endColumn": 88,
                  "snippet": {
                    "text": "\t// Package in sub-directory.\n\t\"https://alice.org/pkg/sub\": `<head> <meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\"><body>`,\n\t// Fallback to http.\n\t\"http://alice.org/pkg/http\": `<head> <meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\">`,\n\t// Meta tag in sub-directory does not match meta tag at root.\n\t\"https://alice.org/pkg/mismatch\": `<head> <meta name=\"go-import\" content=\"alice.org/pkg hg https://github.com/alice/pkg\">`,\n\t// More than one matching meta tag.\n",
                    "rendered": {
                      "text": "\t// Package in sub-directory.\n\t\"https://alice.org/pkg/sub\": `<head> <meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\"><body>`,\n\t// Fallback to http.\n\t\"http://alice.org/pkg/http\": `<head> <meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\">`,\n\t// Meta tag in sub-directory does not match meta tag at root.\n\t\"https://alice.org/pkg/mismatch\": `<head> <meta name=\"go-import\" content=\"alice.org/pkg hg https://github.com/alice/pkg\">`,\n\t// More than one matching meta tag.\n",
                      "markdown": "`\t// Package in sub-directory.\n\t\"https://alice.org/pkg/sub\": `<head> <meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\"><body>`,\n\t// Fallback to http.\n\t\"http://alice.org/pkg/http\": `<head> <meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\">`,\n\t// Meta tag in sub-directory does not match meta tag at root.\n\t\"https://alice.org/pkg/mismatch\": `<head> <meta name=\"go-import\" content=\"alice.org/pkg hg https://github.com/alice/pkg\">`,\n\t// More than one matching meta tag.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/internal/third_party/pkgsite/source/source_test.go"
                },
                "region": {
                  "startLine": 828,
                  "startColumn": 83,
                  "endLine": 828,
                  "endColumn": 88,
                  "snippet": {
                    "text": "\t// Package at root of a GitHub repo.\n\t\"https://alice.org/pkg\": `<head> <meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\"></head>`,\n\t// Package in sub-directory.\n\t\"https://alice.org/pkg/sub\": `<head> <meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\"><body>`,\n\t// Fallback to http.\n\t\"http://alice.org/pkg/http\": `<head> <meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\">`,\n\t// Meta tag in sub-directory does not match meta tag at root.\n",
                    "rendered": {
                      "text": "\t// Package at root of a GitHub repo.\n\t\"https://alice.org/pkg\": `<head> <meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\"></head>`,\n\t// Package in sub-directory.\n\t\"https://alice.org/pkg/sub\": `<head> <meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\"><body>`,\n\t// Fallback to http.\n\t\"http://alice.org/pkg/http\": `<head> <meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\">`,\n\t// Meta tag in sub-directory does not match meta tag at root.\n",
                      "markdown": "`\t// Package at root of a GitHub repo.\n\t\"https://alice.org/pkg\": `<head> <meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\"></head>`,\n\t// Package in sub-directory.\n\t\"https://alice.org/pkg/sub\": `<head> <meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\"><body>`,\n\t// Fallback to http.\n\t\"http://alice.org/pkg/http\": `<head> <meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\">`,\n\t// Meta tag in sub-directory does not match meta tag at root.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/internal/third_party/pkgsite/source/source_test.go"
                },
                "region": {
                  "startLine": 826,
                  "startColumn": 79,
                  "endLine": 826,
                  "endColumn": 84,
                  "snippet": {
                    "text": "\nvar testWeb = map[string]string{\n\t// Package at root of a GitHub repo.\n\t\"https://alice.org/pkg\": `<head> <meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\"></head>`,\n\t// Package in sub-directory.\n\t\"https://alice.org/pkg/sub\": `<head> <meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\"><body>`,\n\t// Fallback to http.\n",
                    "rendered": {
                      "text": "\nvar testWeb = map[string]string{\n\t// Package at root of a GitHub repo.\n\t\"https://alice.org/pkg\": `<head> <meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\"></head>`,\n\t// Package in sub-directory.\n\t\"https://alice.org/pkg/sub\": `<head> <meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\"><body>`,\n\t// Fallback to http.\n",
                      "markdown": "`\nvar testWeb = map[string]string{\n\t// Package at root of a GitHub repo.\n\t\"https://alice.org/pkg\": `<head> <meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\"></head>`,\n\t// Package in sub-directory.\n\t\"https://alice.org/pkg/sub\": `<head> <meta name=\"go-import\" content=\"alice.org/pkg git https://github.com/alice/pkg\"><body>`,\n\t// Fallback to http.\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/internal/third_party/pkgsite/source/source_test.go"
                },
                "region": {
                  "startLine": 640,
                  "startColumn": 84,
                  "endLine": 640,
                  "endColumn": 90,
                  "snippet": {
                    "text": "\t\t\t\t}\n\t\t\t\tt.Fatal(err)\n\t\t\t}\n\t\t\tif diff := cmp.Diff(test.want, got, cmp.AllowUnexported(Info{}, urlTemplates{})); diff != \"\" {\n\t\t\t\tt.Errorf(\"mismatch (-want +got):\\n%s\", diff)\n\t\t\t}\n\t\t})\n",
                    "rendered": {
                      "text": "\t\t\t\t}\n\t\t\t\tt.Fatal(err)\n\t\t\t}\n\t\t\tif diff := cmp.Diff(test.want, got, cmp.AllowUnexported(Info{}, urlTemplates{})); diff != \"\" {\n\t\t\t\tt.Errorf(\"mismatch (-want +got):\\n%s\", diff)\n\t\t\t}\n\t\t})\n",
                      "markdown": "`\t\t\t\t}\n\t\t\t\tt.Fatal(err)\n\t\t\t}\n\t\t\tif diff := cmp.Diff(test.want, got, cmp.AllowUnexported(Info{}, urlTemplates{})); diff != \"\" {\n\t\t\t\tt.Errorf(\"mismatch (-want +got):\\n%s\", diff)\n\t\t\t}\n\t\t})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/internal/third_party/pkgsite/source/source_test.go"
                },
                "region": {
                  "startLine": 640,
                  "startColumn": 5,
                  "endLine": 640,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\t\t\t}\n\t\t\t\tt.Fatal(err)\n\t\t\t}\n\t\t\tif diff := cmp.Diff(test.want, got, cmp.AllowUnexported(Info{}, urlTemplates{})); diff != \"\" {\n\t\t\t\tt.Errorf(\"mismatch (-want +got):\\n%s\", diff)\n\t\t\t}\n\t\t})\n",
                    "rendered": {
                      "text": "\t\t\t\t}\n\t\t\t\tt.Fatal(err)\n\t\t\t}\n\t\t\tif diff := cmp.Diff(test.want, got, cmp.AllowUnexported(Info{}, urlTemplates{})); diff != \"\" {\n\t\t\t\tt.Errorf(\"mismatch (-want +got):\\n%s\", diff)\n\t\t\t}\n\t\t})\n",
                      "markdown": "`\t\t\t\t}\n\t\t\t\tt.Fatal(err)\n\t\t\t}\n\t\t\tif diff := cmp.Diff(test.want, got, cmp.AllowUnexported(Info{}, urlTemplates{})); diff != \"\" {\n\t\t\t\tt.Errorf(\"mismatch (-want +got):\\n%s\", diff)\n\t\t\t}\n\t\t})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/internal/third_party/pkgsite/README.md"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 1,
                  "endLine": 14,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\nLocal modifications:\n\n- Update import paths.\n- Removed unused functions from pkgsite/internal/stdlib, pkgsite/internal/derrors,\n  pkgsite/internal/version to avoid other dependencies.\n- For pkgsite/internal/source, switched to use go log package, because glog conflicts with a test\n",
                    "rendered": {
                      "text": "\nLocal modifications:\n\n- Update import paths.\n- Removed unused functions from pkgsite/internal/stdlib, pkgsite/internal/derrors,\n  pkgsite/internal/version to avoid other dependencies.\n- For pkgsite/internal/source, switched to use go log package, because glog conflicts with a test\n",
                      "markdown": "`\nLocal modifications:\n\n- Update import paths.\n- Removed unused functions from pkgsite/internal/stdlib, pkgsite/internal/derrors,\n  pkgsite/internal/version to avoid other dependencies.\n- For pkgsite/internal/source, switched to use go log package, because glog conflicts with a test\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/internal/third_party/pkgsite/README.md"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 7,
                  "endLine": 9,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nThe entire source folder and be downloaded via:\n\n```bash\ncurl -LO https://go.googlesource.com/pkgsite/+archive/beceacdece62d95d6dc41a9b5f09da7b2a021020/internal.tar.gz\n```\n\nLocal modifications:\n",
                    "rendered": {
                      "text": "\nThe entire source folder and be downloaded via:\n\n```bash\ncurl -LO https://go.googlesource.com/pkgsite/+archive/beceacdece62d95d6dc41a9b5f09da7b2a021020/internal.tar.gz\n```\n\nLocal modifications:\n",
                      "markdown": "`\nThe entire source folder and be downloaded via:\n\n```bash\ncurl -LO https://go.googlesource.com/pkgsite/+archive/beceacdece62d95d6dc41a9b5f09da7b2a021020/internal.tar.gz\n```\n\nLocal modifications:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/licenses/testdata/unlicense/UNLICENSE"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 13,
                  "endLine": 11,
                  "endColumn": 17,
                  "snippet": {
                    "text": "In jurisdictions that recognize copyright laws, the author or authors\nof this software dedicate any and all copyright interest in the\nsoftware to the public domain. We make this dedication for the benefit\nof the public at large and to the detriment of our heirs and\nsuccessors. We intend this dedication to be an overt act of\nrelinquishment in perpetuity of all present and future rights to this\nsoftware under copyright law.\n",
                    "rendered": {
                      "text": "In jurisdictions that recognize copyright laws, the author or authors\nof this software dedicate any and all copyright interest in the\nsoftware to the public domain. We make this dedication for the benefit\nof the public at large and to the detriment of our heirs and\nsuccessors. We intend this dedication to be an overt act of\nrelinquishment in perpetuity of all present and future rights to this\nsoftware under copyright law.\n",
                      "markdown": "`In jurisdictions that recognize copyright laws, the author or authors\nof this software dedicate any and all copyright interest in the\nsoftware to the public domain. We make this dedication for the benefit\nof the public at large and to the detriment of our heirs and\nsuccessors. We intend this dedication to be an overt act of\nrelinquishment in perpetuity of all present and future rights to this\nsoftware under copyright law.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/check.go"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 71,
                  "endLine": 61,
                  "endColumn": 75,
                  "snippet": {
                    "text": "\thasLicenseType := len(disallowedLicenseTypes) > 0\n\n\tif hasLicenseNames && hasLicenseType {\n\t\treturn errors.New(\"allowed_licenses && disallowed_types can't be used at the same time\")\n\t}\n\n\tif !hasLicenseNames && !hasLicenseType {\n",
                    "rendered": {
                      "text": "\thasLicenseType := len(disallowedLicenseTypes) > 0\n\n\tif hasLicenseNames && hasLicenseType {\n\t\treturn errors.New(\"allowed_licenses && disallowed_types can't be used at the same time\")\n\t}\n\n\tif !hasLicenseNames && !hasLicenseType {\n",
                      "markdown": "`\thasLicenseType := len(disallowedLicenseTypes) > 0\n\n\tif hasLicenseNames && hasLicenseType {\n\t\treturn errors.New(\"allowed_licenses && disallowed_types can't be used at the same time\")\n\t}\n\n\tif !hasLicenseNames && !hasLicenseType {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/check.go"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 34,
                  "endLine": 85,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\n\tfor _, lib := range libs {\n\t\tif lib.LicenseFile == \"\" {\n\t\t\tfmt.Fprintf(os.Stderr, \"Did not find license for library '%v'.\\n\", lib)\n\t\t\tfound = true\n\t\t\tcontinue\n\t\t}\n",
                    "rendered": {
                      "text": "\n\tfor _, lib := range libs {\n\t\tif lib.LicenseFile == \"\" {\n\t\t\tfmt.Fprintf(os.Stderr, \"Did not find license for library '%v'.\\n\", lib)\n\t\t\tfound = true\n\t\t\tcontinue\n\t\t}\n",
                      "markdown": "`\n\tfor _, lib := range libs {\n\t\tif lib.LicenseFile == \"\" {\n\t\t\tfmt.Fprintf(os.Stderr, \"Did not find license for library '%v'.\\n\", lib)\n\t\t\tfound = true\n\t\t\tcontinue\n\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.github/workflows/go.yml"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 27,
                  "endLine": 29,
                  "endColumn": 32,
                  "snippet": {
                    "text": "      - name: Test\n        run: go test -v ./...\n      - name: Mod Tidy\n        run: go mod tidy && git diff --exit-code -- go.mod go.sum || (echo \"go modules are not tidy, run 'go mod tidy'.\" && exit 1)\n",
                    "rendered": {
                      "text": "      - name: Test\n        run: go test -v ./...\n      - name: Mod Tidy\n        run: go mod tidy && git diff --exit-code -- go.mod go.sum || (echo \"go modules are not tidy, run 'go mod tidy'.\" && exit 1)\n",
                      "markdown": "`      - name: Test\n        run: go test -v ./...\n      - name: Mod Tidy\n        run: go mod tidy && git diff --exit-code -- go.mod go.sum || (echo \"go modules are not tidy, run 'go mod tidy'.\" && exit 1)\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/CONTRIBUTING.md"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 20,
                  "endLine": 11,
                  "endColumn": 26,
                  "snippet": {
                    "text": "Contributions to this project must be accompanied by a Contributor License\nAgreement. You (or your employer) retain the copyright to your contribution;\nthis simply gives us permission to use and redistribute your contributions as\npart of the project. Head over to <https://cla.developers.google.com/> to see\nyour current agreements on file or to sign a new one.\n\nYou generally only need to submit a CLA once, so if you've already submitted one\n",
                    "rendered": {
                      "text": "Contributions to this project must be accompanied by a Contributor License\nAgreement. You (or your employer) retain the copyright to your contribution;\nthis simply gives us permission to use and redistribute your contributions as\npart of the project. Head over to <https://cla.developers.google.com/> to see\nyour current agreements on file or to sign a new one.\n\nYou generally only need to submit a CLA once, so if you've already submitted one\n",
                      "markdown": "`Contributions to this project must be accompanied by a Contributor License\nAgreement. You (or your employer) retain the copyright to your contribution;\nthis simply gives us permission to use and redistribute your contributions as\npart of the project. Head over to <https://cla.developers.google.com/> to see\nyour current agreements on file or to sign a new one.\n\nYou generally only need to submit a CLA once, so if you've already submitted one\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/internal/third_party/pkgsite/source/testdata/TestModuleInfo.replay"
                },
                "region": {
                  "startLine": 14159,
                  "startColumn": 12,
                  "endLine": 14159,
                  "endColumn": 54,
                  "snippet": {
                    "text": "            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"2b14823bdd98a502f466cb469219ae3b0d07ce7b\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n",
                    "rendered": {
                      "text": "            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"2b14823bdd98a502f466cb469219ae3b0d07ce7b\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n",
                      "markdown": "`            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"2b14823bdd98a502f466cb469219ae3b0d07ce7b\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/internal/third_party/pkgsite/source/testdata/TestModuleInfo.replay"
                },
                "region": {
                  "startLine": 12265,
                  "startColumn": 12,
                  "endLine": 12265,
                  "endColumn": 54,
                  "snippet": {
                    "text": "            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"565209ff703024f789f79afc507ceed8e9a5957d\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n",
                    "rendered": {
                      "text": "            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"565209ff703024f789f79afc507ceed8e9a5957d\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n",
                      "markdown": "`            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"565209ff703024f789f79afc507ceed8e9a5957d\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/internal/third_party/pkgsite/source/testdata/TestModuleInfo.replay"
                },
                "region": {
                  "startLine": 11737,
                  "startColumn": 16,
                  "endLine": 11737,
                  "endColumn": 78,
                  "snippet": {
                    "text": "            \"01FRNJN8QZQWGBNMQMW0BXS989\"\n          ]\n        },\n        \"Body\": \"UmVkaXJlY3RpbmcgdG8gaHR0cHM6Ly93d3cuZ29udW0ub3JnL3YxL2dvbnVt\"\n      }\n    },\n    {\n",
                    "rendered": {
                      "text": "            \"01FRNJN8QZQWGBNMQMW0BXS989\"\n          ]\n        },\n        \"Body\": \"UmVkaXJlY3RpbmcgdG8gaHR0cHM6Ly93d3cuZ29udW0ub3JnL3YxL2dvbnVt\"\n      }\n    },\n    {\n",
                      "markdown": "`            \"01FRNJN8QZQWGBNMQMW0BXS989\"\n          ]\n        },\n        \"Body\": \"UmVkaXJlY3RpbmcgdG8gaHR0cHM6Ly93d3cuZ29udW0ub3JnL3YxL2dvbnVt\"\n      }\n    },\n    {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/internal/third_party/pkgsite/source/testdata/TestModuleInfo.replay"
                },
                "region": {
                  "startLine": 11563,
                  "startColumn": 16,
                  "endLine": 11563,
                  "endColumn": 78,
                  "snippet": {
                    "text": "            \"01FRNJN8HJ3KCVPQW0V00Z5XVJ\"\n          ]\n        },\n        \"Body\": \"UmVkaXJlY3RpbmcgdG8gaHR0cHM6Ly93d3cuZ29udW0ub3JnL3YxL2dvbnVt\"\n      }\n    },\n    {\n",
                    "rendered": {
                      "text": "            \"01FRNJN8HJ3KCVPQW0V00Z5XVJ\"\n          ]\n        },\n        \"Body\": \"UmVkaXJlY3RpbmcgdG8gaHR0cHM6Ly93d3cuZ29udW0ub3JnL3YxL2dvbnVt\"\n      }\n    },\n    {\n",
                      "markdown": "`            \"01FRNJN8HJ3KCVPQW0V00Z5XVJ\"\n          ]\n        },\n        \"Body\": \"UmVkaXJlY3RpbmcgdG8gaHR0cHM6Ly93d3cuZ29udW0ub3JnL3YxL2dvbnVt\"\n      }\n    },\n    {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/internal/third_party/pkgsite/source/testdata/TestModuleInfo.replay"
                },
                "region": {
                  "startLine": 11490,
                  "startColumn": 12,
                  "endLine": 11490,
                  "endColumn": 54,
                  "snippet": {
                    "text": "            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"5216756d3e34f2db61a5286f78d99582b50468dd\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n",
                    "rendered": {
                      "text": "            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"5216756d3e34f2db61a5286f78d99582b50468dd\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n",
                      "markdown": "`            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"5216756d3e34f2db61a5286f78d99582b50468dd\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/internal/third_party/pkgsite/source/testdata/TestModuleInfo.replay"
                },
                "region": {
                  "startLine": 10962,
                  "startColumn": 12,
                  "endLine": 10962,
                  "endColumn": 54,
                  "snippet": {
                    "text": "            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"152d75f20805514cdf2895e5ce53c53cc66046c9\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n",
                    "rendered": {
                      "text": "            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"152d75f20805514cdf2895e5ce53c53cc66046c9\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n",
                      "markdown": "`            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"152d75f20805514cdf2895e5ce53c53cc66046c9\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/internal/third_party/pkgsite/source/testdata/TestModuleInfo.replay"
                },
                "region": {
                  "startLine": 10434,
                  "startColumn": 12,
                  "endLine": 10434,
                  "endColumn": 54,
                  "snippet": {
                    "text": "            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"57eb2fe565cc9c018e38e44bf168be79b56be7f6\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n",
                    "rendered": {
                      "text": "            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"57eb2fe565cc9c018e38e44bf168be79b56be7f6\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n",
                      "markdown": "`            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"57eb2fe565cc9c018e38e44bf168be79b56be7f6\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/internal/third_party/pkgsite/source/testdata/TestModuleInfo.replay"
                },
                "region": {
                  "startLine": 9874,
                  "startColumn": 12,
                  "endLine": 9874,
                  "endColumn": 54,
                  "snippet": {
                    "text": "            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"f8ec8142119a5ca7ebe27cc5a1000ee15909895b\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n",
                    "rendered": {
                      "text": "            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"f8ec8142119a5ca7ebe27cc5a1000ee15909895b\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n",
                      "markdown": "`            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"f8ec8142119a5ca7ebe27cc5a1000ee15909895b\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/internal/third_party/pkgsite/source/testdata/TestModuleInfo.replay"
                },
                "region": {
                  "startLine": 6012,
                  "startColumn": 16,
                  "endLine": 6012,
                  "endColumn": 170,
                  "snippet": {
                    "text": "            \"cloudflare\"\n          ]\n        },\n        \"Body\": \"PG1ldGEgbmFtZT0iZ28taW1wb3J0IiBjb250ZW50PSJnby5uaXF1aWQudGVjaC9jaXZpYy1zaXAtYXBpIGdpdCBodHRwczovL2JpdGJ1Y2tldC5vcmcvbmlxdWlkL2NpdmljLXNpcC1hcGkuZ2l0Ij4K\"\n      }\n    },\n    {\n",
                    "rendered": {
                      "text": "            \"cloudflare\"\n          ]\n        },\n        \"Body\": \"PG1ldGEgbmFtZT0iZ28taW1wb3J0IiBjb250ZW50PSJnby5uaXF1aWQudGVjaC9jaXZpYy1zaXAtYXBpIGdpdCBodHRwczovL2JpdGJ1Y2tldC5vcmcvbmlxdWlkL2NpdmljLXNpcC1hcGkuZ2l0Ij4K\"\n      }\n    },\n    {\n",
                      "markdown": "`            \"cloudflare\"\n          ]\n        },\n        \"Body\": \"PG1ldGEgbmFtZT0iZ28taW1wb3J0IiBjb250ZW50PSJnby5uaXF1aWQudGVjaC9jaXZpYy1zaXAtYXBpIGdpdCBodHRwczovL2JpdGJ1Y2tldC5vcmcvbmlxdWlkL2NpdmljLXNpcC1hcGkuZ2l0Ij4K\"\n      }\n    },\n    {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/internal/third_party/pkgsite/source/testdata/TestModuleInfo.replay"
                },
                "region": {
                  "startLine": 5927,
                  "startColumn": 12,
                  "endLine": 5927,
                  "endColumn": 54,
                  "snippet": {
                    "text": "            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"8fc87b2a071bc7c95729130720fef9fd2a2520be\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n",
                    "rendered": {
                      "text": "            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"8fc87b2a071bc7c95729130720fef9fd2a2520be\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n",
                      "markdown": "`            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"8fc87b2a071bc7c95729130720fef9fd2a2520be\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/internal/third_party/pkgsite/source/testdata/TestModuleInfo.replay"
                },
                "region": {
                  "startLine": 5369,
                  "startColumn": 12,
                  "endLine": 5369,
                  "endColumn": 54,
                  "snippet": {
                    "text": "            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"6c5bd239cefc0d3aa21ef2d1fbb15702749a60e2\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n",
                    "rendered": {
                      "text": "            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"6c5bd239cefc0d3aa21ef2d1fbb15702749a60e2\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n",
                      "markdown": "`            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"6c5bd239cefc0d3aa21ef2d1fbb15702749a60e2\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/internal/third_party/pkgsite/source/testdata/TestModuleInfo.replay"
                },
                "region": {
                  "startLine": 4887,
                  "startColumn": 12,
                  "endLine": 4887,
                  "endColumn": 54,
                  "snippet": {
                    "text": "            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"fe15c30e5444375f579c3f2e5e6392fc68040323\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n",
                    "rendered": {
                      "text": "            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"fe15c30e5444375f579c3f2e5e6392fc68040323\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n",
                      "markdown": "`            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"fe15c30e5444375f579c3f2e5e6392fc68040323\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/internal/third_party/pkgsite/source/testdata/TestModuleInfo.replay"
                },
                "region": {
                  "startLine": 4418,
                  "startColumn": 12,
                  "endLine": 4418,
                  "endColumn": 54,
                  "snippet": {
                    "text": "            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"bbe6d21e3cf49edfef02fd9a661cfab9652c07a9\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n",
                    "rendered": {
                      "text": "            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"bbe6d21e3cf49edfef02fd9a661cfab9652c07a9\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n",
                      "markdown": "`            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"bbe6d21e3cf49edfef02fd9a661cfab9652c07a9\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/internal/third_party/pkgsite/source/testdata/TestModuleInfo.replay"
                },
                "region": {
                  "startLine": 3894,
                  "startColumn": 12,
                  "endLine": 3894,
                  "endColumn": 54,
                  "snippet": {
                    "text": "            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"fb91dcbbdc7aa8cf935f45974ab9b49e1e01a930\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n",
                    "rendered": {
                      "text": "            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"fb91dcbbdc7aa8cf935f45974ab9b49e1e01a930\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n",
                      "markdown": "`            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"fb91dcbbdc7aa8cf935f45974ab9b49e1e01a930\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/internal/third_party/pkgsite/source/testdata/TestModuleInfo.replay"
                },
                "region": {
                  "startLine": 3425,
                  "startColumn": 12,
                  "endLine": 3425,
                  "endColumn": 54,
                  "snippet": {
                    "text": "            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"31525ef8ace70f7d1eeedbbb296e7b63052804a8\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n",
                    "rendered": {
                      "text": "            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"31525ef8ace70f7d1eeedbbb296e7b63052804a8\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n",
                      "markdown": "`            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"31525ef8ace70f7d1eeedbbb296e7b63052804a8\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/internal/third_party/pkgsite/source/testdata/TestModuleInfo.replay"
                },
                "region": {
                  "startLine": 2956,
                  "startColumn": 12,
                  "endLine": 2956,
                  "endColumn": 54,
                  "snippet": {
                    "text": "            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"e601da5ac95f02600a4c2fcdc8d203739000f6f4\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n",
                    "rendered": {
                      "text": "            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"e601da5ac95f02600a4c2fcdc8d203739000f6f4\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n",
                      "markdown": "`            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"e601da5ac95f02600a4c2fcdc8d203739000f6f4\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/internal/third_party/pkgsite/source/testdata/TestModuleInfo.replay"
                },
                "region": {
                  "startLine": 1944,
                  "startColumn": 12,
                  "endLine": 1944,
                  "endColumn": 54,
                  "snippet": {
                    "text": "            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"ae42b3b224919747eecfba79e6632b21adc7ad90\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n",
                    "rendered": {
                      "text": "            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"ae42b3b224919747eecfba79e6632b21adc7ad90\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n",
                      "markdown": "`            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"ae42b3b224919747eecfba79e6632b21adc7ad90\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/internal/third_party/pkgsite/source/testdata/TestModuleInfo.replay"
                },
                "region": {
                  "startLine": 1462,
                  "startColumn": 12,
                  "endLine": 1462,
                  "endColumn": 54,
                  "snippet": {
                    "text": "            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"99bf8f169a3a3f895cc142e12973af5f9e686ecd\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n",
                    "rendered": {
                      "text": "            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"99bf8f169a3a3f895cc142e12973af5f9e686ecd\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n",
                      "markdown": "`            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"99bf8f169a3a3f895cc142e12973af5f9e686ecd\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/internal/third_party/pkgsite/source/testdata/TestModuleInfo.replay"
                },
                "region": {
                  "startLine": 980,
                  "startColumn": 12,
                  "endLine": 980,
                  "endColumn": 54,
                  "snippet": {
                    "text": "            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"cdbe87b7457d3bb98fc4e0086bdd0caa9dfe180e\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n",
                    "rendered": {
                      "text": "            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"cdbe87b7457d3bb98fc4e0086bdd0caa9dfe180e\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n",
                      "markdown": "`            \"nosniff\"\n          ],\n          \"X-Fastly-Request-Id\": [\n            \"cdbe87b7457d3bb98fc4e0086bdd0caa9dfe180e\"\n          ],\n          \"X-Frame-Options\": [\n            \"deny\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/Dockerfile"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 20,
                  "endLine": 7,
                  "endColumn": 4,
                  "snippet": {
                    "text": "WORKDIR /go-licenses\n\nARG GOFLAGS=\"\"\nENV GOFLAGS=$GOFLAGS\nENV GO111MODULE=on\n\n# Download dependencies first - this should be cacheable.\nCOPY go.mod go.sum ./\n",
                    "rendered": {
                      "text": "WORKDIR /go-licenses\n\nARG GOFLAGS=\"\"\nENV GOFLAGS=$GOFLAGS\nENV GO111MODULE=on\n\n# Download dependencies first - this should be cacheable.\nCOPY go.mod go.sum ./\n",
                      "markdown": "`WORKDIR /go-licenses\n\nARG GOFLAGS=\"\"\nENV GOFLAGS=$GOFLAGS\nENV GO111MODULE=on\n\n# Download dependencies first - this should be cacheable.\nCOPY go.mod go.sum ./\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/Dockerfile"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 14,
                  "endLine": 6,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\nWORKDIR /go-licenses\n\nARG GOFLAGS=\"\"\nENV GOFLAGS=$GOFLAGS\nENV GO111MODULE=on\n\n# Download dependencies first - this should be cacheable.\n",
                    "rendered": {
                      "text": "\nWORKDIR /go-licenses\n\nARG GOFLAGS=\"\"\nENV GOFLAGS=$GOFLAGS\nENV GO111MODULE=on\n\n# Download dependencies first - this should be cacheable.\n",
                      "markdown": "`\nWORKDIR /go-licenses\n\nARG GOFLAGS=\"\"\nENV GOFLAGS=$GOFLAGS\nENV GO111MODULE=on\n\n# Download dependencies first - this should be cacheable.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/licenses/library_test.go"
                },
                "region": {
                  "startLine": 166,
                  "startColumn": 35,
                  "endLine": 166,
                  "endColumn": 41,
                  "snippet": {
                    "text": "\t\t\t}\n\n\t\t\tif diff := cmp.Diff(len(test.wantLibs), len(gotLibs)); diff != \"\" {\n\t\t\t\tt.Errorf(\"len(Libraries(_, %q)) diff (-want +got): %s\", test.importPath, diff)\n\t\t\t}\n\t\t})\n\t}\n",
                    "rendered": {
                      "text": "\t\t\t}\n\n\t\t\tif diff := cmp.Diff(len(test.wantLibs), len(gotLibs)); diff != \"\" {\n\t\t\t\tt.Errorf(\"len(Libraries(_, %q)) diff (-want +got): %s\", test.importPath, diff)\n\t\t\t}\n\t\t})\n\t}\n",
                      "markdown": "`\t\t\t}\n\n\t\t\tif diff := cmp.Diff(len(test.wantLibs), len(gotLibs)); diff != \"\" {\n\t\t\t\tt.Errorf(\"len(Libraries(_, %q)) diff (-want +got): %s\", test.importPath, diff)\n\t\t\t}\n\t\t})\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/licenses/library_test.go"
                },
                "region": {
                  "startLine": 165,
                  "startColumn": 57,
                  "endLine": 165,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\t\t\t\t}\n\t\t\t}\n\n\t\t\tif diff := cmp.Diff(len(test.wantLibs), len(gotLibs)); diff != \"\" {\n\t\t\t\tt.Errorf(\"len(Libraries(_, %q)) diff (-want +got): %s\", test.importPath, diff)\n\t\t\t}\n\t\t})\n",
                    "rendered": {
                      "text": "\t\t\t\t}\n\t\t\t}\n\n\t\t\tif diff := cmp.Diff(len(test.wantLibs), len(gotLibs)); diff != \"\" {\n\t\t\t\tt.Errorf(\"len(Libraries(_, %q)) diff (-want +got): %s\", test.importPath, diff)\n\t\t\t}\n\t\t})\n",
                      "markdown": "`\t\t\t\t}\n\t\t\t}\n\n\t\t\tif diff := cmp.Diff(len(test.wantLibs), len(gotLibs)); diff != \"\" {\n\t\t\t\tt.Errorf(\"len(Libraries(_, %q)) diff (-want +got): %s\", test.importPath, diff)\n\t\t\t}\n\t\t})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/licenses/library_test.go"
                },
                "region": {
                  "startLine": 165,
                  "startColumn": 5,
                  "endLine": 165,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\t\t\t}\n\t\t\t}\n\n\t\t\tif diff := cmp.Diff(len(test.wantLibs), len(gotLibs)); diff != \"\" {\n\t\t\t\tt.Errorf(\"len(Libraries(_, %q)) diff (-want +got): %s\", test.importPath, diff)\n\t\t\t}\n\t\t})\n",
                    "rendered": {
                      "text": "\t\t\t\t}\n\t\t\t}\n\n\t\t\tif diff := cmp.Diff(len(test.wantLibs), len(gotLibs)); diff != \"\" {\n\t\t\t\tt.Errorf(\"len(Libraries(_, %q)) diff (-want +got): %s\", test.importPath, diff)\n\t\t\t}\n\t\t})\n",
                      "markdown": "`\t\t\t\t}\n\t\t\t}\n\n\t\t\tif diff := cmp.Diff(len(test.wantLibs), len(gotLibs)); diff != \"\" {\n\t\t\t\tt.Errorf(\"len(Libraries(_, %q)) diff (-want +got): %s\", test.importPath, diff)\n\t\t\t}\n\t\t})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/licenses/library_test.go"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 44,
                  "endLine": 161,
                  "endColumn": 50,
                  "snippet": {
                    "text": "\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].LicenseFile diff (-want +got): %s\", test.importPath, i, diff)\n\t\t\t\t}\n\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].Licenses, gotLib.Licenses); diff != \"\" {\n\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].Licenses diff (-want +got): %s\", test.importPath, i, diff)\n\t\t\t\t}\n\t\t\t}\n\n",
                    "rendered": {
                      "text": "\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].LicenseFile diff (-want +got): %s\", test.importPath, i, diff)\n\t\t\t\t}\n\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].Licenses, gotLib.Licenses); diff != \"\" {\n\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].Licenses diff (-want +got): %s\", test.importPath, i, diff)\n\t\t\t\t}\n\t\t\t}\n\n",
                      "markdown": "`\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].LicenseFile diff (-want +got): %s\", test.importPath, i, diff)\n\t\t\t\t}\n\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].Licenses, gotLib.Licenses); diff != \"\" {\n\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].Licenses diff (-want +got): %s\", test.importPath, i, diff)\n\t\t\t\t}\n\t\t\t}\n\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/licenses/library_test.go"
                },
                "region": {
                  "startLine": 160,
                  "startColumn": 68,
                  "endLine": 160,
                  "endColumn": 74,
                  "snippet": {
                    "text": "\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].LicenseFile, gotLib.LicenseFile); diff != \"\" {\n\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].LicenseFile diff (-want +got): %s\", test.importPath, i, diff)\n\t\t\t\t}\n\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].Licenses, gotLib.Licenses); diff != \"\" {\n\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].Licenses diff (-want +got): %s\", test.importPath, i, diff)\n\t\t\t\t}\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].LicenseFile, gotLib.LicenseFile); diff != \"\" {\n\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].LicenseFile diff (-want +got): %s\", test.importPath, i, diff)\n\t\t\t\t}\n\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].Licenses, gotLib.Licenses); diff != \"\" {\n\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].Licenses diff (-want +got): %s\", test.importPath, i, diff)\n\t\t\t\t}\n\t\t\t}\n",
                      "markdown": "`\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].LicenseFile, gotLib.LicenseFile); diff != \"\" {\n\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].LicenseFile diff (-want +got): %s\", test.importPath, i, diff)\n\t\t\t\t}\n\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].Licenses, gotLib.Licenses); diff != \"\" {\n\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].Licenses diff (-want +got): %s\", test.importPath, i, diff)\n\t\t\t\t}\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/licenses/library_test.go"
                },
                "region": {
                  "startLine": 160,
                  "startColumn": 6,
                  "endLine": 160,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].LicenseFile, gotLib.LicenseFile); diff != \"\" {\n\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].LicenseFile diff (-want +got): %s\", test.importPath, i, diff)\n\t\t\t\t}\n\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].Licenses, gotLib.Licenses); diff != \"\" {\n\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].Licenses diff (-want +got): %s\", test.importPath, i, diff)\n\t\t\t\t}\n\t\t\t}\n",
                    "rendered": {
                      "text": "\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].LicenseFile, gotLib.LicenseFile); diff != \"\" {\n\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].LicenseFile diff (-want +got): %s\", test.importPath, i, diff)\n\t\t\t\t}\n\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].Licenses, gotLib.Licenses); diff != \"\" {\n\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].Licenses diff (-want +got): %s\", test.importPath, i, diff)\n\t\t\t\t}\n\t\t\t}\n",
                      "markdown": "`\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].LicenseFile, gotLib.LicenseFile); diff != \"\" {\n\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].LicenseFile diff (-want +got): %s\", test.importPath, i, diff)\n\t\t\t\t}\n\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].Licenses, gotLib.Licenses); diff != \"\" {\n\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].Licenses diff (-want +got): %s\", test.importPath, i, diff)\n\t\t\t\t}\n\t\t\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/licenses/library_test.go"
                },
                "region": {
                  "startLine": 158,
                  "startColumn": 47,
                  "endLine": 158,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].Name() diff (-want +got): %s\", test.importPath, i, diff)\n\t\t\t\t}\n\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].LicenseFile, gotLib.LicenseFile); diff != \"\" {\n\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].LicenseFile diff (-want +got): %s\", test.importPath, i, diff)\n\t\t\t\t}\n\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].Licenses, gotLib.Licenses); diff != \"\" {\n\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].Licenses diff (-want +got): %s\", test.importPath, i, diff)\n",
                    "rendered": {
                      "text": "\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].Name() diff (-want +got): %s\", test.importPath, i, diff)\n\t\t\t\t}\n\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].LicenseFile, gotLib.LicenseFile); diff != \"\" {\n\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].LicenseFile diff (-want +got): %s\", test.importPath, i, diff)\n\t\t\t\t}\n\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].Licenses, gotLib.Licenses); diff != \"\" {\n\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].Licenses diff (-want +got): %s\", test.importPath, i, diff)\n",
                      "markdown": "`\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].Name() diff (-want +got): %s\", test.importPath, i, diff)\n\t\t\t\t}\n\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].LicenseFile, gotLib.LicenseFile); diff != \"\" {\n\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].LicenseFile diff (-want +got): %s\", test.importPath, i, diff)\n\t\t\t\t}\n\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].Licenses, gotLib.Licenses); diff != \"\" {\n\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].Licenses diff (-want +got): %s\", test.importPath, i, diff)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/licenses/library_test.go"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 74,
                  "endLine": 157,
                  "endColumn": 80,
                  "snippet": {
                    "text": "\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].Name, gotLib.Name()); diff != \"\" {\n\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].Name() diff (-want +got): %s\", test.importPath, i, diff)\n\t\t\t\t}\n\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].LicenseFile, gotLib.LicenseFile); diff != \"\" {\n\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].LicenseFile diff (-want +got): %s\", test.importPath, i, diff)\n\t\t\t\t}\n\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].Licenses, gotLib.Licenses); diff != \"\" {\n",
                    "rendered": {
                      "text": "\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].Name, gotLib.Name()); diff != \"\" {\n\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].Name() diff (-want +got): %s\", test.importPath, i, diff)\n\t\t\t\t}\n\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].LicenseFile, gotLib.LicenseFile); diff != \"\" {\n\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].LicenseFile diff (-want +got): %s\", test.importPath, i, diff)\n\t\t\t\t}\n\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].Licenses, gotLib.Licenses); diff != \"\" {\n",
                      "markdown": "`\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].Name, gotLib.Name()); diff != \"\" {\n\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].Name() diff (-want +got): %s\", test.importPath, i, diff)\n\t\t\t\t}\n\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].LicenseFile, gotLib.LicenseFile); diff != \"\" {\n\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].LicenseFile diff (-want +got): %s\", test.importPath, i, diff)\n\t\t\t\t}\n\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].Licenses, gotLib.Licenses); diff != \"\" {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/licenses/library_test.go"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 6,
                  "endLine": 157,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].Name, gotLib.Name()); diff != \"\" {\n\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].Name() diff (-want +got): %s\", test.importPath, i, diff)\n\t\t\t\t}\n\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].LicenseFile, gotLib.LicenseFile); diff != \"\" {\n\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].LicenseFile diff (-want +got): %s\", test.importPath, i, diff)\n\t\t\t\t}\n\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].Licenses, gotLib.Licenses); diff != \"\" {\n",
                    "rendered": {
                      "text": "\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].Name, gotLib.Name()); diff != \"\" {\n\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].Name() diff (-want +got): %s\", test.importPath, i, diff)\n\t\t\t\t}\n\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].LicenseFile, gotLib.LicenseFile); diff != \"\" {\n\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].LicenseFile diff (-want +got): %s\", test.importPath, i, diff)\n\t\t\t\t}\n\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].Licenses, gotLib.Licenses); diff != \"\" {\n",
                      "markdown": "`\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].Name, gotLib.Name()); diff != \"\" {\n\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].Name() diff (-want +got): %s\", test.importPath, i, diff)\n\t\t\t\t}\n\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].LicenseFile, gotLib.LicenseFile); diff != \"\" {\n\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].LicenseFile diff (-want +got): %s\", test.importPath, i, diff)\n\t\t\t\t}\n\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].Licenses, gotLib.Licenses); diff != \"\" {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/licenses/library_test.go"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 42,
                  "endLine": 155,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\n\t\t\tfor i, gotLib := range gotLibs {\n\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].Name, gotLib.Name()); diff != \"\" {\n\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].Name() diff (-want +got): %s\", test.importPath, i, diff)\n\t\t\t\t}\n\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].LicenseFile, gotLib.LicenseFile); diff != \"\" {\n\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].LicenseFile diff (-want +got): %s\", test.importPath, i, diff)\n",
                    "rendered": {
                      "text": "\n\t\t\tfor i, gotLib := range gotLibs {\n\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].Name, gotLib.Name()); diff != \"\" {\n\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].Name() diff (-want +got): %s\", test.importPath, i, diff)\n\t\t\t\t}\n\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].LicenseFile, gotLib.LicenseFile); diff != \"\" {\n\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].LicenseFile diff (-want +got): %s\", test.importPath, i, diff)\n",
                      "markdown": "`\n\t\t\tfor i, gotLib := range gotLibs {\n\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].Name, gotLib.Name()); diff != \"\" {\n\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].Name() diff (-want +got): %s\", test.importPath, i, diff)\n\t\t\t\t}\n\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].LicenseFile, gotLib.LicenseFile); diff != \"\" {\n\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].LicenseFile diff (-want +got): %s\", test.importPath, i, diff)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/licenses/library_test.go"
                },
                "region": {
                  "startLine": 154,
                  "startColumn": 62,
                  "endLine": 154,
                  "endColumn": 68,
                  "snippet": {
                    "text": "\t\t\t}\n\n\t\t\tfor i, gotLib := range gotLibs {\n\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].Name, gotLib.Name()); diff != \"\" {\n\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].Name() diff (-want +got): %s\", test.importPath, i, diff)\n\t\t\t\t}\n\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].LicenseFile, gotLib.LicenseFile); diff != \"\" {\n",
                    "rendered": {
                      "text": "\t\t\t}\n\n\t\t\tfor i, gotLib := range gotLibs {\n\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].Name, gotLib.Name()); diff != \"\" {\n\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].Name() diff (-want +got): %s\", test.importPath, i, diff)\n\t\t\t\t}\n\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].LicenseFile, gotLib.LicenseFile); diff != \"\" {\n",
                      "markdown": "`\t\t\t}\n\n\t\t\tfor i, gotLib := range gotLibs {\n\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].Name, gotLib.Name()); diff != \"\" {\n\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].Name() diff (-want +got): %s\", test.importPath, i, diff)\n\t\t\t\t}\n\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].LicenseFile, gotLib.LicenseFile); diff != \"\" {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/licenses/library_test.go"
                },
                "region": {
                  "startLine": 154,
                  "startColumn": 6,
                  "endLine": 154,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t}\n\n\t\t\tfor i, gotLib := range gotLibs {\n\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].Name, gotLib.Name()); diff != \"\" {\n\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].Name() diff (-want +got): %s\", test.importPath, i, diff)\n\t\t\t\t}\n\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].LicenseFile, gotLib.LicenseFile); diff != \"\" {\n",
                    "rendered": {
                      "text": "\t\t\t}\n\n\t\t\tfor i, gotLib := range gotLibs {\n\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].Name, gotLib.Name()); diff != \"\" {\n\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].Name() diff (-want +got): %s\", test.importPath, i, diff)\n\t\t\t\t}\n\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].LicenseFile, gotLib.LicenseFile); diff != \"\" {\n",
                      "markdown": "`\t\t\t}\n\n\t\t\tfor i, gotLib := range gotLibs {\n\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].Name, gotLib.Name()); diff != \"\" {\n\t\t\t\t\tt.Errorf(\"Libraries(_, %q)[%d].Name() diff (-want +got): %s\", test.importPath, i, diff)\n\t\t\t\t}\n\t\t\t\tif diff := cmp.Diff(test.wantLibs[i].LicenseFile, gotLib.LicenseFile); diff != \"\" {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/e2e_test.go"
                },
                "region": {
                  "startLine": 168,
                  "startColumn": 2,
                  "endLine": 168,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t\t// Extra flags to disable logging.\n\t\t\t// Logs are not deterministic for this golden test.\n\t\t\targs := append([]string{\"--logtostderr=false\", \"--stderrthreshold=10\", \"check\", \".\"}, tt.args...)\n\t\t\tcmd = exec.Command(goLicensesPath, args...)\n\t\t\t// Capture stderr to buffer.\n\t\t\tvar stderr bytes.Buffer\n\t\t\tcmd.Stderr = &stderr\n",
                    "rendered": {
                      "text": "\t\t\t// Extra flags to disable logging.\n\t\t\t// Logs are not deterministic for this golden test.\n\t\t\targs := append([]string{\"--logtostderr=false\", \"--stderrthreshold=10\", \"check\", \".\"}, tt.args...)\n\t\t\tcmd = exec.Command(goLicensesPath, args...)\n\t\t\t// Capture stderr to buffer.\n\t\t\tvar stderr bytes.Buffer\n\t\t\tcmd.Stderr = &stderr\n",
                      "markdown": "`\t\t\t// Extra flags to disable logging.\n\t\t\t// Logs are not deterministic for this golden test.\n\t\t\targs := append([]string{\"--logtostderr=false\", \"--stderrthreshold=10\", \"check\", \".\"}, tt.args...)\n\t\t\tcmd = exec.Command(goLicensesPath, args...)\n\t\t\t// Capture stderr to buffer.\n\t\t\tvar stderr bytes.Buffer\n\t\t\tcmd.Stderr = &stderr\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/e2e_test.go"
                },
                "region": {
                  "startLine": 160,
                  "startColumn": 2,
                  "endLine": 160,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}\n\t\t\tcmd := exec.Command(\"go\", \"mod\", \"download\")\n\t\t\tlog, err := cmd.CombinedOutput()\n\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"downloading go modules:\\n%s\", string(log))\n",
                    "rendered": {
                      "text": "\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}\n\t\t\tcmd := exec.Command(\"go\", \"mod\", \"download\")\n\t\t\tlog, err := cmd.CombinedOutput()\n\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"downloading go modules:\\n%s\", string(log))\n",
                      "markdown": "`\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}\n\t\t\tcmd := exec.Command(\"go\", \"mod\", \"download\")\n\t\t\tlog, err := cmd.CombinedOutput()\n\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"downloading go modules:\\n%s\", string(log))\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/e2e_test.go"
                },
                "region": {
                  "startLine": 147,
                  "endLine": 147,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\t}\n\tdefer os.RemoveAll(tempDir)\n\tgoLicensesPath := filepath.Join(tempDir, \"go-licenses\")\n\tcmd := exec.Command(\"go\", \"build\", \"-o\", goLicensesPath)\n\t_, err = cmd.Output()\n\tif err != nil {\n\t\tt.Fatal(err)\n",
                    "rendered": {
                      "text": "\t}\n\tdefer os.RemoveAll(tempDir)\n\tgoLicensesPath := filepath.Join(tempDir, \"go-licenses\")\n\tcmd := exec.Command(\"go\", \"build\", \"-o\", goLicensesPath)\n\t_, err = cmd.Output()\n\tif err != nil {\n\t\tt.Fatal(err)\n",
                      "markdown": "`\t}\n\tdefer os.RemoveAll(tempDir)\n\tgoLicensesPath := filepath.Join(tempDir, \"go-licenses\")\n\tcmd := exec.Command(\"go\", \"build\", \"-o\", goLicensesPath)\n\t_, err = cmd.Output()\n\tif err != nil {\n\t\tt.Fatal(err)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/e2e_test.go"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 2,
                  "endLine": 80,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t\t\tt.Fatalf(\"downloading go modules:\\n%s\", string(log))\n\t\t\t}\n\t\t\targs := append([]string{\"report\", \".\"}, tt.args...)\n\t\t\tcmd = exec.Command(goLicensesPath, args...)\n\t\t\t// Capture stderr to buffer.\n\t\t\tvar stderr bytes.Buffer\n\t\t\tcmd.Stderr = &stderr\n",
                    "rendered": {
                      "text": "\t\t\t\tt.Fatalf(\"downloading go modules:\\n%s\", string(log))\n\t\t\t}\n\t\t\targs := append([]string{\"report\", \".\"}, tt.args...)\n\t\t\tcmd = exec.Command(goLicensesPath, args...)\n\t\t\t// Capture stderr to buffer.\n\t\t\tvar stderr bytes.Buffer\n\t\t\tcmd.Stderr = &stderr\n",
                      "markdown": "`\t\t\t\tt.Fatalf(\"downloading go modules:\\n%s\", string(log))\n\t\t\t}\n\t\t\targs := append([]string{\"report\", \".\"}, tt.args...)\n\t\t\tcmd = exec.Command(goLicensesPath, args...)\n\t\t\t// Capture stderr to buffer.\n\t\t\tvar stderr bytes.Buffer\n\t\t\tcmd.Stderr = &stderr\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/e2e_test.go"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 2,
                  "endLine": 74,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}\n\t\t\tcmd := exec.Command(\"go\", \"mod\", \"download\")\n\t\t\tlog, err := cmd.CombinedOutput()\n\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"downloading go modules:\\n%s\", string(log))\n",
                    "rendered": {
                      "text": "\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}\n\t\t\tcmd := exec.Command(\"go\", \"mod\", \"download\")\n\t\t\tlog, err := cmd.CombinedOutput()\n\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"downloading go modules:\\n%s\", string(log))\n",
                      "markdown": "`\t\t\tif err != nil {\n\t\t\t\tt.Fatal(err)\n\t\t\t}\n\t\t\tcmd := exec.Command(\"go\", \"mod\", \"download\")\n\t\t\tlog, err := cmd.CombinedOutput()\n\t\t\tif err != nil {\n\t\t\t\tt.Fatalf(\"downloading go modules:\\n%s\", string(log))\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/e2e_test.go"
                },
                "region": {
                  "startLine": 61,
                  "endLine": 61,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\t}\n\tdefer os.RemoveAll(tempDir)\n\tgoLicensesPath := filepath.Join(tempDir, \"go-licenses\")\n\tcmd := exec.Command(\"go\", \"build\", \"-o\", goLicensesPath)\n\t_, err = cmd.Output()\n\tif err != nil {\n\t\tt.Fatal(err)\n",
                    "rendered": {
                      "text": "\t}\n\tdefer os.RemoveAll(tempDir)\n\tgoLicensesPath := filepath.Join(tempDir, \"go-licenses\")\n\tcmd := exec.Command(\"go\", \"build\", \"-o\", goLicensesPath)\n\t_, err = cmd.Output()\n\tif err != nil {\n\t\tt.Fatal(err)\n",
                      "markdown": "`\t}\n\tdefer os.RemoveAll(tempDir)\n\tgoLicensesPath := filepath.Join(tempDir, \"go-licenses\")\n\tcmd := exec.Command(\"go\", \"build\", \"-o\", goLicensesPath)\n\t_, err = cmd.Output()\n\tif err != nil {\n\t\tt.Fatal(err)\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/e2e_test.go"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 3,
                  "endLine": 30,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\"github.com/google/go-cmp/cmp\"\n)\n\nvar update = flag.Bool(\"update\", false, \"update golden files\")\n\nfunc TestReportCommandE2E(t *testing.T) {\n\ttests := []struct {\n",
                    "rendered": {
                      "text": "\t\"github.com/google/go-cmp/cmp\"\n)\n\nvar update = flag.Bool(\"update\", false, \"update golden files\")\n\nfunc TestReportCommandE2E(t *testing.T) {\n\ttests := []struct {\n",
                      "markdown": "`\t\"github.com/google/go-cmp/cmp\"\n)\n\nvar update = flag.Bool(\"update\", false, \"update golden files\")\n\nfunc TestReportCommandE2E(t *testing.T) {\n\ttests := []struct {\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/licenses/find_test.go"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 58,
                  "endLine": 133,
                  "endColumn": 64,
                  "snippet": {
                    "text": "\t\t\t}\n\n\t\t\tif diff := cmp.Diff(test.wantLicensePathCandidates, licensePathCandidates); diff != \"\" {\n\t\t\t\tt.Fatalf(\"FindCandidates(%q) = %q, %q, want (%q, nil); diff (-want +got): %s\", test.dir, licensePathCandidates, err, test.wantLicensePathCandidates, diff)\n\t\t\t}\n\t\t})\n\t}\n",
                    "rendered": {
                      "text": "\t\t\t}\n\n\t\t\tif diff := cmp.Diff(test.wantLicensePathCandidates, licensePathCandidates); diff != \"\" {\n\t\t\t\tt.Fatalf(\"FindCandidates(%q) = %q, %q, want (%q, nil); diff (-want +got): %s\", test.dir, licensePathCandidates, err, test.wantLicensePathCandidates, diff)\n\t\t\t}\n\t\t})\n\t}\n",
                      "markdown": "`\t\t\t}\n\n\t\t\tif diff := cmp.Diff(test.wantLicensePathCandidates, licensePathCandidates); diff != \"\" {\n\t\t\t\tt.Fatalf(\"FindCandidates(%q) = %q, %q, want (%q, nil); diff (-want +got): %s\", test.dir, licensePathCandidates, err, test.wantLicensePathCandidates, diff)\n\t\t\t}\n\t\t})\n\t}\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/licenses/find_test.go"
                },
                "region": {
                  "startLine": 132,
                  "startColumn": 78,
                  "endLine": 132,
                  "endColumn": 84,
                  "snippet": {
                    "text": "\t\t\t\tt.Fatalf(\"FindCandidates(%q) = (%#v, %q), want (%q, nil)\", test.dir, licensePathCandidates, err, test.wantLicensePathCandidates)\n\t\t\t}\n\n\t\t\tif diff := cmp.Diff(test.wantLicensePathCandidates, licensePathCandidates); diff != \"\" {\n\t\t\t\tt.Fatalf(\"FindCandidates(%q) = %q, %q, want (%q, nil); diff (-want +got): %s\", test.dir, licensePathCandidates, err, test.wantLicensePathCandidates, diff)\n\t\t\t}\n\t\t})\n",
                    "rendered": {
                      "text": "\t\t\t\tt.Fatalf(\"FindCandidates(%q) = (%#v, %q), want (%q, nil)\", test.dir, licensePathCandidates, err, test.wantLicensePathCandidates)\n\t\t\t}\n\n\t\t\tif diff := cmp.Diff(test.wantLicensePathCandidates, licensePathCandidates); diff != \"\" {\n\t\t\t\tt.Fatalf(\"FindCandidates(%q) = %q, %q, want (%q, nil); diff (-want +got): %s\", test.dir, licensePathCandidates, err, test.wantLicensePathCandidates, diff)\n\t\t\t}\n\t\t})\n",
                      "markdown": "`\t\t\t\tt.Fatalf(\"FindCandidates(%q) = (%#v, %q), want (%q, nil)\", test.dir, licensePathCandidates, err, test.wantLicensePathCandidates)\n\t\t\t}\n\n\t\t\tif diff := cmp.Diff(test.wantLicensePathCandidates, licensePathCandidates); diff != \"\" {\n\t\t\t\tt.Fatalf(\"FindCandidates(%q) = %q, %q, want (%q, nil); diff (-want +got): %s\", test.dir, licensePathCandidates, err, test.wantLicensePathCandidates, diff)\n\t\t\t}\n\t\t})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/licenses/find_test.go"
                },
                "region": {
                  "startLine": 132,
                  "startColumn": 5,
                  "endLine": 132,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\t\t\t\tt.Fatalf(\"FindCandidates(%q) = (%#v, %q), want (%q, nil)\", test.dir, licensePathCandidates, err, test.wantLicensePathCandidates)\n\t\t\t}\n\n\t\t\tif diff := cmp.Diff(test.wantLicensePathCandidates, licensePathCandidates); diff != \"\" {\n\t\t\t\tt.Fatalf(\"FindCandidates(%q) = %q, %q, want (%q, nil); diff (-want +got): %s\", test.dir, licensePathCandidates, err, test.wantLicensePathCandidates, diff)\n\t\t\t}\n\t\t})\n",
                    "rendered": {
                      "text": "\t\t\t\tt.Fatalf(\"FindCandidates(%q) = (%#v, %q), want (%q, nil)\", test.dir, licensePathCandidates, err, test.wantLicensePathCandidates)\n\t\t\t}\n\n\t\t\tif diff := cmp.Diff(test.wantLicensePathCandidates, licensePathCandidates); diff != \"\" {\n\t\t\t\tt.Fatalf(\"FindCandidates(%q) = %q, %q, want (%q, nil); diff (-want +got): %s\", test.dir, licensePathCandidates, err, test.wantLicensePathCandidates, diff)\n\t\t\t}\n\t\t})\n",
                      "markdown": "`\t\t\t\tt.Fatalf(\"FindCandidates(%q) = (%#v, %q), want (%q, nil)\", test.dir, licensePathCandidates, err, test.wantLicensePathCandidates)\n\t\t\t}\n\n\t\t\tif diff := cmp.Diff(test.wantLicensePathCandidates, licensePathCandidates); diff != \"\" {\n\t\t\t\tt.Fatalf(\"FindCandidates(%q) = %q, %q, want (%q, nil); diff (-want +got): %s\", test.dir, licensePathCandidates, err, test.wantLicensePathCandidates, diff)\n\t\t\t}\n\t\t})\n`"
                    }
                  },
                  "sourceLanguage": "go"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/.github/workflows/golangci-lint.yml"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 92,
                  "endLine": 27,
                  "endColumn": 100,
                  "snippet": {
                    "text": "        uses: golangci/golangci-lint-action@v3\n        with:\n          # Required: the version of golangci-lint is required and must be specified without patch version: we always use the latest patch version.\n          # NOTICE: golangci-lint version should be the same as go.mod. When upgrading, also update go.mod by:\n          # go get github.com/golangci/golangci-lint@v1.29\n          version: v1.49\n",
                    "rendered": {
                      "text": "        uses: golangci/golangci-lint-action@v3\n        with:\n          # Required: the version of golangci-lint is required and must be specified without patch version: we always use the latest patch version.\n          # NOTICE: golangci-lint version should be the same as go.mod. When upgrading, also update go.mod by:\n          # go get github.com/golangci/golangci-lint@v1.29\n          version: v1.49\n",
                      "markdown": "`        uses: golangci/golangci-lint-action@v3\n        with:\n          # Required: the version of golangci-lint is required and must be specified without patch version: we always use the latest patch version.\n          # NOTICE: golangci-lint version should be the same as go.mod. When upgrading, also update go.mod by:\n          # go get github.com/golangci/golangci-lint@v1.29\n          version: v1.49\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/README.md"
                },
                "region": {
                  "startLine": 158,
                  "startColumn": 92,
                  "endLine": 158,
                  "endColumn": 96,
                  "snippet": {
                    "text": "}\n```\n\nEach struct also has a `LicenseText` method which will return the text of the license stored at `LicensePath` if present,\nor an empty string if not.\n\nExample template rendering licenses as markdown:\n",
                    "rendered": {
                      "text": "}\n```\n\nEach struct also has a `LicenseText` method which will return the text of the license stored at `LicensePath` if present,\nor an empty string if not.\n\nExample template rendering licenses as markdown:\n",
                      "markdown": "`}\n```\n\nEach struct also has a `LicenseText` method which will return the text of the license stored at `LicensePath` if present,\nor an empty string if not.\n\nExample template rendering licenses as markdown:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/README.md"
                },
                "region": {
                  "startLine": 343,
                  "startColumn": 68,
                  "endLine": 343,
                  "endColumn": 74,
                  "snippet": {
                    "text": "2. Parses go module metadata and finds the remote repo and version.\n3. Adds the license file path to this URL.\n\nThere are cases this tool finds an invalid/incorrect URL or fails to find the URL.\nWelcome [creating an issue](https://github.com/google/go-licenses/issues).\n",
                    "rendered": {
                      "text": "2. Parses go module metadata and finds the remote repo and version.\n3. Adds the license file path to this URL.\n\nThere are cases this tool finds an invalid/incorrect URL or fails to find the URL.\nWelcome [creating an issue](https://github.com/google/go-licenses/issues).\n",
                      "markdown": "`2. Parses go module metadata and finds the remote repo and version.\n3. Adds the license file path to this URL.\n\nThere are cases this tool finds an invalid/incorrect URL or fails to find the URL.\nWelcome [creating an issue](https://github.com/google/go-licenses/issues).\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/go-licenses.zip/README.md"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 1,
                  "endLine": 18,
                  "endColumn": 6,
                  "snippet": {
                    "text": "* Change directory to your go project, **for example**:\n\n  ```shell\n  git clone git@github.com:google/go-licenses.git\n  cd go-licenses\n  ```\n\n",
                    "rendered": {
                      "text": "* Change directory to your go project, **for example**:\n\n  ```shell\n  git clone git@github.com:google/go-licenses.git\n  cd go-licenses\n  ```\n\n",
                      "markdown": "`* Change directory to your go project, **for example**:\n\n  ```shell\n  git clone git@github.com:google/go-licenses.git\n  cd go-licenses\n  ```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}