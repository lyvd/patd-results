{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "oss-detect-backdoor",
          "organization": "Microsoft Corporation",
          "product": "OSSGadget (https://github.com/Microsoft/OSSGadget)",
          "version": "0.0.0+ed0e2cfe6a"
        }
      },
      "results": [
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/regression/action-tnf-base64.json"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 38,
                  "endLine": 49,
                  "endColumn": 44,
                  "snippet": {
                    "text": "  {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing Transformatio :: base64 (2/2)\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":123\n",
                    "rendered": {
                      "text": "  {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing Transformatio :: base64 (2/2)\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":123\n",
                      "markdown": "`  {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing Transformatio :: base64 (2/2)\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":123\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/regression/action-tnf-base64.json"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 38,
                  "endLine": 5,
                  "endColumn": 44,
                  "snippet": {
                    "text": "  {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing Transformatio :: base64 (1/2)\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":123\n",
                    "rendered": {
                      "text": "  {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing Transformatio :: base64 (1/2)\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":123\n",
                      "markdown": "`  {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing Transformatio :: base64 (1/2)\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":123\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/regression/action-tnf-base64.json"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 37,
                  "endLine": 49,
                  "endColumn": 45,
                  "snippet": {
                    "text": "  {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing Transformatio :: base64 (2/2)\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":123\n",
                    "rendered": {
                      "text": "  {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing Transformatio :: base64 (2/2)\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":123\n",
                      "markdown": "`  {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing Transformatio :: base64 (2/2)\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":123\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/regression/action-tnf-base64.json"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 37,
                  "endLine": 5,
                  "endColumn": 45,
                  "snippet": {
                    "text": "  {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing Transformatio :: base64 (1/2)\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":123\n",
                    "rendered": {
                      "text": "  {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing Transformatio :: base64 (1/2)\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":123\n",
                      "markdown": "`  {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing Transformatio :: base64 (1/2)\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":123\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 45,
                  "endLine": 13,
                  "endColumn": 53,
                  "snippet": {
                    "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                    "rendered": {
                      "text": "#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n",
                      "markdown": "`#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n# To enable this hook, rename this file to \"query-watchman\" and set\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 51,
                  "endLine": 12,
                  "endColumn": 59,
                  "snippet": {
                    "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                    "rendered": {
                      "text": "# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n",
                      "markdown": "`# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 53,
                  "endLine": 11,
                  "endColumn": 61,
                  "snippet": {
                    "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                    "rendered": {
                      "text": "# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n",
                      "markdown": "`# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n# formatted as a string and outputs to stdout a new update token and\n# all files that have been modified since the update token. Paths must\n# be relative to the root of the working tree and separated by a single NUL.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 15,
                  "endLine": 143,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                    "rendered": {
                      "text": "\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n",
                      "markdown": "`\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n\t\t$error = $output->{error};\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 141,
                  "startColumn": 49,
                  "endLine": 141,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                    "rendered": {
                      "text": "\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n",
                      "markdown": "`\t\t# close $fh;\n\n\t\t# Watchman will always return all files on the first query so\n\t\t# return the fast \"everything is dirty\" flag to git and do the\n\t\t# Watchman query just to get it over with now so we won't pay\n\t\t# the cost in git to look up each individual file.\n\t\tmy $o = watchman_clock();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 129,
                  "startColumn": 30,
                  "endLine": 129,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                    "rendered": {
                      "text": "\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n",
                      "markdown": "`\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n\t\t$error = $output->{error};\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 28,
                  "endLine": 128,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                    "rendered": {
                      "text": "\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n",
                      "markdown": "`\tmy $error = $output->{error};\n\tif ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {\n\t\t$retry--;\n\t\tmy $response = qx/watchman watch \"$git_work_tree\"/;\n\t\tdie \"Failed to make watchman watch '$git_work_tree'.\\n\" .\n\t\t    \"Falling back to scanning...\\n\" if $? != 0;\n\t\t$output = $json_pkg->new->utf8->decode($response);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 30,
                  "endLine": 110,
                  "endColumn": 37,
                  "snippet": {
                    "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                    "rendered": {
                      "text": "\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n",
                      "markdown": "`\tclose CHLD_IN;\n\tmy $response = do {local $/; <CHLD_OUT>};\n\n\t# Uncomment for debugging the watch response\n\t# open ($fh, \">\", \".git/watchman-response.json\");\n\t# print $fh $response;\n\t# close $fh;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 45,
                  "endLine": 8,
                  "endColumn": 50,
                  "snippet": {
                    "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                    "rendered": {
                      "text": "use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n",
                      "markdown": "`use IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n# The hook is passed a version (currently 2) and last update token\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/fsmonitor-watchman.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 17,
                  "endLine": 7,
                  "endColumn": 25,
                  "snippet": {
                    "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                    "rendered": {
                      "text": "use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n",
                      "markdown": "`use warnings;\nuse IPC::Open2;\n\n# An example hook script to integrate Watchman\n# (https://facebook.github.io/watchman/) with git to speed up detecting\n# new and modified files.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 1,
                  "endLine": 38,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                    "rendered": {
                      "text": "# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n",
                      "markdown": "`# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n#   /usr/bin/perl -i.bak -pe 'print \"\\n\" if !$first_line++' \"$COMMIT_MSG_FILE\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 37,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                    "rendered": {
                      "text": "#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n",
                      "markdown": "`#  *) ;;\n# esac\n\n# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# git interpret-trailers --in-place --trailer \"$SOB\" \"$COMMIT_MSG_FILE\"\n# if test -z \"$COMMIT_SOURCE\"\n# then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 25,
                  "endLine": 32,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                    "rendered": {
                      "text": "# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n",
                      "markdown": "`# case \"$COMMIT_SOURCE,$SHA1\" in\n#  ,|template,)\n#    /usr/bin/perl -i.bak -pe '\n#       print \"\\n\" . `git diff --cached --name-status -r`\n# \t if /^#/ && $first++ == 0' \"$COMMIT_MSG_FILE\" ;;\n#  *) ;;\n# esac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 40,
                  "endLine": 15,
                  "endColumn": 46,
                  "snippet": {
                    "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                    "rendered": {
                      "text": "# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n",
                      "markdown": "`# This hook includes three examples. The first one removes the\n# \"# Please enter the commit message...\" help message.\n#\n# The second includes the output of \"git diff --name-status -r\"\n# into the message, just before the \"git status\" output.  It is\n# commented because it doesn't cope with --amend or with squashed\n# commits.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/prepare-commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare the commit log message.\n# Called by \"git commit\" with the name of the file that has the\n# commit message, followed by the description of the commit\n# message's source.  The hook's purpose is to edit the commit\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 40,
                  "endLine": 122,
                  "endColumn": 48,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 122,
                  "startColumn": 11,
                  "endLine": 122,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                    "rendered": {
                      "text": "\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n",
                      "markdown": "`\t\t;;\n\t*)\n\t\t# Anything else (is there anything else?)\n\t\techo \"*** Update hook: unknown type of update to ref $refname of type $newrev_type\" >&2\n\t\texit 1\n\t\t;;\nesac\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 39,
                  "endLine": 89,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                    "rendered": {
                      "text": "\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n",
                      "markdown": "`\t\t;;\n\trefs/tags/*,tag)\n\t\t# annotated tag\n\t\tif [ \"$allowmodifytag\" != \"true\" ] && git rev-parse $refname > /dev/null 2>&1\n\t\tthen\n\t\t\techo \"*** Tag '$refname' already exists.\" >&2\n\t\t\techo \"*** Modifying a tag is not allowed in this repository.\" >&2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 21,
                  "endLine": 34,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                    "rendered": {
                      "text": "\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n",
                      "markdown": "`\n# --- Safety check\nif [ -z \"$GIT_DIR\" ]; then\n\techo \"Don't run this script from the command line.\" >&2\n\techo \" (if you want, you could supply GIT_DIR then run\" >&2\n\techo \"  $0 <ref> <oldrev> <newrev>)\" >&2\n\texit 1\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to block unannotated tags from entering.\n# Called by \"git receive-pack\" with arguments: refname sha1-old sha1-new\n#\n# To enable this hook, rename this file to \"update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/pre-merge-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git merge\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message to\n# stderr if it wants to stop the merge commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 45,
                  "endLine": 161,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                    "rendered": {
                      "text": "\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n",
                      "markdown": "`\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\nTo compute (2):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 29,
                  "endLine": 151,
                  "endColumn": 33,
                  "snippet": {
                    "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                    "rendered": {
                      "text": " * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n",
                      "markdown": "` * B has finished.  It has been fully merged up to \"master\" and \"next\",\n   and is ready to be deleted.\n\n * C has not merged to \"next\" at all.\n\nWe would want to allow C to be rebased, refuse A, and encourage\nB to be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 10,
                  "endLine": 131,
                  "endColumn": 14,
                  "snippet": {
                    "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                    "rendered": {
                      "text": "    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n",
                      "markdown": "`    fork the topic (perhaps with the same name) afresh from the\n    tip of \"master\".\n\nLet's look at this example:\n\n\t\t   o---o---o---o---o---o---o---o---o---o \"next\"\n\t\t  /       /           /           /\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 61,
                  "endLine": 104,
                  "snippet": {
                    "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                    "rendered": {
                      "text": "\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n",
                      "markdown": "`\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n\n * Whenever you need to test or publish your changes to topic\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 165,
                  "endLine": 165,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                    "rendered": {
                      "text": "\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n",
                      "markdown": "`\nTo compute (2):\n\n\tgit rev-list master..topic\n\n\tif this is empty, it is fully merged to \"master\".\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 159,
                  "endLine": 159,
                  "endColumn": 5,
                  "snippet": {
                    "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                    "rendered": {
                      "text": "To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n",
                      "markdown": "`To compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 158,
                  "endLine": 158,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                    "rendered": {
                      "text": "\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n",
                      "markdown": "`\nTo compute (1):\n\n\tgit rev-list ^master ^topic next\n\tgit rev-list ^master        next\n\n\tif these match, topic has not merged in next at all.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 12,
                  "endLine": 125,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                    "rendered": {
                      "text": "\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n",
                      "markdown": "`\n(2) ... if a topic branch has been fully merged to \"master\".\n    Then you can delete it.  More importantly, you should not\n    build on top of it -- other people may already want to\n    change things related to the topic as patches against your\n    \"master\", so if you need further changes, it is better to\n    fork the topic (perhaps with the same name) afresh from the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 42,
                  "endLine": 102,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                    "rendered": {
                      "text": "   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n",
                      "markdown": "`   merged into it again (either directly or indirectly).\n\n * Once a topic branch is fully cooked and merged into \"master\",\n   it is deleted.  If you need to build on top of it to correct\n   earlier mistakes, a new topic branch is created by forking at\n   the tip of the \"master\".  This is not strictly necessary, but\n   it makes it easier to keep your history simple.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 30,
                  "endLine": 40,
                  "endColumn": 4,
                  "snippet": {
                    "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n",
                      "markdown": "`# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n\techo >&2 \"No such branch $topic\"\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 4,
                  "endLine": 37,
                  "endColumn": 9,
                  "snippet": {
                    "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                    "rendered": {
                      "text": "esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n",
                      "markdown": "`esac\n\n# Now we are dealing with a topic branch being rebased\n# on top of master.  Is it OK to rebase it?\n\n# Does the topic really exist?\ngit show-ref -q \"$topic\" || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/pre-rebase.sample"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 48,
                  "endLine": 26,
                  "snippet": {
                    "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                    "rendered": {
                      "text": "\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n",
                      "markdown": "`\ttopic=\"refs/heads/$2\"\nelse\n\ttopic=`git symbolic-ref HEAD` ||\n\texit 0 ;# we do not interrupt rebasing detached HEAD\nfi\n\ncase \"$topic\" in\nrefs/heads/??/*)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 4,
                  "endLine": 8,
                  "endColumn": 9,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"post-update\".\n\nexec git update-server-info\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/post-update.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to prepare a packed repository for use over\n# dumb transports.\n#\n# To enable this hook, rename this file to \"post-update\".\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 74,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                    "rendered": {
                      "text": "\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n",
                      "markdown": "`\nif test \"$GIT_SENDEMAIL_FILE_COUNTER\" = \"$GIT_SENDEMAIL_FILE_TOTAL\"\nthen\n\tgit config --unset-all sendemail.validateWorktree &&\n\ttrap 'git worktree remove -ff \"$worktree\"' EXIT &&\n\tvalidate_series\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 2,
                  "endLine": 65,
                  "endColumn": 8,
                  "snippet": {
                    "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                    "rendered": {
                      "text": "unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n",
                      "markdown": "`unset GIT_DIR GIT_WORK_TREE\ncd \"$worktree\" &&\n\nif grep -q \"^diff --git \" \"$1\"\nthen\n\tvalidate_patch \"$1\"\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                    "rendered": {
                      "text": "\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n",
                      "markdown": "`\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\nfi || {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 53,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                    "rendered": {
                      "text": "\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n",
                      "markdown": "`\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\nelse\n\tworktree=$(git config --get sendemail.validateWorktree)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 27,
                  "endLine": 51,
                  "endColumn": 33,
                  "snippet": {
                    "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                    "rendered": {
                      "text": "if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n",
                      "markdown": "`if test \"$GIT_SENDEMAIL_FILE_COUNTER\" = 1\nthen\n\tremote=$(git config --default origin --get sendemail.validateRemote) &&\n\tref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&\n\tworktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&\n\tgit worktree add -fd --checkout \"$worktree\" \"refs/remotes/$remote/$ref\" &&\n\tgit config --replace-all sendemail.validateWorktree \"$worktree\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                    "rendered": {
                      "text": "validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n",
                      "markdown": "`validate_patch () {\n\tfile=\"$1\"\n\t# Ensure that the patch applies without conflicts.\n\tgit am -3 \"$file\" || return\n\t# TODO: Replace with appropriate checks for this patch\n\t# (e.g. checkpatch.pl).\n\ttrue\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 11,
                  "startColumn": 69,
                  "endLine": 11,
                  "endColumn": 74,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"sendemail-validate\".\n#\n# By default, it will only check that the patch(es) can be applied on top of\n# the default upstream branch without conflicts in a secondary worktree. After\n# validation (successful or not) of the last patch of a series, the worktree\n# will be deleted.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/sendemail-validate.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to validate a patch (and/or patch series) before\n# sending it via email.\n#\n# The hook should exit with non-zero status after issuing an appropriate\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 18,
                  "endLine": 21,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 8,
                  "endLine": 21,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 1,
                  "endLine": 21,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                    "rendered": {
                      "text": "# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n",
                      "markdown": "`# This example catches duplicate Signed-off-by lines.\n\ntest \"\" = \"$(grep '^Signed-off-by: ' \"$1\" |\n\t sort | uniq -c | sed -e '/^[ \t]*1[ \t]/d')\" || {\n\techo >&2 Duplicate Signed-off-by lines.\n\texit 1\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 1,
                  "endLine": 16,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                    "rendered": {
                      "text": "# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n",
                      "markdown": "`# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 15,
                  "startColumn": 34,
                  "endLine": 15,
                  "endColumn": 39,
                  "snippet": {
                    "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                    "rendered": {
                      "text": "# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n",
                      "markdown": "`# Doing this in a hook is a bad idea in general, but the prepare-commit-msg\n# hook is more suited to it.\n#\n# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\\(.*>\\).*$/Signed-off-by: \\1/p')\n# grep -qs \"^$SOB\" \"$1\" || echo \"$SOB\" >> \"$1\"\n\n# This example catches duplicate Signed-off-by lines.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/commit-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message.\n# Called by \"git commit\" with one argument, the name of the file\n# that has the commit message.  The hook should exit with non-zero\n# status after issuing an appropriate message if it wants to stop the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/info/exclude"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 6,
                  "snippet": {
                    "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                    "rendered": {
                      "text": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n",
                      "markdown": "`# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/regression/issue-960.json"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 91,
                  "endLine": 79,
                  "endColumn": 97,
                  "snippet": {
                    "text": "\n    \"SecRuleEngine On\",\n    \"SecDefaultAction \\\"phase:1,log,deny,status:418,tag:'Host: %{request_headers.host}'\\\"\",\n    \"SecDefaultAction \\\"phase:2,log,deny,status:418,tag:'Host: %{request_headers.host}'\\\"\",\n    \"SecAction \\\"id:'900012',phase:request,nolog,pass,t:none,setvar:'tx.allowed_methods=GET HEAD POST OPTIONS'\\\"\",\n    \"SecRule REQUEST_METHOD \\\"@within %{tx.allowed_methods}\\\" \\\"msg:'Method is not allowed by policy',severity:'WARNING',id:'960032',phase:request,block,rev:'2',ver:'OWASP_CRS/3.0.0',maturity:'9',accuracy:'9',tag:'application-multi',tag:'language-multi',tag:'platform-multi',tag:'at",
                    "rendered": {
                      "text": "\n    \"SecRuleEngine On\",\n    \"SecDefaultAction \\\"phase:1,log,deny,status:418,tag:'Host: %{request_headers.host}'\\\"\",\n    \"SecDefaultAction \\\"phase:2,log,deny,status:418,tag:'Host: %{request_headers.host}'\\\"\",\n    \"SecAction \\\"id:'900012',phase:request,nolog,pass,t:none,setvar:'tx.allowed_methods=GET HEAD POST OPTIONS'\\\"\",\n    \"SecRule REQUEST_METHOD \\\"@within %{tx.allowed_methods}\\\" \\\"msg:'Method is not allowed by policy',severity:'WARNING',id:'960032',phase:request,block,rev:'2',ver:'OWASP_CRS/3.0.0',maturity:'9',accuracy:'9',tag:'application-multi',tag:'language-multi',tag:'platform-multi',tag:'at",
                      "markdown": "`\n    \"SecRuleEngine On\",\n    \"SecDefaultAction \\\"phase:1,log,deny,status:418,tag:'Host: %{request_headers.host}'\\\"\",\n    \"SecDefaultAction \\\"phase:2,log,deny,status:418,tag:'Host: %{request_headers.host}'\\\"\",\n    \"SecAction \\\"id:'900012',phase:request,nolog,pass,t:none,setvar:'tx.allowed_methods=GET HEAD POST OPTIONS'\\\"\",\n    \"SecRule REQUEST_METHOD \\\"@within %{tx.allowed_methods}\\\" \\\"msg:'Method is not allowed by policy',severity:'WARNING',id:'960032',phase:request,block,rev:'2',ver:'OWASP_CRS/3.0.0',maturity:'9',accuracy:'9',tag:'application-multi',tag:'language-multi',tag:'platform-multi',tag:'at`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/regression/issue-960.json"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 91,
                  "endLine": 38,
                  "endColumn": 97,
                  "snippet": {
                    "text": ": \"\"\n    },\n  \"rules\": [\n    \"SecDefaultAction \\\"phase:1,log,deny,status:418,tag:'Host: %{request_headers.host}'\\\"\",\n    \"SecDefaultAction \\\"phase:2,log,deny,status:418,tag:'Host: %{request_headers.host}'\\\"\",\n    \"SecAction \\\"id:'900012',phase:request,nolog,pass,t:none,setvar:'tx.allowed_methods=GET HEAD POST OPTIONS'\\\"\",\n    \"SecRule REQUEST_METHOD \\\"!@within %{tx.allowed_methods}\\\" \\\"msg:'Method is not allowed by policy',severity:'WARNING',id:'960032',phase:request,block,rev:'2',ver:'OWASP_CRS/3.0.0',maturity:'9',accuracy:'9',tag:'application-multi',tag:'language-multi',tag:'platform-multi',tag:'a",
                    "rendered": {
                      "text": ": \"\"\n    },\n  \"rules\": [\n    \"SecDefaultAction \\\"phase:1,log,deny,status:418,tag:'Host: %{request_headers.host}'\\\"\",\n    \"SecDefaultAction \\\"phase:2,log,deny,status:418,tag:'Host: %{request_headers.host}'\\\"\",\n    \"SecAction \\\"id:'900012',phase:request,nolog,pass,t:none,setvar:'tx.allowed_methods=GET HEAD POST OPTIONS'\\\"\",\n    \"SecRule REQUEST_METHOD \\\"!@within %{tx.allowed_methods}\\\" \\\"msg:'Method is not allowed by policy',severity:'WARNING',id:'960032',phase:request,block,rev:'2',ver:'OWASP_CRS/3.0.0',maturity:'9',accuracy:'9',tag:'application-multi',tag:'language-multi',tag:'platform-multi',tag:'a",
                      "markdown": "`: \"\"\n    },\n  \"rules\": [\n    \"SecDefaultAction \\\"phase:1,log,deny,status:418,tag:'Host: %{request_headers.host}'\\\"\",\n    \"SecDefaultAction \\\"phase:2,log,deny,status:418,tag:'Host: %{request_headers.host}'\\\"\",\n    \"SecAction \\\"id:'900012',phase:request,nolog,pass,t:none,setvar:'tx.allowed_methods=GET HEAD POST OPTIONS'\\\"\",\n    \"SecRule REQUEST_METHOD \\\"!@within %{tx.allowed_methods}\\\" \\\"msg:'Method is not allowed by policy',severity:'WARNING',id:'960032',phase:request,block,rev:'2',ver:'OWASP_CRS/3.0.0',maturity:'9',accuracy:'9',tag:'application-multi',tag:'language-multi',tag:'platform-multi',tag:'a`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/fuzzer/afl_fuzzer.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/fuzzer/afl_fuzzer.cc"
                },
                "region": {
                  "startLine": 206,
                  "startColumn": 248,
                  "endLine": 206,
                  "endColumn": 253,
                  "snippet": {
                    "text": "        /**\n        * Operators, generated by:\n        *\n        * for i in $(grep \"class \" -Ri src/operators/* | grep \" :\" | awk {'print $2'}); do echo $i *$(echo $i | awk '{print tolower($0)}') = new $i\\(\\\"$i\\\", z, false\\)\\; $(echo $i | awk '{print tolower($0)}')-\\>evaluate\\(t, s\\)\\; delete $(echo $i | awk '{print tolower($0)}')\\;; done;\n        *\n        */\nop_test(\"BeginsWith\", s);\n",
                    "rendered": {
                      "text": "        /**\n        * Operators, generated by:\n        *\n        * for i in $(grep \"class \" -Ri src/operators/* | grep \" :\" | awk {'print $2'}); do echo $i *$(echo $i | awk '{print tolower($0)}') = new $i\\(\\\"$i\\\", z, false\\)\\; $(echo $i | awk '{print tolower($0)}')-\\>evaluate\\(t, s\\)\\; delete $(echo $i | awk '{print tolower($0)}')\\;; done;\n        *\n        */\nop_test(\"BeginsWith\", s);\n",
                      "markdown": "`        /**\n        * Operators, generated by:\n        *\n        * for i in $(grep \"class \" -Ri src/operators/* | grep \" :\" | awk {'print $2'}); do echo $i *$(echo $i | awk '{print tolower($0)}') = new $i\\(\\\"$i\\\", z, false\\)\\; $(echo $i | awk '{print tolower($0)}')-\\>evaluate\\(t, s\\)\\; delete $(echo $i | awk '{print tolower($0)}')\\;; done;\n        *\n        */\nop_test(\"BeginsWith\", s);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/fuzzer/afl_fuzzer.cc"
                },
                "region": {
                  "startLine": 206,
                  "startColumn": 181,
                  "endLine": 206,
                  "endColumn": 186,
                  "snippet": {
                    "text": "        /**\n        * Operators, generated by:\n        *\n        * for i in $(grep \"class \" -Ri src/operators/* | grep \" :\" | awk {'print $2'}); do echo $i *$(echo $i | awk '{print tolower($0)}') = new $i\\(\\\"$i\\\", z, false\\)\\; $(echo $i | awk '{print tolower($0)}')-\\>evaluate\\(t, s\\)\\; delete $(echo $i | awk '{print tolower($0)}')\\;; done;\n        *\n        */\nop_test(\"BeginsWith\", s);\n",
                    "rendered": {
                      "text": "        /**\n        * Operators, generated by:\n        *\n        * for i in $(grep \"class \" -Ri src/operators/* | grep \" :\" | awk {'print $2'}); do echo $i *$(echo $i | awk '{print tolower($0)}') = new $i\\(\\\"$i\\\", z, false\\)\\; $(echo $i | awk '{print tolower($0)}')-\\>evaluate\\(t, s\\)\\; delete $(echo $i | awk '{print tolower($0)}')\\;; done;\n        *\n        */\nop_test(\"BeginsWith\", s);\n",
                      "markdown": "`        /**\n        * Operators, generated by:\n        *\n        * for i in $(grep \"class \" -Ri src/operators/* | grep \" :\" | awk {'print $2'}); do echo $i *$(echo $i | awk '{print tolower($0)}') = new $i\\(\\\"$i\\\", z, false\\)\\; $(echo $i | awk '{print tolower($0)}')-\\>evaluate\\(t, s\\)\\; delete $(echo $i | awk '{print tolower($0)}')\\;; done;\n        *\n        */\nop_test(\"BeginsWith\", s);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/fuzzer/afl_fuzzer.cc"
                },
                "region": {
                  "startLine": 206,
                  "startColumn": 111,
                  "endLine": 206,
                  "endColumn": 116,
                  "snippet": {
                    "text": "        /**\n        * Operators, generated by:\n        *\n        * for i in $(grep \"class \" -Ri src/operators/* | grep \" :\" | awk {'print $2'}); do echo $i *$(echo $i | awk '{print tolower($0)}') = new $i\\(\\\"$i\\\", z, false\\)\\; $(echo $i | awk '{print tolower($0)}')-\\>evaluate\\(t, s\\)\\; delete $(echo $i | awk '{print tolower($0)}')\\;; done;\n        *\n        */\nop_test(\"BeginsWith\", s);\n",
                    "rendered": {
                      "text": "        /**\n        * Operators, generated by:\n        *\n        * for i in $(grep \"class \" -Ri src/operators/* | grep \" :\" | awk {'print $2'}); do echo $i *$(echo $i | awk '{print tolower($0)}') = new $i\\(\\\"$i\\\", z, false\\)\\; $(echo $i | awk '{print tolower($0)}')-\\>evaluate\\(t, s\\)\\; delete $(echo $i | awk '{print tolower($0)}')\\;; done;\n        *\n        */\nop_test(\"BeginsWith\", s);\n",
                      "markdown": "`        /**\n        * Operators, generated by:\n        *\n        * for i in $(grep \"class \" -Ri src/operators/* | grep \" :\" | awk {'print $2'}); do echo $i *$(echo $i | awk '{print tolower($0)}') = new $i\\(\\\"$i\\\", z, false\\)\\; $(echo $i | awk '{print tolower($0)}')-\\>evaluate\\(t, s\\)\\; delete $(echo $i | awk '{print tolower($0)}')\\;; done;\n        *\n        */\nop_test(\"BeginsWith\", s);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/fuzzer/afl_fuzzer.cc"
                },
                "region": {
                  "startLine": 206,
                  "startColumn": 68,
                  "endLine": 206,
                  "endColumn": 73,
                  "snippet": {
                    "text": "        /**\n        * Operators, generated by:\n        *\n        * for i in $(grep \"class \" -Ri src/operators/* | grep \" :\" | awk {'print $2'}); do echo $i *$(echo $i | awk '{print tolower($0)}') = new $i\\(\\\"$i\\\", z, false\\)\\; $(echo $i | awk '{print tolower($0)}')-\\>evaluate\\(t, s\\)\\; delete $(echo $i | awk '{print tolower($0)}')\\;; done;\n        *\n        */\nop_test(\"BeginsWith\", s);\n",
                    "rendered": {
                      "text": "        /**\n        * Operators, generated by:\n        *\n        * for i in $(grep \"class \" -Ri src/operators/* | grep \" :\" | awk {'print $2'}); do echo $i *$(echo $i | awk '{print tolower($0)}') = new $i\\(\\\"$i\\\", z, false\\)\\; $(echo $i | awk '{print tolower($0)}')-\\>evaluate\\(t, s\\)\\; delete $(echo $i | awk '{print tolower($0)}')\\;; done;\n        *\n        */\nop_test(\"BeginsWith\", s);\n",
                      "markdown": "`        /**\n        * Operators, generated by:\n        *\n        * for i in $(grep \"class \" -Ri src/operators/* | grep \" :\" | awk {'print $2'}); do echo $i *$(echo $i | awk '{print tolower($0)}') = new $i\\(\\\"$i\\\", z, false\\)\\; $(echo $i | awk '{print tolower($0)}')-\\>evaluate\\(t, s\\)\\; delete $(echo $i | awk '{print tolower($0)}')\\;; done;\n        *\n        */\nop_test(\"BeginsWith\", s);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/fuzzer/afl_fuzzer.cc"
                },
                "region": {
                  "startLine": 206,
                  "startColumn": 56,
                  "endLine": 206,
                  "endColumn": 62,
                  "snippet": {
                    "text": "        /**\n        * Operators, generated by:\n        *\n        * for i in $(grep \"class \" -Ri src/operators/* | grep \" :\" | awk {'print $2'}); do echo $i *$(echo $i | awk '{print tolower($0)}') = new $i\\(\\\"$i\\\", z, false\\)\\; $(echo $i | awk '{print tolower($0)}')-\\>evaluate\\(t, s\\)\\; delete $(echo $i | awk '{print tolower($0)}')\\;; done;\n        *\n        */\nop_test(\"BeginsWith\", s);\n",
                    "rendered": {
                      "text": "        /**\n        * Operators, generated by:\n        *\n        * for i in $(grep \"class \" -Ri src/operators/* | grep \" :\" | awk {'print $2'}); do echo $i *$(echo $i | awk '{print tolower($0)}') = new $i\\(\\\"$i\\\", z, false\\)\\; $(echo $i | awk '{print tolower($0)}')-\\>evaluate\\(t, s\\)\\; delete $(echo $i | awk '{print tolower($0)}')\\;; done;\n        *\n        */\nop_test(\"BeginsWith\", s);\n",
                      "markdown": "`        /**\n        * Operators, generated by:\n        *\n        * for i in $(grep \"class \" -Ri src/operators/* | grep \" :\" | awk {'print $2'}); do echo $i *$(echo $i | awk '{print tolower($0)}') = new $i\\(\\\"$i\\\", z, false\\)\\; $(echo $i | awk '{print tolower($0)}')-\\>evaluate\\(t, s\\)\\; delete $(echo $i | awk '{print tolower($0)}')\\;; done;\n        *\n        */\nop_test(\"BeginsWith\", s);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/fuzzer/afl_fuzzer.cc"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 280,
                  "endLine": 161,
                  "endColumn": 285,
                  "snippet": {
                    "text": "        /**\n        * Transformations, generated by:\n        *\n        * for i in $(grep \"class \" -Ri src/actions/transformations/* | grep \" :\" | grep -v \"InstantCache\" | awk {'print $2'}); do echo $i *$(echo $i | awk '{print tolower($0)}') = new $i\\(\\\"$i\\\"\\)\\; $(echo $i | awk '{print tolower($0)}')-\\>evaluate\\(s, NULL\\)\\; delete $(echo $i | awk '{print tolower($0)}')\\;; done;\n        *\n        */\nBase64Decode *base64decode = new Base64Decode(\"Base64Decode\"); base64decode->evaluate(s, NULL); delete base64decode;\n",
                    "rendered": {
                      "text": "        /**\n        * Transformations, generated by:\n        *\n        * for i in $(grep \"class \" -Ri src/actions/transformations/* | grep \" :\" | grep -v \"InstantCache\" | awk {'print $2'}); do echo $i *$(echo $i | awk '{print tolower($0)}') = new $i\\(\\\"$i\\\"\\)\\; $(echo $i | awk '{print tolower($0)}')-\\>evaluate\\(s, NULL\\)\\; delete $(echo $i | awk '{print tolower($0)}')\\;; done;\n        *\n        */\nBase64Decode *base64decode = new Base64Decode(\"Base64Decode\"); base64decode->evaluate(s, NULL); delete base64decode;\n",
                      "markdown": "`        /**\n        * Transformations, generated by:\n        *\n        * for i in $(grep \"class \" -Ri src/actions/transformations/* | grep \" :\" | grep -v \"InstantCache\" | awk {'print $2'}); do echo $i *$(echo $i | awk '{print tolower($0)}') = new $i\\(\\\"$i\\\"\\)\\; $(echo $i | awk '{print tolower($0)}')-\\>evaluate\\(s, NULL\\)\\; delete $(echo $i | awk '{print tolower($0)}')\\;; done;\n        *\n        */\nBase64Decode *base64decode = new Base64Decode(\"Base64Decode\"); base64decode->evaluate(s, NULL); delete base64decode;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/fuzzer/afl_fuzzer.cc"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 210,
                  "endLine": 161,
                  "endColumn": 215,
                  "snippet": {
                    "text": "        /**\n        * Transformations, generated by:\n        *\n        * for i in $(grep \"class \" -Ri src/actions/transformations/* | grep \" :\" | grep -v \"InstantCache\" | awk {'print $2'}); do echo $i *$(echo $i | awk '{print tolower($0)}') = new $i\\(\\\"$i\\\"\\)\\; $(echo $i | awk '{print tolower($0)}')-\\>evaluate\\(s, NULL\\)\\; delete $(echo $i | awk '{print tolower($0)}')\\;; done;\n        *\n        */\nBase64Decode *base64decode = new Base64Decode(\"Base64Decode\"); base64decode->evaluate(s, NULL); delete base64decode;\n",
                    "rendered": {
                      "text": "        /**\n        * Transformations, generated by:\n        *\n        * for i in $(grep \"class \" -Ri src/actions/transformations/* | grep \" :\" | grep -v \"InstantCache\" | awk {'print $2'}); do echo $i *$(echo $i | awk '{print tolower($0)}') = new $i\\(\\\"$i\\\"\\)\\; $(echo $i | awk '{print tolower($0)}')-\\>evaluate\\(s, NULL\\)\\; delete $(echo $i | awk '{print tolower($0)}')\\;; done;\n        *\n        */\nBase64Decode *base64decode = new Base64Decode(\"Base64Decode\"); base64decode->evaluate(s, NULL); delete base64decode;\n",
                      "markdown": "`        /**\n        * Transformations, generated by:\n        *\n        * for i in $(grep \"class \" -Ri src/actions/transformations/* | grep \" :\" | grep -v \"InstantCache\" | awk {'print $2'}); do echo $i *$(echo $i | awk '{print tolower($0)}') = new $i\\(\\\"$i\\\"\\)\\; $(echo $i | awk '{print tolower($0)}')-\\>evaluate\\(s, NULL\\)\\; delete $(echo $i | awk '{print tolower($0)}')\\;; done;\n        *\n        */\nBase64Decode *base64decode = new Base64Decode(\"Base64Decode\"); base64decode->evaluate(s, NULL); delete base64decode;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/fuzzer/afl_fuzzer.cc"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 150,
                  "endLine": 161,
                  "endColumn": 155,
                  "snippet": {
                    "text": "        /**\n        * Transformations, generated by:\n        *\n        * for i in $(grep \"class \" -Ri src/actions/transformations/* | grep \" :\" | grep -v \"InstantCache\" | awk {'print $2'}); do echo $i *$(echo $i | awk '{print tolower($0)}') = new $i\\(\\\"$i\\\"\\)\\; $(echo $i | awk '{print tolower($0)}')-\\>evaluate\\(s, NULL\\)\\; delete $(echo $i | awk '{print tolower($0)}')\\;; done;\n        *\n        */\nBase64Decode *base64decode = new Base64Decode(\"Base64Decode\"); base64decode->evaluate(s, NULL); delete base64decode;\n",
                    "rendered": {
                      "text": "        /**\n        * Transformations, generated by:\n        *\n        * for i in $(grep \"class \" -Ri src/actions/transformations/* | grep \" :\" | grep -v \"InstantCache\" | awk {'print $2'}); do echo $i *$(echo $i | awk '{print tolower($0)}') = new $i\\(\\\"$i\\\"\\)\\; $(echo $i | awk '{print tolower($0)}')-\\>evaluate\\(s, NULL\\)\\; delete $(echo $i | awk '{print tolower($0)}')\\;; done;\n        *\n        */\nBase64Decode *base64decode = new Base64Decode(\"Base64Decode\"); base64decode->evaluate(s, NULL); delete base64decode;\n",
                      "markdown": "`        /**\n        * Transformations, generated by:\n        *\n        * for i in $(grep \"class \" -Ri src/actions/transformations/* | grep \" :\" | grep -v \"InstantCache\" | awk {'print $2'}); do echo $i *$(echo $i | awk '{print tolower($0)}') = new $i\\(\\\"$i\\\"\\)\\; $(echo $i | awk '{print tolower($0)}')-\\>evaluate\\(s, NULL\\)\\; delete $(echo $i | awk '{print tolower($0)}')\\;; done;\n        *\n        */\nBase64Decode *base64decode = new Base64Decode(\"Base64Decode\"); base64decode->evaluate(s, NULL); delete base64decode;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/fuzzer/afl_fuzzer.cc"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 107,
                  "endLine": 161,
                  "endColumn": 112,
                  "snippet": {
                    "text": "        /**\n        * Transformations, generated by:\n        *\n        * for i in $(grep \"class \" -Ri src/actions/transformations/* | grep \" :\" | grep -v \"InstantCache\" | awk {'print $2'}); do echo $i *$(echo $i | awk '{print tolower($0)}') = new $i\\(\\\"$i\\\"\\)\\; $(echo $i | awk '{print tolower($0)}')-\\>evaluate\\(s, NULL\\)\\; delete $(echo $i | awk '{print tolower($0)}')\\;; done;\n        *\n        */\nBase64Decode *base64decode = new Base64Decode(\"Base64Decode\"); base64decode->evaluate(s, NULL); delete base64decode;\n",
                    "rendered": {
                      "text": "        /**\n        * Transformations, generated by:\n        *\n        * for i in $(grep \"class \" -Ri src/actions/transformations/* | grep \" :\" | grep -v \"InstantCache\" | awk {'print $2'}); do echo $i *$(echo $i | awk '{print tolower($0)}') = new $i\\(\\\"$i\\\"\\)\\; $(echo $i | awk '{print tolower($0)}')-\\>evaluate\\(s, NULL\\)\\; delete $(echo $i | awk '{print tolower($0)}')\\;; done;\n        *\n        */\nBase64Decode *base64decode = new Base64Decode(\"Base64Decode\"); base64decode->evaluate(s, NULL); delete base64decode;\n",
                      "markdown": "`        /**\n        * Transformations, generated by:\n        *\n        * for i in $(grep \"class \" -Ri src/actions/transformations/* | grep \" :\" | grep -v \"InstantCache\" | awk {'print $2'}); do echo $i *$(echo $i | awk '{print tolower($0)}') = new $i\\(\\\"$i\\\"\\)\\; $(echo $i | awk '{print tolower($0)}')-\\>evaluate\\(s, NULL\\)\\; delete $(echo $i | awk '{print tolower($0)}')\\;; done;\n        *\n        */\nBase64Decode *base64decode = new Base64Decode(\"Base64Decode\"); base64decode->evaluate(s, NULL); delete base64decode;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/fuzzer/afl_fuzzer.cc"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 82,
                  "endLine": 161,
                  "endColumn": 88,
                  "snippet": {
                    "text": "        /**\n        * Transformations, generated by:\n        *\n        * for i in $(grep \"class \" -Ri src/actions/transformations/* | grep \" :\" | grep -v \"InstantCache\" | awk {'print $2'}); do echo $i *$(echo $i | awk '{print tolower($0)}') = new $i\\(\\\"$i\\\"\\)\\; $(echo $i | awk '{print tolower($0)}')-\\>evaluate\\(s, NULL\\)\\; delete $(echo $i | awk '{print tolower($0)}')\\;; done;\n        *\n        */\nBase64Decode *base64decode = new Base64Decode(\"Base64Decode\"); base64decode->evaluate(s, NULL); delete base64decode;\n",
                    "rendered": {
                      "text": "        /**\n        * Transformations, generated by:\n        *\n        * for i in $(grep \"class \" -Ri src/actions/transformations/* | grep \" :\" | grep -v \"InstantCache\" | awk {'print $2'}); do echo $i *$(echo $i | awk '{print tolower($0)}') = new $i\\(\\\"$i\\\"\\)\\; $(echo $i | awk '{print tolower($0)}')-\\>evaluate\\(s, NULL\\)\\; delete $(echo $i | awk '{print tolower($0)}')\\;; done;\n        *\n        */\nBase64Decode *base64decode = new Base64Decode(\"Base64Decode\"); base64decode->evaluate(s, NULL); delete base64decode;\n",
                      "markdown": "`        /**\n        * Transformations, generated by:\n        *\n        * for i in $(grep \"class \" -Ri src/actions/transformations/* | grep \" :\" | grep -v \"InstantCache\" | awk {'print $2'}); do echo $i *$(echo $i | awk '{print tolower($0)}') = new $i\\(\\\"$i\\\"\\)\\; $(echo $i | awk '{print tolower($0)}')-\\>evaluate\\(s, NULL\\)\\; delete $(echo $i | awk '{print tolower($0)}')\\;; done;\n        *\n        */\nBase64Decode *base64decode = new Base64Decode(\"Base64Decode\"); base64decode->evaluate(s, NULL); delete base64decode;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/fuzzer/afl_fuzzer.cc"
                },
                "region": {
                  "startLine": 161,
                  "startColumn": 70,
                  "endLine": 161,
                  "endColumn": 76,
                  "snippet": {
                    "text": "        /**\n        * Transformations, generated by:\n        *\n        * for i in $(grep \"class \" -Ri src/actions/transformations/* | grep \" :\" | grep -v \"InstantCache\" | awk {'print $2'}); do echo $i *$(echo $i | awk '{print tolower($0)}') = new $i\\(\\\"$i\\\"\\)\\; $(echo $i | awk '{print tolower($0)}')-\\>evaluate\\(s, NULL\\)\\; delete $(echo $i | awk '{print tolower($0)}')\\;; done;\n        *\n        */\nBase64Decode *base64decode = new Base64Decode(\"Base64Decode\"); base64decode->evaluate(s, NULL); delete base64decode;\n",
                    "rendered": {
                      "text": "        /**\n        * Transformations, generated by:\n        *\n        * for i in $(grep \"class \" -Ri src/actions/transformations/* | grep \" :\" | grep -v \"InstantCache\" | awk {'print $2'}); do echo $i *$(echo $i | awk '{print tolower($0)}') = new $i\\(\\\"$i\\\"\\)\\; $(echo $i | awk '{print tolower($0)}')-\\>evaluate\\(s, NULL\\)\\; delete $(echo $i | awk '{print tolower($0)}')\\;; done;\n        *\n        */\nBase64Decode *base64decode = new Base64Decode(\"Base64Decode\"); base64decode->evaluate(s, NULL); delete base64decode;\n",
                      "markdown": "`        /**\n        * Transformations, generated by:\n        *\n        * for i in $(grep \"class \" -Ri src/actions/transformations/* | grep \" :\" | grep -v \"InstantCache\" | awk {'print $2'}); do echo $i *$(echo $i | awk '{print tolower($0)}') = new $i\\(\\\"$i\\\"\\)\\; $(echo $i | awk '{print tolower($0)}')-\\>evaluate\\(s, NULL\\)\\; delete $(echo $i | awk '{print tolower($0)}')\\;; done;\n        *\n        */\nBase64Decode *base64decode = new Base64Decode(\"Base64Decode\"); base64decode->evaluate(s, NULL); delete base64decode;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/fuzzer/afl_fuzzer.cc"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 39,
                  "endLine": 67,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\n\n/**\n * for i in $(ls -l src/operators/*.h | awk {'print $9'}); do echo \"#include \\\"$i\\\"\"; done;\n *\n */\n#include \"src/operators/begins_with.h\"\n",
                    "rendered": {
                      "text": "\n\n/**\n * for i in $(ls -l src/operators/*.h | awk {'print $9'}); do echo \"#include \\\"$i\\\"\"; done;\n *\n */\n#include \"src/operators/begins_with.h\"\n",
                      "markdown": "`\n\n/**\n * for i in $(ls -l src/operators/*.h | awk {'print $9'}); do echo \"#include \\\"$i\\\"\"; done;\n *\n */\n#include \"src/operators/begins_with.h\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/fuzzer/afl_fuzzer.cc"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 53,
                  "endLine": 23,
                  "endColumn": 58,
                  "snippet": {
                    "text": "#include \"src/actions/transformations/transformation.h\"\n\n/**\n * for i in $(ls -l src/actions/transformations/*.h | awk {'print $9'}); do echo \"#include \\\"$i\\\"\"; done;\n *\n */\n#include \"src/actions/transformations/base64_decode.h\"\n",
                    "rendered": {
                      "text": "#include \"src/actions/transformations/transformation.h\"\n\n/**\n * for i in $(ls -l src/actions/transformations/*.h | awk {'print $9'}); do echo \"#include \\\"$i\\\"\"; done;\n *\n */\n#include \"src/actions/transformations/base64_decode.h\"\n",
                      "markdown": "`#include \"src/actions/transformations/transformation.h\"\n\n/**\n * for i in $(ls -l src/actions/transformations/*.h | awk {'print $9'}); do echo \"#include \\\"$i\\\"\"; done;\n *\n */\n#include \"src/actions/transformations/base64_decode.h\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/unit-tests-valgrind.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\nvalgrind --tool=massif ./unit-tests $*\nvalgrind --leak-check=full --suppressions=./valgrind_suppressions.txt ./unit-tests $*\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\nvalgrind --tool=massif ./unit-tests $*\nvalgrind --leak-check=full --suppressions=./valgrind_suppressions.txt ./unit-tests $*\n",
                      "markdown": "`#!/usr/bin/env bash\n\nvalgrind --tool=massif ./unit-tests $*\nvalgrind --leak-check=full --suppressions=./valgrind_suppressions.txt ./unit-tests $*\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/unit-tests-valgrind.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\nvalgrind --tool=massif ./unit-tests $*\nvalgrind --leak-check=full --suppressions=./valgrind_suppressions.txt ./unit-tests $*\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\nvalgrind --tool=massif ./unit-tests $*\nvalgrind --leak-check=full --suppressions=./valgrind_suppressions.txt ./unit-tests $*\n",
                      "markdown": "`#!/usr/bin/env bash\n\nvalgrind --tool=massif ./unit-tests $*\nvalgrind --leak-check=full --suppressions=./valgrind_suppressions.txt ./unit-tests $*\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/custom-test-driver"
                },
                "region": {
                  "startLine": 109,
                  "startColumn": 10,
                  "endLine": 110,
                  "endColumn": 4,
                  "snippet": {
                    "text": "\n# Test script is run here.\n\"$@\" >$log_file 2>&1 \nestatus=$?\ncat $log_file >> $trs_file\ntfail=`cat $log_file | egrep \"^:test-result: FAIL\" | wc -l`\ntfail=`printf \"%3d\" $tfail`\ntpass=`cat $log_file | egrep \"^:test-result: PASS\" | wc -l`\n",
                    "rendered": {
                      "text": "\n# Test script is run here.\n\"$@\" >$log_file 2>&1 \nestatus=$?\ncat $log_file >> $trs_file\ntfail=`cat $log_file | egrep \"^:test-result: FAIL\" | wc -l`\ntfail=`printf \"%3d\" $tfail`\ntpass=`cat $log_file | egrep \"^:test-result: PASS\" | wc -l`\n",
                      "markdown": "`\n# Test script is run here.\n\"$@\" >$log_file 2>&1 \nestatus=$?\ncat $log_file >> $trs_file\ntfail=`cat $log_file | egrep \"^:test-result: FAIL\" | wc -l`\ntfail=`printf \"%3d\" $tfail`\ntpass=`cat $log_file | egrep \"^:test-result: PASS\" | wc -l`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/custom-test-driver"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 6,
                  "endLine": 107,
                  "endColumn": 14,
                  "snippet": {
                    "text": "trap \"st=141; $do_exit\" 13\ntrap \"st=143; $do_exit\" 15\n\n# Test script is run here.\n\"$@\" >$log_file 2>&1 \nestatus=$?\ncat $log_file >> $trs_file\n",
                    "rendered": {
                      "text": "trap \"st=141; $do_exit\" 13\ntrap \"st=143; $do_exit\" 15\n\n# Test script is run here.\n\"$@\" >$log_file 2>&1 \nestatus=$?\ncat $log_file >> $trs_file\n",
                      "markdown": "`trap \"st=141; $do_exit\" 13\ntrap \"st=143; $do_exit\" 15\n\n# Test script is run here.\n\"$@\" >$log_file 2>&1 \nestatus=$?\ncat $log_file >> $trs_file\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/custom-test-driver"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nprint_usage ()\n{\n  cat <<END\nUsage:\n  test-driver --test-name NAME --log-file PATH --trs-file PATH\n              [--expect-failure {yes|no}] [--color-tests {yes|no}]\n",
                    "rendered": {
                      "text": "\nprint_usage ()\n{\n  cat <<END\nUsage:\n  test-driver --test-name NAME --log-file PATH --trs-file PATH\n              [--expect-failure {yes|no}] [--color-tests {yes|no}]\n",
                      "markdown": "`\nprint_usage ()\n{\n  cat <<END\nUsage:\n  test-driver --test-name NAME --log-file PATH --trs-file PATH\n              [--expect-failure {yes|no}] [--color-tests {yes|no}]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/custom-test-driver"
                },
                "region": {
                  "startLine": 23,
                  "startColumn": 15,
                  "endLine": 23,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program that contains a\n# configuration script generated by Autoconf, you may include it under\n# the same distribution terms that you use for the rest of that program.\n\n# This file is maintained in Automake, please report\n",
                    "rendered": {
                      "text": "\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program that contains a\n# configuration script generated by Autoconf, you may include it under\n# the same distribution terms that you use for the rest of that program.\n\n# This file is maintained in Automake, please report\n",
                      "markdown": "`\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program that contains a\n# configuration script generated by Autoconf, you may include it under\n# the same distribution terms that you use for the rest of that program.\n\n# This file is maintained in Automake, please report\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/regression-tests-valgrind.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\nvalgrind --tool=massif ./regression_tests $*\nvalgrind --leak-check=full --suppressions=./valgrind_suppressions.txt ./regression_tests $*\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\nvalgrind --tool=massif ./regression_tests $*\nvalgrind --leak-check=full --suppressions=./valgrind_suppressions.txt ./regression_tests $*\n",
                      "markdown": "`#!/usr/bin/env bash\n\nvalgrind --tool=massif ./regression_tests $*\nvalgrind --leak-check=full --suppressions=./valgrind_suppressions.txt ./regression_tests $*\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/regression-tests-valgrind.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\nvalgrind --tool=massif ./regression_tests $*\nvalgrind --leak-check=full --suppressions=./valgrind_suppressions.txt ./regression_tests $*\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\nvalgrind --tool=massif ./regression_tests $*\nvalgrind --leak-check=full --suppressions=./valgrind_suppressions.txt ./regression_tests $*\n",
                      "markdown": "`#!/usr/bin/env bash\n\nvalgrind --tool=massif ./regression_tests $*\nvalgrind --leak-check=full --suppressions=./valgrind_suppressions.txt ./regression_tests $*\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/unconditional_match.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/lt.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/no_match.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/collection/backend/lmdb.h"
                },
                "region": {
                  "startLine": 82,
                  "startColumn": 8,
                  "endLine": 82,
                  "endColumn": 16,
                  "snippet": {
                    "text": "        static MDBEnvProvider instance;\n        return instance;\n    }\n    MDB_env* GetEnv();\n    MDB_dbi* GetDBI();\n    bool isValid() const;\n\n",
                    "rendered": {
                      "text": "        static MDBEnvProvider instance;\n        return instance;\n    }\n    MDB_env* GetEnv();\n    MDB_dbi* GetDBI();\n    bool isValid() const;\n\n",
                      "markdown": "`        static MDBEnvProvider instance;\n        return instance;\n    }\n    MDB_env* GetEnv();\n    MDB_dbi* GetDBI();\n    bool isValid() const;\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/collection/backend/lmdb.h"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 18,
                  "endLine": 79,
                  "endColumn": 37,
                  "snippet": {
                    "text": "     * object stored in the static field (Meyers Singleton implementation).\n     */\n    static MDBEnvProvider& GetInstance() {\n        static MDBEnvProvider instance;\n        return instance;\n    }\n    MDB_env* GetEnv();\n",
                    "rendered": {
                      "text": "     * object stored in the static field (Meyers Singleton implementation).\n     */\n    static MDBEnvProvider& GetInstance() {\n        static MDBEnvProvider instance;\n        return instance;\n    }\n    MDB_env* GetEnv();\n",
                      "markdown": "`     * object stored in the static field (Meyers Singleton implementation).\n     */\n    static MDBEnvProvider& GetInstance() {\n        static MDBEnvProvider instance;\n        return instance;\n    }\n    MDB_env* GetEnv();\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/collection/backend/lmdb.h"
                },
                "region": {
                  "startLine": 78,
                  "startColumn": 14,
                  "endLine": 78,
                  "endColumn": 37,
                  "snippet": {
                    "text": "     * into the static field. On subsequent runs, it returns the client existing\n     * object stored in the static field (Meyers Singleton implementation).\n     */\n    static MDBEnvProvider& GetInstance() {\n        static MDBEnvProvider instance;\n        return instance;\n    }\n",
                    "rendered": {
                      "text": "     * into the static field. On subsequent runs, it returns the client existing\n     * object stored in the static field (Meyers Singleton implementation).\n     */\n    static MDBEnvProvider& GetInstance() {\n        static MDBEnvProvider instance;\n        return instance;\n    }\n",
                      "markdown": "`     * into the static field. On subsequent runs, it returns the client existing\n     * object stored in the static field (Meyers Singleton implementation).\n     */\n    static MDBEnvProvider& GetInstance() {\n        static MDBEnvProvider instance;\n        return instance;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/collection/backend/lmdb.h"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 55,
                  "endLine": 53,
                  "endColumn": 66,
                  "snippet": {
                    "text": "/**\n * The MDBEnvProvider class defines the `GetInstance` method that serves as an\n * alternative to constructor and lets clients access the same instance of this\n * class over and over. Its used to provide single MDB_env instance for each collection\n * that uses lmdb to store and retrieve data. That approach satisfies lmdb requirement:\n *\n *   \"LMDB uses POSIX locks on files, and these locks have issues if one process opens\n",
                    "rendered": {
                      "text": "/**\n * The MDBEnvProvider class defines the `GetInstance` method that serves as an\n * alternative to constructor and lets clients access the same instance of this\n * class over and over. Its used to provide single MDB_env instance for each collection\n * that uses lmdb to store and retrieve data. That approach satisfies lmdb requirement:\n *\n *   \"LMDB uses POSIX locks on files, and these locks have issues if one process opens\n",
                      "markdown": "`/**\n * The MDBEnvProvider class defines the `GetInstance` method that serves as an\n * alternative to constructor and lets clients access the same instance of this\n * class over and over. Its used to provide single MDB_env instance for each collection\n * that uses lmdb to store and retrieve data. That approach satisfies lmdb requirement:\n *\n *   \"LMDB uses POSIX locks on files, and these locks have issues if one process opens\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/collection/backend/lmdb.h"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 10,
                  "endLine": 51,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\n\n/**\n * The MDBEnvProvider class defines the `GetInstance` method that serves as an\n * alternative to constructor and lets clients access the same instance of this\n * class over and over. Its used to provide single MDB_env instance for each collection\n * that uses lmdb to store and retrieve data. That approach satisfies lmdb requirement:\n",
                    "rendered": {
                      "text": "\n\n/**\n * The MDBEnvProvider class defines the `GetInstance` method that serves as an\n * alternative to constructor and lets clients access the same instance of this\n * class over and over. Its used to provide single MDB_env instance for each collection\n * that uses lmdb to store and retrieve data. That approach satisfies lmdb requirement:\n",
                      "markdown": "`\n\n/**\n * The MDBEnvProvider class defines the `GetInstance` method that serves as an\n * alternative to constructor and lets clients access the same instance of this\n * class over and over. Its used to provide single MDB_env instance for each collection\n * that uses lmdb to store and retrieve data. That approach satisfies lmdb requirement:\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/collection/backend/collection_data.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/collection/backend/in_memory-per_process.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/url_decode_uni.cc"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 30,
                  "endLine": 48,
                  "endColumn": 34,
                  "snippet": {
                    "text": "            /* Character is a percent sign. */\n                /* IIS-specific %u encoding. */\n                if (i + 5 < input_len) {\n                    /* We have at least 4 data bytes. */\n                    if ((VALID_HEX(input[i + 2])) &&\n                        (VALID_HEX(input[i + 3])) &&\n                        (VALID_HEX(input[i + 4])) &&\n",
                    "rendered": {
                      "text": "            /* Character is a percent sign. */\n                /* IIS-specific %u encoding. */\n                if (i + 5 < input_len) {\n                    /* We have at least 4 data bytes. */\n                    if ((VALID_HEX(input[i + 2])) &&\n                        (VALID_HEX(input[i + 3])) &&\n                        (VALID_HEX(input[i + 4])) &&\n",
                      "markdown": "`            /* Character is a percent sign. */\n                /* IIS-specific %u encoding. */\n                if (i + 5 < input_len) {\n                    /* We have at least 4 data bytes. */\n                    if ((VALID_HEX(input[i + 2])) &&\n                        (VALID_HEX(input[i + 3])) &&\n                        (VALID_HEX(input[i + 4])) &&\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/url_decode_uni.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/block.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/init_col.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/rev.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/msg.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/variables/time_wday.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/regex.cc"
                },
                "region": {
                  "startLine": 313,
                  "startColumn": 48,
                  "endLine": 313,
                  "endColumn": 52,
                  "snippet": {
                    "text": "                        prev_match_zero_length = false;\n                    } else {\n                        if ( startOffset == s.length()) {\n                            // zero-length match at end of string; force end of while-loop\n                            startOffset++;\n                        } else {\n                            // zero-length match mid-string; adjust next match attempt\n",
                    "rendered": {
                      "text": "                        prev_match_zero_length = false;\n                    } else {\n                        if ( startOffset == s.length()) {\n                            // zero-length match at end of string; force end of while-loop\n                            startOffset++;\n                        } else {\n                            // zero-length match mid-string; adjust next match attempt\n",
                      "markdown": "`                        prev_match_zero_length = false;\n                    } else {\n                        if ( startOffset == s.length()) {\n                            // zero-length match at end of string; force end of while-loop\n                            startOffset++;\n                        } else {\n                            // zero-length match mid-string; adjust next match attempt\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/regex.cc"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 78,
                  "endLine": 33,
                  "endColumn": 82,
                  "snippet": {
                    "text": "#define pcre_study_opt PCRE_STUDY_JIT_COMPILE | PCRE_STUDY_EXTRA_NEEDED\n#else\n// NOTE: Add PCRE_STUDY_EXTRA_NEEDED so studying always yields a pcre_extra strucure\n// and we can selectively override match limits using a copy of that structure at runtime.\n#define pcre_study_opt PCRE_STUDY_EXTRA_NEEDED\n#endif\n#endif\n",
                    "rendered": {
                      "text": "#define pcre_study_opt PCRE_STUDY_JIT_COMPILE | PCRE_STUDY_EXTRA_NEEDED\n#else\n// NOTE: Add PCRE_STUDY_EXTRA_NEEDED so studying always yields a pcre_extra strucure\n// and we can selectively override match limits using a copy of that structure at runtime.\n#define pcre_study_opt PCRE_STUDY_EXTRA_NEEDED\n#endif\n#endif\n",
                      "markdown": "`#define pcre_study_opt PCRE_STUDY_JIT_COMPILE | PCRE_STUDY_EXTRA_NEEDED\n#else\n// NOTE: Add PCRE_STUDY_EXTRA_NEEDED so studying always yields a pcre_extra strucure\n// and we can selectively override match limits using a copy of that structure at runtime.\n#define pcre_study_opt PCRE_STUDY_EXTRA_NEEDED\n#endif\n#endif\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/regex.cc"
                },
                "region": {
                  "startLine": 29,
                  "startColumn": 78,
                  "endLine": 29,
                  "endColumn": 82,
                  "snippet": {
                    "text": "#ifndef WITH_PCRE2\n#if PCRE_HAVE_JIT\n// NOTE: Add PCRE_STUDY_EXTRA_NEEDED so studying always yields a pcre_extra strucure\n// and we can selectively override match limits using a copy of that structure at runtime.\n#define pcre_study_opt PCRE_STUDY_JIT_COMPILE | PCRE_STUDY_EXTRA_NEEDED\n#else\n// NOTE: Add PCRE_STUDY_EXTRA_NEEDED so studying always yields a pcre_extra strucure\n",
                    "rendered": {
                      "text": "#ifndef WITH_PCRE2\n#if PCRE_HAVE_JIT\n// NOTE: Add PCRE_STUDY_EXTRA_NEEDED so studying always yields a pcre_extra strucure\n// and we can selectively override match limits using a copy of that structure at runtime.\n#define pcre_study_opt PCRE_STUDY_JIT_COMPILE | PCRE_STUDY_EXTRA_NEEDED\n#else\n// NOTE: Add PCRE_STUDY_EXTRA_NEEDED so studying always yields a pcre_extra strucure\n",
                      "markdown": "`#ifndef WITH_PCRE2\n#if PCRE_HAVE_JIT\n// NOTE: Add PCRE_STUDY_EXTRA_NEEDED so studying always yields a pcre_extra strucure\n// and we can selectively override match limits using a copy of that structure at runtime.\n#define pcre_study_opt PCRE_STUDY_JIT_COMPILE | PCRE_STUDY_EXTRA_NEEDED\n#else\n// NOTE: Add PCRE_STUDY_EXTRA_NEEDED so studying always yields a pcre_extra strucure\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/regex.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/regex.cc"
                },
                "region": {
                  "startLine": 325,
                  "startColumn": 71,
                  "endLine": 325,
                  "endColumn": 77,
                  "snippet": {
                    "text": "        } else {\n            if (prev_match_zero_length) {\n                // The n-1 search found a zero-length match, so we did a subsequent search\n                // with the special flags. That subsequent exec did not find a match, so now advance\n                // by one character (unless CRLF, then advance by two)\n                startOffset++;\n                if (crlfIsNewline() && (startOffset < s.length()) && (s[startOffset-1] == '\\r')\n",
                    "rendered": {
                      "text": "        } else {\n            if (prev_match_zero_length) {\n                // The n-1 search found a zero-length match, so we did a subsequent search\n                // with the special flags. That subsequent exec did not find a match, so now advance\n                // by one character (unless CRLF, then advance by two)\n                startOffset++;\n                if (crlfIsNewline() && (startOffset < s.length()) && (s[startOffset-1] == '\\r')\n",
                      "markdown": "`        } else {\n            if (prev_match_zero_length) {\n                // The n-1 search found a zero-length match, so we did a subsequent search\n                // with the special flags. That subsequent exec did not find a match, so now advance\n                // by one character (unless CRLF, then advance by two)\n                startOffset++;\n                if (crlfIsNewline() && (startOffset < s.length()) && (s[startOffset-1] == '\\r')\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/examples/reading_logs_via_rule_message/reading_logs_via_rule_message.h"
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 55,
                  "endLine": 134,
                  "endColumn": 60,
                  "snippet": {
                    "text": "        for (auto i = 0; i != threads.size(); ++i) {\n            threads[i] = std::thread(\n                [&modsec, &rules]() {\n                    process_request(modsec.get(), rules.get());\n                });\n        }\n\n",
                    "rendered": {
                      "text": "        for (auto i = 0; i != threads.size(); ++i) {\n            threads[i] = std::thread(\n                [&modsec, &rules]() {\n                    process_request(modsec.get(), rules.get());\n                });\n        }\n\n",
                      "markdown": "`        for (auto i = 0; i != threads.size(); ++i) {\n            threads[i] = std::thread(\n                [&modsec, &rules]() {\n                    process_request(modsec.get(), rules.get());\n                });\n        }\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/examples/reading_logs_via_rule_message/reading_logs_via_rule_message.h"
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 42,
                  "endLine": 134,
                  "endColumn": 47,
                  "snippet": {
                    "text": "        for (auto i = 0; i != threads.size(); ++i) {\n            threads[i] = std::thread(\n                [&modsec, &rules]() {\n                    process_request(modsec.get(), rules.get());\n                });\n        }\n\n",
                    "rendered": {
                      "text": "        for (auto i = 0; i != threads.size(); ++i) {\n            threads[i] = std::thread(\n                [&modsec, &rules]() {\n                    process_request(modsec.get(), rules.get());\n                });\n        }\n\n",
                      "markdown": "`        for (auto i = 0; i != threads.size(); ++i) {\n            threads[i] = std::thread(\n                [&modsec, &rules]() {\n                    process_request(modsec.get(), rules.get());\n                });\n        }\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/examples/reading_logs_via_rule_message/simple_request.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/common/modsecurity_test.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/common/modsecurity_test.cc"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 3,
                  "endLine": 62,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n    std::string str((std::istreambuf_iterator<char>(myfile)),\n        std::istreambuf_iterator<char>());\n    node = yajl_tree_parse((const char *) str.c_str(), errbuf, sizeof(errbuf));\n    if (node == NULL) {\n        std::cout << \"Problems parsing file: \" << file << std::endl;\n        if (strlen(errbuf) > 0) {\n",
                    "rendered": {
                      "text": "\n    std::string str((std::istreambuf_iterator<char>(myfile)),\n        std::istreambuf_iterator<char>());\n    node = yajl_tree_parse((const char *) str.c_str(), errbuf, sizeof(errbuf));\n    if (node == NULL) {\n        std::cout << \"Problems parsing file: \" << file << std::endl;\n        if (strlen(errbuf) > 0) {\n",
                      "markdown": "`\n    std::string str((std::istreambuf_iterator<char>(myfile)),\n        std::istreambuf_iterator<char>());\n    node = yajl_tree_parse((const char *) str.c_str(), errbuf, sizeof(errbuf));\n    if (node == NULL) {\n        std::cout << \"Problems parsing file: \" << file << std::endl;\n        if (strlen(errbuf) > 0) {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/unit/unit.cc"
                },
                "region": {
                  "startLine": 132,
                  "startColumn": 49,
                  "endLine": 132,
                  "endColumn": 54,
                  "snippet": {
                    "text": "            [&item, &t, &result]()\n            {\n                for (auto j = 0; j != ITERATIONS; ++j)\n                    result = TestType::eval(*item.get(), t);\n            });\n    }\n\n",
                    "rendered": {
                      "text": "            [&item, &t, &result]()\n            {\n                for (auto j = 0; j != ITERATIONS; ++j)\n                    result = TestType::eval(*item.get(), t);\n            });\n    }\n\n",
                      "markdown": "`            [&item, &t, &result]()\n            {\n                for (auto j = 0; j != ITERATIONS; ++j)\n                    result = TestType::eval(*item.get(), t);\n            });\n    }\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/unit/unit.cc"
                },
                "region": {
                  "startLine": 123,
                  "startColumn": 15,
                  "endLine": 123,
                  "endColumn": 20,
                  "snippet": {
                    "text": "    std::array<UnitTestResult, NUM_THREADS> results;\n\n    std::unique_ptr<typename TestType::ItemType> item(TestType::init(t));\n    assert(item.get() != nullptr);\n\n    for (auto i = 0; i != threads.size(); ++i)\n    {\n",
                    "rendered": {
                      "text": "    std::array<UnitTestResult, NUM_THREADS> results;\n\n    std::unique_ptr<typename TestType::ItemType> item(TestType::init(t));\n    assert(item.get() != nullptr);\n\n    for (auto i = 0; i != threads.size(); ++i)\n    {\n",
                      "markdown": "`    std::array<UnitTestResult, NUM_THREADS> results;\n\n    std::unique_ptr<typename TestType::ItemType> item(TestType::init(t));\n    assert(item.get() != nullptr);\n\n    for (auto i = 0; i != threads.size(); ++i)\n    {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/unit/unit.cc"
                },
                "region": {
                  "startLine": 109,
                  "startColumn": 31,
                  "endLine": 109,
                  "endColumn": 36,
                  "snippet": {
                    "text": "    std::unique_ptr<typename TestType::ItemType> item(TestType::init(t));\n    assert(item.get() != nullptr);\n\n    return TestType::eval(*item.get(), t);\n}\n\n\n",
                    "rendered": {
                      "text": "    std::unique_ptr<typename TestType::ItemType> item(TestType::init(t));\n    assert(item.get() != nullptr);\n\n    return TestType::eval(*item.get(), t);\n}\n\n\n",
                      "markdown": "`    std::unique_ptr<typename TestType::ItemType> item(TestType::init(t));\n    assert(item.get() != nullptr);\n\n    return TestType::eval(*item.get(), t);\n}\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/unit/unit.cc"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 15,
                  "endLine": 107,
                  "endColumn": 20,
                  "snippet": {
                    "text": "template<typename TestType>\nUnitTestResult perform_unit_test_once(const UnitTest &t) {\n    std::unique_ptr<typename TestType::ItemType> item(TestType::init(t));\n    assert(item.get() != nullptr);\n\n    return TestType::eval(*item.get(), t);\n}\n",
                    "rendered": {
                      "text": "template<typename TestType>\nUnitTestResult perform_unit_test_once(const UnitTest &t) {\n    std::unique_ptr<typename TestType::ItemType> item(TestType::init(t));\n    assert(item.get() != nullptr);\n\n    return TestType::eval(*item.get(), t);\n}\n",
                      "markdown": "`template<typename TestType>\nUnitTestResult perform_unit_test_once(const UnitTest &t) {\n    std::unique_ptr<typename TestType::ItemType> item(TestType::init(t));\n    assert(item.get() != nullptr);\n\n    return TestType::eval(*item.get(), t);\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/unit/unit.cc"
                },
                "region": {
                  "startLine": 147,
                  "startColumn": 77,
                  "endLine": 147,
                  "endColumn": 81,
                  "snippet": {
                    "text": "            ret = results[i];   // initial value\n    }\n\n    return ret; // cppcheck-suppress uninitvar ; false positive, ret assigned at least once in previous loop\n}\n\n\n",
                    "rendered": {
                      "text": "            ret = results[i];   // initial value\n    }\n\n    return ret; // cppcheck-suppress uninitvar ; false positive, ret assigned at least once in previous loop\n}\n\n\n",
                      "markdown": "`            ret = results[i];   // initial value\n    }\n\n    return ret; // cppcheck-suppress uninitvar ; false positive, ret assigned at least once in previous loop\n}\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/unit/unit.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/unit/unit_test.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/regression/action-exec.json"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 39,
                  "endLine": 44,
                  "endColumn": 44,
                  "snippet": {
                    "text": "      \"audit_log\":\"\",\n      \"debug_log\":\"Saving msg: This is a test, text\\/html,application\",\n      \"error_log\":\"\",\n      \"parser_error\":\"exec: Expecting a Lua script: /bin/ech\"\n    },\n    \"rules\":[\n      \"SecRuleEngine On\",\n",
                    "rendered": {
                      "text": "      \"audit_log\":\"\",\n      \"debug_log\":\"Saving msg: This is a test, text\\/html,application\",\n      \"error_log\":\"\",\n      \"parser_error\":\"exec: Expecting a Lua script: /bin/ech\"\n    },\n    \"rules\":[\n      \"SecRuleEngine On\",\n",
                      "markdown": "`      \"audit_log\":\"\",\n      \"debug_log\":\"Saving msg: This is a test, text\\/html,application\",\n      \"error_log\":\"\",\n      \"parser_error\":\"exec: Expecting a Lua script: /bin/ech\"\n    },\n    \"rules\":[\n      \"SecRuleEngine On\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/regression/collection-lua.json"
                },
                "region": {
                  "startLine": 257,
                  "startColumn": 20,
                  "endLine": 257,
                  "endColumn": 25,
                  "snippet": {
                    "text": "   {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing LUA :: m.getvars ARGS (8/8)\",\n    \"resource\":\"lua\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n",
                    "rendered": {
                      "text": "   {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing LUA :: m.getvars ARGS (8/8)\",\n    \"resource\":\"lua\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n",
                      "markdown": "`   {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing LUA :: m.getvars ARGS (8/8)\",\n    \"resource\":\"lua\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/regression/collection-lua.json"
                },
                "region": {
                  "startLine": 215,
                  "startColumn": 20,
                  "endLine": 215,
                  "endColumn": 25,
                  "snippet": {
                    "text": "   {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing LUA :: m.set USER (6/7)\",\n    \"resource\":\"lua\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n",
                    "rendered": {
                      "text": "   {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing LUA :: m.set USER (6/7)\",\n    \"resource\":\"lua\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n",
                      "markdown": "`   {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing LUA :: m.set USER (6/7)\",\n    \"resource\":\"lua\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/regression/collection-lua.json"
                },
                "region": {
                  "startLine": 173,
                  "startColumn": 20,
                  "endLine": 173,
                  "endColumn": 25,
                  "snippet": {
                    "text": "   {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing LUA :: m.set SESSION (5/7)\",\n    \"resource\":\"lua\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n",
                    "rendered": {
                      "text": "   {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing LUA :: m.set SESSION (5/7)\",\n    \"resource\":\"lua\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n",
                      "markdown": "`   {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing LUA :: m.set SESSION (5/7)\",\n    \"resource\":\"lua\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/regression/collection-lua.json"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 20,
                  "endLine": 131,
                  "endColumn": 25,
                  "snippet": {
                    "text": "  {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing LUA :: m.set RESOURCE (4/7)\",\n    \"resource\":\"lua\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n",
                    "rendered": {
                      "text": "  {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing LUA :: m.set RESOURCE (4/7)\",\n    \"resource\":\"lua\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n",
                      "markdown": "`  {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing LUA :: m.set RESOURCE (4/7)\",\n    \"resource\":\"lua\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/regression/collection-lua.json"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 20,
                  "endLine": 89,
                  "endColumn": 25,
                  "snippet": {
                    "text": "  {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing LUA :: m.set GLOBAL (3/7)\",\n    \"resource\":\"lua\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n",
                    "rendered": {
                      "text": "  {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing LUA :: m.set GLOBAL (3/7)\",\n    \"resource\":\"lua\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n",
                      "markdown": "`  {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing LUA :: m.set GLOBAL (3/7)\",\n    \"resource\":\"lua\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/regression/collection-lua.json"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 33,
                  "endLine": 47,
                  "endColumn": 37,
                  "snippet": {
                    "text": "  {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing LUA :: m.set IP (2/7)\",\n    \"resource\":\"lua\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n",
                    "rendered": {
                      "text": "  {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing LUA :: m.set IP (2/7)\",\n    \"resource\":\"lua\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n",
                      "markdown": "`  {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing LUA :: m.set IP (2/7)\",\n    \"resource\":\"lua\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/regression/collection-lua.json"
                },
                "region": {
                  "startLine": 47,
                  "startColumn": 20,
                  "endLine": 47,
                  "endColumn": 25,
                  "snippet": {
                    "text": "  {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing LUA :: m.set IP (2/7)\",\n    \"resource\":\"lua\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n",
                    "rendered": {
                      "text": "  {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing LUA :: m.set IP (2/7)\",\n    \"resource\":\"lua\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n",
                      "markdown": "`  {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing LUA :: m.set IP (2/7)\",\n    \"resource\":\"lua\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/regression/collection-lua.json"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 20,
                  "endLine": 5,
                  "endColumn": 25,
                  "snippet": {
                    "text": "  {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing LUA :: m.set TX (1/7)\",\n    \"resource\":\"lua\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n",
                    "rendered": {
                      "text": "  {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing LUA :: m.set TX (1/7)\",\n    \"resource\":\"lua\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n",
                      "markdown": "`  {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing LUA :: m.set TX (1/7)\",\n    \"resource\":\"lua\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/rx.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/pm_from_file.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/hex_decode.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/trim.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/lower_case.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/parity_odd_7bit.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/css_decode.cc"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 30,
                  "endLine": 55,
                  "endColumn": 34,
                  "snippet": {
                    "text": "                }\n\n                if (j > 0) {\n                    /* We have at least one valid hexadecimal character. */\n                    int fullcheck = 0;\n\n                    /* For now just use the last two bytes. */\n",
                    "rendered": {
                      "text": "                }\n\n                if (j > 0) {\n                    /* We have at least one valid hexadecimal character. */\n                    int fullcheck = 0;\n\n                    /* For now just use the last two bytes. */\n",
                      "markdown": "`                }\n\n                if (j > 0) {\n                    /* We have at least one valid hexadecimal character. */\n                    int fullcheck = 0;\n\n                    /* For now just use the last two bytes. */\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/css_decode.cc"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 23,
                  "endLine": 42,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    while (i < input_len) {\n        /* Is the character a backslash? */\n        if (input[i] == '\\\\') {\n            /* Is there at least one more byte? */\n            if (i + 1 < input_len) {\n                i++; /* We are not going to need the backslash. */\n\n",
                    "rendered": {
                      "text": "    while (i < input_len) {\n        /* Is the character a backslash? */\n        if (input[i] == '\\\\') {\n            /* Is there at least one more byte? */\n            if (i + 1 < input_len) {\n                i++; /* We are not going to need the backslash. */\n\n",
                      "markdown": "`    while (i < input_len) {\n        /* Is the character a backslash? */\n        if (input[i] == '\\\\') {\n            /* Is there at least one more byte? */\n            if (i + 1 < input_len) {\n                i++; /* We are not going to need the backslash. */\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/css_decode.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/audit_log.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/maturity.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/skip.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/multi_match.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/exec.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/exec.cc"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 28,
                  "endLine": 39,
                  "endColumn": 36,
                  "snippet": {
                    "text": "    m_script = utils::find_resource(m_parser_payload, \"\", &err);\n\n    if (m_script.size() == 0) {\n        error->assign(\"exec: Script not found: \" + err);\n        return false;\n    }\n\n",
                    "rendered": {
                      "text": "    m_script = utils::find_resource(m_parser_payload, \"\", &err);\n\n    if (m_script.size() == 0) {\n        error->assign(\"exec: Script not found: \" + err);\n        return false;\n    }\n\n",
                      "markdown": "`    m_script = utils::find_resource(m_parser_payload, \"\", &err);\n\n    if (m_script.size() == 0) {\n        error->assign(\"exec: Script not found: \" + err);\n        return false;\n    }\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/variables/variable.cc"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 29,
                  "endLine": 80,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n\nstd::string operator+(const std::string &a, Variable *v) {\n    return a + *v->m_fullName.get();\n}\n\n\n",
                    "rendered": {
                      "text": "\n\nstd::string operator+(const std::string &a, Variable *v) {\n    return a + *v->m_fullName.get();\n}\n\n\n",
                      "markdown": "`\n\nstd::string operator+(const std::string &a, Variable *v) {\n    return a + *v->m_fullName.get();\n}\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/variables/variable.cc"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 49,
                  "endLine": 67,
                  "endColumn": 54,
                  "snippet": {
                    "text": "        return;\n    }\n\n    vr = dynamic_cast<VariableRegex *>(ve->m_base.get());\n\n    if (vr == NULL) {\n        r.reset(new KeyExclusionString(v->m_name));\n",
                    "rendered": {
                      "text": "        return;\n    }\n\n    vr = dynamic_cast<VariableRegex *>(ve->m_base.get());\n\n    if (vr == NULL) {\n        r.reset(new KeyExclusionString(v->m_name));\n",
                      "markdown": "`        return;\n    }\n\n    vr = dynamic_cast<VariableRegex *>(ve->m_base.get());\n\n    if (vr == NULL) {\n        r.reset(new KeyExclusionString(v->m_name));\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/variables/variable.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/variables/time_sec.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/variables/time_day.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/msc_tree.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/msc_tree.cc"
                },
                "region": {
                  "startLine": 822,
                  "startColumn": 54,
                  "endLine": 822,
                  "endColumn": 58,
                  "snippet": {
                    "text": "            return CPTFindElement(ipdata, NETMASK_128, tree);\n        default:\n            //if (msr && msr->txcfg->debuglog_level >= 9) {\n                //msr_log(msr, 9, \"CPTIpMatch: Unknown ip type 0x%x\", type);\n            //}\n            return NULL;\n    }\n",
                    "rendered": {
                      "text": "            return CPTFindElement(ipdata, NETMASK_128, tree);\n        default:\n            //if (msr && msr->txcfg->debuglog_level >= 9) {\n                //msr_log(msr, 9, \"CPTIpMatch: Unknown ip type 0x%x\", type);\n            //}\n            return NULL;\n    }\n",
                      "markdown": "`            return CPTFindElement(ipdata, NETMASK_128, tree);\n        default:\n            //if (msr && msr->txcfg->debuglog_level >= 9) {\n                //msr_log(msr, 9, \"CPTIpMatch: Unknown ip type 0x%x\", type);\n            //}\n            return NULL;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/msc_tree.cc"
                },
                "region": {
                  "startLine": 817,
                  "startColumn": 56,
                  "endLine": 817,
                  "endColumn": 60,
                  "snippet": {
                    "text": "            return CPTFindElement(ipdata, NETMASK_32, tree);\n        case IPV6_TREE:\n            //if (msr && msr->txcfg->debuglog_level >= 9) {\n                //msr_log(msr, 9, \"CPTIpMatch: Searching ip type 0x%x\", type);\n            //}\n            return CPTFindElement(ipdata, NETMASK_128, tree);\n        default:\n",
                    "rendered": {
                      "text": "            return CPTFindElement(ipdata, NETMASK_32, tree);\n        case IPV6_TREE:\n            //if (msr && msr->txcfg->debuglog_level >= 9) {\n                //msr_log(msr, 9, \"CPTIpMatch: Searching ip type 0x%x\", type);\n            //}\n            return CPTFindElement(ipdata, NETMASK_128, tree);\n        default:\n",
                      "markdown": "`            return CPTFindElement(ipdata, NETMASK_32, tree);\n        case IPV6_TREE:\n            //if (msr && msr->txcfg->debuglog_level >= 9) {\n                //msr_log(msr, 9, \"CPTIpMatch: Searching ip type 0x%x\", type);\n            //}\n            return CPTFindElement(ipdata, NETMASK_128, tree);\n        default:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/msc_tree.cc"
                },
                "region": {
                  "startLine": 812,
                  "startColumn": 56,
                  "endLine": 812,
                  "endColumn": 60,
                  "snippet": {
                    "text": "    switch(type)    {\n        case IPV4_TREE:\n            //if (msr && msr->txcfg->debuglog_level >= 9) {\n                //msr_log(msr, 9, \"CPTIpMatch: Searching ip type 0x%x\", type);\n            //}\n            return CPTFindElement(ipdata, NETMASK_32, tree);\n        case IPV6_TREE:\n",
                    "rendered": {
                      "text": "    switch(type)    {\n        case IPV4_TREE:\n            //if (msr && msr->txcfg->debuglog_level >= 9) {\n                //msr_log(msr, 9, \"CPTIpMatch: Searching ip type 0x%x\", type);\n            //}\n            return CPTFindElement(ipdata, NETMASK_32, tree);\n        case IPV6_TREE:\n",
                      "markdown": "`    switch(type)    {\n        case IPV4_TREE:\n            //if (msr && msr->txcfg->debuglog_level >= 9) {\n                //msr_log(msr, 9, \"CPTIpMatch: Searching ip type 0x%x\", type);\n            //}\n            return CPTFindElement(ipdata, NETMASK_32, tree);\n        case IPV6_TREE:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/msc_tree.cc"
                },
                "region": {
                  "startLine": 804,
                  "startColumn": 48,
                  "endLine": 804,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\n    if(ipdata == NULL)  {\n        //if (msr && msr->txcfg->debuglog_level >= 9) {\n            //msr_log(msr, 9, \"CPTIpMatch: Empty ip address. Nothing to search for.\");\n        //}\n        return NULL;\n    }\n",
                    "rendered": {
                      "text": "\n    if(ipdata == NULL)  {\n        //if (msr && msr->txcfg->debuglog_level >= 9) {\n            //msr_log(msr, 9, \"CPTIpMatch: Empty ip address. Nothing to search for.\");\n        //}\n        return NULL;\n    }\n",
                      "markdown": "`\n    if(ipdata == NULL)  {\n        //if (msr && msr->txcfg->debuglog_level >= 9) {\n            //msr_log(msr, 9, \"CPTIpMatch: Empty ip address. Nothing to search for.\");\n        //}\n        return NULL;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/msc_tree.cc"
                },
                "region": {
                  "startLine": 783,
                  "startColumn": 78,
                  "endLine": 783,
                  "endColumn": 82,
                  "snippet": {
                    "text": "        if ((node->prefix->buffer[bytes] & mask) == (temp_data[bytes] & mask)) {\n            if (TreePrefixNetmask(node->prefix, ip_bitmask, TRUE)) {\n                //if (msr && msr->txcfg->debuglog_level >= 9) {\n                    //msr_log(msr, 9, \"CPTFindElement: Node found for provided ip address\");\n                //}\n                return node;\n            }\n",
                    "rendered": {
                      "text": "        if ((node->prefix->buffer[bytes] & mask) == (temp_data[bytes] & mask)) {\n            if (TreePrefixNetmask(node->prefix, ip_bitmask, TRUE)) {\n                //if (msr && msr->txcfg->debuglog_level >= 9) {\n                    //msr_log(msr, 9, \"CPTFindElement: Node found for provided ip address\");\n                //}\n                return node;\n            }\n",
                      "markdown": "`        if ((node->prefix->buffer[bytes] & mask) == (temp_data[bytes] & mask)) {\n            if (TreePrefixNetmask(node->prefix, ip_bitmask, TRUE)) {\n                //if (msr && msr->txcfg->debuglog_level >= 9) {\n                    //msr_log(msr, 9, \"CPTFindElement: Node found for provided ip address\");\n                //}\n                return node;\n            }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/msc_tree.cc"
                },
                "region": {
                  "startLine": 783,
                  "startColumn": 54,
                  "endLine": 783,
                  "endColumn": 60,
                  "snippet": {
                    "text": "        if ((node->prefix->buffer[bytes] & mask) == (temp_data[bytes] & mask)) {\n            if (TreePrefixNetmask(node->prefix, ip_bitmask, TRUE)) {\n                //if (msr && msr->txcfg->debuglog_level >= 9) {\n                    //msr_log(msr, 9, \"CPTFindElement: Node found for provided ip address\");\n                //}\n                return node;\n            }\n",
                    "rendered": {
                      "text": "        if ((node->prefix->buffer[bytes] & mask) == (temp_data[bytes] & mask)) {\n            if (TreePrefixNetmask(node->prefix, ip_bitmask, TRUE)) {\n                //if (msr && msr->txcfg->debuglog_level >= 9) {\n                    //msr_log(msr, 9, \"CPTFindElement: Node found for provided ip address\");\n                //}\n                return node;\n            }\n",
                      "markdown": "`        if ((node->prefix->buffer[bytes] & mask) == (temp_data[bytes] & mask)) {\n            if (TreePrefixNetmask(node->prefix, ip_bitmask, TRUE)) {\n                //if (msr && msr->txcfg->debuglog_level >= 9) {\n                    //msr_log(msr, 9, \"CPTFindElement: Node found for provided ip address\");\n                //}\n                return node;\n            }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/msc_tree.cc"
                },
                "region": {
                  "startLine": 775,
                  "startColumn": 78,
                  "endLine": 775,
                  "endColumn": 82,
                  "snippet": {
                    "text": "        if ((ip_bitmask % 8) == 0) {\n            if (TreePrefixNetmask(node->prefix, ip_bitmask, TRUE)) {\n                //if (msr && msr->txcfg->debuglog_level >= 9) {\n                    //msr_log(msr, 9, \"CPTFindElement: Node found for provided ip address\");\n                //}\n                return node;\n            }\n",
                    "rendered": {
                      "text": "        if ((ip_bitmask % 8) == 0) {\n            if (TreePrefixNetmask(node->prefix, ip_bitmask, TRUE)) {\n                //if (msr && msr->txcfg->debuglog_level >= 9) {\n                    //msr_log(msr, 9, \"CPTFindElement: Node found for provided ip address\");\n                //}\n                return node;\n            }\n",
                      "markdown": "`        if ((ip_bitmask % 8) == 0) {\n            if (TreePrefixNetmask(node->prefix, ip_bitmask, TRUE)) {\n                //if (msr && msr->txcfg->debuglog_level >= 9) {\n                    //msr_log(msr, 9, \"CPTFindElement: Node found for provided ip address\");\n                //}\n                return node;\n            }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/msc_tree.cc"
                },
                "region": {
                  "startLine": 775,
                  "startColumn": 54,
                  "endLine": 775,
                  "endColumn": 60,
                  "snippet": {
                    "text": "        if ((ip_bitmask % 8) == 0) {\n            if (TreePrefixNetmask(node->prefix, ip_bitmask, TRUE)) {\n                //if (msr && msr->txcfg->debuglog_level >= 9) {\n                    //msr_log(msr, 9, \"CPTFindElement: Node found for provided ip address\");\n                //}\n                return node;\n            }\n",
                    "rendered": {
                      "text": "        if ((ip_bitmask % 8) == 0) {\n            if (TreePrefixNetmask(node->prefix, ip_bitmask, TRUE)) {\n                //if (msr && msr->txcfg->debuglog_level >= 9) {\n                    //msr_log(msr, 9, \"CPTFindElement: Node found for provided ip address\");\n                //}\n                return node;\n            }\n",
                      "markdown": "`        if ((ip_bitmask % 8) == 0) {\n            if (TreePrefixNetmask(node->prefix, ip_bitmask, TRUE)) {\n                //if (msr && msr->txcfg->debuglog_level >= 9) {\n                    //msr_log(msr, 9, \"CPTFindElement: Node found for provided ip address\");\n                //}\n                return node;\n            }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/msc_tree.cc"
                },
                "region": {
                  "startLine": 764,
                  "startColumn": 59,
                  "endLine": 764,
                  "endColumn": 65,
                  "snippet": {
                    "text": "\n    if(node->prefix == NULL)    {\n        //if (msr && msr->txcfg->debuglog_level >= 9) {\n        //    msr_log(msr, 9, \"CPTFindElement: Found a tree node but prefix is NULL.\");\n        //}\n        return node;\n    }\n",
                    "rendered": {
                      "text": "\n    if(node->prefix == NULL)    {\n        //if (msr && msr->txcfg->debuglog_level >= 9) {\n        //    msr_log(msr, 9, \"CPTFindElement: Found a tree node but prefix is NULL.\");\n        //}\n        return node;\n    }\n",
                      "markdown": "`\n    if(node->prefix == NULL)    {\n        //if (msr && msr->txcfg->debuglog_level >= 9) {\n        //    msr_log(msr, 9, \"CPTFindElement: Found a tree node but prefix is NULL.\");\n        //}\n        return node;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/msc_tree.cc"
                },
                "region": {
                  "startLine": 757,
                  "startColumn": 46,
                  "endLine": 757,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\n    if(node == NULL)    {\n        //if (msr && msr->txcfg->debuglog_level >= 9) {\n        //    msr_log(msr, 9, \"CPTFindElement: Node tree is NULL.\");\n        //}\n        return node;\n    }\n",
                    "rendered": {
                      "text": "\n    if(node == NULL)    {\n        //if (msr && msr->txcfg->debuglog_level >= 9) {\n        //    msr_log(msr, 9, \"CPTFindElement: Node tree is NULL.\");\n        //}\n        return node;\n    }\n",
                      "markdown": "`\n    if(node == NULL)    {\n        //if (msr && msr->txcfg->debuglog_level >= 9) {\n        //    msr_log(msr, 9, \"CPTFindElement: Node tree is NULL.\");\n        //}\n        return node;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/msc_tree.cc"
                },
                "region": {
                  "startLine": 750,
                  "startColumn": 59,
                  "endLine": 750,
                  "endColumn": 65,
                  "snippet": {
                    "text": "\n    if (node && (node->bit != ip_bitmask)) {\n        //if (msr && msr->txcfg->debuglog_level >= 9) {\n        //    msr_log(msr, 9, \"CPTFindElement: Found a tree node but netmask is different.\");\n        //}\n        return NULL;\n    }\n",
                    "rendered": {
                      "text": "\n    if (node && (node->bit != ip_bitmask)) {\n        //if (msr && msr->txcfg->debuglog_level >= 9) {\n        //    msr_log(msr, 9, \"CPTFindElement: Found a tree node but netmask is different.\");\n        //}\n        return NULL;\n    }\n",
                      "markdown": "`\n    if (node && (node->bit != ip_bitmask)) {\n        //if (msr && msr->txcfg->debuglog_level >= 9) {\n        //    msr_log(msr, 9, \"CPTFindElement: Found a tree node but netmask is different.\");\n        //}\n        return NULL;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/msc_tree.cc"
                },
                "region": {
                  "startLine": 746,
                  "startColumn": 3,
                  "endLine": 746,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    memset(temp_data, 0, NETMASK_256-1);\n    memcpy(temp_data, ipdata, bytes);\n\n    node = CPTRetriveNode(temp_data, ip_bitmask, node);\n\n    if (node && (node->bit != ip_bitmask)) {\n        //if (msr && msr->txcfg->debuglog_level >= 9) {\n",
                    "rendered": {
                      "text": "    memset(temp_data, 0, NETMASK_256-1);\n    memcpy(temp_data, ipdata, bytes);\n\n    node = CPTRetriveNode(temp_data, ip_bitmask, node);\n\n    if (node && (node->bit != ip_bitmask)) {\n        //if (msr && msr->txcfg->debuglog_level >= 9) {\n",
                      "markdown": "`    memset(temp_data, 0, NETMASK_256-1);\n    memcpy(temp_data, ipdata, bytes);\n\n    node = CPTRetriveNode(temp_data, ip_bitmask, node);\n\n    if (node && (node->bit != ip_bitmask)) {\n        //if (msr && msr->txcfg->debuglog_level >= 9) {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/msc_tree.cc"
                },
                "region": {
                  "startLine": 732,
                  "startColumn": 3,
                  "endLine": 732,
                  "endColumn": 9,
                  "snippet": {
                    "text": "        return node;\n    }\n\n    node = tree->head;\n\n    if (ip_bitmask > (NETMASK_256-1))   {\n        //if (msr && msr->txcfg->debuglog_level >= 9) {\n",
                    "rendered": {
                      "text": "        return node;\n    }\n\n    node = tree->head;\n\n    if (ip_bitmask > (NETMASK_256-1))   {\n        //if (msr && msr->txcfg->debuglog_level >= 9) {\n",
                      "markdown": "`        return node;\n    }\n\n    node = tree->head;\n\n    if (ip_bitmask > (NETMASK_256-1))   {\n        //if (msr && msr->txcfg->debuglog_level >= 9) {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/msc_tree.cc"
                },
                "region": {
                  "startLine": 727,
                  "startColumn": 51,
                  "endLine": 727,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\n    if (tree->head == NULL) {\n        //if (msr && msr->txcfg->debuglog_level >= 9) {\n        //    msr_log(msr, 9, \"CPTFindElement: Tree head is NULL. Cannot proceed searching the ip.\");\n        //}\n        return node;\n    }\n",
                    "rendered": {
                      "text": "\n    if (tree->head == NULL) {\n        //if (msr && msr->txcfg->debuglog_level >= 9) {\n        //    msr_log(msr, 9, \"CPTFindElement: Tree head is NULL. Cannot proceed searching the ip.\");\n        //}\n        return node;\n    }\n",
                      "markdown": "`\n    if (tree->head == NULL) {\n        //if (msr && msr->txcfg->debuglog_level >= 9) {\n        //    msr_log(msr, 9, \"CPTFindElement: Tree head is NULL. Cannot proceed searching the ip.\");\n        //}\n        return node;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/msc_tree.cc"
                },
                "region": {
                  "startLine": 700,
                  "startColumn": 92,
                  "endLine": 700,
                  "endColumn": 96,
                  "snippet": {
                    "text": "            if ((node->prefix->buffer[bytes] & mask) == (ipdata[bytes] & mask)) {\n                if (TreePrefixNetmask(node->prefix, netmask_node->netmasks[j], FALSE)) {\n                    //if (msr && msr->txcfg->debuglog_level >= 9) {\n                    //    msr_log(msr, 9, \"CPTFindElementIPNetblock: Node found for provided ip address\");\n                    //}\n                    return node;\n                }\n",
                    "rendered": {
                      "text": "            if ((node->prefix->buffer[bytes] & mask) == (ipdata[bytes] & mask)) {\n                if (TreePrefixNetmask(node->prefix, netmask_node->netmasks[j], FALSE)) {\n                    //if (msr && msr->txcfg->debuglog_level >= 9) {\n                    //    msr_log(msr, 9, \"CPTFindElementIPNetblock: Node found for provided ip address\");\n                    //}\n                    return node;\n                }\n",
                      "markdown": "`            if ((node->prefix->buffer[bytes] & mask) == (ipdata[bytes] & mask)) {\n                if (TreePrefixNetmask(node->prefix, netmask_node->netmasks[j], FALSE)) {\n                    //if (msr && msr->txcfg->debuglog_level >= 9) {\n                    //    msr_log(msr, 9, \"CPTFindElementIPNetblock: Node found for provided ip address\");\n                    //}\n                    return node;\n                }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/msc_tree.cc"
                },
                "region": {
                  "startLine": 700,
                  "startColumn": 68,
                  "endLine": 700,
                  "endColumn": 74,
                  "snippet": {
                    "text": "            if ((node->prefix->buffer[bytes] & mask) == (ipdata[bytes] & mask)) {\n                if (TreePrefixNetmask(node->prefix, netmask_node->netmasks[j], FALSE)) {\n                    //if (msr && msr->txcfg->debuglog_level >= 9) {\n                    //    msr_log(msr, 9, \"CPTFindElementIPNetblock: Node found for provided ip address\");\n                    //}\n                    return node;\n                }\n",
                    "rendered": {
                      "text": "            if ((node->prefix->buffer[bytes] & mask) == (ipdata[bytes] & mask)) {\n                if (TreePrefixNetmask(node->prefix, netmask_node->netmasks[j], FALSE)) {\n                    //if (msr && msr->txcfg->debuglog_level >= 9) {\n                    //    msr_log(msr, 9, \"CPTFindElementIPNetblock: Node found for provided ip address\");\n                    //}\n                    return node;\n                }\n",
                      "markdown": "`            if ((node->prefix->buffer[bytes] & mask) == (ipdata[bytes] & mask)) {\n                if (TreePrefixNetmask(node->prefix, netmask_node->netmasks[j], FALSE)) {\n                    //if (msr && msr->txcfg->debuglog_level >= 9) {\n                    //    msr_log(msr, 9, \"CPTFindElementIPNetblock: Node found for provided ip address\");\n                    //}\n                    return node;\n                }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/msc_tree.cc"
                },
                "region": {
                  "startLine": 691,
                  "startColumn": 92,
                  "endLine": 691,
                  "endColumn": 96,
                  "snippet": {
                    "text": "            if ((ip_bitmask % 8) == 0) {\n                if (TreePrefixNetmask(node->prefix, netmask_node->netmasks[j], FALSE)) {\n                    //if (msr && msr->txcfg->debuglog_level >= 9) {\n                    //    msr_log(msr, 9, \"CPTFindElementIPNetblock: Node found for provided ip address\");\n                    //}\n                    return node;\n                }\n",
                    "rendered": {
                      "text": "            if ((ip_bitmask % 8) == 0) {\n                if (TreePrefixNetmask(node->prefix, netmask_node->netmasks[j], FALSE)) {\n                    //if (msr && msr->txcfg->debuglog_level >= 9) {\n                    //    msr_log(msr, 9, \"CPTFindElementIPNetblock: Node found for provided ip address\");\n                    //}\n                    return node;\n                }\n",
                      "markdown": "`            if ((ip_bitmask % 8) == 0) {\n                if (TreePrefixNetmask(node->prefix, netmask_node->netmasks[j], FALSE)) {\n                    //if (msr && msr->txcfg->debuglog_level >= 9) {\n                    //    msr_log(msr, 9, \"CPTFindElementIPNetblock: Node found for provided ip address\");\n                    //}\n                    return node;\n                }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/msc_tree.cc"
                },
                "region": {
                  "startLine": 691,
                  "startColumn": 68,
                  "endLine": 691,
                  "endColumn": 74,
                  "snippet": {
                    "text": "            if ((ip_bitmask % 8) == 0) {\n                if (TreePrefixNetmask(node->prefix, netmask_node->netmasks[j], FALSE)) {\n                    //if (msr && msr->txcfg->debuglog_level >= 9) {\n                    //    msr_log(msr, 9, \"CPTFindElementIPNetblock: Node found for provided ip address\");\n                    //}\n                    return node;\n                }\n",
                    "rendered": {
                      "text": "            if ((ip_bitmask % 8) == 0) {\n                if (TreePrefixNetmask(node->prefix, netmask_node->netmasks[j], FALSE)) {\n                    //if (msr && msr->txcfg->debuglog_level >= 9) {\n                    //    msr_log(msr, 9, \"CPTFindElementIPNetblock: Node found for provided ip address\");\n                    //}\n                    return node;\n                }\n",
                      "markdown": "`            if ((ip_bitmask % 8) == 0) {\n                if (TreePrefixNetmask(node->prefix, netmask_node->netmasks[j], FALSE)) {\n                    //if (msr && msr->txcfg->debuglog_level >= 9) {\n                    //    msr_log(msr, 9, \"CPTFindElementIPNetblock: Node found for provided ip address\");\n                    //}\n                    return node;\n                }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/msc_tree.cc"
                },
                "region": {
                  "startLine": 680,
                  "startColumn": 73,
                  "endLine": 680,
                  "endColumn": 79,
                  "snippet": {
                    "text": "\n        if (node && node->prefix == NULL)   {\n            //if (msr && msr->txcfg->debuglog_level >= 9) {\n            //    msr_log(msr, 9, \"CPTFindElementIPNetblock: Found a tree node but prefix is NULL.\");\n            //}\n            return NULL;\n        }\n",
                    "rendered": {
                      "text": "\n        if (node && node->prefix == NULL)   {\n            //if (msr && msr->txcfg->debuglog_level >= 9) {\n            //    msr_log(msr, 9, \"CPTFindElementIPNetblock: Found a tree node but prefix is NULL.\");\n            //}\n            return NULL;\n        }\n",
                      "markdown": "`\n        if (node && node->prefix == NULL)   {\n            //if (msr && msr->txcfg->debuglog_level >= 9) {\n            //    msr_log(msr, 9, \"CPTFindElementIPNetblock: Found a tree node but prefix is NULL.\");\n            //}\n            return NULL;\n        }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/msc_tree.cc"
                },
                "region": {
                  "startLine": 673,
                  "startColumn": 73,
                  "endLine": 673,
                  "endColumn": 79,
                  "snippet": {
                    "text": "\n        if (node && node->bit != ip_bitmask)    {\n            //if (msr && msr->txcfg->debuglog_level >= 9) {\n            //    msr_log(msr, 9, \"CPTFindElementIPNetblock: Found a tree node but netmask is different.\");\n            //}\n            return NULL;\n        }\n",
                    "rendered": {
                      "text": "\n        if (node && node->bit != ip_bitmask)    {\n            //if (msr && msr->txcfg->debuglog_level >= 9) {\n            //    msr_log(msr, 9, \"CPTFindElementIPNetblock: Found a tree node but netmask is different.\");\n            //}\n            return NULL;\n        }\n",
                      "markdown": "`\n        if (node && node->bit != ip_bitmask)    {\n            //if (msr && msr->txcfg->debuglog_level >= 9) {\n            //    msr_log(msr, 9, \"CPTFindElementIPNetblock: Found a tree node but netmask is different.\");\n            //}\n            return NULL;\n        }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/msc_tree.cc"
                },
                "region": {
                  "startLine": 669,
                  "startColumn": 7,
                  "endLine": 669,
                  "endColumn": 13,
                  "snippet": {
                    "text": "            i++;\n        }\n\n        node = CPTRetriveNode(ipdata, ip_bitmask, node);\n\n        if (node && node->bit != ip_bitmask)    {\n            //if (msr && msr->txcfg->debuglog_level >= 9) {\n",
                    "rendered": {
                      "text": "            i++;\n        }\n\n        node = CPTRetriveNode(ipdata, ip_bitmask, node);\n\n        if (node && node->bit != ip_bitmask)    {\n            //if (msr && msr->txcfg->debuglog_level >= 9) {\n",
                      "markdown": "`            i++;\n        }\n\n        node = CPTRetriveNode(ipdata, ip_bitmask, node);\n\n        if (node && node->bit != ip_bitmask)    {\n            //if (msr && msr->txcfg->debuglog_level >= 9) {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/msc_tree.cc"
                },
                "region": {
                  "startLine": 643,
                  "startColumn": 56,
                  "endLine": 643,
                  "endColumn": 62,
                  "snippet": {
                    "text": "\n    if (node == NULL)   {\n        //if (msr && msr->txcfg->debuglog_level >= 9) {\n        //    msr_log(msr, 9, \"CPTFindElementIPNetblock: Node tree is NULL.\");\n        //}\n        return NULL;\n    }\n",
                    "rendered": {
                      "text": "\n    if (node == NULL)   {\n        //if (msr && msr->txcfg->debuglog_level >= 9) {\n        //    msr_log(msr, 9, \"CPTFindElementIPNetblock: Node tree is NULL.\");\n        //}\n        return NULL;\n    }\n",
                      "markdown": "`\n    if (node == NULL)   {\n        //if (msr && msr->txcfg->debuglog_level >= 9) {\n        //    msr_log(msr, 9, \"CPTFindElementIPNetblock: Node tree is NULL.\");\n        //}\n        return NULL;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/msc_tree.cc"
                },
                "region": {
                  "startLine": 639,
                  "startColumn": 3,
                  "endLine": 639,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    int i = 0, j = 0;\n    int mask_bits = 0;\n\n    node = CPTRetriveParentNode(node);\n\n    if (node == NULL)   {\n        //if (msr && msr->txcfg->debuglog_level >= 9) {\n",
                    "rendered": {
                      "text": "    int i = 0, j = 0;\n    int mask_bits = 0;\n\n    node = CPTRetriveParentNode(node);\n\n    if (node == NULL)   {\n        //if (msr && msr->txcfg->debuglog_level >= 9) {\n",
                      "markdown": "`    int i = 0, j = 0;\n    int mask_bits = 0;\n\n    node = CPTRetriveParentNode(node);\n\n    if (node == NULL)   {\n        //if (msr && msr->txcfg->debuglog_level >= 9) {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/msc_tree.cc"
                },
                "region": {
                  "startLine": 628,
                  "startColumn": 7,
                  "endLine": 628,
                  "endColumn": 13,
                  "snippet": {
                    "text": "TreeNode *CPTRetriveParentNode(TreeNode *node)  {\n\n    while (node != NULL && node->netmasks == NULL)\n        node = node->parent;\n\n    return node;\n}\n",
                    "rendered": {
                      "text": "TreeNode *CPTRetriveParentNode(TreeNode *node)  {\n\n    while (node != NULL && node->netmasks == NULL)\n        node = node->parent;\n\n    return node;\n}\n",
                      "markdown": "`TreeNode *CPTRetriveParentNode(TreeNode *node)  {\n\n    while (node != NULL && node->netmasks == NULL)\n        node = node->parent;\n\n    return node;\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/msc_tree.cc"
                },
                "region": {
                  "startLine": 618,
                  "startColumn": 70,
                  "endLine": 618,
                  "endColumn": 74,
                  "snippet": {
                    "text": "    }\n\n    //if (msr && msr->txcfg->debuglog_level >= 9) {\n    //    msr_log(msr, 9, \"CPTRetriveNode: Found the node for provided ip address.\");\n    //}\n\n\n",
                    "rendered": {
                      "text": "    }\n\n    //if (msr && msr->txcfg->debuglog_level >= 9) {\n    //    msr_log(msr, 9, \"CPTRetriveNode: Found the node for provided ip address.\");\n    //}\n\n\n",
                      "markdown": "`    }\n\n    //if (msr && msr->txcfg->debuglog_level >= 9) {\n    //    msr_log(msr, 9, \"CPTRetriveNode: Found the node for provided ip address.\");\n    //}\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/msc_tree.cc"
                },
                "region": {
                  "startLine": 618,
                  "startColumn": 52,
                  "endLine": 618,
                  "endColumn": 58,
                  "snippet": {
                    "text": "    }\n\n    //if (msr && msr->txcfg->debuglog_level >= 9) {\n    //    msr_log(msr, 9, \"CPTRetriveNode: Found the node for provided ip address.\");\n    //}\n\n\n",
                    "rendered": {
                      "text": "    }\n\n    //if (msr && msr->txcfg->debuglog_level >= 9) {\n    //    msr_log(msr, 9, \"CPTRetriveNode: Found the node for provided ip address.\");\n    //}\n\n\n",
                      "markdown": "`    }\n\n    //if (msr && msr->txcfg->debuglog_level >= 9) {\n    //    msr_log(msr, 9, \"CPTRetriveNode: Found the node for provided ip address.\");\n    //}\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/msc_tree.cc"
                },
                "region": {
                  "startLine": 612,
                  "startColumn": 11,
                  "endLine": 612,
                  "endColumn": 17,
                  "snippet": {
                    "text": "            node = node->right;\n            if (node == NULL)   return NULL;\n        } else {\n            node = node->left;\n            if (node == NULL)   return NULL;\n        }\n    }\n",
                    "rendered": {
                      "text": "            node = node->right;\n            if (node == NULL)   return NULL;\n        } else {\n            node = node->left;\n            if (node == NULL)   return NULL;\n        }\n    }\n",
                      "markdown": "`            node = node->right;\n            if (node == NULL)   return NULL;\n        } else {\n            node = node->left;\n            if (node == NULL)   return NULL;\n        }\n    }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/msc_tree.cc"
                },
                "region": {
                  "startLine": 609,
                  "startColumn": 11,
                  "endLine": 609,
                  "endColumn": 17,
                  "snippet": {
                    "text": "        unsigned int y = SHIFT_RIGHT_MASK(NETMASK_128, (node->bit % 8));\n\n        if (TREE_CHECK(buffer[x], y)) {\n            node = node->right;\n            if (node == NULL)   return NULL;\n        } else {\n            node = node->left;\n",
                    "rendered": {
                      "text": "        unsigned int y = SHIFT_RIGHT_MASK(NETMASK_128, (node->bit % 8));\n\n        if (TREE_CHECK(buffer[x], y)) {\n            node = node->right;\n            if (node == NULL)   return NULL;\n        } else {\n            node = node->left;\n",
                      "markdown": "`        unsigned int y = SHIFT_RIGHT_MASK(NETMASK_128, (node->bit % 8));\n\n        if (TREE_CHECK(buffer[x], y)) {\n            node = node->right;\n            if (node == NULL)   return NULL;\n        } else {\n            node = node->left;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/msc_tree.cc"
                },
                "region": {
                  "startLine": 599,
                  "startColumn": 52,
                  "endLine": 599,
                  "endColumn": 56,
                  "snippet": {
                    "text": "\n    if(buffer == NULL)  {\n        //if (msr && msr->txcfg->debuglog_level >= 9) {\n        //    msr_log(msr, 9, \"CPTRetriveNode: Empty ip address. Nothing to search for.\");\n        //}\n        return NULL;\n    }\n",
                    "rendered": {
                      "text": "\n    if(buffer == NULL)  {\n        //if (msr && msr->txcfg->debuglog_level >= 9) {\n        //    msr_log(msr, 9, \"CPTRetriveNode: Empty ip address. Nothing to search for.\");\n        //}\n        return NULL;\n    }\n",
                      "markdown": "`\n    if(buffer == NULL)  {\n        //if (msr && msr->txcfg->debuglog_level >= 9) {\n        //    msr_log(msr, 9, \"CPTRetriveNode: Empty ip address. Nothing to search for.\");\n        //}\n        return NULL;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/msc_tree.cc"
                },
                "region": {
                  "startLine": 592,
                  "startColumn": 46,
                  "endLine": 592,
                  "endColumn": 52,
                  "snippet": {
                    "text": "\n    if(node == NULL)    {\n        //if (msr && msr->txcfg->debuglog_level >= 9) {\n        //    msr_log(msr, 9, \"CPTRetriveNode: Node tree is NULL.\");\n        //}\n        return NULL;\n    }\n",
                    "rendered": {
                      "text": "\n    if(node == NULL)    {\n        //if (msr && msr->txcfg->debuglog_level >= 9) {\n        //    msr_log(msr, 9, \"CPTRetriveNode: Node tree is NULL.\");\n        //}\n        return NULL;\n    }\n",
                      "markdown": "`\n    if(node == NULL)    {\n        //if (msr && msr->txcfg->debuglog_level >= 9) {\n        //    msr_log(msr, 9, \"CPTRetriveNode: Node tree is NULL.\");\n        //}\n        return NULL;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/msc_tree.cc"
                },
                "region": {
                  "startLine": 568,
                  "startColumn": 60,
                  "endLine": 568,
                  "endColumn": 66,
                  "snippet": {
                    "text": "\n        if (prefix_data->netmask != netmask) {\n            //if (msr && msr->txcfg->debuglog_level >= 9) {\n            //    msr_log(msr, 9, \"TreePrefixNetmask: Cannot find a prefix with correct netmask.\");\n            //}\n            return 0;\n        } else {\n",
                    "rendered": {
                      "text": "\n        if (prefix_data->netmask != netmask) {\n            //if (msr && msr->txcfg->debuglog_level >= 9) {\n            //    msr_log(msr, 9, \"TreePrefixNetmask: Cannot find a prefix with correct netmask.\");\n            //}\n            return 0;\n        } else {\n",
                      "markdown": "`\n        if (prefix_data->netmask != netmask) {\n            //if (msr && msr->txcfg->debuglog_level >= 9) {\n            //    msr_log(msr, 9, \"TreePrefixNetmask: Cannot find a prefix with correct netmask.\");\n            //}\n            return 0;\n        } else {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/msc_tree.cc"
                },
                "region": {
                  "startLine": 415,
                  "startColumn": 19,
                  "endLine": 415,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\n                parent = node->parent;\n                while (parent != NULL && netmask < (parent->bit + 1)) {\n                    node = parent;\n                    parent = parent->parent;\n                }\n\n",
                    "rendered": {
                      "text": "\n                parent = node->parent;\n                while (parent != NULL && netmask < (parent->bit + 1)) {\n                    node = parent;\n                    parent = parent->parent;\n                }\n\n",
                      "markdown": "`\n                parent = node->parent;\n                while (parent != NULL && netmask < (parent->bit + 1)) {\n                    node = parent;\n                    parent = parent->parent;\n                }\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/msc_tree.cc"
                },
                "region": {
                  "startLine": 388,
                  "startColumn": 7,
                  "endLine": 388,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    parent = node->parent;\n\n    while (parent && test_bit <= parent->bit) {\n        node = parent;\n        parent = node->parent;\n    }\n\n",
                    "rendered": {
                      "text": "    parent = node->parent;\n\n    while (parent && test_bit <= parent->bit) {\n        node = parent;\n        parent = node->parent;\n    }\n\n",
                      "markdown": "`    parent = node->parent;\n\n    while (parent && test_bit <= parent->bit) {\n        node = parent;\n        parent = node->parent;\n    }\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/msc_tree.cc"
                },
                "region": {
                  "startLine": 348,
                  "startColumn": 19,
                  "endLine": 348,
                  "endColumn": 25,
                  "snippet": {
                    "text": "                if (node->left == NULL)\n                    break;\n                else\n                    node = node->left;\n            }\n        }\n    }\n",
                    "rendered": {
                      "text": "                if (node->left == NULL)\n                    break;\n                else\n                    node = node->left;\n            }\n        }\n    }\n",
                      "markdown": "`                if (node->left == NULL)\n                    break;\n                else\n                    node = node->left;\n            }\n        }\n    }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/msc_tree.cc"
                },
                "region": {
                  "startLine": 343,
                  "startColumn": 15,
                  "endLine": 343,
                  "endColumn": 21,
                  "snippet": {
                    "text": "            if (TREE_CHECK(buffer[x],y)) {\n                if (node->right == NULL)\n                    break;\n                node = node->right;\n            } else {\n                if (node->left == NULL)\n                    break;\n",
                    "rendered": {
                      "text": "            if (TREE_CHECK(buffer[x],y)) {\n                if (node->right == NULL)\n                    break;\n                node = node->right;\n            } else {\n                if (node->left == NULL)\n                    break;\n",
                      "markdown": "`            if (TREE_CHECK(buffer[x],y)) {\n                if (node->right == NULL)\n                    break;\n                node = node->right;\n            } else {\n                if (node->left == NULL)\n                    break;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/msc_tree.cc"
                },
                "region": {
                  "startLine": 336,
                  "startColumn": 15,
                  "endLine": 336,
                  "endColumn": 21,
                  "snippet": {
                    "text": "            if (node->right == NULL)\n                break;\n            else\n                node = node->right;\n        } else {\n            x = SHIFT_RIGHT_MASK(node->bit, 3); y = SHIFT_RIGHT_MASK(NETMASK_128, (node->bit % 8));\n\n",
                    "rendered": {
                      "text": "            if (node->right == NULL)\n                break;\n            else\n                node = node->right;\n        } else {\n            x = SHIFT_RIGHT_MASK(node->bit, 3); y = SHIFT_RIGHT_MASK(NETMASK_128, (node->bit % 8));\n\n",
                      "markdown": "`            if (node->right == NULL)\n                break;\n            else\n                node = node->right;\n        } else {\n            x = SHIFT_RIGHT_MASK(node->bit, 3); y = SHIFT_RIGHT_MASK(NETMASK_128, (node->bit % 8));\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/msc_tree.cc"
                },
                "region": {
                  "startLine": 326,
                  "startColumn": 3,
                  "endLine": 326,
                  "endColumn": 9,
                  "snippet": {
                    "text": "        return CPTCreateHead(prefix, node, tree, netmask, ip_bitmask);\n    }\n\n    node = tree->head;\n    buffer = prefix->buffer;\n    bitlen = prefix->bitlen;\n\n",
                    "rendered": {
                      "text": "        return CPTCreateHead(prefix, node, tree, netmask, ip_bitmask);\n    }\n\n    node = tree->head;\n    buffer = prefix->buffer;\n    bitlen = prefix->bitlen;\n\n",
                      "markdown": "`        return CPTCreateHead(prefix, node, tree, netmask, ip_bitmask);\n    }\n\n    node = tree->head;\n    buffer = prefix->buffer;\n    bitlen = prefix->bitlen;\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/msc_tree.cc"
                },
                "region": {
                  "startLine": 322,
                  "startColumn": 7,
                  "endLine": 322,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    }\n\n    if (tree->head == NULL) {\n        node = CPTCreateNode();\n        return CPTCreateHead(prefix, node, tree, netmask, ip_bitmask);\n    }\n\n",
                    "rendered": {
                      "text": "    }\n\n    if (tree->head == NULL) {\n        node = CPTCreateNode();\n        return CPTCreateHead(prefix, node, tree, netmask, ip_bitmask);\n    }\n\n",
                      "markdown": "`    }\n\n    if (tree->head == NULL) {\n        node = CPTCreateNode();\n        return CPTCreateHead(prefix, node, tree, netmask, ip_bitmask);\n    }\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/msc_tree.cc"
                },
                "region": {
                  "startLine": 262,
                  "startColumn": 15,
                  "endLine": 262,
                  "endColumn": 21,
                  "snippet": {
                    "text": "            parent = new_node->parent;\n\n            while (parent != NULL && netmask < (parent->bit + 1)) {\n                node = parent;\n                parent = parent->parent;\n            }\n\n",
                    "rendered": {
                      "text": "            parent = new_node->parent;\n\n            while (parent != NULL && netmask < (parent->bit + 1)) {\n                node = parent;\n                parent = parent->parent;\n            }\n\n",
                      "markdown": "`            parent = new_node->parent;\n\n            while (parent != NULL && netmask < (parent->bit + 1)) {\n                node = parent;\n                parent = parent->parent;\n            }\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/msc_tree.cc"
                },
                "region": {
                  "startLine": 258,
                  "startColumn": 11,
                  "endLine": 258,
                  "endColumn": 17,
                  "snippet": {
                    "text": "    if (netmask != NETMASK_256-1 && netmask != NETMASK_128) {\n        if (netmask != NETMASK_32 || bitlen != NETMASK_32) {\n            int i;\n            node = new_node;\n            parent = new_node->parent;\n\n            while (parent != NULL && netmask < (parent->bit + 1)) {\n",
                    "rendered": {
                      "text": "    if (netmask != NETMASK_256-1 && netmask != NETMASK_128) {\n        if (netmask != NETMASK_32 || bitlen != NETMASK_32) {\n            int i;\n            node = new_node;\n            parent = new_node->parent;\n\n            while (parent != NULL && netmask < (parent->bit + 1)) {\n",
                      "markdown": "`    if (netmask != NETMASK_256-1 && netmask != NETMASK_128) {\n        if (netmask != NETMASK_32 || bitlen != NETMASK_32) {\n            int i;\n            node = new_node;\n            parent = new_node->parent;\n\n            while (parent != NULL && netmask < (parent->bit + 1)) {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/msc_tree.cc"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 3,
                  "endLine": 71,
                  "endColumn": 9,
                  "snippet": {
                    "text": "TreeNode *CPTCreateNode()   {\n    TreeNode *node;\n\n    node = reinterpret_cast<TreeNode *>(malloc(sizeof(TreeNode)));\n\n    if(node == NULL)\n        return NULL;\n",
                    "rendered": {
                      "text": "TreeNode *CPTCreateNode()   {\n    TreeNode *node;\n\n    node = reinterpret_cast<TreeNode *>(malloc(sizeof(TreeNode)));\n\n    if(node == NULL)\n        return NULL;\n",
                      "markdown": "`TreeNode *CPTCreateNode()   {\n    TreeNode *node;\n\n    node = reinterpret_cast<TreeNode *>(malloc(sizeof(TreeNode)));\n\n    if(node == NULL)\n        return NULL;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/ip_tree.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2022 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2022 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2022 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/base64.h"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 4,
                  "endLine": 27,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\nclass Base64 {\n public:\n    Base64() { }\n\n    static std::string encode(const std::string& data);\n\n",
                    "rendered": {
                      "text": "\nclass Base64 {\n public:\n    Base64() { }\n\n    static std::string encode(const std::string& data);\n\n",
                      "markdown": "`\nclass Base64 {\n public:\n    Base64() { }\n\n    static std::string encode(const std::string& data);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/base64.h"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 6,
                  "endLine": 25,
                  "endColumn": 12,
                  "snippet": {
                    "text": "namespace modsecurity {\nnamespace Utils {\n\nclass Base64 {\n public:\n    Base64() { }\n\n",
                    "rendered": {
                      "text": "namespace modsecurity {\nnamespace Utils {\n\nclass Base64 {\n public:\n    Base64() { }\n\n",
                      "markdown": "`namespace modsecurity {\nnamespace Utils {\n\nclass Base64 {\n public:\n    Base64() { }\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/base64.h"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 5,
                  "endLine": 25,
                  "endColumn": 13,
                  "snippet": {
                    "text": "namespace modsecurity {\nnamespace Utils {\n\nclass Base64 {\n public:\n    Base64() { }\n\n",
                    "rendered": {
                      "text": "namespace modsecurity {\nnamespace Utils {\n\nclass Base64 {\n public:\n    Base64() { }\n\n",
                      "markdown": "`namespace modsecurity {\nnamespace Utils {\n\nclass Base64 {\n public:\n    Base64() { }\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/run_time_string.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/regression/operator-inpectFile.json"
                },
                "region": {
                  "startLine": 358,
                  "startColumn": 47,
                  "endLine": 358,
                  "endColumn": 52,
                  "snippet": {
                    "text": "    \"enabled\":1,\n    \"version_min\":300000,\n    \"resource\":\"lua\",\n    \"title\":\"Testing Operator :: @inspectFile - lua (7/7)\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":123\n",
                    "rendered": {
                      "text": "    \"enabled\":1,\n    \"version_min\":300000,\n    \"resource\":\"lua\",\n    \"title\":\"Testing Operator :: @inspectFile - lua (7/7)\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":123\n",
                      "markdown": "`    \"enabled\":1,\n    \"version_min\":300000,\n    \"resource\":\"lua\",\n    \"title\":\"Testing Operator :: @inspectFile - lua (7/7)\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":123\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/regression/operator-inpectFile.json"
                },
                "region": {
                  "startLine": 318,
                  "startColumn": 47,
                  "endLine": 318,
                  "endColumn": 52,
                  "snippet": {
                    "text": "    \"enabled\":1,\n    \"version_min\":300000,\n    \"resource\":\"lua\",\n    \"title\":\"Testing Operator :: @inspectFile - lua (6/7)\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":123\n",
                    "rendered": {
                      "text": "    \"enabled\":1,\n    \"version_min\":300000,\n    \"resource\":\"lua\",\n    \"title\":\"Testing Operator :: @inspectFile - lua (6/7)\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":123\n",
                      "markdown": "`    \"enabled\":1,\n    \"version_min\":300000,\n    \"resource\":\"lua\",\n    \"title\":\"Testing Operator :: @inspectFile - lua (6/7)\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":123\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/regression/operator-inpectFile.json"
                },
                "region": {
                  "startLine": 278,
                  "startColumn": 47,
                  "endLine": 278,
                  "endColumn": 52,
                  "snippet": {
                    "text": "    \"enabled\":1,\n    \"version_min\":300000,\n    \"resource\":\"lua\",\n    \"title\":\"Testing Operator :: @inspectFile - lua (5/7)\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":123\n",
                    "rendered": {
                      "text": "    \"enabled\":1,\n    \"version_min\":300000,\n    \"resource\":\"lua\",\n    \"title\":\"Testing Operator :: @inspectFile - lua (5/7)\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":123\n",
                      "markdown": "`    \"enabled\":1,\n    \"version_min\":300000,\n    \"resource\":\"lua\",\n    \"title\":\"Testing Operator :: @inspectFile - lua (5/7)\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":123\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/regression/operator-inpectFile.json"
                },
                "region": {
                  "startLine": 238,
                  "startColumn": 47,
                  "endLine": 238,
                  "endColumn": 52,
                  "snippet": {
                    "text": "    \"enabled\":1,\n    \"version_min\":300000,\n    \"resource\":\"lua\",\n    \"title\":\"Testing Operator :: @inspectFile - lua (4/7)\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":123\n",
                    "rendered": {
                      "text": "    \"enabled\":1,\n    \"version_min\":300000,\n    \"resource\":\"lua\",\n    \"title\":\"Testing Operator :: @inspectFile - lua (4/7)\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":123\n",
                      "markdown": "`    \"enabled\":1,\n    \"version_min\":300000,\n    \"resource\":\"lua\",\n    \"title\":\"Testing Operator :: @inspectFile - lua (4/7)\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":123\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/regression/operator-inpectFile.json"
                },
                "region": {
                  "startLine": 198,
                  "startColumn": 47,
                  "endLine": 198,
                  "endColumn": 52,
                  "snippet": {
                    "text": "    \"enabled\":1,\n    \"version_min\":300000,\n    \"resource\":\"lua\",\n    \"title\":\"Testing Operator :: @inspectFile - lua (3/7)\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":123\n",
                    "rendered": {
                      "text": "    \"enabled\":1,\n    \"version_min\":300000,\n    \"resource\":\"lua\",\n    \"title\":\"Testing Operator :: @inspectFile - lua (3/7)\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":123\n",
                      "markdown": "`    \"enabled\":1,\n    \"version_min\":300000,\n    \"resource\":\"lua\",\n    \"title\":\"Testing Operator :: @inspectFile - lua (3/7)\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":123\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/regression/operator-inpectFile.json"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 47,
                  "endLine": 159,
                  "endColumn": 52,
                  "snippet": {
                    "text": "    \"enabled\":1,\n    \"version_min\":300000,\n    \"resource\":\"lua\",\n    \"title\":\"Testing Operator :: @inspectFile - lua (2/7)\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":123\n",
                    "rendered": {
                      "text": "    \"enabled\":1,\n    \"version_min\":300000,\n    \"resource\":\"lua\",\n    \"title\":\"Testing Operator :: @inspectFile - lua (2/7)\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":123\n",
                      "markdown": "`    \"enabled\":1,\n    \"version_min\":300000,\n    \"resource\":\"lua\",\n    \"title\":\"Testing Operator :: @inspectFile - lua (2/7)\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":123\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/regression/operator-inpectFile.json"
                },
                "region": {
                  "startLine": 120,
                  "startColumn": 47,
                  "endLine": 120,
                  "endColumn": 52,
                  "snippet": {
                    "text": "    \"enabled\":1,\n    \"version_min\":300000,\n    \"resource\":\"lua\",\n    \"title\":\"Testing Operator :: @inspectFile - lua (1/7)\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":123\n",
                    "rendered": {
                      "text": "    \"enabled\":1,\n    \"version_min\":300000,\n    \"resource\":\"lua\",\n    \"title\":\"Testing Operator :: @inspectFile - lua (1/7)\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":123\n",
                      "markdown": "`    \"enabled\":1,\n    \"version_min\":300000,\n    \"resource\":\"lua\",\n    \"title\":\"Testing Operator :: @inspectFile - lua (1/7)\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":123\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/detect_sqli.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/detect_sqli.cc"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 50,
                  "endLine": 51,
                  "endColumn": 56,
                  "snippet": {
                    "text": "                std::string(fingerprint));\n        }\n    } else {\n        ms_dbg_a(t, 9, \"detected SQLi: not able to find an \" \\\n            \"inject on '\" + input + \"'\");\n    }\n\n",
                    "rendered": {
                      "text": "                std::string(fingerprint));\n        }\n    } else {\n        ms_dbg_a(t, 9, \"detected SQLi: not able to find an \" \\\n            \"inject on '\" + input + \"'\");\n    }\n\n",
                      "markdown": "`                std::string(fingerprint));\n        }\n    } else {\n        ms_dbg_a(t, 9, \"detected SQLi: not able to find an \" \\\n            \"inject on '\" + input + \"'\");\n    }\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/rsub.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/validate_byte_range.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/str_match.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/rx_global.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/pm.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/operator.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/html_entity_decode.cc"
                },
                "region": {
                  "startLine": 120,
                  "startColumn": 42,
                  "endLine": 120,
                  "endColumn": 46,
                  "snippet": {
                    "text": "                while ((j < input_len) && (isalnum(input[j]))) {\n                    j++;\n                }\n                if (j > k) { /* Do we have at least one digit? */\n                    const auto x = reinterpret_cast<const char*>(&input[k]);\n\n                    /* Decode the entity. */\n",
                    "rendered": {
                      "text": "                while ((j < input_len) && (isalnum(input[j]))) {\n                    j++;\n                }\n                if (j > k) { /* Do we have at least one digit? */\n                    const auto x = reinterpret_cast<const char*>(&input[k]);\n\n                    /* Decode the entity. */\n",
                      "markdown": "`                while ((j < input_len) && (isalnum(input[j]))) {\n                    j++;\n                }\n                if (j > k) { /* Do we have at least one digit? */\n                    const auto x = reinterpret_cast<const char*>(&input[k]);\n\n                    /* Decode the entity. */\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/html_entity_decode.cc"
                },
                "region": {
                  "startLine": 95,
                  "startColumn": 46,
                  "endLine": 95,
                  "endColumn": 50,
                  "snippet": {
                    "text": "                    while ((j - k < MAX_DEC_DIGITS) && (j < input_len) && (isdigit(input[j]))) {\n                        j++;\n                    }\n                    if (j > k) { /* Do we have at least one digit? */\n                        /* Decode the entity. */\n                        char x[MAX_DEC_DIGITS + 1];\n                        memcpy(x, (const char *)&input[k], j - k);\n",
                    "rendered": {
                      "text": "                    while ((j - k < MAX_DEC_DIGITS) && (j < input_len) && (isdigit(input[j]))) {\n                        j++;\n                    }\n                    if (j > k) { /* Do we have at least one digit? */\n                        /* Decode the entity. */\n                        char x[MAX_DEC_DIGITS + 1];\n                        memcpy(x, (const char *)&input[k], j - k);\n",
                      "markdown": "`                    while ((j - k < MAX_DEC_DIGITS) && (j < input_len) && (isdigit(input[j]))) {\n                        j++;\n                    }\n                    if (j > k) { /* Do we have at least one digit? */\n                        /* Decode the entity. */\n                        char x[MAX_DEC_DIGITS + 1];\n                        memcpy(x, (const char *)&input[k], j - k);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/html_entity_decode.cc"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 46,
                  "endLine": 70,
                  "endColumn": 50,
                  "snippet": {
                    "text": "                    while ((j - k < MAX_HEX_DIGITS) && (j < input_len) && (isxdigit(input[j]))) {\n                        j++;\n                    }\n                    if (j > k) { /* Do we have at least one digit? */\n                        /* Decode the entity. */\n                        char x[MAX_HEX_DIGITS + 1];\n                        memcpy(x, (const char *)&input[k], j - k);\n",
                    "rendered": {
                      "text": "                    while ((j - k < MAX_HEX_DIGITS) && (j < input_len) && (isxdigit(input[j]))) {\n                        j++;\n                    }\n                    if (j > k) { /* Do we have at least one digit? */\n                        /* Decode the entity. */\n                        char x[MAX_HEX_DIGITS + 1];\n                        memcpy(x, (const char *)&input[k], j - k);\n",
                      "markdown": "`                    while ((j - k < MAX_HEX_DIGITS) && (j < input_len) && (isxdigit(input[j]))) {\n                        j++;\n                    }\n                    if (j > k) { /* Do we have at least one digit? */\n                        /* Decode the entity. */\n                        char x[MAX_HEX_DIGITS + 1];\n                        memcpy(x, (const char *)&input[k], j - k);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/html_entity_decode.cc"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 35,
                  "endLine": 41,
                  "endColumn": 39,
                  "snippet": {
                    "text": "    while (i < input_len) {\n        std::string::size_type copy = 1;\n\n        /* Require an ampersand and at least one character to\n         * start looking into the entity.\n         */\n        if ((input[i] == '&') && (i + 1 < input_len)) {\n",
                    "rendered": {
                      "text": "    while (i < input_len) {\n        std::string::size_type copy = 1;\n\n        /* Require an ampersand and at least one character to\n         * start looking into the entity.\n         */\n        if ((input[i] == '&') && (i + 1 < input_len)) {\n",
                      "markdown": "`    while (i < input_len) {\n        std::string::size_type copy = 1;\n\n        /* Require an ampersand and at least one character to\n         * start looking into the entity.\n         */\n        if ((input[i] == '&') && (i + 1 < input_len)) {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/html_entity_decode.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/none.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/remove_comments_char.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/parity_zero_7bit.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/remove_comments.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/severity.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/no_log.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/tag.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/variables/variable.h"
                },
                "region": {
                  "startLine": 711,
                  "startColumn": 42,
                  "endLine": 711,
                  "endColumn": 47,
                  "snippet": {
                    "text": "        reslIn.clear();\n\n        auto res = std::to_string(count);\n        val = new VariableValue(m_fullName.get(), &res);\n\n        l->push_back(val);\n        return;\n",
                    "rendered": {
                      "text": "        reslIn.clear();\n\n        auto res = std::to_string(count);\n        val = new VariableValue(m_fullName.get(), &res);\n\n        l->push_back(val);\n        return;\n",
                      "markdown": "`        reslIn.clear();\n\n        auto res = std::to_string(count);\n        val = new VariableValue(m_fullName.get(), &res);\n\n        l->push_back(val);\n        return;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/variables/variable.h"
                },
                "region": {
                  "startLine": 689,
                  "startColumn": 22,
                  "endLine": 689,
                  "endColumn": 27,
                  "snippet": {
                    "text": "class VariableModificatorCount : public Variable {\n public:\n    explicit VariableModificatorCount(std::unique_ptr<Variable> var)\n        : Variable(var.get()),\n          m_base(nullptr) {\n            m_base.reset(var.release());\n        }\n",
                    "rendered": {
                      "text": "class VariableModificatorCount : public Variable {\n public:\n    explicit VariableModificatorCount(std::unique_ptr<Variable> var)\n        : Variable(var.get()),\n          m_base(nullptr) {\n            m_base.reset(var.release());\n        }\n",
                      "markdown": "`class VariableModificatorCount : public Variable {\n public:\n    explicit VariableModificatorCount(std::unique_ptr<Variable> var)\n        : Variable(var.get()),\n          m_base(nullptr) {\n            m_base.reset(var.release());\n        }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/variables/variable.h"
                },
                "region": {
                  "startLine": 673,
                  "startColumn": 22,
                  "endLine": 673,
                  "endColumn": 27,
                  "snippet": {
                    "text": "class VariableModificatorExclusion : public Variable {\n public:\n    explicit VariableModificatorExclusion(std::unique_ptr<Variable> var)\n        : Variable(var.get()),\n        m_base(std::move(var)) { }\n\n    void evaluate(Transaction *t,\n",
                    "rendered": {
                      "text": "class VariableModificatorExclusion : public Variable {\n public:\n    explicit VariableModificatorExclusion(std::unique_ptr<Variable> var)\n        : Variable(var.get()),\n        m_base(std::move(var)) { }\n\n    void evaluate(Transaction *t,\n",
                      "markdown": "`class VariableModificatorExclusion : public Variable {\n public:\n    explicit VariableModificatorExclusion(std::unique_ptr<Variable> var)\n        : Variable(var.get()),\n        m_base(std::move(var)) { }\n\n    void evaluate(Transaction *t,\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/variables/variable.h"
                },
                "region": {
                  "startLine": 664,
                  "startColumn": 66,
                  "endLine": 664,
                  "endColumn": 71,
                  "snippet": {
                    "text": "                if (r) {\n                    return r->m_r.searchAll(v->getKey()).size() > 0;\n                }\n                return v->getKeyWithCollection() == *m->m_fullName.get();\n            }) != end();\n    };\n};\n",
                    "rendered": {
                      "text": "                if (r) {\n                    return r->m_r.searchAll(v->getKey()).size() > 0;\n                }\n                return v->getKeyWithCollection() == *m->m_fullName.get();\n            }) != end();\n    };\n};\n",
                      "markdown": "`                if (r) {\n                    return r->m_r.searchAll(v->getKey()).size() > 0;\n                }\n                return v->getKeyWithCollection() == *m->m_fullName.get();\n            }) != end();\n    };\n};\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/variables/variable.h"
                },
                "region": {
                  "startLine": 584,
                  "startColumn": 30,
                  "endLine": 584,
                  "endColumn": 35,
                  "snippet": {
                    "text": "        if (vv == nullptr) {\n            return std::string(\"\");\n        }\n        return std::string(*vv.get());\n    }\n};\n\n",
                    "rendered": {
                      "text": "        if (vv == nullptr) {\n            return std::string(\"\");\n        }\n        return std::string(*vv.get());\n    }\n};\n\n",
                      "markdown": "`        if (vv == nullptr) {\n            return std::string(\"\");\n        }\n        return std::string(*vv.get());\n    }\n};\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/variables/env.h"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 5,
                  "endLine": 31,
                  "endColumn": 10,
                  "snippet": {
                    "text": "class Transaction;\nnamespace variables {\n\nclass Env : public Variable {\n public:\n    explicit Env(const std::string &_name)\n        : Variable(_name) { }\n",
                    "rendered": {
                      "text": "class Transaction;\nnamespace variables {\n\nclass Env : public Variable {\n public:\n    explicit Env(const std::string &_name)\n        : Variable(_name) { }\n",
                      "markdown": "`class Transaction;\nnamespace variables {\n\nclass Env : public Variable {\n public:\n    explicit Env(const std::string &_name)\n        : Variable(_name) { }\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/variables/xml.cc"
                },
                "region": {
                  "startLine": 128,
                  "startColumn": 61,
                  "endLine": 128,
                  "endColumn": 66,
                  "snippet": {
                    "text": "            xmlNodeGetContent(nodes->nodeTab[i]));\n        if (content != NULL) {\n            auto a = std::string(content);\n            VariableValue *var = new VariableValue(m_fullName.get(),\n                &a);\n            if (!m_keyExclusion.toOmit(*m_fullName)) {\n                l->push_back(var);\n",
                    "rendered": {
                      "text": "            xmlNodeGetContent(nodes->nodeTab[i]));\n        if (content != NULL) {\n            auto a = std::string(content);\n            VariableValue *var = new VariableValue(m_fullName.get(),\n                &a);\n            if (!m_keyExclusion.toOmit(*m_fullName)) {\n                l->push_back(var);\n",
                      "markdown": "`            xmlNodeGetContent(nodes->nodeTab[i]));\n        if (content != NULL) {\n            auto a = std::string(content);\n            VariableValue *var = new VariableValue(m_fullName.get(),\n                &a);\n            if (!m_keyExclusion.toOmit(*m_fullName)) {\n                l->push_back(var);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/variables/xml.cc"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 36,
                  "endLine": 75,
                  "endColumn": 40,
                  "snippet": {
                    "text": "        param = std::string(m_name, pos+1, m_name.length() - (pos + 1));\n    }\n    */\n    /* Is there an XML document tree at all? */\n    if (t->m_xml->m_data.doc == NULL) {\n        /* Sorry, we've got nothing to give! */\n        return;\n",
                    "rendered": {
                      "text": "        param = std::string(m_name, pos+1, m_name.length() - (pos + 1));\n    }\n    */\n    /* Is there an XML document tree at all? */\n    if (t->m_xml->m_data.doc == NULL) {\n        /* Sorry, we've got nothing to give! */\n        return;\n",
                      "markdown": "`        param = std::string(m_name, pos+1, m_name.length() - (pos + 1));\n    }\n    */\n    /* Is there an XML document tree at all? */\n    if (t->m_xml->m_data.doc == NULL) {\n        /* Sorry, we've got nothing to give! */\n        return;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/variables/xml.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/variables/xml.cc"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 35,
                  "endLine": 121,
                  "endColumn": 41,
                  "snippet": {
                    "text": "        xmlXPathFreeContext(xpathCtx);\n        return;\n    }\n    /* Create one variable for each node in the result. */\n    for (i = 0; i < nodes->nodeNr; i++) {\n        char *content;\n        content = reinterpret_cast<char *>(\n",
                    "rendered": {
                      "text": "        xmlXPathFreeContext(xpathCtx);\n        return;\n    }\n    /* Create one variable for each node in the result. */\n    for (i = 0; i < nodes->nodeNr; i++) {\n        char *content;\n        content = reinterpret_cast<char *>(\n",
                      "markdown": "`        xmlXPathFreeContext(xpathCtx);\n        return;\n    }\n    /* Create one variable for each node in the result. */\n    for (i = 0; i < nodes->nodeNr; i++) {\n        char *content;\n        content = reinterpret_cast<char *>(\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/string.h"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 32,
                  "endLine": 76,
                  "endColumn": 36,
                  "snippet": {
                    "text": "inline std::string ascTime(const time_t *t) {\n    struct tm timeinfo;\n    localtime_r(t, &timeinfo);\n    char tstr[std::size(\"Www Mmm dd hh:mm:ss yyyy\")];\n    strftime(tstr, std::size(tstr), \"%c\", &timeinfo);\n    return tstr;\n}\n",
                    "rendered": {
                      "text": "inline std::string ascTime(const time_t *t) {\n    struct tm timeinfo;\n    localtime_r(t, &timeinfo);\n    char tstr[std::size(\"Www Mmm dd hh:mm:ss yyyy\")];\n    strftime(tstr, std::size(tstr), \"%c\", &timeinfo);\n    return tstr;\n}\n",
                      "markdown": "`inline std::string ascTime(const time_t *t) {\n    struct tm timeinfo;\n    localtime_r(t, &timeinfo);\n    char tstr[std::size(\"Www Mmm dd hh:mm:ss yyyy\")];\n    strftime(tstr, std::size(tstr), \"%c\", &timeinfo);\n    return tstr;\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/decode.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/https_client.cc"
                },
                "region": {
                  "startLine": 94,
                  "startColumn": 22,
                  "endLine": 94,
                  "endColumn": 26,
                  "snippet": {
                    "text": "        headers_chunk = curl_slist_append(headers_chunk, m_key.c_str());\n    }\n\n    /* Make it TLS 1.2 at least. */\n    curl_easy_setopt(curl, CURLOPT_SSLVERSION, CURL_SSLVERSION_TLSv1_2);\n\n    /* those are the default options, but lets make sure */\n",
                    "rendered": {
                      "text": "        headers_chunk = curl_slist_append(headers_chunk, m_key.c_str());\n    }\n\n    /* Make it TLS 1.2 at least. */\n    curl_easy_setopt(curl, CURLOPT_SSLVERSION, CURL_SSLVERSION_TLSv1_2);\n\n    /* those are the default options, but lets make sure */\n",
                      "markdown": "`        headers_chunk = curl_slist_append(headers_chunk, m_key.c_str());\n    }\n\n    /* Make it TLS 1.2 at least. */\n    curl_easy_setopt(curl, CURLOPT_SSLVERSION, CURL_SSLVERSION_TLSv1_2);\n\n    /* those are the default options, but lets make sure */\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/https_client.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/https_client.cc"
                },
                "region": {
                  "startLine": 115,
                  "startColumn": 14,
                  "endLine": 115,
                  "endColumn": 20,
                  "snippet": {
                    "text": "    curl_easy_setopt(curl, CURLOPT_USERAGENT, \"ModSecurity3\");\n    curl_easy_setopt(curl, CURLOPT_HTTPHEADER, headers_chunk);\n\n    /* We want Curl to return error in case there is an HTTP error code */\n    curl_easy_setopt(curl, CURLOPT_FAILONERROR, 1);\n\n    if (m_requestBody.empty() == false) {\n",
                    "rendered": {
                      "text": "    curl_easy_setopt(curl, CURLOPT_USERAGENT, \"ModSecurity3\");\n    curl_easy_setopt(curl, CURLOPT_HTTPHEADER, headers_chunk);\n\n    /* We want Curl to return error in case there is an HTTP error code */\n    curl_easy_setopt(curl, CURLOPT_FAILONERROR, 1);\n\n    if (m_requestBody.empty() == false) {\n",
                      "markdown": "`    curl_easy_setopt(curl, CURLOPT_USERAGENT, \"ModSecurity3\");\n    curl_easy_setopt(curl, CURLOPT_HTTPHEADER, headers_chunk);\n\n    /* We want Curl to return error in case there is an HTTP error code */\n    curl_easy_setopt(curl, CURLOPT_FAILONERROR, 1);\n\n    if (m_requestBody.empty() == false) {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/https_client.cc"
                },
                "region": {
                  "startLine": 73,
                  "startColumn": 3,
                  "endLine": 73,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    std::string uniqueId = \"ModSec-unique-id: \" + UniqueId::uniqueId();\n    std::string status = \"ModSec-status: \" + std::to_string(MODSECURITY_VERSION_NUM);\n\n    curl = curl_easy_init();\n    if (!curl) {\n        error = \"Not able to initialize libcurl\";\n        return false;\n",
                    "rendered": {
                      "text": "    std::string uniqueId = \"ModSec-unique-id: \" + UniqueId::uniqueId();\n    std::string status = \"ModSec-status: \" + std::to_string(MODSECURITY_VERSION_NUM);\n\n    curl = curl_easy_init();\n    if (!curl) {\n        error = \"Not able to initialize libcurl\";\n        return false;\n",
                      "markdown": "`    std::string uniqueId = \"ModSec-unique-id: \" + UniqueId::uniqueId();\n    std::string status = \"ModSec-status: \" + std::to_string(MODSECURITY_VERSION_NUM);\n\n    curl = curl_easy_init();\n    if (!curl) {\n        error = \"Not able to initialize libcurl\";\n        return false;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/https_client.cc"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 3,
                  "endLine": 68,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n#ifdef MSC_WITH_CURL\nbool HttpsClient::download(const std::string &uri) {\n    CURL *curl;\n    CURLcode res;\n    std::string uniqueId = \"ModSec-unique-id: \" + UniqueId::uniqueId();\n    std::string status = \"ModSec-status: \" + std::to_string(MODSECURITY_VERSION_NUM);\n",
                    "rendered": {
                      "text": "\n#ifdef MSC_WITH_CURL\nbool HttpsClient::download(const std::string &uri) {\n    CURL *curl;\n    CURLcode res;\n    std::string uniqueId = \"ModSec-unique-id: \" + UniqueId::uniqueId();\n    std::string status = \"ModSec-status: \" + std::to_string(MODSECURITY_VERSION_NUM);\n",
                      "markdown": "`\n#ifdef MSC_WITH_CURL\nbool HttpsClient::download(const std::string &uri) {\n    CURL *curl;\n    CURLcode res;\n    std::string uniqueId = \"ModSec-unique-id: \" + UniqueId::uniqueId();\n    std::string status = \"ModSec-status: \" + std::to_string(MODSECURITY_VERSION_NUM);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/modsecurity.cc"
                },
                "region": {
                  "startLine": 212,
                  "startColumn": 52,
                  "endLine": 212,
                  "endColumn": 57,
                  "snippet": {
                    "text": "    }\n\n    if (m_logProperties & RuleMessageLogProperty) {\n        const void *a = static_cast<const void *>(rm.get());\n        m_logCb(data, a);\n        return;\n    }\n",
                    "rendered": {
                      "text": "    }\n\n    if (m_logProperties & RuleMessageLogProperty) {\n        const void *a = static_cast<const void *>(rm.get());\n        m_logCb(data, a);\n        return;\n    }\n",
                      "markdown": "`    }\n\n    if (m_logProperties & RuleMessageLogProperty) {\n        const void *a = static_cast<const void *>(rm.get());\n        m_logCb(data, a);\n        return;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000703"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Username)",
            "id": "BD000703"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/modsecurity.cc"
                },
                "region": {
                  "startLine": 153,
                  "startColumn": 13,
                  "endLine": 153,
                  "endColumn": 19,
                  "snippet": {
                    "text": "        m_whoami = \"ModSecurity v\" MODSECURITY_VERSION \" (\" + platform + \")\";\n    }\n\n    return m_whoami;\n}\n\n\n",
                    "rendered": {
                      "text": "        m_whoami = \"ModSecurity v\" MODSECURITY_VERSION \" (\" + platform + \")\";\n    }\n\n    return m_whoami;\n}\n\n\n",
                      "markdown": "`        m_whoami = \"ModSecurity v\" MODSECURITY_VERSION \" (\" + platform + \")\";\n    }\n\n    return m_whoami;\n}\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000703"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Username)",
            "id": "BD000703"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/modsecurity.cc"
                },
                "region": {
                  "startLine": 150,
                  "startColumn": 10,
                  "endLine": 150,
                  "endColumn": 16,
                  "snippet": {
                    "text": "#endif\n\n    if (m_whoami.empty()) {\n        m_whoami = \"ModSecurity v\" MODSECURITY_VERSION \" (\" + platform + \")\";\n    }\n\n    return m_whoami;\n",
                    "rendered": {
                      "text": "#endif\n\n    if (m_whoami.empty()) {\n        m_whoami = \"ModSecurity v\" MODSECURITY_VERSION \" (\" + platform + \")\";\n    }\n\n    return m_whoami;\n",
                      "markdown": "`#endif\n\n    if (m_whoami.empty()) {\n        m_whoami = \"ModSecurity v\" MODSECURITY_VERSION \" (\" + platform + \")\";\n    }\n\n    return m_whoami;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000703"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Username)",
            "id": "BD000703"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/modsecurity.cc"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 10,
                  "endLine": 149,
                  "endColumn": 16,
                  "snippet": {
                    "text": "    platform = \"Windows\";\n#endif\n\n    if (m_whoami.empty()) {\n        m_whoami = \"ModSecurity v\" MODSECURITY_VERSION \" (\" + platform + \")\";\n    }\n\n",
                    "rendered": {
                      "text": "    platform = \"Windows\";\n#endif\n\n    if (m_whoami.empty()) {\n        m_whoami = \"ModSecurity v\" MODSECURITY_VERSION \" (\" + platform + \")\";\n    }\n\n",
                      "markdown": "`    platform = \"Windows\";\n#endif\n\n    if (m_whoami.empty()) {\n        m_whoami = \"ModSecurity v\" MODSECURITY_VERSION \" (\" + platform + \")\";\n    }\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000703"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Username)",
            "id": "BD000703"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/modsecurity.cc"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 6,
                  "endLine": 80,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    m_user_collection(new collection::backend::InMemoryPerProcess(\"USER\")),\n#endif\n    m_connector(\"\"),\n    m_whoami(\"\"),\n    m_logCb(NULL),\n    m_logProperties(0) {\n    UniqueId::uniqueId();\n",
                    "rendered": {
                      "text": "    m_user_collection(new collection::backend::InMemoryPerProcess(\"USER\")),\n#endif\n    m_connector(\"\"),\n    m_whoami(\"\"),\n    m_logCb(NULL),\n    m_logProperties(0) {\n    UniqueId::uniqueId();\n",
                      "markdown": "`    m_user_collection(new collection::backend::InMemoryPerProcess(\"USER\")),\n#endif\n    m_connector(\"\"),\n    m_whoami(\"\"),\n    m_logCb(NULL),\n    m_logProperties(0) {\n    UniqueId::uniqueId();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/modsecurity.cc"
                },
                "region": {
                  "startLine": 480,
                  "startColumn": 14,
                  "endLine": 480,
                  "endColumn": 19,
                  "snippet": {
                    "text": " * Example Usage:\n * @code\n *\n * ModSecurity msc = msc_init();\n *\n * @endcode\n */\n",
                    "rendered": {
                      "text": " * Example Usage:\n * @code\n *\n * ModSecurity msc = msc_init();\n *\n * @endcode\n */\n",
                      "markdown": "` * Example Usage:\n * @code\n *\n * ModSecurity msc = msc_init();\n *\n * @endcode\n */\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/modsecurity.cc"
                },
                "region": {
                  "startLine": 451,
                  "startColumn": 8,
                  "endLine": 451,
                  "endColumn": 16,
                  "snippet": {
                    "text": " * well.\n *\n * @note This information maybe will be used by a log parser. If you want to\n *       update it, make it in a fashion that won't break the existent parsers.\n *       (e.g. adding extra information _only_ to the end of the string)\n */\nextern \"C\" const char *msc_who_am_i(ModSecurity *msc) {\n",
                    "rendered": {
                      "text": " * well.\n *\n * @note This information maybe will be used by a log parser. If you want to\n *       update it, make it in a fashion that won't break the existent parsers.\n *       (e.g. adding extra information _only_ to the end of the string)\n */\nextern \"C\" const char *msc_who_am_i(ModSecurity *msc) {\n",
                      "markdown": "` * well.\n *\n * @note This information maybe will be used by a log parser. If you want to\n *       update it, make it in a fashion that won't break the existent parsers.\n *       (e.g. adding extra information _only_ to the end of the string)\n */\nextern \"C\" const char *msc_who_am_i(ModSecurity *msc) {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/modsecurity.cc"
                },
                "region": {
                  "startLine": 410,
                  "startColumn": 8,
                  "endLine": 410,
                  "endColumn": 13,
                  "snippet": {
                    "text": " * It is neccessary to indicate to libModSecurity which function within the\n * connector should be called when logging is required.\n *\n * @oarm msc The current ModSecurity instance\n * @param ModSecLogCb The callback function to which a reference to the log msgs \n * will be passed.\n *\n",
                    "rendered": {
                      "text": " * It is neccessary to indicate to libModSecurity which function within the\n * connector should be called when logging is required.\n *\n * @oarm msc The current ModSecurity instance\n * @param ModSecLogCb The callback function to which a reference to the log msgs \n * will be passed.\n *\n",
                      "markdown": "` * It is neccessary to indicate to libModSecurity which function within the\n * connector should be called when logging is required.\n *\n * @oarm msc The current ModSecurity instance\n * @param ModSecLogCb The callback function to which a reference to the log msgs \n * will be passed.\n *\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/modsecurity.cc"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 8,
                  "endLine": 121,
                  "endColumn": 16,
                  "snippet": {
                    "text": " * well.\n *\n * @note This information maybe will be used by a log parser. If you want to\n *       update it, make it in a fashion that won't break the existent parsers.\n *       (e.g. adding extra information _only_ to the end of the string)\n */\nconst std::string& ModSecurity::whoAmI() {\n",
                    "rendered": {
                      "text": " * well.\n *\n * @note This information maybe will be used by a log parser. If you want to\n *       update it, make it in a fashion that won't break the existent parsers.\n *       (e.g. adding extra information _only_ to the end of the string)\n */\nconst std::string& ModSecurity::whoAmI() {\n",
                      "markdown": "` * well.\n *\n * @note This information maybe will be used by a log parser. If you want to\n *       update it, make it in a fashion that won't break the existent parsers.\n *       (e.g. adding extra information _only_ to the end of the string)\n */\nconst std::string& ModSecurity::whoAmI() {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/modsecurity.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/tools/rules-check/rules-check.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/win32/config.h.cmake"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 12,
                  "endLine": 51,
                  "endColumn": 17,
                  "snippet": {
                    "text": "/* Define if LMDB is available */\n#cmakedefine HAVE_LMDB\n\n/* Define if LUA is available */\n#cmakedefine HAVE_LUA\n\n/* Define if MaxMind is available */\n",
                    "rendered": {
                      "text": "/* Define if LMDB is available */\n#cmakedefine HAVE_LMDB\n\n/* Define if LUA is available */\n#cmakedefine HAVE_LUA\n\n/* Define if MaxMind is available */\n",
                      "markdown": "`/* Define if LMDB is available */\n#cmakedefine HAVE_LMDB\n\n/* Define if LUA is available */\n#cmakedefine HAVE_LUA\n\n/* Define if MaxMind is available */\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/win32/README.md"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 39,
                  "endLine": 27,
                  "endColumn": 47,
                  "snippet": {
                    "text": "      2. Execute: `conan profile detect --force`\n * [Git for Windows 2.44.0](https://github.com/git-for-windows/git/releases/download/v2.44.0.windows.1/Git-2.44.0-64-bit.exe)\n    * To clone the libModSecurity repository.\n    * NOTE: Make sure to initialize and update submodules (to get `libinjection` and regression tests)\n      * `git submodule init`\n      * `git submodule update`\n\n",
                    "rendered": {
                      "text": "      2. Execute: `conan profile detect --force`\n * [Git for Windows 2.44.0](https://github.com/git-for-windows/git/releases/download/v2.44.0.windows.1/Git-2.44.0-64-bit.exe)\n    * To clone the libModSecurity repository.\n    * NOTE: Make sure to initialize and update submodules (to get `libinjection` and regression tests)\n      * `git submodule init`\n      * `git submodule update`\n\n",
                      "markdown": "`      2. Execute: `conan profile detect --force`\n * [Git for Windows 2.44.0](https://github.com/git-for-windows/git/releases/download/v2.44.0.windows.1/Git-2.44.0-64-bit.exe)\n    * To clone the libModSecurity repository.\n    * NOTE: Make sure to initialize and update submodules (to get `libinjection` and regression tests)\n      * `git submodule init`\n      * `git submodule update`\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/win32/README.md"
                },
                "region": {
                  "startLine": 107,
                  "startColumn": 10,
                  "endLine": 107,
                  "endColumn": 14,
                  "snippet": {
                    "text": "To extract the library (`libModSecurity.dll`) from the image, you can execute the following commands:\n\n * `docker container create --name [container_name] libmodsecurity`\n * `docker cp [container_name]:C:\\src\\ModSecurity\\build\\win32\\build\\[build_type]\\libModSecurity.dll .`\n   * NOTE: If you leave out the `libModSecurity.dll` filename out, you can copy all the built binaries (including examples & tests).\n\nAdditionally, the image can be used interactively for additional development work by executing:\n",
                    "rendered": {
                      "text": "To extract the library (`libModSecurity.dll`) from the image, you can execute the following commands:\n\n * `docker container create --name [container_name] libmodsecurity`\n * `docker cp [container_name]:C:\\src\\ModSecurity\\build\\win32\\build\\[build_type]\\libModSecurity.dll .`\n   * NOTE: If you leave out the `libModSecurity.dll` filename out, you can copy all the built binaries (including examples & tests).\n\nAdditionally, the image can be used interactively for additional development work by executing:\n",
                      "markdown": "`To extract the library (`libModSecurity.dll`) from the image, you can execute the following commands:\n\n * `docker container create --name [container_name] libmodsecurity`\n * `docker cp [container_name]:C:\\src\\ModSecurity\\build\\win32\\build\\[build_type]\\libModSecurity.dll .`\n   * NOTE: If you leave out the `libModSecurity.dll` filename out, you can copy all the built binaries (including examples & tests).\n\nAdditionally, the image can be used interactively for additional development work by executing:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/win32/README.md"
                },
                "region": {
                  "startLine": 96,
                  "startColumn": 12,
                  "endLine": 96,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\nNOTE: Windows containers are supported in Docker Desktop for Windows, using the *Switch to Windows containers...* option on the context menu of the system tray icon.\n\nTo build the docker image, execute the following command (from the `build\\win32\\docker` directory):\n\n * `docker build -t libmodsecurity:latest -m 4GB .`\n   * Build type, architecture and build with Address Sanitizer can be configured through build arguments (`BUILD_TYPE`, `ARCH` & `USE_ASAN` respectively). For example, to generate a debug build, add the following argument:\n",
                    "rendered": {
                      "text": "\nNOTE: Windows containers are supported in Docker Desktop for Windows, using the *Switch to Windows containers...* option on the context menu of the system tray icon.\n\nTo build the docker image, execute the following command (from the `build\\win32\\docker` directory):\n\n * `docker build -t libmodsecurity:latest -m 4GB .`\n   * Build type, architecture and build with Address Sanitizer can be configured through build arguments (`BUILD_TYPE`, `ARCH` & `USE_ASAN` respectively). For example, to generate a debug build, add the following argument:\n",
                      "markdown": "`\nNOTE: Windows containers are supported in Docker Desktop for Windows, using the *Switch to Windows containers...* option on the context menu of the system tray icon.\n\nTo build the docker image, execute the following command (from the `build\\win32\\docker` directory):\n\n * `docker build -t libmodsecurity:latest -m 4GB .`\n   * Build type, architecture and build with Address Sanitizer can be configured through build arguments (`BUILD_TYPE`, `ARCH` & `USE_ASAN` respectively). For example, to generate a debug build, add the following argument:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/win32/README.md"
                },
                "region": {
                  "startLine": 94,
                  "startColumn": 41,
                  "endLine": 94,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\nA `Dockerfile` configuration file is provided in the `docker` subdir that creates a Windows container image which installs the [prerequisites](#prerequisites) and builds libModSecurity and other binaries.\n\nNOTE: Windows containers are supported in Docker Desktop for Windows, using the *Switch to Windows containers...* option on the context menu of the system tray icon.\n\nTo build the docker image, execute the following command (from the `build\\win32\\docker` directory):\n\n",
                    "rendered": {
                      "text": "\nA `Dockerfile` configuration file is provided in the `docker` subdir that creates a Windows container image which installs the [prerequisites](#prerequisites) and builds libModSecurity and other binaries.\n\nNOTE: Windows containers are supported in Docker Desktop for Windows, using the *Switch to Windows containers...* option on the context menu of the system tray icon.\n\nTo build the docker image, execute the following command (from the `build\\win32\\docker` directory):\n\n",
                      "markdown": "`\nA `Dockerfile` configuration file is provided in the `docker` subdir that creates a Windows container image which installs the [prerequisites](#prerequisites) and builds libModSecurity and other binaries.\n\nNOTE: Windows containers are supported in Docker Desktop for Windows, using the *Switch to Windows containers...* option on the context menu of the system tray icon.\n\nTo build the docker image, execute the following command (from the `build\\win32\\docker` directory):\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/win32/README.md"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 3,
                  "endLine": 90,
                  "endColumn": 11,
                  "snippet": {
                    "text": "   * [AddressSanitizer for Windows: x64 and Debug Build Support - C++ Team Blog (microsoft.com)](https://devblogs.microsoft.com/cppblog/asan-for-windows-x64-and-debug-build-support/)\n   * [AddressSanitizer language, build, and debugging reference | Microsoft Learn](https://learn.microsoft.com/en-us/cpp/sanitizers/asan-building?view=msvc-170)\n\n### Docker container\n\nA `Dockerfile` configuration file is provided in the `docker` subdir that creates a Windows container image which installs the [prerequisites](#prerequisites) and builds libModSecurity and other binaries.\n\n",
                    "rendered": {
                      "text": "   * [AddressSanitizer for Windows: x64 and Debug Build Support - C++ Team Blog (microsoft.com)](https://devblogs.microsoft.com/cppblog/asan-for-windows-x64-and-debug-build-support/)\n   * [AddressSanitizer language, build, and debugging reference | Microsoft Learn](https://learn.microsoft.com/en-us/cpp/sanitizers/asan-building?view=msvc-170)\n\n### Docker container\n\nA `Dockerfile` configuration file is provided in the `docker` subdir that creates a Windows container image which installs the [prerequisites](#prerequisites) and builds libModSecurity and other binaries.\n\n",
                      "markdown": "`   * [AddressSanitizer for Windows: x64 and Debug Build Support - C++ Team Blog (microsoft.com)](https://devblogs.microsoft.com/cppblog/asan-for-windows-x64-and-debug-build-support/)\n   * [AddressSanitizer language, build, and debugging reference | Microsoft Learn](https://learn.microsoft.com/en-us/cpp/sanitizers/asan-building?view=msvc-170)\n\n### Docker container\n\nA `Dockerfile` configuration file is provided in the `docker` subdir that creates a Windows container image which installs the [prerequisites](#prerequisites) and builds libModSecurity and other binaries.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/win32/README.md"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 2,
                  "endLine": 71,
                  "endColumn": 7,
                  "snippet": {
                    "text": " * libxml2 2.12.6 for XML processing support\n * libcurl 8.6.0 to support http requests from rules\n * libmaxminddb 1.9.1 to support reading MaxMind DB files.\n * LUA 5.4.6 to enable rules to run scripts in this language for extensibility\n * lmdb 0.9.31 in-memory database\n\nEach of these can be turned off by updating the associated `HAVE_xxx` variable (setting it to zero) in the beginning of the libModSecurity section of `CMakeLists.txt`.\n",
                    "rendered": {
                      "text": " * libxml2 2.12.6 for XML processing support\n * libcurl 8.6.0 to support http requests from rules\n * libmaxminddb 1.9.1 to support reading MaxMind DB files.\n * LUA 5.4.6 to enable rules to run scripts in this language for extensibility\n * lmdb 0.9.31 in-memory database\n\nEach of these can be turned off by updating the associated `HAVE_xxx` variable (setting it to zero) in the beginning of the libModSecurity section of `CMakeLists.txt`.\n",
                      "markdown": "` * libxml2 2.12.6 for XML processing support\n * libcurl 8.6.0 to support http requests from rules\n * libmaxminddb 1.9.1 to support reading MaxMind DB files.\n * LUA 5.4.6 to enable rules to run scripts in this language for extensibility\n * lmdb 0.9.31 in-memory database\n\nEach of these can be turned off by updating the associated `HAVE_xxx` variable (setting it to zero) in the beginning of the libModSecurity section of `CMakeLists.txt`.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/ax_valgrind_check.m4"
                },
                "region": {
                  "startLine": 200,
                  "endLine": 200,
                  "endColumn": 5,
                  "snippet": {
                    "text": "# Valgrind running\nVALGRIND_TESTS_ENVIRONMENT = \\\n\t$(TESTS_ENVIRONMENT) \\\n\tenv VALGRIND=$(VALGRIND) \\\n\tG_SLICE=always-malloc,debug-blocks \\\n\tG_DEBUG=fatal-warnings,fatal-criticals,gc-friendly\n\n",
                    "rendered": {
                      "text": "# Valgrind running\nVALGRIND_TESTS_ENVIRONMENT = \\\n\t$(TESTS_ENVIRONMENT) \\\n\tenv VALGRIND=$(VALGRIND) \\\n\tG_SLICE=always-malloc,debug-blocks \\\n\tG_DEBUG=fatal-warnings,fatal-criticals,gc-friendly\n\n",
                      "markdown": "`# Valgrind running\nVALGRIND_TESTS_ENVIRONMENT = \\\n\t$(TESTS_ENVIRONMENT) \\\n\tenv VALGRIND=$(VALGRIND) \\\n\tG_SLICE=always-malloc,debug-blocks \\\n\tG_DEBUG=fatal-warnings,fatal-criticals,gc-friendly\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/ax_valgrind_check.m4"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 27,
                  "endLine": 93,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\t\tAC_CHECK_PROG([VALGRIND],[valgrind],[valgrind])\n\t\tAS_IF([test \"$VALGRIND\" = \"\"],[\n\t\t\tAS_IF([test \"$enable_valgrind\" = \"yes\"],[\n\t\t\t\tAC_MSG_ERROR([Could not find valgrind; either install it or reconfigure with --disable-valgrind])\n\t\t\t],[\n\t\t\t\tenable_valgrind=no\n\t\t\t])\n",
                    "rendered": {
                      "text": "\t\tAC_CHECK_PROG([VALGRIND],[valgrind],[valgrind])\n\t\tAS_IF([test \"$VALGRIND\" = \"\"],[\n\t\t\tAS_IF([test \"$enable_valgrind\" = \"yes\"],[\n\t\t\t\tAC_MSG_ERROR([Could not find valgrind; either install it or reconfigure with --disable-valgrind])\n\t\t\t],[\n\t\t\t\tenable_valgrind=no\n\t\t\t])\n",
                      "markdown": "`\t\tAC_CHECK_PROG([VALGRIND],[valgrind],[valgrind])\n\t\tAS_IF([test \"$VALGRIND\" = \"\"],[\n\t\t\tAS_IF([test \"$enable_valgrind\" = \"yes\"],[\n\t\t\t\tAC_MSG_ERROR([Could not find valgrind; either install it or reconfigure with --disable-valgrind])\n\t\t\t],[\n\t\t\t\tenable_valgrind=no\n\t\t\t])\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/ax_valgrind_check.m4"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 43,
                  "endLine": 26,
                  "endColumn": 51,
                  "snippet": {
                    "text": "#   all commands not disabled via AX_VALGRIND_DFLT. All AX_VALGRIND_DFLT\n#   calls must be made before the call to AX_VALGRIND_CHECK.\n#\n#   If unit tests are written using a shell script and automake's\n#   LOG_COMPILER system, the $(VALGRIND) variable can be used within the\n#   shell scripts to enable Valgrind, as described here:\n#\n",
                    "rendered": {
                      "text": "#   all commands not disabled via AX_VALGRIND_DFLT. All AX_VALGRIND_DFLT\n#   calls must be made before the call to AX_VALGRIND_CHECK.\n#\n#   If unit tests are written using a shell script and automake's\n#   LOG_COMPILER system, the $(VALGRIND) variable can be used within the\n#   shell scripts to enable Valgrind, as described here:\n#\n",
                      "markdown": "`#   all commands not disabled via AX_VALGRIND_DFLT. All AX_VALGRIND_DFLT\n#   calls must be made before the call to AX_VALGRIND_CHECK.\n#\n#   If unit tests are written using a shell script and automake's\n#   LOG_COMPILER system, the $(VALGRIND) variable can be used within the\n#   shell scripts to enable Valgrind, as described here:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/ax_prog_doxygen.m4"
                },
                "region": {
                  "startLine": 309,
                  "startColumn": 1,
                  "endLine": 309,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n# DX_TEST_FEATURE(FEATURE)\n# ------------------------\n# Expand to a shell expression testing whether the feature is active.\nAC_DEFUN([DX_TEST_FEATURE], [test \"$DX_FLAG_$1\" = 1])\n\n# DX_CHECK_DEPEND(REQUIRED_FEATURE, REQUIRED_STATE)\n",
                    "rendered": {
                      "text": "\n# DX_TEST_FEATURE(FEATURE)\n# ------------------------\n# Expand to a shell expression testing whether the feature is active.\nAC_DEFUN([DX_TEST_FEATURE], [test \"$DX_FLAG_$1\" = 1])\n\n# DX_CHECK_DEPEND(REQUIRED_FEATURE, REQUIRED_STATE)\n",
                      "markdown": "`\n# DX_TEST_FEATURE(FEATURE)\n# ------------------------\n# Expand to a shell expression testing whether the feature is active.\nAC_DEFUN([DX_TEST_FEATURE], [test \"$DX_FLAG_$1\" = 1])\n\n# DX_CHECK_DEPEND(REQUIRED_FEATURE, REQUIRED_STATE)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/ax_prog_doxygen.m4"
                },
                "region": {
                  "startLine": 287,
                  "startColumn": 1,
                  "endLine": 287,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n# DX_DIRNAME_EXPR\n# ---------------\n# Expand into a shell expression prints the directory part of a path.\nAC_DEFUN([DX_DIRNAME_EXPR],\n         [[expr \".$1\" : '\\(\\.\\)[^/]*$' \\| \"x$1\" : 'x\\(.*\\)/[^/]*$']])\n\n",
                    "rendered": {
                      "text": "\n# DX_DIRNAME_EXPR\n# ---------------\n# Expand into a shell expression prints the directory part of a path.\nAC_DEFUN([DX_DIRNAME_EXPR],\n         [[expr \".$1\" : '\\(\\.\\)[^/]*$' \\| \"x$1\" : 'x\\(.*\\)/[^/]*$']])\n\n",
                      "markdown": "`\n# DX_DIRNAME_EXPR\n# ---------------\n# Expand into a shell expression prints the directory part of a path.\nAC_DEFUN([DX_DIRNAME_EXPR],\n         [[expr \".$1\" : '\\(\\.\\)[^/]*$' \\| \"x$1\" : 'x\\(.*\\)/[^/]*$']])\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/ax_prog_doxygen.m4"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 21,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "#   the same time). The XML is rather useless unless you apply specialized\n#   post-processing to it.\n#\n#   The macros mainly control the default state of the feature. The use can\n#   override the default by specifying --enable or --disable. The macros\n#   ensure that contradictory flags are not given (e.g.,\n#   --enable-doxygen-html and --enable-doxygen-chm,\n",
                    "rendered": {
                      "text": "#   the same time). The XML is rather useless unless you apply specialized\n#   post-processing to it.\n#\n#   The macros mainly control the default state of the feature. The use can\n#   override the default by specifying --enable or --disable. The macros\n#   ensure that contradictory flags are not given (e.g.,\n#   --enable-doxygen-html and --enable-doxygen-chm,\n",
                      "markdown": "`#   the same time). The XML is rather useless unless you apply specialized\n#   post-processing to it.\n#\n#   The macros mainly control the default state of the feature. The use can\n#   override the default by specifying --enable or --disable. The macros\n#   ensure that contradictory flags are not given (e.g.,\n#   --enable-doxygen-html and --enable-doxygen-chm,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/ax_prog_doxygen.m4"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 71,
                  "endLine": 34,
                  "snippet": {
                    "text": "#   be the most popular and portable combination. MAN pages created by\n#   Doxygen are usually problematic, though by picking an appropriate subset\n#   and doing some massaging they might be better than nothing. CHM and RTF\n#   are specific for MS (note that you can't generate both HTML and CHM at\n#   the same time). The XML is rather useless unless you apply specialized\n#   post-processing to it.\n#\n#   The macros mainly control the default state of the feature. The use can\n",
                    "rendered": {
                      "text": "#   be the most popular and portable combination. MAN pages created by\n#   Doxygen are usually problematic, though by picking an appropriate subset\n#   and doing some massaging they might be better than nothing. CHM and RTF\n#   are specific for MS (note that you can't generate both HTML and CHM at\n#   the same time). The XML is rather useless unless you apply specialized\n#   post-processing to it.\n#\n#   The macros mainly control the default state of the feature. The use can\n",
                      "markdown": "`#   be the most popular and portable combination. MAN pages created by\n#   Doxygen are usually problematic, though by picking an appropriate subset\n#   and doing some massaging they might be better than nothing. CHM and RTF\n#   are specific for MS (note that you can't generate both HTML and CHM at\n#   the same time). The XML is rather useless unless you apply specialized\n#   post-processing to it.\n#\n#   The macros mainly control the default state of the feature. The use can\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/ax_prog_doxygen.m4"
                },
                "region": {
                  "startLine": 21,
                  "startColumn": 27,
                  "endLine": 21,
                  "endColumn": 36,
                  "snippet": {
                    "text": "#\n# DESCRIPTION\n#\n#   The DX_*_FEATURE macros control the default setting for the given\n#   Doxygen feature. Supported features are 'DOXYGEN' itself, 'DOT' for\n#   generating graphics, 'HTML' for plain HTML, 'CHM' for compressed HTML\n#   help (for MS users), 'CHI' for generating a seperate .chi file by the\n",
                    "rendered": {
                      "text": "#\n# DESCRIPTION\n#\n#   The DX_*_FEATURE macros control the default setting for the given\n#   Doxygen feature. Supported features are 'DOXYGEN' itself, 'DOT' for\n#   generating graphics, 'HTML' for plain HTML, 'CHM' for compressed HTML\n#   help (for MS users), 'CHI' for generating a seperate .chi file by the\n",
                      "markdown": "`#\n# DESCRIPTION\n#\n#   The DX_*_FEATURE macros control the default setting for the given\n#   Doxygen feature. Supported features are 'DOXYGEN' itself, 'DOT' for\n#   generating graphics, 'HTML' for plain HTML, 'CHM' for compressed HTML\n#   help (for MS users), 'CHI' for generating a seperate .chi file by the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/ax_prog_doxygen.m4"
                },
                "region": {
                  "startLine": 309,
                  "startColumn": 1,
                  "endLine": 309,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n# DX_TEST_FEATURE(FEATURE)\n# ------------------------\n# Expand to a shell expression testing whether the feature is active.\nAC_DEFUN([DX_TEST_FEATURE], [test \"$DX_FLAG_$1\" = 1])\n\n# DX_CHECK_DEPEND(REQUIRED_FEATURE, REQUIRED_STATE)\n",
                    "rendered": {
                      "text": "\n# DX_TEST_FEATURE(FEATURE)\n# ------------------------\n# Expand to a shell expression testing whether the feature is active.\nAC_DEFUN([DX_TEST_FEATURE], [test \"$DX_FLAG_$1\" = 1])\n\n# DX_CHECK_DEPEND(REQUIRED_FEATURE, REQUIRED_STATE)\n",
                      "markdown": "`\n# DX_TEST_FEATURE(FEATURE)\n# ------------------------\n# Expand to a shell expression testing whether the feature is active.\nAC_DEFUN([DX_TEST_FEATURE], [test \"$DX_FLAG_$1\" = 1])\n\n# DX_CHECK_DEPEND(REQUIRED_FEATURE, REQUIRED_STATE)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/ax_prog_doxygen.m4"
                },
                "region": {
                  "startLine": 287,
                  "startColumn": 1,
                  "endLine": 287,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n# DX_DIRNAME_EXPR\n# ---------------\n# Expand into a shell expression prints the directory part of a path.\nAC_DEFUN([DX_DIRNAME_EXPR],\n         [[expr \".$1\" : '\\(\\.\\)[^/]*$' \\| \"x$1\" : 'x\\(.*\\)/[^/]*$']])\n\n",
                    "rendered": {
                      "text": "\n# DX_DIRNAME_EXPR\n# ---------------\n# Expand into a shell expression prints the directory part of a path.\nAC_DEFUN([DX_DIRNAME_EXPR],\n         [[expr \".$1\" : '\\(\\.\\)[^/]*$' \\| \"x$1\" : 'x\\(.*\\)/[^/]*$']])\n\n",
                      "markdown": "`\n# DX_DIRNAME_EXPR\n# ---------------\n# Expand into a shell expression prints the directory part of a path.\nAC_DEFUN([DX_DIRNAME_EXPR],\n         [[expr \".$1\" : '\\(\\.\\)[^/]*$' \\| \"x$1\" : 'x\\(.*\\)/[^/]*$']])\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/ax_prog_doxygen.m4"
                },
                "region": {
                  "startLine": 205,
                  "startColumn": 9,
                  "endLine": 205,
                  "endColumn": 13,
                  "snippet": {
                    "text": "#             $(DX_PDFLATEX) refman.tex; \\\n#             countdown=`expr $$countdown - 1`; \\\n#         done; \\\n#         mv refman.pdf ../@PACKAGE@.pdf\n#\n#     endif DX_COND_pdf\n#\n",
                    "rendered": {
                      "text": "#             $(DX_PDFLATEX) refman.tex; \\\n#             countdown=`expr $$countdown - 1`; \\\n#         done; \\\n#         mv refman.pdf ../@PACKAGE@.pdf\n#\n#     endif DX_COND_pdf\n#\n",
                      "markdown": "`#             $(DX_PDFLATEX) refman.tex; \\\n#             countdown=`expr $$countdown - 1`; \\\n#         done; \\\n#         mv refman.pdf ../@PACKAGE@.pdf\n#\n#     endif DX_COND_pdf\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/lmdb.m4"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 21,
                  "endLine": 119,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\nAC_DEFUN([CHECK_FOR_LMDB_AT], [\n    path=$1\n    echo \"*** LOOKING AT PATH: \" ${path}\n    for y in ${LMDB_POSSIBLE_EXTENSIONS}; do\n        for z in ${LMDB_POSSIBLE_LIB_NAMES}; do\n           if test -e \"${path}/${z}.${y}\"; then\n",
                    "rendered": {
                      "text": "\nAC_DEFUN([CHECK_FOR_LMDB_AT], [\n    path=$1\n    echo \"*** LOOKING AT PATH: \" ${path}\n    for y in ${LMDB_POSSIBLE_EXTENSIONS}; do\n        for z in ${LMDB_POSSIBLE_LIB_NAMES}; do\n           if test -e \"${path}/${z}.${y}\"; then\n",
                      "markdown": "`\nAC_DEFUN([CHECK_FOR_LMDB_AT], [\n    path=$1\n    echo \"*** LOOKING AT PATH: \" ${path}\n    for y in ${LMDB_POSSIBLE_EXTENSIONS}; do\n        for z in ${LMDB_POSSIBLE_LIB_NAMES}; do\n           if test -e \"${path}/${z}.${y}\"; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/lmdb.m4"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 39,
                  "endLine": 64,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                LMDB_LDFLAGS=\"`${PKG_CONFIG} ${LMDB_PKG_NAME} --libs-only-L --libs-only-other`\"\n                LMDB_DISPLAY=\"${LMDB_LDADD}, ${LMDB_CFLAGS}\"\n            else\n                # If pkg-config did not find anything useful, go over file lookup.\n                for x in ${LMDB_POSSIBLE_PATHS}; do\n                    CHECK_FOR_LMDB_AT(${x})\n                    if test -n \"${LMDB_VERSION}\"; then\n",
                    "rendered": {
                      "text": "                LMDB_LDFLAGS=\"`${PKG_CONFIG} ${LMDB_PKG_NAME} --libs-only-L --libs-only-other`\"\n                LMDB_DISPLAY=\"${LMDB_LDADD}, ${LMDB_CFLAGS}\"\n            else\n                # If pkg-config did not find anything useful, go over file lookup.\n                for x in ${LMDB_POSSIBLE_PATHS}; do\n                    CHECK_FOR_LMDB_AT(${x})\n                    if test -n \"${LMDB_VERSION}\"; then\n",
                      "markdown": "`                LMDB_LDFLAGS=\"`${PKG_CONFIG} ${LMDB_PKG_NAME} --libs-only-L --libs-only-other`\"\n                LMDB_DISPLAY=\"${LMDB_LDADD}, ${LMDB_CFLAGS}\"\n            else\n                # If pkg-config did not find anything useful, go over file lookup.\n                for x in ${LMDB_POSSIBLE_PATHS}; do\n                    CHECK_FOR_LMDB_AT(${x})\n                    if test -n \"${LMDB_VERSION}\"; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/yajl.m4"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 39,
                  "endLine": 64,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                YAJL_LDFLAGS=\"`${PKG_CONFIG} ${YAJL_PKG_NAME} --libs-only-L --libs-only-other`\"\n                YAJL_DISPLAY=\"${YAJL_LDADD}, ${YAJL_CFLAGS}\"\n            else\n                # If pkg-config did not find anything useful, go over file lookup.\n                for x in ${YAJL_POSSIBLE_LIB_NAMES}; do\n                    CHECK_FOR_YAJL_AT(${x})\n                    if test -n \"${YAJL_VERSION}\"; then\n",
                    "rendered": {
                      "text": "                YAJL_LDFLAGS=\"`${PKG_CONFIG} ${YAJL_PKG_NAME} --libs-only-L --libs-only-other`\"\n                YAJL_DISPLAY=\"${YAJL_LDADD}, ${YAJL_CFLAGS}\"\n            else\n                # If pkg-config did not find anything useful, go over file lookup.\n                for x in ${YAJL_POSSIBLE_LIB_NAMES}; do\n                    CHECK_FOR_YAJL_AT(${x})\n                    if test -n \"${YAJL_VERSION}\"; then\n",
                      "markdown": "`                YAJL_LDFLAGS=\"`${PKG_CONFIG} ${YAJL_PKG_NAME} --libs-only-L --libs-only-other`\"\n                YAJL_DISPLAY=\"${YAJL_LDADD}, ${YAJL_CFLAGS}\"\n            else\n                # If pkg-config did not find anything useful, go over file lookup.\n                for x in ${YAJL_POSSIBLE_LIB_NAMES}; do\n                    CHECK_FOR_YAJL_AT(${x})\n                    if test -n \"${YAJL_VERSION}\"; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/libmaxmind.m4"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 39,
                  "endLine": 77,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                MAXMIND_LDFLAGS=\"`${PKG_CONFIG} ${MAXMIND_PKG_NAME} --libs-only-L --libs-only-other`\"\n                MAXMIND_DISPLAY=\"${MAXMIND_LDADD}\"\n            else\n                # If pkg-config did not find anything useful, go over file lookup.\n                for x in ${MAXMIND_POSSIBLE_PATHS}; do\n                    CHECK_FOR_MAXMIND_AT(${x})\n                    if test -n \"${MAXMIND_VERSION}\"; then\n",
                    "rendered": {
                      "text": "                MAXMIND_LDFLAGS=\"`${PKG_CONFIG} ${MAXMIND_PKG_NAME} --libs-only-L --libs-only-other`\"\n                MAXMIND_DISPLAY=\"${MAXMIND_LDADD}\"\n            else\n                # If pkg-config did not find anything useful, go over file lookup.\n                for x in ${MAXMIND_POSSIBLE_PATHS}; do\n                    CHECK_FOR_MAXMIND_AT(${x})\n                    if test -n \"${MAXMIND_VERSION}\"; then\n",
                      "markdown": "`                MAXMIND_LDFLAGS=\"`${PKG_CONFIG} ${MAXMIND_PKG_NAME} --libs-only-L --libs-only-other`\"\n                MAXMIND_DISPLAY=\"${MAXMIND_LDADD}\"\n            else\n                # If pkg-config did not find anything useful, go over file lookup.\n                for x in ${MAXMIND_POSSIBLE_PATHS}; do\n                    CHECK_FOR_MAXMIND_AT(${x})\n                    if test -n \"${MAXMIND_VERSION}\"; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/lua.m4"
                },
                "region": {
                  "startLine": 223,
                  "startColumn": 34,
                  "endLine": 223,
                  "endColumn": 40,
                  "snippet": {
                    "text": "                      )\n\n        if test -z \"${LUA_VERSION}\" ; then\n        # As a last resort, try to find LUA version from $lua_inc_path\n            while read -r line\n            do\n            case \"$line\" in\n",
                    "rendered": {
                      "text": "                      )\n\n        if test -z \"${LUA_VERSION}\" ; then\n        # As a last resort, try to find LUA version from $lua_inc_path\n            while read -r line\n            do\n            case \"$line\" in\n",
                      "markdown": "`                      )\n\n        if test -z \"${LUA_VERSION}\" ; then\n        # As a last resort, try to find LUA version from $lua_inc_path\n            while read -r line\n            do\n            case \"$line\" in\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/lua.m4"
                },
                "region": {
                  "startLine": 217,
                  "startColumn": 33,
                  "endLine": 217,
                  "endColumn": 38,
                  "snippet": {
                    "text": "                         [ #if (LUA_VERSION_NUM == 504)\n                           return 0;\n                           #else\n                           #error Lua 5.4 not detected\n                           #endif ]])],\n                             [ LUA_VERSION=504 ], [ lua_5_4=0 ]\n                      )\n",
                    "rendered": {
                      "text": "                         [ #if (LUA_VERSION_NUM == 504)\n                           return 0;\n                           #else\n                           #error Lua 5.4 not detected\n                           #endif ]])],\n                             [ LUA_VERSION=504 ], [ lua_5_4=0 ]\n                      )\n",
                      "markdown": "`                         [ #if (LUA_VERSION_NUM == 504)\n                           return 0;\n                           #else\n                           #error Lua 5.4 not detected\n                           #endif ]])],\n                             [ LUA_VERSION=504 ], [ lua_5_4=0 ]\n                      )\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/lua.m4"
                },
                "region": {
                  "startLine": 208,
                  "startColumn": 33,
                  "endLine": 208,
                  "endColumn": 38,
                  "snippet": {
                    "text": "                     [ #if (LUA_VERSION_NUM == 502)\n                           return 0;\n                           #else\n                           #error Lua 5.2 not detected\n                           #endif ]])],\n                             [ LUA_VERSION=502 ], [ lua_5_2=0 ]\n                      )\n",
                    "rendered": {
                      "text": "                     [ #if (LUA_VERSION_NUM == 502)\n                           return 0;\n                           #else\n                           #error Lua 5.2 not detected\n                           #endif ]])],\n                             [ LUA_VERSION=502 ], [ lua_5_2=0 ]\n                      )\n",
                      "markdown": "`                     [ #if (LUA_VERSION_NUM == 502)\n                           return 0;\n                           #else\n                           #error Lua 5.2 not detected\n                           #endif ]])],\n                             [ LUA_VERSION=502 ], [ lua_5_2=0 ]\n                      )\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/lua.m4"
                },
                "region": {
                  "startLine": 199,
                  "startColumn": 33,
                  "endLine": 199,
                  "endColumn": 38,
                  "snippet": {
                    "text": "                         [ #if (LUA_VERSION_NUM == 502)\n                           return 0;\n                           #else\n                           #error Lua 5.2 not detected\n                           #endif ]])],\n                             [ LUA_VERSION=502 ], [ lua_5_2=0 ]\n                      )\n",
                    "rendered": {
                      "text": "                         [ #if (LUA_VERSION_NUM == 502)\n                           return 0;\n                           #else\n                           #error Lua 5.2 not detected\n                           #endif ]])],\n                             [ LUA_VERSION=502 ], [ lua_5_2=0 ]\n                      )\n",
                      "markdown": "`                         [ #if (LUA_VERSION_NUM == 502)\n                           return 0;\n                           #else\n                           #error Lua 5.2 not detected\n                           #endif ]])],\n                             [ LUA_VERSION=502 ], [ lua_5_2=0 ]\n                      )\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/lua.m4"
                },
                "region": {
                  "startLine": 103,
                  "startColumn": 28,
                  "endLine": 103,
                  "endColumn": 33,
                  "snippet": {
                    "text": "        AC_SUBST(LUA_DISPLAY)\n    else\n        LUA_FOUND=1\n        AC_MSG_NOTICE([using LUA ${LUA_LDADD}])\n        LUA_CFLAGS=\"-DWITH_LUA ${LUA_CFLAGS}\"\n        LUA_DISPLAY=\"${LUA_LDADD} ${LUA_LDFLAGS}, ${LUA_CFLAGS}\"\n        AC_SUBST(LUA_LDFLAGS)\n",
                    "rendered": {
                      "text": "        AC_SUBST(LUA_DISPLAY)\n    else\n        LUA_FOUND=1\n        AC_MSG_NOTICE([using LUA ${LUA_LDADD}])\n        LUA_CFLAGS=\"-DWITH_LUA ${LUA_CFLAGS}\"\n        LUA_DISPLAY=\"${LUA_LDADD} ${LUA_LDFLAGS}, ${LUA_CFLAGS}\"\n        AC_SUBST(LUA_LDFLAGS)\n",
                      "markdown": "`        AC_SUBST(LUA_DISPLAY)\n    else\n        LUA_FOUND=1\n        AC_MSG_NOTICE([using LUA ${LUA_LDADD}])\n        LUA_CFLAGS=\"-DWITH_LUA ${LUA_CFLAGS}\"\n        LUA_DISPLAY=\"${LUA_LDADD} ${LUA_LDFLAGS}, ${LUA_CFLAGS}\"\n        AC_SUBST(LUA_LDFLAGS)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/lua.m4"
                },
                "region": {
                  "startLine": 94,
                  "startColumn": 28,
                  "endLine": 94,
                  "endColumn": 33,
                  "snippet": {
                    "text": "else\n    if test -z \"${LUA_MANDATORY}\" || test \"x${LUA_MANDATORY}\" == \"xno\"; then\n        LUA_FOUND=1\n        AC_MSG_NOTICE([using LUA ${LUA_LDADD}])\n        LUA_CFLAGS=\"-DWITH_LUA ${LUA_CFLAGS}\"\n        LUA_DISPLAY=\"${LUA_LDADD} ${LUA_LDFLAGS}, ${LUA_CFLAGS}\"\n        AC_SUBST(LUA_LDFLAGS)\n",
                    "rendered": {
                      "text": "else\n    if test -z \"${LUA_MANDATORY}\" || test \"x${LUA_MANDATORY}\" == \"xno\"; then\n        LUA_FOUND=1\n        AC_MSG_NOTICE([using LUA ${LUA_LDADD}])\n        LUA_CFLAGS=\"-DWITH_LUA ${LUA_CFLAGS}\"\n        LUA_DISPLAY=\"${LUA_LDADD} ${LUA_LDFLAGS}, ${LUA_CFLAGS}\"\n        AC_SUBST(LUA_LDFLAGS)\n",
                      "markdown": "`else\n    if test -z \"${LUA_MANDATORY}\" || test \"x${LUA_MANDATORY}\" == \"xno\"; then\n        LUA_FOUND=1\n        AC_MSG_NOTICE([using LUA ${LUA_LDADD}])\n        LUA_CFLAGS=\"-DWITH_LUA ${LUA_CFLAGS}\"\n        LUA_DISPLAY=\"${LUA_LDADD} ${LUA_LDFLAGS}, ${LUA_CFLAGS}\"\n        AC_SUBST(LUA_LDFLAGS)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/lua.m4"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 30,
                  "endLine": 31,
                  "endColumn": 35,
                  "snippet": {
                    "text": "\nif test \"x${with_lua}\" == \"xno\"; then\n    AC_DEFINE(HAVE_LUA, 0, [Support for LUA was disabled by the utilization of --without-lua or --with-lua=no])\n    AC_MSG_NOTICE([Support for LUA was disabled by the utilization of --without-lua or --with-lua=no])\n    LUA_DISABLED=yes\nelse\n    if test \"x${with_lua}\" == \"xyes\"; then\n",
                    "rendered": {
                      "text": "\nif test \"x${with_lua}\" == \"xno\"; then\n    AC_DEFINE(HAVE_LUA, 0, [Support for LUA was disabled by the utilization of --without-lua or --with-lua=no])\n    AC_MSG_NOTICE([Support for LUA was disabled by the utilization of --without-lua or --with-lua=no])\n    LUA_DISABLED=yes\nelse\n    if test \"x${with_lua}\" == \"xyes\"; then\n",
                      "markdown": "`\nif test \"x${with_lua}\" == \"xno\"; then\n    AC_DEFINE(HAVE_LUA, 0, [Support for LUA was disabled by the utilization of --without-lua or --with-lua=no])\n    AC_MSG_NOTICE([Support for LUA was disabled by the utilization of --without-lua or --with-lua=no])\n    LUA_DISABLED=yes\nelse\n    if test \"x${with_lua}\" == \"xyes\"; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/lua.m4"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 39,
                  "endLine": 30,
                  "endColumn": 44,
                  "snippet": {
                    "text": "\n\nif test \"x${with_lua}\" == \"xno\"; then\n    AC_DEFINE(HAVE_LUA, 0, [Support for LUA was disabled by the utilization of --without-lua or --with-lua=no])\n    AC_MSG_NOTICE([Support for LUA was disabled by the utilization of --without-lua or --with-lua=no])\n    LUA_DISABLED=yes\nelse\n",
                    "rendered": {
                      "text": "\n\nif test \"x${with_lua}\" == \"xno\"; then\n    AC_DEFINE(HAVE_LUA, 0, [Support for LUA was disabled by the utilization of --without-lua or --with-lua=no])\n    AC_MSG_NOTICE([Support for LUA was disabled by the utilization of --without-lua or --with-lua=no])\n    LUA_DISABLED=yes\nelse\n",
                      "markdown": "`\n\nif test \"x${with_lua}\" == \"xno\"; then\n    AC_DEFINE(HAVE_LUA, 0, [Support for LUA was disabled by the utilization of --without-lua or --with-lua=no])\n    AC_MSG_NOTICE([Support for LUA was disabled by the utilization of --without-lua or --with-lua=no])\n    LUA_DISABLED=yes\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/lua.m4"
                },
                "region": {
                  "startLine": 25,
                  "startColumn": 46,
                  "endLine": 25,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\nAC_ARG_WITH(\n    lua,\n    [AS_HELP_STRING([--with-lua=PATH],[Path to lua prefix])]\n)\n\n\n",
                    "rendered": {
                      "text": "\nAC_ARG_WITH(\n    lua,\n    [AS_HELP_STRING([--with-lua=PATH],[Path to lua prefix])]\n)\n\n\n",
                      "markdown": "`\nAC_ARG_WITH(\n    lua,\n    [AS_HELP_STRING([--with-lua=PATH],[Path to lua prefix])]\n)\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/lua.m4"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 24,
                  "endLine": 8,
                  "endColumn": 29,
                  "snippet": {
                    "text": "AC_DEFUN([CHECK_LUA],\n[dnl\n\n# Possible names for the lua library/package (pkg-config)\nLUA_POSSIBLE_LIB_NAMES=\"lua54 lua5.4 lua-5.4 lua53 lua5.3 lua-5.3 lua52 lua5.2 lua-5.2 lua51 lua5.1 lua-5.1 lua\"\n\n# Possible extensions for the library\n",
                    "rendered": {
                      "text": "AC_DEFUN([CHECK_LUA],\n[dnl\n\n# Possible names for the lua library/package (pkg-config)\nLUA_POSSIBLE_LIB_NAMES=\"lua54 lua5.4 lua-5.4 lua53 lua5.3 lua-5.3 lua52 lua5.2 lua-5.2 lua51 lua5.1 lua-5.1 lua\"\n\n# Possible extensions for the library\n",
                      "markdown": "`AC_DEFUN([CHECK_LUA],\n[dnl\n\n# Possible names for the lua library/package (pkg-config)\nLUA_POSSIBLE_LIB_NAMES=\"lua54 lua5.4 lua-5.4 lua53 lua5.3 lua-5.3 lua52 lua5.2 lua-5.2 lua51 lua5.1 lua-5.1 lua\"\n\n# Possible extensions for the library\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/lua.m4"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 13,
                  "endLine": 1,
                  "endColumn": 18,
                  "snippet": {
                    "text": "dnl Check for LUA Libraries\ndnl CHECK_LUA(ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND])\n\n\n",
                    "rendered": {
                      "text": "dnl Check for LUA Libraries\ndnl CHECK_LUA(ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND])\n\n\n",
                      "markdown": "`dnl Check for LUA Libraries\ndnl CHECK_LUA(ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND])\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/lua.m4"
                },
                "region": {
                  "startLine": 120,
                  "startColumn": 21,
                  "endLine": 120,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\nAC_DEFUN([CHECK_FOR_LUA_AT], [\n    path=$1\n    echo \"*** LOOKING AT PATH: \" ${path}\n    for y in ${LUA_POSSIBLE_EXTENSIONS}; do\n        for z in ${LUA_POSSIBLE_LIB_NAMES}; do\n           if test -e \"${path}/${z}.${y}\"; then\n",
                    "rendered": {
                      "text": "\nAC_DEFUN([CHECK_FOR_LUA_AT], [\n    path=$1\n    echo \"*** LOOKING AT PATH: \" ${path}\n    for y in ${LUA_POSSIBLE_EXTENSIONS}; do\n        for z in ${LUA_POSSIBLE_LIB_NAMES}; do\n           if test -e \"${path}/${z}.${y}\"; then\n",
                      "markdown": "`\nAC_DEFUN([CHECK_FOR_LUA_AT], [\n    path=$1\n    echo \"*** LOOKING AT PATH: \" ${path}\n    for y in ${LUA_POSSIBLE_EXTENSIONS}; do\n        for z in ${LUA_POSSIBLE_LIB_NAMES}; do\n           if test -e \"${path}/${z}.${y}\"; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/libgeoip.m4"
                },
                "region": {
                  "startLine": 79,
                  "startColumn": 39,
                  "endLine": 79,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                GEOIP_LDFLAGS=\"`${PKG_CONFIG} ${GEOIP_PKG_NAME} --libs-only-L --libs-only-other`\"\n                GEOIP_DISPLAY=\"${GEOIP_LDADD}, ${GEOIP_CFLAGS}\"\n            else\n                # If pkg-config did not find anything useful, go over file lookup.\n                for x in ${GEOIP_POSSIBLE_PATHS}; do\n                    CHECK_FOR_GEOIP_AT(${x})\n                    if test -n \"${GEOIP_VERSION}\"; then\n",
                    "rendered": {
                      "text": "                GEOIP_LDFLAGS=\"`${PKG_CONFIG} ${GEOIP_PKG_NAME} --libs-only-L --libs-only-other`\"\n                GEOIP_DISPLAY=\"${GEOIP_LDADD}, ${GEOIP_CFLAGS}\"\n            else\n                # If pkg-config did not find anything useful, go over file lookup.\n                for x in ${GEOIP_POSSIBLE_PATHS}; do\n                    CHECK_FOR_GEOIP_AT(${x})\n                    if test -n \"${GEOIP_VERSION}\"; then\n",
                      "markdown": "`                GEOIP_LDFLAGS=\"`${PKG_CONFIG} ${GEOIP_PKG_NAME} --libs-only-L --libs-only-other`\"\n                GEOIP_DISPLAY=\"${GEOIP_LDADD}, ${GEOIP_CFLAGS}\"\n            else\n                # If pkg-config did not find anything useful, go over file lookup.\n                for x in ${GEOIP_POSSIBLE_PATHS}; do\n                    CHECK_FOR_GEOIP_AT(${x})\n                    if test -n \"${GEOIP_VERSION}\"; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/release.sh"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 5,
                  "endLine": 14,
                  "endColumn": 4,
                  "snippet": {
                    "text": "MY_DIR=${PWD##*/}\n./build.sh\n\ncd ..\ntar --transform \"s/^$MY_DIR/$DIR_NAME/\" -cvzf $TAR_NAME --exclude .git $MY_DIR\n\nsha256sum $TAR_NAME > $TAR_NAME.sha256\ngpg --detach-sign -a $TAR_NAME\n",
                    "rendered": {
                      "text": "MY_DIR=${PWD##*/}\n./build.sh\n\ncd ..\ntar --transform \"s/^$MY_DIR/$DIR_NAME/\" -cvzf $TAR_NAME --exclude .git $MY_DIR\n\nsha256sum $TAR_NAME > $TAR_NAME.sha256\ngpg --detach-sign -a $TAR_NAME\n",
                      "markdown": "`MY_DIR=${PWD##*/}\n./build.sh\n\ncd ..\ntar --transform \"s/^$MY_DIR/$DIR_NAME/\" -cvzf $TAR_NAME --exclude .git $MY_DIR\n\nsha256sum $TAR_NAME > $TAR_NAME.sha256\ngpg --detach-sign -a $TAR_NAME\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/release.sh"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 33,
                  "endLine": 4,
                  "endColumn": 38,
                  "snippet": {
                    "text": "#!/bin/bash\n\ngit clean -xfdi\ngit submodule foreach --recursive git clean -xfdi\n\nVERSION=`git describe --tags`\nDIR_NAME=\"modsecurity-$VERSION\"\n",
                    "rendered": {
                      "text": "#!/bin/bash\n\ngit clean -xfdi\ngit submodule foreach --recursive git clean -xfdi\n\nVERSION=`git describe --tags`\nDIR_NAME=\"modsecurity-$VERSION\"\n",
                      "markdown": "`#!/bin/bash\n\ngit clean -xfdi\ngit submodule foreach --recursive git clean -xfdi\n\nVERSION=`git describe --tags`\nDIR_NAME=\"modsecurity-$VERSION\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/release.sh"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 15,
                  "endLine": 4,
                  "endColumn": 4,
                  "snippet": {
                    "text": "#!/bin/bash\n\ngit clean -xfdi\ngit submodule foreach --recursive git clean -xfdi\n\nVERSION=`git describe --tags`\nDIR_NAME=\"modsecurity-$VERSION\"\n",
                    "rendered": {
                      "text": "#!/bin/bash\n\ngit clean -xfdi\ngit submodule foreach --recursive git clean -xfdi\n\nVERSION=`git describe --tags`\nDIR_NAME=\"modsecurity-$VERSION\"\n",
                      "markdown": "`#!/bin/bash\n\ngit clean -xfdi\ngit submodule foreach --recursive git clean -xfdi\n\nVERSION=`git describe --tags`\nDIR_NAME=\"modsecurity-$VERSION\"\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/release.sh"
                },
                "region": {
                  "startLine": 2,
                  "endLine": 3,
                  "endColumn": 4,
                  "snippet": {
                    "text": "#!/bin/bash\n\ngit clean -xfdi\ngit submodule foreach --recursive git clean -xfdi\n\nVERSION=`git describe --tags`\n",
                    "rendered": {
                      "text": "#!/bin/bash\n\ngit clean -xfdi\ngit submodule foreach --recursive git clean -xfdi\n\nVERSION=`git describe --tags`\n",
                      "markdown": "`#!/bin/bash\n\ngit clean -xfdi\ngit submodule foreach --recursive git clean -xfdi\n\nVERSION=`git describe --tags`\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/pcre2.m4"
                },
                "region": {
                  "startLine": 119,
                  "startColumn": 21,
                  "endLine": 119,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\nAC_DEFUN([CHECK_FOR_PCRE2_AT], [\n    path=$1\n    echo \"*** LOOKING AT PATH: \" ${path}\n    for y in ${PCRE2_POSSIBLE_EXTENSIONS}; do\n        for z in ${PCRE2_POSSIBLE_LIB_NAMES}; do\n           if test -e \"${path}/${z}.${y}\"; then\n",
                    "rendered": {
                      "text": "\nAC_DEFUN([CHECK_FOR_PCRE2_AT], [\n    path=$1\n    echo \"*** LOOKING AT PATH: \" ${path}\n    for y in ${PCRE2_POSSIBLE_EXTENSIONS}; do\n        for z in ${PCRE2_POSSIBLE_LIB_NAMES}; do\n           if test -e \"${path}/${z}.${y}\"; then\n",
                      "markdown": "`\nAC_DEFUN([CHECK_FOR_PCRE2_AT], [\n    path=$1\n    echo \"*** LOOKING AT PATH: \" ${path}\n    for y in ${PCRE2_POSSIBLE_EXTENSIONS}; do\n        for z in ${PCRE2_POSSIBLE_LIB_NAMES}; do\n           if test -e \"${path}/${z}.${y}\"; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/pcre2.m4"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 39,
                  "endLine": 64,
                  "endColumn": 45,
                  "snippet": {
                    "text": "                PCRE2_LDFLAGS=\"`${PKG_CONFIG} ${PCRE2_PKG_NAME} --libs-only-L --libs-only-other`\"\n                PCRE2_DISPLAY=\"${PCRE2_LDADD}, ${PCRE2_CFLAGS}\"\n            else\n                # If pkg-config did not find anything useful, go over file lookup.\n                for x in ${PCRE2_POSSIBLE_PATHS}; do\n                    CHECK_FOR_PCRE2_AT(${x})\n                    if test -n \"${PCRE2_VERSION}\"; then\n",
                    "rendered": {
                      "text": "                PCRE2_LDFLAGS=\"`${PKG_CONFIG} ${PCRE2_PKG_NAME} --libs-only-L --libs-only-other`\"\n                PCRE2_DISPLAY=\"${PCRE2_LDADD}, ${PCRE2_CFLAGS}\"\n            else\n                # If pkg-config did not find anything useful, go over file lookup.\n                for x in ${PCRE2_POSSIBLE_PATHS}; do\n                    CHECK_FOR_PCRE2_AT(${x})\n                    if test -n \"${PCRE2_VERSION}\"; then\n",
                      "markdown": "`                PCRE2_LDFLAGS=\"`${PKG_CONFIG} ${PCRE2_PKG_NAME} --libs-only-L --libs-only-other`\"\n                PCRE2_DISPLAY=\"${PCRE2_LDADD}, ${PCRE2_CFLAGS}\"\n            else\n                # If pkg-config did not find anything useful, go over file lookup.\n                for x in ${PCRE2_POSSIBLE_PATHS}; do\n                    CHECK_FOR_PCRE2_AT(${x})\n                    if test -n \"${PCRE2_VERSION}\"; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/ip_match_from_file.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/ip_match_f.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/ctl/rule_remove_target_by_id.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/ctl/request_body_processor_json.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/remove_nulls.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/base64_decode.cc"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 19,
                  "endLine": 26,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\nbool Base64Decode::transform(std::string &value, const Transaction *trans) const {\n    if (value.empty()) return false;\n    value = Utils::Base64::decode(value);\n    return true;\n}\n\n",
                    "rendered": {
                      "text": "\nbool Base64Decode::transform(std::string &value, const Transaction *trans) const {\n    if (value.empty()) return false;\n    value = Utils::Base64::decode(value);\n    return true;\n}\n\n",
                      "markdown": "`\nbool Base64Decode::transform(std::string &value, const Transaction *trans) const {\n    if (value.empty()) return false;\n    value = Utils::Base64::decode(value);\n    return true;\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/base64_decode.cc"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 20,
                  "endLine": 18,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n#include \"base64_decode.h\"\n\n#include \"src/utils/base64.h\"\n\n\nnamespace modsecurity::actions::transformations {\n",
                    "rendered": {
                      "text": "\n#include \"base64_decode.h\"\n\n#include \"src/utils/base64.h\"\n\n\nnamespace modsecurity::actions::transformations {\n",
                      "markdown": "`\n#include \"base64_decode.h\"\n\n#include \"src/utils/base64.h\"\n\n\nnamespace modsecurity::actions::transformations {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/base64_decode.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/js_decode.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 1440,
                  "startColumn": 56,
                  "endLine": 1440,
                  "endColumn": 61,
                  "snippet": {
                    "text": "    ss << m_id << \" \";\n    /** TODO: Check variable */\n    ss << utils::string::dash_if_empty(\n        m_variableRequestHeaders.resolveFirst(\"REFERER\").get()) << \" \";\n\n    ss << filename << \" \";\n    ss << \"0\" << \" \";\n",
                    "rendered": {
                      "text": "    ss << m_id << \" \";\n    /** TODO: Check variable */\n    ss << utils::string::dash_if_empty(\n        m_variableRequestHeaders.resolveFirst(\"REFERER\").get()) << \" \";\n\n    ss << filename << \" \";\n    ss << \"0\" << \" \";\n",
                      "markdown": "`    ss << m_id << \" \";\n    /** TODO: Check variable */\n    ss << utils::string::dash_if_empty(\n        m_variableRequestHeaders.resolveFirst(\"REFERER\").get()) << \" \";\n\n    ss << filename << \" \";\n    ss << \"0\" << \" \";\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 1435,
                  "startColumn": 59,
                  "endLine": 1435,
                  "endColumn": 64,
                  "snippet": {
                    "text": "        m_variableRequestHeaders.resolveFirst(\"REFERER\").get()) << \" \";\n    ss << \"\\\"\";\n    ss << utils::string::dash_if_empty(\n        m_variableRequestHeaders.resolveFirst(\"User-Agent\").get());\n    ss << \"\\\" \";\n    ss << m_id << \" \";\n    /** TODO: Check variable */\n",
                    "rendered": {
                      "text": "        m_variableRequestHeaders.resolveFirst(\"REFERER\").get()) << \" \";\n    ss << \"\\\"\";\n    ss << utils::string::dash_if_empty(\n        m_variableRequestHeaders.resolveFirst(\"User-Agent\").get());\n    ss << \"\\\" \";\n    ss << m_id << \" \";\n    /** TODO: Check variable */\n",
                      "markdown": "`        m_variableRequestHeaders.resolveFirst(\"REFERER\").get()) << \" \";\n    ss << \"\\\"\";\n    ss << utils::string::dash_if_empty(\n        m_variableRequestHeaders.resolveFirst(\"User-Agent\").get());\n    ss << \"\\\" \";\n    ss << m_id << \" \";\n    /** TODO: Check variable */\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 1432,
                  "startColumn": 56,
                  "endLine": 1432,
                  "endColumn": 61,
                  "snippet": {
                    "text": "    ss << this->m_responseBody.tellp() << \" \";\n    /** TODO: Check variable */\n    ss << utils::string::dash_if_empty(\n        m_variableRequestHeaders.resolveFirst(\"REFERER\").get()) << \" \";\n    ss << \"\\\"\";\n    ss << utils::string::dash_if_empty(\n        m_variableRequestHeaders.resolveFirst(\"User-Agent\").get());\n",
                    "rendered": {
                      "text": "    ss << this->m_responseBody.tellp() << \" \";\n    /** TODO: Check variable */\n    ss << utils::string::dash_if_empty(\n        m_variableRequestHeaders.resolveFirst(\"REFERER\").get()) << \" \";\n    ss << \"\\\"\";\n    ss << utils::string::dash_if_empty(\n        m_variableRequestHeaders.resolveFirst(\"User-Agent\").get());\n",
                      "markdown": "`    ss << this->m_responseBody.tellp() << \" \";\n    /** TODO: Check variable */\n    ss << utils::string::dash_if_empty(\n        m_variableRequestHeaders.resolveFirst(\"REFERER\").get()) << \" \";\n    ss << \"\\\"\";\n    ss << utils::string::dash_if_empty(\n        m_variableRequestHeaders.resolveFirst(\"User-Agent\").get());\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 1417,
                  "startColumn": 56,
                  "endLine": 1417,
                  "endColumn": 61,
                  "snippet": {
                    "text": "    ss << \" \";\n    /** TODO: Check variable */\n    //ss << utils::string::dash_if_empty(\n    //    this->m_collections.resolveFirst(\"LOCAL_USER\").get());\n    //ss << \" \";\n    ss << tstr << \" \";\n\n",
                    "rendered": {
                      "text": "    ss << \" \";\n    /** TODO: Check variable */\n    //ss << utils::string::dash_if_empty(\n    //    this->m_collections.resolveFirst(\"LOCAL_USER\").get());\n    //ss << \" \";\n    ss << tstr << \" \";\n\n",
                      "markdown": "`    ss << \" \";\n    /** TODO: Check variable */\n    //ss << utils::string::dash_if_empty(\n    //    this->m_collections.resolveFirst(\"LOCAL_USER\").get());\n    //ss << \" \";\n    ss << tstr << \" \";\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 1400,
                  "startColumn": 52,
                  "endLine": 1400,
                  "endColumn": 57,
                  "snippet": {
                    "text": "    strftime(tstr, std::size(tstr), \"[%d/%b/%Y:%H:%M:%S %z]\", &timeinfo);\n\n    ss << utils::string::dash_if_empty(\n       m_variableRequestHeaders.resolveFirst(\"Host\").get())\n        << \" \";\n    ss << utils::string::dash_if_empty(&this->m_clientIpAddress) << \" \";\n    /** TODO: Check variable */\n",
                    "rendered": {
                      "text": "    strftime(tstr, std::size(tstr), \"[%d/%b/%Y:%H:%M:%S %z]\", &timeinfo);\n\n    ss << utils::string::dash_if_empty(\n       m_variableRequestHeaders.resolveFirst(\"Host\").get())\n        << \" \";\n    ss << utils::string::dash_if_empty(&this->m_clientIpAddress) << \" \";\n    /** TODO: Check variable */\n",
                      "markdown": "`    strftime(tstr, std::size(tstr), \"[%d/%b/%Y:%H:%M:%S %z]\", &timeinfo);\n\n    ss << utils::string::dash_if_empty(\n       m_variableRequestHeaders.resolveFirst(\"Host\").get())\n        << \" \";\n    ss << utils::string::dash_if_empty(&this->m_clientIpAddress) << \" \";\n    /** TODO: Check variable */\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 2316,
                  "startColumn": 74,
                  "endLine": 2316,
                  "endColumn": 82,
                  "snippet": {
                    "text": " */\nextern \"C\" int msc_set_request_hostname(Transaction *transaction,\n    const unsigned char *hostname) {\n    return transaction->setRequestHostName(reinterpret_cast<const char *>(hostname));\n}\n\n\n",
                    "rendered": {
                      "text": " */\nextern \"C\" int msc_set_request_hostname(Transaction *transaction,\n    const unsigned char *hostname) {\n    return transaction->setRequestHostName(reinterpret_cast<const char *>(hostname));\n}\n\n\n",
                      "markdown": "` */\nextern \"C\" int msc_set_request_hostname(Transaction *transaction,\n    const unsigned char *hostname) {\n    return transaction->setRequestHostName(reinterpret_cast<const char *>(hostname));\n}\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 2315,
                  "startColumn": 25,
                  "endLine": 2315,
                  "endColumn": 33,
                  "snippet": {
                    "text": " *\n */\nextern \"C\" int msc_set_request_hostname(Transaction *transaction,\n    const unsigned char *hostname) {\n    return transaction->setRequestHostName(reinterpret_cast<const char *>(hostname));\n}\n\n",
                    "rendered": {
                      "text": " *\n */\nextern \"C\" int msc_set_request_hostname(Transaction *transaction,\n    const unsigned char *hostname) {\n    return transaction->setRequestHostName(reinterpret_cast<const char *>(hostname));\n}\n\n",
                      "markdown": "` *\n */\nextern \"C\" int msc_set_request_hostname(Transaction *transaction,\n    const unsigned char *hostname) {\n    return transaction->setRequestHostName(reinterpret_cast<const char *>(hostname));\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 2314,
                  "startColumn": 31,
                  "endLine": 2314,
                  "endColumn": 39,
                  "snippet": {
                    "text": " * @retval 0 Operation failed.\n *\n */\nextern \"C\" int msc_set_request_hostname(Transaction *transaction,\n    const unsigned char *hostname) {\n    return transaction->setRequestHostName(reinterpret_cast<const char *>(hostname));\n}\n",
                    "rendered": {
                      "text": " * @retval 0 Operation failed.\n *\n */\nextern \"C\" int msc_set_request_hostname(Transaction *transaction,\n    const unsigned char *hostname) {\n    return transaction->setRequestHostName(reinterpret_cast<const char *>(hostname));\n}\n",
                      "markdown": "` * @retval 0 Operation failed.\n *\n */\nextern \"C\" int msc_set_request_hostname(Transaction *transaction,\n    const unsigned char *hostname) {\n    return transaction->setRequestHostName(reinterpret_cast<const char *>(hostname));\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 2307,
                  "startColumn": 19,
                  "endLine": 2307,
                  "endColumn": 27,
                  "snippet": {
                    "text": " * @note This function expects a NULL terminated string.\n *\n * @param transaction ModSecurity transaction.\n * @param hostname hostname.\n *\n * @returns If the operation was successful or not.\n * @retval 1 Operation was successful.\n",
                    "rendered": {
                      "text": " * @note This function expects a NULL terminated string.\n *\n * @param transaction ModSecurity transaction.\n * @param hostname hostname.\n *\n * @returns If the operation was successful or not.\n * @retval 1 Operation was successful.\n",
                      "markdown": "` * @note This function expects a NULL terminated string.\n *\n * @param transaction ModSecurity transaction.\n * @param hostname hostname.\n *\n * @returns If the operation was successful or not.\n * @retval 1 Operation was successful.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 2307,
                  "startColumn": 10,
                  "endLine": 2307,
                  "endColumn": 18,
                  "snippet": {
                    "text": " * @note This function expects a NULL terminated string.\n *\n * @param transaction ModSecurity transaction.\n * @param hostname hostname.\n *\n * @returns If the operation was successful or not.\n * @retval 1 Operation was successful.\n",
                    "rendered": {
                      "text": " * @note This function expects a NULL terminated string.\n *\n * @param transaction ModSecurity transaction.\n * @param hostname hostname.\n *\n * @returns If the operation was successful or not.\n * @retval 1 Operation was successful.\n",
                      "markdown": "` * @note This function expects a NULL terminated string.\n *\n * @param transaction ModSecurity transaction.\n * @param hostname hostname.\n *\n * @returns If the operation was successful or not.\n * @retval 1 Operation was successful.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 2302,
                  "startColumn": 52,
                  "endLine": 2302,
                  "endColumn": 60,
                  "snippet": {
                    "text": " * @name    msc_set_request_hostname\n * @brief   Set request's host name\n *\n * With this method it is possible to set request's hostname.\n *\n * @note This function expects a NULL terminated string.\n *\n",
                    "rendered": {
                      "text": " * @name    msc_set_request_hostname\n * @brief   Set request's host name\n *\n * With this method it is possible to set request's hostname.\n *\n * @note This function expects a NULL terminated string.\n *\n",
                      "markdown": "` * @name    msc_set_request_hostname\n * @brief   Set request's host name\n *\n * With this method it is possible to set request's hostname.\n *\n * @note This function expects a NULL terminated string.\n *\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 2299,
                  "startColumn": 28,
                  "endLine": 2299,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\n\n/**\n * @name    msc_set_request_hostname\n * @brief   Set request's host name\n *\n * With this method it is possible to set request's hostname.\n",
                    "rendered": {
                      "text": "\n\n/**\n * @name    msc_set_request_hostname\n * @brief   Set request's host name\n *\n * With this method it is possible to set request's hostname.\n",
                      "markdown": "`\n\n/**\n * @name    msc_set_request_hostname\n * @brief   Set request's host name\n *\n * With this method it is possible to set request's hostname.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 2291,
                  "startColumn": 28,
                  "endLine": 2291,
                  "endColumn": 36,
                  "snippet": {
                    "text": "int Transaction::setRequestHostName(const std::string& hostname) {\n\n    if (hostname != \"\") {\n        m_requestHostName = hostname;\n    }\n\n    return true;\n",
                    "rendered": {
                      "text": "int Transaction::setRequestHostName(const std::string& hostname) {\n\n    if (hostname != \"\") {\n        m_requestHostName = hostname;\n    }\n\n    return true;\n",
                      "markdown": "`int Transaction::setRequestHostName(const std::string& hostname) {\n\n    if (hostname != \"\") {\n        m_requestHostName = hostname;\n    }\n\n    return true;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 2290,
                  "startColumn": 8,
                  "endLine": 2290,
                  "endColumn": 16,
                  "snippet": {
                    "text": " */\nint Transaction::setRequestHostName(const std::string& hostname) {\n\n    if (hostname != \"\") {\n        m_requestHostName = hostname;\n    }\n\n",
                    "rendered": {
                      "text": " */\nint Transaction::setRequestHostName(const std::string& hostname) {\n\n    if (hostname != \"\") {\n        m_requestHostName = hostname;\n    }\n\n",
                      "markdown": "` */\nint Transaction::setRequestHostName(const std::string& hostname) {\n\n    if (hostname != \"\") {\n        m_requestHostName = hostname;\n    }\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 2288,
                  "startColumn": 55,
                  "endLine": 2288,
                  "endColumn": 63,
                  "snippet": {
                    "text": " * @retval false Operation failed.\n *\n */\nint Transaction::setRequestHostName(const std::string& hostname) {\n\n    if (hostname != \"\") {\n        m_requestHostName = hostname;\n",
                    "rendered": {
                      "text": " * @retval false Operation failed.\n *\n */\nint Transaction::setRequestHostName(const std::string& hostname) {\n\n    if (hostname != \"\") {\n        m_requestHostName = hostname;\n",
                      "markdown": "` * @retval false Operation failed.\n *\n */\nint Transaction::setRequestHostName(const std::string& hostname) {\n\n    if (hostname != \"\") {\n        m_requestHostName = hostname;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 2281,
                  "startColumn": 19,
                  "endLine": 2281,
                  "endColumn": 27,
                  "snippet": {
                    "text": " *\n * @note This function expects a NULL terminated string.\n *\n * @param hostname hostname.\n *\n * @returns If the operation was successful or not.\n * @retval true Operation was successful.\n",
                    "rendered": {
                      "text": " *\n * @note This function expects a NULL terminated string.\n *\n * @param hostname hostname.\n *\n * @returns If the operation was successful or not.\n * @retval true Operation was successful.\n",
                      "markdown": "` *\n * @note This function expects a NULL terminated string.\n *\n * @param hostname hostname.\n *\n * @returns If the operation was successful or not.\n * @retval true Operation was successful.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 2281,
                  "startColumn": 10,
                  "endLine": 2281,
                  "endColumn": 18,
                  "snippet": {
                    "text": " *\n * @note This function expects a NULL terminated string.\n *\n * @param hostname hostname.\n *\n * @returns If the operation was successful or not.\n * @retval true Operation was successful.\n",
                    "rendered": {
                      "text": " *\n * @note This function expects a NULL terminated string.\n *\n * @param hostname hostname.\n *\n * @returns If the operation was successful or not.\n * @retval true Operation was successful.\n",
                      "markdown": "` *\n * @note This function expects a NULL terminated string.\n *\n * @param hostname hostname.\n *\n * @returns If the operation was successful or not.\n * @retval true Operation was successful.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 2277,
                  "startColumn": 56,
                  "endLine": 2277,
                  "endColumn": 64,
                  "snippet": {
                    "text": " * @name    setRequestHostName\n * @brief   Set request's host name\n *\n * With this method it is possible to set the request's hostname.\n *\n * @note This function expects a NULL terminated string.\n *\n",
                    "rendered": {
                      "text": " * @name    setRequestHostName\n * @brief   Set request's host name\n *\n * With this method it is possible to set the request's hostname.\n *\n * @note This function expects a NULL terminated string.\n *\n",
                      "markdown": "` * @name    setRequestHostName\n * @brief   Set request's host name\n *\n * With this method it is possible to set the request's hostname.\n *\n * @note This function expects a NULL terminated string.\n *\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 2239,
                  "startColumn": 2,
                  "endLine": 2239,
                  "endColumn": 6,
                  "snippet": {
                    "text": " * @name    msc_process_logging\n * @brief   Logging all information relative to this transaction.\n *\n * At this point there is not need to hold the connection, the response can be\n * delivered prior to the execution of this function.\n *\n * @param transaction ModSecurity transaction.\n",
                    "rendered": {
                      "text": " * @name    msc_process_logging\n * @brief   Logging all information relative to this transaction.\n *\n * At this point there is not need to hold the connection, the response can be\n * delivered prior to the execution of this function.\n *\n * @param transaction ModSecurity transaction.\n",
                      "markdown": "` * @name    msc_process_logging\n * @brief   Logging all information relative to this transaction.\n *\n * At this point there is not need to hold the connection, the response can be\n * delivered prior to the execution of this function.\n *\n * @param transaction ModSecurity transaction.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 2196,
                  "startColumn": 24,
                  "endLine": 2196,
                  "endColumn": 32,
                  "snippet": {
                    "text": " * @param transaction ModSecurity transaction.\n *\n * @return It returns a buffer (const char *)\n * @retval >0   body was update and available.\n * @retval NULL Nothing was updated.\n *\n */\n",
                    "rendered": {
                      "text": " * @param transaction ModSecurity transaction.\n *\n * @return It returns a buffer (const char *)\n * @retval >0   body was update and available.\n * @retval NULL Nothing was updated.\n *\n */\n",
                      "markdown": "` * @param transaction ModSecurity transaction.\n *\n * @return It returns a buffer (const char *)\n * @retval >0   body was update and available.\n * @retval NULL Nothing was updated.\n *\n */\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 2189,
                  "startColumn": 60,
                  "endLine": 2189,
                  "endColumn": 68,
                  "snippet": {
                    "text": " * @name    msc_get_response_body\n * @brief   Retrieve a buffer with the updated response body.\n *\n * This function is needed to be called whenever ModSecurity update the\n * contents of the response body, otherwise there is no need to call this\n * function.\n *\n",
                    "rendered": {
                      "text": " * @name    msc_get_response_body\n * @brief   Retrieve a buffer with the updated response body.\n *\n * This function is needed to be called whenever ModSecurity update the\n * contents of the response body, otherwise there is no need to call this\n * function.\n *\n",
                      "markdown": "` * @name    msc_get_response_body\n * @brief   Retrieve a buffer with the updated response body.\n *\n * This function is needed to be called whenever ModSecurity update the\n * contents of the response body, otherwise there is no need to call this\n * function.\n *\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 2013,
                  "startColumn": 30,
                  "endLine": 2013,
                  "endColumn": 34,
                  "snippet": {
                    "text": " * of the API. \n *\n * @note If the content is updated, the client cannot receive the content\n *       length header filled, at least not with the old values. Otherwise\n *       unexpected behavior may happens.\n *\n * @param transaction ModSecurity transaction.\n",
                    "rendered": {
                      "text": " * of the API. \n *\n * @note If the content is updated, the client cannot receive the content\n *       length header filled, at least not with the old values. Otherwise\n *       unexpected behavior may happens.\n *\n * @param transaction ModSecurity transaction.\n",
                      "markdown": "` * of the API. \n *\n * @note If the content is updated, the client cannot receive the content\n *       length header filled, at least not with the old values. Otherwise\n *       unexpected behavior may happens.\n *\n * @param transaction ModSecurity transaction.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 2008,
                  "startColumn": 63,
                  "endLine": 2008,
                  "endColumn": 71,
                  "snippet": {
                    "text": " * @brief   Adds reponse body to be inspected.\n *\n * With this function it is possible to feed ModSecurity with data for\n * inspection regarding the response body. ModSecurity can also update the\n * contents of the response body, this is not quite ready yet on this version\n * of the API. \n *\n",
                    "rendered": {
                      "text": " * @brief   Adds reponse body to be inspected.\n *\n * With this function it is possible to feed ModSecurity with data for\n * inspection regarding the response body. ModSecurity can also update the\n * contents of the response body, this is not quite ready yet on this version\n * of the API. \n *\n",
                      "markdown": "` * @brief   Adds reponse body to be inspected.\n *\n * With this function it is possible to feed ModSecurity with data for\n * inspection regarding the response body. ModSecurity can also update the\n * contents of the response body, this is not quite ready yet on this version\n * of the API. \n *\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 1849,
                  "startColumn": 33,
                  "endLine": 1849,
                  "endColumn": 37,
                  "snippet": {
                    "text": " * @name    msc_process_uri\n * @brief   Perform the analysis on the URI and all the query string variables.\n *\n * This function should be called at very beginning of a request process, it is\n * expected to be executed prior to the virtual host resolution, when the\n * connection arrives on the server.\n *\n",
                    "rendered": {
                      "text": " * @name    msc_process_uri\n * @brief   Perform the analysis on the URI and all the query string variables.\n *\n * This function should be called at very beginning of a request process, it is\n * expected to be executed prior to the virtual host resolution, when the\n * connection arrives on the server.\n *\n",
                      "markdown": "` * @name    msc_process_uri\n * @brief   Perform the analysis on the URI and all the query string variables.\n *\n * This function should be called at very beginning of a request process, it is\n * expected to be executed prior to the virtual host resolution, when the\n * connection arrives on the server.\n *\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 1822,
                  "startColumn": 33,
                  "endLine": 1822,
                  "endColumn": 37,
                  "snippet": {
                    "text": " * @name    msc_process_connection\n * @brief   Perform the analysis on the connection.\n *\n * This function should be called at very beginning of a request process, it is\n * expected to be executed prior to the virtual host resolution, when the\n * connection arrives on the server.\n *\n",
                    "rendered": {
                      "text": " * @name    msc_process_connection\n * @brief   Perform the analysis on the connection.\n *\n * This function should be called at very beginning of a request process, it is\n * expected to be executed prior to the virtual host resolution, when the\n * connection arrives on the server.\n *\n",
                      "markdown": "` * @name    msc_process_connection\n * @brief   Perform the analysis on the connection.\n *\n * This function should be called at very beginning of a request process, it is\n * expected to be executed prior to the virtual host resolution, when the\n * connection arrives on the server.\n *\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 1311,
                  "startColumn": 53,
                  "endLine": 1311,
                  "endColumn": 57,
                  "snippet": {
                    "text": "\n    this->m_rules->evaluate(modsecurity::LoggingPhase, this);\n\n    /* If relevant, save this transaction information at the audit_logs */\n    if (m_rules != NULL && m_rules->m_auditLog != NULL) {\n        int parts = this->m_rules->m_auditLog->getParts();\n        ms_dbg(8, \"Checking if this request is suitable to be \" \\\n",
                    "rendered": {
                      "text": "\n    this->m_rules->evaluate(modsecurity::LoggingPhase, this);\n\n    /* If relevant, save this transaction information at the audit_logs */\n    if (m_rules != NULL && m_rules->m_auditLog != NULL) {\n        int parts = this->m_rules->m_auditLog->getParts();\n        ms_dbg(8, \"Checking if this request is suitable to be \" \\\n",
                      "markdown": "`\n    this->m_rules->evaluate(modsecurity::LoggingPhase, this);\n\n    /* If relevant, save this transaction information at the audit_logs */\n    if (m_rules != NULL && m_rules->m_auditLog != NULL) {\n        int parts = this->m_rules->m_auditLog->getParts();\n        ms_dbg(8, \"Checking if this request is suitable to be \" \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 1293,
                  "startColumn": 2,
                  "endLine": 1293,
                  "endColumn": 6,
                  "snippet": {
                    "text": " * @name    processLogging\n * @brief   Logging all information relative to this transaction.\n *\n * At this point there is not need to hold the connection, the response can be\n * delivered prior to the execution of this method.\n *\n * @returns If the operation was successful or not.\n",
                    "rendered": {
                      "text": " * @name    processLogging\n * @brief   Logging all information relative to this transaction.\n *\n * At this point there is not need to hold the connection, the response can be\n * delivered prior to the execution of this method.\n *\n * @returns If the operation was successful or not.\n",
                      "markdown": "` * @name    processLogging\n * @brief   Logging all information relative to this transaction.\n *\n * At this point there is not need to hold the connection, the response can be\n * delivered prior to the execution of this method.\n *\n * @returns If the operation was successful or not.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 1256,
                  "startColumn": 22,
                  "endLine": 1256,
                  "endColumn": 30,
                  "snippet": {
                    "text": " * This method returns the size of the response body buffer.\n *\n *\n * @return Size of the update response body.\n *\n */\nsize_t Transaction::getResponseBodyLength() {\n",
                    "rendered": {
                      "text": " * This method returns the size of the response body buffer.\n *\n *\n * @return Size of the update response body.\n *\n */\nsize_t Transaction::getResponseBodyLength() {\n",
                      "markdown": "` * This method returns the size of the response body buffer.\n *\n *\n * @return Size of the update response body.\n *\n */\nsize_t Transaction::getResponseBodyLength() {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 1235,
                  "startColumn": 58,
                  "endLine": 1235,
                  "endColumn": 66,
                  "snippet": {
                    "text": " * @name    getResponseBody\n * @brief   Retrieve a buffer with the updated response body.\n *\n * This method is needed to be called whenever ModSecurity update the\n * contents of the response body, otherwise there is no need to call this\n * method.\n *\n",
                    "rendered": {
                      "text": " * @name    getResponseBody\n * @brief   Retrieve a buffer with the updated response body.\n *\n * This method is needed to be called whenever ModSecurity update the\n * contents of the response body, otherwise there is no need to call this\n * method.\n *\n",
                      "markdown": "` * @name    getResponseBody\n * @brief   Retrieve a buffer with the updated response body.\n *\n * This method is needed to be called whenever ModSecurity update the\n * contents of the response body, otherwise there is no need to call this\n * method.\n *\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 1167,
                  "startColumn": 30,
                  "endLine": 1167,
                  "endColumn": 34,
                  "snippet": {
                    "text": " * of the API. \n *\n * @note If the content is updated, the client cannot receive the content\n *       length header filled, at least not with the old values. Otherwise\n *       unexpected behavior may happens.\n *\n * @returns If the operation was successful or not.\n",
                    "rendered": {
                      "text": " * of the API. \n *\n * @note If the content is updated, the client cannot receive the content\n *       length header filled, at least not with the old values. Otherwise\n *       unexpected behavior may happens.\n *\n * @returns If the operation was successful or not.\n",
                      "markdown": "` * of the API. \n *\n * @note If the content is updated, the client cannot receive the content\n *       length header filled, at least not with the old values. Otherwise\n *       unexpected behavior may happens.\n *\n * @returns If the operation was successful or not.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 1162,
                  "startColumn": 63,
                  "endLine": 1162,
                  "endColumn": 71,
                  "snippet": {
                    "text": " * @brief   Adds reponse body to be inspected.\n *\n * With this method it is possible to feed ModSecurity with data for\n * inspection regarding the response body. ModSecurity can also update the\n * contents of the response body, this is not quite ready yet on this version\n * of the API. \n *\n",
                    "rendered": {
                      "text": " * @brief   Adds reponse body to be inspected.\n *\n * With this method it is possible to feed ModSecurity with data for\n * inspection regarding the response body. ModSecurity can also update the\n * contents of the response body, this is not quite ready yet on this version\n * of the API. \n *\n",
                      "markdown": "` * @brief   Adds reponse body to be inspected.\n *\n * With this method it is possible to feed ModSecurity with data for\n * inspection regarding the response body. ModSecurity can also update the\n * contents of the response body, this is not quite ready yet on this version\n * of the API. \n *\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 315,
                  "startColumn": 31,
                  "endLine": 315,
                  "endColumn": 35,
                  "snippet": {
                    "text": " * @name    processURI\n * @brief   Perform the analysis on the URI and all the query string variables.\n *\n * This method should be called at very beginning of a request process, it is\n * expected to be executed prior to the virtual host resolution, when the\n * connection arrives on the server.\n *\n",
                    "rendered": {
                      "text": " * @name    processURI\n * @brief   Perform the analysis on the URI and all the query string variables.\n *\n * This method should be called at very beginning of a request process, it is\n * expected to be executed prior to the virtual host resolution, when the\n * connection arrives on the server.\n *\n",
                      "markdown": "` * @name    processURI\n * @brief   Perform the analysis on the URI and all the query string variables.\n *\n * This method should be called at very beginning of a request process, it is\n * expected to be executed prior to the virtual host resolution, when the\n * connection arrives on the server.\n *\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 209,
                  "startColumn": 31,
                  "endLine": 209,
                  "endColumn": 35,
                  "snippet": {
                    "text": " * @name    processConnection\n * @brief   Perform the analysis on the connection.\n *\n * This method should be called at very beginning of a request process, it is\n * expected to be executed prior to the virtual host resolution, when the\n * connection arrives on the server.\n *\n",
                    "rendered": {
                      "text": " * @name    processConnection\n * @brief   Perform the analysis on the connection.\n *\n * This method should be called at very beginning of a request process, it is\n * expected to be executed prior to the virtual host resolution, when the\n * connection arrives on the server.\n *\n",
                      "markdown": "` * @name    processConnection\n * @brief   Perform the analysis on the connection.\n *\n * This method should be called at very beginning of a request process, it is\n * expected to be executed prior to the virtual host resolution, when the\n * connection arrives on the server.\n *\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 2110,
                  "startColumn": 13,
                  "endLine": 2110,
                  "endColumn": 21,
                  "snippet": {
                    "text": " * @brief   Adds a response header\n *\n * Same as msc_add_response_header, do not expect a NULL terminated string,\n * instead it expect the string and the string size, for the value and key.\n *\n * @param transaction   ModSecurity transaction.\n * @param key     header name.\n",
                    "rendered": {
                      "text": " * @brief   Adds a response header\n *\n * Same as msc_add_response_header, do not expect a NULL terminated string,\n * instead it expect the string and the string size, for the value and key.\n *\n * @param transaction   ModSecurity transaction.\n * @param key     header name.\n",
                      "markdown": "` * @brief   Adds a response header\n *\n * Same as msc_add_response_header, do not expect a NULL terminated string,\n * instead it expect the string and the string size, for the value and key.\n *\n * @param transaction   ModSecurity transaction.\n * @param key     header name.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 2109,
                  "startColumn": 42,
                  "endLine": 2109,
                  "endColumn": 50,
                  "snippet": {
                    "text": " * @name    msc_add_n_response_header\n * @brief   Adds a response header\n *\n * Same as msc_add_response_header, do not expect a NULL terminated string,\n * instead it expect the string and the string size, for the value and key.\n *\n * @param transaction   ModSecurity transaction.\n",
                    "rendered": {
                      "text": " * @name    msc_add_n_response_header\n * @brief   Adds a response header\n *\n * Same as msc_add_response_header, do not expect a NULL terminated string,\n * instead it expect the string and the string size, for the value and key.\n *\n * @param transaction   ModSecurity transaction.\n",
                      "markdown": "` * @name    msc_add_n_response_header\n * @brief   Adds a response header\n *\n * Same as msc_add_response_header, do not expect a NULL terminated string,\n * instead it expect the string and the string size, for the value and key.\n *\n * @param transaction   ModSecurity transaction.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 2059,
                  "startColumn": 13,
                  "endLine": 2059,
                  "endColumn": 21,
                  "snippet": {
                    "text": " * @brief   Adds a request header\n *\n * Same as msc_add_request_header, do not expect a NULL terminated string,\n * instead it expect the string and the string size, for the value and key.\n *\n * @param transaction   ModSecurity transaction.\n * @param key     header name.\n",
                    "rendered": {
                      "text": " * @brief   Adds a request header\n *\n * Same as msc_add_request_header, do not expect a NULL terminated string,\n * instead it expect the string and the string size, for the value and key.\n *\n * @param transaction   ModSecurity transaction.\n * @param key     header name.\n",
                      "markdown": "` * @brief   Adds a request header\n *\n * Same as msc_add_request_header, do not expect a NULL terminated string,\n * instead it expect the string and the string size, for the value and key.\n *\n * @param transaction   ModSecurity transaction.\n * @param key     header name.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 2058,
                  "startColumn": 41,
                  "endLine": 2058,
                  "endColumn": 49,
                  "snippet": {
                    "text": " * @name    msc_add_n_request_header\n * @brief   Adds a request header\n *\n * Same as msc_add_request_header, do not expect a NULL terminated string,\n * instead it expect the string and the string size, for the value and key.\n *\n * @param transaction   ModSecurity transaction.\n",
                    "rendered": {
                      "text": " * @name    msc_add_n_request_header\n * @brief   Adds a request header\n *\n * Same as msc_add_request_header, do not expect a NULL terminated string,\n * instead it expect the string and the string size, for the value and key.\n *\n * @param transaction   ModSecurity transaction.\n",
                      "markdown": "` * @name    msc_add_n_request_header\n * @brief   Adds a request header\n *\n * Same as msc_add_request_header, do not expect a NULL terminated string,\n * instead it expect the string and the string size, for the value and key.\n *\n * @param transaction   ModSecurity transaction.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 1831,
                  "startColumn": 25,
                  "endLine": 1831,
                  "endColumn": 29,
                  "snippet": {
                    "text": " * @param transaction ModSecurity transaction.\n * @param client Client's IP address in text format.\n * @param cPort Client's port\n * @param server Server's IP address in text format.\n * @param sPort Server's port\n *\n * @returns If the operation was successful or not.\n",
                    "rendered": {
                      "text": " * @param transaction ModSecurity transaction.\n * @param client Client's IP address in text format.\n * @param cPort Client's port\n * @param server Server's IP address in text format.\n * @param sPort Server's port\n *\n * @returns If the operation was successful or not.\n",
                      "markdown": "` * @param transaction ModSecurity transaction.\n * @param client Client's IP address in text format.\n * @param cPort Client's port\n * @param server Server's IP address in text format.\n * @param sPort Server's port\n *\n * @returns If the operation was successful or not.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 1829,
                  "startColumn": 25,
                  "endLine": 1829,
                  "endColumn": 29,
                  "snippet": {
                    "text": " * @note Remember to check for a possible intervention.\n *\n * @param transaction ModSecurity transaction.\n * @param client Client's IP address in text format.\n * @param cPort Client's port\n * @param server Server's IP address in text format.\n * @param sPort Server's port\n",
                    "rendered": {
                      "text": " * @note Remember to check for a possible intervention.\n *\n * @param transaction ModSecurity transaction.\n * @param client Client's IP address in text format.\n * @param cPort Client's port\n * @param server Server's IP address in text format.\n * @param sPort Server's port\n",
                      "markdown": "` * @note Remember to check for a possible intervention.\n *\n * @param transaction ModSecurity transaction.\n * @param client Client's IP address in text format.\n * @param cPort Client's port\n * @param server Server's IP address in text format.\n * @param sPort Server's port\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 1072,
                  "startColumn": 53,
                  "endLine": 1072,
                  "endColumn": 61,
                  "snippet": {
                    "text": " * @name    msc_add_n_response_header\n * @brief   Adds a response header\n *\n * Do not expect a NULL terminated string, instead it expect the string and the\n * string size, for the value and key.\n *\n * @param key     header name.\n",
                    "rendered": {
                      "text": " * @name    msc_add_n_response_header\n * @brief   Adds a response header\n *\n * Do not expect a NULL terminated string, instead it expect the string and the\n * string size, for the value and key.\n *\n * @param key     header name.\n",
                      "markdown": "` * @name    msc_add_n_response_header\n * @brief   Adds a response header\n *\n * Do not expect a NULL terminated string, instead it expect the string and the\n * string size, for the value and key.\n *\n * @param key     header name.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 1072,
                  "startColumn": 9,
                  "endLine": 1072,
                  "endColumn": 17,
                  "snippet": {
                    "text": " * @name    msc_add_n_response_header\n * @brief   Adds a response header\n *\n * Do not expect a NULL terminated string, instead it expect the string and the\n * string size, for the value and key.\n *\n * @param key     header name.\n",
                    "rendered": {
                      "text": " * @name    msc_add_n_response_header\n * @brief   Adds a response header\n *\n * Do not expect a NULL terminated string, instead it expect the string and the\n * string size, for the value and key.\n *\n * @param key     header name.\n",
                      "markdown": "` * @name    msc_add_n_response_header\n * @brief   Adds a response header\n *\n * Do not expect a NULL terminated string, instead it expect the string and the\n * string size, for the value and key.\n *\n * @param key     header name.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 628,
                  "startColumn": 53,
                  "endLine": 628,
                  "endColumn": 61,
                  "snippet": {
                    "text": " * @name    addRequestHeader\n * @brief   Adds a request header\n *\n * Do not expect a NULL terminated string, instead it expect the string and the\n * string size, for the value and key.\n *\n * @param transaction   ModSecurity transaction.\n",
                    "rendered": {
                      "text": " * @name    addRequestHeader\n * @brief   Adds a request header\n *\n * Do not expect a NULL terminated string, instead it expect the string and the\n * string size, for the value and key.\n *\n * @param transaction   ModSecurity transaction.\n",
                      "markdown": "` * @name    addRequestHeader\n * @brief   Adds a request header\n *\n * Do not expect a NULL terminated string, instead it expect the string and the\n * string size, for the value and key.\n *\n * @param transaction   ModSecurity transaction.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 628,
                  "startColumn": 9,
                  "endLine": 628,
                  "endColumn": 17,
                  "snippet": {
                    "text": " * @name    addRequestHeader\n * @brief   Adds a request header\n *\n * Do not expect a NULL terminated string, instead it expect the string and the\n * string size, for the value and key.\n *\n * @param transaction   ModSecurity transaction.\n",
                    "rendered": {
                      "text": " * @name    addRequestHeader\n * @brief   Adds a request header\n *\n * Do not expect a NULL terminated string, instead it expect the string and the\n * string size, for the value and key.\n *\n * @param transaction   ModSecurity transaction.\n",
                      "markdown": "` * @name    addRequestHeader\n * @brief   Adds a request header\n *\n * Do not expect a NULL terminated string, instead it expect the string and the\n * string size, for the value and key.\n *\n * @param transaction   ModSecurity transaction.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 525,
                  "startColumn": 14,
                  "endLine": 525,
                  "endColumn": 20,
                  "snippet": {
                    "text": "                continue;\n            }\n\n            // find the first '='\n            pos = c.find_first_of(\"=\", 0);\n            std::string ckey = \"\";\n            std::string cval = \"\";\n",
                    "rendered": {
                      "text": "                continue;\n            }\n\n            // find the first '='\n            pos = c.find_first_of(\"=\", 0);\n            std::string ckey = \"\";\n            std::string cval = \"\";\n",
                      "markdown": "`                continue;\n            }\n\n            // find the first '='\n            pos = c.find_first_of(\"=\", 0);\n            std::string ckey = \"\";\n            std::string cval = \"\";\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 218,
                  "startColumn": 25,
                  "endLine": 218,
                  "endColumn": 29,
                  "snippet": {
                    "text": " * @param transaction ModSecurity Transaction.\n * @param client Client's IP address in text format.\n * @param cPort Client's port\n * @param server Server's IP address in text format.\n * @param sPort Server's port\n *\n * @returns If the operation was successful or not.\n",
                    "rendered": {
                      "text": " * @param transaction ModSecurity Transaction.\n * @param client Client's IP address in text format.\n * @param cPort Client's port\n * @param server Server's IP address in text format.\n * @param sPort Server's port\n *\n * @returns If the operation was successful or not.\n",
                      "markdown": "` * @param transaction ModSecurity Transaction.\n * @param client Client's IP address in text format.\n * @param cPort Client's port\n * @param server Server's IP address in text format.\n * @param sPort Server's port\n *\n * @returns If the operation was successful or not.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/transaction.cc"
                },
                "region": {
                  "startLine": 216,
                  "startColumn": 25,
                  "endLine": 216,
                  "endColumn": 29,
                  "snippet": {
                    "text": " * @note Remember to check for a possible intervention.\n *\n * @param transaction ModSecurity Transaction.\n * @param client Client's IP address in text format.\n * @param cPort Client's port\n * @param server Server's IP address in text format.\n * @param sPort Server's port\n",
                    "rendered": {
                      "text": " * @note Remember to check for a possible intervention.\n *\n * @param transaction ModSecurity Transaction.\n * @param client Client's IP address in text format.\n * @param cPort Client's port\n * @param server Server's IP address in text format.\n * @param sPort Server's port\n",
                      "markdown": "` * @note Remember to check for a possible intervention.\n *\n * @param transaction ModSecurity Transaction.\n * @param client Client's IP address in text format.\n * @param cPort Client's port\n * @param server Server's IP address in text format.\n * @param sPort Server's port\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rules_set_properties.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/headers/modsecurity/transaction.h"
                },
                "region": {
                  "startLine": 740,
                  "startColumn": 76,
                  "endLine": 740,
                  "endColumn": 84,
                  "snippet": {
                    "text": "int msc_update_status_code(Transaction *transaction, int status);\n\n/** @ingroup ModSecurity_C_API */\nint msc_set_request_hostname(Transaction *transaction, const unsigned char *hostname);\n\n#ifdef __cplusplus\n}\n",
                    "rendered": {
                      "text": "int msc_update_status_code(Transaction *transaction, int status);\n\n/** @ingroup ModSecurity_C_API */\nint msc_set_request_hostname(Transaction *transaction, const unsigned char *hostname);\n\n#ifdef __cplusplus\n}\n",
                      "markdown": "`int msc_update_status_code(Transaction *transaction, int status);\n\n/** @ingroup ModSecurity_C_API */\nint msc_set_request_hostname(Transaction *transaction, const unsigned char *hostname);\n\n#ifdef __cplusplus\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/headers/modsecurity/transaction.h"
                },
                "region": {
                  "startLine": 740,
                  "startColumn": 20,
                  "endLine": 740,
                  "endColumn": 28,
                  "snippet": {
                    "text": "int msc_update_status_code(Transaction *transaction, int status);\n\n/** @ingroup ModSecurity_C_API */\nint msc_set_request_hostname(Transaction *transaction, const unsigned char *hostname);\n\n#ifdef __cplusplus\n}\n",
                    "rendered": {
                      "text": "int msc_update_status_code(Transaction *transaction, int status);\n\n/** @ingroup ModSecurity_C_API */\nint msc_set_request_hostname(Transaction *transaction, const unsigned char *hostname);\n\n#ifdef __cplusplus\n}\n",
                      "markdown": "`int msc_update_status_code(Transaction *transaction, int status);\n\n/** @ingroup ModSecurity_C_API */\nint msc_set_request_hostname(Transaction *transaction, const unsigned char *hostname);\n\n#ifdef __cplusplus\n}\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/headers/modsecurity/transaction.h"
                },
                "region": {
                  "startLine": 394,
                  "startColumn": 46,
                  "endLine": 394,
                  "endColumn": 54,
                  "snippet": {
                    "text": "    int processLogging();\n    int updateStatusCode(int status);\n\n    int setRequestHostName(const std::string& hostname);\n\n    bool intervention(ModSecurityIntervention *it);\n\n",
                    "rendered": {
                      "text": "    int processLogging();\n    int updateStatusCode(int status);\n\n    int setRequestHostName(const std::string& hostname);\n\n    bool intervention(ModSecurityIntervention *it);\n\n",
                      "markdown": "`    int processLogging();\n    int updateStatusCode(int status);\n\n    int setRequestHostName(const std::string& hostname);\n\n    bool intervention(ModSecurityIntervention *it);\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/collection/backend/lmdb.cc"
                },
                "region": {
                  "startLine": 660,
                  "startColumn": 12,
                  "endLine": 660,
                  "endColumn": 28,
                  "snippet": {
                    "text": "    return m_env;\n}\n\nMDB_dbi* MDBEnvProvider::GetDBI() {\n    return &m_dbi;\n}\n\n",
                    "rendered": {
                      "text": "    return m_env;\n}\n\nMDB_dbi* MDBEnvProvider::GetDBI() {\n    return &m_dbi;\n}\n\n",
                      "markdown": "`    return m_env;\n}\n\nMDB_dbi* MDBEnvProvider::GetDBI() {\n    return &m_dbi;\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/collection/backend/lmdb.cc"
                },
                "region": {
                  "startLine": 656,
                  "startColumn": 4,
                  "endLine": 656,
                  "endColumn": 28,
                  "snippet": {
                    "text": "    }\n}\n\nMDB_env* MDBEnvProvider::GetEnv() {\n    return m_env;\n}\n\n",
                    "rendered": {
                      "text": "    }\n}\n\nMDB_env* MDBEnvProvider::GetEnv() {\n    return m_env;\n}\n\n",
                      "markdown": "`    }\n}\n\nMDB_env* MDBEnvProvider::GetEnv() {\n    return m_env;\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/collection/backend/lmdb.cc"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 11,
                  "endLine": 53,
                  "endColumn": 34,
                  "snippet": {
                    "text": "        isOpen = true;\n    }\n\n    if (MDBEnvProvider::GetInstance().isValid()) {\n        return mdb_txn_begin(m_env, NULL, flags, ret);\n    } else {\n        return -1;\n",
                    "rendered": {
                      "text": "        isOpen = true;\n    }\n\n    if (MDBEnvProvider::GetInstance().isValid()) {\n        return mdb_txn_begin(m_env, NULL, flags, ret);\n    } else {\n        return -1;\n",
                      "markdown": "`        isOpen = true;\n    }\n\n    if (MDBEnvProvider::GetInstance().isValid()) {\n        return mdb_txn_begin(m_env, NULL, flags, ret);\n    } else {\n        return -1;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/collection/backend/lmdb.cc"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 21,
                  "endLine": 49,
                  "endColumn": 51,
                  "snippet": {
                    "text": "int LMDB::txn_begin(unsigned int flags, MDB_txn **ret) {\n    if (!isOpen) {\n        m_env = MDBEnvProvider::GetInstance().GetEnv();\n        m_dbi = *(MDBEnvProvider::GetInstance().GetDBI());\n        isOpen = true;\n    }\n\n",
                    "rendered": {
                      "text": "int LMDB::txn_begin(unsigned int flags, MDB_txn **ret) {\n    if (!isOpen) {\n        m_env = MDBEnvProvider::GetInstance().GetEnv();\n        m_dbi = *(MDBEnvProvider::GetInstance().GetDBI());\n        isOpen = true;\n    }\n\n",
                      "markdown": "`int LMDB::txn_begin(unsigned int flags, MDB_txn **ret) {\n    if (!isOpen) {\n        m_env = MDBEnvProvider::GetInstance().GetEnv();\n        m_dbi = *(MDBEnvProvider::GetInstance().GetDBI());\n        isOpen = true;\n    }\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/collection/backend/lmdb.cc"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 10,
                  "endLine": 48,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\nint LMDB::txn_begin(unsigned int flags, MDB_txn **ret) {\n    if (!isOpen) {\n        m_env = MDBEnvProvider::GetInstance().GetEnv();\n        m_dbi = *(MDBEnvProvider::GetInstance().GetDBI());\n        isOpen = true;\n    }\n",
                    "rendered": {
                      "text": "\nint LMDB::txn_begin(unsigned int flags, MDB_txn **ret) {\n    if (!isOpen) {\n        m_env = MDBEnvProvider::GetInstance().GetEnv();\n        m_dbi = *(MDBEnvProvider::GetInstance().GetDBI());\n        isOpen = true;\n    }\n",
                      "markdown": "`\nint LMDB::txn_begin(unsigned int flags, MDB_txn **ret) {\n    if (!isOpen) {\n        m_env = MDBEnvProvider::GetInstance().GetEnv();\n        m_dbi = *(MDBEnvProvider::GetInstance().GetDBI());\n        isOpen = true;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/collection/backend/lmdb.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/collection/collections.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/debug_log/debug_log.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/debug_log/debug_log_writer.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/driver.cc"
                },
                "region": {
                  "startLine": 121,
                  "startColumn": 21,
                  "endLine": 121,
                  "endColumn": 26,
                  "snippet": {
                    "text": "        }\n    }\n\n    m_lastRule = rule.get();\n    m_rulesSetPhases.insert(rule);\n\n    return true;\n",
                    "rendered": {
                      "text": "        }\n    }\n\n    m_lastRule = rule.get();\n    m_rulesSetPhases.insert(rule);\n\n    return true;\n",
                      "markdown": "`        }\n    }\n\n    m_lastRule = rule.get();\n    m_rulesSetPhases.insert(rule);\n\n    return true;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/driver.cc"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 80,
                  "endLine": 112,
                  "endColumn": 85,
                  "snippet": {
                    "text": "    for (int i = 0; i < modsecurity::Phases::NUMBER_OF_PHASES; i++) {\n        Rules *rules = m_rulesSetPhases[i];\n        for (int j = 0; j < rules->size(); j++) {\n            RuleWithOperator *lr = dynamic_cast<RuleWithOperator *>(rules->at(j).get());\n            if (lr && lr->m_ruleId == rule->m_ruleId) {\n                m_parserError << \"Rule id: \" << std::to_string(rule->m_ruleId) \\\n                    << \" is duplicated\" << std::endl;\n",
                    "rendered": {
                      "text": "    for (int i = 0; i < modsecurity::Phases::NUMBER_OF_PHASES; i++) {\n        Rules *rules = m_rulesSetPhases[i];\n        for (int j = 0; j < rules->size(); j++) {\n            RuleWithOperator *lr = dynamic_cast<RuleWithOperator *>(rules->at(j).get());\n            if (lr && lr->m_ruleId == rule->m_ruleId) {\n                m_parserError << \"Rule id: \" << std::to_string(rule->m_ruleId) \\\n                    << \" is duplicated\" << std::endl;\n",
                      "markdown": "`    for (int i = 0; i < modsecurity::Phases::NUMBER_OF_PHASES; i++) {\n        Rules *rules = m_rulesSetPhases[i];\n        for (int j = 0; j < rules->size(); j++) {\n            RuleWithOperator *lr = dynamic_cast<RuleWithOperator *>(rules->at(j).get());\n            if (lr && lr->m_ruleId == rule->m_ruleId) {\n                m_parserError << \"Rule id: \" << std::to_string(rule->m_ruleId) \\\n                    << \" is duplicated\" << std::endl;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/driver.cc"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 51,
                  "endLine": 93,
                  "endColumn": 56,
                  "snippet": {
                    "text": "        }\n        m_lastRule->m_chainedRuleChild = std::move(r);\n        m_lastRule->m_chainedRuleChild->m_chainedRuleParent = m_lastRule;\n        m_lastRule = m_lastRule->m_chainedRuleChild.get();\n        return true;\n    }\n\n",
                    "rendered": {
                      "text": "        }\n        m_lastRule->m_chainedRuleChild = std::move(r);\n        m_lastRule->m_chainedRuleChild->m_chainedRuleParent = m_lastRule;\n        m_lastRule = m_lastRule->m_chainedRuleChild.get();\n        return true;\n    }\n\n",
                      "markdown": "`        }\n        m_lastRule->m_chainedRuleChild = std::move(r);\n        m_lastRule->m_chainedRuleChild->m_chainedRuleParent = m_lastRule;\n        m_lastRule = m_lastRule->m_chainedRuleChild.get();\n        return true;\n    }\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/driver.cc"
                },
                "region": {
                  "startLine": 104,
                  "startColumn": 49,
                  "endLine": 104,
                  "endColumn": 53,
                  "snippet": {
                    "text": "     */\n    if (rule->m_ruleId == 0) {\n        m_parserError << \"Rules must have an ID. File: \";\n        m_parserError << rule->getFileName() << \" at line: \";\n        m_parserError << std::to_string(rule->getLineNumber()) << std::endl;\n        return false;\n    }\n",
                    "rendered": {
                      "text": "     */\n    if (rule->m_ruleId == 0) {\n        m_parserError << \"Rules must have an ID. File: \";\n        m_parserError << rule->getFileName() << \" at line: \";\n        m_parserError << std::to_string(rule->getLineNumber()) << std::endl;\n        return false;\n    }\n",
                      "markdown": "`     */\n    if (rule->m_ruleId == 0) {\n        m_parserError << \"Rules must have an ID. File: \";\n        m_parserError << rule->getFileName() << \" at line: \";\n        m_parserError << std::to_string(rule->getLineNumber()) << std::endl;\n        return false;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/driver.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-parser.yy"
                },
                "region": {
                  "startLine": 1821,
                  "startColumn": 43,
                  "endLine": 1821,
                  "endColumn": 48,
                  "snippet": {
                    "text": "                    doNotAdd = true;\n                }\n                if (i->belongsToCollection(var.get())) {\n                    var->addsKeyExclusion(i.get());\n                }\n            }\n            if (!doNotAdd) {\n",
                    "rendered": {
                      "text": "                    doNotAdd = true;\n                }\n                if (i->belongsToCollection(var.get())) {\n                    var->addsKeyExclusion(i.get());\n                }\n            }\n            if (!doNotAdd) {\n",
                      "markdown": "`                    doNotAdd = true;\n                }\n                if (i->belongsToCollection(var.get())) {\n                    var->addsKeyExclusion(i.get());\n                }\n            }\n            if (!doNotAdd) {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-parser.yy"
                },
                "region": {
                  "startLine": 1820,
                  "startColumn": 46,
                  "endLine": 1820,
                  "endColumn": 51,
                  "snippet": {
                    "text": "                if (*var == *i) {\n                    doNotAdd = true;\n                }\n                if (i->belongsToCollection(var.get())) {\n                    var->addsKeyExclusion(i.get());\n                }\n            }\n",
                    "rendered": {
                      "text": "                if (*var == *i) {\n                    doNotAdd = true;\n                }\n                if (i->belongsToCollection(var.get())) {\n                    var->addsKeyExclusion(i.get());\n                }\n            }\n",
                      "markdown": "`                if (*var == *i) {\n                    doNotAdd = true;\n                }\n                if (i->belongsToCollection(var.get())) {\n                    var->addsKeyExclusion(i.get());\n                }\n            }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-parser.yy"
                },
                "region": {
                  "startLine": 1805,
                  "startColumn": 63,
                  "endLine": 1805,
                  "endColumn": 68,
                  "snippet": {
                    "text": "        while (!originalList->empty()) {\n            std::unique_ptr<Variable> var = std::move(originalList->back());\n            originalList->pop_back();\n            if (dynamic_cast<VariableModificatorExclusion*>(var.get())) {\n                exclusionVars->push_back(std::move(var));\n            } else {\n                newList->push_back(std::move(var));\n",
                    "rendered": {
                      "text": "        while (!originalList->empty()) {\n            std::unique_ptr<Variable> var = std::move(originalList->back());\n            originalList->pop_back();\n            if (dynamic_cast<VariableModificatorExclusion*>(var.get())) {\n                exclusionVars->push_back(std::move(var));\n            } else {\n                newList->push_back(std::move(var));\n",
                      "markdown": "`        while (!originalList->empty()) {\n            std::unique_ptr<Variable> var = std::move(originalList->back());\n            originalList->pop_back();\n            if (dynamic_cast<VariableModificatorExclusion*>(var.get())) {\n                exclusionVars->push_back(std::move(var));\n            } else {\n                newList->push_back(std::move(var));\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-parser.yy"
                },
                "region": {
                  "startLine": 1211,
                  "startColumn": 60,
                  "endLine": 1211,
                  "endColumn": 65,
                  "snippet": {
                    "text": "                }\n                checkedActions.push_back(a);\n            } else {\n                driver.error(@0, \"The action '\" + *a->m_name.get() + \"' is not suitable to be part of the SecDefaultActions\");\n                YYERROR;\n            }\n        }\n",
                    "rendered": {
                      "text": "                }\n                checkedActions.push_back(a);\n            } else {\n                driver.error(@0, \"The action '\" + *a->m_name.get() + \"' is not suitable to be part of the SecDefaultActions\");\n                YYERROR;\n            }\n        }\n",
                      "markdown": "`                }\n                checkedActions.push_back(a);\n            } else {\n                driver.error(@0, \"The action '\" + *a->m_name.get() + \"' is not suitable to be part of the SecDefaultActions\");\n                YYERROR;\n            }\n        }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-parser.yy"
                },
                "region": {
                  "startLine": 1187,
                  "startColumn": 26,
                  "endLine": 1187,
                  "endColumn": 31,
                  "snippet": {
                    "text": "      {\n        bool hasDisruptive = false;\n        std::vector<actions::Action *> *actions = new std::vector<actions::Action *>();\n        for (auto &i : *$2.get()) {\n            actions->push_back(i.release());\n        }\n        std::vector<actions::Action *> checkedActions;\n",
                    "rendered": {
                      "text": "      {\n        bool hasDisruptive = false;\n        std::vector<actions::Action *> *actions = new std::vector<actions::Action *>();\n        for (auto &i : *$2.get()) {\n            actions->push_back(i.release());\n        }\n        std::vector<actions::Action *> checkedActions;\n",
                      "markdown": "`      {\n        bool hasDisruptive = false;\n        std::vector<actions::Action *> *actions = new std::vector<actions::Action *>();\n        for (auto &i : *$2.get()) {\n            actions->push_back(i.release());\n        }\n        std::vector<actions::Action *> checkedActions;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-parser.yy"
                },
                "region": {
                  "startLine": 1160,
                  "startColumn": 84,
                  "endLine": 1160,
                  "endColumn": 89,
                  "snippet": {
                    "text": "        std::vector<actions::Action *> *a = new std::vector<actions::Action *>();\n        std::vector<actions::transformations::Transformation *> *t = new std::vector<actions::transformations::Transformation *>();\n        for (auto &i : *$2.get()) {\n            if (auto pt = dynamic_cast<actions::transformations::Transformation *>(i.get())) {\n              t->push_back(pt);\n              i.release();\n            } else {\n",
                    "rendered": {
                      "text": "        std::vector<actions::Action *> *a = new std::vector<actions::Action *>();\n        std::vector<actions::transformations::Transformation *> *t = new std::vector<actions::transformations::Transformation *>();\n        for (auto &i : *$2.get()) {\n            if (auto pt = dynamic_cast<actions::transformations::Transformation *>(i.get())) {\n              t->push_back(pt);\n              i.release();\n            } else {\n",
                      "markdown": "`        std::vector<actions::Action *> *a = new std::vector<actions::Action *>();\n        std::vector<actions::transformations::Transformation *> *t = new std::vector<actions::transformations::Transformation *>();\n        for (auto &i : *$2.get()) {\n            if (auto pt = dynamic_cast<actions::transformations::Transformation *>(i.get())) {\n              t->push_back(pt);\n              i.release();\n            } else {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-parser.yy"
                },
                "region": {
                  "startLine": 1159,
                  "startColumn": 26,
                  "endLine": 1159,
                  "endColumn": 31,
                  "snippet": {
                    "text": "        std::string err;\n        std::vector<actions::Action *> *a = new std::vector<actions::Action *>();\n        std::vector<actions::transformations::Transformation *> *t = new std::vector<actions::transformations::Transformation *>();\n        for (auto &i : *$2.get()) {\n            if (auto pt = dynamic_cast<actions::transformations::Transformation *>(i.get())) {\n              t->push_back(pt);\n              i.release();\n",
                    "rendered": {
                      "text": "        std::string err;\n        std::vector<actions::Action *> *a = new std::vector<actions::Action *>();\n        std::vector<actions::transformations::Transformation *> *t = new std::vector<actions::transformations::Transformation *>();\n        for (auto &i : *$2.get()) {\n            if (auto pt = dynamic_cast<actions::transformations::Transformation *>(i.get())) {\n              t->push_back(pt);\n              i.release();\n",
                      "markdown": "`        std::string err;\n        std::vector<actions::Action *> *a = new std::vector<actions::Action *>();\n        std::vector<actions::transformations::Transformation *> *t = new std::vector<actions::transformations::Transformation *>();\n        for (auto &i : *$2.get()) {\n            if (auto pt = dynamic_cast<actions::transformations::Transformation *>(i.get())) {\n              t->push_back(pt);\n              i.release();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-parser.yy"
                },
                "region": {
                  "startLine": 1139,
                  "startColumn": 84,
                  "endLine": 1139,
                  "endColumn": 89,
                  "snippet": {
                    "text": "        std::vector<actions::Action *> *a = new std::vector<actions::Action *>();\n        std::vector<actions::transformations::Transformation *> *t = new std::vector<actions::transformations::Transformation *>();\n        for (auto &i : *$2.get()) {\n            if (auto pt = dynamic_cast<actions::transformations::Transformation *>(i.get())) {\n              t->push_back(pt);\n              i.release();\n            } else {\n",
                    "rendered": {
                      "text": "        std::vector<actions::Action *> *a = new std::vector<actions::Action *>();\n        std::vector<actions::transformations::Transformation *> *t = new std::vector<actions::transformations::Transformation *>();\n        for (auto &i : *$2.get()) {\n            if (auto pt = dynamic_cast<actions::transformations::Transformation *>(i.get())) {\n              t->push_back(pt);\n              i.release();\n            } else {\n",
                      "markdown": "`        std::vector<actions::Action *> *a = new std::vector<actions::Action *>();\n        std::vector<actions::transformations::Transformation *> *t = new std::vector<actions::transformations::Transformation *>();\n        for (auto &i : *$2.get()) {\n            if (auto pt = dynamic_cast<actions::transformations::Transformation *>(i.get())) {\n              t->push_back(pt);\n              i.release();\n            } else {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-parser.yy"
                },
                "region": {
                  "startLine": 1138,
                  "startColumn": 26,
                  "endLine": 1138,
                  "endColumn": 31,
                  "snippet": {
                    "text": "      {\n        std::vector<actions::Action *> *a = new std::vector<actions::Action *>();\n        std::vector<actions::transformations::Transformation *> *t = new std::vector<actions::transformations::Transformation *>();\n        for (auto &i : *$2.get()) {\n            if (auto pt = dynamic_cast<actions::transformations::Transformation *>(i.get())) {\n              t->push_back(pt);\n              i.release();\n",
                    "rendered": {
                      "text": "      {\n        std::vector<actions::Action *> *a = new std::vector<actions::Action *>();\n        std::vector<actions::transformations::Transformation *> *t = new std::vector<actions::transformations::Transformation *>();\n        for (auto &i : *$2.get()) {\n            if (auto pt = dynamic_cast<actions::transformations::Transformation *>(i.get())) {\n              t->push_back(pt);\n              i.release();\n",
                      "markdown": "`      {\n        std::vector<actions::Action *> *a = new std::vector<actions::Action *>();\n        std::vector<actions::transformations::Transformation *> *t = new std::vector<actions::transformations::Transformation *>();\n        for (auto &i : *$2.get()) {\n            if (auto pt = dynamic_cast<actions::transformations::Transformation *>(i.get())) {\n              t->push_back(pt);\n              i.release();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-parser.yy"
                },
                "region": {
                  "startLine": 1118,
                  "startColumn": 26,
                  "endLine": 1118,
                  "endColumn": 31,
                  "snippet": {
                    "text": "    | DIRECTIVE variables op\n      {\n        variables::Variables *v = new variables::Variables();\n        for (auto &i : *$2.get()) {\n            v->push_back(i.release());\n        }\n\n",
                    "rendered": {
                      "text": "    | DIRECTIVE variables op\n      {\n        variables::Variables *v = new variables::Variables();\n        for (auto &i : *$2.get()) {\n            v->push_back(i.release());\n        }\n\n",
                      "markdown": "`    | DIRECTIVE variables op\n      {\n        variables::Variables *v = new variables::Variables();\n        for (auto &i : *$2.get()) {\n            v->push_back(i.release());\n        }\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-parser.yy"
                },
                "region": {
                  "startLine": 1097,
                  "startColumn": 26,
                  "endLine": 1097,
                  "endColumn": 31,
                  "snippet": {
                    "text": "            }\n        }\n        variables::Variables *v = new variables::Variables();\n        for (auto &i : *$2.get()) {\n            v->push_back(i.release());\n        }\n\n",
                    "rendered": {
                      "text": "            }\n        }\n        variables::Variables *v = new variables::Variables();\n        for (auto &i : *$2.get()) {\n            v->push_back(i.release());\n        }\n\n",
                      "markdown": "`            }\n        }\n        variables::Variables *v = new variables::Variables();\n        for (auto &i : *$2.get()) {\n            v->push_back(i.release());\n        }\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-parser.yy"
                },
                "region": {
                  "startLine": 1089,
                  "startColumn": 84,
                  "endLine": 1089,
                  "endColumn": 89,
                  "snippet": {
                    "text": "        std::vector<actions::Action *> *a = new std::vector<actions::Action *>();\n        std::vector<actions::transformations::Transformation *> *t = new std::vector<actions::transformations::Transformation *>();\n        for (auto &i : *$4.get()) {\n            if (auto pt = dynamic_cast<actions::transformations::Transformation *>(i.get())) {\n              t->push_back(pt);\n              i.release();\n            } else {\n",
                    "rendered": {
                      "text": "        std::vector<actions::Action *> *a = new std::vector<actions::Action *>();\n        std::vector<actions::transformations::Transformation *> *t = new std::vector<actions::transformations::Transformation *>();\n        for (auto &i : *$4.get()) {\n            if (auto pt = dynamic_cast<actions::transformations::Transformation *>(i.get())) {\n              t->push_back(pt);\n              i.release();\n            } else {\n",
                      "markdown": "`        std::vector<actions::Action *> *a = new std::vector<actions::Action *>();\n        std::vector<actions::transformations::Transformation *> *t = new std::vector<actions::transformations::Transformation *>();\n        for (auto &i : *$4.get()) {\n            if (auto pt = dynamic_cast<actions::transformations::Transformation *>(i.get())) {\n              t->push_back(pt);\n              i.release();\n            } else {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-parser.yy"
                },
                "region": {
                  "startLine": 1088,
                  "startColumn": 26,
                  "endLine": 1088,
                  "endColumn": 31,
                  "snippet": {
                    "text": "      {\n        std::vector<actions::Action *> *a = new std::vector<actions::Action *>();\n        std::vector<actions::transformations::Transformation *> *t = new std::vector<actions::transformations::Transformation *>();\n        for (auto &i : *$4.get()) {\n            if (auto pt = dynamic_cast<actions::transformations::Transformation *>(i.get())) {\n              t->push_back(pt);\n              i.release();\n",
                    "rendered": {
                      "text": "      {\n        std::vector<actions::Action *> *a = new std::vector<actions::Action *>();\n        std::vector<actions::transformations::Transformation *> *t = new std::vector<actions::transformations::Transformation *>();\n        for (auto &i : *$4.get()) {\n            if (auto pt = dynamic_cast<actions::transformations::Transformation *>(i.get())) {\n              t->push_back(pt);\n              i.release();\n",
                      "markdown": "`      {\n        std::vector<actions::Action *> *a = new std::vector<actions::Action *>();\n        std::vector<actions::transformations::Transformation *> *t = new std::vector<actions::transformations::Transformation *>();\n        for (auto &i : *$4.get()) {\n            if (auto pt = dynamic_cast<actions::transformations::Transformation *>(i.get())) {\n              t->push_back(pt);\n              i.release();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-parser.yy"
                },
                "region": {
                  "startLine": 1694,
                  "startColumn": 70,
                  "endLine": 1694,
                  "endColumn": 79,
                  "snippet": {
                    "text": "/* Parser error disabled to avoid breaking default installations with modsecurity.conf-recommended\n        std::stringstream ss;\n        ss << \"As of ModSecurity version 3.0, SecTmpDir is no longer supported.\";\n        ss << \" Instead, you can use your web server configurations to control when\";\n        ss << \"and where to swap. ModSecurity will follow the web server decision.\";\n        driver.error(@0, ss.str());\n        YYERROR;\n",
                    "rendered": {
                      "text": "/* Parser error disabled to avoid breaking default installations with modsecurity.conf-recommended\n        std::stringstream ss;\n        ss << \"As of ModSecurity version 3.0, SecTmpDir is no longer supported.\";\n        ss << \" Instead, you can use your web server configurations to control when\";\n        ss << \"and where to swap. ModSecurity will follow the web server decision.\";\n        driver.error(@0, ss.str());\n        YYERROR;\n",
                      "markdown": "`/* Parser error disabled to avoid breaking default installations with modsecurity.conf-recommended\n        std::stringstream ss;\n        ss << \"As of ModSecurity version 3.0, SecTmpDir is no longer supported.\";\n        ss << \" Instead, you can use your web server configurations to control when\";\n        ss << \"and where to swap. ModSecurity will follow the web server decision.\";\n        driver.error(@0, ss.str());\n        YYERROR;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-parser.yy"
                },
                "region": {
                  "startLine": 1619,
                  "startColumn": 80,
                  "endLine": 1619,
                  "endColumn": 89,
                  "snippet": {
                    "text": "      {\n        std::stringstream ss;\n        ss << \"As of ModSecurity version 3.0, SecRequestBodyInMemoryLimit is no longer \";\n        ss << \"supported. Instead, you can use your web server configurations to control \";\n        ss << \"those values. ModSecurity will follow the web server decision.\";\n        driver.error(@0, ss.str());\n        YYERROR;\n",
                    "rendered": {
                      "text": "      {\n        std::stringstream ss;\n        ss << \"As of ModSecurity version 3.0, SecRequestBodyInMemoryLimit is no longer \";\n        ss << \"supported. Instead, you can use your web server configurations to control \";\n        ss << \"those values. ModSecurity will follow the web server decision.\";\n        driver.error(@0, ss.str());\n        YYERROR;\n",
                      "markdown": "`      {\n        std::stringstream ss;\n        ss << \"As of ModSecurity version 3.0, SecRequestBodyInMemoryLimit is no longer \";\n        ss << \"supported. Instead, you can use your web server configurations to control \";\n        ss << \"those values. ModSecurity will follow the web server decision.\";\n        driver.error(@0, ss.str());\n        YYERROR;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-parser.yy"
                },
                "region": {
                  "startLine": 1168,
                  "startColumn": 22,
                  "endLine": 1168,
                  "endColumn": 30,
                  "snippet": {
                    "text": "            }\n        }\n        std::unique_ptr<RuleScript> r(new RuleScript(\n            /* path to script */ $1,\n            /* actions */ a,\n            /* transformations */ t,\n            /* file name */ std::string(*@1.end.filename),\n",
                    "rendered": {
                      "text": "            }\n        }\n        std::unique_ptr<RuleScript> r(new RuleScript(\n            /* path to script */ $1,\n            /* actions */ a,\n            /* transformations */ t,\n            /* file name */ std::string(*@1.end.filename),\n",
                      "markdown": "`            }\n        }\n        std::unique_ptr<RuleScript> r(new RuleScript(\n            /* path to script */ $1,\n            /* actions */ a,\n            /* transformations */ t,\n            /* file name */ std::string(*@1.end.filename),\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-scanner.ll"
                },
                "region": {
                  "startLine": 502,
                  "startColumn": 18,
                  "endLine": 502,
                  "endColumn": 24,
                  "snippet": {
                    "text": "%%\n\n%{\n  // Code run each time yylex is called.\n  driver.loc.back()->step();\n%}\n<EXPECTING_ACTIONS_ENDS_WITH_DOUBLE_QUOTE,EXPECTING_ACTIONS_ONLY_ONE>{\n",
                    "rendered": {
                      "text": "%%\n\n%{\n  // Code run each time yylex is called.\n  driver.loc.back()->step();\n%}\n<EXPECTING_ACTIONS_ENDS_WITH_DOUBLE_QUOTE,EXPECTING_ACTIONS_ONLY_ONE>{\n",
                      "markdown": "`%%\n\n%{\n  // Code run each time yylex is called.\n  driver.loc.back()->step();\n%}\n<EXPECTING_ACTIONS_ENDS_WITH_DOUBLE_QUOTE,EXPECTING_ACTIONS_ONLY_ONE>{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-scanner.ll"
                },
                "region": {
                  "startLine": 494,
                  "startColumn": 18,
                  "endLine": 494,
                  "endColumn": 24,
                  "snippet": {
                    "text": "%x SETVAR_ACTION_QUOTED_WAITING_CONTENT\n\n%{\n  // Code run each time a pattern is matched.\n  # define YY_USER_ACTION  driver.loc.back()->columns (yyleng);\n\n%}\n",
                    "rendered": {
                      "text": "%x SETVAR_ACTION_QUOTED_WAITING_CONTENT\n\n%{\n  // Code run each time a pattern is matched.\n  # define YY_USER_ACTION  driver.loc.back()->columns (yyleng);\n\n%}\n",
                      "markdown": "`%x SETVAR_ACTION_QUOTED_WAITING_CONTENT\n\n%{\n  // Code run each time a pattern is matched.\n  # define YY_USER_ACTION  driver.loc.back()->columns (yyleng);\n\n%}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-scanner.cc"
                },
                "region": {
                  "startLine": 9065,
                  "startColumn": 24,
                  "endLine": 9065,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n/* %if-c-or-c++ */\n/* Allocates the stack if it does not exist.\n *  Guarantees space for at least one push.\n */\n/* %if-c-only */\nstatic void yyensure_buffer_stack (void)\n",
                    "rendered": {
                      "text": "\n/* %if-c-or-c++ */\n/* Allocates the stack if it does not exist.\n *  Guarantees space for at least one push.\n */\n/* %if-c-only */\nstatic void yyensure_buffer_stack (void)\n",
                      "markdown": "`\n/* %if-c-or-c++ */\n/* Allocates the stack if it does not exist.\n *  Guarantees space for at least one push.\n */\n/* %if-c-only */\nstatic void yyensure_buffer_stack (void)\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-scanner.cc"
                },
                "region": {
                  "startLine": 8929,
                  "startColumn": 34,
                  "endLine": 8929,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\n/* Initializes or reinitializes a buffer.\n * This function is sometimes called more than once on the same buffer,\n * such as during a yyrestart() or at EOF.\n */\n/* %if-c-only */\n    static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )\n",
                    "rendered": {
                      "text": "\n/* Initializes or reinitializes a buffer.\n * This function is sometimes called more than once on the same buffer,\n * such as during a yyrestart() or at EOF.\n */\n/* %if-c-only */\n    static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )\n",
                      "markdown": "`\n/* Initializes or reinitializes a buffer.\n * This function is sometimes called more than once on the same buffer,\n * such as during a yyrestart() or at EOF.\n */\n/* %if-c-only */\n    static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-scanner.cc"
                },
                "region": {
                  "startLine": 8845,
                  "startColumn": 13,
                  "endLine": 8845,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n\t/* We don't actually know whether we did this switch during\n\t * EOF (yywrap()) processing, but the only time this flag\n\t * is looked at is after yywrap() is called, so it's safe\n\t * to go ahead and always set it.\n\t */\n\t(yy_did_buffer_switch_on_eof) = 1;\n",
                    "rendered": {
                      "text": "\n\t/* We don't actually know whether we did this switch during\n\t * EOF (yywrap()) processing, but the only time this flag\n\t * is looked at is after yywrap() is called, so it's safe\n\t * to go ahead and always set it.\n\t */\n\t(yy_did_buffer_switch_on_eof) = 1;\n",
                      "markdown": "`\n\t/* We don't actually know whether we did this switch during\n\t * EOF (yywrap()) processing, but the only time this flag\n\t * is looked at is after yywrap() is called, so it's safe\n\t * to go ahead and always set it.\n\t */\n\t(yy_did_buffer_switch_on_eof) = 1;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-scanner.cc"
                },
                "region": {
                  "startLine": 8779,
                  "startColumn": 12,
                  "endLine": 8779,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\t*(yy_c_buf_p) = '\\0';\t/* preserve yytext */\n\t(yy_hold_char) = *++(yy_c_buf_p);\n\n/* %% [19.0] update BOL and yylineno */\n\n\treturn c;\n}\n",
                    "rendered": {
                      "text": "\t*(yy_c_buf_p) = '\\0';\t/* preserve yytext */\n\t(yy_hold_char) = *++(yy_c_buf_p);\n\n/* %% [19.0] update BOL and yylineno */\n\n\treturn c;\n}\n",
                      "markdown": "`\t*(yy_c_buf_p) = '\\0';\t/* preserve yytext */\n\t(yy_hold_char) = *++(yy_c_buf_p);\n\n/* %% [19.0] update BOL and yylineno */\n\n\treturn c;\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-scanner.cc"
                },
                "region": {
                  "startLine": 8353,
                  "startColumn": 23,
                  "endLine": 8353,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\t\t\t{\n\t\t\t/* We're scanning a new file or input source.  It's\n\t\t\t * possible that this happened because the user\n\t\t\t * just pointed yyin at a new source and called\n\t\t\t * yylex().  If so, then we have to assure\n\t\t\t * consistency between YY_CURRENT_BUFFER and our\n\t\t\t * globals.  Here is the right place to do so, because\n",
                    "rendered": {
                      "text": "\t\t\t{\n\t\t\t/* We're scanning a new file or input source.  It's\n\t\t\t * possible that this happened because the user\n\t\t\t * just pointed yyin at a new source and called\n\t\t\t * yylex().  If so, then we have to assure\n\t\t\t * consistency between YY_CURRENT_BUFFER and our\n\t\t\t * globals.  Here is the right place to do so, because\n",
                      "markdown": "`\t\t\t{\n\t\t\t/* We're scanning a new file or input source.  It's\n\t\t\t * possible that this happened because the user\n\t\t\t * just pointed yyin at a new source and called\n\t\t\t * yylex().  If so, then we have to assure\n\t\t\t * consistency between YY_CURRENT_BUFFER and our\n\t\t\t * globals.  Here is the right place to do so, because\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-scanner.cc"
                },
                "region": {
                  "startLine": 5287,
                  "startColumn": 38,
                  "endLine": 5287,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\t\t\tif ( yy_act == 0 )\n\t\t\t\tfprintf( stderr, \"--scanner backing up\\n\" );\n\t\t\telse if ( yy_act < 543 )\n\t\t\t\tfprintf( stderr, \"--accepting rule at line %ld (\\\"%s\\\")\\n\",\n\t\t\t\t         (long)yy_rule_linenum[yy_act], yytext );\n\t\t\telse if ( yy_act == 543 )\n\t\t\t\tfprintf( stderr, \"--accepting default rule (\\\"%s\\\")\\n\",\n",
                    "rendered": {
                      "text": "\t\t\tif ( yy_act == 0 )\n\t\t\t\tfprintf( stderr, \"--scanner backing up\\n\" );\n\t\t\telse if ( yy_act < 543 )\n\t\t\t\tfprintf( stderr, \"--accepting rule at line %ld (\\\"%s\\\")\\n\",\n\t\t\t\t         (long)yy_rule_linenum[yy_act], yytext );\n\t\t\telse if ( yy_act == 543 )\n\t\t\t\tfprintf( stderr, \"--accepting default rule (\\\"%s\\\")\\n\",\n",
                      "markdown": "`\t\t\tif ( yy_act == 0 )\n\t\t\t\tfprintf( stderr, \"--scanner backing up\\n\" );\n\t\t\telse if ( yy_act < 543 )\n\t\t\t\tfprintf( stderr, \"--accepting rule at line %ld (\\\"%s\\\")\\n\",\n\t\t\t\t         (long)yy_rule_linenum[yy_act], yytext );\n\t\t\telse if ( yy_act == 543 )\n\t\t\t\tfprintf( stderr, \"--accepting default rule (\\\"%s\\\")\\n\",\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-scanner.cc"
                },
                "region": {
                  "startLine": 5277,
                  "startColumn": 30,
                  "endLine": 5277,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\n\t\tYY_DO_BEFORE_ACTION;\n\n/* %% [11.0] code for yylineno update goes here */\n\ndo_action:\t/* This label is used only to access EOF actions. */\n\n",
                    "rendered": {
                      "text": "\n\t\tYY_DO_BEFORE_ACTION;\n\n/* %% [11.0] code for yylineno update goes here */\n\ndo_action:\t/* This label is used only to access EOF actions. */\n\n",
                      "markdown": "`\n\t\tYY_DO_BEFORE_ACTION;\n\n/* %% [11.0] code for yylineno update goes here */\n\ndo_action:\t/* This label is used only to access EOF actions. */\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-scanner.cc"
                },
                "region": {
                  "startLine": 5170,
                  "startColumn": 16,
                  "endLine": 5170,
                  "endColumn": 20,
                  "snippet": {
                    "text": "#define YY_USER_ACTION\n#endif\n\n/* Code executed at the end of each rule. */\n#ifndef YY_BREAK\n#define YY_BREAK /*LINTED*/break;\n#endif\n",
                    "rendered": {
                      "text": "#define YY_USER_ACTION\n#endif\n\n/* Code executed at the end of each rule. */\n#ifndef YY_BREAK\n#define YY_BREAK /*LINTED*/break;\n#endif\n",
                      "markdown": "`#define YY_USER_ACTION\n#endif\n\n/* Code executed at the end of each rule. */\n#ifndef YY_BREAK\n#define YY_BREAK /*LINTED*/break;\n#endif\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-scanner.cc"
                },
                "region": {
                  "startLine": 5163,
                  "startColumn": 16,
                  "endLine": 5163,
                  "endColumn": 20,
                  "snippet": {
                    "text": "/* %endif */\n#endif /* !YY_DECL */\n\n/* Code executed at the beginning of each rule, after yytext and yyleng\n * have been set up.\n */\n#ifndef YY_USER_ACTION\n",
                    "rendered": {
                      "text": "/* %endif */\n#endif /* !YY_DECL */\n\n/* Code executed at the beginning of each rule, after yytext and yyleng\n * have been set up.\n */\n#ifndef YY_USER_ACTION\n",
                      "markdown": "`/* %endif */\n#endif /* !YY_DECL */\n\n/* Code executed at the beginning of each rule, after yytext and yyleng\n * have been set up.\n */\n#ifndef YY_USER_ACTION\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-scanner.cc"
                },
                "region": {
                  "startLine": 291,
                  "startColumn": 22,
                  "endLine": 291,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t *\n\t * When we actually see the EOF, we change the status to \"new\"\n\t * (via yyrestart()), so that the user can continue scanning by\n\t * just pointing yyin at a new input file.\n\t */\n#define YY_BUFFER_EOF_PENDING 2\n\n",
                    "rendered": {
                      "text": "\t *\n\t * When we actually see the EOF, we change the status to \"new\"\n\t * (via yyrestart()), so that the user can continue scanning by\n\t * just pointing yyin at a new input file.\n\t */\n#define YY_BUFFER_EOF_PENDING 2\n\n",
                      "markdown": "`\t *\n\t * When we actually see the EOF, we change the status to \"new\"\n\t * (via yyrestart()), so that the user can continue scanning by\n\t * just pointing yyin at a new input file.\n\t */\n#define YY_BUFFER_EOF_PENDING 2\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-scanner.cc"
                },
                "region": {
                  "startLine": 265,
                  "startColumn": 34,
                  "endLine": 265,
                  "endColumn": 38,
                  "snippet": {
                    "text": "\t */\n\tint yy_is_interactive;\n\n\t/* Whether we're considered to be at the beginning of a line.\n\t * If so, '^' rules will be active on the next match, otherwise\n\t * not.\n\t */\n",
                    "rendered": {
                      "text": "\t */\n\tint yy_is_interactive;\n\n\t/* Whether we're considered to be at the beginning of a line.\n\t * If so, '^' rules will be active on the next match, otherwise\n\t * not.\n\t */\n",
                      "markdown": "`\t */\n\tint yy_is_interactive;\n\n\t/* Whether we're considered to be at the beginning of a line.\n\t * If so, '^' rules will be active on the next match, otherwise\n\t * not.\n\t */\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-scanner.cc"
                },
                "region": {
                  "startLine": 9378,
                  "startColumn": 82,
                  "endLine": 9379,
                  "snippet": {
                    "text": "\tyyfree((yy_buffer_stack) );\n\t(yy_buffer_stack) = NULL;\n\n    /* Reset the globals. This is important in a non-reentrant scanner so the next time\n     * yylex() is called, initialization will occur. */\n    yy_init_globals( );\n\n/* %if-reentrant */\n",
                    "rendered": {
                      "text": "\tyyfree((yy_buffer_stack) );\n\t(yy_buffer_stack) = NULL;\n\n    /* Reset the globals. This is important in a non-reentrant scanner so the next time\n     * yylex() is called, initialization will occur. */\n    yy_init_globals( );\n\n/* %if-reentrant */\n",
                      "markdown": "`\tyyfree((yy_buffer_stack) );\n\t(yy_buffer_stack) = NULL;\n\n    /* Reset the globals. This is important in a non-reentrant scanner so the next time\n     * yylex() is called, initialization will occur. */\n    yy_init_globals( );\n\n/* %if-reentrant */\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-scanner.cc"
                },
                "region": {
                  "startLine": 9038,
                  "startColumn": 27,
                  "endLine": 9038,
                  "endColumn": 32,
                  "snippet": {
                    "text": "/* %endif */\n\n/* %if-c-or-c++ */\n/** Removes and deletes the top of the stack, if present.\n *  The next element becomes the new top.\n *  \n */\n",
                    "rendered": {
                      "text": "/* %endif */\n\n/* %if-c-or-c++ */\n/** Removes and deletes the top of the stack, if present.\n *  The next element becomes the new top.\n *  \n */\n",
                      "markdown": "`/* %endif */\n\n/* %if-c-or-c++ */\n/** Removes and deletes the top of the stack, if present.\n *  The next element becomes the new top.\n *  \n */\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-scanner.cc"
                },
                "region": {
                  "startLine": 9026,
                  "startColumn": 16,
                  "endLine": 9026,
                  "endColumn": 21,
                  "snippet": {
                    "text": "\t\tYY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);\n\t\t}\n\n\t/* Only push if top exists. Otherwise, replace top. */\n\tif (YY_CURRENT_BUFFER)\n\t\t(yy_buffer_stack_top)++;\n\tYY_CURRENT_BUFFER_LVALUE = new_buffer;\n",
                    "rendered": {
                      "text": "\t\tYY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);\n\t\t}\n\n\t/* Only push if top exists. Otherwise, replace top. */\n\tif (YY_CURRENT_BUFFER)\n\t\t(yy_buffer_stack_top)++;\n\tYY_CURRENT_BUFFER_LVALUE = new_buffer;\n",
                      "markdown": "`\t\tYY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);\n\t\t}\n\n\t/* Only push if top exists. Otherwise, replace top. */\n\tif (YY_CURRENT_BUFFER)\n\t\t(yy_buffer_stack_top)++;\n\tYY_CURRENT_BUFFER_LVALUE = new_buffer;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-scanner.cc"
                },
                "region": {
                  "startLine": 8844,
                  "startColumn": 43,
                  "endLine": 8844,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\tyy_load_buffer_state(  );\n\n\t/* We don't actually know whether we did this switch during\n\t * EOF (yywrap()) processing, but the only time this flag\n\t * is looked at is after yywrap() is called, so it's safe\n\t * to go ahead and always set it.\n\t */\n",
                    "rendered": {
                      "text": "\tyy_load_buffer_state(  );\n\n\t/* We don't actually know whether we did this switch during\n\t * EOF (yywrap()) processing, but the only time this flag\n\t * is looked at is after yywrap() is called, so it's safe\n\t * to go ahead and always set it.\n\t */\n",
                      "markdown": "`\tyy_load_buffer_state(  );\n\n\t/* We don't actually know whether we did this switch during\n\t * EOF (yywrap()) processing, but the only time this flag\n\t * is looked at is after yywrap() is called, so it's safe\n\t * to go ahead and always set it.\n\t */\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-scanner.cc"
                },
                "region": {
                  "startLine": 8678,
                  "startColumn": 24,
                  "endLine": 8678,
                  "endColumn": 30,
                  "snippet": {
                    "text": "/* %endif */\n{\n\tint yy_is_jam;\n    /* %% [17.0] code to find the next state, and perhaps do backing up, goes here */\n\tchar *yy_cp = (yy_c_buf_p);\n\n\tYY_CHAR yy_c = 1;\n",
                    "rendered": {
                      "text": "/* %endif */\n{\n\tint yy_is_jam;\n    /* %% [17.0] code to find the next state, and perhaps do backing up, goes here */\n\tchar *yy_cp = (yy_c_buf_p);\n\n\tYY_CHAR yy_c = 1;\n",
                      "markdown": "`/* %endif */\n{\n\tint yy_is_jam;\n    /* %% [17.0] code to find the next state, and perhaps do backing up, goes here */\n\tchar *yy_cp = (yy_c_buf_p);\n\n\tYY_CHAR yy_c = 1;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-scanner.cc"
                },
                "region": {
                  "startLine": 8647,
                  "startColumn": 20,
                  "endLine": 8647,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n\tfor ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )\n\t\t{\n/* %% [16.0] code to find the next state goes here */\n\t\tYY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);\n\t\tif ( yy_accept[yy_current_state] )\n\t\t\t{\n",
                    "rendered": {
                      "text": "\n\tfor ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )\n\t\t{\n/* %% [16.0] code to find the next state goes here */\n\t\tYY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);\n\t\tif ( yy_accept[yy_current_state] )\n\t\t\t{\n",
                      "markdown": "`\n\tfor ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )\n\t\t{\n/* %% [16.0] code to find the next state goes here */\n\t\tYY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);\n\t\tif ( yy_accept[yy_current_state] )\n\t\t\t{\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-scanner.cc"
                },
                "region": {
                  "startLine": 5272,
                  "startColumn": 20,
                  "endLine": 5272,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\t\tyy_current_state = (yy_last_accepting_state);\n\nyy_find_action:\n/* %% [10.0] code to find the action number goes here */\n\t\tyy_act = yy_accept[yy_current_state];\n\n\t\tYY_DO_BEFORE_ACTION;\n",
                    "rendered": {
                      "text": "\t\tyy_current_state = (yy_last_accepting_state);\n\nyy_find_action:\n/* %% [10.0] code to find the action number goes here */\n\t\tyy_act = yy_accept[yy_current_state];\n\n\t\tYY_DO_BEFORE_ACTION;\n",
                      "markdown": "`\t\tyy_current_state = (yy_last_accepting_state);\n\nyy_find_action:\n/* %% [10.0] code to find the action number goes here */\n\t\tyy_act = yy_accept[yy_current_state];\n\n\t\tYY_DO_BEFORE_ACTION;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-scanner.cc"
                },
                "region": {
                  "startLine": 5247,
                  "startColumn": 30,
                  "endLine": 5247,
                  "endColumn": 36,
                  "snippet": {
                    "text": "\t\t */\n\t\tyy_bp = yy_cp;\n\n/* %% [9.0] code to set up and find next match goes here */\n\t\tyy_current_state = (yy_start);\nyy_match:\n\t\tdo\n",
                    "rendered": {
                      "text": "\t\t */\n\t\tyy_bp = yy_cp;\n\n/* %% [9.0] code to set up and find next match goes here */\n\t\tyy_current_state = (yy_start);\nyy_match:\n\t\tdo\n",
                      "markdown": "`\t\t */\n\t\tyy_bp = yy_cp;\n\n/* %% [9.0] code to set up and find next match goes here */\n\t\tyy_current_state = (yy_start);\nyy_match:\n\t\tdo\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-scanner.cc"
                },
                "region": {
                  "startLine": 5229,
                  "startColumn": 18,
                  "endLine": 5229,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\n\n#line 503 \"seclang-scanner.ll\"\n  // Code run each time yylex is called.\n  driver.loc.back()->step();\n\n#line 5233 \"seclang-scanner.cc\"\n",
                    "rendered": {
                      "text": "\n\n#line 503 \"seclang-scanner.ll\"\n  // Code run each time yylex is called.\n  driver.loc.back()->step();\n\n#line 5233 \"seclang-scanner.cc\"\n",
                      "markdown": "`\n\n#line 503 \"seclang-scanner.ll\"\n  // Code run each time yylex is called.\n  driver.loc.back()->step();\n\n#line 5233 \"seclang-scanner.cc\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-scanner.cc"
                },
                "region": {
                  "startLine": 4906,
                  "startColumn": 18,
                  "endLine": 4906,
                  "endColumn": 24,
                  "snippet": {
                    "text": "#define YY_NO_UNISTD_H 1\n\n#line 494 \"seclang-scanner.ll\"\n  // Code run each time a pattern is matched.\n  # define YY_USER_ACTION  driver.loc.back()->columns (yyleng);\n\n#line 4910 \"seclang-scanner.cc\"\n",
                    "rendered": {
                      "text": "#define YY_NO_UNISTD_H 1\n\n#line 494 \"seclang-scanner.ll\"\n  // Code run each time a pattern is matched.\n  # define YY_USER_ACTION  driver.loc.back()->columns (yyleng);\n\n#line 4910 \"seclang-scanner.cc\"\n",
                      "markdown": "`#define YY_NO_UNISTD_H 1\n\n#line 494 \"seclang-scanner.ll\"\n  // Code run each time a pattern is matched.\n  # define YY_USER_ACTION  driver.loc.back()->columns (yyleng);\n\n#line 4910 \"seclang-scanner.cc\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-scanner.cc"
                },
                "region": {
                  "startLine": 315,
                  "startColumn": 14,
                  "endLine": 315,
                  "endColumn": 19,
                  "snippet": {
                    "text": " * future we want to put the buffer states in a more general\n * \"scanner state\".\n *\n * Returns the top of the stack, or NULL.\n */\n#define YY_CURRENT_BUFFER ( (yy_buffer_stack) \\\n                          ? (yy_buffer_stack)[(yy_buffer_stack_top)] \\\n",
                    "rendered": {
                      "text": " * future we want to put the buffer states in a more general\n * \"scanner state\".\n *\n * Returns the top of the stack, or NULL.\n */\n#define YY_CURRENT_BUFFER ( (yy_buffer_stack) \\\n                          ? (yy_buffer_stack)[(yy_buffer_stack_top)] \\\n",
                      "markdown": "` * future we want to put the buffer states in a more general\n * \"scanner state\".\n *\n * Returns the top of the stack, or NULL.\n */\n#define YY_CURRENT_BUFFER ( (yy_buffer_stack) \\\n                          ? (yy_buffer_stack)[(yy_buffer_stack_top)] \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-scanner.cc"
                },
                "region": {
                  "startLine": 303,
                  "startColumn": 52,
                  "endLine": 303,
                  "endColumn": 57,
                  "snippet": {
                    "text": "/* %if-not-reentrant */\n\n/* Stack of input buffers. */\nstatic size_t yy_buffer_stack_top = 0; /**< index of top of stack. */\nstatic size_t yy_buffer_stack_max = 0; /**< capacity of stack. */\nstatic YY_BUFFER_STATE * yy_buffer_stack = NULL; /**< Stack as an array. */\n/* %endif */\n",
                    "rendered": {
                      "text": "/* %if-not-reentrant */\n\n/* Stack of input buffers. */\nstatic size_t yy_buffer_stack_top = 0; /**< index of top of stack. */\nstatic size_t yy_buffer_stack_max = 0; /**< capacity of stack. */\nstatic YY_BUFFER_STATE * yy_buffer_stack = NULL; /**< Stack as an array. */\n/* %endif */\n",
                      "markdown": "`/* %if-not-reentrant */\n\n/* Stack of input buffers. */\nstatic size_t yy_buffer_stack_top = 0; /**< index of top of stack. */\nstatic size_t yy_buffer_stack_max = 0; /**< capacity of stack. */\nstatic YY_BUFFER_STATE * yy_buffer_stack = NULL; /**< Stack as an array. */\n/* %endif */\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-parser.cc"
                },
                "region": {
                  "startLine": 3308,
                  "startColumn": 43,
                  "endLine": 3308,
                  "endColumn": 48,
                  "snippet": {
                    "text": "                    doNotAdd = true;\n                }\n                if (i->belongsToCollection(var.get())) {\n                    var->addsKeyExclusion(i.get());\n                }\n            }\n            if (!doNotAdd) {\n",
                    "rendered": {
                      "text": "                    doNotAdd = true;\n                }\n                if (i->belongsToCollection(var.get())) {\n                    var->addsKeyExclusion(i.get());\n                }\n            }\n            if (!doNotAdd) {\n",
                      "markdown": "`                    doNotAdd = true;\n                }\n                if (i->belongsToCollection(var.get())) {\n                    var->addsKeyExclusion(i.get());\n                }\n            }\n            if (!doNotAdd) {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-parser.cc"
                },
                "region": {
                  "startLine": 3307,
                  "startColumn": 46,
                  "endLine": 3307,
                  "endColumn": 51,
                  "snippet": {
                    "text": "                if (*var == *i) {\n                    doNotAdd = true;\n                }\n                if (i->belongsToCollection(var.get())) {\n                    var->addsKeyExclusion(i.get());\n                }\n            }\n",
                    "rendered": {
                      "text": "                if (*var == *i) {\n                    doNotAdd = true;\n                }\n                if (i->belongsToCollection(var.get())) {\n                    var->addsKeyExclusion(i.get());\n                }\n            }\n",
                      "markdown": "`                if (*var == *i) {\n                    doNotAdd = true;\n                }\n                if (i->belongsToCollection(var.get())) {\n                    var->addsKeyExclusion(i.get());\n                }\n            }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-parser.cc"
                },
                "region": {
                  "startLine": 3292,
                  "startColumn": 63,
                  "endLine": 3292,
                  "endColumn": 68,
                  "snippet": {
                    "text": "        while (!originalList->empty()) {\n            std::unique_ptr<Variable> var = std::move(originalList->back());\n            originalList->pop_back();\n            if (dynamic_cast<VariableModificatorExclusion*>(var.get())) {\n                exclusionVars->push_back(std::move(var));\n            } else {\n                newList->push_back(std::move(var));\n",
                    "rendered": {
                      "text": "        while (!originalList->empty()) {\n            std::unique_ptr<Variable> var = std::move(originalList->back());\n            originalList->pop_back();\n            if (dynamic_cast<VariableModificatorExclusion*>(var.get())) {\n                exclusionVars->push_back(std::move(var));\n            } else {\n                newList->push_back(std::move(var));\n",
                      "markdown": "`        while (!originalList->empty()) {\n            std::unique_ptr<Variable> var = std::move(originalList->back());\n            originalList->pop_back();\n            if (dynamic_cast<VariableModificatorExclusion*>(var.get())) {\n                exclusionVars->push_back(std::move(var));\n            } else {\n                newList->push_back(std::move(var));\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-parser.cc"
                },
                "region": {
                  "startLine": 2436,
                  "startColumn": 78,
                  "endLine": 2436,
                  "endColumn": 83,
                  "snippet": {
                    "text": "                }\n                checkedActions.push_back(a);\n            } else {\n                driver.error(yystack_[2].location, \"The action '\" + *a->m_name.get() + \"' is not suitable to be part of the SecDefaultActions\");\n                YYERROR;\n            }\n        }\n",
                    "rendered": {
                      "text": "                }\n                checkedActions.push_back(a);\n            } else {\n                driver.error(yystack_[2].location, \"The action '\" + *a->m_name.get() + \"' is not suitable to be part of the SecDefaultActions\");\n                YYERROR;\n            }\n        }\n",
                      "markdown": "`                }\n                checkedActions.push_back(a);\n            } else {\n                driver.error(yystack_[2].location, \"The action '\" + *a->m_name.get() + \"' is not suitable to be part of the SecDefaultActions\");\n                YYERROR;\n            }\n        }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-parser.cc"
                },
                "region": {
                  "startLine": 2412,
                  "startColumn": 117,
                  "endLine": 2412,
                  "endColumn": 122,
                  "snippet": {
                    "text": "      {\n        bool hasDisruptive = false;\n        std::vector<actions::Action *> *actions = new std::vector<actions::Action *>();\n        for (auto &i : *yystack_[0].value.as < std::unique_ptr<std::vector<std::unique_ptr<actions::Action> > >  > ().get()) {\n            actions->push_back(i.release());\n        }\n        std::vector<actions::Action *> checkedActions;\n",
                    "rendered": {
                      "text": "      {\n        bool hasDisruptive = false;\n        std::vector<actions::Action *> *actions = new std::vector<actions::Action *>();\n        for (auto &i : *yystack_[0].value.as < std::unique_ptr<std::vector<std::unique_ptr<actions::Action> > >  > ().get()) {\n            actions->push_back(i.release());\n        }\n        std::vector<actions::Action *> checkedActions;\n",
                      "markdown": "`      {\n        bool hasDisruptive = false;\n        std::vector<actions::Action *> *actions = new std::vector<actions::Action *>();\n        for (auto &i : *yystack_[0].value.as < std::unique_ptr<std::vector<std::unique_ptr<actions::Action> > >  > ().get()) {\n            actions->push_back(i.release());\n        }\n        std::vector<actions::Action *> checkedActions;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-parser.cc"
                },
                "region": {
                  "startLine": 2381,
                  "startColumn": 84,
                  "endLine": 2381,
                  "endColumn": 89,
                  "snippet": {
                    "text": "        std::vector<actions::Action *> *a = new std::vector<actions::Action *>();\n        std::vector<actions::transformations::Transformation *> *t = new std::vector<actions::transformations::Transformation *>();\n        for (auto &i : *yystack_[0].value.as < std::unique_ptr<std::vector<std::unique_ptr<actions::Action> > >  > ().get()) {\n            if (auto pt = dynamic_cast<actions::transformations::Transformation *>(i.get())) {\n              t->push_back(pt);\n              i.release();\n            } else {\n",
                    "rendered": {
                      "text": "        std::vector<actions::Action *> *a = new std::vector<actions::Action *>();\n        std::vector<actions::transformations::Transformation *> *t = new std::vector<actions::transformations::Transformation *>();\n        for (auto &i : *yystack_[0].value.as < std::unique_ptr<std::vector<std::unique_ptr<actions::Action> > >  > ().get()) {\n            if (auto pt = dynamic_cast<actions::transformations::Transformation *>(i.get())) {\n              t->push_back(pt);\n              i.release();\n            } else {\n",
                      "markdown": "`        std::vector<actions::Action *> *a = new std::vector<actions::Action *>();\n        std::vector<actions::transformations::Transformation *> *t = new std::vector<actions::transformations::Transformation *>();\n        for (auto &i : *yystack_[0].value.as < std::unique_ptr<std::vector<std::unique_ptr<actions::Action> > >  > ().get()) {\n            if (auto pt = dynamic_cast<actions::transformations::Transformation *>(i.get())) {\n              t->push_back(pt);\n              i.release();\n            } else {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-parser.cc"
                },
                "region": {
                  "startLine": 2380,
                  "startColumn": 117,
                  "endLine": 2380,
                  "endColumn": 122,
                  "snippet": {
                    "text": "        std::string err;\n        std::vector<actions::Action *> *a = new std::vector<actions::Action *>();\n        std::vector<actions::transformations::Transformation *> *t = new std::vector<actions::transformations::Transformation *>();\n        for (auto &i : *yystack_[0].value.as < std::unique_ptr<std::vector<std::unique_ptr<actions::Action> > >  > ().get()) {\n            if (auto pt = dynamic_cast<actions::transformations::Transformation *>(i.get())) {\n              t->push_back(pt);\n              i.release();\n",
                    "rendered": {
                      "text": "        std::string err;\n        std::vector<actions::Action *> *a = new std::vector<actions::Action *>();\n        std::vector<actions::transformations::Transformation *> *t = new std::vector<actions::transformations::Transformation *>();\n        for (auto &i : *yystack_[0].value.as < std::unique_ptr<std::vector<std::unique_ptr<actions::Action> > >  > ().get()) {\n            if (auto pt = dynamic_cast<actions::transformations::Transformation *>(i.get())) {\n              t->push_back(pt);\n              i.release();\n",
                      "markdown": "`        std::string err;\n        std::vector<actions::Action *> *a = new std::vector<actions::Action *>();\n        std::vector<actions::transformations::Transformation *> *t = new std::vector<actions::transformations::Transformation *>();\n        for (auto &i : *yystack_[0].value.as < std::unique_ptr<std::vector<std::unique_ptr<actions::Action> > >  > ().get()) {\n            if (auto pt = dynamic_cast<actions::transformations::Transformation *>(i.get())) {\n              t->push_back(pt);\n              i.release();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-parser.cc"
                },
                "region": {
                  "startLine": 2356,
                  "startColumn": 84,
                  "endLine": 2356,
                  "endColumn": 89,
                  "snippet": {
                    "text": "        std::vector<actions::Action *> *a = new std::vector<actions::Action *>();\n        std::vector<actions::transformations::Transformation *> *t = new std::vector<actions::transformations::Transformation *>();\n        for (auto &i : *yystack_[0].value.as < std::unique_ptr<std::vector<std::unique_ptr<actions::Action> > >  > ().get()) {\n            if (auto pt = dynamic_cast<actions::transformations::Transformation *>(i.get())) {\n              t->push_back(pt);\n              i.release();\n            } else {\n",
                    "rendered": {
                      "text": "        std::vector<actions::Action *> *a = new std::vector<actions::Action *>();\n        std::vector<actions::transformations::Transformation *> *t = new std::vector<actions::transformations::Transformation *>();\n        for (auto &i : *yystack_[0].value.as < std::unique_ptr<std::vector<std::unique_ptr<actions::Action> > >  > ().get()) {\n            if (auto pt = dynamic_cast<actions::transformations::Transformation *>(i.get())) {\n              t->push_back(pt);\n              i.release();\n            } else {\n",
                      "markdown": "`        std::vector<actions::Action *> *a = new std::vector<actions::Action *>();\n        std::vector<actions::transformations::Transformation *> *t = new std::vector<actions::transformations::Transformation *>();\n        for (auto &i : *yystack_[0].value.as < std::unique_ptr<std::vector<std::unique_ptr<actions::Action> > >  > ().get()) {\n            if (auto pt = dynamic_cast<actions::transformations::Transformation *>(i.get())) {\n              t->push_back(pt);\n              i.release();\n            } else {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-parser.cc"
                },
                "region": {
                  "startLine": 2355,
                  "startColumn": 117,
                  "endLine": 2355,
                  "endColumn": 122,
                  "snippet": {
                    "text": "      {\n        std::vector<actions::Action *> *a = new std::vector<actions::Action *>();\n        std::vector<actions::transformations::Transformation *> *t = new std::vector<actions::transformations::Transformation *>();\n        for (auto &i : *yystack_[0].value.as < std::unique_ptr<std::vector<std::unique_ptr<actions::Action> > >  > ().get()) {\n            if (auto pt = dynamic_cast<actions::transformations::Transformation *>(i.get())) {\n              t->push_back(pt);\n              i.release();\n",
                    "rendered": {
                      "text": "      {\n        std::vector<actions::Action *> *a = new std::vector<actions::Action *>();\n        std::vector<actions::transformations::Transformation *> *t = new std::vector<actions::transformations::Transformation *>();\n        for (auto &i : *yystack_[0].value.as < std::unique_ptr<std::vector<std::unique_ptr<actions::Action> > >  > ().get()) {\n            if (auto pt = dynamic_cast<actions::transformations::Transformation *>(i.get())) {\n              t->push_back(pt);\n              i.release();\n",
                      "markdown": "`      {\n        std::vector<actions::Action *> *a = new std::vector<actions::Action *>();\n        std::vector<actions::transformations::Transformation *> *t = new std::vector<actions::transformations::Transformation *>();\n        for (auto &i : *yystack_[0].value.as < std::unique_ptr<std::vector<std::unique_ptr<actions::Action> > >  > ().get()) {\n            if (auto pt = dynamic_cast<actions::transformations::Transformation *>(i.get())) {\n              t->push_back(pt);\n              i.release();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-parser.cc"
                },
                "region": {
                  "startLine": 2331,
                  "startColumn": 110,
                  "endLine": 2331,
                  "endColumn": 115,
                  "snippet": {
                    "text": "#line 1116 \"seclang-parser.yy\"\n      {\n        variables::Variables *v = new variables::Variables();\n        for (auto &i : *yystack_[1].value.as < std::unique_ptr<std::vector<std::unique_ptr<Variable> > >  > ().get()) {\n            v->push_back(i.release());\n        }\n\n",
                    "rendered": {
                      "text": "#line 1116 \"seclang-parser.yy\"\n      {\n        variables::Variables *v = new variables::Variables();\n        for (auto &i : *yystack_[1].value.as < std::unique_ptr<std::vector<std::unique_ptr<Variable> > >  > ().get()) {\n            v->push_back(i.release());\n        }\n\n",
                      "markdown": "`#line 1116 \"seclang-parser.yy\"\n      {\n        variables::Variables *v = new variables::Variables();\n        for (auto &i : *yystack_[1].value.as < std::unique_ptr<std::vector<std::unique_ptr<Variable> > >  > ().get()) {\n            v->push_back(i.release());\n        }\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-parser.cc"
                },
                "region": {
                  "startLine": 2306,
                  "startColumn": 110,
                  "endLine": 2306,
                  "endColumn": 115,
                  "snippet": {
                    "text": "            }\n        }\n        variables::Variables *v = new variables::Variables();\n        for (auto &i : *yystack_[2].value.as < std::unique_ptr<std::vector<std::unique_ptr<Variable> > >  > ().get()) {\n            v->push_back(i.release());\n        }\n\n",
                    "rendered": {
                      "text": "            }\n        }\n        variables::Variables *v = new variables::Variables();\n        for (auto &i : *yystack_[2].value.as < std::unique_ptr<std::vector<std::unique_ptr<Variable> > >  > ().get()) {\n            v->push_back(i.release());\n        }\n\n",
                      "markdown": "`            }\n        }\n        variables::Variables *v = new variables::Variables();\n        for (auto &i : *yystack_[2].value.as < std::unique_ptr<std::vector<std::unique_ptr<Variable> > >  > ().get()) {\n            v->push_back(i.release());\n        }\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-parser.cc"
                },
                "region": {
                  "startLine": 2298,
                  "startColumn": 84,
                  "endLine": 2298,
                  "endColumn": 89,
                  "snippet": {
                    "text": "        std::vector<actions::Action *> *a = new std::vector<actions::Action *>();\n        std::vector<actions::transformations::Transformation *> *t = new std::vector<actions::transformations::Transformation *>();\n        for (auto &i : *yystack_[0].value.as < std::unique_ptr<std::vector<std::unique_ptr<actions::Action> > >  > ().get()) {\n            if (auto pt = dynamic_cast<actions::transformations::Transformation *>(i.get())) {\n              t->push_back(pt);\n              i.release();\n            } else {\n",
                    "rendered": {
                      "text": "        std::vector<actions::Action *> *a = new std::vector<actions::Action *>();\n        std::vector<actions::transformations::Transformation *> *t = new std::vector<actions::transformations::Transformation *>();\n        for (auto &i : *yystack_[0].value.as < std::unique_ptr<std::vector<std::unique_ptr<actions::Action> > >  > ().get()) {\n            if (auto pt = dynamic_cast<actions::transformations::Transformation *>(i.get())) {\n              t->push_back(pt);\n              i.release();\n            } else {\n",
                      "markdown": "`        std::vector<actions::Action *> *a = new std::vector<actions::Action *>();\n        std::vector<actions::transformations::Transformation *> *t = new std::vector<actions::transformations::Transformation *>();\n        for (auto &i : *yystack_[0].value.as < std::unique_ptr<std::vector<std::unique_ptr<actions::Action> > >  > ().get()) {\n            if (auto pt = dynamic_cast<actions::transformations::Transformation *>(i.get())) {\n              t->push_back(pt);\n              i.release();\n            } else {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-parser.cc"
                },
                "region": {
                  "startLine": 2297,
                  "startColumn": 117,
                  "endLine": 2297,
                  "endColumn": 122,
                  "snippet": {
                    "text": "      {\n        std::vector<actions::Action *> *a = new std::vector<actions::Action *>();\n        std::vector<actions::transformations::Transformation *> *t = new std::vector<actions::transformations::Transformation *>();\n        for (auto &i : *yystack_[0].value.as < std::unique_ptr<std::vector<std::unique_ptr<actions::Action> > >  > ().get()) {\n            if (auto pt = dynamic_cast<actions::transformations::Transformation *>(i.get())) {\n              t->push_back(pt);\n              i.release();\n",
                    "rendered": {
                      "text": "      {\n        std::vector<actions::Action *> *a = new std::vector<actions::Action *>();\n        std::vector<actions::transformations::Transformation *> *t = new std::vector<actions::transformations::Transformation *>();\n        for (auto &i : *yystack_[0].value.as < std::unique_ptr<std::vector<std::unique_ptr<actions::Action> > >  > ().get()) {\n            if (auto pt = dynamic_cast<actions::transformations::Transformation *>(i.get())) {\n              t->push_back(pt);\n              i.release();\n",
                      "markdown": "`      {\n        std::vector<actions::Action *> *a = new std::vector<actions::Action *>();\n        std::vector<actions::transformations::Transformation *> *t = new std::vector<actions::transformations::Transformation *>();\n        for (auto &i : *yystack_[0].value.as < std::unique_ptr<std::vector<std::unique_ptr<actions::Action> > >  > ().get()) {\n            if (auto pt = dynamic_cast<actions::transformations::Transformation *>(i.get())) {\n              t->push_back(pt);\n              i.release();\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-parser.cc"
                },
                "region": {
                  "startLine": 7047,
                  "startColumn": 41,
                  "endLine": 7047,
                  "endColumn": 45,
                  "snippet": {
                    "text": "\n#if YYDEBUG || 1\n  // YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.\n  // First, the terminals, then, starting at \\a YYNTOKENS, nonterminals.\n  const char*\n  const seclang_parser::yytname_[] =\n  {\n",
                    "rendered": {
                      "text": "\n#if YYDEBUG || 1\n  // YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.\n  // First, the terminals, then, starting at \\a YYNTOKENS, nonterminals.\n  const char*\n  const seclang_parser::yytname_[] =\n  {\n",
                      "markdown": "`\n#if YYDEBUG || 1\n  // YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.\n  // First, the terminals, then, starting at \\a YYNTOKENS, nonterminals.\n  const char*\n  const seclang_parser::yytname_[] =\n  {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-parser.cc"
                },
                "region": {
                  "startLine": 5952,
                  "startColumn": 20,
                  "endLine": 5952,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    const int yyn = yypact_[+yyparser_.yystack_[0].state];\n    if (!yy_pact_value_is_default_ (yyn))\n      {\n        /* Start YYX at -YYN if negative to avoid negative indexes in\n           YYCHECK.  In other words, skip the first -YYN actions for\n           this state because they are default actions.  */\n        const int yyxbegin = yyn < 0 ? -yyn : 0;\n",
                    "rendered": {
                      "text": "    const int yyn = yypact_[+yyparser_.yystack_[0].state];\n    if (!yy_pact_value_is_default_ (yyn))\n      {\n        /* Start YYX at -YYN if negative to avoid negative indexes in\n           YYCHECK.  In other words, skip the first -YYN actions for\n           this state because they are default actions.  */\n        const int yyxbegin = yyn < 0 ? -yyn : 0;\n",
                      "markdown": "`    const int yyn = yypact_[+yyparser_.yystack_[0].state];\n    if (!yy_pact_value_is_default_ (yyn))\n      {\n        /* Start YYX at -YYN if negative to avoid negative indexes in\n           YYCHECK.  In other words, skip the first -YYN actions for\n           this state because they are default actions.  */\n        const int yyxbegin = yyn < 0 ? -yyn : 0;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-parser.cc"
                },
                "region": {
                  "startLine": 5755,
                  "startColumn": 28,
                  "endLine": 5755,
                  "endColumn": 32,
                  "snippet": {
                    "text": "        /* If just tried and failed to reuse lookahead token after an\n           error, discard it.  */\n\n        // Return failure if at end of input.\n        if (yyla.kind () == symbol_kind::S_YYEOF)\n          YYABORT;\n        else if (!yyla.empty ())\n",
                    "rendered": {
                      "text": "        /* If just tried and failed to reuse lookahead token after an\n           error, discard it.  */\n\n        // Return failure if at end of input.\n        if (yyla.kind () == symbol_kind::S_YYEOF)\n          YYABORT;\n        else if (!yyla.empty ())\n",
                      "markdown": "`        /* If just tried and failed to reuse lookahead token after an\n           error, discard it.  */\n\n        // Return failure if at end of input.\n        if (yyla.kind () == symbol_kind::S_YYEOF)\n          YYABORT;\n        else if (!yyla.empty ())\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-parser.cc"
                },
                "region": {
                  "startLine": 3175,
                  "startColumn": 70,
                  "endLine": 3175,
                  "endColumn": 79,
                  "snippet": {
                    "text": "/* Parser error disabled to avoid breaking default installations with modsecurity.conf-recommended\n        std::stringstream ss;\n        ss << \"As of ModSecurity version 3.0, SecTmpDir is no longer supported.\";\n        ss << \" Instead, you can use your web server configurations to control when\";\n        ss << \"and where to swap. ModSecurity will follow the web server decision.\";\n        driver.error(@0, ss.str());\n        YYERROR;\n",
                    "rendered": {
                      "text": "/* Parser error disabled to avoid breaking default installations with modsecurity.conf-recommended\n        std::stringstream ss;\n        ss << \"As of ModSecurity version 3.0, SecTmpDir is no longer supported.\";\n        ss << \" Instead, you can use your web server configurations to control when\";\n        ss << \"and where to swap. ModSecurity will follow the web server decision.\";\n        driver.error(@0, ss.str());\n        YYERROR;\n",
                      "markdown": "`/* Parser error disabled to avoid breaking default installations with modsecurity.conf-recommended\n        std::stringstream ss;\n        ss << \"As of ModSecurity version 3.0, SecTmpDir is no longer supported.\";\n        ss << \" Instead, you can use your web server configurations to control when\";\n        ss << \"and where to swap. ModSecurity will follow the web server decision.\";\n        driver.error(@0, ss.str());\n        YYERROR;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-parser.cc"
                },
                "region": {
                  "startLine": 3053,
                  "startColumn": 80,
                  "endLine": 3053,
                  "endColumn": 89,
                  "snippet": {
                    "text": "      {\n        std::stringstream ss;\n        ss << \"As of ModSecurity version 3.0, SecRequestBodyInMemoryLimit is no longer \";\n        ss << \"supported. Instead, you can use your web server configurations to control \";\n        ss << \"those values. ModSecurity will follow the web server decision.\";\n        driver.error(yystack_[1].location, ss.str());\n        YYERROR;\n",
                    "rendered": {
                      "text": "      {\n        std::stringstream ss;\n        ss << \"As of ModSecurity version 3.0, SecRequestBodyInMemoryLimit is no longer \";\n        ss << \"supported. Instead, you can use your web server configurations to control \";\n        ss << \"those values. ModSecurity will follow the web server decision.\";\n        driver.error(yystack_[1].location, ss.str());\n        YYERROR;\n",
                      "markdown": "`      {\n        std::stringstream ss;\n        ss << \"As of ModSecurity version 3.0, SecRequestBodyInMemoryLimit is no longer \";\n        ss << \"supported. Instead, you can use your web server configurations to control \";\n        ss << \"those values. ModSecurity will follow the web server decision.\";\n        driver.error(yystack_[1].location, ss.str());\n        YYERROR;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-parser.cc"
                },
                "region": {
                  "startLine": 5791,
                  "startColumn": 25,
                  "endLine": 5791,
                  "endColumn": 31,
                  "snippet": {
                    "text": "  `-------------------------------------------------------------*/\n  yyerrlab1:\n    yyerrstatus_ = 3;   // Each real token shifted decrements this.\n    // Pop stack until we find a state that shifts the error token.\n    for (;;)\n      {\n        yyn = yypact_[+yystack_[0].state];\n",
                    "rendered": {
                      "text": "  `-------------------------------------------------------------*/\n  yyerrlab1:\n    yyerrstatus_ = 3;   // Each real token shifted decrements this.\n    // Pop stack until we find a state that shifts the error token.\n    for (;;)\n      {\n        yyn = yypact_[+yystack_[0].state];\n",
                      "markdown": "`  `-------------------------------------------------------------*/\n  yyerrlab1:\n    yyerrstatus_ = 3;   // Each real token shifted decrements this.\n    // Pop stack until we find a state that shifts the error token.\n    for (;;)\n      {\n        yyn = yypact_[+yystack_[0].state];\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-parser.cc"
                },
                "region": {
                  "startLine": 2389,
                  "startColumn": 22,
                  "endLine": 2389,
                  "endColumn": 30,
                  "snippet": {
                    "text": "            }\n        }\n        std::unique_ptr<RuleScript> r(new RuleScript(\n            /* path to script */ yystack_[1].value.as < std::string > (),\n            /* actions */ a,\n            /* transformations */ t,\n            /* file name */ std::string(*yystack_[1].location.end.filename),\n",
                    "rendered": {
                      "text": "            }\n        }\n        std::unique_ptr<RuleScript> r(new RuleScript(\n            /* path to script */ yystack_[1].value.as < std::string > (),\n            /* actions */ a,\n            /* transformations */ t,\n            /* file name */ std::string(*yystack_[1].location.end.filename),\n",
                      "markdown": "`            }\n        }\n        std::unique_ptr<RuleScript> r(new RuleScript(\n            /* path to script */ yystack_[1].value.as < std::string > (),\n            /* actions */ a,\n            /* transformations */ t,\n            /* file name */ std::string(*yystack_[1].location.end.filename),\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/Makefile.am"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 143,
                  "endLine": 31,
                  "endColumn": 147,
                  "snippet": {
                    "text": "\t$(LIBXML2_CFLAGS)\n\ntest.cc: seclang-parser.hh\n\tcat seclang-parser.hh | sed \"s/return \\*new (yyas_<T> ()) T (t)/return *new (yyas_<T> ()) T (std::move((T\\&)t))/g\"  > seclang-parser.hh.fix && mv seclang-parser.hh.fix seclang-parser.hh\n\ttouch test.cc\n\nCLEANFILES = test.cc \\\n",
                    "rendered": {
                      "text": "\t$(LIBXML2_CFLAGS)\n\ntest.cc: seclang-parser.hh\n\tcat seclang-parser.hh | sed \"s/return \\*new (yyas_<T> ()) T (t)/return *new (yyas_<T> ()) T (std::move((T\\&)t))/g\"  > seclang-parser.hh.fix && mv seclang-parser.hh.fix seclang-parser.hh\n\ttouch test.cc\n\nCLEANFILES = test.cc \\\n",
                      "markdown": "`\t$(LIBXML2_CFLAGS)\n\ntest.cc: seclang-parser.hh\n\tcat seclang-parser.hh | sed \"s/return \\*new (yyas_<T> ()) T (t)/return *new (yyas_<T> ()) T (std::move((T\\&)t))/g\"  > seclang-parser.hh.fix && mv seclang-parser.hh.fix seclang-parser.hh\n\ttouch test.cc\n\nCLEANFILES = test.cc \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/Makefile.am"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 24,
                  "endLine": 31,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\t$(LIBXML2_CFLAGS)\n\ntest.cc: seclang-parser.hh\n\tcat seclang-parser.hh | sed \"s/return \\*new (yyas_<T> ()) T (t)/return *new (yyas_<T> ()) T (std::move((T\\&)t))/g\"  > seclang-parser.hh.fix && mv seclang-parser.hh.fix seclang-parser.hh\n\ttouch test.cc\n\nCLEANFILES = test.cc \\\n",
                    "rendered": {
                      "text": "\t$(LIBXML2_CFLAGS)\n\ntest.cc: seclang-parser.hh\n\tcat seclang-parser.hh | sed \"s/return \\*new (yyas_<T> ()) T (t)/return *new (yyas_<T> ()) T (std::move((T\\&)t))/g\"  > seclang-parser.hh.fix && mv seclang-parser.hh.fix seclang-parser.hh\n\ttouch test.cc\n\nCLEANFILES = test.cc \\\n",
                      "markdown": "`\t$(LIBXML2_CFLAGS)\n\ntest.cc: seclang-parser.hh\n\tcat seclang-parser.hh | sed \"s/return \\*new (yyas_<T> ()) T (t)/return *new (yyas_<T> ()) T (std::move((T\\&)t))/g\"  > seclang-parser.hh.fix && mv seclang-parser.hh.fix seclang-parser.hh\n\ttouch test.cc\n\nCLEANFILES = test.cc \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/Makefile.am"
                },
                "region": {
                  "startLine": 31,
                  "endLine": 31,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\t$(LIBXML2_CFLAGS)\n\ntest.cc: seclang-parser.hh\n\tcat seclang-parser.hh | sed \"s/return \\*new (yyas_<T> ()) T (t)/return *new (yyas_<T> ()) T (std::move((T\\&)t))/g\"  > seclang-parser.hh.fix && mv seclang-parser.hh.fix seclang-parser.hh\n\ttouch test.cc\n\nCLEANFILES = test.cc \\\n",
                    "rendered": {
                      "text": "\t$(LIBXML2_CFLAGS)\n\ntest.cc: seclang-parser.hh\n\tcat seclang-parser.hh | sed \"s/return \\*new (yyas_<T> ()) T (t)/return *new (yyas_<T> ()) T (std::move((T\\&)t))/g\"  > seclang-parser.hh.fix && mv seclang-parser.hh.fix seclang-parser.hh\n\ttouch test.cc\n\nCLEANFILES = test.cc \\\n",
                      "markdown": "`\t$(LIBXML2_CFLAGS)\n\ntest.cc: seclang-parser.hh\n\tcat seclang-parser.hh | sed \"s/return \\*new (yyas_<T> ()) T (t)/return *new (yyas_<T> ()) T (std::move((T\\&)t))/g\"  > seclang-parser.hh.fix && mv seclang-parser.hh.fix seclang-parser.hh\n\ttouch test.cc\n\nCLEANFILES = test.cc \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-parser.hh"
                },
                "region": {
                  "startLine": 7753,
                  "startColumn": 22,
                  "endLine": 7753,
                  "endColumn": 26,
                  "snippet": {
                    "text": "      symbol_kind_type token () const YY_NOEXCEPT { return yyla_.kind (); }\n      const location_type& location () const YY_NOEXCEPT { return yyla_.location; }\n\n      /// Put in YYARG at most YYARGN of the expected tokens, and return the\n      /// number of tokens stored in YYARG.  If YYARG is null, return the\n      /// number of expected tokens (guaranteed to be less than YYNTOKENS).\n      int expected_tokens (symbol_kind_type yyarg[], int yyargn) const;\n",
                    "rendered": {
                      "text": "      symbol_kind_type token () const YY_NOEXCEPT { return yyla_.kind (); }\n      const location_type& location () const YY_NOEXCEPT { return yyla_.location; }\n\n      /// Put in YYARG at most YYARGN of the expected tokens, and return the\n      /// number of tokens stored in YYARG.  If YYARG is null, return the\n      /// number of expected tokens (guaranteed to be less than YYNTOKENS).\n      int expected_tokens (symbol_kind_type yyarg[], int yyargn) const;\n",
                      "markdown": "`      symbol_kind_type token () const YY_NOEXCEPT { return yyla_.kind (); }\n      const location_type& location () const YY_NOEXCEPT { return yyla_.location; }\n\n      /// Put in YYARG at most YYARGN of the expected tokens, and return the\n      /// number of tokens stored in YYARG.  If YYARG is null, return the\n      /// number of expected tokens (guaranteed to be less than YYNTOKENS).\n      int expected_tokens (symbol_kind_type yyarg[], int yyargn) const;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-parser.hh"
                },
                "region": {
                  "startLine": 8014,
                  "startColumn": 32,
                  "endLine": 8014,
                  "endColumn": 37,
                  "snippet": {
                    "text": "        return seq_.end ();\n      }\n\n      /// Present a slice of the top of a stack.\n      class slice\n      {\n      public:\n",
                    "rendered": {
                      "text": "        return seq_.end ();\n      }\n\n      /// Present a slice of the top of a stack.\n      class slice\n      {\n      public:\n",
                      "markdown": "`        return seq_.end ();\n      }\n\n      /// Present a slice of the top of a stack.\n      class slice\n      {\n      public:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-parser.hh"
                },
                "region": {
                  "startLine": 8000,
                  "startColumn": 21,
                  "endLine": 8000,
                  "endColumn": 26,
                  "snippet": {
                    "text": "        return index_type (seq_.size ());\n      }\n\n      /// Iterator on top of the stack (going downwards).\n      const_iterator\n      begin () const YY_NOEXCEPT\n      {\n",
                    "rendered": {
                      "text": "        return index_type (seq_.size ());\n      }\n\n      /// Iterator on top of the stack (going downwards).\n      const_iterator\n      begin () const YY_NOEXCEPT\n      {\n",
                      "markdown": "`        return index_type (seq_.size ());\n      }\n\n      /// Iterator on top of the stack (going downwards).\n      const_iterator\n      begin () const YY_NOEXCEPT\n      {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/parser/seclang-parser.hh"
                },
                "region": {
                  "startLine": 515,
                  "startColumn": 5,
                  "endLine": 515,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#else\n  /// A buffer to store and retrieve objects.\n  ///\n  /// Sort of a variant, but does not keep track of the nature\n  /// of the stored data, since that knowledge is available\n  /// via the current parser state.\n  class value_type\n",
                    "rendered": {
                      "text": "#else\n  /// A buffer to store and retrieve objects.\n  ///\n  /// Sort of a variant, but does not keep track of the nature\n  /// of the stored data, since that knowledge is available\n  /// via the current parser state.\n  class value_type\n",
                      "markdown": "`#else\n  /// A buffer to store and retrieve objects.\n  ///\n  /// Sort of a variant, but does not keep track of the nature\n  /// of the stored data, since that knowledge is available\n  /// via the current parser state.\n  class value_type\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/sql_hex_decode.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/sha1.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/no_audit_log.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/log_data.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/skip_after.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/expire_var.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/variables/env.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/variables/env.cc"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 19,
                  "endLine": 45,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    RuleWithActions *rule,\n    std::vector<const VariableValue *> *l) {\n    for (char **current = environ; *current; current++) {\n        std::string env = std::string(*current);\n        size_t pos = env.find_first_of(\"=\");\n        if (pos == std::string::npos) {\n            continue;\n",
                    "rendered": {
                      "text": "    RuleWithActions *rule,\n    std::vector<const VariableValue *> *l) {\n    for (char **current = environ; *current; current++) {\n        std::string env = std::string(*current);\n        size_t pos = env.find_first_of(\"=\");\n        if (pos == std::string::npos) {\n            continue;\n",
                      "markdown": "`    RuleWithActions *rule,\n    std::vector<const VariableValue *> *l) {\n    for (char **current = environ; *current; current++) {\n        std::string env = std::string(*current);\n        size_t pos = env.find_first_of(\"=\");\n        if (pos == std::string::npos) {\n            continue;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/variables/duration.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/variables/time.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/acmp.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 52,
                  "endLine": 7,
                  "snippet": {
                    "text": "* Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n*\n* You may not use this file except in compliance with\n* the License.  You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": "* Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n*\n* You may not use this file except in compliance with\n* the License.  You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "`* Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n*\n* You may not use this file except in compliance with\n* the License.  You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/acmp.cc"
                },
                "region": {
                  "startLine": 452,
                  "startColumn": 13,
                  "endLine": 452,
                  "endColumn": 19,
                  "snippet": {
                    "text": "        }\n        if (go_to != NULL) node = go_to;\n\n        /* If node has o_match, then we found a pattern */\n        if (node->o_match != NULL) {\n            *match = node->text;\n            return offset;\n",
                    "rendered": {
                      "text": "        }\n        if (go_to != NULL) node = go_to;\n\n        /* If node has o_match, then we found a pattern */\n        if (node->o_match != NULL) {\n            *match = node->text;\n            return offset;\n",
                      "markdown": "`        }\n        if (go_to != NULL) node = go_to;\n\n        /* If node has o_match, then we found a pattern */\n        if (node->o_match != NULL) {\n            *match = node->text;\n            return offset;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/acmp.cc"
                },
                "region": {
                  "startLine": 450,
                  "startColumn": 26,
                  "endLine": 450,
                  "endColumn": 32,
                  "snippet": {
                    "text": "            if (node == parser->root_node) break;\n            if (go_to == NULL) node = node->fail;\n        }\n        if (go_to != NULL) node = go_to;\n\n        /* If node has o_match, then we found a pattern */\n        if (node->o_match != NULL) {\n",
                    "rendered": {
                      "text": "            if (node == parser->root_node) break;\n            if (go_to == NULL) node = node->fail;\n        }\n        if (go_to != NULL) node = go_to;\n\n        /* If node has o_match, then we found a pattern */\n        if (node->o_match != NULL) {\n",
                      "markdown": "`            if (node == parser->root_node) break;\n            if (go_to == NULL) node = node->fail;\n        }\n        if (go_to != NULL) node = go_to;\n\n        /* If node has o_match, then we found a pattern */\n        if (node->o_match != NULL) {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/acmp.cc"
                },
                "region": {
                  "startLine": 448,
                  "startColumn": 30,
                  "endLine": 448,
                  "endColumn": 36,
                  "snippet": {
                    "text": "                }\n            }\n            if (node == parser->root_node) break;\n            if (go_to == NULL) node = node->fail;\n        }\n        if (go_to != NULL) node = go_to;\n\n",
                    "rendered": {
                      "text": "                }\n            }\n            if (node == parser->root_node) break;\n            if (go_to == NULL) node = node->fail;\n        }\n        if (go_to != NULL) node = go_to;\n\n",
                      "markdown": "`                }\n            }\n            if (node == parser->root_node) break;\n            if (go_to == NULL) node = node->fail;\n        }\n        if (go_to != NULL) node = go_to;\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/acmp.cc"
                },
                "region": {
                  "startLine": 430,
                  "startColumn": 3,
                  "endLine": 430,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\n    parser = acmpt->parser;\n    if (acmpt->ptr == NULL) acmpt->ptr = parser->root_node;\n    node = reinterpret_cast<acmp_node_t *>(acmpt->ptr);\n    end = data + len;\n\n    while (data < end) {\n",
                    "rendered": {
                      "text": "\n    parser = acmpt->parser;\n    if (acmpt->ptr == NULL) acmpt->ptr = parser->root_node;\n    node = reinterpret_cast<acmp_node_t *>(acmpt->ptr);\n    end = data + len;\n\n    while (data < end) {\n",
                      "markdown": "`\n    parser = acmpt->parser;\n    if (acmpt->ptr == NULL) acmpt->ptr = parser->root_node;\n    node = reinterpret_cast<acmp_node_t *>(acmpt->ptr);\n    end = data + len;\n\n    while (data < end) {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/acmp.cc"
                },
                "region": {
                  "startLine": 283,
                  "startColumn": 11,
                  "endLine": 283,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n    for (;;) {\n        while (arr.empty() == false) {\n            node = arr.back();\n            arr.pop_back();\n            node->fail = parser->root_node;\n            if (node->parent != parser->root_node) {\n",
                    "rendered": {
                      "text": "\n    for (;;) {\n        while (arr.empty() == false) {\n            node = arr.back();\n            arr.pop_back();\n            node->fail = parser->root_node;\n            if (node->parent != parser->root_node) {\n",
                      "markdown": "`\n    for (;;) {\n        while (arr.empty() == false) {\n            node = arr.back();\n            arr.pop_back();\n            node->fail = parser->root_node;\n            if (node->parent != parser->root_node) {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/acmp.cc"
                },
                "region": {
                  "startLine": 275,
                  "startColumn": 54,
                  "endLine": 275,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\n    parser->root_node->fail = parser->root_node;\n\n    /* All first-level children will fail back to root node */\n    for (child = parser->root_node->child; child != NULL; child = child->sibling) {\n        child->fail = parser->root_node;\n        arr.push_back(child);\n",
                    "rendered": {
                      "text": "\n    parser->root_node->fail = parser->root_node;\n\n    /* All first-level children will fail back to root node */\n    for (child = parser->root_node->child; child != NULL; child = child->sibling) {\n        child->fail = parser->root_node;\n        arr.push_back(child);\n",
                      "markdown": "`\n    parser->root_node->fail = parser->root_node;\n\n    /* All first-level children will fail back to root node */\n    for (child = parser->root_node->child; child != NULL; child = child->sibling) {\n        child->fail = parser->root_node;\n        arr.push_back(child);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/acmp.cc"
                },
                "region": {
                  "startLine": 227,
                  "startColumn": 45,
                  "endLine": 227,
                  "endColumn": 51,
                  "snippet": {
                    "text": "        child = child->sibling;\n    };\n\n    /* We have array with all children of the node and number of those children\n     */\n    for (i = 0; i < count - 1; i++)\n        for (j = i + 1; j < count; j++) {\n",
                    "rendered": {
                      "text": "        child = child->sibling;\n    };\n\n    /* We have array with all children of the node and number of those children\n     */\n    for (i = 0; i < count - 1; i++)\n        for (j = i + 1; j < count; j++) {\n",
                      "markdown": "`        child = child->sibling;\n    };\n\n    /* We have array with all children of the node and number of those children\n     */\n    for (i = 0; i < count - 1; i++)\n        for (j = i + 1; j < count; j++) {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/acmp.cc"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 69,
                  "endLine": 157,
                  "endColumn": 75,
                  "snippet": {
                    "text": "        }\n    }\n\n    /* Go recursively through children of this node that have a child node */\n    for(child = node->child; child != NULL; child = child->sibling) {\n        if (child->child != NULL) acmp_connect_other_matches(parser, child);\n    }\n",
                    "rendered": {
                      "text": "        }\n    }\n\n    /* Go recursively through children of this node that have a child node */\n    for(child = node->child; child != NULL; child = child->sibling) {\n        if (child->child != NULL) acmp_connect_other_matches(parser, child);\n    }\n",
                      "markdown": "`        }\n    }\n\n    /* Go recursively through children of this node that have a child node */\n    for(child = node->child; child != NULL; child = child->sibling) {\n        if (child->child != NULL) acmp_connect_other_matches(parser, child);\n    }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/acmp.cc"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 46,
                  "endLine": 157,
                  "endColumn": 52,
                  "snippet": {
                    "text": "        }\n    }\n\n    /* Go recursively through children of this node that have a child node */\n    for(child = node->child; child != NULL; child = child->sibling) {\n        if (child->child != NULL) acmp_connect_other_matches(parser, child);\n    }\n",
                    "rendered": {
                      "text": "        }\n    }\n\n    /* Go recursively through children of this node that have a child node */\n    for(child = node->child; child != NULL; child = child->sibling) {\n        if (child->child != NULL) acmp_connect_other_matches(parser, child);\n    }\n",
                      "markdown": "`        }\n    }\n\n    /* Go recursively through children of this node that have a child node */\n    for(child = node->child; child != NULL; child = child->sibling) {\n        if (child->child != NULL) acmp_connect_other_matches(parser, child);\n    }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/acmp.cc"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 41,
                  "endLine": 142,
                  "endColumn": 47,
                  "snippet": {
                    "text": "}\n\n/**\n * Connects each node with its first fail node that is end of a phrase.\n */\nstatic void acmp_connect_other_matches(ACMP *parser, acmp_node_t *node) {\n    acmp_node_t *child, *om;\n",
                    "rendered": {
                      "text": "}\n\n/**\n * Connects each node with its first fail node that is end of a phrase.\n */\nstatic void acmp_connect_other_matches(ACMP *parser, acmp_node_t *node) {\n    acmp_node_t *child, *om;\n",
                      "markdown": "`}\n\n/**\n * Connects each node with its first fail node that is end of a phrase.\n */\nstatic void acmp_connect_other_matches(ACMP *parser, acmp_node_t *node) {\n    acmp_node_t *child, *om;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/acmp.cc"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 16,
                  "endLine": 142,
                  "endColumn": 22,
                  "snippet": {
                    "text": "}\n\n/**\n * Connects each node with its first fail node that is end of a phrase.\n */\nstatic void acmp_connect_other_matches(ACMP *parser, acmp_node_t *node) {\n    acmp_node_t *child, *om;\n",
                    "rendered": {
                      "text": "}\n\n/**\n * Connects each node with its first fail node that is end of a phrase.\n */\nstatic void acmp_connect_other_matches(ACMP *parser, acmp_node_t *node) {\n    acmp_node_t *child, *om;\n",
                      "markdown": "`}\n\n/**\n * Connects each node with its first fail node that is end of a phrase.\n */\nstatic void acmp_connect_other_matches(ACMP *parser, acmp_node_t *node) {\n    acmp_node_t *child, *om;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/acmp.cc"
                },
                "region": {
                  "startLine": 110,
                  "startColumn": 25,
                  "endLine": 110,
                  "endColumn": 31,
                  "snippet": {
                    "text": "}\n\n/**\n * Copies values from one node to another, without child/sibling/fail pointers\n * and without state variables.\n */\nstatic void acmp_clone_node_no_state(acmp_node_t *from, acmp_node_t *to) {\n",
                    "rendered": {
                      "text": "}\n\n/**\n * Copies values from one node to another, without child/sibling/fail pointers\n * and without state variables.\n */\nstatic void acmp_clone_node_no_state(acmp_node_t *from, acmp_node_t *to) {\n",
                      "markdown": "`}\n\n/**\n * Copies values from one node to another, without child/sibling/fail pointers\n * and without state variables.\n */\nstatic void acmp_clone_node_no_state(acmp_node_t *from, acmp_node_t *to) {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/acmp.cc"
                },
                "region": {
                  "startLine": 105,
                  "startColumn": 7,
                  "endLine": 105,
                  "endColumn": 13,
                  "snippet": {
                    "text": "            node->sibling = child;\n            return;\n        }\n        node = node->sibling;\n    }\n}\n\n",
                    "rendered": {
                      "text": "            node->sibling = child;\n            return;\n        }\n        node = node->sibling;\n    }\n}\n\n",
                      "markdown": "`            node->sibling = child;\n            return;\n        }\n        node = node->sibling;\n    }\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/acmp.cc"
                },
                "region": {
                  "startLine": 98,
                  "startColumn": 3,
                  "endLine": 98,
                  "endColumn": 9,
                  "snippet": {
                    "text": "        return;\n    }\n\n    node = parent->child;\n    for (;;) {\n        if (node == child) return;\n        if (node->sibling == NULL) {\n",
                    "rendered": {
                      "text": "        return;\n    }\n\n    node = parent->child;\n    for (;;) {\n        if (node == child) return;\n        if (node->sibling == NULL) {\n",
                      "markdown": "`        return;\n    }\n\n    node = parent->child;\n    for (;;) {\n        if (node == child) return;\n        if (node->sibling == NULL) {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/acmp.cc"
                },
                "region": {
                  "startLine": 87,
                  "startColumn": 7,
                  "endLine": 87,
                  "endColumn": 13,
                  "snippet": {
                    "text": "}\n\n/**\n * Adds node to parent node, if it is not already there\n */\nstatic void acmp_add_node_to_parent(acmp_node_t *parent, acmp_node_t *child) {\n    acmp_node_t *node = NULL;\n",
                    "rendered": {
                      "text": "}\n\n/**\n * Adds node to parent node, if it is not already there\n */\nstatic void acmp_add_node_to_parent(acmp_node_t *parent, acmp_node_t *child) {\n    acmp_node_t *node = NULL;\n",
                      "markdown": "`}\n\n/**\n * Adds node to parent node, if it is not already there\n */\nstatic void acmp_add_node_to_parent(acmp_node_t *parent, acmp_node_t *child) {\n    acmp_node_t *node = NULL;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/acmp.cc"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 7,
                  "endLine": 81,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    if (node == NULL) return NULL;\n    for (;;) {\n        if (node->letter == ucs_code) return node;\n        node = node->sibling;\n        if (node == NULL) return NULL;\n    }\n}\n",
                    "rendered": {
                      "text": "    if (node == NULL) return NULL;\n    for (;;) {\n        if (node->letter == ucs_code) return node;\n        node = node->sibling;\n        if (node == NULL) return NULL;\n    }\n}\n",
                      "markdown": "`    if (node == NULL) return NULL;\n    for (;;) {\n        if (node->letter == ucs_code) return node;\n        node = node->sibling;\n        if (node == NULL) return NULL;\n    }\n}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/acmp.cc"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 10,
                  "endLine": 74,
                  "endColumn": 16,
                  "snippet": {
                    "text": "}\n\n/**\n * Returns node with given letter, or null if not found\n */\nstatic acmp_node_t *acmp_child_for_code(acmp_node_t *parent_node, long ucs_code) {\n    acmp_node_t *node = parent_node->child;\n",
                    "rendered": {
                      "text": "}\n\n/**\n * Returns node with given letter, or null if not found\n */\nstatic acmp_node_t *acmp_child_for_code(acmp_node_t *parent_node, long ucs_code) {\n    acmp_node_t *node = parent_node->child;\n",
                      "markdown": "`}\n\n/**\n * Returns node with given letter, or null if not found\n */\nstatic acmp_node_t *acmp_child_for_code(acmp_node_t *parent_node, long ucs_code) {\n    acmp_node_t *node = parent_node->child;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rule_script.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/Makefile.am"
                },
                "region": {
                  "startLine": 245,
                  "startColumn": 7,
                  "endLine": 245,
                  "endColumn": 13,
                  "snippet": {
                    "text": "\nUTILS = \\\n\tutils/acmp.cc \\\n\tutils/base64.cc \\\n\tutils/decode.cc \\\n\tutils/geo_lookup.cc \\\n\tutils/https_client.cc \\\n",
                    "rendered": {
                      "text": "\nUTILS = \\\n\tutils/acmp.cc \\\n\tutils/base64.cc \\\n\tutils/decode.cc \\\n\tutils/geo_lookup.cc \\\n\tutils/https_client.cc \\\n",
                      "markdown": "`\nUTILS = \\\n\tutils/acmp.cc \\\n\tutils/base64.cc \\\n\tutils/decode.cc \\\n\tutils/geo_lookup.cc \\\n\tutils/https_client.cc \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000703"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Username)",
            "id": "BD000703"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/headers/modsecurity/modsecurity.h"
                },
                "region": {
                  "startLine": 310,
                  "startColumn": 18,
                  "endLine": 310,
                  "endColumn": 24,
                  "snippet": {
                    "text": "\n private:\n    std::string m_connector;\n    std::string m_whoami;\n    ModSecLogCb m_logCb;\n    int m_logProperties;\n};\n",
                    "rendered": {
                      "text": "\n private:\n    std::string m_connector;\n    std::string m_whoami;\n    ModSecLogCb m_logCb;\n    int m_logProperties;\n};\n",
                      "markdown": "`\n private:\n    std::string m_connector;\n    std::string m_whoami;\n    ModSecLogCb m_logCb;\n    int m_logProperties;\n};\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/data/match.lua"
                },
                "region": {
                  "startLine": 2,
                  "startColumn": 15,
                  "endLine": 2,
                  "endColumn": 23,
                  "snippet": {
                    "text": "function main()\n    return \"Lua script matched.\";\nend\n",
                    "rendered": {
                      "text": "function main()\n    return \"Lua script matched.\";\nend\n",
                      "markdown": "`function main()\n    return \"Lua script matched.\";\nend\n`"
                    }
                  },
                  "sourceLanguage": "lua"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/data/match-log.lua"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 15,
                  "endLine": 3,
                  "endColumn": 23,
                  "snippet": {
                    "text": "function main()\n    m.log(9, \"echo 123\");\n    return \"Lua script matched.\";\nend\n",
                    "rendered": {
                      "text": "function main()\n    m.log(9, \"echo 123\");\n    return \"Lua script matched.\";\nend\n",
                      "markdown": "`function main()\n    m.log(9, \"echo 123\");\n    return \"Lua script matched.\";\nend\n`"
                    }
                  },
                  "sourceLanguage": "lua"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/data/script.lua"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 39,
                  "endLine": 5,
                  "endColumn": 43,
                  "snippet": {
                    "text": "-- point, as below.\nfunction main()\n    -- Log something at level 1. Normally you shouldn't be\n    -- logging anything, especially not at level 1, but this is\n    -- just to show you can. Useful for debugging.\n    m.log(1, \"Hello world!\");\n\n",
                    "rendered": {
                      "text": "-- point, as below.\nfunction main()\n    -- Log something at level 1. Normally you shouldn't be\n    -- logging anything, especially not at level 1, but this is\n    -- just to show you can. Useful for debugging.\n    m.log(1, \"Hello world!\");\n\n",
                      "markdown": "`-- point, as below.\nfunction main()\n    -- Log something at level 1. Normally you shouldn't be\n    -- logging anything, especially not at level 1, but this is\n    -- just to show you can. Useful for debugging.\n    m.log(1, \"Hello world!\");\n\n`"
                    }
                  },
                  "sourceLanguage": "lua"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/data/script.lua"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 20,
                  "endLine": 4,
                  "endColumn": 24,
                  "snippet": {
                    "text": "-- Your script must define the main entry\n-- point, as below.\nfunction main()\n    -- Log something at level 1. Normally you shouldn't be\n    -- logging anything, especially not at level 1, but this is\n    -- just to show you can. Useful for debugging.\n    m.log(1, \"Hello world!\");\n",
                    "rendered": {
                      "text": "-- Your script must define the main entry\n-- point, as below.\nfunction main()\n    -- Log something at level 1. Normally you shouldn't be\n    -- logging anything, especially not at level 1, but this is\n    -- just to show you can. Useful for debugging.\n    m.log(1, \"Hello world!\");\n",
                      "markdown": "`-- Your script must define the main entry\n-- point, as below.\nfunction main()\n    -- Log something at level 1. Normally you shouldn't be\n    -- logging anything, especially not at level 1, but this is\n    -- just to show you can. Useful for debugging.\n    m.log(1, \"Hello world!\");\n`"
                    }
                  },
                  "sourceLanguage": "lua"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/data/script.lua"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 7,
                  "endLine": 1,
                  "endColumn": 15,
                  "snippet": {
                    "text": "-- Your script must define the main entry\n-- point, as below.\nfunction main()\n    -- Log something at level 1. Normally you shouldn't be\n",
                    "rendered": {
                      "text": "-- Your script must define the main entry\n-- point, as below.\nfunction main()\n    -- Log something at level 1. Normally you shouldn't be\n",
                      "markdown": "`-- Your script must define the main entry\n-- point, as below.\nfunction main()\n    -- Log something at level 1. Normally you shouldn't be\n`"
                    }
                  },
                  "sourceLanguage": "lua"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-suite.in"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 45,
                  "endLine": 26,
                  "endColumn": 51,
                  "snippet": {
                    "text": "TESTS+=test/test-cases/regression/actions.json\nTESTS+=test/test-cases/regression/action-skip.json\nTESTS+=test/test-cases/regression/action-tag.json\nTESTS+=test/test-cases/regression/action-tnf-base64.json\nTESTS+=test/test-cases/regression/action-xmlns.json\nTESTS+=test/test-cases/regression/auditlog.json\nTESTS+=test/test-cases/regression/collection-case-insensitive.json\n",
                    "rendered": {
                      "text": "TESTS+=test/test-cases/regression/actions.json\nTESTS+=test/test-cases/regression/action-skip.json\nTESTS+=test/test-cases/regression/action-tag.json\nTESTS+=test/test-cases/regression/action-tnf-base64.json\nTESTS+=test/test-cases/regression/action-xmlns.json\nTESTS+=test/test-cases/regression/auditlog.json\nTESTS+=test/test-cases/regression/collection-case-insensitive.json\n",
                      "markdown": "`TESTS+=test/test-cases/regression/actions.json\nTESTS+=test/test-cases/regression/action-skip.json\nTESTS+=test/test-cases/regression/action-tag.json\nTESTS+=test/test-cases/regression/action-tnf-base64.json\nTESTS+=test/test-cases/regression/action-xmlns.json\nTESTS+=test/test-cases/regression/auditlog.json\nTESTS+=test/test-cases/regression/collection-case-insensitive.json\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-suite.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\ncd test 1> /dev/null\n\nlength=$(($#-1))\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\ncd test 1> /dev/null\n\nlength=$(($#-1))\n",
                      "markdown": "`#!/usr/bin/env bash\n\ncd test 1> /dev/null\n\nlength=$(($#-1))\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-suite.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\ncd test 1> /dev/null\n\nlength=$(($#-1))\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\ncd test 1> /dev/null\n\nlength=$(($#-1))\n",
                      "markdown": "`#!/usr/bin/env bash\n\ncd test 1> /dev/null\n\nlength=$(($#-1))\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/ends_with.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/gsblookup.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/rbl.h"
                },
                "region": {
                  "startLine": 101,
                  "startColumn": 18,
                  "endLine": 101,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n private:\n    std::string m_service;\n    bool m_demandsPassword;\n    RblProvider m_provider;\n};\n\n",
                    "rendered": {
                      "text": "\n private:\n    std::string m_service;\n    bool m_demandsPassword;\n    RblProvider m_provider;\n};\n\n",
                      "markdown": "`\n private:\n    std::string m_service;\n    bool m_demandsPassword;\n    RblProvider m_provider;\n};\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/rbl.h"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 21,
                  "endLine": 76,
                  "endColumn": 29,
                  "snippet": {
                    "text": "        m_service = m_string->evaluate(); // cppcheck-suppress useInitializationList\n        if (m_service.find(\"httpbl.org\") != std::string::npos)\n        {\n            m_demandsPassword = true;\n            m_provider = RblProvider::httpbl;\n            } else if (m_service.find(\"uribl.com\") != std::string::npos) {\n                m_provider = RblProvider::uribl;\n",
                    "rendered": {
                      "text": "        m_service = m_string->evaluate(); // cppcheck-suppress useInitializationList\n        if (m_service.find(\"httpbl.org\") != std::string::npos)\n        {\n            m_demandsPassword = true;\n            m_provider = RblProvider::httpbl;\n            } else if (m_service.find(\"uribl.com\") != std::string::npos) {\n                m_provider = RblProvider::uribl;\n",
                      "markdown": "`        m_service = m_string->evaluate(); // cppcheck-suppress useInitializationList\n        if (m_service.find(\"httpbl.org\") != std::string::npos)\n        {\n            m_demandsPassword = true;\n            m_provider = RblProvider::httpbl;\n            } else if (m_service.find(\"uribl.com\") != std::string::npos) {\n                m_provider = RblProvider::uribl;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/rbl.h"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 17,
                  "endLine": 70,
                  "endColumn": 25,
                  "snippet": {
                    "text": "    /** @ingroup ModSecurity_Operator */\n    explicit Rbl(std::unique_ptr<RunTimeString> param)\n        : m_service(),\n        m_demandsPassword(false),\n        m_provider(RblProvider::UnknownProvider),\n        Operator(\"Rbl\", std::move(param)) {\n        m_service = m_string->evaluate(); // cppcheck-suppress useInitializationList\n",
                    "rendered": {
                      "text": "    /** @ingroup ModSecurity_Operator */\n    explicit Rbl(std::unique_ptr<RunTimeString> param)\n        : m_service(),\n        m_demandsPassword(false),\n        m_provider(RblProvider::UnknownProvider),\n        Operator(\"Rbl\", std::move(param)) {\n        m_service = m_string->evaluate(); // cppcheck-suppress useInitializationList\n",
                      "markdown": "`    /** @ingroup ModSecurity_Operator */\n    explicit Rbl(std::unique_ptr<RunTimeString> param)\n        : m_service(),\n        m_demandsPassword(false),\n        m_provider(RblProvider::UnknownProvider),\n        Operator(\"Rbl\", std::move(param)) {\n        m_service = m_string->evaluate(); // cppcheck-suppress useInitializationList\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/verify_ssn.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/within.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/audit_log/writer/writer.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/audit_log/writer/parallel.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/audit_log/writer/serial.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/audit_log/writer/https.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/audit_log/audit_log.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/ctl/audit_engine.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2022 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2022 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2022 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/ctl/rule_remove_by_tag.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/ctl/request_body_access.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/base64_encode.cc"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 19,
                  "endLine": 26,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\nbool Base64Encode::transform(std::string &value, const Transaction *trans) const {\n    if (value.empty()) return false;\n    value = Utils::Base64::encode(value);\n    return true;\n}\n\n",
                    "rendered": {
                      "text": "\nbool Base64Encode::transform(std::string &value, const Transaction *trans) const {\n    if (value.empty()) return false;\n    value = Utils::Base64::encode(value);\n    return true;\n}\n\n",
                      "markdown": "`\nbool Base64Encode::transform(std::string &value, const Transaction *trans) const {\n    if (value.empty()) return false;\n    value = Utils::Base64::encode(value);\n    return true;\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/base64_encode.cc"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 20,
                  "endLine": 18,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n#include \"base64_encode.h\"\n\n#include \"src/utils/base64.h\"\n\n\nnamespace modsecurity::actions::transformations {\n",
                    "rendered": {
                      "text": "\n#include \"base64_encode.h\"\n\n#include \"src/utils/base64.h\"\n\n\nnamespace modsecurity::actions::transformations {\n",
                      "markdown": "`\n#include \"base64_encode.h\"\n\n#include \"src/utils/base64.h\"\n\n\nnamespace modsecurity::actions::transformations {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/base64_encode.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/cmd_line.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/lower_case.h"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 38,
                  "endLine": 37,
                  "endColumn": 42,
                  "snippet": {
                    "text": "\n        std::transform(val.begin(), val.end(), val.data(),\n                       [&](auto c) { \n                            const auto nc = op(c);\n                            if(nc != c) changed = true; \n                            return nc; });\n\n",
                    "rendered": {
                      "text": "\n        std::transform(val.begin(), val.end(), val.data(),\n                       [&](auto c) { \n                            const auto nc = op(c);\n                            if(nc != c) changed = true; \n                            return nc; });\n\n",
                      "markdown": "`\n        std::transform(val.begin(), val.end(), val.data(),\n                       [&](auto c) { \n                            const auto nc = op(c);\n                            if(nc != c) changed = true; \n                            return nc; });\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/md5.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/set_uid.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/phase.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/xmlns.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/variables/time_mon.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/variables/rule.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/shared_files.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/shared_files.cc"
                },
                "region": {
                  "startLine": 117,
                  "startColumn": 10,
                  "endLine": 117,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\n    //Exclusively lock whole file\n#ifndef WIN32\n    struct flock lock {};\n    lock.l_start = lock.l_len = lock.l_whence = 0;\n    lock.l_type = F_WRLCK;\n    fcntl(fileno(it->second.fp), F_SETLKW, &lock);\n",
                    "rendered": {
                      "text": "\n    //Exclusively lock whole file\n#ifndef WIN32\n    struct flock lock {};\n    lock.l_start = lock.l_len = lock.l_whence = 0;\n    lock.l_type = F_WRLCK;\n    fcntl(fileno(it->second.fp), F_SETLKW, &lock);\n",
                      "markdown": "`\n    //Exclusively lock whole file\n#ifndef WIN32\n    struct flock lock {};\n    lock.l_start = lock.l_len = lock.l_whence = 0;\n    lock.l_type = F_WRLCK;\n    fcntl(fileno(it->second.fp), F_SETLKW, &lock);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/base64.cc"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 5,
                  "endLine": 72,
                  "endColumn": 11,
                  "snippet": {
                    "text": "}\n\n\nvoid Base64::decode_forgiven_engine(unsigned char *plain_text,\n        size_t plain_text_size, size_t *aiming_size,\n        const unsigned char *encoded, size_t input_len) {\n    int i = 0, j = 0, k = 0;\n",
                    "rendered": {
                      "text": "}\n\n\nvoid Base64::decode_forgiven_engine(unsigned char *plain_text,\n        size_t plain_text_size, size_t *aiming_size,\n        const unsigned char *encoded, size_t input_len) {\n    int i = 0, j = 0, k = 0;\n",
                      "markdown": "`}\n\n\nvoid Base64::decode_forgiven_engine(unsigned char *plain_text,\n        size_t plain_text_size, size_t *aiming_size,\n        const unsigned char *encoded, size_t input_len) {\n    int i = 0, j = 0, k = 0;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/base64.cc"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 12,
                  "endLine": 67,
                  "endColumn": 18,
                  "snippet": {
                    "text": "}\n\n\nstd::string Base64::decode_forgiven(const std::string& data) {\n    return base64Helper(data.c_str(), data.size(), decode_forgiven_engine);\n}\n\n",
                    "rendered": {
                      "text": "}\n\n\nstd::string Base64::decode_forgiven(const std::string& data) {\n    return base64Helper(data.c_str(), data.size(), decode_forgiven_engine);\n}\n\n",
                      "markdown": "`}\n\n\nstd::string Base64::decode_forgiven(const std::string& data) {\n    return base64Helper(data.c_str(), data.size(), decode_forgiven_engine);\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/base64.cc"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 12,
                  "endLine": 62,
                  "endColumn": 18,
                  "snippet": {
                    "text": "}\n\n\nstd::string Base64::decode(const std::string& data) {\n    return base64Helper(data.c_str(), strlen(data.c_str()), mbedtls_base64_decode);\n}\n\n",
                    "rendered": {
                      "text": "}\n\n\nstd::string Base64::decode(const std::string& data) {\n    return base64Helper(data.c_str(), strlen(data.c_str()), mbedtls_base64_decode);\n}\n\n",
                      "markdown": "`}\n\n\nstd::string Base64::decode(const std::string& data) {\n    return base64Helper(data.c_str(), strlen(data.c_str()), mbedtls_base64_decode);\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/base64.cc"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 12,
                  "endLine": 53,
                  "endColumn": 18,
                  "snippet": {
                    "text": "}\n\n\nstd::string Base64::decode(const std::string& data, bool forgiven) {\n    if (forgiven) {\n        return decode_forgiven(data);\n    }\n",
                    "rendered": {
                      "text": "}\n\n\nstd::string Base64::decode(const std::string& data, bool forgiven) {\n    if (forgiven) {\n        return decode_forgiven(data);\n    }\n",
                      "markdown": "`}\n\n\nstd::string Base64::decode(const std::string& data, bool forgiven) {\n    if (forgiven) {\n        return decode_forgiven(data);\n    }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/base64.cc"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 12,
                  "endLine": 48,
                  "endColumn": 18,
                  "snippet": {
                    "text": "namespace Utils {\n\n\nstd::string Base64::encode(const std::string& data) {\n    return base64Helper(data.c_str(), data.size(), mbedtls_base64_encode);\n}\n\n",
                    "rendered": {
                      "text": "namespace Utils {\n\n\nstd::string Base64::encode(const std::string& data) {\n    return base64Helper(data.c_str(), data.size(), mbedtls_base64_encode);\n}\n\n",
                      "markdown": "`namespace Utils {\n\n\nstd::string Base64::encode(const std::string& data) {\n    return base64Helper(data.c_str(), data.size(), mbedtls_base64_encode);\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/base64.cc"
                },
                "region": {
                  "startLine": 24,
                  "startColumn": 18,
                  "endLine": 24,
                  "endColumn": 24,
                  "snippet": {
                    "text": "#include <fstream>\n#include <iostream>\n\n#include \"mbedtls/base64.h\"\n\ntemplate<typename Operation>\ninline std::string base64Helper(const char *data, const unsigned int len, Operation op) {\n",
                    "rendered": {
                      "text": "#include <fstream>\n#include <iostream>\n\n#include \"mbedtls/base64.h\"\n\ntemplate<typename Operation>\ninline std::string base64Helper(const char *data, const unsigned int len, Operation op) {\n",
                      "markdown": "`#include <fstream>\n#include <iostream>\n\n#include \"mbedtls/base64.h\"\n\ntemplate<typename Operation>\ninline std::string base64Helper(const char *data, const unsigned int len, Operation op) {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/base64.cc"
                },
                "region": {
                  "startLine": 16,
                  "startColumn": 20,
                  "endLine": 16,
                  "endColumn": 26,
                  "snippet": {
                    "text": " *\n */\n\n#include \"src/utils/base64.h\"\n\n#include <string.h>\n\n",
                    "rendered": {
                      "text": " *\n */\n\n#include \"src/utils/base64.h\"\n\n#include <string.h>\n\n",
                      "markdown": "` *\n */\n\n#include \"src/utils/base64.h\"\n\n#include <string.h>\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/base64.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rules_set.cc"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 29,
                  "endLine": 155,
                  "endColumn": 34,
                  "snippet": {
                    "text": "            ms_dbg_a(t, 9, \"Skipped rule id '\" + rule->getReference() \\\n                + \"' as request trough the utilization of an `allow' action.\");\n        } else {\n            Rule *base = rule.get();\n            RuleWithActions *ruleWithActions = dynamic_cast<RuleWithActions *>(base);\n            // FIXME: Those should be treated inside the rule itself\n            if (ruleWithActions && m_exceptions.contains(ruleWithActions->m_ruleId)) {\n",
                    "rendered": {
                      "text": "            ms_dbg_a(t, 9, \"Skipped rule id '\" + rule->getReference() \\\n                + \"' as request trough the utilization of an `allow' action.\");\n        } else {\n            Rule *base = rule.get();\n            RuleWithActions *ruleWithActions = dynamic_cast<RuleWithActions *>(base);\n            // FIXME: Those should be treated inside the rule itself\n            if (ruleWithActions && m_exceptions.contains(ruleWithActions->m_ruleId)) {\n",
                      "markdown": "`            ms_dbg_a(t, 9, \"Skipped rule id '\" + rule->getReference() \\\n                + \"' as request trough the utilization of an `allow' action.\");\n        } else {\n            Rule *base = rule.get();\n            RuleWithActions *ruleWithActions = dynamic_cast<RuleWithActions *>(base);\n            // FIXME: Those should be treated inside the rule itself\n            if (ruleWithActions && m_exceptions.contains(ruleWithActions->m_ruleId)) {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rules_set.cc"
                },
                "region": {
                  "startLine": 136,
                  "startColumn": 47,
                  "endLine": 136,
                  "endColumn": 51,
                  "snippet": {
                    "text": "    //}\n\n    for (int i = 0; i < rules->size(); i++) {\n        // FIXME: This is not meant to be here. At the end of this refactoring,\n        //        the shared pointer won't be used.\n        auto rule = rules->at(i);\n        if (t->isInsideAMarker() && !rule->isMarker()) {\n",
                    "rendered": {
                      "text": "    //}\n\n    for (int i = 0; i < rules->size(); i++) {\n        // FIXME: This is not meant to be here. At the end of this refactoring,\n        //        the shared pointer won't be used.\n        auto rule = rules->at(i);\n        if (t->isInsideAMarker() && !rule->isMarker()) {\n",
                      "markdown": "`    //}\n\n    for (int i = 0; i < rules->size(); i++) {\n        // FIXME: This is not meant to be here. At the end of this refactoring,\n        //        the shared pointer won't be used.\n        auto rule = rules->at(i);\n        if (t->isInsideAMarker() && !rule->isMarker()) {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rules_set.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rule_unconditional.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rule.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/headers/modsecurity/rules.h"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 67,
                  "endLine": 71,
                  "endColumn": 72,
                  "snippet": {
                    "text": "    }\n\n    bool insert(std::shared_ptr<Rule> rule, const std::vector<int64_t> *ids, std::ostringstream *err) {\n        RuleWithOperator *r = dynamic_cast<RuleWithOperator *>(rule.get());\n        if (r && ids != nullptr && std::binary_search(ids->begin(), ids->end(), r->m_ruleId)) {\n            if (err != nullptr) {\n                *err << \"Rule id: \" << std::to_string(r->m_ruleId) \\\n",
                    "rendered": {
                      "text": "    }\n\n    bool insert(std::shared_ptr<Rule> rule, const std::vector<int64_t> *ids, std::ostringstream *err) {\n        RuleWithOperator *r = dynamic_cast<RuleWithOperator *>(rule.get());\n        if (r && ids != nullptr && std::binary_search(ids->begin(), ids->end(), r->m_ruleId)) {\n            if (err != nullptr) {\n                *err << \"Rule id: \" << std::to_string(r->m_ruleId) \\\n",
                      "markdown": "`    }\n\n    bool insert(std::shared_ptr<Rule> rule, const std::vector<int64_t> *ids, std::ostringstream *err) {\n        RuleWithOperator *r = dynamic_cast<RuleWithOperator *>(rule.get());\n        if (r && ids != nullptr && std::binary_search(ids->begin(), ids->end(), r->m_ruleId)) {\n            if (err != nullptr) {\n                *err << \"Rule id: \" << std::to_string(r->m_ruleId) \\\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/headers/modsecurity/rules.h"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 81,
                  "endLine": 53,
                  "endColumn": 86,
                  "snippet": {
                    "text": "    int append(Rules *from, const std::vector<int64_t> &ids, std::ostringstream *err) {\n         size_t j = 0;\n         for (; j < from->size(); j++) {\n            RuleWithOperator *rule = dynamic_cast<RuleWithOperator *>(from->at(j).get());\n            if (rule && std::binary_search(ids.begin(), ids.end(), rule->m_ruleId)) {\n                 if (err != NULL) {\n                     *err << \"Rule id: \" << std::to_string(rule->m_ruleId) \\\n",
                    "rendered": {
                      "text": "    int append(Rules *from, const std::vector<int64_t> &ids, std::ostringstream *err) {\n         size_t j = 0;\n         for (; j < from->size(); j++) {\n            RuleWithOperator *rule = dynamic_cast<RuleWithOperator *>(from->at(j).get());\n            if (rule && std::binary_search(ids.begin(), ids.end(), rule->m_ruleId)) {\n                 if (err != NULL) {\n                     *err << \"Rule id: \" << std::to_string(rule->m_ruleId) \\\n",
                      "markdown": "`    int append(Rules *from, const std::vector<int64_t> &ids, std::ostringstream *err) {\n         size_t j = 0;\n         for (; j < from->size(); j++) {\n            RuleWithOperator *rule = dynamic_cast<RuleWithOperator *>(from->at(j).get());\n            if (rule && std::binary_search(ids.begin(), ids.end(), rule->m_ruleId)) {\n                 if (err != NULL) {\n                     *err << \"Rule id: \" << std::to_string(rule->m_ruleId) \\\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/examples/simple_example_using_c/basic_rules.conf"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 2,
                  "endLine": 61,
                  "endColumn": 65,
                  "snippet": {
                    "text": "\n# By default be strict with what we accept in the multipart/form-data\n# request body. If the rule below proves to be too strict for your\n# environment consider changing it to detection-only. You are encouraged\n# _not_ to remove it altogether.\n#\nSecRule MULTIPART_STRICT_ERROR \"!@eq 0\" \\\n",
                    "rendered": {
                      "text": "\n# By default be strict with what we accept in the multipart/form-data\n# request body. If the rule below proves to be too strict for your\n# environment consider changing it to detection-only. You are encouraged\n# _not_ to remove it altogether.\n#\nSecRule MULTIPART_STRICT_ERROR \"!@eq 0\" \\\n",
                      "markdown": "`\n# By default be strict with what we accept in the multipart/form-data\n# request body. If the rule below proves to be too strict for your\n# environment consider changing it to detection-only. You are encouraged\n# _not_ to remove it altogether.\n#\nSecRule MULTIPART_STRICT_ERROR \"!@eq 0\" \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/examples/simple_example_using_c/basic_rules.conf"
                },
                "region": {
                  "startLine": 154,
                  "startColumn": 16,
                  "endLine": 154,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\n# By default, only keep the files that were determined to be unusual\n# in some way (by an external inspection script). For this to work you\n# will also need at least one file inspection rule.\n#\n#SecUploadKeepFiles RelevantOnly\n\n",
                    "rendered": {
                      "text": "\n# By default, only keep the files that were determined to be unusual\n# in some way (by an external inspection script). For this to work you\n# will also need at least one file inspection rule.\n#\n#SecUploadKeepFiles RelevantOnly\n\n",
                      "markdown": "`\n# By default, only keep the files that were determined to be unusual\n# in some way (by an external inspection script). For this to work you\n# will also need at least one file inspection rule.\n#\n#SecUploadKeepFiles RelevantOnly\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/examples/simple_example_using_c/basic_rules.conf"
                },
                "region": {
                  "startLine": 220,
                  "startColumn": 48,
                  "endLine": 220,
                  "endColumn": 53,
                  "snippet": {
                    "text": "# Improve the quality of ModSecurity by sharing information about your\n# current ModSecurity version and dependencies versions.\n# The following information will be shared: ModSecurity version,\n# Web Server version, APR version, PCRE version, Lua version, Libxml2\n# version, Anonymous unique id for host.\nSecStatusEngine On\n\n",
                    "rendered": {
                      "text": "# Improve the quality of ModSecurity by sharing information about your\n# current ModSecurity version and dependencies versions.\n# The following information will be shared: ModSecurity version,\n# Web Server version, APR version, PCRE version, Lua version, Libxml2\n# version, Anonymous unique id for host.\nSecStatusEngine On\n\n",
                      "markdown": "`# Improve the quality of ModSecurity by sharing information about your\n# current ModSecurity version and dependencies versions.\n# The following information will be shared: ModSecurity version,\n# Web Server version, APR version, PCRE version, Lua version, Libxml2\n# version, Anonymous unique id for host.\nSecStatusEngine On\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/examples/simple_example_using_c/basic_rules.conf"
                },
                "region": {
                  "startLine": 200,
                  "startColumn": 25,
                  "endLine": 200,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n# Use the most commonly used application/x-www-form-urlencoded parameter\n# separator. There's probably only one application somewhere that uses\n# something else so don't expect to change this value.\n#\nSecArgumentSeparator &\n\n",
                    "rendered": {
                      "text": "\n# Use the most commonly used application/x-www-form-urlencoded parameter\n# separator. There's probably only one application somewhere that uses\n# something else so don't expect to change this value.\n#\nSecArgumentSeparator &\n\n",
                      "markdown": "`\n# Use the most commonly used application/x-www-form-urlencoded parameter\n# separator. There's probably only one application somewhere that uses\n# something else so don't expect to change this value.\n#\nSecArgumentSeparator &\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/examples/simple_example_using_c/basic_rules.conf"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 34,
                  "endLine": 76,
                  "endColumn": 3,
                  "snippet": {
                    "text": "HF %{MULTIPART_HEADER_FOLDING}, \\\nLF %{MULTIPART_LF_LINE}, \\\nSM %{MULTIPART_MISSING_SEMICOLON}, \\\nIQ %{MULTIPART_INVALID_QUOTING}, \\\nIP %{MULTIPART_INVALID_PART}, \\\nIH %{MULTIPART_INVALID_HEADER_FOLDING}, \\\nFL %{MULTIPART_FILE_LIMIT_EXCEEDED}'\"\n\n",
                    "rendered": {
                      "text": "HF %{MULTIPART_HEADER_FOLDING}, \\\nLF %{MULTIPART_LF_LINE}, \\\nSM %{MULTIPART_MISSING_SEMICOLON}, \\\nIQ %{MULTIPART_INVALID_QUOTING}, \\\nIP %{MULTIPART_INVALID_PART}, \\\nIH %{MULTIPART_INVALID_HEADER_FOLDING}, \\\nFL %{MULTIPART_FILE_LIMIT_EXCEEDED}'\"\n\n",
                      "markdown": "`HF %{MULTIPART_HEADER_FOLDING}, \\\nLF %{MULTIPART_LF_LINE}, \\\nSM %{MULTIPART_MISSING_SEMICOLON}, \\\nIQ %{MULTIPART_INVALID_QUOTING}, \\\nIP %{MULTIPART_INVALID_PART}, \\\nIH %{MULTIPART_INVALID_HEADER_FOLDING}, \\\nFL %{MULTIPART_FILE_LIMIT_EXCEEDED}'\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/examples/simple_example_using_c/test-valgrind.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\nvalgrind --tool=massif\nvalgrind --show-leak-kinds=all --leak-check=full ./test\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\nvalgrind --tool=massif\nvalgrind --show-leak-kinds=all --leak-check=full ./test\n",
                      "markdown": "`#!/usr/bin/env bash\n\nvalgrind --tool=massif\nvalgrind --show-leak-kinds=all --leak-check=full ./test\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/examples/simple_example_using_c/test-valgrind.sh"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 14,
                  "endLine": 2,
                  "snippet": {
                    "text": "#!/usr/bin/env bash\n\nvalgrind --tool=massif\nvalgrind --show-leak-kinds=all --leak-check=full ./test\n",
                    "rendered": {
                      "text": "#!/usr/bin/env bash\n\nvalgrind --tool=massif\nvalgrind --show-leak-kinds=all --leak-check=full ./test\n",
                      "markdown": "`#!/usr/bin/env bash\n\nvalgrind --tool=massif\nvalgrind --show-leak-kinds=all --leak-check=full ./test\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/examples/using_bodies_in_chunks/simple_request.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/examples/using_bodies_in_chunks/simple_request.cc"
                },
                "region": {
                  "startLine": 243,
                  "startColumn": 12,
                  "endLine": 243,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    process_intervention(modsecTransaction);\n\n    /**\n     * It is time to let modsec aware of the response body\n     *\n     */\n    modsecTransaction->appendResponseBody(\n",
                    "rendered": {
                      "text": "    process_intervention(modsecTransaction);\n\n    /**\n     * It is time to let modsec aware of the response body\n     *\n     */\n    modsecTransaction->appendResponseBody(\n",
                      "markdown": "`    process_intervention(modsecTransaction);\n\n    /**\n     * It is time to let modsec aware of the response body\n     *\n     */\n    modsecTransaction->appendResponseBody(\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/examples/multiprocess_c/basic_rules.conf"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 7,
                  "endLine": 12,
                  "endColumn": 11,
                  "snippet": {
                    "text": "SecRule REQUEST_HEADERS:User-Agent \".*\" \"id:2,phase:2,setvar:ip.auth_attempt=+1\"\n\nSecRule ARGS:foo \"herewego\" \"id:3,phase:2,setvar:ip.foo=bar\"\nSecRule IP \"bar\" \"id:4,phase:2\"\nSecRule IP:auth_attempt \"bar\" \"id:5,phase:2\"\n\n",
                    "rendered": {
                      "text": "SecRule REQUEST_HEADERS:User-Agent \".*\" \"id:2,phase:2,setvar:ip.auth_attempt=+1\"\n\nSecRule ARGS:foo \"herewego\" \"id:3,phase:2,setvar:ip.foo=bar\"\nSecRule IP \"bar\" \"id:4,phase:2\"\nSecRule IP:auth_attempt \"bar\" \"id:5,phase:2\"\n\n",
                      "markdown": "`SecRule REQUEST_HEADERS:User-Agent \".*\" \"id:2,phase:2,setvar:ip.auth_attempt=+1\"\n\nSecRule ARGS:foo \"herewego\" \"id:3,phase:2,setvar:ip.foo=bar\"\nSecRule IP \"bar\" \"id:4,phase:2\"\nSecRule IP:auth_attempt \"bar\" \"id:5,phase:2\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/examples/multithread/multithread.cc"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 51,
                  "endLine": 57,
                  "endColumn": 56,
                  "snippet": {
                    "text": "    for (auto i = 0; i != threads.size(); ++i) {\n        threads[i] = std::thread(\n            [&modsec, &rules, i]() {\n                process_request(modsec.get(), rules.get(), i);\n            });\n    }\n\n",
                    "rendered": {
                      "text": "    for (auto i = 0; i != threads.size(); ++i) {\n        threads[i] = std::thread(\n            [&modsec, &rules, i]() {\n                process_request(modsec.get(), rules.get(), i);\n            });\n    }\n\n",
                      "markdown": "`    for (auto i = 0; i != threads.size(); ++i) {\n        threads[i] = std::thread(\n            [&modsec, &rules, i]() {\n                process_request(modsec.get(), rules.get(), i);\n            });\n    }\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/examples/multithread/multithread.cc"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 38,
                  "endLine": 57,
                  "endColumn": 43,
                  "snippet": {
                    "text": "    for (auto i = 0; i != threads.size(); ++i) {\n        threads[i] = std::thread(\n            [&modsec, &rules, i]() {\n                process_request(modsec.get(), rules.get(), i);\n            });\n    }\n\n",
                    "rendered": {
                      "text": "    for (auto i = 0; i != threads.size(); ++i) {\n        threads[i] = std::thread(\n            [&modsec, &rules, i]() {\n                process_request(modsec.get(), rules.get(), i);\n            });\n    }\n\n",
                      "markdown": "`    for (auto i = 0; i != threads.size(); ++i) {\n        threads[i] = std::thread(\n            [&modsec, &rules, i]() {\n                process_request(modsec.get(), rules.get(), i);\n            });\n    }\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/examples/multithread/basic_rules.conf"
                },
                "region": {
                  "startLine": 13,
                  "startColumn": 7,
                  "endLine": 13,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\nSecRule ARGS:foo \"@rx herewego\" \"id:4,phase:2,setvar:ip.foo=bar,expirevar:ip.foo=2\"\n#SecRule ARGS:foo \"@rx herewego\" \"id:4,phase:2,setvar:ip.foo=bar\"\nSecRule IP \"@rx bar\" \"id:5,phase:2,pass\"\nSecRule IP:auth_attempt \"@rx bar\" \"id:6,phase:2,pass\"\n",
                    "rendered": {
                      "text": "\nSecRule ARGS:foo \"@rx herewego\" \"id:4,phase:2,setvar:ip.foo=bar,expirevar:ip.foo=2\"\n#SecRule ARGS:foo \"@rx herewego\" \"id:4,phase:2,setvar:ip.foo=bar\"\nSecRule IP \"@rx bar\" \"id:5,phase:2,pass\"\nSecRule IP:auth_attempt \"@rx bar\" \"id:6,phase:2,pass\"\n",
                      "markdown": "`\nSecRule ARGS:foo \"@rx herewego\" \"id:4,phase:2,setvar:ip.foo=bar,expirevar:ip.foo=2\"\n#SecRule ARGS:foo \"@rx herewego\" \"id:4,phase:2,setvar:ip.foo=bar\"\nSecRule IP \"@rx bar\" \"id:5,phase:2,pass\"\nSecRule IP:auth_attempt \"@rx bar\" \"id:6,phase:2,pass\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/regression/config-include-bad.json"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 30,
                  "endLine": 31,
                  "endColumn": 34,
                  "snippet": {
                    "text": "  {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Include - missing at include\",\n    \"expected\":{\n      \"parser_error\": \"Rules error. File: test-cases/data/config_example-ops-include.txt. Line: 1. Column: 52. test-cases/data/config_example-not-exist.txt: Not able to open file.\"\n    },\n",
                    "rendered": {
                      "text": "  {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Include - missing at include\",\n    \"expected\":{\n      \"parser_error\": \"Rules error. File: test-cases/data/config_example-ops-include.txt. Line: 1. Column: 52. test-cases/data/config_example-not-exist.txt: Not able to open file.\"\n    },\n",
                      "markdown": "`  {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Include - missing at include\",\n    \"expected\":{\n      \"parser_error\": \"Rules error. File: test-cases/data/config_example-ops-include.txt. Line: 1. Column: 52. test-cases/data/config_example-not-exist.txt: Not able to open file.\"\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/regression/config-update-target-by-tag.json"
                },
                "region": {
                  "startLine": 205,
                  "startColumn": 77,
                  "endLine": 205,
                  "endColumn": 81,
                  "snippet": {
                    "text": "  {\n       \"enabled\":1,\n       \"version_min\":300000,\n       \"title\":\"SecRuleUpdateTargetByTag Test (6/6) Regex with match anchored at beginning of Subject\",\n       \"client\":{\n         \"ip\":\"200.249.12.31\",\n         \"port\":123\n",
                    "rendered": {
                      "text": "  {\n       \"enabled\":1,\n       \"version_min\":300000,\n       \"title\":\"SecRuleUpdateTargetByTag Test (6/6) Regex with match anchored at beginning of Subject\",\n       \"client\":{\n         \"ip\":\"200.249.12.31\",\n         \"port\":123\n",
                      "markdown": "`  {\n       \"enabled\":1,\n       \"version_min\":300000,\n       \"title\":\"SecRuleUpdateTargetByTag Test (6/6) Regex with match anchored at beginning of Subject\",\n       \"client\":{\n         \"ip\":\"200.249.12.31\",\n         \"port\":123\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/regression/config-update-target-by-tag.json"
                },
                "region": {
                  "startLine": 165,
                  "startColumn": 77,
                  "endLine": 165,
                  "endColumn": 81,
                  "snippet": {
                    "text": "  {\n       \"enabled\":1,\n       \"version_min\":300000,\n       \"title\":\"SecRuleUpdateTargetByTag Test (5/6) Regex with match anchored at beginning of Subject\",\n       \"client\":{\n         \"ip\":\"200.249.12.31\",\n         \"port\":123\n",
                    "rendered": {
                      "text": "  {\n       \"enabled\":1,\n       \"version_min\":300000,\n       \"title\":\"SecRuleUpdateTargetByTag Test (5/6) Regex with match anchored at beginning of Subject\",\n       \"client\":{\n         \"ip\":\"200.249.12.31\",\n         \"port\":123\n",
                      "markdown": "`  {\n       \"enabled\":1,\n       \"version_min\":300000,\n       \"title\":\"SecRuleUpdateTargetByTag Test (5/6) Regex with match anchored at beginning of Subject\",\n       \"client\":{\n         \"ip\":\"200.249.12.31\",\n         \"port\":123\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/regression/directive-sec_rule_script.json"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 62,
                  "endLine": 93,
                  "endColumn": 70,
                  "snippet": {
                    "text": "      \"audit_log\":\"\",\n      \"debug_log\":\"\",\n      \"error_log\":\"\",\n      \"parser_error\":\"Failed to load script: Failed to compile script \"\n    },\n    \"rules\":[\n      \"SecRuleEngine On\",\n",
                    "rendered": {
                      "text": "      \"audit_log\":\"\",\n      \"debug_log\":\"\",\n      \"error_log\":\"\",\n      \"parser_error\":\"Failed to load script: Failed to compile script \"\n    },\n    \"rules\":[\n      \"SecRuleEngine On\",\n",
                      "markdown": "`      \"audit_log\":\"\",\n      \"debug_log\":\"\",\n      \"error_log\":\"\",\n      \"parser_error\":\"Failed to load script: Failed to compile script \"\n    },\n    \"rules\":[\n      \"SecRuleEngine On\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/regression/directive-sec_rule_script.json"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 62,
                  "endLine": 44,
                  "endColumn": 70,
                  "snippet": {
                    "text": "      \"audit_log\":\"\",\n      \"debug_log\":\"\",\n      \"error_log\":\"\",\n      \"parser_error\":\"Failed to load script: Failed to compile script 'test-cases/data/match\"\n    },\n    \"rules\":[\n      \"SecRuleEngine On\",\n",
                    "rendered": {
                      "text": "      \"audit_log\":\"\",\n      \"debug_log\":\"\",\n      \"error_log\":\"\",\n      \"parser_error\":\"Failed to load script: Failed to compile script 'test-cases/data/match\"\n    },\n    \"rules\":[\n      \"SecRuleEngine On\",\n",
                      "markdown": "`      \"audit_log\":\"\",\n      \"debug_log\":\"\",\n      \"error_log\":\"\",\n      \"parser_error\":\"Failed to load script: Failed to compile script 'test-cases/data/match\"\n    },\n    \"rules\":[\n      \"SecRuleEngine On\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/ge.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/fuzzy_hash.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/validate_utf8_encoding.cc"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 24,
                  "endLine": 84,
                  "endColumn": 28,
                  "snippet": {
                    "text": "        if (c >= 0xF5) {\n            return UNICODE_ERROR_RESTRICTED_CHARACTER;\n        }\n        /* check we have at least four bytes */\n        if (length < 4) {\n            unicode_len = UNICODE_ERROR_CHARACTERS_MISSING;\n        } else if (((*(p_read + 1)) & 0xC0) != 0x80) {\n",
                    "rendered": {
                      "text": "        if (c >= 0xF5) {\n            return UNICODE_ERROR_RESTRICTED_CHARACTER;\n        }\n        /* check we have at least four bytes */\n        if (length < 4) {\n            unicode_len = UNICODE_ERROR_CHARACTERS_MISSING;\n        } else if (((*(p_read + 1)) & 0xC0) != 0x80) {\n",
                      "markdown": "`        if (c >= 0xF5) {\n            return UNICODE_ERROR_RESTRICTED_CHARACTER;\n        }\n        /* check we have at least four bytes */\n        if (length < 4) {\n            unicode_len = UNICODE_ERROR_CHARACTERS_MISSING;\n        } else if (((*(p_read + 1)) & 0xC0) != 0x80) {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/validate_utf8_encoding.cc"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 24,
                  "endLine": 63,
                  "endColumn": 28,
                  "snippet": {
                    "text": "        }\n    } else if ((c & 0xF0) == 0xE0) {\n        /* If first byte begins with binary 1110 it is three byte encoding */\n        /* check we have at least three bytes */\n        if (length < 3) {\n            unicode_len = UNICODE_ERROR_CHARACTERS_MISSING;\n        } else if (((*(p_read + 1)) & 0xC0) != 0x80) {\n",
                    "rendered": {
                      "text": "        }\n    } else if ((c & 0xF0) == 0xE0) {\n        /* If first byte begins with binary 1110 it is three byte encoding */\n        /* check we have at least three bytes */\n        if (length < 3) {\n            unicode_len = UNICODE_ERROR_CHARACTERS_MISSING;\n        } else if (((*(p_read + 1)) & 0xC0) != 0x80) {\n",
                      "markdown": "`        }\n    } else if ((c & 0xF0) == 0xE0) {\n        /* If first byte begins with binary 1110 it is three byte encoding */\n        /* check we have at least three bytes */\n        if (length < 3) {\n            unicode_len = UNICODE_ERROR_CHARACTERS_MISSING;\n        } else if (((*(p_read + 1)) & 0xC0) != 0x80) {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/validate_utf8_encoding.cc"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 24,
                  "endLine": 50,
                  "endColumn": 28,
                  "snippet": {
                    "text": "        return 1;\n    } else if ((c & 0xE0) == 0xC0) {\n        /* If first byte begins with binary 110 it is two byte encoding*/\n        /* check we have at least two bytes */\n        if (length < 2) {\n            unicode_len = UNICODE_ERROR_CHARACTERS_MISSING;\n        } else if (((*(p_read + 1)) & 0xC0) != 0x80) {\n",
                    "rendered": {
                      "text": "        return 1;\n    } else if ((c & 0xE0) == 0xC0) {\n        /* If first byte begins with binary 110 it is two byte encoding*/\n        /* check we have at least two bytes */\n        if (length < 2) {\n            unicode_len = UNICODE_ERROR_CHARACTERS_MISSING;\n        } else if (((*(p_read + 1)) & 0xC0) != 0x80) {\n",
                      "markdown": "`        return 1;\n    } else if ((c & 0xE0) == 0xC0) {\n        /* If first byte begins with binary 110 it is two byte encoding*/\n        /* check we have at least two bytes */\n        if (length < 2) {\n            unicode_len = UNICODE_ERROR_CHARACTERS_MISSING;\n        } else if (((*(p_read + 1)) & 0xC0) != 0x80) {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/validate_utf8_encoding.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/geo_lookup.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/validate_url_encoding.cc"
                },
                "region": {
                  "startLine": 109,
                  "startColumn": 60,
                  "endLine": 109,
                  "endColumn": 64,
                  "snippet": {
                    "text": "        default :\n            if (transaction) {\n                ms_dbg_a(transaction, 7, \"Invalid URL Encoding: Internal \" \\\n                    \"Error (rc = \" + std::to_string(rc) + \") at '\" +\n                    input + \"'\");\n                logOffset(ruleMessage, offset, input.size());\n            }\n",
                    "rendered": {
                      "text": "        default :\n            if (transaction) {\n                ms_dbg_a(transaction, 7, \"Invalid URL Encoding: Internal \" \\\n                    \"Error (rc = \" + std::to_string(rc) + \") at '\" +\n                    input + \"'\");\n                logOffset(ruleMessage, offset, input.size());\n            }\n",
                      "markdown": "`        default :\n            if (transaction) {\n                ms_dbg_a(transaction, 7, \"Invalid URL Encoding: Internal \" \\\n                    \"Error (rc = \" + std::to_string(rc) + \") at '\" +\n                    input + \"'\");\n                logOffset(ruleMessage, offset, input.size());\n            }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/validate_url_encoding.cc"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 47,
                  "endLine": 100,
                  "endColumn": 51,
                  "snippet": {
                    "text": "        case -3 :\n            if (transaction) {\n                ms_dbg_a(transaction, 7, \"Invalid URL Encoding: Not enough \" \\\n                \"characters at the end of input at '\" + input + \"'\");\n                logOffset(ruleMessage, offset, input.size());\n            }\n            res = true; /* Invalid match. */\n",
                    "rendered": {
                      "text": "        case -3 :\n            if (transaction) {\n                ms_dbg_a(transaction, 7, \"Invalid URL Encoding: Not enough \" \\\n                \"characters at the end of input at '\" + input + \"'\");\n                logOffset(ruleMessage, offset, input.size());\n            }\n            res = true; /* Invalid match. */\n",
                      "markdown": "`        case -3 :\n            if (transaction) {\n                ms_dbg_a(transaction, 7, \"Invalid URL Encoding: Not enough \" \\\n                \"characters at the end of input at '\" + input + \"'\");\n                logOffset(ruleMessage, offset, input.size());\n            }\n            res = true; /* Invalid match. */\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/validate_url_encoding.cc"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 27,
                  "endLine": 100,
                  "endColumn": 31,
                  "snippet": {
                    "text": "        case -3 :\n            if (transaction) {\n                ms_dbg_a(transaction, 7, \"Invalid URL Encoding: Not enough \" \\\n                \"characters at the end of input at '\" + input + \"'\");\n                logOffset(ruleMessage, offset, input.size());\n            }\n            res = true; /* Invalid match. */\n",
                    "rendered": {
                      "text": "        case -3 :\n            if (transaction) {\n                ms_dbg_a(transaction, 7, \"Invalid URL Encoding: Not enough \" \\\n                \"characters at the end of input at '\" + input + \"'\");\n                logOffset(ruleMessage, offset, input.size());\n            }\n            res = true; /* Invalid match. */\n",
                      "markdown": "`        case -3 :\n            if (transaction) {\n                ms_dbg_a(transaction, 7, \"Invalid URL Encoding: Not enough \" \\\n                \"characters at the end of input at '\" + input + \"'\");\n                logOffset(ruleMessage, offset, input.size());\n            }\n            res = true; /* Invalid match. */\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/validate_url_encoding.cc"
                },
                "region": {
                  "startLine": 92,
                  "startColumn": 32,
                  "endLine": 92,
                  "endColumn": 36,
                  "snippet": {
                    "text": "        case -2 :\n            if (transaction) {\n                ms_dbg_a(transaction, 7, \"Invalid URL Encoding: Non-hexadecimal \"\n                    \"digits used at '\" + input + \"'\");\n                logOffset(ruleMessage, offset, input.size());\n            }\n            res = true; /* Invalid match. */\n",
                    "rendered": {
                      "text": "        case -2 :\n            if (transaction) {\n                ms_dbg_a(transaction, 7, \"Invalid URL Encoding: Non-hexadecimal \"\n                    \"digits used at '\" + input + \"'\");\n                logOffset(ruleMessage, offset, input.size());\n            }\n            res = true; /* Invalid match. */\n",
                      "markdown": "`        case -2 :\n            if (transaction) {\n                ms_dbg_a(transaction, 7, \"Invalid URL Encoding: Non-hexadecimal \"\n                    \"digits used at '\" + input + \"'\");\n                logOffset(ruleMessage, offset, input.size());\n            }\n            res = true; /* Invalid match. */\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/validate_url_encoding.cc"
                },
                "region": {
                  "startLine": 85,
                  "startColumn": 60,
                  "endLine": 85,
                  "endColumn": 64,
                  "snippet": {
                    "text": "        case 1 :\n            /* Encoding is valid */\n            if (transaction) {\n                ms_dbg_a(transaction, 7, \"Valid URL Encoding at '\" +input + \"'\");\n            }\n            res = false;\n            break;\n",
                    "rendered": {
                      "text": "        case 1 :\n            /* Encoding is valid */\n            if (transaction) {\n                ms_dbg_a(transaction, 7, \"Valid URL Encoding at '\" +input + \"'\");\n            }\n            res = false;\n            break;\n",
                      "markdown": "`        case 1 :\n            /* Encoding is valid */\n            if (transaction) {\n                ms_dbg_a(transaction, 7, \"Valid URL Encoding at '\" +input + \"'\");\n            }\n            res = false;\n            break;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/validate_url_encoding.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/le.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/detect_xss.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/contains_word.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/contains.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/validate_dtd.cc"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 64,
                  "endLine": 89,
                  "endColumn": 69,
                  "snippet": {
                    "text": "    cvp->warning = (xmlSchemaValidityErrorFunc)warn_runtime;\n    cvp->userData = transaction;\n\n    if (!xmlValidateDtd(cvp, transaction->m_xml->m_data.doc, dtd.get())) {\n        ms_dbg_a(transaction, 4, \"XML: DTD validation failed.\");\n        xmlFreeValidCtxt(cvp);\n        return true;\n",
                    "rendered": {
                      "text": "    cvp->warning = (xmlSchemaValidityErrorFunc)warn_runtime;\n    cvp->userData = transaction;\n\n    if (!xmlValidateDtd(cvp, transaction->m_xml->m_data.doc, dtd.get())) {\n        ms_dbg_a(transaction, 4, \"XML: DTD validation failed.\");\n        xmlFreeValidCtxt(cvp);\n        return true;\n",
                      "markdown": "`    cvp->warning = (xmlSchemaValidityErrorFunc)warn_runtime;\n    cvp->userData = transaction;\n\n    if (!xmlValidateDtd(cvp, transaction->m_xml->m_data.doc, dtd.get())) {\n        ms_dbg_a(transaction, 4, \"XML: DTD validation failed.\");\n        xmlFreeValidCtxt(cvp);\n        return true;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/validate_dtd.cc"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 11,
                  "endLine": 49,
                  "endColumn": 16,
                  "snippet": {
                    "text": "bool ValidateDTD::evaluate(Transaction *transaction, const std::string &str) {\n\n    XmlDtdPtrManager dtd(xmlParseDTD(NULL, (const xmlChar *)m_resource.c_str()));\n    if (dtd.get() == NULL) {\n        std::string err = std::string(\"XML: Failed to load DTD: \") \\\n            + m_resource;\n        ms_dbg_a(transaction, 4, err);\n",
                    "rendered": {
                      "text": "bool ValidateDTD::evaluate(Transaction *transaction, const std::string &str) {\n\n    XmlDtdPtrManager dtd(xmlParseDTD(NULL, (const xmlChar *)m_resource.c_str()));\n    if (dtd.get() == NULL) {\n        std::string err = std::string(\"XML: Failed to load DTD: \") \\\n            + m_resource;\n        ms_dbg_a(transaction, 4, err);\n",
                      "markdown": "`bool ValidateDTD::evaluate(Transaction *transaction, const std::string &str) {\n\n    XmlDtdPtrManager dtd(xmlParseDTD(NULL, (const xmlChar *)m_resource.c_str()));\n    if (dtd.get() == NULL) {\n        std::string err = std::string(\"XML: Failed to load DTD: \") \\\n            + m_resource;\n        ms_dbg_a(transaction, 4, err);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/validate_dtd.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/disruptive/pass.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/disruptive/redirect.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/data/status.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/remove_whitespace.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/transformation.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/set_rsc.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/rule_id.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/set_sid.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/ver.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/variables/time_epoch.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/variables/tx.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rules_set_phases.cc"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 97,
                  "endLine": 49,
                  "endColumn": 102,
                  "snippet": {
                    "text": "    for (int i = 0; i < modsecurity::Phases::NUMBER_OF_PHASES; i++) {\n        v.reserve(m_rulesAtPhase[i].size());\n        for (size_t z = 0; z < m_rulesAtPhase[i].size(); z++) {\n            RuleWithOperator *rule_ckc = dynamic_cast<RuleWithOperator *>(m_rulesAtPhase[i].at(z).get());\n            if (!rule_ckc) {\n                continue;\n            }\n",
                    "rendered": {
                      "text": "    for (int i = 0; i < modsecurity::Phases::NUMBER_OF_PHASES; i++) {\n        v.reserve(m_rulesAtPhase[i].size());\n        for (size_t z = 0; z < m_rulesAtPhase[i].size(); z++) {\n            RuleWithOperator *rule_ckc = dynamic_cast<RuleWithOperator *>(m_rulesAtPhase[i].at(z).get());\n            if (!rule_ckc) {\n                continue;\n            }\n",
                      "markdown": "`    for (int i = 0; i < modsecurity::Phases::NUMBER_OF_PHASES; i++) {\n        v.reserve(m_rulesAtPhase[i].size());\n        for (size_t z = 0; z < m_rulesAtPhase[i].size(); z++) {\n            RuleWithOperator *rule_ckc = dynamic_cast<RuleWithOperator *>(m_rulesAtPhase[i].at(z).get());\n            if (!rule_ckc) {\n                continue;\n            }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rules_set_phases.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rule_with_operator.cc"
                },
                "region": {
                  "startLine": 190,
                  "startColumn": 64,
                  "endLine": 190,
                  "endColumn": 69,
                  "snippet": {
                    "text": "                    [&, variable, trans, this](\n                        std::pair<std::string, std::string> &m) -> bool {\n                        return containsTag(m.first, trans)\n                            && m.second == *variable->m_fullName.get();\n                    }) != trans->m_ruleRemoveTargetByTag.end()) {\n            continue;\n        }\n",
                    "rendered": {
                      "text": "                    [&, variable, trans, this](\n                        std::pair<std::string, std::string> &m) -> bool {\n                        return containsTag(m.first, trans)\n                            && m.second == *variable->m_fullName.get();\n                    }) != trans->m_ruleRemoveTargetByTag.end()) {\n            continue;\n        }\n",
                      "markdown": "`                    [&, variable, trans, this](\n                        std::pair<std::string, std::string> &m) -> bool {\n                        return containsTag(m.first, trans)\n                            && m.second == *variable->m_fullName.get();\n                    }) != trans->m_ruleRemoveTargetByTag.end()) {\n            continue;\n        }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rule_with_operator.cc"
                },
                "region": {
                  "startLine": 181,
                  "startColumn": 60,
                  "endLine": 181,
                  "endColumn": 65,
                  "snippet": {
                    "text": "                trans->m_ruleRemoveTargetById.end(),\n                [&, variable, this](std::pair<int, std::string> &m) -> bool {\n                    return m.first == m_ruleId\n                        && m.second == *variable->m_fullName.get();\n                }) != trans->m_ruleRemoveTargetById.end()) {\n            continue;\n        }\n",
                    "rendered": {
                      "text": "                trans->m_ruleRemoveTargetById.end(),\n                [&, variable, this](std::pair<int, std::string> &m) -> bool {\n                    return m.first == m_ruleId\n                        && m.second == *variable->m_fullName.get();\n                }) != trans->m_ruleRemoveTargetById.end()) {\n            continue;\n        }\n",
                      "markdown": "`                trans->m_ruleRemoveTargetById.end(),\n                [&, variable, this](std::pair<int, std::string> &m) -> bool {\n                    return m.first == m_ruleId\n                        && m.second == *variable->m_fullName.get();\n                }) != trans->m_ruleRemoveTargetById.end()) {\n            continue;\n        }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rule_with_operator.cc"
                },
                "region": {
                  "startLine": 159,
                  "startColumn": 61,
                  "endLine": 159,
                  "endColumn": 66,
                  "snippet": {
                    "text": "\n    getVariablesExceptionsHelper(exclusion, addition,\n        t.m_rules->m_exceptions.m_variable_update_target_by_msg,\n        [this, &t](const auto &msg) { return containsMsg(*msg.get(), &t); });\n\n    getVariablesExceptionsHelper(exclusion, addition,\n        t.m_rules->m_exceptions.m_variable_update_target_by_id,\n",
                    "rendered": {
                      "text": "\n    getVariablesExceptionsHelper(exclusion, addition,\n        t.m_rules->m_exceptions.m_variable_update_target_by_msg,\n        [this, &t](const auto &msg) { return containsMsg(*msg.get(), &t); });\n\n    getVariablesExceptionsHelper(exclusion, addition,\n        t.m_rules->m_exceptions.m_variable_update_target_by_id,\n",
                      "markdown": "`\n    getVariablesExceptionsHelper(exclusion, addition,\n        t.m_rules->m_exceptions.m_variable_update_target_by_msg,\n        [this, &t](const auto &msg) { return containsMsg(*msg.get(), &t); });\n\n    getVariablesExceptionsHelper(exclusion, addition,\n        t.m_rules->m_exceptions.m_variable_update_target_by_id,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rule_with_operator.cc"
                },
                "region": {
                  "startLine": 155,
                  "startColumn": 61,
                  "endLine": 155,
                  "endColumn": 66,
                  "snippet": {
                    "text": "    variables::Variables *exclusion, variables::Variables *addition) {\n    getVariablesExceptionsHelper(exclusion, addition,\n        t.m_rules->m_exceptions.m_variable_update_target_by_tag, \n        [this, &t](const auto &tag) { return containsTag(*tag.get(), &t); });\n\n    getVariablesExceptionsHelper(exclusion, addition,\n        t.m_rules->m_exceptions.m_variable_update_target_by_msg,\n",
                    "rendered": {
                      "text": "    variables::Variables *exclusion, variables::Variables *addition) {\n    getVariablesExceptionsHelper(exclusion, addition,\n        t.m_rules->m_exceptions.m_variable_update_target_by_tag, \n        [this, &t](const auto &tag) { return containsTag(*tag.get(), &t); });\n\n    getVariablesExceptionsHelper(exclusion, addition,\n        t.m_rules->m_exceptions.m_variable_update_target_by_msg,\n",
                      "markdown": "`    variables::Variables *exclusion, variables::Variables *addition) {\n    getVariablesExceptionsHelper(exclusion, addition,\n        t.m_rules->m_exceptions.m_variable_update_target_by_tag, \n        [this, &t](const auto &tag) { return containsTag(*tag.get(), &t); });\n\n    getVariablesExceptionsHelper(exclusion, addition,\n        t.m_rules->m_exceptions.m_variable_update_target_by_msg,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rule_with_operator.cc"
                },
                "region": {
                  "startLine": 142,
                  "startColumn": 48,
                  "endLine": 142,
                  "endColumn": 53,
                  "snippet": {
                    "text": "        if (op(x)) {\n            auto b = v.get();\n            if (auto vme = dynamic_cast<variables::VariableModificatorExclusion*>(b)) {\n                exclusion->push_back(vme->m_base.get());\n            } else {\n                addition->push_back(b);\n            }\n",
                    "rendered": {
                      "text": "        if (op(x)) {\n            auto b = v.get();\n            if (auto vme = dynamic_cast<variables::VariableModificatorExclusion*>(b)) {\n                exclusion->push_back(vme->m_base.get());\n            } else {\n                addition->push_back(b);\n            }\n",
                      "markdown": "`        if (op(x)) {\n            auto b = v.get();\n            if (auto vme = dynamic_cast<variables::VariableModificatorExclusion*>(b)) {\n                exclusion->push_back(vme->m_base.get());\n            } else {\n                addition->push_back(b);\n            }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rule_with_operator.cc"
                },
                "region": {
                  "startLine": 140,
                  "startColumn": 22,
                  "endLine": 140,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    const MapType &map, Operation op) {\n    for (const auto &[x, v] : map) {\n        if (op(x)) {\n            auto b = v.get();\n            if (auto vme = dynamic_cast<variables::VariableModificatorExclusion*>(b)) {\n                exclusion->push_back(vme->m_base.get());\n            } else {\n",
                    "rendered": {
                      "text": "    const MapType &map, Operation op) {\n    for (const auto &[x, v] : map) {\n        if (op(x)) {\n            auto b = v.get();\n            if (auto vme = dynamic_cast<variables::VariableModificatorExclusion*>(b)) {\n                exclusion->push_back(vme->m_base.get());\n            } else {\n",
                      "markdown": "`    const MapType &map, Operation op) {\n    for (const auto &[x, v] : map) {\n        if (op(x)) {\n            auto b = v.get();\n            if (auto vme = dynamic_cast<variables::VariableModificatorExclusion*>(b)) {\n                exclusion->push_back(vme->m_base.get());\n            } else {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rule_with_operator.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.github/ISSUE_TEMPLATE/bug-report-for-version-3-x.md"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 5,
                  "endLine": 31,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\nA **curl** command line that mimics the original request and reproduces the problem. Or a ModSecurity v3 test case.\n\n[e.g: curl \"modsec-full/ca/..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\/\\\\etc/\\\\passwd\" or [issue-394.json](https://github.com/SpiderLabs/ModSecurity/blob/v3/master/test/test-cases/regression/issue-394.json)]\n\n\n**Expected behavior**\n",
                    "rendered": {
                      "text": "\nA **curl** command line that mimics the original request and reproduces the problem. Or a ModSecurity v3 test case.\n\n[e.g: curl \"modsec-full/ca/..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\/\\\\etc/\\\\passwd\" or [issue-394.json](https://github.com/SpiderLabs/ModSecurity/blob/v3/master/test/test-cases/regression/issue-394.json)]\n\n\n**Expected behavior**\n",
                      "markdown": "`\nA **curl** command line that mimics the original request and reproduces the problem. Or a ModSecurity v3 test case.\n\n[e.g: curl \"modsec-full/ca/..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\/\\\\etc/\\\\passwd\" or [issue-394.json](https://github.com/SpiderLabs/ModSecurity/blob/v3/master/test/test-cases/regression/issue-394.json)]\n\n\n**Expected behavior**\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.github/ISSUE_TEMPLATE/bug-report-for-version-2-x.md"
                },
                "region": {
                  "startLine": 30,
                  "startColumn": 5,
                  "endLine": 30,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\nA **curl** command line that mimics the original request and reproduces the problem. Or a ModSecurity v3 test case.\n\n[e.g: curl \"modsec-full/ca/..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\/\\\\etc/\\\\passwd\" or [issue-394.json](https://github.com/SpiderLabs/ModSecurity/blob/v3/master/test/test-cases/regression/issue-394.json)]\n\n\n**Expected behavior**\n",
                    "rendered": {
                      "text": "\nA **curl** command line that mimics the original request and reproduces the problem. Or a ModSecurity v3 test case.\n\n[e.g: curl \"modsec-full/ca/..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\/\\\\etc/\\\\passwd\" or [issue-394.json](https://github.com/SpiderLabs/ModSecurity/blob/v3/master/test/test-cases/regression/issue-394.json)]\n\n\n**Expected behavior**\n",
                      "markdown": "`\nA **curl** command line that mimics the original request and reproduces the problem. Or a ModSecurity v3 test case.\n\n[e.g: curl \"modsec-full/ca/..\\\\..\\\\..\\\\..\\\\..\\\\..\\\\/\\\\etc/\\\\passwd\" or [issue-394.json](https://github.com/SpiderLabs/ModSecurity/blob/v3/master/test/test-cases/regression/issue-394.json)]\n\n\n**Expected behavior**\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/README.md"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 146,
                  "endLine": 64,
                  "endColumn": 154,
                  "snippet": {
                    "text": "\n### Unix (Linux, MacOS, FreeBSD, …)\n\nOn unix the project uses autotools to help the compilation process. Please note that if you are working with `git`, don't forget to initialize and update the submodules. Here's a quick how-to:\n```shell\n$ git clone --recursive https://github.com/owasp-modsecurity/ModSecurity ModSecurity\n$ cd ModSecurity\n",
                    "rendered": {
                      "text": "\n### Unix (Linux, MacOS, FreeBSD, …)\n\nOn unix the project uses autotools to help the compilation process. Please note that if you are working with `git`, don't forget to initialize and update the submodules. Here's a quick how-to:\n```shell\n$ git clone --recursive https://github.com/owasp-modsecurity/ModSecurity ModSecurity\n$ cd ModSecurity\n",
                      "markdown": "`\n### Unix (Linux, MacOS, FreeBSD, …)\n\nOn unix the project uses autotools to help the compilation process. Please note that if you are working with `git`, don't forget to initialize and update the submodules. Here's a quick how-to:\n```shell\n$ git clone --recursive https://github.com/owasp-modsecurity/ModSecurity ModSecurity\n$ cd ModSecurity\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/README.md"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 128,
                  "endLine": 39,
                  "endColumn": 132,
                  "snippet": {
                    "text": "he growing demand for additional platform support, it has became necessary to remove the Apache dependencies underlying this project, making it more platform independent.\n\nAs a result of this goal we have rearchitected Libmodsecurity such that it is no longer dependent on the Apache web server (both at compilation and during runtime). One side effect of this is that across all platforms users can expect increased performance. Additionally, we have taken this opportunity to lay the groundwork for some new features that users have been long seeking. For example we are looking to natively support aud",
                    "rendered": {
                      "text": "he growing demand for additional platform support, it has became necessary to remove the Apache dependencies underlying this project, making it more platform independent.\n\nAs a result of this goal we have rearchitected Libmodsecurity such that it is no longer dependent on the Apache web server (both at compilation and during runtime). One side effect of this is that across all platforms users can expect increased performance. Additionally, we have taken this opportunity to lay the groundwork for some new features that users have been long seeking. For example we are looking to natively support aud",
                      "markdown": "`he growing demand for additional platform support, it has became necessary to remove the Apache dependencies underlying this project, making it more platform independent.\n\nAs a result of this goal we have rearchitected Libmodsecurity such that it is no longer dependent on the Apache web server (both at compilation and during runtime). One side effect of this is that across all platforms users can expect increased performance. Additionally, we have taken this opportunity to lay the groundwork for some new features that users have been long seeking. For example we are looking to natively support aud`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/README.md"
                },
                "region": {
                  "startLine": 360,
                  "startColumn": 33,
                  "endLine": 360,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\n## Packaging\n\nHaving our packages in distros on time is a desire that we have, so let us know\nif there is anything we can do to facilitate your work as a packager.\n\n## Sponsor Note\n",
                    "rendered": {
                      "text": "\n## Packaging\n\nHaving our packages in distros on time is a desire that we have, so let us know\nif there is anything we can do to facilitate your work as a packager.\n\n## Sponsor Note\n",
                      "markdown": "`\n## Packaging\n\nHaving our packages in distros on time is a desire that we have, so let us know\nif there is anything we can do to facilitate your work as a packager.\n\n## Sponsor Note\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/README.md"
                },
                "region": {
                  "startLine": 308,
                  "startColumn": 1,
                  "endLine": 308,
                  "endColumn": 6,
                  "snippet": {
                    "text": "/path/to/ModSecurity/test/benchmark\nDone.\n\n$ cat basic_rules.conf\n\nInclude \"../../modsecurity.conf-recommended\"\n\n",
                    "rendered": {
                      "text": "/path/to/ModSecurity/test/benchmark\nDone.\n\n$ cat basic_rules.conf\n\nInclude \"../../modsecurity.conf-recommended\"\n\n",
                      "markdown": "`/path/to/ModSecurity/test/benchmark\nDone.\n\n$ cat basic_rules.conf\n\nInclude \"../../modsecurity.conf-recommended\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/README.md"
                },
                "region": {
                  "startLine": 287,
                  "startColumn": 1,
                  "endLine": 287,
                  "endColumn": 6,
                  "snippet": {
                    "text": "This is very fast because the benchmark uses the minimal `modsecurity.conf.default` configuration, which doesn't include too many rules:\n\n```shell\n$ cat basic_rules.conf\n\nInclude \"../../modsecurity.conf-recommended\"\n\n",
                    "rendered": {
                      "text": "This is very fast because the benchmark uses the minimal `modsecurity.conf.default` configuration, which doesn't include too many rules:\n\n```shell\n$ cat basic_rules.conf\n\nInclude \"../../modsecurity.conf-recommended\"\n\n",
                      "markdown": "`This is very fast because the benchmark uses the minimal `modsecurity.conf.default` configuration, which doesn't include too many rules:\n\n```shell\n$ cat basic_rules.conf\n\nInclude \"../../modsecurity.conf-recommended\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/README.md"
                },
                "region": {
                  "startLine": 276,
                  "startColumn": 1,
                  "endLine": 276,
                  "endColumn": 7,
                  "snippet": {
                    "text": "\nTo measure the time:\n```shell\n$ time ./benchmark 1000\nDoing 1000 transactions...\n\nreal\t0m0.351s\n",
                    "rendered": {
                      "text": "\nTo measure the time:\n```shell\n$ time ./benchmark 1000\nDoing 1000 transactions...\n\nreal\t0m0.351s\n",
                      "markdown": "`\nTo measure the time:\n```shell\n$ time ./benchmark 1000\nDoing 1000 transactions...\n\nreal\t0m0.351s\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/README.md"
                },
                "region": {
                  "startLine": 234,
                  "startColumn": 53,
                  "endLine": 234,
                  "endColumn": 58,
                  "snippet": {
                    "text": "bug is, it is recommended that you develop a regression test that mimics the\nscenario where the bug is happening. If the bug is reproducible with the\nregression-test utility, then it will be far simpler to debug and ensure that it never occurs again. On Linux it is\nrecommended that anyone undertaking debugging utilize gdb and/or valgrind as needed.\n\nDuring the configuration/compilation time, you may want to disable the compiler\noptimization making your “back traces” populated with readable data. Use the\n",
                    "rendered": {
                      "text": "bug is, it is recommended that you develop a regression test that mimics the\nscenario where the bug is happening. If the bug is reproducible with the\nregression-test utility, then it will be far simpler to debug and ensure that it never occurs again. On Linux it is\nrecommended that anyone undertaking debugging utilize gdb and/or valgrind as needed.\n\nDuring the configuration/compilation time, you may want to disable the compiler\noptimization making your “back traces” populated with readable data. Use the\n",
                      "markdown": "`bug is, it is recommended that you develop a regression test that mimics the\nscenario where the bug is happening. If the bug is reproducible with the\nregression-test utility, then it will be far simpler to debug and ensure that it never occurs again. On Linux it is\nrecommended that anyone undertaking debugging utilize gdb and/or valgrind as needed.\n\nDuring the configuration/compilation time, you may want to disable the compiler\noptimization making your “back traces” populated with readable data. Use the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/README.md"
                },
                "region": {
                  "startLine": 220,
                  "startColumn": 23,
                  "endLine": 220,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n```shell\n$ cd /path/to/your/ModSecurity\n$ git submodule foreach git pull\n$ cd test\n$ ./regression-tests\n$ ./unit-tests\n",
                    "rendered": {
                      "text": "\n```shell\n$ cd /path/to/your/ModSecurity\n$ git submodule foreach git pull\n$ cd test\n$ ./regression-tests\n$ ./unit-tests\n",
                      "markdown": "`\n```shell\n$ cd /path/to/your/ModSecurity\n$ git submodule foreach git pull\n$ cd test\n$ ./regression-tests\n$ ./unit-tests\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/README.md"
                },
                "region": {
                  "startLine": 220,
                  "startColumn": 1,
                  "endLine": 220,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\n```shell\n$ cd /path/to/your/ModSecurity\n$ git submodule foreach git pull\n$ cd test\n$ ./regression-tests\n$ ./unit-tests\n",
                    "rendered": {
                      "text": "\n```shell\n$ cd /path/to/your/ModSecurity\n$ git submodule foreach git pull\n$ cd test\n$ ./regression-tests\n$ ./unit-tests\n",
                      "markdown": "`\n```shell\n$ cd /path/to/your/ModSecurity\n$ git submodule foreach git pull\n$ cd test\n$ ./regression-tests\n$ ./unit-tests\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/README.md"
                },
                "region": {
                  "startLine": 215,
                  "startColumn": 19,
                  "endLine": 215,
                  "endColumn": 24,
                  "snippet": {
                    "text": "The regression test and unit test utilities are native and do not demand any\nexternal tool or script, although you need to fetch the test cases from other\nrepositories, as they are shared with other versions of ModSecurity, those\nothers repositories git submodules. To fetch the submodules repository and run\nthe utilities, follow the commands listed below:\n\n```shell\n",
                    "rendered": {
                      "text": "The regression test and unit test utilities are native and do not demand any\nexternal tool or script, although you need to fetch the test cases from other\nrepositories, as they are shared with other versions of ModSecurity, those\nothers repositories git submodules. To fetch the submodules repository and run\nthe utilities, follow the commands listed below:\n\n```shell\n",
                      "markdown": "`The regression test and unit test utilities are native and do not demand any\nexternal tool or script, although you need to fetch the test cases from other\nrepositories, as they are shared with other versions of ModSecurity, those\nothers repositories git submodules. To fetch the submodules repository and run\nthe utilities, follow the commands listed below:\n\n```shell\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/README.md"
                },
                "region": {
                  "startLine": 108,
                  "startColumn": 6,
                  "endLine": 108,
                  "endColumn": 12,
                  "snippet": {
                    "text": "available via the C++ interface, for instance, the capability to create custom logging\nmechanism (see the regression test to check for how those logging mechanism works).\nThe objective is to have both APIs (C, C++) providing the same functionality,\nif you find an aspect of the API that is missing via a particular interface, please open an issue.\n\nInside the subfolder examples, there are simple examples on how to use the API.\nBelow some are illustrated:\n",
                    "rendered": {
                      "text": "available via the C++ interface, for instance, the capability to create custom logging\nmechanism (see the regression test to check for how those logging mechanism works).\nThe objective is to have both APIs (C, C++) providing the same functionality,\nif you find an aspect of the API that is missing via a particular interface, please open an issue.\n\nInside the subfolder examples, there are simple examples on how to use the API.\nBelow some are illustrated:\n",
                      "markdown": "`available via the C++ interface, for instance, the capability to create custom logging\nmechanism (see the regression test to check for how those logging mechanism works).\nThe objective is to have both APIs (C, C++) providing the same functionality,\nif you find an aspect of the API that is missing via a particular interface, please open an issue.\n\nInside the subfolder examples, there are simple examples on how to use the API.\nBelow some are illustrated:\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/README.md"
                },
                "region": {
                  "startLine": 94,
                  "startColumn": 1,
                  "endLine": 94,
                  "endColumn": 7,
                  "snippet": {
                    "text": "All others dependencies are related to operators specified within SecRules or configuration directives and may not be required for compilation. A short list of such dependencies is as follows:\n\n* libinjection is needed for the operator @detectXSS and @detectSQL\n* curl is needed for the directive SecRemoteRules.\n\nIf those libraries are missing ModSecurity will be compiled without the support for the operator @detectXSS and the configuration directive SecRemoteRules.\n\n",
                    "rendered": {
                      "text": "All others dependencies are related to operators specified within SecRules or configuration directives and may not be required for compilation. A short list of such dependencies is as follows:\n\n* libinjection is needed for the operator @detectXSS and @detectSQL\n* curl is needed for the directive SecRemoteRules.\n\nIf those libraries are missing ModSecurity will be compiled without the support for the operator @detectXSS and the configuration directive SecRemoteRules.\n\n",
                      "markdown": "`All others dependencies are related to operators specified within SecRules or configuration directives and may not be required for compilation. A short list of such dependencies is as follows:\n\n* libinjection is needed for the operator @detectXSS and @detectSQL\n* curl is needed for the directive SecRemoteRules.\n\nIf those libraries are missing ModSecurity will be compiled without the support for the operator @detectXSS and the configuration directive SecRemoteRules.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/README.md"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 1,
                  "endLine": 66,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nOn unix the project uses autotools to help the compilation process. Please note that if you are working with `git`, don't forget to initialize and update the submodules. Here's a quick how-to:\n```shell\n$ git clone --recursive https://github.com/owasp-modsecurity/ModSecurity ModSecurity\n$ cd ModSecurity\n```\n\n",
                    "rendered": {
                      "text": "\nOn unix the project uses autotools to help the compilation process. Please note that if you are working with `git`, don't forget to initialize and update the submodules. Here's a quick how-to:\n```shell\n$ git clone --recursive https://github.com/owasp-modsecurity/ModSecurity ModSecurity\n$ cd ModSecurity\n```\n\n",
                      "markdown": "`\nOn unix the project uses autotools to help the compilation process. Please note that if you are working with `git`, don't forget to initialize and update the submodules. Here's a quick how-to:\n```shell\n$ git clone --recursive https://github.com/owasp-modsecurity/ModSecurity ModSecurity\n$ cd ModSecurity\n```\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/README.md"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 227,
                  "endLine": 39,
                  "endColumn": 235,
                  "snippet": {
                    "text": "endencies underlying this project, making it more platform independent.\n\nAs a result of this goal we have rearchitected Libmodsecurity such that it is no longer dependent on the Apache web server (both at compilation and during runtime). One side effect of this is that across all platforms users can expect increased performance. Additionally, we have taken this opportunity to lay the groundwork for some new features that users have been long seeking. For example we are looking to natively support auditlogs in the JSON format, along with a host of other functionality in future versions.\n\n\n### It is no ",
                    "rendered": {
                      "text": "endencies underlying this project, making it more platform independent.\n\nAs a result of this goal we have rearchitected Libmodsecurity such that it is no longer dependent on the Apache web server (both at compilation and during runtime). One side effect of this is that across all platforms users can expect increased performance. Additionally, we have taken this opportunity to lay the groundwork for some new features that users have been long seeking. For example we are looking to natively support auditlogs in the JSON format, along with a host of other functionality in future versions.\n\n\n### It is no ",
                      "markdown": "`endencies underlying this project, making it more platform independent.\n\nAs a result of this goal we have rearchitected Libmodsecurity such that it is no longer dependent on the Apache web server (both at compilation and during runtime). One side effect of this is that across all platforms users can expect increased performance. Additionally, we have taken this opportunity to lay the groundwork for some new features that users have been long seeking. For example we are looking to natively support auditlogs in the JSON format, along with a host of other functionality in future versions.\n\n\n### It is no `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/README.md"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 154,
                  "endLine": 37,
                  "endColumn": 160,
                  "snippet": {
                    "text": "is project and the old ModSecurity (v2.x.x)?\n\n* All Apache dependencies have been removed\n* Higher performance\n* New features\n* New architecture\n\nLibmodsecurity is a complete rewrite of the ModSecurity platform. When it was first devised the ModSecurity project started as just an Apache module. Over time the project has been extended, due to popular demand, to support other platforms including (but not limited to) Nginx and IIS. In order to provide for the growing demand for additional platform support, it has became necessary to remove the Apache dependencies underlying this project, making it more",
                    "rendered": {
                      "text": "is project and the old ModSecurity (v2.x.x)?\n\n* All Apache dependencies have been removed\n* Higher performance\n* New features\n* New architecture\n\nLibmodsecurity is a complete rewrite of the ModSecurity platform. When it was first devised the ModSecurity project started as just an Apache module. Over time the project has been extended, due to popular demand, to support other platforms including (but not limited to) Nginx and IIS. In order to provide for the growing demand for additional platform support, it has became necessary to remove the Apache dependencies underlying this project, making it more",
                      "markdown": "`is project and the old ModSecurity (v2.x.x)?\n\n* All Apache dependencies have been removed\n* Higher performance\n* New features\n* New architecture\n\nLibmodsecurity is a complete rewrite of the ModSecurity platform. When it was first devised the ModSecurity project started as just an Apache module. Over time the project has been extended, due to popular demand, to support other platforms including (but not limited to) Nginx and IIS. In order to provide for the growing demand for additional platform support, it has became necessary to remove the Apache dependencies underlying this project, making it more`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 2359,
                  "startColumn": 30,
                  "endLine": 2359,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\n# The MAX_DOT_GRAPH_DEPTH tag can be used to set the maximum depth of the graphs\n# generated by dot. A depth value of 3 means that only nodes reachable from the\n# root by following a path via at most 3 edges will be shown. Nodes that lay\n# further from the root node will be omitted. Note that setting this option to 1\n# or 2 may greatly reduce the computation time needed for large code bases. Also\n# note that the size of a graph can be further restricted by\n",
                    "rendered": {
                      "text": "\n# The MAX_DOT_GRAPH_DEPTH tag can be used to set the maximum depth of the graphs\n# generated by dot. A depth value of 3 means that only nodes reachable from the\n# root by following a path via at most 3 edges will be shown. Nodes that lay\n# further from the root node will be omitted. Note that setting this option to 1\n# or 2 may greatly reduce the computation time needed for large code bases. Also\n# note that the size of a graph can be further restricted by\n",
                      "markdown": "`\n# The MAX_DOT_GRAPH_DEPTH tag can be used to set the maximum depth of the graphs\n# generated by dot. A depth value of 3 means that only nodes reachable from the\n# root by following a path via at most 3 edges will be shown. Nodes that lay\n# further from the root node will be omitted. Note that setting this option to 1\n# or 2 may greatly reduce the computation time needed for large code bases. Also\n# note that the size of a graph can be further restricted by\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 2350,
                  "startColumn": 54,
                  "endLine": 2350,
                  "endColumn": 58,
                  "snippet": {
                    "text": "# larger than this value, doxygen will truncate the graph, which is visualized\n# by representing a node as a red box. Note that doxygen if the number of direct\n# children of the root node in a graph is already larger than\n# DOT_GRAPH_MAX_NODES then the graph will not be shown at all. Also note that\n# the size of a graph can be further restricted by MAX_DOT_GRAPH_DEPTH.\n# Minimum value: 0, maximum value: 10000, default value: 50.\n# This tag requires that the tag HAVE_DOT is set to YES.\n",
                    "rendered": {
                      "text": "# larger than this value, doxygen will truncate the graph, which is visualized\n# by representing a node as a red box. Note that doxygen if the number of direct\n# children of the root node in a graph is already larger than\n# DOT_GRAPH_MAX_NODES then the graph will not be shown at all. Also note that\n# the size of a graph can be further restricted by MAX_DOT_GRAPH_DEPTH.\n# Minimum value: 0, maximum value: 10000, default value: 50.\n# This tag requires that the tag HAVE_DOT is set to YES.\n",
                      "markdown": "`# larger than this value, doxygen will truncate the graph, which is visualized\n# by representing a node as a red box. Note that doxygen if the number of direct\n# children of the root node in a graph is already larger than\n# DOT_GRAPH_MAX_NODES then the graph will not be shown at all. Also note that\n# the size of a graph can be further restricted by MAX_DOT_GRAPH_DEPTH.\n# Minimum value: 0, maximum value: 10000, default value: 50.\n# This tag requires that the tag HAVE_DOT is set to YES.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 2325,
                  "startColumn": 9,
                  "endLine": 2325,
                  "endColumn": 14,
                  "snippet": {
                    "text": "DOTFILE_DIRS           = \n\n# The MSCFILE_DIRS tag can be used to specify one or more directories that\n# contain msc files that are included in the documentation (see the \\mscfile\n# command).\n\nMSCFILE_DIRS           = \n",
                    "rendered": {
                      "text": "DOTFILE_DIRS           = \n\n# The MSCFILE_DIRS tag can be used to specify one or more directories that\n# contain msc files that are included in the documentation (see the \\mscfile\n# command).\n\nMSCFILE_DIRS           = \n",
                      "markdown": "`DOTFILE_DIRS           = \n\n# The MSCFILE_DIRS tag can be used to specify one or more directories that\n# contain msc files that are included in the documentation (see the \\mscfile\n# command).\n\nMSCFILE_DIRS           = \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 2146,
                  "startColumn": 22,
                  "endLine": 2146,
                  "endColumn": 31,
                  "snippet": {
                    "text": "# The DOT_NUM_THREADS specifies the number of dot invocations doxygen is allowed\n# to run in parallel. When set to 0 doxygen will base this on the number of\n# processors available in the system. You can set it explicitly to a value\n# larger than 0 to get control over the balance between CPU load and processing\n# speed.\n# Minimum value: 0, maximum value: 32, default value: 0.\n# This tag requires that the tag HAVE_DOT is set to YES.\n",
                    "rendered": {
                      "text": "# The DOT_NUM_THREADS specifies the number of dot invocations doxygen is allowed\n# to run in parallel. When set to 0 doxygen will base this on the number of\n# processors available in the system. You can set it explicitly to a value\n# larger than 0 to get control over the balance between CPU load and processing\n# speed.\n# Minimum value: 0, maximum value: 32, default value: 0.\n# This tag requires that the tag HAVE_DOT is set to YES.\n",
                      "markdown": "`# The DOT_NUM_THREADS specifies the number of dot invocations doxygen is allowed\n# to run in parallel. When set to 0 doxygen will base this on the number of\n# processors available in the system. You can set it explicitly to a value\n# larger than 0 to get control over the balance between CPU load and processing\n# speed.\n# Minimum value: 0, maximum value: 32, default value: 0.\n# This tag requires that the tag HAVE_DOT is set to YES.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 1980,
                  "startColumn": 55,
                  "endLine": 1980,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\nENABLE_PREPROCESSING   = YES\n\n# If the MACRO_EXPANSION tag is set to YES doxygen will expand all macro names\n# in the source code. If set to NO only conditional compilation will be\n# performed. Macro expansion can be done in a controlled way by setting\n# EXPAND_ONLY_PREDEF to YES.\n",
                    "rendered": {
                      "text": "\nENABLE_PREPROCESSING   = YES\n\n# If the MACRO_EXPANSION tag is set to YES doxygen will expand all macro names\n# in the source code. If set to NO only conditional compilation will be\n# performed. Macro expansion can be done in a controlled way by setting\n# EXPAND_ONLY_PREDEF to YES.\n",
                      "markdown": "`\nENABLE_PREPROCESSING   = YES\n\n# If the MACRO_EXPANSION tag is set to YES doxygen will expand all macro names\n# in the source code. If set to NO only conditional compilation will be\n# performed. Macro expansion can be done in a controlled way by setting\n# EXPAND_ONLY_PREDEF to YES.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 1939,
                  "startColumn": 61,
                  "endLine": 1939,
                  "endColumn": 65,
                  "snippet": {
                    "text": "# If the GENERATE_PERLMOD tag is set to YES doxygen will generate a Perl module\n# file that captures the structure of the code including all documentation.\n#\n# Note that this feature is still experimental and incomplete at the moment.\n# The default value is: NO.\n\nGENERATE_PERLMOD       = NO\n",
                    "rendered": {
                      "text": "# If the GENERATE_PERLMOD tag is set to YES doxygen will generate a Perl module\n# file that captures the structure of the code including all documentation.\n#\n# Note that this feature is still experimental and incomplete at the moment.\n# The default value is: NO.\n\nGENERATE_PERLMOD       = NO\n",
                      "markdown": "`# If the GENERATE_PERLMOD tag is set to YES doxygen will generate a Perl module\n# file that captures the structure of the code including all documentation.\n#\n# Note that this feature is still experimental and incomplete at the moment.\n# The default value is: NO.\n\nGENERATE_PERLMOD       = NO\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 1927,
                  "startColumn": 29,
                  "endLine": 1927,
                  "endColumn": 33,
                  "snippet": {
                    "text": "# If the GENERATE_AUTOGEN_DEF tag is set to YES doxygen will generate an AutoGen\n# Definitions (see http://autogen.sf.net) file that captures the structure of\n# the code including all documentation. Note that this feature is still\n# experimental and incomplete at the moment.\n# The default value is: NO.\n\nGENERATE_AUTOGEN_DEF   = NO\n",
                    "rendered": {
                      "text": "# If the GENERATE_AUTOGEN_DEF tag is set to YES doxygen will generate an AutoGen\n# Definitions (see http://autogen.sf.net) file that captures the structure of\n# the code including all documentation. Note that this feature is still\n# experimental and incomplete at the moment.\n# The default value is: NO.\n\nGENERATE_AUTOGEN_DEF   = NO\n",
                      "markdown": "`# If the GENERATE_AUTOGEN_DEF tag is set to YES doxygen will generate an AutoGen\n# Definitions (see http://autogen.sf.net) file that captures the structure of\n# the code including all documentation. Note that this feature is still\n# experimental and incomplete at the moment.\n# The default value is: NO.\n\nGENERATE_AUTOGEN_DEF   = NO\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 1843,
                  "startColumn": 29,
                  "endLine": 1843,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n# The MAN_EXTENSION tag determines the extension that is added to the generated\n# man pages. In case the manual section does not start with a number, the number\n# 3 is prepended. The dot (.) at the beginning of the MAN_EXTENSION tag is\n# optional.\n# The default value is: .3.\n# This tag requires that the tag GENERATE_MAN is set to YES.\n",
                    "rendered": {
                      "text": "\n# The MAN_EXTENSION tag determines the extension that is added to the generated\n# man pages. In case the manual section does not start with a number, the number\n# 3 is prepended. The dot (.) at the beginning of the MAN_EXTENSION tag is\n# optional.\n# The default value is: .3.\n# This tag requires that the tag GENERATE_MAN is set to YES.\n",
                      "markdown": "`\n# The MAN_EXTENSION tag determines the extension that is added to the generated\n# man pages. In case the manual section does not start with a number, the number\n# 3 is prepended. The dot (.) at the beginning of the MAN_EXTENSION tag is\n# optional.\n# The default value is: .3.\n# This tag requires that the tag GENERATE_MAN is set to YES.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 1508,
                  "startColumn": 12,
                  "endLine": 1508,
                  "endColumn": 16,
                  "snippet": {
                    "text": "# When MathJax is enabled you need to specify the location relative to the HTML\n# output directory using the MATHJAX_RELPATH option. The destination directory\n# should contain the MathJax.js script. For instance, if the mathjax directory\n# is located at the same level as the HTML output directory, then\n# MATHJAX_RELPATH should be ../mathjax. The default value points to the MathJax\n# Content Delivery Network so you can quickly see the result without installing\n# MathJax. However, it is strongly recommended to install a local copy of\n",
                    "rendered": {
                      "text": "# When MathJax is enabled you need to specify the location relative to the HTML\n# output directory using the MATHJAX_RELPATH option. The destination directory\n# should contain the MathJax.js script. For instance, if the mathjax directory\n# is located at the same level as the HTML output directory, then\n# MATHJAX_RELPATH should be ../mathjax. The default value points to the MathJax\n# Content Delivery Network so you can quickly see the result without installing\n# MathJax. However, it is strongly recommended to install a local copy of\n",
                      "markdown": "`# When MathJax is enabled you need to specify the location relative to the HTML\n# output directory using the MATHJAX_RELPATH option. The destination directory\n# should contain the MathJax.js script. For instance, if the mathjax directory\n# is located at the same level as the HTML output directory, then\n# MATHJAX_RELPATH should be ../mathjax. The default value points to the MathJax\n# Content Delivery Network so you can quickly see the result without installing\n# MathJax. However, it is strongly recommended to install a local copy of\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 1431,
                  "startColumn": 74,
                  "endLine": 1432,
                  "snippet": {
                    "text": "# (i.e. any modern browser). Windows users are probably better off using the\n# HTML help feature. Via custom stylesheets (see HTML_EXTRA_STYLESHEET) one can\n# further fine-tune the look of the index. As an example, the default style\n# sheet generated by doxygen has an example that shows how to put an image at\n# the root of the tree instead of the PROJECT_NAME. Since the tree basically has\n# the same information as the tab index, you could consider setting\n# DISABLE_INDEX to YES when enabling this option.\n# The default value is: NO.\n",
                    "rendered": {
                      "text": "# (i.e. any modern browser). Windows users are probably better off using the\n# HTML help feature. Via custom stylesheets (see HTML_EXTRA_STYLESHEET) one can\n# further fine-tune the look of the index. As an example, the default style\n# sheet generated by doxygen has an example that shows how to put an image at\n# the root of the tree instead of the PROJECT_NAME. Since the tree basically has\n# the same information as the tab index, you could consider setting\n# DISABLE_INDEX to YES when enabling this option.\n# The default value is: NO.\n",
                      "markdown": "`# (i.e. any modern browser). Windows users are probably better off using the\n# HTML help feature. Via custom stylesheets (see HTML_EXTRA_STYLESHEET) one can\n# further fine-tune the look of the index. As an example, the default style\n# sheet generated by doxygen has an example that shows how to put an image at\n# the root of the tree instead of the PROJECT_NAME. Since the tree basically has\n# the same information as the tab index, you could consider setting\n# DISABLE_INDEX to YES when enabling this option.\n# The default value is: NO.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 1414,
                  "startColumn": 73,
                  "endLine": 1414,
                  "endColumn": 77,
                  "snippet": {
                    "text": "\n# If you want full control over the layout of the generated HTML pages it might\n# be necessary to disable the index and replace it with your own. The\n# DISABLE_INDEX tag can be used to turn on/off the condensed index (tabs) at top\n# of each HTML page. A value of NO enables the index and the value YES disables\n# it. Since the tabs in the index contain the same information as the navigation\n# tree, you can set this option to YES if you also set GENERATE_TREEVIEW to YES.\n",
                    "rendered": {
                      "text": "\n# If you want full control over the layout of the generated HTML pages it might\n# be necessary to disable the index and replace it with your own. The\n# DISABLE_INDEX tag can be used to turn on/off the condensed index (tabs) at top\n# of each HTML page. A value of NO enables the index and the value YES disables\n# it. Since the tabs in the index contain the same information as the navigation\n# tree, you can set this option to YES if you also set GENERATE_TREEVIEW to YES.\n",
                      "markdown": "`\n# If you want full control over the layout of the generated HTML pages it might\n# be necessary to disable the index and replace it with your own. The\n# DISABLE_INDEX tag can be used to turn on/off the condensed index (tabs) at top\n# of each HTML page. A value of NO enables the index and the value YES disables\n# it. Since the tabs in the index contain the same information as the navigation\n# tree, you can set this option to YES if you also set GENERATE_TREEVIEW to YES.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 1412,
                  "startColumn": 18,
                  "endLine": 1412,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\nECLIPSE_DOC_ID         = org.doxygen.Project\n\n# If you want full control over the layout of the generated HTML pages it might\n# be necessary to disable the index and replace it with your own. The\n# DISABLE_INDEX tag can be used to turn on/off the condensed index (tabs) at top\n# of each HTML page. A value of NO enables the index and the value YES disables\n",
                    "rendered": {
                      "text": "\nECLIPSE_DOC_ID         = org.doxygen.Project\n\n# If you want full control over the layout of the generated HTML pages it might\n# be necessary to disable the index and replace it with your own. The\n# DISABLE_INDEX tag can be used to turn on/off the condensed index (tabs) at top\n# of each HTML page. A value of NO enables the index and the value YES disables\n",
                      "markdown": "`\nECLIPSE_DOC_ID         = org.doxygen.Project\n\n# If you want full control over the layout of the generated HTML pages it might\n# be necessary to disable the index and replace it with your own. The\n# DISABLE_INDEX tag can be used to turn on/off the condensed index (tabs) at top\n# of each HTML page. A value of NO enables the index and the value YES disables\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 1230,
                  "startColumn": 77,
                  "endLine": 1231,
                  "snippet": {
                    "text": "# OSX 10.5 (Leopard). To create a documentation set, doxygen will generate a\n# Makefile in the HTML output directory. Running make will produce the docset in\n# that directory and running make install will install the docset in\n# ~/Library/Developer/Shared/Documentation/DocSets so that Xcode will find it at\n# startup. See http://developer.apple.com/tools/creatingdocsetswithdoxygen.html\n# for more information.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n",
                    "rendered": {
                      "text": "# OSX 10.5 (Leopard). To create a documentation set, doxygen will generate a\n# Makefile in the HTML output directory. Running make will produce the docset in\n# that directory and running make install will install the docset in\n# ~/Library/Developer/Shared/Documentation/DocSets so that Xcode will find it at\n# startup. See http://developer.apple.com/tools/creatingdocsetswithdoxygen.html\n# for more information.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n",
                      "markdown": "`# OSX 10.5 (Leopard). To create a documentation set, doxygen will generate a\n# Makefile in the HTML output directory. Running make will produce the docset in\n# that directory and running make install will install the docset in\n# ~/Library/Developer/Shared/Documentation/DocSets so that Xcode will find it at\n# startup. See http://developer.apple.com/tools/creatingdocsetswithdoxygen.html\n# for more information.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 1214,
                  "startColumn": 19,
                  "endLine": 1214,
                  "endColumn": 23,
                  "snippet": {
                    "text": "# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries\n# shown in the various tree structured indices initially; the user can expand\n# and collapse entries dynamically later on. Doxygen will expand the tree to\n# such a level that at most the specified number of entries are visible (unless\n# a fully collapsed tree already exceeds this amount). So setting the number of\n# entries 1 will produce a full collapsed tree by default. 0 is a special value\n# representing an infinite number of entries and will result in a full expanded\n",
                    "rendered": {
                      "text": "# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries\n# shown in the various tree structured indices initially; the user can expand\n# and collapse entries dynamically later on. Doxygen will expand the tree to\n# such a level that at most the specified number of entries are visible (unless\n# a fully collapsed tree already exceeds this amount). So setting the number of\n# entries 1 will produce a full collapsed tree by default. 0 is a special value\n# representing an infinite number of entries and will result in a full expanded\n",
                      "markdown": "`# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries\n# shown in the various tree structured indices initially; the user can expand\n# and collapse entries dynamically later on. Doxygen will expand the tree to\n# such a level that at most the specified number of entries are visible (unless\n# a fully collapsed tree already exceeds this amount). So setting the number of\n# entries 1 will produce a full collapsed tree by default. 0 is a special value\n# representing an infinite number of entries and will result in a full expanded\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 1213,
                  "startColumn": 57,
                  "endLine": 1213,
                  "endColumn": 65,
                  "snippet": {
                    "text": "\n# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries\n# shown in the various tree structured indices initially; the user can expand\n# and collapse entries dynamically later on. Doxygen will expand the tree to\n# such a level that at most the specified number of entries are visible (unless\n# a fully collapsed tree already exceeds this amount). So setting the number of\n# entries 1 will produce a full collapsed tree by default. 0 is a special value\n",
                    "rendered": {
                      "text": "\n# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries\n# shown in the various tree structured indices initially; the user can expand\n# and collapse entries dynamically later on. Doxygen will expand the tree to\n# such a level that at most the specified number of entries are visible (unless\n# a fully collapsed tree already exceeds this amount). So setting the number of\n# entries 1 will produce a full collapsed tree by default. 0 is a special value\n",
                      "markdown": "`\n# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries\n# shown in the various tree structured indices initially; the user can expand\n# and collapse entries dynamically later on. Doxygen will expand the tree to\n# such a level that at most the specified number of entries are visible (unless\n# a fully collapsed tree already exceeds this amount). So setting the number of\n# entries 1 will produce a full collapsed tree by default. 0 is a special value\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 1212,
                  "startColumn": 70,
                  "endLine": 1213,
                  "snippet": {
                    "text": "HTML_DYNAMIC_SECTIONS  = NO\n\n# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries\n# shown in the various tree structured indices initially; the user can expand\n# and collapse entries dynamically later on. Doxygen will expand the tree to\n# such a level that at most the specified number of entries are visible (unless\n# a fully collapsed tree already exceeds this amount). So setting the number of\n# entries 1 will produce a full collapsed tree by default. 0 is a special value\n",
                    "rendered": {
                      "text": "HTML_DYNAMIC_SECTIONS  = NO\n\n# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries\n# shown in the various tree structured indices initially; the user can expand\n# and collapse entries dynamically later on. Doxygen will expand the tree to\n# such a level that at most the specified number of entries are visible (unless\n# a fully collapsed tree already exceeds this amount). So setting the number of\n# entries 1 will produce a full collapsed tree by default. 0 is a special value\n",
                      "markdown": "`HTML_DYNAMIC_SECTIONS  = NO\n\n# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries\n# shown in the various tree structured indices initially; the user can expand\n# and collapse entries dynamically later on. Doxygen will expand the tree to\n# such a level that at most the specified number of entries are visible (unless\n# a fully collapsed tree already exceeds this amount). So setting the number of\n# entries 1 will produce a full collapsed tree by default. 0 is a special value\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 1211,
                  "startColumn": 37,
                  "endLine": 1211,
                  "endColumn": 46,
                  "snippet": {
                    "text": "\nHTML_DYNAMIC_SECTIONS  = NO\n\n# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries\n# shown in the various tree structured indices initially; the user can expand\n# and collapse entries dynamically later on. Doxygen will expand the tree to\n# such a level that at most the specified number of entries are visible (unless\n",
                    "rendered": {
                      "text": "\nHTML_DYNAMIC_SECTIONS  = NO\n\n# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries\n# shown in the various tree structured indices initially; the user can expand\n# and collapse entries dynamically later on. Doxygen will expand the tree to\n# such a level that at most the specified number of entries are visible (unless\n",
                      "markdown": "`\nHTML_DYNAMIC_SECTIONS  = NO\n\n# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries\n# shown in the various tree structured indices initially; the user can expand\n# and collapse entries dynamically later on. Doxygen will expand the tree to\n# such a level that at most the specified number of entries are visible (unless\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 1032,
                  "startColumn": 70,
                  "endLine": 1032,
                  "endColumn": 74,
                  "snippet": {
                    "text": "VERBATIM_HEADERS       = YES\n\n# If the CLANG_ASSISTED_PARSING tag is set to YES, then doxygen will use the\n# clang parser (see: http://clang.llvm.org/) for more accurate parsing at the\n# cost of reduced performance. This can be particularly helpful with template\n# rich C++ code for which doxygen's built-in parser lacks the necessary type\n# information.\n",
                    "rendered": {
                      "text": "VERBATIM_HEADERS       = YES\n\n# If the CLANG_ASSISTED_PARSING tag is set to YES, then doxygen will use the\n# clang parser (see: http://clang.llvm.org/) for more accurate parsing at the\n# cost of reduced performance. This can be particularly helpful with template\n# rich C++ code for which doxygen's built-in parser lacks the necessary type\n# information.\n",
                      "markdown": "`VERBATIM_HEADERS       = YES\n\n# If the CLANG_ASSISTED_PARSING tag is set to YES, then doxygen will use the\n# clang parser (see: http://clang.llvm.org/) for more accurate parsing at the\n# cost of reduced performance. This can be particularly helpful with template\n# rich C++ code for which doxygen's built-in parser lacks the necessary type\n# information.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 666,
                  "startColumn": 13,
                  "endLine": 666,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\n# The FILE_VERSION_FILTER tag can be used to specify a program or script that\n# doxygen should invoke to get the current version for each file (typically from\n# the version control system). Doxygen will invoke the program by executing (via\n# popen()) the command command input-file, where command is the value of the\n# FILE_VERSION_FILTER tag, and input-file is the name of an input file provided\n# by doxygen. Whatever the program writes to standard output is used as the file\n",
                    "rendered": {
                      "text": "\n# The FILE_VERSION_FILTER tag can be used to specify a program or script that\n# doxygen should invoke to get the current version for each file (typically from\n# the version control system). Doxygen will invoke the program by executing (via\n# popen()) the command command input-file, where command is the value of the\n# FILE_VERSION_FILTER tag, and input-file is the name of an input file provided\n# by doxygen. Whatever the program writes to standard output is used as the file\n",
                      "markdown": "`\n# The FILE_VERSION_FILTER tag can be used to specify a program or script that\n# doxygen should invoke to get the current version for each file (typically from\n# the version control system). Doxygen will invoke the program by executing (via\n# popen()) the command command input-file, where command is the value of the\n# FILE_VERSION_FILTER tag, and input-file is the name of an input file provided\n# by doxygen. Whatever the program writes to standard output is used as the file\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 643,
                  "startColumn": 74,
                  "endLine": 644,
                  "snippet": {
                    "text": "\nMAX_INITIALIZER_LINES  = 30\n\n# Set the SHOW_USED_FILES tag to NO to disable the list of files generated at\n# the bottom of the documentation of classes and structs. If set to YES the list\n# will mention the files that were used to generate the documentation.\n# The default value is: YES.\n\n",
                    "rendered": {
                      "text": "\nMAX_INITIALIZER_LINES  = 30\n\n# Set the SHOW_USED_FILES tag to NO to disable the list of files generated at\n# the bottom of the documentation of classes and structs. If set to YES the list\n# will mention the files that were used to generate the documentation.\n# The default value is: YES.\n\n",
                      "markdown": "`\nMAX_INITIALIZER_LINES  = 30\n\n# Set the SHOW_USED_FILES tag to NO to disable the list of files generated at\n# the bottom of the documentation of classes and structs. If set to YES the list\n# will mention the files that were used to generate the documentation.\n# The default value is: YES.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 404,
                  "startColumn": 10,
                  "endLine": 404,
                  "endColumn": 14,
                  "snippet": {
                    "text": "# doxygen will become slower. If the cache is too large, memory is wasted. The\n# cache size is given by this formula: 2^(16+LOOKUP_CACHE_SIZE). The valid range\n# is 0..9, the default is 0, corresponding to a cache size of 2^16=65536\n# symbols. At the end of a run doxygen will report the cache usage and suggest\n# the optimal cache size from a speed point of view.\n# Minimum value: 0, maximum value: 9, default value: 0.\n\n",
                    "rendered": {
                      "text": "# doxygen will become slower. If the cache is too large, memory is wasted. The\n# cache size is given by this formula: 2^(16+LOOKUP_CACHE_SIZE). The valid range\n# is 0..9, the default is 0, corresponding to a cache size of 2^16=65536\n# symbols. At the end of a run doxygen will report the cache usage and suggest\n# the optimal cache size from a speed point of view.\n# Minimum value: 0, maximum value: 9, default value: 0.\n\n",
                      "markdown": "`# doxygen will become slower. If the cache is too large, memory is wasted. The\n# cache size is given by this formula: 2^(16+LOOKUP_CACHE_SIZE). The valid range\n# is 0..9, the default is 0, corresponding to a cache size of 2^16=65536\n# symbols. At the end of a run doxygen will report the cache usage and suggest\n# the optimal cache size from a speed point of view.\n# Minimum value: 0, maximum value: 9, default value: 0.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 28,
                  "endLine": 44,
                  "endColumn": 32,
                  "snippet": {
                    "text": "can be used to enter a project or revision number. This\n# could be handy for archiving the generated documentation or if some version\n# control system is used.\n\nPROJECT_NUMBER         = 3.0.0\n\n# Using the PROJECT_BRIEF tag one can provide an optional one line description\n# for a project that appears at the top of each page and should give viewer a\n# quick idea about the purpose of the project. Keep the description short.\n\nPROJECT_BRIEF          = \"ModSecurity is an open source, cross platform web application firewall (WAF) engine for Apache, IIS and Nginx that is developed by Trustwave's SpiderLab",
                    "rendered": {
                      "text": "can be used to enter a project or revision number. This\n# could be handy for archiving the generated documentation or if some version\n# control system is used.\n\nPROJECT_NUMBER         = 3.0.0\n\n# Using the PROJECT_BRIEF tag one can provide an optional one line description\n# for a project that appears at the top of each page and should give viewer a\n# quick idea about the purpose of the project. Keep the description short.\n\nPROJECT_BRIEF          = \"ModSecurity is an open source, cross platform web application firewall (WAF) engine for Apache, IIS and Nginx that is developed by Trustwave's SpiderLab",
                      "markdown": "`can be used to enter a project or revision number. This\n# could be handy for archiving the generated documentation or if some version\n# control system is used.\n\nPROJECT_NUMBER         = 3.0.0\n\n# Using the PROJECT_BRIEF tag one can provide an optional one line description\n# for a project that appears at the top of each page and should give viewer a\n# quick idea about the purpose of the project. Keep the description short.\n\nPROJECT_BRIEF          = \"ModSecurity is an open source, cross platform web application firewall (WAF) engine for Apache, IIS and Nginx that is developed by Trustwave's SpiderLab`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 1,
                  "endLine": 39,
                  "endColumn": 10,
                  "snippet": {
                    "text": "\n# The PROJECT_NUMBER tag can be used to enter a project or revision number. This\n# could be handy for archiving the generated documentation or if some version\n# control system is used.\n\nPROJECT_NUMBER         = 3.0.0\n\n",
                    "rendered": {
                      "text": "\n# The PROJECT_NUMBER tag can be used to enter a project or revision number. This\n# could be handy for archiving the generated documentation or if some version\n# control system is used.\n\nPROJECT_NUMBER         = 3.0.0\n\n",
                      "markdown": "`\n# The PROJECT_NUMBER tag can be used to enter a project or revision number. This\n# could be handy for archiving the generated documentation or if some version\n# control system is used.\n\nPROJECT_NUMBER         = 3.0.0\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 2361,
                  "startColumn": 41,
                  "endLine": 2361,
                  "endColumn": 47,
                  "snippet": {
                    "text": "# generated by dot. A depth value of 3 means that only nodes reachable from the\n# root by following a path via at most 3 edges will be shown. Nodes that lay\n# further from the root node will be omitted. Note that setting this option to 1\n# or 2 may greatly reduce the computation time needed for large code bases. Also\n# note that the size of a graph can be further restricted by\n# DOT_GRAPH_MAX_NODES. Using a depth of 0 means no depth restriction.\n# Minimum value: 0, maximum value: 1000, default value: 0.\n",
                    "rendered": {
                      "text": "# generated by dot. A depth value of 3 means that only nodes reachable from the\n# root by following a path via at most 3 edges will be shown. Nodes that lay\n# further from the root node will be omitted. Note that setting this option to 1\n# or 2 may greatly reduce the computation time needed for large code bases. Also\n# note that the size of a graph can be further restricted by\n# DOT_GRAPH_MAX_NODES. Using a depth of 0 means no depth restriction.\n# Minimum value: 0, maximum value: 1000, default value: 0.\n",
                      "markdown": "`# generated by dot. A depth value of 3 means that only nodes reachable from the\n# root by following a path via at most 3 edges will be shown. Nodes that lay\n# further from the root node will be omitted. Note that setting this option to 1\n# or 2 may greatly reduce the computation time needed for large code bases. Also\n# note that the size of a graph can be further restricted by\n# DOT_GRAPH_MAX_NODES. Using a depth of 0 means no depth restriction.\n# Minimum value: 0, maximum value: 1000, default value: 0.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 2360,
                  "startColumn": 23,
                  "endLine": 2360,
                  "endColumn": 29,
                  "snippet": {
                    "text": "# The MAX_DOT_GRAPH_DEPTH tag can be used to set the maximum depth of the graphs\n# generated by dot. A depth value of 3 means that only nodes reachable from the\n# root by following a path via at most 3 edges will be shown. Nodes that lay\n# further from the root node will be omitted. Note that setting this option to 1\n# or 2 may greatly reduce the computation time needed for large code bases. Also\n# note that the size of a graph can be further restricted by\n# DOT_GRAPH_MAX_NODES. Using a depth of 0 means no depth restriction.\n",
                    "rendered": {
                      "text": "# The MAX_DOT_GRAPH_DEPTH tag can be used to set the maximum depth of the graphs\n# generated by dot. A depth value of 3 means that only nodes reachable from the\n# root by following a path via at most 3 edges will be shown. Nodes that lay\n# further from the root node will be omitted. Note that setting this option to 1\n# or 2 may greatly reduce the computation time needed for large code bases. Also\n# note that the size of a graph can be further restricted by\n# DOT_GRAPH_MAX_NODES. Using a depth of 0 means no depth restriction.\n",
                      "markdown": "`# The MAX_DOT_GRAPH_DEPTH tag can be used to set the maximum depth of the graphs\n# generated by dot. A depth value of 3 means that only nodes reachable from the\n# root by following a path via at most 3 edges will be shown. Nodes that lay\n# further from the root node will be omitted. Note that setting this option to 1\n# or 2 may greatly reduce the computation time needed for large code bases. Also\n# note that the size of a graph can be further restricted by\n# DOT_GRAPH_MAX_NODES. Using a depth of 0 means no depth restriction.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 2349,
                  "startColumn": 22,
                  "endLine": 2349,
                  "endColumn": 28,
                  "snippet": {
                    "text": "# that will be shown in the graph. If the number of nodes in a graph becomes\n# larger than this value, doxygen will truncate the graph, which is visualized\n# by representing a node as a red box. Note that doxygen if the number of direct\n# children of the root node in a graph is already larger than\n# DOT_GRAPH_MAX_NODES then the graph will not be shown at all. Also note that\n# the size of a graph can be further restricted by MAX_DOT_GRAPH_DEPTH.\n# Minimum value: 0, maximum value: 10000, default value: 50.\n",
                    "rendered": {
                      "text": "# that will be shown in the graph. If the number of nodes in a graph becomes\n# larger than this value, doxygen will truncate the graph, which is visualized\n# by representing a node as a red box. Note that doxygen if the number of direct\n# children of the root node in a graph is already larger than\n# DOT_GRAPH_MAX_NODES then the graph will not be shown at all. Also note that\n# the size of a graph can be further restricted by MAX_DOT_GRAPH_DEPTH.\n# Minimum value: 0, maximum value: 10000, default value: 50.\n",
                      "markdown": "`# that will be shown in the graph. If the number of nodes in a graph becomes\n# larger than this value, doxygen will truncate the graph, which is visualized\n# by representing a node as a red box. Note that doxygen if the number of direct\n# children of the root node in a graph is already larger than\n# DOT_GRAPH_MAX_NODES then the graph will not be shown at all. Also note that\n# the size of a graph can be further restricted by MAX_DOT_GRAPH_DEPTH.\n# Minimum value: 0, maximum value: 10000, default value: 50.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 2348,
                  "startColumn": 29,
                  "endLine": 2348,
                  "endColumn": 34,
                  "snippet": {
                    "text": "# The DOT_GRAPH_MAX_NODES tag can be used to set the maximum number of nodes\n# that will be shown in the graph. If the number of nodes in a graph becomes\n# larger than this value, doxygen will truncate the graph, which is visualized\n# by representing a node as a red box. Note that doxygen if the number of direct\n# children of the root node in a graph is already larger than\n# DOT_GRAPH_MAX_NODES then the graph will not be shown at all. Also note that\n# the size of a graph can be further restricted by MAX_DOT_GRAPH_DEPTH.\n",
                    "rendered": {
                      "text": "# The DOT_GRAPH_MAX_NODES tag can be used to set the maximum number of nodes\n# that will be shown in the graph. If the number of nodes in a graph becomes\n# larger than this value, doxygen will truncate the graph, which is visualized\n# by representing a node as a red box. Note that doxygen if the number of direct\n# children of the root node in a graph is already larger than\n# DOT_GRAPH_MAX_NODES then the graph will not be shown at all. Also note that\n# the size of a graph can be further restricted by MAX_DOT_GRAPH_DEPTH.\n",
                      "markdown": "`# The DOT_GRAPH_MAX_NODES tag can be used to set the maximum number of nodes\n# that will be shown in the graph. If the number of nodes in a graph becomes\n# larger than this value, doxygen will truncate the graph, which is visualized\n# by representing a node as a red box. Note that doxygen if the number of direct\n# children of the root node in a graph is already larger than\n# DOT_GRAPH_MAX_NODES then the graph will not be shown at all. Also note that\n# the size of a graph can be further restricted by MAX_DOT_GRAPH_DEPTH.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 2348,
                  "startColumn": 19,
                  "endLine": 2348,
                  "endColumn": 25,
                  "snippet": {
                    "text": "# The DOT_GRAPH_MAX_NODES tag can be used to set the maximum number of nodes\n# that will be shown in the graph. If the number of nodes in a graph becomes\n# larger than this value, doxygen will truncate the graph, which is visualized\n# by representing a node as a red box. Note that doxygen if the number of direct\n# children of the root node in a graph is already larger than\n# DOT_GRAPH_MAX_NODES then the graph will not be shown at all. Also note that\n# the size of a graph can be further restricted by MAX_DOT_GRAPH_DEPTH.\n",
                    "rendered": {
                      "text": "# The DOT_GRAPH_MAX_NODES tag can be used to set the maximum number of nodes\n# that will be shown in the graph. If the number of nodes in a graph becomes\n# larger than this value, doxygen will truncate the graph, which is visualized\n# by representing a node as a red box. Note that doxygen if the number of direct\n# children of the root node in a graph is already larger than\n# DOT_GRAPH_MAX_NODES then the graph will not be shown at all. Also note that\n# the size of a graph can be further restricted by MAX_DOT_GRAPH_DEPTH.\n",
                      "markdown": "`# The DOT_GRAPH_MAX_NODES tag can be used to set the maximum number of nodes\n# that will be shown in the graph. If the number of nodes in a graph becomes\n# larger than this value, doxygen will truncate the graph, which is visualized\n# by representing a node as a red box. Note that doxygen if the number of direct\n# children of the root node in a graph is already larger than\n# DOT_GRAPH_MAX_NODES then the graph will not be shown at all. Also note that\n# the size of a graph can be further restricted by MAX_DOT_GRAPH_DEPTH.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 2337,
                  "startColumn": 21,
                  "endLine": 2337,
                  "endColumn": 27,
                  "snippet": {
                    "text": "DIAFILE_DIRS           = \n\n# When using plantuml, the PLANTUML_JAR_PATH tag should be used to specify the\n# path where java can find the plantuml.jar file. If left blank, it is assumed\n# PlantUML is not used or called during a preprocessing step. Doxygen will\n# generate a warning when it encounters a \\startuml command in this case and\n# will not generate output for the diagram.\n",
                    "rendered": {
                      "text": "DIAFILE_DIRS           = \n\n# When using plantuml, the PLANTUML_JAR_PATH tag should be used to specify the\n# path where java can find the plantuml.jar file. If left blank, it is assumed\n# PlantUML is not used or called during a preprocessing step. Doxygen will\n# generate a warning when it encounters a \\startuml command in this case and\n# will not generate output for the diagram.\n",
                      "markdown": "`DIAFILE_DIRS           = \n\n# When using plantuml, the PLANTUML_JAR_PATH tag should be used to specify the\n# path where java can find the plantuml.jar file. If left blank, it is assumed\n# PlantUML is not used or called during a preprocessing step. Doxygen will\n# generate a warning when it encounters a \\startuml command in this case and\n# will not generate output for the diagram.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 2262,
                  "startColumn": 64,
                  "endLine": 2262,
                  "endColumn": 70,
                  "snippet": {
                    "text": "# If the CALLER_GRAPH tag is set to YES then doxygen will generate a caller\n# dependency graph for every global function or class method.\n#\n# Note that enabling this option will significantly increase the time of a run.\n# So in most cases it will be better to enable caller graphs for selected\n# functions only using the \\callergraph command.\n# The default value is: NO.\n",
                    "rendered": {
                      "text": "# If the CALLER_GRAPH tag is set to YES then doxygen will generate a caller\n# dependency graph for every global function or class method.\n#\n# Note that enabling this option will significantly increase the time of a run.\n# So in most cases it will be better to enable caller graphs for selected\n# functions only using the \\callergraph command.\n# The default value is: NO.\n",
                      "markdown": "`# If the CALLER_GRAPH tag is set to YES then doxygen will generate a caller\n# dependency graph for every global function or class method.\n#\n# Note that enabling this option will significantly increase the time of a run.\n# So in most cases it will be better to enable caller graphs for selected\n# functions only using the \\callergraph command.\n# The default value is: NO.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 2251,
                  "startColumn": 64,
                  "endLine": 2251,
                  "endColumn": 70,
                  "snippet": {
                    "text": "# If the CALL_GRAPH tag is set to YES then doxygen will generate a call\n# dependency graph for every global function or class method.\n#\n# Note that enabling this option will significantly increase the time of a run.\n# So in most cases it will be better to enable call graphs for selected\n# functions only using the \\callgraph command.\n# The default value is: NO.\n",
                    "rendered": {
                      "text": "# If the CALL_GRAPH tag is set to YES then doxygen will generate a call\n# dependency graph for every global function or class method.\n#\n# Note that enabling this option will significantly increase the time of a run.\n# So in most cases it will be better to enable call graphs for selected\n# functions only using the \\callgraph command.\n# The default value is: NO.\n",
                      "markdown": "`# If the CALL_GRAPH tag is set to YES then doxygen will generate a call\n# dependency graph for every global function or class method.\n#\n# Note that enabling this option will significantly increase the time of a run.\n# So in most cases it will be better to enable call graphs for selected\n# functions only using the \\callgraph command.\n# The default value is: NO.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 2172,
                  "startColumn": 24,
                  "endLine": 2172,
                  "endColumn": 30,
                  "snippet": {
                    "text": "\n# By default doxygen will tell dot to use the default font as specified with\n# DOT_FONTNAME. If you specify a different font using DOT_FONTNAME you can set\n# the path where dot can find it using this tag.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_FONTPATH           = \n",
                    "rendered": {
                      "text": "\n# By default doxygen will tell dot to use the default font as specified with\n# DOT_FONTNAME. If you specify a different font using DOT_FONTNAME you can set\n# the path where dot can find it using this tag.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_FONTPATH           = \n",
                      "markdown": "`\n# By default doxygen will tell dot to use the default font as specified with\n# DOT_FONTNAME. If you specify a different font using DOT_FONTNAME you can set\n# the path where dot can find it using this tag.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_FONTPATH           = \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 2155,
                  "startColumn": 21,
                  "endLine": 2155,
                  "endColumn": 27,
                  "snippet": {
                    "text": "\n# When you want a differently looking font in the dot files that doxygen\n# generates you can specify the font name using DOT_FONTNAME. You need to make\n# sure dot is able to find the font, which can be done by putting it in a\n# standard location or by setting the DOTFONTPATH environment variable or by\n# setting DOT_FONTPATH to the directory containing the font.\n# The default value is: Helvetica.\n",
                    "rendered": {
                      "text": "\n# When you want a differently looking font in the dot files that doxygen\n# generates you can specify the font name using DOT_FONTNAME. You need to make\n# sure dot is able to find the font, which can be done by putting it in a\n# standard location or by setting the DOTFONTPATH environment variable or by\n# setting DOT_FONTPATH to the directory containing the font.\n# The default value is: Helvetica.\n",
                      "markdown": "`\n# When you want a differently looking font in the dot files that doxygen\n# generates you can specify the font name using DOT_FONTNAME. You need to make\n# sure dot is able to find the font, which can be done by putting it in a\n# standard location or by setting the DOTFONTPATH environment variable or by\n# setting DOT_FONTPATH to the directory containing the font.\n# The default value is: Helvetica.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 2093,
                  "startColumn": 59,
                  "endLine": 2093,
                  "endColumn": 65,
                  "snippet": {
                    "text": "\nEXTERNAL_PAGES         = YES\n\n# The PERL_PATH should be the absolute path and name of the perl script\n# interpreter (i.e. the result of 'which perl').\n# The default file (with absolute path) is: /usr/bin/perl.\n\n",
                    "rendered": {
                      "text": "\nEXTERNAL_PAGES         = YES\n\n# The PERL_PATH should be the absolute path and name of the perl script\n# interpreter (i.e. the result of 'which perl').\n# The default file (with absolute path) is: /usr/bin/perl.\n\n",
                      "markdown": "`\nEXTERNAL_PAGES         = YES\n\n# The PERL_PATH should be the absolute path and name of the perl script\n# interpreter (i.e. the result of 'which perl').\n# The default file (with absolute path) is: /usr/bin/perl.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 1980,
                  "startColumn": 55,
                  "endLine": 1980,
                  "endColumn": 63,
                  "snippet": {
                    "text": "\nENABLE_PREPROCESSING   = YES\n\n# If the MACRO_EXPANSION tag is set to YES doxygen will expand all macro names\n# in the source code. If set to NO only conditional compilation will be\n# performed. Macro expansion can be done in a controlled way by setting\n# EXPAND_ONLY_PREDEF to YES.\n",
                    "rendered": {
                      "text": "\nENABLE_PREPROCESSING   = YES\n\n# If the MACRO_EXPANSION tag is set to YES doxygen will expand all macro names\n# in the source code. If set to NO only conditional compilation will be\n# performed. Macro expansion can be done in a controlled way by setting\n# EXPAND_ONLY_PREDEF to YES.\n",
                      "markdown": "`\nENABLE_PREPROCESSING   = YES\n\n# If the MACRO_EXPANSION tag is set to YES doxygen will expand all macro names\n# in the source code. If set to NO only conditional compilation will be\n# performed. Macro expansion can be done in a controlled way by setting\n# EXPAND_ONLY_PREDEF to YES.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 1955,
                  "startColumn": 57,
                  "endLine": 1955,
                  "endColumn": 63,
                  "snippet": {
                    "text": "# If the PERLMOD_PRETTY tag is set to YES the Perl module output will be nicely\n# formatted so it can be parsed by a human reader. This is useful if you want to\n# understand what is going on. On the other hand, if this tag is set to NO the\n# size of the Perl module output will be much smaller and Perl will parse it\n# just the same.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n",
                    "rendered": {
                      "text": "# If the PERLMOD_PRETTY tag is set to YES the Perl module output will be nicely\n# formatted so it can be parsed by a human reader. This is useful if you want to\n# understand what is going on. On the other hand, if this tag is set to NO the\n# size of the Perl module output will be much smaller and Perl will parse it\n# just the same.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n",
                      "markdown": "`# If the PERLMOD_PRETTY tag is set to YES the Perl module output will be nicely\n# formatted so it can be parsed by a human reader. This is useful if you want to\n# understand what is going on. On the other hand, if this tag is set to NO the\n# size of the Perl module output will be much smaller and Perl will parse it\n# just the same.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 1955,
                  "startColumn": 13,
                  "endLine": 1955,
                  "endColumn": 19,
                  "snippet": {
                    "text": "# If the PERLMOD_PRETTY tag is set to YES the Perl module output will be nicely\n# formatted so it can be parsed by a human reader. This is useful if you want to\n# understand what is going on. On the other hand, if this tag is set to NO the\n# size of the Perl module output will be much smaller and Perl will parse it\n# just the same.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n",
                    "rendered": {
                      "text": "# If the PERLMOD_PRETTY tag is set to YES the Perl module output will be nicely\n# formatted so it can be parsed by a human reader. This is useful if you want to\n# understand what is going on. On the other hand, if this tag is set to NO the\n# size of the Perl module output will be much smaller and Perl will parse it\n# just the same.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n",
                      "markdown": "`# If the PERLMOD_PRETTY tag is set to YES the Perl module output will be nicely\n# formatted so it can be parsed by a human reader. This is useful if you want to\n# understand what is going on. On the other hand, if this tag is set to NO the\n# size of the Perl module output will be much smaller and Perl will parse it\n# just the same.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 1952,
                  "startColumn": 45,
                  "endLine": 1952,
                  "endColumn": 51,
                  "snippet": {
                    "text": "\nPERLMOD_LATEX          = NO\n\n# If the PERLMOD_PRETTY tag is set to YES the Perl module output will be nicely\n# formatted so it can be parsed by a human reader. This is useful if you want to\n# understand what is going on. On the other hand, if this tag is set to NO the\n# size of the Perl module output will be much smaller and Perl will parse it\n",
                    "rendered": {
                      "text": "\nPERLMOD_LATEX          = NO\n\n# If the PERLMOD_PRETTY tag is set to YES the Perl module output will be nicely\n# formatted so it can be parsed by a human reader. This is useful if you want to\n# understand what is going on. On the other hand, if this tag is set to NO the\n# size of the Perl module output will be much smaller and Perl will parse it\n",
                      "markdown": "`\nPERLMOD_LATEX          = NO\n\n# If the PERLMOD_PRETTY tag is set to YES the Perl module output will be nicely\n# formatted so it can be parsed by a human reader. This is useful if you want to\n# understand what is going on. On the other hand, if this tag is set to NO the\n# size of the Perl module output will be much smaller and Perl will parse it\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 1946,
                  "startColumn": 17,
                  "endLine": 1946,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\n# If the PERLMOD_LATEX tag is set to YES doxygen will generate the necessary\n# Makefile rules, Perl scripts and LaTeX code to be able to generate PDF and DVI\n# output from the Perl module output.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n\n",
                    "rendered": {
                      "text": "\n# If the PERLMOD_LATEX tag is set to YES doxygen will generate the necessary\n# Makefile rules, Perl scripts and LaTeX code to be able to generate PDF and DVI\n# output from the Perl module output.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n\n",
                      "markdown": "`\n# If the PERLMOD_LATEX tag is set to YES doxygen will generate the necessary\n# Makefile rules, Perl scripts and LaTeX code to be able to generate PDF and DVI\n# output from the Perl module output.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 1945,
                  "startColumn": 17,
                  "endLine": 1945,
                  "endColumn": 23,
                  "snippet": {
                    "text": "GENERATE_PERLMOD       = NO\n\n# If the PERLMOD_LATEX tag is set to YES doxygen will generate the necessary\n# Makefile rules, Perl scripts and LaTeX code to be able to generate PDF and DVI\n# output from the Perl module output.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n",
                    "rendered": {
                      "text": "GENERATE_PERLMOD       = NO\n\n# If the PERLMOD_LATEX tag is set to YES doxygen will generate the necessary\n# Makefile rules, Perl scripts and LaTeX code to be able to generate PDF and DVI\n# output from the Perl module output.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n",
                      "markdown": "`GENERATE_PERLMOD       = NO\n\n# If the PERLMOD_LATEX tag is set to YES doxygen will generate the necessary\n# Makefile rules, Perl scripts and LaTeX code to be able to generate PDF and DVI\n# output from the Perl module output.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 1936,
                  "startColumn": 67,
                  "endLine": 1936,
                  "endColumn": 73,
                  "snippet": {
                    "text": "# Configuration options related to the Perl module output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_PERLMOD tag is set to YES doxygen will generate a Perl module\n# file that captures the structure of the code including all documentation.\n#\n# Note that this feature is still experimental and incomplete at the moment.\n",
                    "rendered": {
                      "text": "# Configuration options related to the Perl module output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_PERLMOD tag is set to YES doxygen will generate a Perl module\n# file that captures the structure of the code including all documentation.\n#\n# Note that this feature is still experimental and incomplete at the moment.\n",
                      "markdown": "`# Configuration options related to the Perl module output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_PERLMOD tag is set to YES doxygen will generate a Perl module\n# file that captures the structure of the code including all documentation.\n#\n# Note that this feature is still experimental and incomplete at the moment.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 1933,
                  "startColumn": 38,
                  "endLine": 1933,
                  "endColumn": 44,
                  "snippet": {
                    "text": "GENERATE_AUTOGEN_DEF   = NO\n\n#---------------------------------------------------------------------------\n# Configuration options related to the Perl module output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_PERLMOD tag is set to YES doxygen will generate a Perl module\n",
                    "rendered": {
                      "text": "GENERATE_AUTOGEN_DEF   = NO\n\n#---------------------------------------------------------------------------\n# Configuration options related to the Perl module output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_PERLMOD tag is set to YES doxygen will generate a Perl module\n",
                      "markdown": "`GENERATE_AUTOGEN_DEF   = NO\n\n#---------------------------------------------------------------------------\n# Configuration options related to the Perl module output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_PERLMOD tag is set to YES doxygen will generate a Perl module\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 1860,
                  "startColumn": 41,
                  "endLine": 1860,
                  "endColumn": 47,
                  "snippet": {
                    "text": "# If the MAN_LINKS tag is set to YES and doxygen generates man output, then it\n# will generate one additional man file for each entity documented in the real\n# man page(s). These additional files only source the real man page, but without\n# them the man command would be unable to find the correct page.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_MAN is set to YES.\n\n",
                    "rendered": {
                      "text": "# If the MAN_LINKS tag is set to YES and doxygen generates man output, then it\n# will generate one additional man file for each entity documented in the real\n# man page(s). These additional files only source the real man page, but without\n# them the man command would be unable to find the correct page.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_MAN is set to YES.\n\n",
                      "markdown": "`# If the MAN_LINKS tag is set to YES and doxygen generates man output, then it\n# will generate one additional man file for each entity documented in the real\n# man page(s). These additional files only source the real man page, but without\n# them the man command would be unable to find the correct page.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_MAN is set to YES.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 1567,
                  "startColumn": 1,
                  "endLine": 1567,
                  "endColumn": 9,
                  "snippet": {
                    "text": "SERVER_BASED_SEARCH    = NO\n\n# When EXTERNAL_SEARCH tag is enabled doxygen will no longer generate the PHP\n# script for searching. Instead the search results are written to an XML file\n# which needs to be processed by an external indexer. Doxygen will invoke an\n# external search engine pointed to by the SEARCHENGINE_URL option to obtain the\n# search results.\n",
                    "rendered": {
                      "text": "SERVER_BASED_SEARCH    = NO\n\n# When EXTERNAL_SEARCH tag is enabled doxygen will no longer generate the PHP\n# script for searching. Instead the search results are written to an XML file\n# which needs to be processed by an external indexer. Doxygen will invoke an\n# external search engine pointed to by the SEARCHENGINE_URL option to obtain the\n# search results.\n",
                      "markdown": "`SERVER_BASED_SEARCH    = NO\n\n# When EXTERNAL_SEARCH tag is enabled doxygen will no longer generate the PHP\n# script for searching. Instead the search results are written to an XML file\n# which needs to be processed by an external indexer. Doxygen will invoke an\n# external search engine pointed to by the SEARCHENGINE_URL option to obtain the\n# search results.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 1566,
                  "startColumn": 73,
                  "endLine": 1567,
                  "snippet": {
                    "text": "\nSERVER_BASED_SEARCH    = NO\n\n# When EXTERNAL_SEARCH tag is enabled doxygen will no longer generate the PHP\n# script for searching. Instead the search results are written to an XML file\n# which needs to be processed by an external indexer. Doxygen will invoke an\n# external search engine pointed to by the SEARCHENGINE_URL option to obtain the\n# search results.\n",
                    "rendered": {
                      "text": "\nSERVER_BASED_SEARCH    = NO\n\n# When EXTERNAL_SEARCH tag is enabled doxygen will no longer generate the PHP\n# script for searching. Instead the search results are written to an XML file\n# which needs to be processed by an external indexer. Doxygen will invoke an\n# external search engine pointed to by the SEARCHENGINE_URL option to obtain the\n# search results.\n",
                      "markdown": "`\nSERVER_BASED_SEARCH    = NO\n\n# When EXTERNAL_SEARCH tag is enabled doxygen will no longer generate the PHP\n# script for searching. Instead the search results are written to an XML file\n# which needs to be processed by an external indexer. Doxygen will invoke an\n# external search engine pointed to by the SEARCHENGINE_URL option to obtain the\n# search results.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 1557,
                  "startColumn": 49,
                  "endLine": 1557,
                  "endColumn": 54,
                  "snippet": {
                    "text": "# When the SERVER_BASED_SEARCH tag is enabled the search engine will be\n# implemented using a web server instead of a web client using Javascript. There\n# are two flavors of web server based searching depending on the EXTERNAL_SEARCH\n# setting. When disabled, doxygen will generate a PHP script for searching and\n# an index file used by the script. When EXTERNAL_SEARCH is enabled the indexing\n# and searching needs to be provided by external tools. See the section\n# \"External Indexing and Searching\" for details.\n",
                    "rendered": {
                      "text": "# When the SERVER_BASED_SEARCH tag is enabled the search engine will be\n# implemented using a web server instead of a web client using Javascript. There\n# are two flavors of web server based searching depending on the EXTERNAL_SEARCH\n# setting. When disabled, doxygen will generate a PHP script for searching and\n# an index file used by the script. When EXTERNAL_SEARCH is enabled the indexing\n# and searching needs to be provided by external tools. See the section\n# \"External Indexing and Searching\" for details.\n",
                      "markdown": "`# When the SERVER_BASED_SEARCH tag is enabled the search engine will be\n# implemented using a web server instead of a web client using Javascript. There\n# are two flavors of web server based searching depending on the EXTERNAL_SEARCH\n# setting. When disabled, doxygen will generate a PHP script for searching and\n# an index file used by the script. When EXTERNAL_SEARCH is enabled the indexing\n# and searching needs to be provided by external tools. See the section\n# \"External Indexing and Searching\" for details.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 1414,
                  "startColumn": 76,
                  "endLine": 1415,
                  "snippet": {
                    "text": "\n# If you want full control over the layout of the generated HTML pages it might\n# be necessary to disable the index and replace it with your own. The\n# DISABLE_INDEX tag can be used to turn on/off the condensed index (tabs) at top\n# of each HTML page. A value of NO enables the index and the value YES disables\n# it. Since the tabs in the index contain the same information as the navigation\n# tree, you can set this option to YES if you also set GENERATE_TREEVIEW to YES.\n# The default value is: NO.\n",
                    "rendered": {
                      "text": "\n# If you want full control over the layout of the generated HTML pages it might\n# be necessary to disable the index and replace it with your own. The\n# DISABLE_INDEX tag can be used to turn on/off the condensed index (tabs) at top\n# of each HTML page. A value of NO enables the index and the value YES disables\n# it. Since the tabs in the index contain the same information as the navigation\n# tree, you can set this option to YES if you also set GENERATE_TREEVIEW to YES.\n# The default value is: NO.\n",
                      "markdown": "`\n# If you want full control over the layout of the generated HTML pages it might\n# be necessary to disable the index and replace it with your own. The\n# DISABLE_INDEX tag can be used to turn on/off the condensed index (tabs) at top\n# of each HTML page. A value of NO enables the index and the value YES disables\n# it. Since the tabs in the index contain the same information as the navigation\n# tree, you can set this option to YES if you also set GENERATE_TREEVIEW to YES.\n# The default value is: NO.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 1230,
                  "startColumn": 69,
                  "endLine": 1230,
                  "endColumn": 75,
                  "snippet": {
                    "text": "# OSX 10.5 (Leopard). To create a documentation set, doxygen will generate a\n# Makefile in the HTML output directory. Running make will produce the docset in\n# that directory and running make install will install the docset in\n# ~/Library/Developer/Shared/Documentation/DocSets so that Xcode will find it at\n# startup. See http://developer.apple.com/tools/creatingdocsetswithdoxygen.html\n# for more information.\n# The default value is: NO.\n",
                    "rendered": {
                      "text": "# OSX 10.5 (Leopard). To create a documentation set, doxygen will generate a\n# Makefile in the HTML output directory. Running make will produce the docset in\n# that directory and running make install will install the docset in\n# ~/Library/Developer/Shared/Documentation/DocSets so that Xcode will find it at\n# startup. See http://developer.apple.com/tools/creatingdocsetswithdoxygen.html\n# for more information.\n# The default value is: NO.\n",
                      "markdown": "`# OSX 10.5 (Leopard). To create a documentation set, doxygen will generate a\n# Makefile in the HTML output directory. Running make will produce the docset in\n# that directory and running make install will install the docset in\n# ~/Library/Developer/Shared/Documentation/DocSets so that Xcode will find it at\n# startup. See http://developer.apple.com/tools/creatingdocsetswithdoxygen.html\n# for more information.\n# The default value is: NO.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 1213,
                  "startColumn": 57,
                  "endLine": 1213,
                  "endColumn": 65,
                  "snippet": {
                    "text": "\n# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries\n# shown in the various tree structured indices initially; the user can expand\n# and collapse entries dynamically later on. Doxygen will expand the tree to\n# such a level that at most the specified number of entries are visible (unless\n# a fully collapsed tree already exceeds this amount). So setting the number of\n# entries 1 will produce a full collapsed tree by default. 0 is a special value\n",
                    "rendered": {
                      "text": "\n# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries\n# shown in the various tree structured indices initially; the user can expand\n# and collapse entries dynamically later on. Doxygen will expand the tree to\n# such a level that at most the specified number of entries are visible (unless\n# a fully collapsed tree already exceeds this amount). So setting the number of\n# entries 1 will produce a full collapsed tree by default. 0 is a special value\n",
                      "markdown": "`\n# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries\n# shown in the various tree structured indices initially; the user can expand\n# and collapse entries dynamically later on. Doxygen will expand the tree to\n# such a level that at most the specified number of entries are visible (unless\n# a fully collapsed tree already exceeds this amount). So setting the number of\n# entries 1 will produce a full collapsed tree by default. 0 is a special value\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 1212,
                  "startColumn": 70,
                  "endLine": 1213,
                  "snippet": {
                    "text": "HTML_DYNAMIC_SECTIONS  = NO\n\n# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries\n# shown in the various tree structured indices initially; the user can expand\n# and collapse entries dynamically later on. Doxygen will expand the tree to\n# such a level that at most the specified number of entries are visible (unless\n# a fully collapsed tree already exceeds this amount). So setting the number of\n# entries 1 will produce a full collapsed tree by default. 0 is a special value\n",
                    "rendered": {
                      "text": "HTML_DYNAMIC_SECTIONS  = NO\n\n# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries\n# shown in the various tree structured indices initially; the user can expand\n# and collapse entries dynamically later on. Doxygen will expand the tree to\n# such a level that at most the specified number of entries are visible (unless\n# a fully collapsed tree already exceeds this amount). So setting the number of\n# entries 1 will produce a full collapsed tree by default. 0 is a special value\n",
                      "markdown": "`HTML_DYNAMIC_SECTIONS  = NO\n\n# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries\n# shown in the various tree structured indices initially; the user can expand\n# and collapse entries dynamically later on. Doxygen will expand the tree to\n# such a level that at most the specified number of entries are visible (unless\n# a fully collapsed tree already exceeds this amount). So setting the number of\n# entries 1 will produce a full collapsed tree by default. 0 is a special value\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 1196,
                  "startColumn": 32,
                  "endLine": 1196,
                  "endColumn": 38,
                  "snippet": {
                    "text": "HTML_COLORSTYLE_GAMMA  = 80\n\n# If the HTML_TIMESTAMP tag is set to YES then the footer of each generated HTML\n# page will contain the date and time when the page was generated. Setting this\n# to NO can help when comparing the output of multiple runs.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n",
                    "rendered": {
                      "text": "HTML_COLORSTYLE_GAMMA  = 80\n\n# If the HTML_TIMESTAMP tag is set to YES then the footer of each generated HTML\n# page will contain the date and time when the page was generated. Setting this\n# to NO can help when comparing the output of multiple runs.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n",
                      "markdown": "`HTML_COLORSTYLE_GAMMA  = 80\n\n# If the HTML_TIMESTAMP tag is set to YES then the footer of each generated HTML\n# page will contain the date and time when the page was generated. Setting this\n# to NO can help when comparing the output of multiple runs.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 1170,
                  "startColumn": 20,
                  "endLine": 1170,
                  "endColumn": 25,
                  "snippet": {
                    "text": "# this color. Hue is specified as an angle on a colorwheel, see\n# http://en.wikipedia.org/wiki/Hue for more information. For instance the value\n# 0 represents red, 60 is yellow, 120 is green, 180 is cyan, 240 is blue, 300\n# purple, and 360 is red again.\n# Minimum value: 0, maximum value: 359, default value: 220.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\n",
                    "rendered": {
                      "text": "# this color. Hue is specified as an angle on a colorwheel, see\n# http://en.wikipedia.org/wiki/Hue for more information. For instance the value\n# 0 represents red, 60 is yellow, 120 is green, 180 is cyan, 240 is blue, 300\n# purple, and 360 is red again.\n# Minimum value: 0, maximum value: 359, default value: 220.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\n",
                      "markdown": "`# this color. Hue is specified as an angle on a colorwheel, see\n# http://en.wikipedia.org/wiki/Hue for more information. For instance the value\n# 0 represents red, 60 is yellow, 120 is green, 180 is cyan, 240 is blue, 300\n# purple, and 360 is red again.\n# Minimum value: 0, maximum value: 359, default value: 220.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 692,
                  "startColumn": 58,
                  "endLine": 692,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# extension is automatically appended if omitted. This requires the bibtex tool\n# to be installed. See also http://en.wikipedia.org/wiki/BibTeX for more info.\n# For LaTeX the style of the bibliography can be controlled using\n# LATEX_BIB_STYLE. To use this feature you need bibtex and perl available in the\n# search path. See also \\cite for info how to create references.\n\nCITE_BIB_FILES         = \n",
                    "rendered": {
                      "text": "# extension is automatically appended if omitted. This requires the bibtex tool\n# to be installed. See also http://en.wikipedia.org/wiki/BibTeX for more info.\n# For LaTeX the style of the bibliography can be controlled using\n# LATEX_BIB_STYLE. To use this feature you need bibtex and perl available in the\n# search path. See also \\cite for info how to create references.\n\nCITE_BIB_FILES         = \n",
                      "markdown": "`# extension is automatically appended if omitted. This requires the bibtex tool\n# to be installed. See also http://en.wikipedia.org/wiki/BibTeX for more info.\n# For LaTeX the style of the bibliography can be controlled using\n# LATEX_BIB_STYLE. To use this feature you need bibtex and perl available in the\n# search path. See also \\cite for info how to create references.\n\nCITE_BIB_FILES         = \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 664,
                  "startColumn": 65,
                  "endLine": 664,
                  "endColumn": 73,
                  "snippet": {
                    "text": "\nSHOW_NAMESPACES        = YES\n\n# The FILE_VERSION_FILTER tag can be used to specify a program or script that\n# doxygen should invoke to get the current version for each file (typically from\n# the version control system). Doxygen will invoke the program by executing (via\n# popen()) the command command input-file, where command is the value of the\n",
                    "rendered": {
                      "text": "\nSHOW_NAMESPACES        = YES\n\n# The FILE_VERSION_FILTER tag can be used to specify a program or script that\n# doxygen should invoke to get the current version for each file (typically from\n# the version control system). Doxygen will invoke the program by executing (via\n# popen()) the command command input-file, where command is the value of the\n",
                      "markdown": "`\nSHOW_NAMESPACES        = YES\n\n# The FILE_VERSION_FILTER tag can be used to specify a program or script that\n# doxygen should invoke to get the current version for each file (typically from\n# the version control system). Doxygen will invoke the program by executing (via\n# popen()) the command command input-file, where command is the value of the\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 572,
                  "startColumn": 61,
                  "endLine": 572,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\nSORT_MEMBERS_CTORS_1ST = NO\n\n# If the SORT_GROUP_NAMES tag is set to YES then doxygen will sort the hierarchy\n# of group names into alphabetical order. If set to NO the group names will\n# appear in their defined order.\n# The default value is: NO.\n",
                    "rendered": {
                      "text": "\nSORT_MEMBERS_CTORS_1ST = NO\n\n# If the SORT_GROUP_NAMES tag is set to YES then doxygen will sort the hierarchy\n# of group names into alphabetical order. If set to NO the group names will\n# appear in their defined order.\n# The default value is: NO.\n",
                      "markdown": "`\nSORT_MEMBERS_CTORS_1ST = NO\n\n# If the SORT_GROUP_NAMES tag is set to YES then doxygen will sort the hierarchy\n# of group names into alphabetical order. If set to NO the group names will\n# appear in their defined order.\n# The default value is: NO.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 560,
                  "startColumn": 67,
                  "endLine": 560,
                  "endColumn": 73,
                  "snippet": {
                    "text": "\nSORT_BRIEF_DOCS        = NO\n\n# If the SORT_MEMBERS_CTORS_1ST tag is set to YES then doxygen will sort the\n# (brief and detailed) documentation of class members so that constructors and\n# destructors are listed first. If set to NO the constructors will appear in the\n# respective orders defined by SORT_BRIEF_DOCS and SORT_MEMBER_DOCS.\n",
                    "rendered": {
                      "text": "\nSORT_BRIEF_DOCS        = NO\n\n# If the SORT_MEMBERS_CTORS_1ST tag is set to YES then doxygen will sort the\n# (brief and detailed) documentation of class members so that constructors and\n# destructors are listed first. If set to NO the constructors will appear in the\n# respective orders defined by SORT_BRIEF_DOCS and SORT_MEMBER_DOCS.\n",
                      "markdown": "`\nSORT_BRIEF_DOCS        = NO\n\n# If the SORT_MEMBERS_CTORS_1ST tag is set to YES then doxygen will sort the\n# (brief and detailed) documentation of class members so that constructors and\n# destructors are listed first. If set to NO the constructors will appear in the\n# respective orders defined by SORT_BRIEF_DOCS and SORT_MEMBER_DOCS.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 552,
                  "startColumn": 60,
                  "endLine": 552,
                  "endColumn": 66,
                  "snippet": {
                    "text": "\nSORT_MEMBER_DOCS       = YES\n\n# If the SORT_BRIEF_DOCS tag is set to YES then doxygen will sort the brief\n# descriptions of file, namespace and class members alphabetically by member\n# name. If set to NO the members will appear in declaration order. Note that\n# this will also influence the order of the classes in the class list.\n",
                    "rendered": {
                      "text": "\nSORT_MEMBER_DOCS       = YES\n\n# If the SORT_BRIEF_DOCS tag is set to YES then doxygen will sort the brief\n# descriptions of file, namespace and class members alphabetically by member\n# name. If set to NO the members will appear in declaration order. Note that\n# this will also influence the order of the classes in the class list.\n",
                      "markdown": "`\nSORT_MEMBER_DOCS       = YES\n\n# If the SORT_BRIEF_DOCS tag is set to YES then doxygen will sort the brief\n# descriptions of file, namespace and class members alphabetically by member\n# name. If set to NO the members will appear in declaration order. Note that\n# this will also influence the order of the classes in the class list.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 545,
                  "startColumn": 61,
                  "endLine": 545,
                  "endColumn": 67,
                  "snippet": {
                    "text": "\nINLINE_INFO            = YES\n\n# If the SORT_MEMBER_DOCS tag is set to YES then doxygen will sort the\n# (detailed) documentation of file and class members alphabetically by member\n# name. If set to NO the members will appear in declaration order.\n# The default value is: YES.\n",
                    "rendered": {
                      "text": "\nINLINE_INFO            = YES\n\n# If the SORT_MEMBER_DOCS tag is set to YES then doxygen will sort the\n# (detailed) documentation of file and class members alphabetically by member\n# name. If set to NO the members will appear in declaration order.\n# The default value is: YES.\n",
                      "markdown": "`\nINLINE_INFO            = YES\n\n# If the SORT_MEMBER_DOCS tag is set to YES then doxygen will sort the\n# (detailed) documentation of file and class members alphabetically by member\n# name. If set to NO the members will appear in declaration order.\n# The default value is: YES.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/doc/doxygen.cfg"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 35,
                  "endLine": 44,
                  "endColumn": 40,
                  "snippet": {
                    "text": "used to enter a project or revision number. This\n# could be handy for archiving the generated documentation or if some version\n# control system is used.\n\nPROJECT_NUMBER         = 3.0.0\n\n# Using the PROJECT_BRIEF tag one can provide an optional one line description\n# for a project that appears at the top of each page and should give viewer a\n# quick idea about the purpose of the project. Keep the description short.\n\nPROJECT_BRIEF          = \"ModSecurity is an open source, cross platform web application firewall (WAF) engine for Apache, IIS and Nginx that is developed by Trustwave's SpiderLabs. It ha",
                    "rendered": {
                      "text": "used to enter a project or revision number. This\n# could be handy for archiving the generated documentation or if some version\n# control system is used.\n\nPROJECT_NUMBER         = 3.0.0\n\n# Using the PROJECT_BRIEF tag one can provide an optional one line description\n# for a project that appears at the top of each page and should give viewer a\n# quick idea about the purpose of the project. Keep the description short.\n\nPROJECT_BRIEF          = \"ModSecurity is an open source, cross platform web application firewall (WAF) engine for Apache, IIS and Nginx that is developed by Trustwave's SpiderLabs. It ha",
                      "markdown": "`used to enter a project or revision number. This\n# could be handy for archiving the generated documentation or if some version\n# control system is used.\n\nPROJECT_NUMBER         = 3.0.0\n\n# Using the PROJECT_BRIEF tag one can provide an optional one line description\n# for a project that appears at the top of each page and should give viewer a\n# quick idea about the purpose of the project. Keep the description short.\n\nPROJECT_BRIEF          = \"ModSecurity is an open source, cross platform web application firewall (WAF) engine for Apache, IIS and Nginx that is developed by Trustwave's SpiderLabs. It ha`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/win32/docker/Dockerfile"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 17,
                  "endLine": 70,
                  "snippet": {
                    "text": "\n# fetch submodules (bindings/python, others/libinjection, test/test-cases/secrules-language-tests)\nRUN git submodule init\nRUN git submodule update\n\n# build libraries\n#\n\n",
                    "rendered": {
                      "text": "\n# fetch submodules (bindings/python, others/libinjection, test/test-cases/secrules-language-tests)\nRUN git submodule init\nRUN git submodule update\n\n# build libraries\n#\n\n",
                      "markdown": "`\n# fetch submodules (bindings/python, others/libinjection, test/test-cases/secrules-language-tests)\nRUN git submodule init\nRUN git submodule update\n\n# build libraries\n#\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/win32/docker/Dockerfile"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 3,
                  "endLine": 69,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\n# fetch submodules (bindings/python, others/libinjection, test/test-cases/secrules-language-tests)\nRUN git submodule init\nRUN git submodule update\n\n# build libraries\n#\n",
                    "rendered": {
                      "text": "\n# fetch submodules (bindings/python, others/libinjection, test/test-cases/secrules-language-tests)\nRUN git submodule init\nRUN git submodule update\n\n# build libraries\n#\n",
                      "markdown": "`\n# fetch submodules (bindings/python, others/libinjection, test/test-cases/secrules-language-tests)\nRUN git submodule init\nRUN git submodule update\n\n# build libraries\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/win32/docker/Dockerfile"
                },
                "region": {
                  "startLine": 68,
                  "startColumn": 3,
                  "endLine": 68,
                  "endColumn": 8,
                  "snippet": {
                    "text": "WORKDIR ${MOD_SECURITY_DIR}\n\n# fetch submodules (bindings/python, others/libinjection, test/test-cases/secrules-language-tests)\nRUN git submodule init\nRUN git submodule update\n\n# build libraries\n",
                    "rendered": {
                      "text": "WORKDIR ${MOD_SECURITY_DIR}\n\n# fetch submodules (bindings/python, others/libinjection, test/test-cases/secrules-language-tests)\nRUN git submodule init\nRUN git submodule update\n\n# build libraries\n",
                      "markdown": "`WORKDIR ${MOD_SECURITY_DIR}\n\n# fetch submodules (bindings/python, others/libinjection, test/test-cases/secrules-language-tests)\nRUN git submodule init\nRUN git submodule update\n\n# build libraries\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/win32/docker/Dockerfile"
                },
                "region": {
                  "startLine": 62,
                  "startColumn": 3,
                  "endLine": 62,
                  "endColumn": 8,
                  "snippet": {
                    "text": "WORKDIR ${SRC_DIR}\n\nARG MOD_SECURITY_TAG=v3/master\nRUN git clone -c advice.detachedHead=false --depth 1 --branch %MOD_SECURITY_TAG% https://github.com/owasp-modsecurity/ModSecurity.git\n\nARG MOD_SECURITY_DIR=${SRC_DIR}\\ModSecurity\nWORKDIR ${MOD_SECURITY_DIR}\n",
                    "rendered": {
                      "text": "WORKDIR ${SRC_DIR}\n\nARG MOD_SECURITY_TAG=v3/master\nRUN git clone -c advice.detachedHead=false --depth 1 --branch %MOD_SECURITY_TAG% https://github.com/owasp-modsecurity/ModSecurity.git\n\nARG MOD_SECURITY_DIR=${SRC_DIR}\\ModSecurity\nWORKDIR ${MOD_SECURITY_DIR}\n",
                      "markdown": "`WORKDIR ${SRC_DIR}\n\nARG MOD_SECURITY_TAG=v3/master\nRUN git clone -c advice.detachedHead=false --depth 1 --branch %MOD_SECURITY_TAG% https://github.com/owasp-modsecurity/ModSecurity.git\n\nARG MOD_SECURITY_DIR=${SRC_DIR}\\ModSecurity\nWORKDIR ${MOD_SECURITY_DIR}\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/win32/docker/Dockerfile"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 20,
                  "endLine": 27,
                  "snippet": {
                    "text": "    --includeRecommended `\n    --installPath C:\\BuildTools\n\n# download & install GIT\nARG GIT_VERSION=2.44.0\nARG GIT_BINARY=Git-${GIT_VERSION}-64-bit.exe\nARG GIT_URL=https://github.com/git-for-windows/git/releases/download/v${GIT_VERSION}.windows.1/${GIT_BINARY}\n\n",
                    "rendered": {
                      "text": "    --includeRecommended `\n    --installPath C:\\BuildTools\n\n# download & install GIT\nARG GIT_VERSION=2.44.0\nARG GIT_BINARY=Git-${GIT_VERSION}-64-bit.exe\nARG GIT_URL=https://github.com/git-for-windows/git/releases/download/v${GIT_VERSION}.windows.1/${GIT_BINARY}\n\n",
                      "markdown": "`    --includeRecommended `\n    --installPath C:\\BuildTools\n\n# download & install GIT\nARG GIT_VERSION=2.44.0\nARG GIT_BINARY=Git-${GIT_VERSION}-64-bit.exe\nARG GIT_URL=https://github.com/git-for-windows/git/releases/download/v${GIT_VERSION}.windows.1/${GIT_BINARY}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/data/match-set.lua"
                },
                "region": {
                  "startLine": 4,
                  "startColumn": 15,
                  "endLine": 4,
                  "endColumn": 23,
                  "snippet": {
                    "text": "function main()\n    m.log(9, \"echo 123\");\n    m.setvar(\"tx.test\", \"whee\");\n    return \"Lua script matched.\";\nend\n",
                    "rendered": {
                      "text": "function main()\n    m.log(9, \"echo 123\");\n    m.setvar(\"tx.test\", \"whee\");\n    return \"Lua script matched.\";\nend\n",
                      "markdown": "`function main()\n    m.log(9, \"echo 123\");\n    m.setvar(\"tx.test\", \"whee\");\n    return \"Lua script matched.\";\nend\n`"
                    }
                  },
                  "sourceLanguage": "lua"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/data/SoapEnvelope2.xsd"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 233,
                  "endLine": 32,
                  "endColumn": 237,
                  "snippet": {
                    "text": "\nCOPYRIGHT HOLDERS WILL NOT BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF ANY USE OF THE SOFTWARE OR DOCUMENTATION.\n\nThe name and trademarks of copyright holders may NOT be used in advertising or publicity pertaining to the software without specific, written prior permission. Title to copyright in this software and any associated documentation will at all times remain with copyright holders.\n\n-->\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n",
                    "rendered": {
                      "text": "\nCOPYRIGHT HOLDERS WILL NOT BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF ANY USE OF THE SOFTWARE OR DOCUMENTATION.\n\nThe name and trademarks of copyright holders may NOT be used in advertising or publicity pertaining to the software without specific, written prior permission. Title to copyright in this software and any associated documentation will at all times remain with copyright holders.\n\n-->\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n",
                      "markdown": "`\nCOPYRIGHT HOLDERS WILL NOT BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF ANY USE OF THE SOFTWARE OR DOCUMENTATION.\n\nThe name and trademarks of copyright holders may NOT be used in advertising or publicity pertaining to the software without specific, written prior permission. Title to copyright in this software and any associated documentation will at all times remain with copyright holders.\n\n-->\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/data/SoapEnvelope-bad.xsd"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 233,
                  "endLine": 32,
                  "endColumn": 237,
                  "snippet": {
                    "text": "\nCOPYRIGHT HOLDERS WILL NOT BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF ANY USE OF THE SOFTWARE OR DOCUMENTATION.\n\nThe name and trademarks of copyright holders may NOT be used in advertising or publicity pertaining to the software without specific, written prior permission. Title to copyright in this software and any associated documentation will at all times remain with copyright holders.\n\n-->\n<xs:chema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n",
                    "rendered": {
                      "text": "\nCOPYRIGHT HOLDERS WILL NOT BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF ANY USE OF THE SOFTWARE OR DOCUMENTATION.\n\nThe name and trademarks of copyright holders may NOT be used in advertising or publicity pertaining to the software without specific, written prior permission. Title to copyright in this software and any associated documentation will at all times remain with copyright holders.\n\n-->\n<xs:chema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n",
                      "markdown": "`\nCOPYRIGHT HOLDERS WILL NOT BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF ANY USE OF THE SOFTWARE OR DOCUMENTATION.\n\nThe name and trademarks of copyright holders may NOT be used in advertising or publicity pertaining to the software without specific, written prior permission. Title to copyright in this software and any associated documentation will at all times remain with copyright holders.\n\n-->\n<xs:chema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/data/SoapEnvelope.xsd"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 233,
                  "endLine": 32,
                  "endColumn": 237,
                  "snippet": {
                    "text": "\nCOPYRIGHT HOLDERS WILL NOT BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF ANY USE OF THE SOFTWARE OR DOCUMENTATION.\n\nThe name and trademarks of copyright holders may NOT be used in advertising or publicity pertaining to the software without specific, written prior permission. Title to copyright in this software and any associated documentation will at all times remain with copyright holders.\n\n-->\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n",
                    "rendered": {
                      "text": "\nCOPYRIGHT HOLDERS WILL NOT BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF ANY USE OF THE SOFTWARE OR DOCUMENTATION.\n\nThe name and trademarks of copyright holders may NOT be used in advertising or publicity pertaining to the software without specific, written prior permission. Title to copyright in this software and any associated documentation will at all times remain with copyright holders.\n\n-->\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n",
                      "markdown": "`\nCOPYRIGHT HOLDERS WILL NOT BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF ANY USE OF THE SOFTWARE OR DOCUMENTATION.\n\nThe name and trademarks of copyright holders may NOT be used in advertising or publicity pertaining to the software without specific, written prior permission. Title to copyright in this software and any associated documentation will at all times remain with copyright holders.\n\n-->\n<xs:schema xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/regression/config-body_limits.json"
                },
                "region": {
                  "startLine": 760,
                  "startColumn": 8,
                  "endLine": 760,
                  "endColumn": 80,
                  "snippet": {
                    "text": "        \"--0000\",\n        \"Content-Disposition: form-data; name=\\\"b\\\"; filename=\\\"c.txt\\\"\",\n        \"\",\n        \"2222222222222222222222222222222222222222222222222222222222222222222222\",\n        \"--0000--\"\n      ]\n    },\n",
                    "rendered": {
                      "text": "        \"--0000\",\n        \"Content-Disposition: form-data; name=\\\"b\\\"; filename=\\\"c.txt\\\"\",\n        \"\",\n        \"2222222222222222222222222222222222222222222222222222222222222222222222\",\n        \"--0000--\"\n      ]\n    },\n",
                      "markdown": "`        \"--0000\",\n        \"Content-Disposition: form-data; name=\\\"b\\\"; filename=\\\"c.txt\\\"\",\n        \"\",\n        \"2222222222222222222222222222222222222222222222222222222222222222222222\",\n        \"--0000--\"\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000804"
          },
          "message": {
            "text": "Backdoor: Long Strings",
            "id": "BD000804"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/regression/config-body_limits.json"
                },
                "region": {
                  "startLine": 705,
                  "startColumn": 8,
                  "endLine": 705,
                  "endColumn": 80,
                  "snippet": {
                    "text": "        \"--0000\",\n        \"Content-Disposition: form-data; name=\\\"b\\\"; filename=\\\"c.txt\\\"\",\n        \"\",\n        \"2222222222222222222222222222222222222222222222222222222222222222222222\",\n        \"--0000--\"\n      ]\n    },\n",
                    "rendered": {
                      "text": "        \"--0000\",\n        \"Content-Disposition: form-data; name=\\\"b\\\"; filename=\\\"c.txt\\\"\",\n        \"\",\n        \"2222222222222222222222222222222222222222222222222222222222222222222222\",\n        \"--0000--\"\n      ]\n    },\n",
                      "markdown": "`        \"--0000\",\n        \"Content-Disposition: form-data; name=\\\"b\\\"; filename=\\\"c.txt\\\"\",\n        \"\",\n        \"2222222222222222222222222222222222222222222222222222222222222222222222\",\n        \"--0000--\"\n      ]\n    },\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 2
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/regression/variable-ENV.json"
                },
                "region": {
                  "startLine": 176,
                  "startColumn": 14,
                  "endLine": 176,
                  "endColumn": 19,
                  "snippet": {
                    "text": "    },\n    \"rules\":[\n      \"SecRuleEngine On\",\n      \"SecRule ENV \\\"@contains test\\\" \\\"id:1,phase:3,pass,t:trim\\\"\"\n    ]\n  }\n]\n",
                    "rendered": {
                      "text": "    },\n    \"rules\":[\n      \"SecRuleEngine On\",\n      \"SecRule ENV \\\"@contains test\\\" \\\"id:1,phase:3,pass,t:trim\\\"\"\n    ]\n  }\n]\n",
                      "markdown": "`    },\n    \"rules\":[\n      \"SecRuleEngine On\",\n      \"SecRule ENV \\\"@contains test\\\" \\\"id:1,phase:3,pass,t:trim\\\"\"\n    ]\n  }\n]\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/regression/variable-ENV.json"
                },
                "region": {
                  "startLine": 138,
                  "startColumn": 33,
                  "endLine": 138,
                  "endColumn": 38,
                  "snippet": {
                    "text": "  {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing Variables :: ENV (4/4)\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":123\n",
                    "rendered": {
                      "text": "  {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing Variables :: ENV (4/4)\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":123\n",
                      "markdown": "`  {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing Variables :: ENV (4/4)\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":123\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/regression/variable-ENV.json"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 33,
                  "endLine": 93,
                  "endColumn": 38,
                  "snippet": {
                    "text": "  {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing Variables :: ENV (3/4)\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":123\n",
                    "rendered": {
                      "text": "  {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing Variables :: ENV (3/4)\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":123\n",
                      "markdown": "`  {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing Variables :: ENV (3/4)\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":123\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/regression/variable-ENV.json"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 33,
                  "endLine": 49,
                  "endColumn": 38,
                  "snippet": {
                    "text": "  {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing Variables :: ENV (2/4)\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":123\n",
                    "rendered": {
                      "text": "  {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing Variables :: ENV (2/4)\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":123\n",
                      "markdown": "`  {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing Variables :: ENV (2/4)\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":123\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/regression/variable-ENV.json"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 33,
                  "endLine": 5,
                  "endColumn": 38,
                  "snippet": {
                    "text": "  {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing Variables :: ENV (1/4)\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":123\n",
                    "rendered": {
                      "text": "  {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing Variables :: ENV (1/4)\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":123\n",
                      "markdown": "`  {\n    \"enabled\":1,\n    \"version_min\":300000,\n    \"title\":\"Testing Variables :: ENV (1/4)\",\n    \"client\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":123\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/regression/variable-TIME.json"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 14,
                  "endLine": 40,
                  "endColumn": 20,
                  "snippet": {
                    "text": "    },\n    \"rules\":[\n      \"SecRuleEngine On\",\n      \"SecRule TIME \\\"@contains test \\\" \\\"id:1,phase:3,pass,t:trim\\\"\"\n    ]\n  }\n]\n",
                    "rendered": {
                      "text": "    },\n    \"rules\":[\n      \"SecRuleEngine On\",\n      \"SecRule TIME \\\"@contains test \\\" \\\"id:1,phase:3,pass,t:trim\\\"\"\n    ]\n  }\n]\n",
                      "markdown": "`    },\n    \"rules\":[\n      \"SecRuleEngine On\",\n      \"SecRule TIME \\\"@contains test \\\" \\\"id:1,phase:3,pass,t:trim\\\"\"\n    ]\n  }\n]\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/eq.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/ip_match.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/inspect_file.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/validate_schema.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/gt.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/verify_cc.cc"
                },
                "region": {
                  "startLine": 192,
                  "startColumn": 27,
                  "endLine": 192,
                  "endColumn": 31,
                  "snippet": {
                    "text": "                            std::string(match));\n                    }\n                    ms_dbg_a(t, 9, \"CC# match \\\"\" + m_param +\n                        \"\\\" at \" + i + \". [offset \" +\n                        std::to_string(offset) + \"]\");\n                }\n#ifdef WITH_PCRE2\n",
                    "rendered": {
                      "text": "                            std::string(match));\n                    }\n                    ms_dbg_a(t, 9, \"CC# match \\\"\" + m_param +\n                        \"\\\" at \" + i + \". [offset \" +\n                        std::to_string(offset) + \"]\");\n                }\n#ifdef WITH_PCRE2\n",
                      "markdown": "`                            std::string(match));\n                    }\n                    ms_dbg_a(t, 9, \"CC# match \\\"\" + m_param +\n                        \"\\\" at \" + i + \". [offset \" +\n                        std::to_string(offset) + \"]\");\n                }\n#ifdef WITH_PCRE2\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/verify_cc.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/rbl.cc"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 17,
                  "endLine": 67,
                  "endColumn": 25,
                  "snippet": {
                    "text": "        std::to_string(h0) + \".\" +\n        m_service;\n\n    if (m_demandsPassword) {\n        addr = key + \".\" + addr;\n    }\n\n",
                    "rendered": {
                      "text": "        std::to_string(h0) + \".\" +\n        m_service;\n\n    if (m_demandsPassword) {\n        addr = key + \".\" + addr;\n    }\n\n",
                      "markdown": "`        std::to_string(h0) + \".\" +\n        m_service;\n\n    if (m_demandsPassword) {\n        addr = key + \".\" + addr;\n    }\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000701"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Tokens)",
            "id": "BD000701"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/rbl.cc"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 17,
                  "endLine": 54,
                  "endColumn": 25,
                  "snippet": {
                    "text": "        return addr;\n    }\n\n    if (m_demandsPassword && key.empty()) {\n        ms_dbg_a(trans, 0, std::string(\"Missing RBL key, cannot continue \" \\\n            \"with the operator execution, please set the key using: \" \\\n            \"SecHttpBlKey\"));\n",
                    "rendered": {
                      "text": "        return addr;\n    }\n\n    if (m_demandsPassword && key.empty()) {\n        ms_dbg_a(trans, 0, std::string(\"Missing RBL key, cannot continue \" \\\n            \"with the operator execution, please set the key using: \" \\\n            \"SecHttpBlKey\"));\n",
                      "markdown": "`        return addr;\n    }\n\n    if (m_demandsPassword && key.empty()) {\n        ms_dbg_a(trans, 0, std::string(\"Missing RBL key, cannot continue \" \\\n            \"with the operator execution, please set the key using: \" \\\n            \"SecHttpBlKey\"));\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/rbl.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/rbl.cc"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 25,
                  "endLine": 48,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n    if (sscanf(ipStr.c_str(), \"%d.%d.%d.%d\", &h0, &h1, &h2, &h3) != 4) {\n        ms_dbg_a(trans, 0, std::string(\"Failed to understand `\" + ipStr +\n            \"' as a valid IP address, assuming domain format input\"));\n\n        addr = ipStr + \".\" + m_service;\n        return addr;\n",
                    "rendered": {
                      "text": "\n    if (sscanf(ipStr.c_str(), \"%d.%d.%d.%d\", &h0, &h1, &h2, &h3) != 4) {\n        ms_dbg_a(trans, 0, std::string(\"Failed to understand `\" + ipStr +\n            \"' as a valid IP address, assuming domain format input\"));\n\n        addr = ipStr + \".\" + m_service;\n        return addr;\n",
                      "markdown": "`\n    if (sscanf(ipStr.c_str(), \"%d.%d.%d.%d\", &h0, &h1, &h2, &h3) != 4) {\n        ms_dbg_a(trans, 0, std::string(\"Failed to understand `\" + ipStr +\n            \"' as a valid IP address, assuming domain format input\"));\n\n        addr = ipStr + \".\" + m_service;\n        return addr;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/begins_with.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/disruptive/allow.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/disruptive/deny.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/disruptive/drop.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/replace_nulls.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/upper_case.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/url_decode.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/chain.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/capture.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/accuracy.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/set_env.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/action.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/set_var.cc"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 24,
                  "endLine": 53,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n    std::string m_variableNameExpanded;\n\n    auto *v = m_variable.get();\n    auto tx = dynamic_cast<variables::Tx_DynamicElement *> (v);\n    auto session = dynamic_cast<variables::Session_DynamicElement *> (v);\n    auto ip = dynamic_cast<variables::Ip_DynamicElement *> (v);\n",
                    "rendered": {
                      "text": "\n    std::string m_variableNameExpanded;\n\n    auto *v = m_variable.get();\n    auto tx = dynamic_cast<variables::Tx_DynamicElement *> (v);\n    auto session = dynamic_cast<variables::Session_DynamicElement *> (v);\n    auto ip = dynamic_cast<variables::Ip_DynamicElement *> (v);\n",
                      "markdown": "`\n    std::string m_variableNameExpanded;\n\n    auto *v = m_variable.get();\n    auto tx = dynamic_cast<variables::Tx_DynamicElement *> (v);\n    auto session = dynamic_cast<variables::Session_DynamicElement *> (v);\n    auto ip = dynamic_cast<variables::Ip_DynamicElement *> (v);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/set_var.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/set_var.cc"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 8,
                  "endLine": 56,
                  "endColumn": 12,
                  "snippet": {
                    "text": "    auto *v = m_variable.get();\n    auto tx = dynamic_cast<variables::Tx_DynamicElement *> (v);\n    auto session = dynamic_cast<variables::Session_DynamicElement *> (v);\n    auto ip = dynamic_cast<variables::Ip_DynamicElement *> (v);\n    auto resource = dynamic_cast<variables::Resource_DynamicElement *> (v);\n    auto global = dynamic_cast<variables::Global_DynamicElement *> (v);\n    auto user = dynamic_cast<variables::User_DynamicElement *> (v);\n",
                    "rendered": {
                      "text": "    auto *v = m_variable.get();\n    auto tx = dynamic_cast<variables::Tx_DynamicElement *> (v);\n    auto session = dynamic_cast<variables::Session_DynamicElement *> (v);\n    auto ip = dynamic_cast<variables::Ip_DynamicElement *> (v);\n    auto resource = dynamic_cast<variables::Resource_DynamicElement *> (v);\n    auto global = dynamic_cast<variables::Global_DynamicElement *> (v);\n    auto user = dynamic_cast<variables::User_DynamicElement *> (v);\n",
                      "markdown": "`    auto *v = m_variable.get();\n    auto tx = dynamic_cast<variables::Tx_DynamicElement *> (v);\n    auto session = dynamic_cast<variables::Session_DynamicElement *> (v);\n    auto ip = dynamic_cast<variables::Ip_DynamicElement *> (v);\n    auto resource = dynamic_cast<variables::Resource_DynamicElement *> (v);\n    auto global = dynamic_cast<variables::Global_DynamicElement *> (v);\n    auto user = dynamic_cast<variables::User_DynamicElement *> (v);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/variables/time_min.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/variables/highest_severity.cc"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 45,
                  "endLine": 34,
                  "endColumn": 50,
                  "snippet": {
                    "text": "    std::vector<const VariableValue *> *l) {\n    transaction->m_variableHighestSeverityAction.assign(\n        std::to_string(transaction->m_highestSeverityAction));\n    l->push_back(new VariableValue(m_fullName.get(),\n       &transaction->m_variableHighestSeverityAction));\n}\n\n",
                    "rendered": {
                      "text": "    std::vector<const VariableValue *> *l) {\n    transaction->m_variableHighestSeverityAction.assign(\n        std::to_string(transaction->m_highestSeverityAction));\n    l->push_back(new VariableValue(m_fullName.get(),\n       &transaction->m_variableHighestSeverityAction));\n}\n\n",
                      "markdown": "`    std::vector<const VariableValue *> *l) {\n    transaction->m_variableHighestSeverityAction.assign(\n        std::to_string(transaction->m_highestSeverityAction));\n    l->push_back(new VariableValue(m_fullName.get(),\n       &transaction->m_variableHighestSeverityAction));\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/variables/highest_severity.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/variables/modsec_build.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rule_message.cc"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 17,
                  "endLine": 58,
                  "endColumn": 25,
                  "snippet": {
                    "text": "std::string RuleMessage::_errorLogTail(const RuleMessage *rm) {\n    std::string msg;\n\n    msg.append(\"[hostname \\\"\" + rm->m_transaction.m_serverIpAddress + \"\\\"]\");\n    msg.append(\" [uri \\\"\" + utils::string::limitTo(200, rm->m_transaction.m_uri_no_query_string_decoded) + \"\\\"]\");\n    msg.append(\" [unique_id \\\"\" + rm->m_transaction.m_id + \"\\\"]\");\n\n",
                    "rendered": {
                      "text": "std::string RuleMessage::_errorLogTail(const RuleMessage *rm) {\n    std::string msg;\n\n    msg.append(\"[hostname \\\"\" + rm->m_transaction.m_serverIpAddress + \"\\\"]\");\n    msg.append(\" [uri \\\"\" + utils::string::limitTo(200, rm->m_transaction.m_uri_no_query_string_decoded) + \"\\\"]\");\n    msg.append(\" [unique_id \\\"\" + rm->m_transaction.m_id + \"\\\"]\");\n\n",
                      "markdown": "`std::string RuleMessage::_errorLogTail(const RuleMessage *rm) {\n    std::string msg;\n\n    msg.append(\"[hostname \\\"\" + rm->m_transaction.m_serverIpAddress + \"\\\"]\");\n    msg.append(\" [uri \\\"\" + utils::string::limitTo(200, rm->m_transaction.m_uri_no_query_string_decoded) + \"\\\"]\");\n    msg.append(\" [unique_id \\\"\" + rm->m_transaction.m_id + \"\\\"]\");\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rule_message.cc"
                },
                "region": {
                  "startLine": 45,
                  "startColumn": 18,
                  "endLine": 45,
                  "endColumn": 26,
                  "snippet": {
                    "text": "        msg.append(\" [tag \\\"\" + utils::string::toHexIfNeeded(a, true) + \"\\\"]\");\n    }\n\n    msg.append(\" [hostname \\\"\" + rm->m_transaction.m_requestHostName \\\n        + \"\\\"]\");\n    msg.append(\" [uri \\\"\" + utils::string::limitTo(200, rm->m_transaction.m_uri_no_query_string_decoded) + \"\\\"]\");\n    msg.append(\" [unique_id \\\"\" + rm->m_transaction.m_id + \"\\\"]\");\n",
                    "rendered": {
                      "text": "        msg.append(\" [tag \\\"\" + utils::string::toHexIfNeeded(a, true) + \"\\\"]\");\n    }\n\n    msg.append(\" [hostname \\\"\" + rm->m_transaction.m_requestHostName \\\n        + \"\\\"]\");\n    msg.append(\" [uri \\\"\" + utils::string::limitTo(200, rm->m_transaction.m_uri_no_query_string_decoded) + \"\\\"]\");\n    msg.append(\" [unique_id \\\"\" + rm->m_transaction.m_id + \"\\\"]\");\n",
                      "markdown": "`        msg.append(\" [tag \\\"\" + utils::string::toHexIfNeeded(a, true) + \"\\\"]\");\n    }\n\n    msg.append(\" [hostname \\\"\" + rm->m_transaction.m_requestHostName \\\n        + \"\\\"]\");\n    msg.append(\" [uri \\\"\" + utils::string::limitTo(200, rm->m_transaction.m_uri_no_query_string_decoded) + \"\\\"]\");\n    msg.append(\" [unique_id \\\"\" + rm->m_transaction.m_id + \"\\\"]\");\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rule_message.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rule_with_actions.cc"
                },
                "region": {
                  "startLine": 547,
                  "startColumn": 57,
                  "endLine": 547,
                  "endColumn": 62,
                  "snippet": {
                    "text": "    } else {\n        if (hasMultimatch() && isItToBeLogged) {\n            /* warn */\n            trans->m_rulesMessages.push_back(*ruleMessage.get());\n\n            /* error */\n            if (!ruleMessage->m_isDisruptive) {\n",
                    "rendered": {
                      "text": "    } else {\n        if (hasMultimatch() && isItToBeLogged) {\n            /* warn */\n            trans->m_rulesMessages.push_back(*ruleMessage.get());\n\n            /* error */\n            if (!ruleMessage->m_isDisruptive) {\n",
                      "markdown": "`    } else {\n        if (hasMultimatch() && isItToBeLogged) {\n            /* warn */\n            trans->m_rulesMessages.push_back(*ruleMessage.get());\n\n            /* error */\n            if (!ruleMessage->m_isDisruptive) {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rule_with_actions.cc"
                },
                "region": {
                  "startLine": 487,
                  "startColumn": 22,
                  "endLine": 487,
                  "endColumn": 27,
                  "snippet": {
                    "text": "            continue;\n        }\n        actions::Action *z = b.second.get();\n        if (*z->m_name.get() == name) {\n            ret.push_back(z);\n        }\n    }\n",
                    "rendered": {
                      "text": "            continue;\n        }\n        actions::Action *z = b.second.get();\n        if (*z->m_name.get() == name) {\n            ret.push_back(z);\n        }\n    }\n",
                      "markdown": "`            continue;\n        }\n        actions::Action *z = b.second.get();\n        if (*z->m_name.get() == name) {\n            ret.push_back(z);\n        }\n    }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rule_with_actions.cc"
                },
                "region": {
                  "startLine": 486,
                  "startColumn": 37,
                  "endLine": 486,
                  "endColumn": 42,
                  "snippet": {
                    "text": "        if (m_ruleId != b.first) {\n            continue;\n        }\n        actions::Action *z = b.second.get();\n        if (*z->m_name.get() == name) {\n            ret.push_back(z);\n        }\n",
                    "rendered": {
                      "text": "        if (m_ruleId != b.first) {\n            continue;\n        }\n        actions::Action *z = b.second.get();\n        if (*z->m_name.get() == name) {\n            ret.push_back(z);\n        }\n",
                      "markdown": "`        if (m_ruleId != b.first) {\n            continue;\n        }\n        actions::Action *z = b.second.get();\n        if (*z->m_name.get() == name) {\n            ret.push_back(z);\n        }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rule_with_actions.cc"
                },
                "region": {
                  "startLine": 477,
                  "startColumn": 22,
                  "endLine": 477,
                  "endColumn": 27,
                  "snippet": {
                    "text": "            continue;\n        }\n        actions::Action *z = b.second.get();\n        if (*z->m_name.get() == name) {\n            ret.push_back(z);\n        }\n    }\n",
                    "rendered": {
                      "text": "            continue;\n        }\n        actions::Action *z = b.second.get();\n        if (*z->m_name.get() == name) {\n            ret.push_back(z);\n        }\n    }\n",
                      "markdown": "`            continue;\n        }\n        actions::Action *z = b.second.get();\n        if (*z->m_name.get() == name) {\n            ret.push_back(z);\n        }\n    }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rule_with_actions.cc"
                },
                "region": {
                  "startLine": 476,
                  "startColumn": 37,
                  "endLine": 476,
                  "endColumn": 42,
                  "snippet": {
                    "text": "        if (m_ruleId != b.first) {\n            continue;\n        }\n        actions::Action *z = b.second.get();\n        if (*z->m_name.get() == name) {\n            ret.push_back(z);\n        }\n",
                    "rendered": {
                      "text": "        if (m_ruleId != b.first) {\n            continue;\n        }\n        actions::Action *z = b.second.get();\n        if (*z->m_name.get() == name) {\n            ret.push_back(z);\n        }\n",
                      "markdown": "`        if (m_ruleId != b.first) {\n            continue;\n        }\n        actions::Action *z = b.second.get();\n        if (*z->m_name.get() == name) {\n            ret.push_back(z);\n        }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rule_with_actions.cc"
                },
                "region": {
                  "startLine": 467,
                  "startColumn": 22,
                  "endLine": 467,
                  "endColumn": 27,
                  "snippet": {
                    "text": "        }\n    }\n    for (auto &z : m_transformations) {\n        if (*z->m_name.get() == name) {\n            ret.push_back(z);\n        }\n    }\n",
                    "rendered": {
                      "text": "        }\n    }\n    for (auto &z : m_transformations) {\n        if (*z->m_name.get() == name) {\n            ret.push_back(z);\n        }\n    }\n",
                      "markdown": "`        }\n    }\n    for (auto &z : m_transformations) {\n        if (*z->m_name.get() == name) {\n            ret.push_back(z);\n        }\n    }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rule_with_actions.cc"
                },
                "region": {
                  "startLine": 462,
                  "startColumn": 22,
                  "endLine": 462,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    Transaction *trans) {\n    std::vector<actions::Action *> ret;\n    for (auto &z : m_actionsRuntimePos) {\n        if (*z->m_name.get() == name) {\n            ret.push_back(z);\n        }\n    }\n",
                    "rendered": {
                      "text": "    Transaction *trans) {\n    std::vector<actions::Action *> ret;\n    for (auto &z : m_actionsRuntimePos) {\n        if (*z->m_name.get() == name) {\n            ret.push_back(z);\n        }\n    }\n",
                      "markdown": "`    Transaction *trans) {\n    std::vector<actions::Action *> ret;\n    for (auto &z : m_actionsRuntimePos) {\n        if (*z->m_name.get() == name) {\n            ret.push_back(z);\n        }\n    }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rule_with_actions.cc"
                },
                "region": {
                  "startLine": 419,
                  "startColumn": 61,
                  "endLine": 419,
                  "endColumn": 66,
                  "snippet": {
                    "text": "        if (m_ruleId != b.first) {\n            continue;\n        }\n        auto a = dynamic_cast<const Transformation*>(b.second.get());\n        assert(a != nullptr);\n        if (none == 0) {\n            executeTransformation(*a, value, trans, ret, path,\n",
                    "rendered": {
                      "text": "        if (m_ruleId != b.first) {\n            continue;\n        }\n        auto a = dynamic_cast<const Transformation*>(b.second.get());\n        assert(a != nullptr);\n        if (none == 0) {\n            executeTransformation(*a, value, trans, ret, path,\n",
                      "markdown": "`        if (m_ruleId != b.first) {\n            continue;\n        }\n        auto a = dynamic_cast<const Transformation*>(b.second.get());\n        assert(a != nullptr);\n        if (none == 0) {\n            executeTransformation(*a, value, trans, ret, path,\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rule_with_actions.cc"
                },
                "region": {
                  "startLine": 407,
                  "startColumn": 61,
                  "endLine": 407,
                  "endColumn": 66,
                  "snippet": {
                    "text": "        if (m_ruleId != b.first) {\n            continue;\n        }\n        auto a = dynamic_cast<const Transformation*>(b.second.get());\n        assert(a != nullptr);\n        if (a->m_isNone) {\n            none++;\n",
                    "rendered": {
                      "text": "        if (m_ruleId != b.first) {\n            continue;\n        }\n        auto a = dynamic_cast<const Transformation*>(b.second.get());\n        assert(a != nullptr);\n        if (a->m_isNone) {\n            none++;\n",
                      "markdown": "`        if (m_ruleId != b.first) {\n            continue;\n        }\n        auto a = dynamic_cast<const Transformation*>(b.second.get());\n        assert(a != nullptr);\n        if (a->m_isNone) {\n            none++;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rule_with_actions.cc"
                },
                "region": {
                  "startLine": 382,
                  "startColumn": 58,
                  "endLine": 382,
                  "endColumn": 63,
                  "snippet": {
                    "text": "            }\n\n            // FIXME: here the object needs to be a transformation already.\n            auto t = dynamic_cast<const Transformation*>(a.get());\n            assert(t != nullptr);\n            executeTransformation(*t, value, trans, ret, path,\n                transformations);\n",
                    "rendered": {
                      "text": "            }\n\n            // FIXME: here the object needs to be a transformation already.\n            auto t = dynamic_cast<const Transformation*>(a.get());\n            assert(t != nullptr);\n            executeTransformation(*t, value, trans, ret, path,\n                transformations);\n",
                      "markdown": "`            }\n\n            // FIXME: here the object needs to be a transformation already.\n            auto t = dynamic_cast<const Transformation*>(a.get());\n            assert(t != nullptr);\n            executeTransformation(*t, value, trans, ret, path,\n                transformations);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rule_with_actions.cc"
                },
                "region": {
                  "startLine": 348,
                  "startColumn": 17,
                  "endLine": 348,
                  "endColumn": 22,
                  "snippet": {
                    "text": "\n    ms_dbg_a(trans, 9, \" T (\" + \\\n        std::to_string(nth) + \") \" + \\\n        *a.m_name.get() + \": \\\"\" + \\\n        utils::string::limitTo(80, value) +\"\\\"\");\n}\n\n",
                    "rendered": {
                      "text": "\n    ms_dbg_a(trans, 9, \" T (\" + \\\n        std::to_string(nth) + \") \" + \\\n        *a.m_name.get() + \": \\\"\" + \\\n        utils::string::limitTo(80, value) +\"\\\"\");\n}\n\n",
                      "markdown": "`\n    ms_dbg_a(trans, 9, \" T (\" + \\\n        std::to_string(nth) + \") \" + \\\n        *a.m_name.get() + \": \\\"\" + \\\n        utils::string::limitTo(80, value) +\"\\\"\");\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rule_with_actions.cc"
                },
                "region": {
                  "startLine": 343,
                  "startColumn": 35,
                  "endLine": 343,
                  "endColumn": 40,
                  "snippet": {
                    "text": "    if (path.empty()) {\n        path.append(*a.m_name.get());\n    } else {\n        path.append(\",\" + *a.m_name.get());\n    }\n\n    ms_dbg_a(trans, 9, \" T (\" + \\\n",
                    "rendered": {
                      "text": "    if (path.empty()) {\n        path.append(*a.m_name.get());\n    } else {\n        path.append(\",\" + *a.m_name.get());\n    }\n\n    ms_dbg_a(trans, 9, \" T (\" + \\\n",
                      "markdown": "`    if (path.empty()) {\n        path.append(*a.m_name.get());\n    } else {\n        path.append(\",\" + *a.m_name.get());\n    }\n\n    ms_dbg_a(trans, 9, \" T (\" + \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rule_with_actions.cc"
                },
                "region": {
                  "startLine": 341,
                  "startColumn": 29,
                  "endLine": 341,
                  "endColumn": 34,
                  "snippet": {
                    "text": "    }\n\n    if (path.empty()) {\n        path.append(*a.m_name.get());\n    } else {\n        path.append(\",\" + *a.m_name.get());\n    }\n",
                    "rendered": {
                      "text": "    }\n\n    if (path.empty()) {\n        path.append(*a.m_name.get());\n    } else {\n        path.append(\",\" + *a.m_name.get());\n    }\n",
                      "markdown": "`    }\n\n    if (path.empty()) {\n        path.append(*a.m_name.get());\n    } else {\n        path.append(\",\" + *a.m_name.get());\n    }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rule_with_actions.cc"
                },
                "region": {
                  "startLine": 322,
                  "startColumn": 20,
                  "endLine": 322,
                  "endColumn": 25,
                  "snippet": {
                    "text": "    }\n\n    ms_dbg_a(trans, 4, \"Not running any disruptive action (or block): \" \\\n        + *a->m_name.get() + \". SecRuleEngine is not On.\");\n}\n\n\n",
                    "rendered": {
                      "text": "    }\n\n    ms_dbg_a(trans, 4, \"Not running any disruptive action (or block): \" \\\n        + *a->m_name.get() + \". SecRuleEngine is not On.\");\n}\n\n\n",
                      "markdown": "`    }\n\n    ms_dbg_a(trans, 4, \"Not running any disruptive action (or block): \" \\\n        + *a->m_name.get() + \". SecRuleEngine is not On.\");\n}\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rule_with_actions.cc"
                },
                "region": {
                  "startLine": 315,
                  "startColumn": 75,
                  "endLine": 315,
                  "endColumn": 80,
                  "snippet": {
                    "text": "    }\n\n    if (trans->getRuleEngineState() == RulesSet::EnabledRuleEngine) {\n        ms_dbg_a(trans, 4, \"Running (disruptive)     action: \" + *a->m_name.get() + \\\n            \".\");\n        a->evaluate(this, trans, ruleMessage);\n        return;\n",
                    "rendered": {
                      "text": "    }\n\n    if (trans->getRuleEngineState() == RulesSet::EnabledRuleEngine) {\n        ms_dbg_a(trans, 4, \"Running (disruptive)     action: \" + *a->m_name.get() + \\\n            \".\");\n        a->evaluate(this, trans, ruleMessage);\n        return;\n",
                      "markdown": "`    }\n\n    if (trans->getRuleEngineState() == RulesSet::EnabledRuleEngine) {\n        ms_dbg_a(trans, 4, \"Running (disruptive)     action: \" + *a->m_name.get() + \\\n            \".\");\n        a->evaluate(this, trans, ruleMessage);\n        return;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rule_with_actions.cc"
                },
                "region": {
                  "startLine": 309,
                  "startColumn": 59,
                  "endLine": 309,
                  "endColumn": 64,
                  "snippet": {
                    "text": "    }\n\n    if (defaultContext && !containsBlock) {\n        ms_dbg_a(trans, 4, \"Ignoring action: \" + *a->m_name.get() + \\\n            \" (rule does not cotains block)\");\n        return;\n    }\n",
                    "rendered": {
                      "text": "    }\n\n    if (defaultContext && !containsBlock) {\n        ms_dbg_a(trans, 4, \"Ignoring action: \" + *a->m_name.get() + \\\n            \" (rule does not cotains block)\");\n        return;\n    }\n",
                      "markdown": "`    }\n\n    if (defaultContext && !containsBlock) {\n        ms_dbg_a(trans, 4, \"Ignoring action: \" + *a->m_name.get() + \\\n            \" (rule does not cotains block)\");\n        return;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rule_with_actions.cc"
                },
                "region": {
                  "startLine": 303,
                  "startColumn": 35,
                  "endLine": 303,
                  "endColumn": 40,
                  "snippet": {
                    "text": "    Action *a, bool defaultContext) {\n    if (a->isDisruptive() == false && *a->m_name.get() != \"block\") {\n        ms_dbg_a(trans, 9, \"Running \" \\\n            \"action: \" + *a->m_name.get());\n        a->evaluate(this, trans, ruleMessage);\n        return;\n    }\n",
                    "rendered": {
                      "text": "    Action *a, bool defaultContext) {\n    if (a->isDisruptive() == false && *a->m_name.get() != \"block\") {\n        ms_dbg_a(trans, 9, \"Running \" \\\n            \"action: \" + *a->m_name.get());\n        a->evaluate(this, trans, ruleMessage);\n        return;\n    }\n",
                      "markdown": "`    Action *a, bool defaultContext) {\n    if (a->isDisruptive() == false && *a->m_name.get() != \"block\") {\n        ms_dbg_a(trans, 9, \"Running \" \\\n            \"action: \" + *a->m_name.get());\n        a->evaluate(this, trans, ruleMessage);\n        return;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rule_with_actions.cc"
                },
                "region": {
                  "startLine": 301,
                  "startColumn": 48,
                  "endLine": 301,
                  "endColumn": 53,
                  "snippet": {
                    "text": "void RuleWithActions::executeAction(Transaction *trans,\n    bool containsBlock, std::shared_ptr<RuleMessage> ruleMessage,\n    Action *a, bool defaultContext) {\n    if (a->isDisruptive() == false && *a->m_name.get() != \"block\") {\n        ms_dbg_a(trans, 9, \"Running \" \\\n            \"action: \" + *a->m_name.get());\n        a->evaluate(this, trans, ruleMessage);\n",
                    "rendered": {
                      "text": "void RuleWithActions::executeAction(Transaction *trans,\n    bool containsBlock, std::shared_ptr<RuleMessage> ruleMessage,\n    Action *a, bool defaultContext) {\n    if (a->isDisruptive() == false && *a->m_name.get() != \"block\") {\n        ms_dbg_a(trans, 9, \"Running \" \\\n            \"action: \" + *a->m_name.get());\n        a->evaluate(this, trans, ruleMessage);\n",
                      "markdown": "`void RuleWithActions::executeAction(Transaction *trans,\n    bool containsBlock, std::shared_ptr<RuleMessage> ruleMessage,\n    Action *a, bool defaultContext) {\n    if (a->isDisruptive() == false && *a->m_name.get() != \"block\") {\n        ms_dbg_a(trans, 9, \"Running \" \\\n            \"action: \" + *a->m_name.get());\n        a->evaluate(this, trans, ruleMessage);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rule_with_actions.cc"
                },
                "region": {
                  "startLine": 269,
                  "startColumn": 37,
                  "endLine": 269,
                  "endColumn": 42,
                  "snippet": {
                    "text": "        if (m_ruleId != b.first) {\n            continue;\n        }\n        actions::Action *a = b.second.get();\n        executeAction(trans, containsBlock, ruleMessage, a, false);\n        disruptiveAlreadyExecuted = true;\n    }\n",
                    "rendered": {
                      "text": "        if (m_ruleId != b.first) {\n            continue;\n        }\n        actions::Action *a = b.second.get();\n        executeAction(trans, containsBlock, ruleMessage, a, false);\n        disruptiveAlreadyExecuted = true;\n    }\n",
                      "markdown": "`        if (m_ruleId != b.first) {\n            continue;\n        }\n        actions::Action *a = b.second.get();\n        executeAction(trans, containsBlock, ruleMessage, a, false);\n        disruptiveAlreadyExecuted = true;\n    }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rule_with_actions.cc"
                },
                "region": {
                  "startLine": 260,
                  "startColumn": 24,
                  "endLine": 260,
                  "endColumn": 29,
                  "snippet": {
                    "text": "\n    for (actions::Tag *a : this->m_actionsTag) {\n        ms_dbg_a(trans, 4, \"Running (non-disruptive) action: \" \\\n            + *a->m_name.get());\n        a->evaluate(this, trans, ruleMessage);\n    }\n\n",
                    "rendered": {
                      "text": "\n    for (actions::Tag *a : this->m_actionsTag) {\n        ms_dbg_a(trans, 4, \"Running (non-disruptive) action: \" \\\n            + *a->m_name.get());\n        a->evaluate(this, trans, ruleMessage);\n    }\n\n",
                      "markdown": "`\n    for (actions::Tag *a : this->m_actionsTag) {\n        ms_dbg_a(trans, 4, \"Running (non-disruptive) action: \" \\\n            + *a->m_name.get());\n        a->evaluate(this, trans, ruleMessage);\n    }\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rule_with_actions.cc"
                },
                "region": {
                  "startLine": 254,
                  "startColumn": 62,
                  "endLine": 254,
                  "endColumn": 67,
                  "snippet": {
                    "text": "            continue;\n        }\n        if (!a.get()->isDisruptive()) {\n            executeAction(trans, containsBlock, ruleMessage, a.get(), true);\n        }\n    }\n\n",
                    "rendered": {
                      "text": "            continue;\n        }\n        if (!a.get()->isDisruptive()) {\n            executeAction(trans, containsBlock, ruleMessage, a.get(), true);\n        }\n    }\n\n",
                      "markdown": "`            continue;\n        }\n        if (!a.get()->isDisruptive()) {\n            executeAction(trans, containsBlock, ruleMessage, a.get(), true);\n        }\n    }\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rule_with_actions.cc"
                },
                "region": {
                  "startLine": 253,
                  "startColumn": 14,
                  "endLine": 253,
                  "endColumn": 19,
                  "snippet": {
                    "text": "        if (a.get()->action_kind != actions::Action::Kind::RunTimeOnlyIfMatchKind) {\n            continue;\n        }\n        if (!a.get()->isDisruptive()) {\n            executeAction(trans, containsBlock, ruleMessage, a.get(), true);\n        }\n    }\n",
                    "rendered": {
                      "text": "        if (a.get()->action_kind != actions::Action::Kind::RunTimeOnlyIfMatchKind) {\n            continue;\n        }\n        if (!a.get()->isDisruptive()) {\n            executeAction(trans, containsBlock, ruleMessage, a.get(), true);\n        }\n    }\n",
                      "markdown": "`        if (a.get()->action_kind != actions::Action::Kind::RunTimeOnlyIfMatchKind) {\n            continue;\n        }\n        if (!a.get()->isDisruptive()) {\n            executeAction(trans, containsBlock, ruleMessage, a.get(), true);\n        }\n    }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rule_with_actions.cc"
                },
                "region": {
                  "startLine": 250,
                  "startColumn": 13,
                  "endLine": 250,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    bool disruptiveAlreadyExecuted = false;\n\n    for (const auto &a : trans->m_rules->m_defaultActions[getPhase()]) { // cppcheck-suppress ctunullpointer\n        if (a.get()->action_kind != actions::Action::Kind::RunTimeOnlyIfMatchKind) {\n            continue;\n        }\n        if (!a.get()->isDisruptive()) {\n",
                    "rendered": {
                      "text": "    bool disruptiveAlreadyExecuted = false;\n\n    for (const auto &a : trans->m_rules->m_defaultActions[getPhase()]) { // cppcheck-suppress ctunullpointer\n        if (a.get()->action_kind != actions::Action::Kind::RunTimeOnlyIfMatchKind) {\n            continue;\n        }\n        if (!a.get()->isDisruptive()) {\n",
                      "markdown": "`    bool disruptiveAlreadyExecuted = false;\n\n    for (const auto &a : trans->m_rules->m_defaultActions[getPhase()]) { // cppcheck-suppress ctunullpointer\n        if (a.get()->action_kind != actions::Action::Kind::RunTimeOnlyIfMatchKind) {\n            continue;\n        }\n        if (!a.get()->isDisruptive()) {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rule_with_actions.cc"
                },
                "region": {
                  "startLine": 222,
                  "startColumn": 39,
                  "endLine": 222,
                  "endColumn": 44,
                  "snippet": {
                    "text": "                *containsBlock = true;\n        } else if (*a->m_name.get() == \"setvar\") {\n            ms_dbg_a(trans, 4, \"Running [independent] (non-disruptive) \" \\\n                \"action: \" + *a->m_name.get());\n            a->evaluate(this, trans, ruleMessage);\n        }\n    }\n",
                    "rendered": {
                      "text": "                *containsBlock = true;\n        } else if (*a->m_name.get() == \"setvar\") {\n            ms_dbg_a(trans, 4, \"Running [independent] (non-disruptive) \" \\\n                \"action: \" + *a->m_name.get());\n            a->evaluate(this, trans, ruleMessage);\n        }\n    }\n",
                      "markdown": "`                *containsBlock = true;\n        } else if (*a->m_name.get() == \"setvar\") {\n            ms_dbg_a(trans, 4, \"Running [independent] (non-disruptive) \" \\\n                \"action: \" + *a->m_name.get());\n            a->evaluate(this, trans, ruleMessage);\n        }\n    }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rule_with_actions.cc"
                },
                "region": {
                  "startLine": 220,
                  "startColumn": 29,
                  "endLine": 220,
                  "endColumn": 34,
                  "snippet": {
                    "text": "        if (a->isDisruptive() == true && *a->m_name.get() == \"block\") {\n            ms_dbg_a(trans, 9, \"Rule contains a `block' action\");\n                *containsBlock = true;\n        } else if (*a->m_name.get() == \"setvar\") {\n            ms_dbg_a(trans, 4, \"Running [independent] (non-disruptive) \" \\\n                \"action: \" + *a->m_name.get());\n            a->evaluate(this, trans, ruleMessage);\n",
                    "rendered": {
                      "text": "        if (a->isDisruptive() == true && *a->m_name.get() == \"block\") {\n            ms_dbg_a(trans, 9, \"Rule contains a `block' action\");\n                *containsBlock = true;\n        } else if (*a->m_name.get() == \"setvar\") {\n            ms_dbg_a(trans, 4, \"Running [independent] (non-disruptive) \" \\\n                \"action: \" + *a->m_name.get());\n            a->evaluate(this, trans, ruleMessage);\n",
                      "markdown": "`        if (a->isDisruptive() == true && *a->m_name.get() == \"block\") {\n            ms_dbg_a(trans, 9, \"Rule contains a `block' action\");\n                *containsBlock = true;\n        } else if (*a->m_name.get() == \"setvar\") {\n            ms_dbg_a(trans, 4, \"Running [independent] (non-disruptive) \" \\\n                \"action: \" + *a->m_name.get());\n            a->evaluate(this, trans, ruleMessage);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rule_with_actions.cc"
                },
                "region": {
                  "startLine": 217,
                  "startColumn": 51,
                  "endLine": 217,
                  "endColumn": 56,
                  "snippet": {
                    "text": "            continue;\n        }\n        actions::Action *a = b.second.get();\n        if (a->isDisruptive() == true && *a->m_name.get() == \"block\") {\n            ms_dbg_a(trans, 9, \"Rule contains a `block' action\");\n                *containsBlock = true;\n        } else if (*a->m_name.get() == \"setvar\") {\n",
                    "rendered": {
                      "text": "            continue;\n        }\n        actions::Action *a = b.second.get();\n        if (a->isDisruptive() == true && *a->m_name.get() == \"block\") {\n            ms_dbg_a(trans, 9, \"Rule contains a `block' action\");\n                *containsBlock = true;\n        } else if (*a->m_name.get() == \"setvar\") {\n",
                      "markdown": "`            continue;\n        }\n        actions::Action *a = b.second.get();\n        if (a->isDisruptive() == true && *a->m_name.get() == \"block\") {\n            ms_dbg_a(trans, 9, \"Rule contains a `block' action\");\n                *containsBlock = true;\n        } else if (*a->m_name.get() == \"setvar\") {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rule_with_actions.cc"
                },
                "region": {
                  "startLine": 216,
                  "startColumn": 37,
                  "endLine": 216,
                  "endColumn": 42,
                  "snippet": {
                    "text": "        if (m_ruleId != b.first) {\n            continue;\n        }\n        actions::Action *a = b.second.get();\n        if (a->isDisruptive() == true && *a->m_name.get() == \"block\") {\n            ms_dbg_a(trans, 9, \"Rule contains a `block' action\");\n                *containsBlock = true;\n",
                    "rendered": {
                      "text": "        if (m_ruleId != b.first) {\n            continue;\n        }\n        actions::Action *a = b.second.get();\n        if (a->isDisruptive() == true && *a->m_name.get() == \"block\") {\n            ms_dbg_a(trans, 9, \"Rule contains a `block' action\");\n                *containsBlock = true;\n",
                      "markdown": "`        if (m_ruleId != b.first) {\n            continue;\n        }\n        actions::Action *a = b.second.get();\n        if (a->isDisruptive() == true && *a->m_name.get() == \"block\") {\n            ms_dbg_a(trans, 9, \"Rule contains a `block' action\");\n                *containsBlock = true;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rule_with_actions.cc"
                },
                "region": {
                  "startLine": 206,
                  "startColumn": 35,
                  "endLine": 206,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\n    for (actions::SetVar *a : m_actionsSetVar) {\n        ms_dbg_a(trans, 4, \"Running [independent] (non-disruptive) \" \\\n            \"action: \" + *a->m_name.get());\n\n        a->evaluate(this, trans);\n    }\n",
                    "rendered": {
                      "text": "\n    for (actions::SetVar *a : m_actionsSetVar) {\n        ms_dbg_a(trans, 4, \"Running [independent] (non-disruptive) \" \\\n            \"action: \" + *a->m_name.get());\n\n        a->evaluate(this, trans);\n    }\n",
                      "markdown": "`\n    for (actions::SetVar *a : m_actionsSetVar) {\n        ms_dbg_a(trans, 4, \"Running [independent] (non-disruptive) \" \\\n            \"action: \" + *a->m_name.get());\n\n        a->evaluate(this, trans);\n    }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rule_with_actions.cc"
                },
                "region": {
                  "startLine": 508,
                  "startColumn": 5,
                  "endLine": 508,
                  "endColumn": 9,
                  "snippet": {
                    "text": "    * anything beyond this may lead to invalid pointer access.\n    *\n    * In case of a warning, o set of messages is saved to be read\n    * at audit log generation. Therefore demands a copy here.\n    *\n    * FIXME: Study an way to avoid the copy.\n    *\n",
                    "rendered": {
                      "text": "    * anything beyond this may lead to invalid pointer access.\n    *\n    * In case of a warning, o set of messages is saved to be read\n    * at audit log generation. Therefore demands a copy here.\n    *\n    * FIXME: Study an way to avoid the copy.\n    *\n",
                      "markdown": "`    * anything beyond this may lead to invalid pointer access.\n    *\n    * In case of a warning, o set of messages is saved to be read\n    * at audit log generation. Therefore demands a copy here.\n    *\n    * FIXME: Study an way to avoid the copy.\n    *\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rule_with_actions.cc"
                },
                "region": {
                  "startLine": 194,
                  "startColumn": 37,
                  "endLine": 194,
                  "endColumn": 41,
                  "snippet": {
                    "text": "     * Rule::evaluate(transaction, ruleMessage);\n     */\n\n    /* Matched vars needs to be clear at every new rule execution */\n    transaction->m_matched.clear();\n\n    return true;\n",
                    "rendered": {
                      "text": "     * Rule::evaluate(transaction, ruleMessage);\n     */\n\n    /* Matched vars needs to be clear at every new rule execution */\n    transaction->m_matched.clear();\n\n    return true;\n",
                      "markdown": "`     * Rule::evaluate(transaction, ruleMessage);\n     */\n\n    /* Matched vars needs to be clear at every new rule execution */\n    transaction->m_matched.clear();\n\n    return true;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rule_with_actions.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rule_with_actions.cc"
                },
                "region": {
                  "startLine": 400,
                  "startColumn": 66,
                  "endLine": 400,
                  "endColumn": 72,
                  "snippet": {
                    "text": "        }\n    }\n\n    // FIXME: It can't be something different from transformation. Sort this\n    //        on rules compile time.\n    for (auto &b :\n        trans->m_rules->m_exceptions.m_action_pre_update_target_by_id) {\n",
                    "rendered": {
                      "text": "        }\n    }\n\n    // FIXME: It can't be something different from transformation. Sort this\n    //        on rules compile time.\n    for (auto &b :\n        trans->m_rules->m_exceptions.m_action_pre_update_target_by_id) {\n",
                      "markdown": "`        }\n    }\n\n    // FIXME: It can't be something different from transformation. Sort this\n    //        on rules compile time.\n    for (auto &b :\n        trans->m_rules->m_exceptions.m_action_pre_update_target_by_id) {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/CHANGES"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 26,
                  "endLine": 57,
                  "endColumn": 34,
                  "snippet": {
                    "text": "    [PR #3208 - @eduar-hte]\n  - remove 'this throw' call in transaction\n    [PR #3207 - @gberkes]\n  - New API function: set hostname for log\n    [PR #3203 - @airween]\n  - Fixing typo in Dockerfile\n    [PR #3189 - @bitbehz]\n",
                    "rendered": {
                      "text": "    [PR #3208 - @eduar-hte]\n  - remove 'this throw' call in transaction\n    [PR #3207 - @gberkes]\n  - New API function: set hostname for log\n    [PR #3203 - @airween]\n  - Fixing typo in Dockerfile\n    [PR #3189 - @bitbehz]\n",
                      "markdown": "`    [PR #3208 - @eduar-hte]\n  - remove 'this throw' call in transaction\n    [PR #3207 - @gberkes]\n  - New API function: set hostname for log\n    [PR #3203 - @airween]\n  - Fixing typo in Dockerfile\n    [PR #3189 - @bitbehz]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/CHANGES"
                },
                "region": {
                  "startLine": 612,
                  "startColumn": 15,
                  "endLine": 612,
                  "endColumn": 21,
                  "snippet": {
                    "text": "   [Issue #1678 - @defanator]\n - Fix \"include /foo/*.conf\" for single matched object in directory\n   [Issue #1677 - @defanator, @zimmerle]\n - Add missing Base64 transformation statements to parser\n   [Issue #1632 - @victorhora, @zimmerle]\n - Fixed resource load on ip match from file\n   [#1674 - @zimmerle, @StefaanSeys]\n",
                    "rendered": {
                      "text": "   [Issue #1678 - @defanator]\n - Fix \"include /foo/*.conf\" for single matched object in directory\n   [Issue #1677 - @defanator, @zimmerle]\n - Add missing Base64 transformation statements to parser\n   [Issue #1632 - @victorhora, @zimmerle]\n - Fixed resource load on ip match from file\n   [#1674 - @zimmerle, @StefaanSeys]\n",
                      "markdown": "`   [Issue #1678 - @defanator]\n - Fix \"include /foo/*.conf\" for single matched object in directory\n   [Issue #1677 - @defanator, @zimmerle]\n - Add missing Base64 transformation statements to parser\n   [Issue #1632 - @victorhora, @zimmerle]\n - Fixed resource load on ip match from file\n   [#1674 - @zimmerle, @StefaanSeys]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/CHANGES"
                },
                "region": {
                  "startLine": 656,
                  "startColumn": 19,
                  "endLine": 656,
                  "endColumn": 27,
                  "snippet": {
                    "text": "   [Issue #1442 - @zimmerle, @victorhora] \n - Adds support for SecRuleRemoveByTag.\n   [Issue #1476 - @zimmerle, @victorhora]\n - Adds support for update target by message.\n   [Issue #1474 - @zimmerle, @victorhora]\n - Adds support to SecRuleScript directive.\n   [Issue #994 - @zimmerle]\n",
                    "rendered": {
                      "text": "   [Issue #1442 - @zimmerle, @victorhora] \n - Adds support for SecRuleRemoveByTag.\n   [Issue #1476 - @zimmerle, @victorhora]\n - Adds support for update target by message.\n   [Issue #1474 - @zimmerle, @victorhora]\n - Adds support to SecRuleScript directive.\n   [Issue #994 - @zimmerle]\n",
                      "markdown": "`   [Issue #1442 - @zimmerle, @victorhora] \n - Adds support for SecRuleRemoveByTag.\n   [Issue #1476 - @zimmerle, @victorhora]\n - Adds support for update target by message.\n   [Issue #1474 - @zimmerle, @victorhora]\n - Adds support to SecRuleScript directive.\n   [Issue #994 - @zimmerle]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/CHANGES"
                },
                "region": {
                  "startLine": 448,
                  "startColumn": 36,
                  "endLine": 448,
                  "endColumn": 40,
                  "snippet": {
                    "text": "   [0x3077c - @zimmerle]\n - @ipMatch \"Could not add entry\" on slash/32 notation in 2.9.0\n   [Issue #849 - @zimmerle, @dune73]\n - Using values after transformation at MATCHED_VARS\n   [0x14316 - @zimmerle]\n - Adds support to UpdateActionById.\n   [Issue #1800 - @zimmerle, @victorhora, @NisariAIT]\n",
                    "rendered": {
                      "text": "   [0x3077c - @zimmerle]\n - @ipMatch \"Could not add entry\" on slash/32 notation in 2.9.0\n   [Issue #849 - @zimmerle, @dune73]\n - Using values after transformation at MATCHED_VARS\n   [0x14316 - @zimmerle]\n - Adds support to UpdateActionById.\n   [Issue #1800 - @zimmerle, @victorhora, @NisariAIT]\n",
                      "markdown": "`   [0x3077c - @zimmerle]\n - @ipMatch \"Could not add entry\" on slash/32 notation in 2.9.0\n   [Issue #849 - @zimmerle, @dune73]\n - Using values after transformation at MATCHED_VARS\n   [0x14316 - @zimmerle]\n - Adds support to UpdateActionById.\n   [Issue #1800 - @zimmerle, @victorhora, @NisariAIT]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/CHANGES"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 49,
                  "endLine": 145,
                  "endColumn": 53,
                  "snippet": {
                    "text": "    [Issue #2901 - @airween]\n  - Make MULTIPART_PART_HEADERS accessible to lua\n    [Issue #2916 - @martinhsv]\n  - Fix: Lua scripts cannot read whole collection at once\n    [Issue #2900 - @udi-aharon, @airween, @martinhsv]\n  - Fix: quoted Include config with wildcard\n    [Issue #2905 - @wiseelf, @airween, @martinhsv]\n",
                    "rendered": {
                      "text": "    [Issue #2901 - @airween]\n  - Make MULTIPART_PART_HEADERS accessible to lua\n    [Issue #2916 - @martinhsv]\n  - Fix: Lua scripts cannot read whole collection at once\n    [Issue #2900 - @udi-aharon, @airween, @martinhsv]\n  - Fix: quoted Include config with wildcard\n    [Issue #2905 - @wiseelf, @airween, @martinhsv]\n",
                      "markdown": "`    [Issue #2901 - @airween]\n  - Make MULTIPART_PART_HEADERS accessible to lua\n    [Issue #2916 - @martinhsv]\n  - Fix: Lua scripts cannot read whole collection at once\n    [Issue #2900 - @udi-aharon, @airween, @martinhsv]\n  - Fix: quoted Include config with wildcard\n    [Issue #2905 - @wiseelf, @airween, @martinhsv]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/CHANGES"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 10,
                  "endLine": 99,
                  "endColumn": 18,
                  "snippet": {
                    "text": "    [PR #3095 - @airween]\n  - fix: Change 'SecEngineStatus' to Off by default\n    [PR #3092 - @airween]\n  - chore: update bug-report-for-version-3-x.md\n    [PR #3086 - @fzipi]\n  - test: Logical, syntax and cosmetic fixes on test cases\n    [PR #3080 - @MirkoDziadzka, @airween]\n",
                    "rendered": {
                      "text": "    [PR #3095 - @airween]\n  - fix: Change 'SecEngineStatus' to Off by default\n    [PR #3092 - @airween]\n  - chore: update bug-report-for-version-3-x.md\n    [PR #3086 - @fzipi]\n  - test: Logical, syntax and cosmetic fixes on test cases\n    [PR #3080 - @MirkoDziadzka, @airween]\n",
                      "markdown": "`    [PR #3095 - @airween]\n  - fix: Change 'SecEngineStatus' to Off by default\n    [PR #3092 - @airween]\n  - chore: update bug-report-for-version-3-x.md\n    [PR #3086 - @fzipi]\n  - test: Logical, syntax and cosmetic fixes on test cases\n    [PR #3080 - @MirkoDziadzka, @airween]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/CHANGES"
                },
                "region": {
                  "startLine": 89,
                  "startColumn": 8,
                  "endLine": 89,
                  "endColumn": 16,
                  "snippet": {
                    "text": "    [PR #3117 - @airween]\n  - Deleted redundant code in 'ModSecurity::serverLog(...)'.\n    [PR #3116 - @gberkes]\n  - doc: Update CHANGES\n    [PR #3101 - @airween]\n  - Reduce the scope of variables in a for loop\n    [PR #3098 - @devzero2000]\n",
                    "rendered": {
                      "text": "    [PR #3117 - @airween]\n  - Deleted redundant code in 'ModSecurity::serverLog(...)'.\n    [PR #3116 - @gberkes]\n  - doc: Update CHANGES\n    [PR #3101 - @airween]\n  - Reduce the scope of variables in a for loop\n    [PR #3098 - @devzero2000]\n",
                      "markdown": "`    [PR #3117 - @airween]\n  - Deleted redundant code in 'ModSecurity::serverLog(...)'.\n    [PR #3116 - @gberkes]\n  - doc: Update CHANGES\n    [PR #3101 - @airween]\n  - Reduce the scope of variables in a for loop\n    [PR #3098 - @devzero2000]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/CHANGES"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 8,
                  "endLine": 81,
                  "endColumn": 16,
                  "snippet": {
                    "text": "    [PR #3134 - @eduar-hte]\n  - Add support to build libModSecurity v3 on Windows\n    [PR #3132 - @eduar-hte]\n  - fix: update submodule url\n    [PR #3128 - @fzipi]\n  - fix(rbl): typo in rbl check selector\n    [PR #3127 - @fzipi]\n",
                    "rendered": {
                      "text": "    [PR #3134 - @eduar-hte]\n  - Add support to build libModSecurity v3 on Windows\n    [PR #3132 - @eduar-hte]\n  - fix: update submodule url\n    [PR #3128 - @fzipi]\n  - fix(rbl): typo in rbl check selector\n    [PR #3127 - @fzipi]\n",
                      "markdown": "`    [PR #3134 - @eduar-hte]\n  - Add support to build libModSecurity v3 on Windows\n    [PR #3132 - @eduar-hte]\n  - fix: update submodule url\n    [PR #3128 - @fzipi]\n  - fix(rbl): typo in rbl check selector\n    [PR #3127 - @fzipi]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/CHANGES"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 3,
                  "endLine": 71,
                  "endColumn": 11,
                  "snippet": {
                    "text": "    [PR #3161 - @eduar-hte]\n  - chore: add PR template (v3)\n    [PR #3160 - @fzipi]\n  - Update to seclang-scanner changes introduced by Windows support\n    [PR #3146 - @eduar-hte]\n  - GitHub build & quality assurance workflow updates\n    [PR #3144 - @eduar-hte]\n",
                    "rendered": {
                      "text": "    [PR #3161 - @eduar-hte]\n  - chore: add PR template (v3)\n    [PR #3160 - @fzipi]\n  - Update to seclang-scanner changes introduced by Windows support\n    [PR #3146 - @eduar-hte]\n  - GitHub build & quality assurance workflow updates\n    [PR #3144 - @eduar-hte]\n",
                      "markdown": "`    [PR #3161 - @eduar-hte]\n  - chore: add PR template (v3)\n    [PR #3160 - @fzipi]\n  - Update to seclang-scanner changes introduced by Windows support\n    [PR #3146 - @eduar-hte]\n  - GitHub build & quality assurance workflow updates\n    [PR #3144 - @eduar-hte]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/CHANGES"
                },
                "region": {
                  "startLine": 67,
                  "startColumn": 3,
                  "endLine": 67,
                  "endColumn": 11,
                  "snippet": {
                    "text": "    [PR #3182 - @airween]\n  - Improve performance of VariableOrigin instances\n    [PR #3164 - @eduar-hte]\n  - Update libinjection & Mbed TLS\n    [PR #3161 - @eduar-hte]\n  - chore: add PR template (v3)\n    [PR #3160 - @fzipi]\n",
                    "rendered": {
                      "text": "    [PR #3182 - @airween]\n  - Improve performance of VariableOrigin instances\n    [PR #3164 - @eduar-hte]\n  - Update libinjection & Mbed TLS\n    [PR #3161 - @eduar-hte]\n  - chore: add PR template (v3)\n    [PR #3160 - @fzipi]\n",
                      "markdown": "`    [PR #3182 - @airween]\n  - Improve performance of VariableOrigin instances\n    [PR #3164 - @eduar-hte]\n  - Update libinjection & Mbed TLS\n    [PR #3161 - @eduar-hte]\n  - chore: add PR template (v3)\n    [PR #3160 - @fzipi]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/CHANGES"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 3,
                  "endLine": 63,
                  "endColumn": 11,
                  "snippet": {
                    "text": "    [PR #3189 - @bitbehz]\n  - Simplify checkout of submodules in GitHub workflows (with support for git describe)\n    [PR #3185 - @eduar-hte]\n  - Update README.md: use submodule and use benchmark tool\n    [PR #3182 - @airween]\n  - Improve performance of VariableOrigin instances\n    [PR #3164 - @eduar-hte]\n",
                    "rendered": {
                      "text": "    [PR #3189 - @bitbehz]\n  - Simplify checkout of submodules in GitHub workflows (with support for git describe)\n    [PR #3185 - @eduar-hte]\n  - Update README.md: use submodule and use benchmark tool\n    [PR #3182 - @airween]\n  - Improve performance of VariableOrigin instances\n    [PR #3164 - @eduar-hte]\n",
                      "markdown": "`    [PR #3189 - @bitbehz]\n  - Simplify checkout of submodules in GitHub workflows (with support for git describe)\n    [PR #3185 - @eduar-hte]\n  - Update README.md: use submodule and use benchmark tool\n    [PR #3182 - @airween]\n  - Improve performance of VariableOrigin instances\n    [PR #3164 - @eduar-hte]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/CHANGES"
                },
                "region": {
                  "startLine": 664,
                  "startColumn": 27,
                  "endLine": 664,
                  "endColumn": 32,
                  "snippet": {
                    "text": "   [Issue #1050 - @zimmerle]\n - Adds support for transformations inside Lua engine\n   [Issue #994 - @zimmerle]\n - Adds initial support for Lua engine.\n   [Issue #994 - @zimmerle]\n - Adds support for @inspectFile operator.\n   [Issue #999 - @zimmerle, @victorhora]\n",
                    "rendered": {
                      "text": "   [Issue #1050 - @zimmerle]\n - Adds support for transformations inside Lua engine\n   [Issue #994 - @zimmerle]\n - Adds initial support for Lua engine.\n   [Issue #994 - @zimmerle]\n - Adds support for @inspectFile operator.\n   [Issue #999 - @zimmerle, @victorhora]\n",
                      "markdown": "`   [Issue #1050 - @zimmerle]\n - Adds support for transformations inside Lua engine\n   [Issue #994 - @zimmerle]\n - Adds initial support for Lua engine.\n   [Issue #994 - @zimmerle]\n - Adds support for @inspectFile operator.\n   [Issue #999 - @zimmerle, @victorhora]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/CHANGES"
                },
                "region": {
                  "startLine": 662,
                  "startColumn": 42,
                  "endLine": 662,
                  "endColumn": 47,
                  "snippet": {
                    "text": "   [Issue #994 - @zimmerle]\n - Adds support for the exec action.\n   [Issue #1050 - @zimmerle]\n - Adds support for transformations inside Lua engine\n   [Issue #994 - @zimmerle]\n - Adds initial support for Lua engine.\n   [Issue #994 - @zimmerle]\n",
                    "rendered": {
                      "text": "   [Issue #994 - @zimmerle]\n - Adds support for the exec action.\n   [Issue #1050 - @zimmerle]\n - Adds support for transformations inside Lua engine\n   [Issue #994 - @zimmerle]\n - Adds initial support for Lua engine.\n   [Issue #994 - @zimmerle]\n",
                      "markdown": "`   [Issue #994 - @zimmerle]\n - Adds support for the exec action.\n   [Issue #1050 - @zimmerle]\n - Adds support for transformations inside Lua engine\n   [Issue #994 - @zimmerle]\n - Adds initial support for Lua engine.\n   [Issue #994 - @zimmerle]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/CHANGES"
                },
                "region": {
                  "startLine": 646,
                  "startColumn": 6,
                  "endLine": 646,
                  "endColumn": 11,
                  "snippet": {
                    "text": "   [0xfd84e - Izik Abramov]\n - Improvements on the benchmark tool.\n   [Issue #1615 - @zimmerle]\n - Fix lua headers on the build scripts\n   [Issue #1621 - @Minasu]\n - Refactoring on the JSON parser.\n   [Issue #1576, #1577 - Tobias Gutknecht, @zimmerle, @victorhora, @marcstern]\n",
                    "rendered": {
                      "text": "   [0xfd84e - Izik Abramov]\n - Improvements on the benchmark tool.\n   [Issue #1615 - @zimmerle]\n - Fix lua headers on the build scripts\n   [Issue #1621 - @Minasu]\n - Refactoring on the JSON parser.\n   [Issue #1576, #1577 - Tobias Gutknecht, @zimmerle, @victorhora, @marcstern]\n",
                      "markdown": "`   [0xfd84e - Izik Abramov]\n - Improvements on the benchmark tool.\n   [Issue #1615 - @zimmerle]\n - Fix lua headers on the build scripts\n   [Issue #1621 - @Minasu]\n - Refactoring on the JSON parser.\n   [Issue #1576, #1577 - Tobias Gutknecht, @zimmerle, @victorhora, @marcstern]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/CHANGES"
                },
                "region": {
                  "startLine": 640,
                  "startColumn": 52,
                  "endLine": 640,
                  "endColumn": 57,
                  "snippet": {
                    "text": "v3.0.0 - 2017-Dec-13\n--------------------\n\n - Improvements on LUA build scripts and support for LUA 5.2.\n   [Issue #1617 and #1622 - @victorhora, @zimmerle]\n - Fix compilation error with disable_debug_log flag\n   [0xfd84e - Izik Abramov]\n",
                    "rendered": {
                      "text": "v3.0.0 - 2017-Dec-13\n--------------------\n\n - Improvements on LUA build scripts and support for LUA 5.2.\n   [Issue #1617 and #1622 - @victorhora, @zimmerle]\n - Fix compilation error with disable_debug_log flag\n   [0xfd84e - Izik Abramov]\n",
                      "markdown": "`v3.0.0 - 2017-Dec-13\n--------------------\n\n - Improvements on LUA build scripts and support for LUA 5.2.\n   [Issue #1617 and #1622 - @victorhora, @zimmerle]\n - Fix compilation error with disable_debug_log flag\n   [0xfd84e - Izik Abramov]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/CHANGES"
                },
                "region": {
                  "startLine": 640,
                  "startColumn": 18,
                  "endLine": 640,
                  "endColumn": 23,
                  "snippet": {
                    "text": "v3.0.0 - 2017-Dec-13\n--------------------\n\n - Improvements on LUA build scripts and support for LUA 5.2.\n   [Issue #1617 and #1622 - @victorhora, @zimmerle]\n - Fix compilation error with disable_debug_log flag\n   [0xfd84e - Izik Abramov]\n",
                    "rendered": {
                      "text": "v3.0.0 - 2017-Dec-13\n--------------------\n\n - Improvements on LUA build scripts and support for LUA 5.2.\n   [Issue #1617 and #1622 - @victorhora, @zimmerle]\n - Fix compilation error with disable_debug_log flag\n   [0xfd84e - Izik Abramov]\n",
                      "markdown": "`v3.0.0 - 2017-Dec-13\n--------------------\n\n - Improvements on LUA build scripts and support for LUA 5.2.\n   [Issue #1617 and #1622 - @victorhora, @zimmerle]\n - Fix compilation error with disable_debug_log flag\n   [0xfd84e - Izik Abramov]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/CHANGES"
                },
                "region": {
                  "startLine": 634,
                  "startColumn": 10,
                  "endLine": 634,
                  "endColumn": 15,
                  "snippet": {
                    "text": "   [0x91ff3 - @zimmerle]\n - Fix uri on the benchmark utility\n   [0x63bec - @zimmerle]\n - disable Lua on systems with liblua5.1\n   [Issue #1639 - @victorhora, @defanator]\n\nv3.0.0 - 2017-Dec-13\n",
                    "rendered": {
                      "text": "   [0x91ff3 - @zimmerle]\n - Fix uri on the benchmark utility\n   [0x63bec - @zimmerle]\n - disable Lua on systems with liblua5.1\n   [Issue #1639 - @victorhora, @defanator]\n\nv3.0.0 - 2017-Dec-13\n",
                      "markdown": "`   [0x91ff3 - @zimmerle]\n - Fix uri on the benchmark utility\n   [0x63bec - @zimmerle]\n - disable Lua on systems with liblua5.1\n   [Issue #1639 - @victorhora, @defanator]\n\nv3.0.0 - 2017-Dec-13\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/CHANGES"
                },
                "region": {
                  "startLine": 625,
                  "startColumn": 10,
                  "endLine": 625,
                  "endColumn": 16,
                  "snippet": {
                    "text": " - Checking std::deque size before use it\n   [0x217cbf - @zimmerle, Yaron Dayagi]\n - perf improvement: Added the concept of RunTimeString and removed\n   all run time parser.\n   [0x3eae51 0x0320e0 0xb5688f 0xfe47a9 0xfa9842 0x1affc3 0x079de4\n    0xc7c04f 0x5262ea 0x01974a 0xd5ee1e - @zimmerle]\n - perf improvement: Checks debuglog level before format debug msg\n",
                    "rendered": {
                      "text": " - Checking std::deque size before use it\n   [0x217cbf - @zimmerle, Yaron Dayagi]\n - perf improvement: Added the concept of RunTimeString and removed\n   all run time parser.\n   [0x3eae51 0x0320e0 0xb5688f 0xfe47a9 0xfa9842 0x1affc3 0x079de4\n    0xc7c04f 0x5262ea 0x01974a 0xd5ee1e - @zimmerle]\n - perf improvement: Checks debuglog level before format debug msg\n",
                      "markdown": "` - Checking std::deque size before use it\n   [0x217cbf - @zimmerle, Yaron Dayagi]\n - perf improvement: Added the concept of RunTimeString and removed\n   all run time parser.\n   [0x3eae51 0x0320e0 0xb5688f 0xfe47a9 0xfa9842 0x1affc3 0x079de4\n    0xc7c04f 0x5262ea 0x01974a 0xd5ee1e - @zimmerle]\n - perf improvement: Checks debuglog level before format debug msg\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/CHANGES"
                },
                "region": {
                  "startLine": 614,
                  "startColumn": 25,
                  "endLine": 614,
                  "endColumn": 29,
                  "snippet": {
                    "text": "   [Issue #1677 - @defanator, @zimmerle]\n - Add missing Base64 transformation statements to parser\n   [Issue #1632 - @victorhora, @zimmerle]\n - Fixed resource load on ip match from file\n   [#1674 - @zimmerle, @StefaanSeys]\n - Fixed examples compilation while using disable-shared\n   [#1670 - @zimmerle, @ivanbaldo]\n",
                    "rendered": {
                      "text": "   [Issue #1677 - @defanator, @zimmerle]\n - Add missing Base64 transformation statements to parser\n   [Issue #1632 - @victorhora, @zimmerle]\n - Fixed resource load on ip match from file\n   [#1674 - @zimmerle, @StefaanSeys]\n - Fixed examples compilation while using disable-shared\n   [#1670 - @zimmerle, @ivanbaldo]\n",
                      "markdown": "`   [Issue #1677 - @defanator, @zimmerle]\n - Add missing Base64 transformation statements to parser\n   [Issue #1632 - @victorhora, @zimmerle]\n - Fixed resource load on ip match from file\n   [#1674 - @zimmerle, @StefaanSeys]\n - Fixed examples compilation while using disable-shared\n   [#1670 - @zimmerle, @ivanbaldo]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/CHANGES"
                },
                "region": {
                  "startLine": 612,
                  "startColumn": 14,
                  "endLine": 612,
                  "endColumn": 22,
                  "snippet": {
                    "text": "   [Issue #1678 - @defanator]\n - Fix \"include /foo/*.conf\" for single matched object in directory\n   [Issue #1677 - @defanator, @zimmerle]\n - Add missing Base64 transformation statements to parser\n   [Issue #1632 - @victorhora, @zimmerle]\n - Fixed resource load on ip match from file\n   [#1674 - @zimmerle, @StefaanSeys]\n",
                    "rendered": {
                      "text": "   [Issue #1678 - @defanator]\n - Fix \"include /foo/*.conf\" for single matched object in directory\n   [Issue #1677 - @defanator, @zimmerle]\n - Add missing Base64 transformation statements to parser\n   [Issue #1632 - @victorhora, @zimmerle]\n - Fixed resource load on ip match from file\n   [#1674 - @zimmerle, @StefaanSeys]\n",
                      "markdown": "`   [Issue #1678 - @defanator]\n - Fix \"include /foo/*.conf\" for single matched object in directory\n   [Issue #1677 - @defanator, @zimmerle]\n - Add missing Base64 transformation statements to parser\n   [Issue #1632 - @victorhora, @zimmerle]\n - Fixed resource load on ip match from file\n   [#1674 - @zimmerle, @StefaanSeys]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/CHANGES"
                },
                "region": {
                  "startLine": 608,
                  "startColumn": 58,
                  "endLine": 609,
                  "snippet": {
                    "text": "   [Issue #1640 - @defanator]\n - Added some cosmetics to autoconf related code\n   [Issue #1652 - @airween]\n - Fix \"make dist\" target to include necessary headers for Lua\n   [Issue #1678 - @defanator]\n - Fix \"include /foo/*.conf\" for single matched object in directory\n   [Issue #1677 - @defanator, @zimmerle]\n - Add missing Base64 transformation statements to parser\n",
                    "rendered": {
                      "text": "   [Issue #1640 - @defanator]\n - Added some cosmetics to autoconf related code\n   [Issue #1652 - @airween]\n - Fix \"make dist\" target to include necessary headers for Lua\n   [Issue #1678 - @defanator]\n - Fix \"include /foo/*.conf\" for single matched object in directory\n   [Issue #1677 - @defanator, @zimmerle]\n - Add missing Base64 transformation statements to parser\n",
                      "markdown": "`   [Issue #1640 - @defanator]\n - Added some cosmetics to autoconf related code\n   [Issue #1652 - @airween]\n - Fix \"make dist\" target to include necessary headers for Lua\n   [Issue #1678 - @defanator]\n - Fix \"include /foo/*.conf\" for single matched object in directory\n   [Issue #1677 - @defanator, @zimmerle]\n - Add missing Base64 transformation statements to parser\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/CHANGES"
                },
                "region": {
                  "startLine": 533,
                  "startColumn": 7,
                  "endLine": 533,
                  "endColumn": 13,
                  "snippet": {
                    "text": "   [Issue #1733, #1759, #1775 - @victorhora, @JaiHarpalani, @defanator]\n - Fix LDFLAGS for unit tests.\n   [Issue #1758 - @smlx]\n - Adds time stamp back to the audit logs\n   [Issue #1762 - @Pjack, @zimmerle]\n - Disables skip counter if debug log is disabled\n   [@zimmerle]\n",
                    "rendered": {
                      "text": "   [Issue #1733, #1759, #1775 - @victorhora, @JaiHarpalani, @defanator]\n - Fix LDFLAGS for unit tests.\n   [Issue #1758 - @smlx]\n - Adds time stamp back to the audit logs\n   [Issue #1762 - @Pjack, @zimmerle]\n - Disables skip counter if debug log is disabled\n   [@zimmerle]\n",
                      "markdown": "`   [Issue #1733, #1759, #1775 - @victorhora, @JaiHarpalani, @defanator]\n - Fix LDFLAGS for unit tests.\n   [Issue #1758 - @smlx]\n - Adds time stamp back to the audit logs\n   [Issue #1762 - @Pjack, @zimmerle]\n - Disables skip counter if debug log is disabled\n   [@zimmerle]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/CHANGES"
                },
                "region": {
                  "startLine": 523,
                  "startColumn": 44,
                  "endLine": 523,
                  "endColumn": 50,
                  "snippet": {
                    "text": "   [Issue #1783 - @weliu]\n - Use rvalue reference in ModSecurity::serverLog\n   [Issue #1769 - @weliu]\n - Build System: Fix when multiple lines for curl version.\n   [Issue #1771 - @Artistan]\n - Checks if response body inspection is enabled before process it\n   [Issue #1643 - @zoltan-fedor, @dennus, @defanator, @zimmerle]\n",
                    "rendered": {
                      "text": "   [Issue #1783 - @weliu]\n - Use rvalue reference in ModSecurity::serverLog\n   [Issue #1769 - @weliu]\n - Build System: Fix when multiple lines for curl version.\n   [Issue #1771 - @Artistan]\n - Checks if response body inspection is enabled before process it\n   [Issue #1643 - @zoltan-fedor, @dennus, @defanator, @zimmerle]\n",
                      "markdown": "`   [Issue #1783 - @weliu]\n - Use rvalue reference in ModSecurity::serverLog\n   [Issue #1769 - @weliu]\n - Build System: Fix when multiple lines for curl version.\n   [Issue #1771 - @Artistan]\n - Checks if response body inspection is enabled before process it\n   [Issue #1643 - @zoltan-fedor, @dennus, @defanator, @zimmerle]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/CHANGES"
                },
                "region": {
                  "startLine": 508,
                  "startColumn": 6,
                  "endLine": 508,
                  "endColumn": 10,
                  "snippet": {
                    "text": "   [Issue #1787 - @airween, @zimmerle]\n - Fixed false positive MULTIPART_UNMATCHED_BOUNDARY errors\n   [Issue #1747, #1924 - @airween, @victorhora, @defanator, @zimmerle]\n - Fix ip tree lookup on netmask content\n   [Issue #1793 - @tinselcity, @zimmerle]\n - Changes the behavior of the default sec actions\n   [Issue #1629 - @mirkodziadzka-avi, @zimmerle, @victorhora]\n",
                    "rendered": {
                      "text": "   [Issue #1787 - @airween, @zimmerle]\n - Fixed false positive MULTIPART_UNMATCHED_BOUNDARY errors\n   [Issue #1747, #1924 - @airween, @victorhora, @defanator, @zimmerle]\n - Fix ip tree lookup on netmask content\n   [Issue #1793 - @tinselcity, @zimmerle]\n - Changes the behavior of the default sec actions\n   [Issue #1629 - @mirkodziadzka-avi, @zimmerle, @victorhora]\n",
                      "markdown": "`   [Issue #1787 - @airween, @zimmerle]\n - Fixed false positive MULTIPART_UNMATCHED_BOUNDARY errors\n   [Issue #1747, #1924 - @airween, @victorhora, @defanator, @zimmerle]\n - Fix ip tree lookup on netmask content\n   [Issue #1793 - @tinselcity, @zimmerle]\n - Changes the behavior of the default sec actions\n   [Issue #1629 - @mirkodziadzka-avi, @zimmerle, @victorhora]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/CHANGES"
                },
                "region": {
                  "startLine": 491,
                  "startColumn": 24,
                  "endLine": 491,
                  "endColumn": 29,
                  "snippet": {
                    "text": "   [Issue #1622 - @victorhora, @dmitryzykov]\n - Allow LuaJIT to be used\n   [Issue #1809 - @victorhora, @p0pr0ck5]\n - Implement support for Lua 5.1\n   [Issue #1809 - @p0pr0ck5, @victorhora]\n - Variable names must match fully, not partially. Match should be case\n   insensitive.\n",
                    "rendered": {
                      "text": "   [Issue #1622 - @victorhora, @dmitryzykov]\n - Allow LuaJIT to be used\n   [Issue #1809 - @victorhora, @p0pr0ck5]\n - Implement support for Lua 5.1\n   [Issue #1809 - @p0pr0ck5, @victorhora]\n - Variable names must match fully, not partially. Match should be case\n   insensitive.\n",
                      "markdown": "`   [Issue #1622 - @victorhora, @dmitryzykov]\n - Allow LuaJIT to be used\n   [Issue #1809 - @victorhora, @p0pr0ck5]\n - Implement support for Lua 5.1\n   [Issue #1809 - @p0pr0ck5, @victorhora]\n - Variable names must match fully, not partially. Match should be case\n   insensitive.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/CHANGES"
                },
                "region": {
                  "startLine": 487,
                  "startColumn": 6,
                  "endLine": 487,
                  "endColumn": 11,
                  "snippet": {
                    "text": "   [Issue #1794 - @tinselcity, @zimmerle]\n - Adds support for ctl:requestBodyProcessor=URLENCODED\n   [Issue #1797 - @victorhora]\n - Add LUA compatibility for CentOS and try to use LuaJIT first if available\n   [Issue #1622 - @victorhora, @dmitryzykov]\n - Allow LuaJIT to be used\n   [Issue #1809 - @victorhora, @p0pr0ck5]\n",
                    "rendered": {
                      "text": "   [Issue #1794 - @tinselcity, @zimmerle]\n - Adds support for ctl:requestBodyProcessor=URLENCODED\n   [Issue #1797 - @victorhora]\n - Add LUA compatibility for CentOS and try to use LuaJIT first if available\n   [Issue #1622 - @victorhora, @dmitryzykov]\n - Allow LuaJIT to be used\n   [Issue #1809 - @victorhora, @p0pr0ck5]\n",
                      "markdown": "`   [Issue #1794 - @tinselcity, @zimmerle]\n - Adds support for ctl:requestBodyProcessor=URLENCODED\n   [Issue #1797 - @victorhora]\n - Add LUA compatibility for CentOS and try to use LuaJIT first if available\n   [Issue #1622 - @victorhora, @dmitryzykov]\n - Allow LuaJIT to be used\n   [Issue #1809 - @victorhora, @p0pr0ck5]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/CHANGES"
                },
                "region": {
                  "startLine": 467,
                  "startColumn": 28,
                  "endLine": 467,
                  "endColumn": 33,
                  "snippet": {
                    "text": "   [Issue #1627 - @defanator, @zimmerle]\n - Treating variables exception on load-time instead of run time.\n   [0x028e0 and 0x275a1 - @zimmerle]\n - Fix: function m.setvar in Lua scripts and add testcases\n   [Issue #1859 - @nowaits, @victorhora]\n - Fix SecResponseBodyAccess and ctl:requestBodyAccess directives\n   [Issue #1531 - @victorhora, @defanator]\n",
                    "rendered": {
                      "text": "   [Issue #1627 - @defanator, @zimmerle]\n - Treating variables exception on load-time instead of run time.\n   [0x028e0 and 0x275a1 - @zimmerle]\n - Fix: function m.setvar in Lua scripts and add testcases\n   [Issue #1859 - @nowaits, @victorhora]\n - Fix SecResponseBodyAccess and ctl:requestBodyAccess directives\n   [Issue #1531 - @victorhora, @defanator]\n",
                      "markdown": "`   [Issue #1627 - @defanator, @zimmerle]\n - Treating variables exception on load-time instead of run time.\n   [0x028e0 and 0x275a1 - @zimmerle]\n - Fix: function m.setvar in Lua scripts and add testcases\n   [Issue #1859 - @nowaits, @victorhora]\n - Fix SecResponseBodyAccess and ctl:requestBodyAccess directives\n   [Issue #1531 - @victorhora, @defanator]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/CHANGES"
                },
                "region": {
                  "startLine": 395,
                  "startColumn": 31,
                  "endLine": 395,
                  "endColumn": 36,
                  "snippet": {
                    "text": "   [Issue #1973 - @defanator]\n - Changes ENV test case to read the default MODSECURTIY env var\n   [Issue #1969 - @zimmerle, @airween, @inittab]\n - Regression: Sets MODSECURITY env var during the tests execution\n   [Issue #1969 - @zimmerle, @airween, @inittab]\n - Fix setenv action to strdup key=variable\n   [@zimmerle]\n",
                    "rendered": {
                      "text": "   [Issue #1973 - @defanator]\n - Changes ENV test case to read the default MODSECURTIY env var\n   [Issue #1969 - @zimmerle, @airween, @inittab]\n - Regression: Sets MODSECURITY env var during the tests execution\n   [Issue #1969 - @zimmerle, @airween, @inittab]\n - Fix setenv action to strdup key=variable\n   [@zimmerle]\n",
                      "markdown": "`   [Issue #1973 - @defanator]\n - Changes ENV test case to read the default MODSECURTIY env var\n   [Issue #1969 - @zimmerle, @airween, @inittab]\n - Regression: Sets MODSECURITY env var during the tests execution\n   [Issue #1969 - @zimmerle, @airween, @inittab]\n - Fix setenv action to strdup key=variable\n   [@zimmerle]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/CHANGES"
                },
                "region": {
                  "startLine": 393,
                  "startColumn": 56,
                  "endLine": 393,
                  "endColumn": 61,
                  "snippet": {
                    "text": "   [Issue #1980 - @airween]\n - Fix tests on FreeBSD\n   [Issue #1973 - @defanator]\n - Changes ENV test case to read the default MODSECURTIY env var\n   [Issue #1969 - @zimmerle, @airween, @inittab]\n - Regression: Sets MODSECURITY env var during the tests execution\n   [Issue #1969 - @zimmerle, @airween, @inittab]\n",
                    "rendered": {
                      "text": "   [Issue #1980 - @airween]\n - Fix tests on FreeBSD\n   [Issue #1973 - @defanator]\n - Changes ENV test case to read the default MODSECURTIY env var\n   [Issue #1969 - @zimmerle, @airween, @inittab]\n - Regression: Sets MODSECURITY env var during the tests execution\n   [Issue #1969 - @zimmerle, @airween, @inittab]\n",
                      "markdown": "`   [Issue #1980 - @airween]\n - Fix tests on FreeBSD\n   [Issue #1973 - @defanator]\n - Changes ENV test case to read the default MODSECURTIY env var\n   [Issue #1969 - @zimmerle, @airween, @inittab]\n - Regression: Sets MODSECURITY env var during the tests execution\n   [Issue #1969 - @zimmerle, @airween, @inittab]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/CHANGES"
                },
                "region": {
                  "startLine": 393,
                  "startColumn": 10,
                  "endLine": 393,
                  "endColumn": 15,
                  "snippet": {
                    "text": "   [Issue #1980 - @airween]\n - Fix tests on FreeBSD\n   [Issue #1973 - @defanator]\n - Changes ENV test case to read the default MODSECURTIY env var\n   [Issue #1969 - @zimmerle, @airween, @inittab]\n - Regression: Sets MODSECURITY env var during the tests execution\n   [Issue #1969 - @zimmerle, @airween, @inittab]\n",
                    "rendered": {
                      "text": "   [Issue #1980 - @airween]\n - Fix tests on FreeBSD\n   [Issue #1973 - @defanator]\n - Changes ENV test case to read the default MODSECURTIY env var\n   [Issue #1969 - @zimmerle, @airween, @inittab]\n - Regression: Sets MODSECURITY env var during the tests execution\n   [Issue #1969 - @zimmerle, @airween, @inittab]\n",
                      "markdown": "`   [Issue #1980 - @airween]\n - Fix tests on FreeBSD\n   [Issue #1973 - @defanator]\n - Changes ENV test case to read the default MODSECURTIY env var\n   [Issue #1969 - @zimmerle, @airween, @inittab]\n - Regression: Sets MODSECURITY env var during the tests execution\n   [Issue #1969 - @zimmerle, @airween, @inittab]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/CHANGES"
                },
                "region": {
                  "startLine": 314,
                  "startColumn": 30,
                  "endLine": 314,
                  "endColumn": 35,
                  "snippet": {
                    "text": " - Fix: audit log data omitted when nolog,auditlog\n   [@martinhsv]\n - Fix: ModSecurity 3.x inspectFile operator does not pass\n   FILES_TMPNAMES parameter to lua engine\n   [Issue #2204, #2205 - @kadirerdogan]\n - XML: Remove error messages from stderr\n   [Issue #2010 - @JaiHarpalani, @zimmerle]\n",
                    "rendered": {
                      "text": " - Fix: audit log data omitted when nolog,auditlog\n   [@martinhsv]\n - Fix: ModSecurity 3.x inspectFile operator does not pass\n   FILES_TMPNAMES parameter to lua engine\n   [Issue #2204, #2205 - @kadirerdogan]\n - XML: Remove error messages from stderr\n   [Issue #2010 - @JaiHarpalani, @zimmerle]\n",
                      "markdown": "` - Fix: audit log data omitted when nolog,auditlog\n   [@martinhsv]\n - Fix: ModSecurity 3.x inspectFile operator does not pass\n   FILES_TMPNAMES parameter to lua engine\n   [Issue #2204, #2205 - @kadirerdogan]\n - XML: Remove error messages from stderr\n   [Issue #2010 - @JaiHarpalani, @zimmerle]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/CHANGES"
                },
                "region": {
                  "startLine": 303,
                  "startColumn": 17,
                  "endLine": 303,
                  "endColumn": 25,
                  "snippet": {
                    "text": "    [@martinhsv]\n  - Fix rule-update-target for non-regex\n    [Issue 2251 - @martinhsv]\n  - Fix configure script when packaging for Buildroot\n    [Issue 2235 - @frankvanbever]\n  - modsecurity.pc.in: add Libs.private\n    [Issue #1918, #2253 - @ffontaine, @Dridi, @victorhora]  \n",
                    "rendered": {
                      "text": "    [@martinhsv]\n  - Fix rule-update-target for non-regex\n    [Issue 2251 - @martinhsv]\n  - Fix configure script when packaging for Buildroot\n    [Issue 2235 - @frankvanbever]\n  - modsecurity.pc.in: add Libs.private\n    [Issue #1918, #2253 - @ffontaine, @Dridi, @victorhora]  \n",
                      "markdown": "`    [@martinhsv]\n  - Fix rule-update-target for non-regex\n    [Issue 2251 - @martinhsv]\n  - Fix configure script when packaging for Buildroot\n    [Issue 2235 - @frankvanbever]\n  - modsecurity.pc.in: add Libs.private\n    [Issue #1918, #2253 - @ffontaine, @Dridi, @victorhora]  \n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/CHANGES"
                },
                "region": {
                  "startLine": 287,
                  "startColumn": 19,
                  "endLine": 287,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    [Issue #2131 - @granalberto, @zimmerle]\n  - Fix IP address logging in Section A\n    [Issue #2300 - @inaratech, @zavazingo, @martinhsv]\n  - Adds support to lua 5.4\n    [@zimmerle]\n  - GeoIP: switch to GEOIP_MEMORY_CACHE from GEOIP_INDEX_CACHE\n    [Issues #2378, #2186 - @defanator]\n",
                    "rendered": {
                      "text": "    [Issue #2131 - @granalberto, @zimmerle]\n  - Fix IP address logging in Section A\n    [Issue #2300 - @inaratech, @zavazingo, @martinhsv]\n  - Adds support to lua 5.4\n    [@zimmerle]\n  - GeoIP: switch to GEOIP_MEMORY_CACHE from GEOIP_INDEX_CACHE\n    [Issues #2378, #2186 - @defanator]\n",
                      "markdown": "`    [Issue #2131 - @granalberto, @zimmerle]\n  - Fix IP address logging in Section A\n    [Issue #2300 - @inaratech, @zavazingo, @martinhsv]\n  - Adds support to lua 5.4\n    [@zimmerle]\n  - GeoIP: switch to GEOIP_MEMORY_CACHE from GEOIP_INDEX_CACHE\n    [Issues #2378, #2186 - @defanator]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/CHANGES"
                },
                "region": {
                  "startLine": 285,
                  "startColumn": 7,
                  "endLine": 285,
                  "endColumn": 11,
                  "snippet": {
                    "text": "    [@martinhsv]\n  - Fix maxminddb link on FreeBSD\n    [Issue #2131 - @granalberto, @zimmerle]\n  - Fix IP address logging in Section A\n    [Issue #2300 - @inaratech, @zavazingo, @martinhsv]\n  - Adds support to lua 5.4\n    [@zimmerle]\n",
                    "rendered": {
                      "text": "    [@martinhsv]\n  - Fix maxminddb link on FreeBSD\n    [Issue #2131 - @granalberto, @zimmerle]\n  - Fix IP address logging in Section A\n    [Issue #2300 - @inaratech, @zavazingo, @martinhsv]\n  - Adds support to lua 5.4\n    [@zimmerle]\n",
                      "markdown": "`    [@martinhsv]\n  - Fix maxminddb link on FreeBSD\n    [Issue #2131 - @granalberto, @zimmerle]\n  - Fix IP address logging in Section A\n    [Issue #2300 - @inaratech, @zavazingo, @martinhsv]\n  - Adds support to lua 5.4\n    [@zimmerle]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/CHANGES"
                },
                "region": {
                  "startLine": 190,
                  "startColumn": 21,
                  "endLine": 190,
                  "endColumn": 27,
                  "snippet": {
                    "text": "    [Issue #2806 - @hughmcmaster]\n  - During configure, do not check for pcre if pcre2 specified\n    [Issue #2750 - @dvershinin, @martinhsv]\n  - Use pkg-config to find libxml2 first\n    [Issue #2714 - @hughmcmaster]\n  - Fix two rule-reload memory leak issues\n    [Issue #2801 - @Abce, @martinhsv]\n",
                    "rendered": {
                      "text": "    [Issue #2806 - @hughmcmaster]\n  - During configure, do not check for pcre if pcre2 specified\n    [Issue #2750 - @dvershinin, @martinhsv]\n  - Use pkg-config to find libxml2 first\n    [Issue #2714 - @hughmcmaster]\n  - Fix two rule-reload memory leak issues\n    [Issue #2801 - @Abce, @martinhsv]\n",
                      "markdown": "`    [Issue #2806 - @hughmcmaster]\n  - During configure, do not check for pcre if pcre2 specified\n    [Issue #2750 - @dvershinin, @martinhsv]\n  - Use pkg-config to find libxml2 first\n    [Issue #2714 - @hughmcmaster]\n  - Fix two rule-reload memory leak issues\n    [Issue #2801 - @Abce, @martinhsv]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/CHANGES"
                },
                "region": {
                  "startLine": 168,
                  "startColumn": 60,
                  "endLine": 168,
                  "endColumn": 64,
                  "snippet": {
                    "text": "v3.0.9 - 2023-Apr-12\n--------------------\n\n  - Fix: possible segfault on reload if duplicate ip+CIDR in ip match list\n    [Issue #2877, #2890 - @tomsommer, @martinhsv]\n  - Add some member variable inits in Transaction class (possible segfault)\n    [Issue #2886 - @GNU-Plus-Windows-User, @airween, @mdounin, @martinhsv]\n",
                    "rendered": {
                      "text": "v3.0.9 - 2023-Apr-12\n--------------------\n\n  - Fix: possible segfault on reload if duplicate ip+CIDR in ip match list\n    [Issue #2877, #2890 - @tomsommer, @martinhsv]\n  - Add some member variable inits in Transaction class (possible segfault)\n    [Issue #2886 - @GNU-Plus-Windows-User, @airween, @mdounin, @martinhsv]\n",
                      "markdown": "`v3.0.9 - 2023-Apr-12\n--------------------\n\n  - Fix: possible segfault on reload if duplicate ip+CIDR in ip match list\n    [Issue #2877, #2890 - @tomsommer, @martinhsv]\n  - Add some member variable inits in Transaction class (possible segfault)\n    [Issue #2886 - @GNU-Plus-Windows-User, @airween, @mdounin, @martinhsv]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/CHANGES"
                },
                "region": {
                  "startLine": 145,
                  "startColumn": 8,
                  "endLine": 145,
                  "endColumn": 13,
                  "snippet": {
                    "text": "    [Issue #2901 - @airween]\n  - Make MULTIPART_PART_HEADERS accessible to lua\n    [Issue #2916 - @martinhsv]\n  - Fix: Lua scripts cannot read whole collection at once\n    [Issue #2900 - @udi-aharon, @airween, @martinhsv]\n  - Fix: quoted Include config with wildcard\n    [Issue #2905 - @wiseelf, @airween, @martinhsv]\n",
                    "rendered": {
                      "text": "    [Issue #2901 - @airween]\n  - Make MULTIPART_PART_HEADERS accessible to lua\n    [Issue #2916 - @martinhsv]\n  - Fix: Lua scripts cannot read whole collection at once\n    [Issue #2900 - @udi-aharon, @airween, @martinhsv]\n  - Fix: quoted Include config with wildcard\n    [Issue #2905 - @wiseelf, @airween, @martinhsv]\n",
                      "markdown": "`    [Issue #2901 - @airween]\n  - Make MULTIPART_PART_HEADERS accessible to lua\n    [Issue #2916 - @martinhsv]\n  - Fix: Lua scripts cannot read whole collection at once\n    [Issue #2900 - @udi-aharon, @airween, @martinhsv]\n  - Fix: quoted Include config with wildcard\n    [Issue #2905 - @wiseelf, @airween, @martinhsv]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/CHANGES"
                },
                "region": {
                  "startLine": 143,
                  "startColumn": 45,
                  "endLine": 144,
                  "snippet": {
                    "text": "    [Issue #2934 - @martinhsv]\n  - Add TX synonym for MSC_PCRE_LIMITS_EXCEEDED\n    [Issue #2901 - @airween]\n  - Make MULTIPART_PART_HEADERS accessible to lua\n    [Issue #2916 - @martinhsv]\n  - Fix: Lua scripts cannot read whole collection at once\n    [Issue #2900 - @udi-aharon, @airween, @martinhsv]\n  - Fix: quoted Include config with wildcard\n",
                    "rendered": {
                      "text": "    [Issue #2934 - @martinhsv]\n  - Add TX synonym for MSC_PCRE_LIMITS_EXCEEDED\n    [Issue #2901 - @airween]\n  - Make MULTIPART_PART_HEADERS accessible to lua\n    [Issue #2916 - @martinhsv]\n  - Fix: Lua scripts cannot read whole collection at once\n    [Issue #2900 - @udi-aharon, @airween, @martinhsv]\n  - Fix: quoted Include config with wildcard\n",
                      "markdown": "`    [Issue #2934 - @martinhsv]\n  - Add TX synonym for MSC_PCRE_LIMITS_EXCEEDED\n    [Issue #2901 - @airween]\n  - Make MULTIPART_PART_HEADERS accessible to lua\n    [Issue #2916 - @martinhsv]\n  - Fix: Lua scripts cannot read whole collection at once\n    [Issue #2900 - @udi-aharon, @airween, @martinhsv]\n  - Fix: quoted Include config with wildcard\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/CHANGES"
                },
                "region": {
                  "startLine": 139,
                  "startColumn": 19,
                  "endLine": 139,
                  "endColumn": 25,
                  "snippet": {
                    "text": "v3.0.10 - 2023-Jul-25\n---------------------\n\n  - Fix: worst-case time in implementation of four transformations\n    [Issue #2934 - @martinhsv]\n  - Add TX synonym for MSC_PCRE_LIMITS_EXCEEDED\n    [Issue #2901 - @airween]\n",
                    "rendered": {
                      "text": "v3.0.10 - 2023-Jul-25\n---------------------\n\n  - Fix: worst-case time in implementation of four transformations\n    [Issue #2934 - @martinhsv]\n  - Add TX synonym for MSC_PCRE_LIMITS_EXCEEDED\n    [Issue #2901 - @airween]\n",
                      "markdown": "`v3.0.10 - 2023-Jul-25\n---------------------\n\n  - Fix: worst-case time in implementation of four transformations\n    [Issue #2934 - @martinhsv]\n  - Add TX synonym for MSC_PCRE_LIMITS_EXCEEDED\n    [Issue #2901 - @airween]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/CHANGES"
                },
                "region": {
                  "startLine": 61,
                  "startColumn": 73,
                  "endLine": 61,
                  "endColumn": 78,
                  "snippet": {
                    "text": "    [PR #3203 - @airween]\n  - Fixing typo in Dockerfile\n    [PR #3189 - @bitbehz]\n  - Simplify checkout of submodules in GitHub workflows (with support for git describe)\n    [PR #3185 - @eduar-hte]\n  - Update README.md: use submodule and use benchmark tool\n    [PR #3182 - @airween]\n",
                    "rendered": {
                      "text": "    [PR #3203 - @airween]\n  - Fixing typo in Dockerfile\n    [PR #3189 - @bitbehz]\n  - Simplify checkout of submodules in GitHub workflows (with support for git describe)\n    [PR #3185 - @eduar-hte]\n  - Update README.md: use submodule and use benchmark tool\n    [PR #3182 - @airween]\n",
                      "markdown": "`    [PR #3203 - @airween]\n  - Fixing typo in Dockerfile\n    [PR #3189 - @bitbehz]\n  - Simplify checkout of submodules in GitHub workflows (with support for git describe)\n    [PR #3185 - @eduar-hte]\n  - Update README.md: use submodule and use benchmark tool\n    [PR #3182 - @airween]\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/CHANGES"
                },
                "region": {
                  "startLine": 44,
                  "startColumn": 48,
                  "endLine": 44,
                  "endColumn": 53,
                  "snippet": {
                    "text": "  - Refactor: used the init-statement to declare \"pos\" inside the\n    if statement\n    [PR #3214 - @gberkes]\n  - Refactor: moved 3 #include directives to the top of the file.\n    [PR #3213 - @gberkes]\n  - Fix SecRemoteRules regression test not to depend on a\n    specific error message\n",
                    "rendered": {
                      "text": "  - Refactor: used the init-statement to declare \"pos\" inside the\n    if statement\n    [PR #3214 - @gberkes]\n  - Refactor: moved 3 #include directives to the top of the file.\n    [PR #3213 - @gberkes]\n  - Fix SecRemoteRules regression test not to depend on a\n    specific error message\n",
                      "markdown": "`  - Refactor: used the init-statement to declare \"pos\" inside the\n    if statement\n    [PR #3214 - @gberkes]\n  - Refactor: moved 3 #include directives to the top of the file.\n    [PR #3213 - @gberkes]\n  - Fix SecRemoteRules regression test not to depend on a\n    specific error message\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/length.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/normalise_path_win.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/anchored_variable.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/Makefile.am"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 12,
                  "endLine": 88,
                  "endColumn": 17,
                  "snippet": {
                    "text": "@VALGRIND_CHECK_RULES@\nVALGRIND_SUPPRESSIONS_FILES = valgrind_suppressions.txt\n\nLOG_DRIVER = env $(SHELL) $(top_srcdir)/test/custom-test-driver\nAM_TESTS_ENVIRONMENT=AUTOMAKE_TESTS=true; export AUTOMAKE_TESTS;\nLOG_COMPILER=test/test-suite.sh\n\n",
                    "rendered": {
                      "text": "@VALGRIND_CHECK_RULES@\nVALGRIND_SUPPRESSIONS_FILES = valgrind_suppressions.txt\n\nLOG_DRIVER = env $(SHELL) $(top_srcdir)/test/custom-test-driver\nAM_TESTS_ENVIRONMENT=AUTOMAKE_TESTS=true; export AUTOMAKE_TESTS;\nLOG_COMPILER=test/test-suite.sh\n\n",
                      "markdown": "`@VALGRIND_CHECK_RULES@\nVALGRIND_SUPPRESSIONS_FILES = valgrind_suppressions.txt\n\nLOG_DRIVER = env $(SHELL) $(top_srcdir)/test/custom-test-driver\nAM_TESTS_ENVIRONMENT=AUTOMAKE_TESTS=true; export AUTOMAKE_TESTS;\nLOG_COMPILER=test/test-suite.sh\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/Makefile.am"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 3,
                  "endLine": 81,
                  "endColumn": 8,
                  "snippet": {
                    "text": "\t\t$$(find . -name \"*.h\" -o -name \"*.cc\" | xargs) 2>&1 \\\n \t\t| egrep -v $$(echo -n \"catchall\" ; \\\n\t  \t\tfor i in $$(cat test/coding_style_suppressions.txt); do echo -n \"|\"$$i; done) \\\n\t\t| sed 's/^\\./warning: ./g' > coding-style.txt\n\t-cat coding-style.txt\n\n\n",
                    "rendered": {
                      "text": "\t\t$$(find . -name \"*.h\" -o -name \"*.cc\" | xargs) 2>&1 \\\n \t\t| egrep -v $$(echo -n \"catchall\" ; \\\n\t  \t\tfor i in $$(cat test/coding_style_suppressions.txt); do echo -n \"|\"$$i; done) \\\n\t\t| sed 's/^\\./warning: ./g' > coding-style.txt\n\t-cat coding-style.txt\n\n\n",
                      "markdown": "`\t\t$$(find . -name \"*.h\" -o -name \"*.cc\" | xargs) 2>&1 \\\n \t\t| egrep -v $$(echo -n \"catchall\" ; \\\n\t  \t\tfor i in $$(cat test/coding_style_suppressions.txt); do echo -n \"|\"$$i; done) \\\n\t\t| sed 's/^\\./warning: ./g' > coding-style.txt\n\t-cat coding-style.txt\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/Makefile.am"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 165,
                  "endLine": 54,
                  "endColumn": 169,
                  "snippet": {
                    "text": "\tylwrap\n\nparser:\n\tcat src/parser/seclang-parser.hh | sed \"s/return \\*new (yyas_<T> ()) T (t)/return *new (yyas_<T> ()) T (std::move((T\\&)t))/g\"  > src/parser/seclang-parser.hh.fix && mv src/parser/seclang-parser.hh.fix src/parser/seclang-parser.hh\n\n\n\n",
                    "rendered": {
                      "text": "\tylwrap\n\nparser:\n\tcat src/parser/seclang-parser.hh | sed \"s/return \\*new (yyas_<T> ()) T (t)/return *new (yyas_<T> ()) T (std::move((T\\&)t))/g\"  > src/parser/seclang-parser.hh.fix && mv src/parser/seclang-parser.hh.fix src/parser/seclang-parser.hh\n\n\n\n",
                      "markdown": "`\tylwrap\n\nparser:\n\tcat src/parser/seclang-parser.hh | sed \"s/return \\*new (yyas_<T> ()) T (t)/return *new (yyas_<T> ()) T (std::move((T\\&)t))/g\"  > src/parser/seclang-parser.hh.fix && mv src/parser/seclang-parser.hh.fix src/parser/seclang-parser.hh\n\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/Makefile.am"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 35,
                  "endLine": 54,
                  "endColumn": 40,
                  "snippet": {
                    "text": "\tylwrap\n\nparser:\n\tcat src/parser/seclang-parser.hh | sed \"s/return \\*new (yyas_<T> ()) T (t)/return *new (yyas_<T> ()) T (std::move((T\\&)t))/g\"  > src/parser/seclang-parser.hh.fix && mv src/parser/seclang-parser.hh.fix src/parser/seclang-parser.hh\n\n\n\n",
                    "rendered": {
                      "text": "\tylwrap\n\nparser:\n\tcat src/parser/seclang-parser.hh | sed \"s/return \\*new (yyas_<T> ()) T (t)/return *new (yyas_<T> ()) T (std::move((T\\&)t))/g\"  > src/parser/seclang-parser.hh.fix && mv src/parser/seclang-parser.hh.fix src/parser/seclang-parser.hh\n\n\n\n",
                      "markdown": "`\tylwrap\n\nparser:\n\tcat src/parser/seclang-parser.hh | sed \"s/return \\*new (yyas_<T> ()) T (t)/return *new (yyas_<T> ()) T (std::move((T\\&)t))/g\"  > src/parser/seclang-parser.hh.fix && mv src/parser/seclang-parser.hh.fix src/parser/seclang-parser.hh\n\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/Makefile.am"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 54,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\tylwrap\n\nparser:\n\tcat src/parser/seclang-parser.hh | sed \"s/return \\*new (yyas_<T> ()) T (t)/return *new (yyas_<T> ()) T (std::move((T\\&)t))/g\"  > src/parser/seclang-parser.hh.fix && mv src/parser/seclang-parser.hh.fix src/parser/seclang-parser.hh\n\n\n\n",
                    "rendered": {
                      "text": "\tylwrap\n\nparser:\n\tcat src/parser/seclang-parser.hh | sed \"s/return \\*new (yyas_<T> ()) T (t)/return *new (yyas_<T> ()) T (std::move((T\\&)t))/g\"  > src/parser/seclang-parser.hh.fix && mv src/parser/seclang-parser.hh.fix src/parser/seclang-parser.hh\n\n\n\n",
                      "markdown": "`\tylwrap\n\nparser:\n\tcat src/parser/seclang-parser.hh | sed \"s/return \\*new (yyas_<T> ()) T (t)/return *new (yyas_<T> ()) T (std::move((T\\&)t))/g\"  > src/parser/seclang-parser.hh.fix && mv src/parser/seclang-parser.hh.fix src/parser/seclang-parser.hh\n\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/regression/issue-2427.json"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 33,
                  "endLine": 49,
                  "endColumn": 38,
                  "snippet": {
                    "text": "      ]\n    },\n    \"expected\":{\n      \"debug_log\":\"Returning from lua script: abcdef.*Rule returned 1\",\n      \"http_code\":403\n    },\n    \"rules\":[\n",
                    "rendered": {
                      "text": "      ]\n    },\n    \"expected\":{\n      \"debug_log\":\"Returning from lua script: abcdef.*Rule returned 1\",\n      \"http_code\":403\n    },\n    \"rules\":[\n",
                      "markdown": "`      ]\n    },\n    \"expected\":{\n      \"debug_log\":\"Returning from lua script: abcdef.*Rule returned 1\",\n      \"http_code\":403\n    },\n    \"rules\":[\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/ctl/audit_log_parts.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/ctl/request_body_processor_urlencoded.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/ctl/rule_engine.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/ctl/rule_remove_target_by_tag.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/ctl/request_body_processor_xml.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/ctl/rule_remove_by_id.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/ctl/rule_remove_by_id.cc"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 44,
                  "endLine": 42,
                  "endColumn": 50,
                  "snippet": {
                    "text": "        size_t dash = b.find('-');\n        if (dash != std::string::npos) {\n            std::string n1s = std::string(b, 0, dash);\n            std::string n2s = std::string(b, dash + 1, b.size() - (dash + 1));\n            int n1n = 0;\n            int n2n = 0;\n            try {\n",
                    "rendered": {
                      "text": "        size_t dash = b.find('-');\n        if (dash != std::string::npos) {\n            std::string n1s = std::string(b, 0, dash);\n            std::string n2s = std::string(b, dash + 1, b.size() - (dash + 1));\n            int n1n = 0;\n            int n2n = 0;\n            try {\n",
                      "markdown": "`        size_t dash = b.find('-');\n        if (dash != std::string::npos) {\n            std::string n1s = std::string(b, 0, dash);\n            std::string n2s = std::string(b, dash + 1, b.size() - (dash + 1));\n            int n1n = 0;\n            int n2n = 0;\n            try {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/ctl/rule_remove_by_id.cc"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 14,
                  "endLine": 39,
                  "endColumn": 20,
                  "snippet": {
                    "text": "            continue;\n        }\n\n        size_t dash = b.find('-');\n        if (dash != std::string::npos) {\n            std::string n1s = std::string(b, 0, dash);\n            std::string n2s = std::string(b, dash + 1, b.size() - (dash + 1));\n",
                    "rendered": {
                      "text": "            continue;\n        }\n\n        size_t dash = b.find('-');\n        if (dash != std::string::npos) {\n            std::string n1s = std::string(b, 0, dash);\n            std::string n2s = std::string(b, dash + 1, b.size() - (dash + 1));\n",
                      "markdown": "`            continue;\n        }\n\n        size_t dash = b.find('-');\n        if (dash != std::string::npos) {\n            std::string n1s = std::string(b, 0, dash);\n            std::string n2s = std::string(b, dash + 1, b.size() - (dash + 1));\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/url_encode.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/parity_even_7bit.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/escape_seq_decode.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/base64_decode_ext.cc"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 19,
                  "endLine": 26,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\nbool Base64DecodeExt::transform(std::string &value, const Transaction *trans) const {\n    if (value.empty()) return false;\n    value = Utils::Base64::decode_forgiven(value);\n    return true;\n}\n\n",
                    "rendered": {
                      "text": "\nbool Base64DecodeExt::transform(std::string &value, const Transaction *trans) const {\n    if (value.empty()) return false;\n    value = Utils::Base64::decode_forgiven(value);\n    return true;\n}\n\n",
                      "markdown": "`\nbool Base64DecodeExt::transform(std::string &value, const Transaction *trans) const {\n    if (value.empty()) return false;\n    value = Utils::Base64::decode_forgiven(value);\n    return true;\n}\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/base64_decode_ext.cc"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 20,
                  "endLine": 18,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n#include \"base64_decode_ext.h\"\n\n#include \"src/utils/base64.h\"\n\n\nnamespace modsecurity::actions::transformations {\n",
                    "rendered": {
                      "text": "\n#include \"base64_decode_ext.h\"\n\n#include \"src/utils/base64.h\"\n\n\nnamespace modsecurity::actions::transformations {\n",
                      "markdown": "`\n#include \"base64_decode_ext.h\"\n\n#include \"src/utils/base64.h\"\n\n\nnamespace modsecurity::actions::transformations {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/base64_decode_ext.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/utf8_to_unicode.cc"
                },
                "region": {
                  "startLine": 174,
                  "startColumn": 28,
                  "endLine": 174,
                  "endColumn": 32,
                  "snippet": {
                    "text": "            if (c >= 0xF5) {\n                *data++ = c;\n            }\n            /* check we have at least four bytes */\n            if (bytes_left < 4) {\n                /* check second byte starts with binary 10 */\n                unicode_len = UNICODE_ERROR_CHARACTERS_MISSING;\n",
                    "rendered": {
                      "text": "            if (c >= 0xF5) {\n                *data++ = c;\n            }\n            /* check we have at least four bytes */\n            if (bytes_left < 4) {\n                /* check second byte starts with binary 10 */\n                unicode_len = UNICODE_ERROR_CHARACTERS_MISSING;\n",
                      "markdown": "`            if (c >= 0xF5) {\n                *data++ = c;\n            }\n            /* check we have at least four bytes */\n            if (bytes_left < 4) {\n                /* check second byte starts with binary 10 */\n                unicode_len = UNICODE_ERROR_CHARACTERS_MISSING;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/utf8_to_unicode.cc"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 28,
                  "endLine": 116,
                  "endColumn": 32,
                  "snippet": {
                    "text": "            }\n        } else if ((c & 0xF0) == 0xE0) {\n        /* If first byte begins with binary 1110 it is three byte encoding */\n            /* check we have at least three bytes */\n            if (bytes_left < 3) {\n                /* check second byte starts with binary 10 */\n                unicode_len = UNICODE_ERROR_CHARACTERS_MISSING;\n",
                    "rendered": {
                      "text": "            }\n        } else if ((c & 0xF0) == 0xE0) {\n        /* If first byte begins with binary 1110 it is three byte encoding */\n            /* check we have at least three bytes */\n            if (bytes_left < 3) {\n                /* check second byte starts with binary 10 */\n                unicode_len = UNICODE_ERROR_CHARACTERS_MISSING;\n",
                      "markdown": "`            }\n        } else if ((c & 0xF0) == 0xE0) {\n        /* If first byte begins with binary 1110 it is three byte encoding */\n            /* check we have at least three bytes */\n            if (bytes_left < 3) {\n                /* check second byte starts with binary 10 */\n                unicode_len = UNICODE_ERROR_CHARACTERS_MISSING;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/utf8_to_unicode.cc"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 28,
                  "endLine": 69,
                  "endColumn": 32,
                  "snippet": {
                    "text": "            }\n        } else if ((c & 0xE0) == 0xC0) {\n            /* If first byte begins with binary 110 it is two byte encoding*/\n            /* check we have at least two bytes */\n            if (bytes_left < 2) {\n                /* check second byte starts with binary 10 */\n                unicode_len = UNICODE_ERROR_CHARACTERS_MISSING;\n",
                    "rendered": {
                      "text": "            }\n        } else if ((c & 0xE0) == 0xC0) {\n            /* If first byte begins with binary 110 it is two byte encoding*/\n            /* check we have at least two bytes */\n            if (bytes_left < 2) {\n                /* check second byte starts with binary 10 */\n                unicode_len = UNICODE_ERROR_CHARACTERS_MISSING;\n",
                      "markdown": "`            }\n        } else if ((c & 0xE0) == 0xC0) {\n            /* If first byte begins with binary 110 it is two byte encoding*/\n            /* check we have at least two bytes */\n            if (bytes_left < 2) {\n                /* check second byte starts with binary 10 */\n                unicode_len = UNICODE_ERROR_CHARACTERS_MISSING;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/utf8_to_unicode.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/log.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/engine/lua.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/engine/lua.cc"
                },
                "region": {
                  "startLine": 214,
                  "startColumn": 34,
                  "endLine": 214,
                  "endColumn": 39,
                  "snippet": {
                    "text": "        luaRet.assign(a);\n    }\n\n    ms_dbg_a(t, 9, \"Returning from lua script: \" + luaRet);\n\n    if (luaRet.size() == 0) {\n        ret = false;\n",
                    "rendered": {
                      "text": "        luaRet.assign(a);\n    }\n\n    ms_dbg_a(t, 9, \"Returning from lua script: \" + luaRet);\n\n    if (luaRet.size() == 0) {\n        ret = false;\n",
                      "markdown": "`        luaRet.assign(a);\n    }\n\n    ms_dbg_a(t, 9, \"Returning from lua script: \" + luaRet);\n\n    if (luaRet.size() == 0) {\n        ret = false;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/engine/lua.cc"
                },
                "region": {
                  "startLine": 198,
                  "startColumn": 35,
                  "endLine": 198,
                  "endColumn": 40,
                  "snippet": {
                    "text": "    if (lua_pcall(L, ((!str.empty()) ? 1 : 0), 1, 0)) {\n        std::string e;\n        const char *luaerr = lua_tostring(L, -1);\n        e.assign(\"Failed to execute lua script: \" + m_scriptName + \" (main)\");\n        if (luaerr != NULL) {\n            e.append(\" - \");\n            e.append(luaerr);\n",
                    "rendered": {
                      "text": "    if (lua_pcall(L, ((!str.empty()) ? 1 : 0), 1, 0)) {\n        std::string e;\n        const char *luaerr = lua_tostring(L, -1);\n        e.assign(\"Failed to execute lua script: \" + m_scriptName + \" (main)\");\n        if (luaerr != NULL) {\n            e.append(\" - \");\n            e.append(luaerr);\n",
                      "markdown": "`    if (lua_pcall(L, ((!str.empty()) ? 1 : 0), 1, 0)) {\n        std::string e;\n        const char *luaerr = lua_tostring(L, -1);\n        e.assign(\"Failed to execute lua script: \" + m_scriptName + \" (main)\");\n        if (luaerr != NULL) {\n            e.append(\" - \");\n            e.append(luaerr);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/engine/lua.cc"
                },
                "region": {
                  "startLine": 172,
                  "startColumn": 35,
                  "endLine": 172,
                  "endColumn": 40,
                  "snippet": {
                    "text": "    if (lua_pcall(L, 0, 0, 0)) {\n        std::string e;\n        const char *luaerr = lua_tostring(L, -1);\n        e.assign(\"Failed to execute lua script: \" + m_scriptName \\\n            + \" (before main)\");\n        if (luaerr != NULL) {\n            e.append(\" - \");\n",
                    "rendered": {
                      "text": "    if (lua_pcall(L, 0, 0, 0)) {\n        std::string e;\n        const char *luaerr = lua_tostring(L, -1);\n        e.assign(\"Failed to execute lua script: \" + m_scriptName \\\n            + \" (before main)\");\n        if (luaerr != NULL) {\n            e.append(\" - \");\n",
                      "markdown": "`    if (lua_pcall(L, 0, 0, 0)) {\n        std::string e;\n        const char *luaerr = lua_tostring(L, -1);\n        e.assign(\"Failed to execute lua script: \" + m_scriptName \\\n            + \" (before main)\");\n        if (luaerr != NULL) {\n            e.append(\" - \");\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/engine/lua.cc"
                },
                "region": {
                  "startLine": 149,
                  "startColumn": 35,
                  "endLine": 149,
                  "endColumn": 40,
                  "snippet": {
                    "text": "#endif\n    if (rc != LUA_OK) {\n        std::string e;\n        e.assign(\"Failed to execute lua script: \" + m_scriptName + \". \");\n        switch (rc) {\n            case LUA_ERRSYNTAX:\n                e.assign(\"Syntax error. \");\n",
                    "rendered": {
                      "text": "#endif\n    if (rc != LUA_OK) {\n        std::string e;\n        e.assign(\"Failed to execute lua script: \" + m_scriptName + \". \");\n        switch (rc) {\n            case LUA_ERRSYNTAX:\n                e.assign(\"Syntax error. \");\n",
                      "markdown": "`#endif\n    if (rc != LUA_OK) {\n        std::string e;\n        e.assign(\"Failed to execute lua script: \" + m_scriptName + \". \");\n        switch (rc) {\n            case LUA_ERRSYNTAX:\n                e.assign(\"Syntax error. \");\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/engine/lua.cc"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 50,
                  "endLine": 90,
                  "endColumn": 58,
                  "snippet": {
                    "text": "    if (lua_dump(L, Lua::blob_keeper, reinterpret_cast<void *>(&m_blob), 0)) {\n#endif\n        const char *luaerr = lua_tostring(L, -1);\n        err->assign(\"Failed to compile script '\" + script + \"\");\n        if (luaerr) {\n            err->append(\": \" + std::string(luaerr));\n        }\n",
                    "rendered": {
                      "text": "    if (lua_dump(L, Lua::blob_keeper, reinterpret_cast<void *>(&m_blob), 0)) {\n#endif\n        const char *luaerr = lua_tostring(L, -1);\n        err->assign(\"Failed to compile script '\" + script + \"\");\n        if (luaerr) {\n            err->append(\": \" + std::string(luaerr));\n        }\n",
                      "markdown": "`    if (lua_dump(L, Lua::blob_keeper, reinterpret_cast<void *>(&m_blob), 0)) {\n#endif\n        const char *luaerr = lua_tostring(L, -1);\n        err->assign(\"Failed to compile script '\" + script + \"\");\n        if (luaerr) {\n            err->append(\": \" + std::string(luaerr));\n        }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/engine/lua.cc"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 38,
                  "endLine": 90,
                  "endColumn": 46,
                  "snippet": {
                    "text": "    if (lua_dump(L, Lua::blob_keeper, reinterpret_cast<void *>(&m_blob), 0)) {\n#endif\n        const char *luaerr = lua_tostring(L, -1);\n        err->assign(\"Failed to compile script '\" + script + \"\");\n        if (luaerr) {\n            err->append(\": \" + std::string(luaerr));\n        }\n",
                    "rendered": {
                      "text": "    if (lua_dump(L, Lua::blob_keeper, reinterpret_cast<void *>(&m_blob), 0)) {\n#endif\n        const char *luaerr = lua_tostring(L, -1);\n        err->assign(\"Failed to compile script '\" + script + \"\");\n        if (luaerr) {\n            err->append(\": \" + std::string(luaerr));\n        }\n",
                      "markdown": "`    if (lua_dump(L, Lua::blob_keeper, reinterpret_cast<void *>(&m_blob), 0)) {\n#endif\n        const char *luaerr = lua_tostring(L, -1);\n        err->assign(\"Failed to compile script '\" + script + \"\");\n        if (luaerr) {\n            err->append(\": \" + std::string(luaerr));\n        }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/engine/lua.cc"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 50,
                  "endLine": 74,
                  "endColumn": 58,
                  "snippet": {
                    "text": "    m_scriptName = script;\n    if (luaL_loadfile(L, script.c_str())) {\n        const char *luaerr = lua_tostring(L, -1);\n        err->assign(\"Failed to compile script '\" + script + \"\");\n        if (luaerr) {\n            err->append(\": \" + std::string(luaerr));\n        }\n",
                    "rendered": {
                      "text": "    m_scriptName = script;\n    if (luaL_loadfile(L, script.c_str())) {\n        const char *luaerr = lua_tostring(L, -1);\n        err->assign(\"Failed to compile script '\" + script + \"\");\n        if (luaerr) {\n            err->append(\": \" + std::string(luaerr));\n        }\n",
                      "markdown": "`    m_scriptName = script;\n    if (luaL_loadfile(L, script.c_str())) {\n        const char *luaerr = lua_tostring(L, -1);\n        err->assign(\"Failed to compile script '\" + script + \"\");\n        if (luaerr) {\n            err->append(\": \" + std::string(luaerr));\n        }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/engine/lua.cc"
                },
                "region": {
                  "startLine": 74,
                  "startColumn": 38,
                  "endLine": 74,
                  "endColumn": 46,
                  "snippet": {
                    "text": "    m_scriptName = script;\n    if (luaL_loadfile(L, script.c_str())) {\n        const char *luaerr = lua_tostring(L, -1);\n        err->assign(\"Failed to compile script '\" + script + \"\");\n        if (luaerr) {\n            err->append(\": \" + std::string(luaerr));\n        }\n",
                    "rendered": {
                      "text": "    m_scriptName = script;\n    if (luaL_loadfile(L, script.c_str())) {\n        const char *luaerr = lua_tostring(L, -1);\n        err->assign(\"Failed to compile script '\" + script + \"\");\n        if (luaerr) {\n            err->append(\": \" + std::string(luaerr));\n        }\n",
                      "markdown": "`    m_scriptName = script;\n    if (luaL_loadfile(L, script.c_str())) {\n        const char *luaerr = lua_tostring(L, -1);\n        err->assign(\"Failed to compile script '\" + script + \"\");\n        if (luaerr) {\n            err->append(\": \" + std::string(luaerr));\n        }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/engine/lua.cc"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 34,
                  "endLine": 49,
                  "endColumn": 39,
                  "snippet": {
                    "text": "\n    if (!(script.size() >= lua.size() &&\n        script.compare(script.size() - lua.size(), lua.size(), lua) == 0)) {\n        error->assign(\"Expecting a Lua script: \" + script);\n        return false;\n    }\n\n",
                    "rendered": {
                      "text": "\n    if (!(script.size() >= lua.size() &&\n        script.compare(script.size() - lua.size(), lua.size(), lua) == 0)) {\n        error->assign(\"Expecting a Lua script: \" + script);\n        return false;\n    }\n\n",
                      "markdown": "`\n    if (!(script.size() >= lua.size() &&\n        script.compare(script.size() - lua.size(), lua.size(), lua) == 0)) {\n        error->assign(\"Expecting a Lua script: \" + script);\n        return false;\n    }\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/engine/lua.cc"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 49,
                  "endLine": 42,
                  "endColumn": 54,
                  "snippet": {
                    "text": "namespace engine {\n\n\nbool Lua::isCompatible(const std::string &script, Lua *l, std::string *error) {\n#ifdef WITH_LUA\n    std::string lua(\".lua\");\n    std::string err;\n",
                    "rendered": {
                      "text": "namespace engine {\n\n\nbool Lua::isCompatible(const std::string &script, Lua *l, std::string *error) {\n#ifdef WITH_LUA\n    std::string lua(\".lua\");\n    std::string err;\n",
                      "markdown": "`namespace engine {\n\n\nbool Lua::isCompatible(const std::string &script, Lua *l, std::string *error) {\n#ifdef WITH_LUA\n    std::string lua(\".lua\");\n    std::string err;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/engine/lua.h"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 55,
                  "endLine": 72,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\n    bool load(const std::string &script, std::string *err); // cppcheck-suppress functionStatic ; triggered when compiling without LUA\n    int run(Transaction *t, const std::string &str = \"\");   // cppcheck-suppress functionStatic ; triggered when compiling without LUA\n    static bool isCompatible(const std::string &script, Lua *l, std::string *error);\n\n#ifdef WITH_LUA\n    static int blob_keeper(lua_State *L, const void *p, size_t sz, void *ud);\n",
                    "rendered": {
                      "text": "\n    bool load(const std::string &script, std::string *err); // cppcheck-suppress functionStatic ; triggered when compiling without LUA\n    int run(Transaction *t, const std::string &str = \"\");   // cppcheck-suppress functionStatic ; triggered when compiling without LUA\n    static bool isCompatible(const std::string &script, Lua *l, std::string *error);\n\n#ifdef WITH_LUA\n    static int blob_keeper(lua_State *L, const void *p, size_t sz, void *ud);\n",
                      "markdown": "`\n    bool load(const std::string &script, std::string *err); // cppcheck-suppress functionStatic ; triggered when compiling without LUA\n    int run(Transaction *t, const std::string &str = \"\");   // cppcheck-suppress functionStatic ; triggered when compiling without LUA\n    static bool isCompatible(const std::string &script, Lua *l, std::string *error);\n\n#ifdef WITH_LUA\n    static int blob_keeper(lua_State *L, const void *p, size_t sz, void *ud);\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/engine/lua.h"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 5,
                  "endLine": 66,
                  "endColumn": 10,
                  "snippet": {
                    "text": "};\n#endif\n\nclass Lua {\n public:\n    Lua() { }\n\n",
                    "rendered": {
                      "text": "};\n#endif\n\nclass Lua {\n public:\n    Lua() { }\n\n",
                      "markdown": "`};\n#endif\n\nclass Lua {\n public:\n    Lua() { }\n\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/request_body_processor/json.cc"
                },
                "region": {
                  "startLine": 168,
                  "startColumn": 46,
                  "endLine": 168,
                  "endColumn": 54,
                  "snippet": {
                    "text": "\n/**\n * Callback for hash key values; we use those to define the variable names\n * under ARGS. Whenever we reach a new key, we update the current key value.\n */\nint JSON::yajl_map_key(void *ctx, const unsigned char *key, size_t length) {\n    JSON *tthis = reinterpret_cast<JSON *>(ctx);\n",
                    "rendered": {
                      "text": "\n/**\n * Callback for hash key values; we use those to define the variable names\n * under ARGS. Whenever we reach a new key, we update the current key value.\n */\nint JSON::yajl_map_key(void *ctx, const unsigned char *key, size_t length) {\n    JSON *tthis = reinterpret_cast<JSON *>(ctx);\n",
                      "markdown": "`\n/**\n * Callback for hash key values; we use those to define the variable names\n * under ARGS. Whenever we reach a new key, we update the current key value.\n */\nint JSON::yajl_map_key(void *ctx, const unsigned char *key, size_t length) {\n    JSON *tthis = reinterpret_cast<JSON *>(ctx);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/request_body_processor/json.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/variables/time_hour.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/unique_id.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 185,
                  "startColumn": 22,
                  "endLine": 185,
                  "endColumn": 30,
                  "snippet": {
                    "text": "    steps:\n      - name: Setup Dependencies\n        run: |\n          sudo apt-get update -y -qq\n          sudo apt-get install -y cppcheck\n      - name: Checkout source\n        uses: actions/checkout@v4\n",
                    "rendered": {
                      "text": "    steps:\n      - name: Setup Dependencies\n        run: |\n          sudo apt-get update -y -qq\n          sudo apt-get install -y cppcheck\n      - name: Checkout source\n        uses: actions/checkout@v4\n",
                      "markdown": "`    steps:\n      - name: Setup Dependencies\n        run: |\n          sudo apt-get update -y -qq\n          sudo apt-get install -y cppcheck\n      - name: Checkout source\n        uses: actions/checkout@v4\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 169,
                  "startColumn": 14,
                  "endLine": 170,
                  "snippet": {
                    "text": "%BASE_DIR%\\test\n          md \\tmp\n          md \\bin\n          copy \"C:\\Program Files\\Git\\usr\\bin\\echo.exe\" \\bin\n          copy \"C:\\Program Files\\Git\\usr\\bin\\echo.exe\" \\bin\\echo\n      - name: Disable tests that don't work on Windows\n        working-directory: test\\test-cases\\regression\n        shell: cmd\n        run: |\n          jq \"map(if .title == \\\"Test match variable (1/n)\\\" then .enabled = 0 else . end)\" issue-2423-msg-in-chain.json > tmp.json && move /Y tmp.json issue-2423-msg-in-chain.json\n          jq \"map(if .title == \\\"Test match variable (2/n)\\\" then .enabled = 0 else . end)\" issue-2423-m",
                    "rendered": {
                      "text": "%BASE_DIR%\\test\n          md \\tmp\n          md \\bin\n          copy \"C:\\Program Files\\Git\\usr\\bin\\echo.exe\" \\bin\n          copy \"C:\\Program Files\\Git\\usr\\bin\\echo.exe\" \\bin\\echo\n      - name: Disable tests that don't work on Windows\n        working-directory: test\\test-cases\\regression\n        shell: cmd\n        run: |\n          jq \"map(if .title == \\\"Test match variable (1/n)\\\" then .enabled = 0 else . end)\" issue-2423-msg-in-chain.json > tmp.json && move /Y tmp.json issue-2423-msg-in-chain.json\n          jq \"map(if .title == \\\"Test match variable (2/n)\\\" then .enabled = 0 else . end)\" issue-2423-m",
                      "markdown": "`%BASE_DIR%\\test\n          md \\tmp\n          md \\bin\n          copy \"C:\\Program Files\\Git\\usr\\bin\\echo.exe\" \\bin\n          copy \"C:\\Program Files\\Git\\usr\\bin\\echo.exe\" \\bin\\echo\n      - name: Disable tests that don't work on Windows\n        working-directory: test\\test-cases\\regression\n        shell: cmd\n        run: |\n          jq \"map(if .title == \\\"Test match variable (1/n)\\\" then .enabled = 0 else . end)\" issue-2423-msg-in-chain.json > tmp.json && move /Y tmp.json issue-2423-msg-in-chain.json\n          jq \"map(if .title == \\\"Test match variable (2/n)\\\" then .enabled = 0 else . end)\" issue-2423-m`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 157,
                  "startColumn": 14,
                  "endLine": 158,
                  "snippet": {
                    "text": "        working-directory: build\\win32\\build\\${{ matrix.configuration }}\n        env:\n          BASE_DIR: ..\\..\\..\\..\n        shell: cmd\n        run: |\n          copy unit_tests.exe %BASE_DIR%\\test\n          copy regression_tests.exe %BASE_DIR%\\test\n          copy libModSecurity.dll %BASE_DIR%\\test\n",
                    "rendered": {
                      "text": "        working-directory: build\\win32\\build\\${{ matrix.configuration }}\n        env:\n          BASE_DIR: ..\\..\\..\\..\n        shell: cmd\n        run: |\n          copy unit_tests.exe %BASE_DIR%\\test\n          copy regression_tests.exe %BASE_DIR%\\test\n          copy libModSecurity.dll %BASE_DIR%\\test\n",
                      "markdown": "`        working-directory: build\\win32\\build\\${{ matrix.configuration }}\n        env:\n          BASE_DIR: ..\\..\\..\\..\n        shell: cmd\n        run: |\n          copy unit_tests.exe %BASE_DIR%\\test\n          copy regression_tests.exe %BASE_DIR%\\test\n          copy libModSecurity.dll %BASE_DIR%\\test\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 151,
                  "startColumn": 14,
                  "endLine": 152,
                  "snippet": {
                    "text": "          conan profile detect\n      - uses: ammaraskar/msvc-problem-matcher@master\n      - name: Build ${{ matrix.configuration }} ${{ matrix.platform.arch }} ${{ matrix.configure.label }}\n        shell: cmd\n        run: vcbuild.bat ${{ matrix.configuration }} ${{ matrix.platform.arch }} NO_ASAN \"${{ matrix.configure.opt }}\"\n      - name: Set up test environment\n        working-directory: build\\win32\\build\\${{ matrix.configuration }}\n        env:\n",
                    "rendered": {
                      "text": "          conan profile detect\n      - uses: ammaraskar/msvc-problem-matcher@master\n      - name: Build ${{ matrix.configuration }} ${{ matrix.platform.arch }} ${{ matrix.configure.label }}\n        shell: cmd\n        run: vcbuild.bat ${{ matrix.configuration }} ${{ matrix.platform.arch }} NO_ASAN \"${{ matrix.configure.opt }}\"\n      - name: Set up test environment\n        working-directory: build\\win32\\build\\${{ matrix.configuration }}\n        env:\n",
                      "markdown": "`          conan profile detect\n      - uses: ammaraskar/msvc-problem-matcher@master\n      - name: Build ${{ matrix.configuration }} ${{ matrix.platform.arch }} ${{ matrix.configure.label }}\n        shell: cmd\n        run: vcbuild.bat ${{ matrix.configuration }} ${{ matrix.platform.arch }} NO_ASAN \"${{ matrix.configure.opt }}\"\n      - name: Set up test environment\n        working-directory: build\\win32\\build\\${{ matrix.configuration }}\n        env:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 22,
                  "endLine": 39,
                  "endColumn": 30,
                  "snippet": {
                    "text": "      - name: Setup Dependencies (common)\n        run: |\n          sudo dpkg --add-architecture ${{ matrix.platform.arch }}\n          sudo apt-get update -y -qq\n          sudo apt-get install -y libyajl-dev:${{ matrix.platform.arch }} \\\n                                  libcurl4-openssl-dev:${{ matrix.platform.arch }} \\\n                                  liblmdb-dev:${{ matrix.platform.arch }} \\\n",
                    "rendered": {
                      "text": "      - name: Setup Dependencies (common)\n        run: |\n          sudo dpkg --add-architecture ${{ matrix.platform.arch }}\n          sudo apt-get update -y -qq\n          sudo apt-get install -y libyajl-dev:${{ matrix.platform.arch }} \\\n                                  libcurl4-openssl-dev:${{ matrix.platform.arch }} \\\n                                  liblmdb-dev:${{ matrix.platform.arch }} \\\n",
                      "markdown": "`      - name: Setup Dependencies (common)\n        run: |\n          sudo dpkg --add-architecture ${{ matrix.platform.arch }}\n          sudo apt-get update -y -qq\n          sudo apt-get install -y libyajl-dev:${{ matrix.platform.arch }} \\\n                                  libcurl4-openssl-dev:${{ matrix.platform.arch }} \\\n                                  liblmdb-dev:${{ matrix.platform.arch }} \\\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 186,
                  "startColumn": 14,
                  "endLine": 186,
                  "endColumn": 23,
                  "snippet": {
                    "text": "      - name: Setup Dependencies\n        run: |\n          sudo apt-get update -y -qq\n          sudo apt-get install -y cppcheck\n      - name: Checkout source\n        uses: actions/checkout@v4\n        with:\n",
                    "rendered": {
                      "text": "      - name: Setup Dependencies\n        run: |\n          sudo apt-get update -y -qq\n          sudo apt-get install -y cppcheck\n      - name: Checkout source\n        uses: actions/checkout@v4\n        with:\n",
                      "markdown": "`      - name: Setup Dependencies\n        run: |\n          sudo apt-get update -y -qq\n          sudo apt-get install -y cppcheck\n      - name: Checkout source\n        uses: actions/checkout@v4\n        with:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 185,
                  "startColumn": 14,
                  "endLine": 185,
                  "endColumn": 23,
                  "snippet": {
                    "text": "    steps:\n      - name: Setup Dependencies\n        run: |\n          sudo apt-get update -y -qq\n          sudo apt-get install -y cppcheck\n      - name: Checkout source\n        uses: actions/checkout@v4\n",
                    "rendered": {
                      "text": "    steps:\n      - name: Setup Dependencies\n        run: |\n          sudo apt-get update -y -qq\n          sudo apt-get install -y cppcheck\n      - name: Checkout source\n        uses: actions/checkout@v4\n",
                      "markdown": "`    steps:\n      - name: Setup Dependencies\n        run: |\n          sudo apt-get update -y -qq\n          sudo apt-get install -y cppcheck\n      - name: Checkout source\n        uses: actions/checkout@v4\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 22,
                  "endLine": 102,
                  "endColumn": 27,
                  "snippet": {
                    "text": "                       libtool \\\n                       yajl \\\n                       lmdb \\\n                       lua \\\n                       libmaxminddb \\\n                       libxml2 \\\n                       geoip \\\n",
                    "rendered": {
                      "text": "                       libtool \\\n                       yajl \\\n                       lmdb \\\n                       lua \\\n                       libmaxminddb \\\n                       libxml2 \\\n                       geoip \\\n",
                      "markdown": "`                       libtool \\\n                       yajl \\\n                       lmdb \\\n                       lua \\\n                       libmaxminddb \\\n                       libxml2 \\\n                       geoip \\\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 14,
                  "endLine": 57,
                  "endColumn": 23,
                  "snippet": {
                    "text": "      - name: Setup Dependencies (x64)\n        if: ${{ matrix.platform.label == 'x64' }}\n        run: |\n          sudo apt-get install -y libgeoip-dev:${{ matrix.platform.arch }} \\\n                                  libfuzzy-dev:${{ matrix.platform.arch }}\n      - uses: actions/checkout@v4\n        with:\n",
                    "rendered": {
                      "text": "      - name: Setup Dependencies (x64)\n        if: ${{ matrix.platform.label == 'x64' }}\n        run: |\n          sudo apt-get install -y libgeoip-dev:${{ matrix.platform.arch }} \\\n                                  libfuzzy-dev:${{ matrix.platform.arch }}\n      - uses: actions/checkout@v4\n        with:\n",
                      "markdown": "`      - name: Setup Dependencies (x64)\n        if: ${{ matrix.platform.label == 'x64' }}\n        run: |\n          sudo apt-get install -y libgeoip-dev:${{ matrix.platform.arch }} \\\n                                  libfuzzy-dev:${{ matrix.platform.arch }}\n      - uses: actions/checkout@v4\n        with:\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 52,
                  "startColumn": 14,
                  "endLine": 52,
                  "endColumn": 23,
                  "snippet": {
                    "text": "        if: ${{ matrix.platform.label == 'x32' }}\n        run: |\n          sudo apt-get install g++-multilib\n          sudo apt-get install -y libxml2-dev:${{ matrix.platform.arch }} \\\n                                  libpcre3-dev:${{ matrix.platform.arch }}\n      - name: Setup Dependencies (x64)\n        if: ${{ matrix.platform.label == 'x64' }}\n",
                    "rendered": {
                      "text": "        if: ${{ matrix.platform.label == 'x32' }}\n        run: |\n          sudo apt-get install g++-multilib\n          sudo apt-get install -y libxml2-dev:${{ matrix.platform.arch }} \\\n                                  libpcre3-dev:${{ matrix.platform.arch }}\n      - name: Setup Dependencies (x64)\n        if: ${{ matrix.platform.label == 'x64' }}\n",
                      "markdown": "`        if: ${{ matrix.platform.label == 'x32' }}\n        run: |\n          sudo apt-get install g++-multilib\n          sudo apt-get install -y libxml2-dev:${{ matrix.platform.arch }} \\\n                                  libpcre3-dev:${{ matrix.platform.arch }}\n      - name: Setup Dependencies (x64)\n        if: ${{ matrix.platform.label == 'x64' }}\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 14,
                  "endLine": 51,
                  "endColumn": 23,
                  "snippet": {
                    "text": "      - name: Setup Dependencies (x32)\n        if: ${{ matrix.platform.label == 'x32' }}\n        run: |\n          sudo apt-get install g++-multilib\n          sudo apt-get install -y libxml2-dev:${{ matrix.platform.arch }} \\\n                                  libpcre3-dev:${{ matrix.platform.arch }}\n      - name: Setup Dependencies (x64)\n",
                    "rendered": {
                      "text": "      - name: Setup Dependencies (x32)\n        if: ${{ matrix.platform.label == 'x32' }}\n        run: |\n          sudo apt-get install g++-multilib\n          sudo apt-get install -y libxml2-dev:${{ matrix.platform.arch }} \\\n                                  libpcre3-dev:${{ matrix.platform.arch }}\n      - name: Setup Dependencies (x64)\n",
                      "markdown": "`      - name: Setup Dependencies (x32)\n        if: ${{ matrix.platform.label == 'x32' }}\n        run: |\n          sudo apt-get install g++-multilib\n          sudo apt-get install -y libxml2-dev:${{ matrix.platform.arch }} \\\n                                  libpcre3-dev:${{ matrix.platform.arch }}\n      - name: Setup Dependencies (x64)\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 40,
                  "startColumn": 14,
                  "endLine": 40,
                  "endColumn": 23,
                  "snippet": {
                    "text": "        run: |\n          sudo dpkg --add-architecture ${{ matrix.platform.arch }}\n          sudo apt-get update -y -qq\n          sudo apt-get install -y libyajl-dev:${{ matrix.platform.arch }} \\\n                                  libcurl4-openssl-dev:${{ matrix.platform.arch }} \\\n                                  liblmdb-dev:${{ matrix.platform.arch }} \\\n                                  liblua5.2-dev:${{ matrix.platform.arch }} \\\n",
                    "rendered": {
                      "text": "        run: |\n          sudo dpkg --add-architecture ${{ matrix.platform.arch }}\n          sudo apt-get update -y -qq\n          sudo apt-get install -y libyajl-dev:${{ matrix.platform.arch }} \\\n                                  libcurl4-openssl-dev:${{ matrix.platform.arch }} \\\n                                  liblmdb-dev:${{ matrix.platform.arch }} \\\n                                  liblua5.2-dev:${{ matrix.platform.arch }} \\\n",
                      "markdown": "`        run: |\n          sudo dpkg --add-architecture ${{ matrix.platform.arch }}\n          sudo apt-get update -y -qq\n          sudo apt-get install -y libyajl-dev:${{ matrix.platform.arch }} \\\n                                  libcurl4-openssl-dev:${{ matrix.platform.arch }} \\\n                                  liblmdb-dev:${{ matrix.platform.arch }} \\\n                                  liblua5.2-dev:${{ matrix.platform.arch }} \\\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 14,
                  "endLine": 39,
                  "endColumn": 23,
                  "snippet": {
                    "text": "      - name: Setup Dependencies (common)\n        run: |\n          sudo dpkg --add-architecture ${{ matrix.platform.arch }}\n          sudo apt-get update -y -qq\n          sudo apt-get install -y libyajl-dev:${{ matrix.platform.arch }} \\\n                                  libcurl4-openssl-dev:${{ matrix.platform.arch }} \\\n                                  liblmdb-dev:${{ matrix.platform.arch }} \\\n",
                    "rendered": {
                      "text": "      - name: Setup Dependencies (common)\n        run: |\n          sudo dpkg --add-architecture ${{ matrix.platform.arch }}\n          sudo apt-get update -y -qq\n          sudo apt-get install -y libyajl-dev:${{ matrix.platform.arch }} \\\n                                  libcurl4-openssl-dev:${{ matrix.platform.arch }} \\\n                                  liblmdb-dev:${{ matrix.platform.arch }} \\\n",
                      "markdown": "`      - name: Setup Dependencies (common)\n        run: |\n          sudo dpkg --add-architecture ${{ matrix.platform.arch }}\n          sudo apt-get update -y -qq\n          sudo apt-get install -y libyajl-dev:${{ matrix.platform.arch }} \\\n                                  libcurl4-openssl-dev:${{ matrix.platform.arch }} \\\n                                  liblmdb-dev:${{ matrix.platform.arch }} \\\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.github/workflows/ci.yml"
                },
                "region": {
                  "startLine": 38,
                  "startColumn": 14,
                  "endLine": 38,
                  "endColumn": 20,
                  "snippet": {
                    "text": "    steps:\n      - name: Setup Dependencies (common)\n        run: |\n          sudo dpkg --add-architecture ${{ matrix.platform.arch }}\n          sudo apt-get update -y -qq\n          sudo apt-get install -y libyajl-dev:${{ matrix.platform.arch }} \\\n                                  libcurl4-openssl-dev:${{ matrix.platform.arch }} \\\n",
                    "rendered": {
                      "text": "    steps:\n      - name: Setup Dependencies (common)\n        run: |\n          sudo dpkg --add-architecture ${{ matrix.platform.arch }}\n          sudo apt-get update -y -qq\n          sudo apt-get install -y libyajl-dev:${{ matrix.platform.arch }} \\\n                                  libcurl4-openssl-dev:${{ matrix.platform.arch }} \\\n",
                      "markdown": "`    steps:\n      - name: Setup Dependencies (common)\n        run: |\n          sudo dpkg --add-architecture ${{ matrix.platform.arch }}\n          sudo apt-get update -y -qq\n          sudo apt-get install -y libyajl-dev:${{ matrix.platform.arch }} \\\n                                  libcurl4-openssl-dev:${{ matrix.platform.arch }} \\\n`"
                    }
                  },
                  "sourceLanguage": "yaml"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/configure.ac"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 47,
                  "endLine": 81,
                  "endColumn": 53,
                  "snippet": {
                    "text": "AC_SUBST([LIBINJECTION_VERSION])\n\n# Check for Mbed TLS\nif ! test -f \"${srcdir}/others/mbedtls/library/base64.c\"; then\nAC_MSG_ERROR([\\\n\n\n",
                    "rendered": {
                      "text": "AC_SUBST([LIBINJECTION_VERSION])\n\n# Check for Mbed TLS\nif ! test -f \"${srcdir}/others/mbedtls/library/base64.c\"; then\nAC_MSG_ERROR([\\\n\n\n",
                      "markdown": "`AC_SUBST([LIBINJECTION_VERSION])\n\n# Check for Mbed TLS\nif ! test -f \"${srcdir}/others/mbedtls/library/base64.c\"; then\nAC_MSG_ERROR([\\\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/configure.ac"
                },
                "region": {
                  "startLine": 94,
                  "startColumn": 20,
                  "endLine": 95,
                  "snippet": {
                    "text": "  You can download Mbed TLS using git:\n\n     $ git submodule init\n     $ git submodule update\n\n   ])\nfi\n# Mbed TLS version\n",
                    "rendered": {
                      "text": "  You can download Mbed TLS using git:\n\n     $ git submodule init\n     $ git submodule update\n\n   ])\nfi\n# Mbed TLS version\n",
                      "markdown": "`  You can download Mbed TLS using git:\n\n     $ git submodule init\n     $ git submodule update\n\n   ])\nfi\n# Mbed TLS version\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/configure.ac"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 20,
                  "endLine": 73,
                  "snippet": {
                    "text": "  You can download libInjection using git:\n\n     $ git submodule init\n     $ git submodule update\n\n   ])\nfi\n# Libinjection version\n",
                    "rendered": {
                      "text": "  You can download libInjection using git:\n\n     $ git submodule init\n     $ git submodule update\n\n   ])\nfi\n# Libinjection version\n",
                      "markdown": "`  You can download libInjection using git:\n\n     $ git submodule init\n     $ git submodule update\n\n   ])\nfi\n# Libinjection version\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/configure.ac"
                },
                "region": {
                  "startLine": 587,
                  "startColumn": 14,
                  "endLine": 587,
                  "endColumn": 19,
                  "snippet": {
                    "text": "    echo \"      ${LUA_DISPLAY}\"\nfi\nif test \"x$LUA_FOUND\" = \"x2\"; then\n    echo \"   + LUA                                           ....disabled\"\nfi\n\n\n",
                    "rendered": {
                      "text": "    echo \"      ${LUA_DISPLAY}\"\nfi\nif test \"x$LUA_FOUND\" = \"x2\"; then\n    echo \"   + LUA                                           ....disabled\"\nfi\n\n\n",
                      "markdown": "`    echo \"      ${LUA_DISPLAY}\"\nfi\nif test \"x$LUA_FOUND\" = \"x2\"; then\n    echo \"   + LUA                                           ....disabled\"\nfi\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/configure.ac"
                },
                "region": {
                  "startLine": 578,
                  "startColumn": 19,
                  "endLine": 578,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    echo \"   + LUA                                           ....not found\"\nfi\nif test \"x$LUA_FOUND\" = \"x1\"; then\n    AS_ECHO_N(\"   + LUA                                           ....found \")\n    if ! test \"x$LUA_VERSION\" = \"x\"; then\n        echo \"v${LUA_VERSION}\"\n    else\n",
                    "rendered": {
                      "text": "    echo \"   + LUA                                           ....not found\"\nfi\nif test \"x$LUA_FOUND\" = \"x1\"; then\n    AS_ECHO_N(\"   + LUA                                           ....found \")\n    if ! test \"x$LUA_VERSION\" = \"x\"; then\n        echo \"v${LUA_VERSION}\"\n    else\n",
                      "markdown": "`    echo \"   + LUA                                           ....not found\"\nfi\nif test \"x$LUA_FOUND\" = \"x1\"; then\n    AS_ECHO_N(\"   + LUA                                           ....found \")\n    if ! test \"x$LUA_VERSION\" = \"x\"; then\n        echo \"v${LUA_VERSION}\"\n    else\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/configure.ac"
                },
                "region": {
                  "startLine": 575,
                  "startColumn": 14,
                  "endLine": 575,
                  "endColumn": 19,
                  "snippet": {
                    "text": "\n## LUA\nif test \"x$LUA_FOUND\" = \"x0\"; then\n    echo \"   + LUA                                           ....not found\"\nfi\nif test \"x$LUA_FOUND\" = \"x1\"; then\n    AS_ECHO_N(\"   + LUA                                           ....found \")\n",
                    "rendered": {
                      "text": "\n## LUA\nif test \"x$LUA_FOUND\" = \"x0\"; then\n    echo \"   + LUA                                           ....not found\"\nfi\nif test \"x$LUA_FOUND\" = \"x1\"; then\n    AS_ECHO_N(\"   + LUA                                           ....found \")\n",
                      "markdown": "`\n## LUA\nif test \"x$LUA_FOUND\" = \"x0\"; then\n    echo \"   + LUA                                           ....not found\"\nfi\nif test \"x$LUA_FOUND\" = \"x1\"; then\n    AS_ECHO_N(\"   + LUA                                           ....found \")\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/configure.ac"
                },
                "region": {
                  "startLine": 573,
                  "startColumn": 2,
                  "endLine": 574,
                  "snippet": {
                    "text": "    echo \"   + SSDEEP                                        ....disabled\"\nfi\n\n## LUA\nif test \"x$LUA_FOUND\" = \"x0\"; then\n    echo \"   + LUA                                           ....not found\"\nfi\nif test \"x$LUA_FOUND\" = \"x1\"; then\n",
                    "rendered": {
                      "text": "    echo \"   + SSDEEP                                        ....disabled\"\nfi\n\n## LUA\nif test \"x$LUA_FOUND\" = \"x0\"; then\n    echo \"   + LUA                                           ....not found\"\nfi\nif test \"x$LUA_FOUND\" = \"x1\"; then\n",
                      "markdown": "`    echo \"   + SSDEEP                                        ....disabled\"\nfi\n\n## LUA\nif test \"x$LUA_FOUND\" = \"x0\"; then\n    echo \"   + LUA                                           ....not found\"\nfi\nif test \"x$LUA_FOUND\" = \"x1\"; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/configure.ac"
                },
                "region": {
                  "startLine": 133,
                  "startColumn": 11,
                  "endLine": 134,
                  "snippet": {
                    "text": "\n\n#\n# Check for curl\n#\nCHECK_CURL\n\nif ! test -z \"${CURL_VERSION}\"; then\n",
                    "rendered": {
                      "text": "\n\n#\n# Check for curl\n#\nCHECK_CURL\n\nif ! test -z \"${CURL_VERSION}\"; then\n",
                      "markdown": "`\n\n#\n# Check for curl\n#\nCHECK_CURL\n\nif ! test -z \"${CURL_VERSION}\"; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/configure.ac"
                },
                "region": {
                  "startLine": 127,
                  "startColumn": 11,
                  "endLine": 128,
                  "snippet": {
                    "text": "CHECK_SSDEEP\nAM_CONDITIONAL([SSDEEP_CFLAGS], [test \"SSDEEP_CFLAGS\" != \"\"])\n\n# Check for LUA\nCHECK_LUA\nAM_CONDITIONAL([LUA_CFLAGS], [test \"LUA_CFLAGS\" != \"\"])\n\n\n",
                    "rendered": {
                      "text": "CHECK_SSDEEP\nAM_CONDITIONAL([SSDEEP_CFLAGS], [test \"SSDEEP_CFLAGS\" != \"\"])\n\n# Check for LUA\nCHECK_LUA\nAM_CONDITIONAL([LUA_CFLAGS], [test \"LUA_CFLAGS\" != \"\"])\n\n\n",
                      "markdown": "`CHECK_SSDEEP\nAM_CONDITIONAL([SSDEEP_CFLAGS], [test \"SSDEEP_CFLAGS\" != \"\"])\n\n# Check for LUA\nCHECK_LUA\nAM_CONDITIONAL([LUA_CFLAGS], [test \"LUA_CFLAGS\" != \"\"])\n\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/configure.ac"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 93,
                  "endLine": 102,
                  "endColumn": 98,
                  "snippet": {
                    "text": "AC_DEFUN([MBEDTLS_VERSION], m4_esyscmd_s(cd \"others/mbedtls\" && git describe && cd ../..))\n\n# SecLang test version\nAC_DEFUN([SECLANG_TEST_VERSION], m4_esyscmd_s(cd \"test/test-cases/secrules-language-tests\" && git log -1 --format=\"%h\" --abbrev-commit && cd ../../..))\n\n\n# Check for yajl\n",
                    "rendered": {
                      "text": "AC_DEFUN([MBEDTLS_VERSION], m4_esyscmd_s(cd \"others/mbedtls\" && git describe && cd ../..))\n\n# SecLang test version\nAC_DEFUN([SECLANG_TEST_VERSION], m4_esyscmd_s(cd \"test/test-cases/secrules-language-tests\" && git log -1 --format=\"%h\" --abbrev-commit && cd ../../..))\n\n\n# Check for yajl\n",
                      "markdown": "`AC_DEFUN([MBEDTLS_VERSION], m4_esyscmd_s(cd \"others/mbedtls\" && git describe && cd ../..))\n\n# SecLang test version\nAC_DEFUN([SECLANG_TEST_VERSION], m4_esyscmd_s(cd \"test/test-cases/secrules-language-tests\" && git log -1 --format=\"%h\" --abbrev-commit && cd ../../..))\n\n\n# Check for yajl\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/configure.ac"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 63,
                  "endLine": 99,
                  "endColumn": 68,
                  "snippet": {
                    "text": "   ])\nfi\n# Mbed TLS version\nAC_DEFUN([MBEDTLS_VERSION], m4_esyscmd_s(cd \"others/mbedtls\" && git describe && cd ../..))\n\n# SecLang test version\nAC_DEFUN([SECLANG_TEST_VERSION], m4_esyscmd_s(cd \"test/test-cases/secrules-language-tests\" && git log -1 --format=\"%h\" --abbrev-commit && cd ../../..))\n",
                    "rendered": {
                      "text": "   ])\nfi\n# Mbed TLS version\nAC_DEFUN([MBEDTLS_VERSION], m4_esyscmd_s(cd \"others/mbedtls\" && git describe && cd ../..))\n\n# SecLang test version\nAC_DEFUN([SECLANG_TEST_VERSION], m4_esyscmd_s(cd \"test/test-cases/secrules-language-tests\" && git log -1 --format=\"%h\" --abbrev-commit && cd ../../..))\n",
                      "markdown": "`   ])\nfi\n# Mbed TLS version\nAC_DEFUN([MBEDTLS_VERSION], m4_esyscmd_s(cd \"others/mbedtls\" && git describe && cd ../..))\n\n# SecLang test version\nAC_DEFUN([SECLANG_TEST_VERSION], m4_esyscmd_s(cd \"test/test-cases/secrules-language-tests\" && git log -1 --format=\"%h\" --abbrev-commit && cd ../../..))\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/configure.ac"
                },
                "region": {
                  "startLine": 94,
                  "startColumn": 6,
                  "endLine": 94,
                  "endColumn": 11,
                  "snippet": {
                    "text": "  You can download Mbed TLS using git:\n\n     $ git submodule init\n     $ git submodule update\n\n   ])\nfi\n",
                    "rendered": {
                      "text": "  You can download Mbed TLS using git:\n\n     $ git submodule init\n     $ git submodule update\n\n   ])\nfi\n",
                      "markdown": "`  You can download Mbed TLS using git:\n\n     $ git submodule init\n     $ git submodule update\n\n   ])\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/configure.ac"
                },
                "region": {
                  "startLine": 93,
                  "startColumn": 6,
                  "endLine": 93,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\n  You can download Mbed TLS using git:\n\n     $ git submodule init\n     $ git submodule update\n\n   ])\n",
                    "rendered": {
                      "text": "\n  You can download Mbed TLS using git:\n\n     $ git submodule init\n     $ git submodule update\n\n   ])\n",
                      "markdown": "`\n  You can download Mbed TLS using git:\n\n     $ git submodule init\n     $ git submodule update\n\n   ])\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/configure.ac"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 73,
                  "endLine": 77,
                  "endColumn": 78,
                  "snippet": {
                    "text": "   ])\nfi\n# Libinjection version\nAC_DEFUN([LIBINJECTION_VERSION], m4_esyscmd_s(cd \"others/libinjection\" && git describe && cd ../..))\nAC_SUBST([LIBINJECTION_VERSION])\n\n# Check for Mbed TLS\n",
                    "rendered": {
                      "text": "   ])\nfi\n# Libinjection version\nAC_DEFUN([LIBINJECTION_VERSION], m4_esyscmd_s(cd \"others/libinjection\" && git describe && cd ../..))\nAC_SUBST([LIBINJECTION_VERSION])\n\n# Check for Mbed TLS\n",
                      "markdown": "`   ])\nfi\n# Libinjection version\nAC_DEFUN([LIBINJECTION_VERSION], m4_esyscmd_s(cd \"others/libinjection\" && git describe && cd ../..))\nAC_SUBST([LIBINJECTION_VERSION])\n\n# Check for Mbed TLS\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/configure.ac"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 6,
                  "endLine": 72,
                  "endColumn": 11,
                  "snippet": {
                    "text": "  You can download libInjection using git:\n\n     $ git submodule init\n     $ git submodule update\n\n   ])\nfi\n",
                    "rendered": {
                      "text": "  You can download libInjection using git:\n\n     $ git submodule init\n     $ git submodule update\n\n   ])\nfi\n",
                      "markdown": "`  You can download libInjection using git:\n\n     $ git submodule init\n     $ git submodule update\n\n   ])\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/configure.ac"
                },
                "region": {
                  "startLine": 71,
                  "startColumn": 6,
                  "endLine": 71,
                  "endColumn": 11,
                  "snippet": {
                    "text": "\n  You can download libInjection using git:\n\n     $ git submodule init\n     $ git submodule update\n\n   ])\n",
                    "rendered": {
                      "text": "\n  You can download libInjection using git:\n\n     $ git submodule init\n     $ git submodule update\n\n   ])\n",
                      "markdown": "`\n  You can download libInjection using git:\n\n     $ git submodule init\n     $ git submodule update\n\n   ])\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/configure.ac"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 125,
                  "endLine": 10,
                  "endColumn": 130,
                  "snippet": {
                    "text": "} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_PATCHLEVEL], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_PATCHLEVEL \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_TAG], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_FTAG \" | awk {'print $3'} | sed 's/\\\"//g'))\n\n\n# Version definition to be further used by AC_INIT and \n# .so file naming.\nm4_define([msc_version_major], [MSC_MAJOR])\nm4_define([msc_version_minor], [MSC_MINOR])\nm4_define([msc_version_patchlevel], [MSC_PATCHLEVEL])\n\nm4_define([msc_version_c_plus_a], [m4_eval(msc_version_major + msc_v",
                    "rendered": {
                      "text": "} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_PATCHLEVEL], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_PATCHLEVEL \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_TAG], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_FTAG \" | awk {'print $3'} | sed 's/\\\"//g'))\n\n\n# Version definition to be further used by AC_INIT and \n# .so file naming.\nm4_define([msc_version_major], [MSC_MAJOR])\nm4_define([msc_version_minor], [MSC_MINOR])\nm4_define([msc_version_patchlevel], [MSC_PATCHLEVEL])\n\nm4_define([msc_version_c_plus_a], [m4_eval(msc_version_major + msc_v",
                      "markdown": "`} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_PATCHLEVEL], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_PATCHLEVEL \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_TAG], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_FTAG \" | awk {'print $3'} | sed 's/\\\"//g'))\n\n\n# Version definition to be further used by AC_INIT and \n# .so file naming.\nm4_define([msc_version_major], [MSC_MAJOR])\nm4_define([msc_version_minor], [MSC_MINOR])\nm4_define([msc_version_patchlevel], [MSC_PATCHLEVEL])\n\nm4_define([msc_version_c_plus_a], [m4_eval(msc_version_major + msc_v`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/configure.ac"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 106,
                  "endLine": 10,
                  "endColumn": 111,
                  "snippet": {
                    "text": "\" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_PATCHLEVEL], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_PATCHLEVEL \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_TAG], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_FTAG \" | awk {'print $3'} | sed 's/\\\"//g'))\n\n\n# Version definition to be further used by AC_INIT and \n# .so file naming.\nm4_define([msc_version_major], [MSC_MAJOR])\nm4_define([msc_version_minor], [MSC_MINOR])\nm4_define([msc_version_patchlevel], [MSC_PATCHLEVEL])\n\nm4_define([msc_version_c_plus_a], [m4_eval(msc_ve",
                    "rendered": {
                      "text": "\" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_PATCHLEVEL], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_PATCHLEVEL \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_TAG], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_FTAG \" | awk {'print $3'} | sed 's/\\\"//g'))\n\n\n# Version definition to be further used by AC_INIT and \n# .so file naming.\nm4_define([msc_version_major], [MSC_MAJOR])\nm4_define([msc_version_minor], [MSC_MINOR])\nm4_define([msc_version_patchlevel], [MSC_PATCHLEVEL])\n\nm4_define([msc_version_c_plus_a], [m4_eval(msc_ve",
                      "markdown": "`\" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_PATCHLEVEL], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_PATCHLEVEL \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_TAG], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_FTAG \" | awk {'print $3'} | sed 's/\\\"//g'))\n\n\n# Version definition to be further used by AC_INIT and \n# .so file naming.\nm4_define([msc_version_major], [MSC_MAJOR])\nm4_define([msc_version_minor], [MSC_MINOR])\nm4_define([msc_version_patchlevel], [MSC_PATCHLEVEL])\n\nm4_define([msc_version_c_plus_a], [m4_eval(msc_ve`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/configure.ac"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 72,
                  "endLine": 10,
                  "endColumn": 78,
                  "snippet": {
                    "text": " | grep \"define MODSECURITY_MINOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_PATCHLEVEL], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_PATCHLEVEL \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_TAG], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_FTAG \" | awk {'print $3'} | sed 's/\\\"//g'))\n\n\n# Version definition to be further used by AC_INIT and \n# .so file naming.\nm4_define([msc_version_major], [MSC_MAJOR])\nm4_define([msc_version_minor], [MSC_MINOR])\nm4_define([msc_version_patchlevel], [MSC_PATCHLEVEL])\n\nm4_define([msc_v",
                    "rendered": {
                      "text": " | grep \"define MODSECURITY_MINOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_PATCHLEVEL], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_PATCHLEVEL \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_TAG], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_FTAG \" | awk {'print $3'} | sed 's/\\\"//g'))\n\n\n# Version definition to be further used by AC_INIT and \n# .so file naming.\nm4_define([msc_version_major], [MSC_MAJOR])\nm4_define([msc_version_minor], [MSC_MINOR])\nm4_define([msc_version_patchlevel], [MSC_PATCHLEVEL])\n\nm4_define([msc_v",
                      "markdown": "` | grep \"define MODSECURITY_MINOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_PATCHLEVEL], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_PATCHLEVEL \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_TAG], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_FTAG \" | awk {'print $3'} | sed 's/\\\"//g'))\n\n\n# Version definition to be further used by AC_INIT and \n# .so file naming.\nm4_define([msc_version_major], [MSC_MAJOR])\nm4_define([msc_version_minor], [MSC_MINOR])\nm4_define([msc_version_patchlevel], [MSC_PATCHLEVEL])\n\nm4_define([msc_v`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/configure.ac"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 138,
                  "endLine": 9,
                  "endColumn": 143,
                  "snippet": {
                    "text": " sed 's/\\\"//g'))\nAC_DEFUN([MSC_MINOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MINOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_PATCHLEVEL], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_PATCHLEVEL \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_TAG], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_FTAG \" | awk {'print $3'} | sed 's/\\\"//g'))\n\n\n# Version definition to be further used by AC_INIT and \n# .so file naming.\nm4_define([msc_version_major], [MSC_MAJOR])\nm4_define([msc_version_mi",
                    "rendered": {
                      "text": " sed 's/\\\"//g'))\nAC_DEFUN([MSC_MINOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MINOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_PATCHLEVEL], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_PATCHLEVEL \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_TAG], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_FTAG \" | awk {'print $3'} | sed 's/\\\"//g'))\n\n\n# Version definition to be further used by AC_INIT and \n# .so file naming.\nm4_define([msc_version_major], [MSC_MAJOR])\nm4_define([msc_version_mi",
                      "markdown": "` sed 's/\\\"//g'))\nAC_DEFUN([MSC_MINOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MINOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_PATCHLEVEL], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_PATCHLEVEL \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_TAG], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_FTAG \" | awk {'print $3'} | sed 's/\\\"//g'))\n\n\n# Version definition to be further used by AC_INIT and \n# .so file naming.\nm4_define([msc_version_major], [MSC_MAJOR])\nm4_define([msc_version_mi`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/configure.ac"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 119,
                  "endLine": 9,
                  "endColumn": 124,
                  "snippet": {
                    "text": " awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_MINOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MINOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_PATCHLEVEL], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_PATCHLEVEL \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_TAG], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_FTAG \" | awk {'print $3'} | sed 's/\\\"//g'))\n\n\n# Version definition to be further used by AC_INIT and \n# .so file naming.\nm4_define([msc_version_major], [MSC_MAJOR])\nm4_def",
                    "rendered": {
                      "text": " awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_MINOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MINOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_PATCHLEVEL], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_PATCHLEVEL \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_TAG], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_FTAG \" | awk {'print $3'} | sed 's/\\\"//g'))\n\n\n# Version definition to be further used by AC_INIT and \n# .so file naming.\nm4_define([msc_version_major], [MSC_MAJOR])\nm4_def",
                      "markdown": "` awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_MINOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MINOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_PATCHLEVEL], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_PATCHLEVEL \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_TAG], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_FTAG \" | awk {'print $3'} | sed 's/\\\"//g'))\n\n\n# Version definition to be further used by AC_INIT and \n# .so file naming.\nm4_define([msc_version_major], [MSC_MAJOR])\nm4_def`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/configure.ac"
                },
                "region": {
                  "startLine": 9,
                  "startColumn": 79,
                  "endLine": 9,
                  "endColumn": 85,
                  "snippet": {
                    "text": "y.h | grep \"define MODSECURITY_MAJOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_MINOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MINOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_PATCHLEVEL], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_PATCHLEVEL \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_TAG], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_FTAG \" | awk {'print $3'} | sed 's/\\\"//g'))\n\n\n# Version definition to be further used by AC_INIT and \n# .so file naming.\nm4_define([",
                    "rendered": {
                      "text": "y.h | grep \"define MODSECURITY_MAJOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_MINOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MINOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_PATCHLEVEL], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_PATCHLEVEL \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_TAG], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_FTAG \" | awk {'print $3'} | sed 's/\\\"//g'))\n\n\n# Version definition to be further used by AC_INIT and \n# .so file naming.\nm4_define([",
                      "markdown": "`y.h | grep \"define MODSECURITY_MAJOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_MINOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MINOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_PATCHLEVEL], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_PATCHLEVEL \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_TAG], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_FTAG \" | awk {'print $3'} | sed 's/\\\"//g'))\n\n\n# Version definition to be further used by AC_INIT and \n# .so file naming.\nm4_define([`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/configure.ac"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 128,
                  "endLine": 8,
                  "endColumn": 133,
                  "snippet": {
                    "text": "mat=\"%h\" --abbrev-commit))\nAC_DEFUN([MSC_MAJOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MAJOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_MINOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MINOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_PATCHLEVEL], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_PATCHLEVEL \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_TAG], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_FTAG \" | awk {'print $3'} | sed 's/",
                    "rendered": {
                      "text": "mat=\"%h\" --abbrev-commit))\nAC_DEFUN([MSC_MAJOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MAJOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_MINOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MINOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_PATCHLEVEL], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_PATCHLEVEL \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_TAG], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_FTAG \" | awk {'print $3'} | sed 's/",
                      "markdown": "`mat=\"%h\" --abbrev-commit))\nAC_DEFUN([MSC_MAJOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MAJOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_MINOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MINOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_PATCHLEVEL], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_PATCHLEVEL \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_TAG], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_FTAG \" | awk {'print $3'} | sed 's/`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/configure.ac"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 109,
                  "endLine": 8,
                  "endColumn": 114,
                  "snippet": {
                    "text": "_s(git log -1 --format=\"%h\" --abbrev-commit))\nAC_DEFUN([MSC_MAJOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MAJOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_MINOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MINOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_PATCHLEVEL], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_PATCHLEVEL \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_TAG], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_FTAG \" | awk {'p",
                    "rendered": {
                      "text": "_s(git log -1 --format=\"%h\" --abbrev-commit))\nAC_DEFUN([MSC_MAJOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MAJOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_MINOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MINOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_PATCHLEVEL], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_PATCHLEVEL \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_TAG], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_FTAG \" | awk {'p",
                      "markdown": "`_s(git log -1 --format=\"%h\" --abbrev-commit))\nAC_DEFUN([MSC_MAJOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MAJOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_MINOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MINOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_PATCHLEVEL], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_PATCHLEVEL \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_TAG], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_FTAG \" | awk {'p`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/configure.ac"
                },
                "region": {
                  "startLine": 8,
                  "startColumn": 74,
                  "endLine": 8,
                  "endColumn": 80,
                  "snippet": {
                    "text": "AC_DEFUN([MSC_GIT_HASH], m4_esyscmd_s(git log -1 --format=\"%h\" --abbrev-commit))\nAC_DEFUN([MSC_MAJOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MAJOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_MINOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MINOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_PATCHLEVEL], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_PATCHLEVEL \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_TAG], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"d",
                    "rendered": {
                      "text": "AC_DEFUN([MSC_GIT_HASH], m4_esyscmd_s(git log -1 --format=\"%h\" --abbrev-commit))\nAC_DEFUN([MSC_MAJOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MAJOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_MINOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MINOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_PATCHLEVEL], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_PATCHLEVEL \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_TAG], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"d",
                      "markdown": "`AC_DEFUN([MSC_GIT_HASH], m4_esyscmd_s(git log -1 --format=\"%h\" --abbrev-commit))\nAC_DEFUN([MSC_MAJOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MAJOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_MINOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MINOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_PATCHLEVEL], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_PATCHLEVEL \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_TAG], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"d`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/configure.ac"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 128,
                  "endLine": 7,
                  "endColumn": 133,
                  "snippet": {
                    "text": "ure.ac\n\n\n# Get the hash of the last commit, to be used if it is not an\n# official release.\nAC_DEFUN([MSC_GIT_HASH], m4_esyscmd_s(git log -1 --format=\"%h\" --abbrev-commit))\nAC_DEFUN([MSC_MAJOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MAJOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_MINOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MINOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_PATCHLEVEL], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_PATCHLEVEL \" | awk {'print $3'} | sed ",
                    "rendered": {
                      "text": "ure.ac\n\n\n# Get the hash of the last commit, to be used if it is not an\n# official release.\nAC_DEFUN([MSC_GIT_HASH], m4_esyscmd_s(git log -1 --format=\"%h\" --abbrev-commit))\nAC_DEFUN([MSC_MAJOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MAJOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_MINOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MINOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_PATCHLEVEL], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_PATCHLEVEL \" | awk {'print $3'} | sed ",
                      "markdown": "`ure.ac\n\n\n# Get the hash of the last commit, to be used if it is not an\n# official release.\nAC_DEFUN([MSC_GIT_HASH], m4_esyscmd_s(git log -1 --format=\"%h\" --abbrev-commit))\nAC_DEFUN([MSC_MAJOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MAJOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_MINOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MINOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_PATCHLEVEL], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_PATCHLEVEL \" | awk {'print $3'} | sed `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/configure.ac"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 109,
                  "endLine": 7,
                  "endColumn": 114,
                  "snippet": {
                    "text": " ModSecurity configure.ac\n\n\n# Get the hash of the last commit, to be used if it is not an\n# official release.\nAC_DEFUN([MSC_GIT_HASH], m4_esyscmd_s(git log -1 --format=\"%h\" --abbrev-commit))\nAC_DEFUN([MSC_MAJOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MAJOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_MINOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MINOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_PATCHLEVEL], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_PATCHLEVEL \" | awk ",
                    "rendered": {
                      "text": " ModSecurity configure.ac\n\n\n# Get the hash of the last commit, to be used if it is not an\n# official release.\nAC_DEFUN([MSC_GIT_HASH], m4_esyscmd_s(git log -1 --format=\"%h\" --abbrev-commit))\nAC_DEFUN([MSC_MAJOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MAJOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_MINOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MINOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_PATCHLEVEL], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_PATCHLEVEL \" | awk ",
                      "markdown": "` ModSecurity configure.ac\n\n\n# Get the hash of the last commit, to be used if it is not an\n# official release.\nAC_DEFUN([MSC_GIT_HASH], m4_esyscmd_s(git log -1 --format=\"%h\" --abbrev-commit))\nAC_DEFUN([MSC_MAJOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MAJOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_MINOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MINOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_PATCHLEVEL], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_PATCHLEVEL \" | awk `"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/configure.ac"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 74,
                  "endLine": 7,
                  "endColumn": 80,
                  "snippet": {
                    "text": "# ModSecurity configure.ac\n\n\n# Get the hash of the last commit, to be used if it is not an\n# official release.\nAC_DEFUN([MSC_GIT_HASH], m4_esyscmd_s(git log -1 --format=\"%h\" --abbrev-commit))\nAC_DEFUN([MSC_MAJOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MAJOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_MINOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MINOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_PATCHLEVEL], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"defi",
                    "rendered": {
                      "text": "# ModSecurity configure.ac\n\n\n# Get the hash of the last commit, to be used if it is not an\n# official release.\nAC_DEFUN([MSC_GIT_HASH], m4_esyscmd_s(git log -1 --format=\"%h\" --abbrev-commit))\nAC_DEFUN([MSC_MAJOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MAJOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_MINOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MINOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_PATCHLEVEL], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"defi",
                      "markdown": "`# ModSecurity configure.ac\n\n\n# Get the hash of the last commit, to be used if it is not an\n# official release.\nAC_DEFUN([MSC_GIT_HASH], m4_esyscmd_s(git log -1 --format=\"%h\" --abbrev-commit))\nAC_DEFUN([MSC_MAJOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MAJOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_MINOR], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"define MODSECURITY_MINOR \" | awk {'print $3'} | sed 's/\\\"//g'))\nAC_DEFUN([MSC_PATCHLEVEL], m4_esyscmd_s(cat headers/modsecurity/modsecurity.h | grep \"defi`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/pcre.m4"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 71,
                  "endLine": 77,
                  "endColumn": 76,
                  "snippet": {
                    "text": "        if test ! -z \"${PCRE_CFLAGS}\"; then AC_MSG_NOTICE(pcre CFLAGS: $PCRE_CFLAGS); fi\n        PCRE_LDADD=\"`${PCRE_CONFIG} --libs`\"\n        if test ! -z \"${PCRE_LDADD}\"; then AC_MSG_NOTICE(pcre LDADD: $PCRE_LDADD); fi\n        PCRE_LD_PATH=\"/`${PCRE_CONFIG} --libs | cut -d'/' -f2,3,4,5,6 | cut -d ' ' -f1`\"\n        if test ! -z \"${PCRE_LD_PATH}\"; then AC_MSG_NOTICE(pcre PCRE_LD_PATH: $PCRE_LD_PATH); fi\n    else\n        AC_MSG_RESULT([no])\n",
                    "rendered": {
                      "text": "        if test ! -z \"${PCRE_CFLAGS}\"; then AC_MSG_NOTICE(pcre CFLAGS: $PCRE_CFLAGS); fi\n        PCRE_LDADD=\"`${PCRE_CONFIG} --libs`\"\n        if test ! -z \"${PCRE_LDADD}\"; then AC_MSG_NOTICE(pcre LDADD: $PCRE_LDADD); fi\n        PCRE_LD_PATH=\"/`${PCRE_CONFIG} --libs | cut -d'/' -f2,3,4,5,6 | cut -d ' ' -f1`\"\n        if test ! -z \"${PCRE_LD_PATH}\"; then AC_MSG_NOTICE(pcre PCRE_LD_PATH: $PCRE_LD_PATH); fi\n    else\n        AC_MSG_RESULT([no])\n",
                      "markdown": "`        if test ! -z \"${PCRE_CFLAGS}\"; then AC_MSG_NOTICE(pcre CFLAGS: $PCRE_CFLAGS); fi\n        PCRE_LDADD=\"`${PCRE_CONFIG} --libs`\"\n        if test ! -z \"${PCRE_LDADD}\"; then AC_MSG_NOTICE(pcre LDADD: $PCRE_LDADD); fi\n        PCRE_LD_PATH=\"/`${PCRE_CONFIG} --libs | cut -d'/' -f2,3,4,5,6 | cut -d ' ' -f1`\"\n        if test ! -z \"${PCRE_LD_PATH}\"; then AC_MSG_NOTICE(pcre PCRE_LD_PATH: $PCRE_LD_PATH); fi\n    else\n        AC_MSG_RESULT([no])\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/pcre.m4"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 47,
                  "endLine": 77,
                  "endColumn": 52,
                  "snippet": {
                    "text": "        if test ! -z \"${PCRE_CFLAGS}\"; then AC_MSG_NOTICE(pcre CFLAGS: $PCRE_CFLAGS); fi\n        PCRE_LDADD=\"`${PCRE_CONFIG} --libs`\"\n        if test ! -z \"${PCRE_LDADD}\"; then AC_MSG_NOTICE(pcre LDADD: $PCRE_LDADD); fi\n        PCRE_LD_PATH=\"/`${PCRE_CONFIG} --libs | cut -d'/' -f2,3,4,5,6 | cut -d ' ' -f1`\"\n        if test ! -z \"${PCRE_LD_PATH}\"; then AC_MSG_NOTICE(pcre PCRE_LD_PATH: $PCRE_LD_PATH); fi\n    else\n        AC_MSG_RESULT([no])\n",
                    "rendered": {
                      "text": "        if test ! -z \"${PCRE_CFLAGS}\"; then AC_MSG_NOTICE(pcre CFLAGS: $PCRE_CFLAGS); fi\n        PCRE_LDADD=\"`${PCRE_CONFIG} --libs`\"\n        if test ! -z \"${PCRE_LDADD}\"; then AC_MSG_NOTICE(pcre LDADD: $PCRE_LDADD); fi\n        PCRE_LD_PATH=\"/`${PCRE_CONFIG} --libs | cut -d'/' -f2,3,4,5,6 | cut -d ' ' -f1`\"\n        if test ! -z \"${PCRE_LD_PATH}\"; then AC_MSG_NOTICE(pcre PCRE_LD_PATH: $PCRE_LD_PATH); fi\n    else\n        AC_MSG_RESULT([no])\n",
                      "markdown": "`        if test ! -z \"${PCRE_CFLAGS}\"; then AC_MSG_NOTICE(pcre CFLAGS: $PCRE_CFLAGS); fi\n        PCRE_LDADD=\"`${PCRE_CONFIG} --libs`\"\n        if test ! -z \"${PCRE_LDADD}\"; then AC_MSG_NOTICE(pcre LDADD: $PCRE_LDADD); fi\n        PCRE_LD_PATH=\"/`${PCRE_CONFIG} --libs | cut -d'/' -f2,3,4,5,6 | cut -d ' ' -f1`\"\n        if test ! -z \"${PCRE_LD_PATH}\"; then AC_MSG_NOTICE(pcre PCRE_LD_PATH: $PCRE_LD_PATH); fi\n    else\n        AC_MSG_RESULT([no])\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/pcre.m4"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 34,
                  "endLine": 48,
                  "endColumn": 42,
                  "snippet": {
                    "text": "                break\n            fi\n\n            dnl # Try known config script names/locations\n            for PCRE_CONFIG in pcre-config; do\n                if test -e \"${x}/bin/${PCRE_CONFIG}\"; then\n                    pcre_path=\"${x}/bin\"\n",
                    "rendered": {
                      "text": "                break\n            fi\n\n            dnl # Try known config script names/locations\n            for PCRE_CONFIG in pcre-config; do\n                if test -e \"${x}/bin/${PCRE_CONFIG}\"; then\n                    pcre_path=\"${x}/bin\"\n",
                      "markdown": "`                break\n            fi\n\n            dnl # Try known config script names/locations\n            for PCRE_CONFIG in pcre-config; do\n                if test -e \"${x}/bin/${PCRE_CONFIG}\"; then\n                    pcre_path=\"${x}/bin\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/pcre.m4"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 34,
                  "endLine": 41,
                  "endColumn": 42,
                  "snippet": {
                    "text": "        AC_MSG_NOTICE([pcre-config not found in environment. checking known paths])\n\n        for x in ${test_paths}; do\n            dnl # Determine if the script was specified and use it directly\n            if test ! -d \"$x\" -a -e \"$x\"; then\n                PCRE_CONFIG=$x\n                pcre_path=\"no\"\n",
                    "rendered": {
                      "text": "        AC_MSG_NOTICE([pcre-config not found in environment. checking known paths])\n\n        for x in ${test_paths}; do\n            dnl # Determine if the script was specified and use it directly\n            if test ! -d \"$x\" -a -e \"$x\"; then\n                PCRE_CONFIG=$x\n                pcre_path=\"no\"\n",
                      "markdown": "`        AC_MSG_NOTICE([pcre-config not found in environment. checking known paths])\n\n        for x in ${test_paths}; do\n            dnl # Determine if the script was specified and use it directly\n            if test ! -d \"$x\" -a -e \"$x\"; then\n                PCRE_CONFIG=$x\n                pcre_path=\"no\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/ssdeep.m4"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 21,
                  "endLine": 80,
                  "endColumn": 25,
                  "snippet": {
                    "text": "\nAC_DEFUN([CHECK_FOR_SSDEEP_AT], [\n    path=$1\n    echo \"*** LOOKING AT PATH: \" ${path}\n    for y in ${SSDEEP_POSSIBLE_EXTENSIONS}; do\n        for z in ${SSDEEP_POSSIBLE_LIB_NAMES}; do\n           if test -e \"${path}/${z}.${y}\"; then\n",
                    "rendered": {
                      "text": "\nAC_DEFUN([CHECK_FOR_SSDEEP_AT], [\n    path=$1\n    echo \"*** LOOKING AT PATH: \" ${path}\n    for y in ${SSDEEP_POSSIBLE_EXTENSIONS}; do\n        for z in ${SSDEEP_POSSIBLE_LIB_NAMES}; do\n           if test -e \"${path}/${z}.${y}\"; then\n",
                      "markdown": "`\nAC_DEFUN([CHECK_FOR_SSDEEP_AT], [\n    path=$1\n    echo \"*** LOOKING AT PATH: \" ${path}\n    for y in ${SSDEEP_POSSIBLE_EXTENSIONS}; do\n        for z in ${SSDEEP_POSSIBLE_LIB_NAMES}; do\n           if test -e \"${path}/${z}.${y}\"; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/curl.m4"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 34,
                  "endLine": 64,
                  "endColumn": 38,
                  "snippet": {
                    "text": "    if test ! -z \"${CURL_CONFIG}\"; then AC_MSG_NOTICE(curl LDADD: $CURL_LIBS); fi\n\n    dnl # Check version is ok\n    AC_MSG_CHECKING([if libcurl is at least v${CURL_MIN_VERSION}])\n    curl_min_ver=`echo ${CURL_MIN_VERSION} | awk -F. '{print (\\$ 1 * 1000000) + (\\$ 2 * 1000) + \\$ 3}'`\n    curl_ver=`echo ${CURL_VERSION} | awk -F. '{print (\\$ 1 * 1000000) + (\\$ 2 * 1000) + \\$ 3}'`\n    if test \"$curl_min_ver\" -le \"$curl_ver\"; then\n",
                    "rendered": {
                      "text": "    if test ! -z \"${CURL_CONFIG}\"; then AC_MSG_NOTICE(curl LDADD: $CURL_LIBS); fi\n\n    dnl # Check version is ok\n    AC_MSG_CHECKING([if libcurl is at least v${CURL_MIN_VERSION}])\n    curl_min_ver=`echo ${CURL_MIN_VERSION} | awk -F. '{print (\\$ 1 * 1000000) + (\\$ 2 * 1000) + \\$ 3}'`\n    curl_ver=`echo ${CURL_VERSION} | awk -F. '{print (\\$ 1 * 1000000) + (\\$ 2 * 1000) + \\$ 3}'`\n    if test \"$curl_min_ver\" -le \"$curl_ver\"; then\n",
                      "markdown": "`    if test ! -z \"${CURL_CONFIG}\"; then AC_MSG_NOTICE(curl LDADD: $CURL_LIBS); fi\n\n    dnl # Check version is ok\n    AC_MSG_CHECKING([if libcurl is at least v${CURL_MIN_VERSION}])\n    curl_min_ver=`echo ${CURL_MIN_VERSION} | awk -F. '{print (\\$ 1 * 1000000) + (\\$ 2 * 1000) + \\$ 3}'`\n    curl_ver=`echo ${CURL_VERSION} | awk -F. '{print (\\$ 1 * 1000000) + (\\$ 2 * 1000) + \\$ 3}'`\n    if test \"$curl_min_ver\" -le \"$curl_ver\"; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/curl.m4"
                },
                "region": {
                  "startLine": 125,
                  "startColumn": 24,
                  "endLine": 125,
                  "endColumn": 30,
                  "snippet": {
                    "text": "    fi\nelse\n    CURL_FOUND=1\n    AC_MSG_NOTICE([using curl v${CURL_VERSION}])\n    CURL_DISPLAY=\"${CURL_LDADD}, ${CURL_CFLAGS}\"\nfi\n\n",
                    "rendered": {
                      "text": "    fi\nelse\n    CURL_FOUND=1\n    AC_MSG_NOTICE([using curl v${CURL_VERSION}])\n    CURL_DISPLAY=\"${CURL_LDADD}, ${CURL_CFLAGS}\"\nfi\n\n",
                      "markdown": "`    fi\nelse\n    CURL_FOUND=1\n    AC_MSG_NOTICE([using curl v${CURL_VERSION}])\n    CURL_DISPLAY=\"${CURL_LDADD}, ${CURL_CFLAGS}\"\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/curl.m4"
                },
                "region": {
                  "startLine": 112,
                  "startColumn": 22,
                  "endLine": 112,
                  "endColumn": 28,
                  "snippet": {
                    "text": "fi\n\nif test -z \"${CURL_VERSION}\"; then\n    AC_MSG_NOTICE([*** curl library not found.])\n    if test -z \"${CURL_MANDATORY}\"; then\n        if test -z \"${CURL_DISABLED}\"; then\n            CURL_FOUND=0\n",
                    "rendered": {
                      "text": "fi\n\nif test -z \"${CURL_VERSION}\"; then\n    AC_MSG_NOTICE([*** curl library not found.])\n    if test -z \"${CURL_MANDATORY}\"; then\n        if test -z \"${CURL_DISABLED}\"; then\n            CURL_FOUND=0\n",
                      "markdown": "`fi\n\nif test -z \"${CURL_VERSION}\"; then\n    AC_MSG_NOTICE([*** curl library not found.])\n    if test -z \"${CURL_MANDATORY}\"; then\n        if test -z \"${CURL_DISABLED}\"; then\n            CURL_FOUND=0\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/curl.m4"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 66,
                  "endLine": 84,
                  "endColumn": 75,
                  "snippet": {
                    "text": "    curl_uses_gnutls=`echo ${CURL_LIBS} | grep gnutls | wc -l`\n    if test \"$curl_uses_gnutls\" -ne 0; then\n        AC_MSG_RESULT([yes])\n        AC_MSG_NOTICE([NOTE: curl linked with gnutls may be buggy, openssl recommended])\n        CURL_USES_GNUTLS=yes\n    else\n        AC_MSG_RESULT([no])\n",
                    "rendered": {
                      "text": "    curl_uses_gnutls=`echo ${CURL_LIBS} | grep gnutls | wc -l`\n    if test \"$curl_uses_gnutls\" -ne 0; then\n        AC_MSG_RESULT([yes])\n        AC_MSG_NOTICE([NOTE: curl linked with gnutls may be buggy, openssl recommended])\n        CURL_USES_GNUTLS=yes\n    else\n        AC_MSG_RESULT([no])\n",
                      "markdown": "`    curl_uses_gnutls=`echo ${CURL_LIBS} | grep gnutls | wc -l`\n    if test \"$curl_uses_gnutls\" -ne 0; then\n        AC_MSG_RESULT([yes])\n        AC_MSG_NOTICE([NOTE: curl linked with gnutls may be buggy, openssl recommended])\n        CURL_USES_GNUTLS=yes\n    else\n        AC_MSG_RESULT([no])\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/curl.m4"
                },
                "region": {
                  "startLine": 84,
                  "startColumn": 28,
                  "endLine": 84,
                  "endColumn": 34,
                  "snippet": {
                    "text": "    curl_uses_gnutls=`echo ${CURL_LIBS} | grep gnutls | wc -l`\n    if test \"$curl_uses_gnutls\" -ne 0; then\n        AC_MSG_RESULT([yes])\n        AC_MSG_NOTICE([NOTE: curl linked with gnutls may be buggy, openssl recommended])\n        CURL_USES_GNUTLS=yes\n    else\n        AC_MSG_RESULT([no])\n",
                    "rendered": {
                      "text": "    curl_uses_gnutls=`echo ${CURL_LIBS} | grep gnutls | wc -l`\n    if test \"$curl_uses_gnutls\" -ne 0; then\n        AC_MSG_RESULT([yes])\n        AC_MSG_NOTICE([NOTE: curl linked with gnutls may be buggy, openssl recommended])\n        CURL_USES_GNUTLS=yes\n    else\n        AC_MSG_RESULT([no])\n",
                      "markdown": "`    curl_uses_gnutls=`echo ${CURL_LIBS} | grep gnutls | wc -l`\n    if test \"$curl_uses_gnutls\" -ne 0; then\n        AC_MSG_RESULT([yes])\n        AC_MSG_NOTICE([NOTE: curl linked with gnutls may be buggy, openssl recommended])\n        CURL_USES_GNUTLS=yes\n    else\n        AC_MSG_RESULT([no])\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/curl.m4"
                },
                "region": {
                  "startLine": 81,
                  "startColumn": 41,
                  "endLine": 81,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\n    dnl # Check/warn if GnuTLS is used\n    AC_MSG_CHECKING([if libcurl is linked with gnutls])\n    curl_uses_gnutls=`echo ${CURL_LIBS} | grep gnutls | wc -l`\n    if test \"$curl_uses_gnutls\" -ne 0; then\n        AC_MSG_RESULT([yes])\n        AC_MSG_NOTICE([NOTE: curl linked with gnutls may be buggy, openssl recommended])\n",
                    "rendered": {
                      "text": "\n    dnl # Check/warn if GnuTLS is used\n    AC_MSG_CHECKING([if libcurl is linked with gnutls])\n    curl_uses_gnutls=`echo ${CURL_LIBS} | grep gnutls | wc -l`\n    if test \"$curl_uses_gnutls\" -ne 0; then\n        AC_MSG_RESULT([yes])\n        AC_MSG_NOTICE([NOTE: curl linked with gnutls may be buggy, openssl recommended])\n",
                      "markdown": "`\n    dnl # Check/warn if GnuTLS is used\n    AC_MSG_CHECKING([if libcurl is linked with gnutls])\n    curl_uses_gnutls=`echo ${CURL_LIBS} | grep gnutls | wc -l`\n    if test \"$curl_uses_gnutls\" -ne 0; then\n        AC_MSG_RESULT([yes])\n        AC_MSG_NOTICE([NOTE: curl linked with gnutls may be buggy, openssl recommended])\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/curl.m4"
                },
                "region": {
                  "startLine": 76,
                  "startColumn": 28,
                  "endLine": 76,
                  "endColumn": 34,
                  "snippet": {
                    "text": "\tCURL_CFLAGS=\"${CURL_CFLAGS} -DWITH_CURL\"\n    else\n        AC_MSG_RESULT([no, $CURL_VERSION])\n        AC_MSG_NOTICE([NOTE: curl library may be too old])\n    fi\n\n    dnl # Check/warn if GnuTLS is used\n",
                    "rendered": {
                      "text": "\tCURL_CFLAGS=\"${CURL_CFLAGS} -DWITH_CURL\"\n    else\n        AC_MSG_RESULT([no, $CURL_VERSION])\n        AC_MSG_NOTICE([NOTE: curl library may be too old])\n    fi\n\n    dnl # Check/warn if GnuTLS is used\n",
                      "markdown": "`\tCURL_CFLAGS=\"${CURL_CFLAGS} -DWITH_CURL\"\n    else\n        AC_MSG_RESULT([no, $CURL_VERSION])\n        AC_MSG_NOTICE([NOTE: curl library may be too old])\n    fi\n\n    dnl # Check/warn if GnuTLS is used\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/curl.m4"
                },
                "region": {
                  "startLine": 69,
                  "startColumn": 30,
                  "endLine": 69,
                  "endColumn": 35,
                  "snippet": {
                    "text": "    curl_ver=`echo ${CURL_VERSION} | awk -F. '{print (\\$ 1 * 1000000) + (\\$ 2 * 1000) + \\$ 3}'`\n    if test \"$curl_min_ver\" -le \"$curl_ver\"; then\n        AC_MSG_RESULT([yes, $CURL_VERSION])\n\tcurl_tlsv2_ver=`echo 7.34.0 | awk -F. '{print (\\$ 1 * 1000000) + (\\$ 2 * 1000) + \\$ 3}'`\n\tif test \"$curl_tlsv2_ver\" -le \"$curl_ver\"; then\n\t    CURL_CFLAGS=\"${CURL_CFLAGS} -DWITH_CURL_SSLVERSION_TLSv1_2\"\n\tfi\n",
                    "rendered": {
                      "text": "    curl_ver=`echo ${CURL_VERSION} | awk -F. '{print (\\$ 1 * 1000000) + (\\$ 2 * 1000) + \\$ 3}'`\n    if test \"$curl_min_ver\" -le \"$curl_ver\"; then\n        AC_MSG_RESULT([yes, $CURL_VERSION])\n\tcurl_tlsv2_ver=`echo 7.34.0 | awk -F. '{print (\\$ 1 * 1000000) + (\\$ 2 * 1000) + \\$ 3}'`\n\tif test \"$curl_tlsv2_ver\" -le \"$curl_ver\"; then\n\t    CURL_CFLAGS=\"${CURL_CFLAGS} -DWITH_CURL_SSLVERSION_TLSv1_2\"\n\tfi\n",
                      "markdown": "`    curl_ver=`echo ${CURL_VERSION} | awk -F. '{print (\\$ 1 * 1000000) + (\\$ 2 * 1000) + \\$ 3}'`\n    if test \"$curl_min_ver\" -le \"$curl_ver\"; then\n        AC_MSG_RESULT([yes, $CURL_VERSION])\n\tcurl_tlsv2_ver=`echo 7.34.0 | awk -F. '{print (\\$ 1 * 1000000) + (\\$ 2 * 1000) + \\$ 3}'`\n\tif test \"$curl_tlsv2_ver\" -le \"$curl_ver\"; then\n\t    CURL_CFLAGS=\"${CURL_CFLAGS} -DWITH_CURL_SSLVERSION_TLSv1_2\"\n\tfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/curl.m4"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 36,
                  "endLine": 66,
                  "endColumn": 41,
                  "snippet": {
                    "text": "    dnl # Check version is ok\n    AC_MSG_CHECKING([if libcurl is at least v${CURL_MIN_VERSION}])\n    curl_min_ver=`echo ${CURL_MIN_VERSION} | awk -F. '{print (\\$ 1 * 1000000) + (\\$ 2 * 1000) + \\$ 3}'`\n    curl_ver=`echo ${CURL_VERSION} | awk -F. '{print (\\$ 1 * 1000000) + (\\$ 2 * 1000) + \\$ 3}'`\n    if test \"$curl_min_ver\" -le \"$curl_ver\"; then\n        AC_MSG_RESULT([yes, $CURL_VERSION])\n\tcurl_tlsv2_ver=`echo 7.34.0 | awk -F. '{print (\\$ 1 * 1000000) + (\\$ 2 * 1000) + \\$ 3}'`\n",
                    "rendered": {
                      "text": "    dnl # Check version is ok\n    AC_MSG_CHECKING([if libcurl is at least v${CURL_MIN_VERSION}])\n    curl_min_ver=`echo ${CURL_MIN_VERSION} | awk -F. '{print (\\$ 1 * 1000000) + (\\$ 2 * 1000) + \\$ 3}'`\n    curl_ver=`echo ${CURL_VERSION} | awk -F. '{print (\\$ 1 * 1000000) + (\\$ 2 * 1000) + \\$ 3}'`\n    if test \"$curl_min_ver\" -le \"$curl_ver\"; then\n        AC_MSG_RESULT([yes, $CURL_VERSION])\n\tcurl_tlsv2_ver=`echo 7.34.0 | awk -F. '{print (\\$ 1 * 1000000) + (\\$ 2 * 1000) + \\$ 3}'`\n",
                      "markdown": "`    dnl # Check version is ok\n    AC_MSG_CHECKING([if libcurl is at least v${CURL_MIN_VERSION}])\n    curl_min_ver=`echo ${CURL_MIN_VERSION} | awk -F. '{print (\\$ 1 * 1000000) + (\\$ 2 * 1000) + \\$ 3}'`\n    curl_ver=`echo ${CURL_VERSION} | awk -F. '{print (\\$ 1 * 1000000) + (\\$ 2 * 1000) + \\$ 3}'`\n    if test \"$curl_min_ver\" -le \"$curl_ver\"; then\n        AC_MSG_RESULT([yes, $CURL_VERSION])\n\tcurl_tlsv2_ver=`echo 7.34.0 | awk -F. '{print (\\$ 1 * 1000000) + (\\$ 2 * 1000) + \\$ 3}'`\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/curl.m4"
                },
                "region": {
                  "startLine": 65,
                  "startColumn": 44,
                  "endLine": 65,
                  "endColumn": 49,
                  "snippet": {
                    "text": "\n    dnl # Check version is ok\n    AC_MSG_CHECKING([if libcurl is at least v${CURL_MIN_VERSION}])\n    curl_min_ver=`echo ${CURL_MIN_VERSION} | awk -F. '{print (\\$ 1 * 1000000) + (\\$ 2 * 1000) + \\$ 3}'`\n    curl_ver=`echo ${CURL_VERSION} | awk -F. '{print (\\$ 1 * 1000000) + (\\$ 2 * 1000) + \\$ 3}'`\n    if test \"$curl_min_ver\" -le \"$curl_ver\"; then\n        AC_MSG_RESULT([yes, $CURL_VERSION])\n",
                    "rendered": {
                      "text": "\n    dnl # Check version is ok\n    AC_MSG_CHECKING([if libcurl is at least v${CURL_MIN_VERSION}])\n    curl_min_ver=`echo ${CURL_MIN_VERSION} | awk -F. '{print (\\$ 1 * 1000000) + (\\$ 2 * 1000) + \\$ 3}'`\n    curl_ver=`echo ${CURL_VERSION} | awk -F. '{print (\\$ 1 * 1000000) + (\\$ 2 * 1000) + \\$ 3}'`\n    if test \"$curl_min_ver\" -le \"$curl_ver\"; then\n        AC_MSG_RESULT([yes, $CURL_VERSION])\n",
                      "markdown": "`\n    dnl # Check version is ok\n    AC_MSG_CHECKING([if libcurl is at least v${CURL_MIN_VERSION}])\n    curl_min_ver=`echo ${CURL_MIN_VERSION} | awk -F. '{print (\\$ 1 * 1000000) + (\\$ 2 * 1000) + \\$ 3}'`\n    curl_ver=`echo ${CURL_VERSION} | awk -F. '{print (\\$ 1 * 1000000) + (\\$ 2 * 1000) + \\$ 3}'`\n    if test \"$curl_min_ver\" -le \"$curl_ver\"; then\n        AC_MSG_RESULT([yes, $CURL_VERSION])\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/curl.m4"
                },
                "region": {
                  "startLine": 56,
                  "startColumn": 44,
                  "endLine": 56,
                  "endColumn": 49,
                  "snippet": {
                    "text": "        CURL_CONFIG=\"${curl_path}/${CURL_CONFIG}\"\n    fi\n    AC_MSG_RESULT([${CURL_CONFIG}])\n    CURL_VERSION=`${CURL_CONFIG} --version | sed 's/^[[^0-9]][[^[:space:]]][[^[:space:]]]*[[[:space:]]]*//' | tr '\\r\\n' ' '`\n    if test ! -z \"${CURL_VERSION}\"; then AC_MSG_NOTICE(curl VERSION: $CURL_VERSION); fi\n    CURL_CFLAGS=\"`${CURL_CONFIG} --cflags`\"\n    if test ! -z \"${CURL_CFLAGS}\"; then AC_MSG_NOTICE(curl CFLAGS: $CURL_CFLAGS); fi\n",
                    "rendered": {
                      "text": "        CURL_CONFIG=\"${curl_path}/${CURL_CONFIG}\"\n    fi\n    AC_MSG_RESULT([${CURL_CONFIG}])\n    CURL_VERSION=`${CURL_CONFIG} --version | sed 's/^[[^0-9]][[^[:space:]]][[^[:space:]]]*[[[:space:]]]*//' | tr '\\r\\n' ' '`\n    if test ! -z \"${CURL_VERSION}\"; then AC_MSG_NOTICE(curl VERSION: $CURL_VERSION); fi\n    CURL_CFLAGS=\"`${CURL_CONFIG} --cflags`\"\n    if test ! -z \"${CURL_CFLAGS}\"; then AC_MSG_NOTICE(curl CFLAGS: $CURL_CFLAGS); fi\n",
                      "markdown": "`        CURL_CONFIG=\"${curl_path}/${CURL_CONFIG}\"\n    fi\n    AC_MSG_RESULT([${CURL_CONFIG}])\n    CURL_VERSION=`${CURL_CONFIG} --version | sed 's/^[[^0-9]][[^[:space:]]][[^[:space:]]]*[[[:space:]]]*//' | tr '\\r\\n' ' '`\n    if test ! -z \"${CURL_VERSION}\"; then AC_MSG_NOTICE(curl VERSION: $CURL_VERSION); fi\n    CURL_CFLAGS=\"`${CURL_CONFIG} --cflags`\"\n    if test ! -z \"${CURL_CFLAGS}\"; then AC_MSG_NOTICE(curl CFLAGS: $CURL_CFLAGS); fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/curl.m4"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 26,
                  "endLine": 34,
                  "endColumn": 34,
                  "snippet": {
                    "text": "        break\n    fi\n\n    dnl # Try known config script names/locations\n    for CURL_CONFIG in curl-config; do\n        if test -e \"${x}/bin/${CURL_CONFIG}\"; then\n            curl_path=\"${x}/bin\"\n",
                    "rendered": {
                      "text": "        break\n    fi\n\n    dnl # Try known config script names/locations\n    for CURL_CONFIG in curl-config; do\n        if test -e \"${x}/bin/${CURL_CONFIG}\"; then\n            curl_path=\"${x}/bin\"\n",
                      "markdown": "`        break\n    fi\n\n    dnl # Try known config script names/locations\n    for CURL_CONFIG in curl-config; do\n        if test -e \"${x}/bin/${CURL_CONFIG}\"; then\n            curl_path=\"${x}/bin\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/curl.m4"
                },
                "region": {
                  "startLine": 27,
                  "startColumn": 26,
                  "endLine": 27,
                  "endColumn": 34,
                  "snippet": {
                    "text": "AC_MSG_CHECKING([for libcurl config script])\n\nfor x in ${test_paths}; do\n    dnl # Determine if the script was specified and use it directly\n    if test ! -d \"$x\" -a -e \"$x\"; then\n        CURL_CONFIG=$x\n        curl_path=\"no\"\n",
                    "rendered": {
                      "text": "AC_MSG_CHECKING([for libcurl config script])\n\nfor x in ${test_paths}; do\n    dnl # Determine if the script was specified and use it directly\n    if test ! -d \"$x\" -a -e \"$x\"; then\n        CURL_CONFIG=$x\n        curl_path=\"no\"\n",
                      "markdown": "`AC_MSG_CHECKING([for libcurl config script])\n\nfor x in ${test_paths}; do\n    dnl # Determine if the script was specified and use it directly\n    if test ! -d \"$x\" -a -e \"$x\"; then\n        CURL_CONFIG=$x\n        curl_path=\"no\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/curl.m4"
                },
                "region": {
                  "startLine": 20,
                  "startColumn": 47,
                  "endLine": 20,
                  "endColumn": 53,
                  "snippet": {
                    "text": "\nAC_ARG_WITH(\n    curl,\n    [AS_HELP_STRING([--with-curl=PATH],[Path to curl prefix or config script])],\n    [test_paths=\"${with_curl}\"],\n    [test_paths=\"/usr/local/libcurl /usr/local/curl /usr/local /opt/libcurl /opt/curl /opt /usr\"])\n\n",
                    "rendered": {
                      "text": "\nAC_ARG_WITH(\n    curl,\n    [AS_HELP_STRING([--with-curl=PATH],[Path to curl prefix or config script])],\n    [test_paths=\"${with_curl}\"],\n    [test_paths=\"/usr/local/libcurl /usr/local/curl /usr/local /opt/libcurl /opt/curl /opt /usr\"])\n\n",
                      "markdown": "`\nAC_ARG_WITH(\n    curl,\n    [AS_HELP_STRING([--with-curl=PATH],[Path to curl prefix or config script])],\n    [test_paths=\"${with_curl}\"],\n    [test_paths=\"/usr/local/libcurl /usr/local/curl /usr/local /opt/libcurl /opt/curl /opt /usr\"])\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/curl.m4"
                },
                "region": {
                  "startLine": 1,
                  "startColumn": 13,
                  "endLine": 1,
                  "endColumn": 19,
                  "snippet": {
                    "text": "dnl Check for CURL Libraries\ndnl CHECK_CURL(ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND])\ndnl Sets:\ndnl  CURL_CFLAGS\n",
                    "rendered": {
                      "text": "dnl Check for CURL Libraries\ndnl CHECK_CURL(ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND])\ndnl Sets:\ndnl  CURL_CFLAGS\n",
                      "markdown": "`dnl Check for CURL Libraries\ndnl CHECK_CURL(ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND])\ndnl Sets:\ndnl  CURL_CFLAGS\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/libxml.m4"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 51,
                  "endLine": 55,
                  "endColumn": 55,
                  "snippet": {
                    "text": "        AC_MSG_RESULT([yes, $LIBXML2_VERSION])\n    else\n        AC_MSG_RESULT([no, $LIBXML2_VERSION])\n        AC_MSG_ERROR([NOTE: libxml2 library must be at least ${LIBXML2_MIN_VERSION}])\n    fi\n\nelse\n",
                    "rendered": {
                      "text": "        AC_MSG_RESULT([yes, $LIBXML2_VERSION])\n    else\n        AC_MSG_RESULT([no, $LIBXML2_VERSION])\n        AC_MSG_ERROR([NOTE: libxml2 library must be at least ${LIBXML2_MIN_VERSION}])\n    fi\n\nelse\n",
                      "markdown": "`        AC_MSG_RESULT([yes, $LIBXML2_VERSION])\n    else\n        AC_MSG_RESULT([no, $LIBXML2_VERSION])\n        AC_MSG_ERROR([NOTE: libxml2 library must be at least ${LIBXML2_MIN_VERSION}])\n    fi\n\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/libxml.m4"
                },
                "region": {
                  "startLine": 48,
                  "startColumn": 34,
                  "endLine": 48,
                  "endColumn": 38,
                  "snippet": {
                    "text": "    LIBXML2_LDADD=\"`${LIBXML2_CONFIG} --libs`\"\n    if test ! -z \"${LIBXML2_LDADD}\"; then AC_MSG_NOTICE(xml LDADD: $LIBXML2_LDADD); fi\n\n    AC_MSG_CHECKING([if libxml2 is at least v${LIBXML2_MIN_VERSION}])\n    libxml2_min_ver=`echo ${LIBXML2_MIN_VERSION} | awk -F. '{print (\\$ 1 * 1000000) + (\\$ 2 * 1000) + \\$ 3}'`\n    libxml2_ver=`echo ${LIBXML2_VERSION} | awk -F. '{print (\\$ 1 * 1000000) + (\\$ 2 * 1000) + \\$ 3}'`\n    if test \"$libxml2_ver\" -ge \"$libxml2_min_ver\"; then\n",
                    "rendered": {
                      "text": "    LIBXML2_LDADD=\"`${LIBXML2_CONFIG} --libs`\"\n    if test ! -z \"${LIBXML2_LDADD}\"; then AC_MSG_NOTICE(xml LDADD: $LIBXML2_LDADD); fi\n\n    AC_MSG_CHECKING([if libxml2 is at least v${LIBXML2_MIN_VERSION}])\n    libxml2_min_ver=`echo ${LIBXML2_MIN_VERSION} | awk -F. '{print (\\$ 1 * 1000000) + (\\$ 2 * 1000) + \\$ 3}'`\n    libxml2_ver=`echo ${LIBXML2_VERSION} | awk -F. '{print (\\$ 1 * 1000000) + (\\$ 2 * 1000) + \\$ 3}'`\n    if test \"$libxml2_ver\" -ge \"$libxml2_min_ver\"; then\n",
                      "markdown": "`    LIBXML2_LDADD=\"`${LIBXML2_CONFIG} --libs`\"\n    if test ! -z \"${LIBXML2_LDADD}\"; then AC_MSG_NOTICE(xml LDADD: $LIBXML2_LDADD); fi\n\n    AC_MSG_CHECKING([if libxml2 is at least v${LIBXML2_MIN_VERSION}])\n    libxml2_min_ver=`echo ${LIBXML2_MIN_VERSION} | awk -F. '{print (\\$ 1 * 1000000) + (\\$ 2 * 1000) + \\$ 3}'`\n    libxml2_ver=`echo ${LIBXML2_VERSION} | awk -F. '{print (\\$ 1 * 1000000) + (\\$ 2 * 1000) + \\$ 3}'`\n    if test \"$libxml2_ver\" -ge \"$libxml2_min_ver\"; then\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/libxml.m4"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 42,
                  "endLine": 50,
                  "endColumn": 47,
                  "snippet": {
                    "text": "\n    AC_MSG_CHECKING([if libxml2 is at least v${LIBXML2_MIN_VERSION}])\n    libxml2_min_ver=`echo ${LIBXML2_MIN_VERSION} | awk -F. '{print (\\$ 1 * 1000000) + (\\$ 2 * 1000) + \\$ 3}'`\n    libxml2_ver=`echo ${LIBXML2_VERSION} | awk -F. '{print (\\$ 1 * 1000000) + (\\$ 2 * 1000) + \\$ 3}'`\n    if test \"$libxml2_ver\" -ge \"$libxml2_min_ver\"; then\n        AC_MSG_RESULT([yes, $LIBXML2_VERSION])\n    else\n",
                    "rendered": {
                      "text": "\n    AC_MSG_CHECKING([if libxml2 is at least v${LIBXML2_MIN_VERSION}])\n    libxml2_min_ver=`echo ${LIBXML2_MIN_VERSION} | awk -F. '{print (\\$ 1 * 1000000) + (\\$ 2 * 1000) + \\$ 3}'`\n    libxml2_ver=`echo ${LIBXML2_VERSION} | awk -F. '{print (\\$ 1 * 1000000) + (\\$ 2 * 1000) + \\$ 3}'`\n    if test \"$libxml2_ver\" -ge \"$libxml2_min_ver\"; then\n        AC_MSG_RESULT([yes, $LIBXML2_VERSION])\n    else\n",
                      "markdown": "`\n    AC_MSG_CHECKING([if libxml2 is at least v${LIBXML2_MIN_VERSION}])\n    libxml2_min_ver=`echo ${LIBXML2_MIN_VERSION} | awk -F. '{print (\\$ 1 * 1000000) + (\\$ 2 * 1000) + \\$ 3}'`\n    libxml2_ver=`echo ${LIBXML2_VERSION} | awk -F. '{print (\\$ 1 * 1000000) + (\\$ 2 * 1000) + \\$ 3}'`\n    if test \"$libxml2_ver\" -ge \"$libxml2_min_ver\"; then\n        AC_MSG_RESULT([yes, $LIBXML2_VERSION])\n    else\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/libxml.m4"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 50,
                  "endLine": 49,
                  "endColumn": 55,
                  "snippet": {
                    "text": "    if test ! -z \"${LIBXML2_LDADD}\"; then AC_MSG_NOTICE(xml LDADD: $LIBXML2_LDADD); fi\n\n    AC_MSG_CHECKING([if libxml2 is at least v${LIBXML2_MIN_VERSION}])\n    libxml2_min_ver=`echo ${LIBXML2_MIN_VERSION} | awk -F. '{print (\\$ 1 * 1000000) + (\\$ 2 * 1000) + \\$ 3}'`\n    libxml2_ver=`echo ${LIBXML2_VERSION} | awk -F. '{print (\\$ 1 * 1000000) + (\\$ 2 * 1000) + \\$ 3}'`\n    if test \"$libxml2_ver\" -ge \"$libxml2_min_ver\"; then\n        AC_MSG_RESULT([yes, $LIBXML2_VERSION])\n",
                    "rendered": {
                      "text": "    if test ! -z \"${LIBXML2_LDADD}\"; then AC_MSG_NOTICE(xml LDADD: $LIBXML2_LDADD); fi\n\n    AC_MSG_CHECKING([if libxml2 is at least v${LIBXML2_MIN_VERSION}])\n    libxml2_min_ver=`echo ${LIBXML2_MIN_VERSION} | awk -F. '{print (\\$ 1 * 1000000) + (\\$ 2 * 1000) + \\$ 3}'`\n    libxml2_ver=`echo ${LIBXML2_VERSION} | awk -F. '{print (\\$ 1 * 1000000) + (\\$ 2 * 1000) + \\$ 3}'`\n    if test \"$libxml2_ver\" -ge \"$libxml2_min_ver\"; then\n        AC_MSG_RESULT([yes, $LIBXML2_VERSION])\n",
                      "markdown": "`    if test ! -z \"${LIBXML2_LDADD}\"; then AC_MSG_NOTICE(xml LDADD: $LIBXML2_LDADD); fi\n\n    AC_MSG_CHECKING([if libxml2 is at least v${LIBXML2_MIN_VERSION}])\n    libxml2_min_ver=`echo ${LIBXML2_MIN_VERSION} | awk -F. '{print (\\$ 1 * 1000000) + (\\$ 2 * 1000) + \\$ 3}'`\n    libxml2_ver=`echo ${LIBXML2_VERSION} | awk -F. '{print (\\$ 1 * 1000000) + (\\$ 2 * 1000) + \\$ 3}'`\n    if test \"$libxml2_ver\" -ge \"$libxml2_min_ver\"; then\n        AC_MSG_RESULT([yes, $LIBXML2_VERSION])\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/libxml.m4"
                },
                "region": {
                  "startLine": 41,
                  "startColumn": 50,
                  "endLine": 41,
                  "endColumn": 55,
                  "snippet": {
                    "text": "        LIBXML2_CONFIG=\"${libxml2_path}/${LIBXML2_CONFIG}\"\n    fi\n    AC_MSG_RESULT([${LIBXML2_CONFIG}])\n    LIBXML2_VERSION=`${LIBXML2_CONFIG} --version | sed 's/^[[^0-9]][[^[:space:]]][[^[:space:]]]*[[[:space:]]]*//'`\n    if test ! -z \"${LIBXML2_VERSION}\"; then AC_MSG_NOTICE(xml VERSION: $LIBXML2_VERSION); fi\n    LIBXML2_CFLAGS=\"`${LIBXML2_CONFIG} --cflags` -DWITH_LIBXML2\"\n    if test ! -z \"${LIBXML2_CFLAGS}\"; then AC_MSG_NOTICE(xml CFLAGS: $LIBXML2_CFLAGS); fi\n",
                    "rendered": {
                      "text": "        LIBXML2_CONFIG=\"${libxml2_path}/${LIBXML2_CONFIG}\"\n    fi\n    AC_MSG_RESULT([${LIBXML2_CONFIG}])\n    LIBXML2_VERSION=`${LIBXML2_CONFIG} --version | sed 's/^[[^0-9]][[^[:space:]]][[^[:space:]]]*[[[:space:]]]*//'`\n    if test ! -z \"${LIBXML2_VERSION}\"; then AC_MSG_NOTICE(xml VERSION: $LIBXML2_VERSION); fi\n    LIBXML2_CFLAGS=\"`${LIBXML2_CONFIG} --cflags` -DWITH_LIBXML2\"\n    if test ! -z \"${LIBXML2_CFLAGS}\"; then AC_MSG_NOTICE(xml CFLAGS: $LIBXML2_CFLAGS); fi\n",
                      "markdown": "`        LIBXML2_CONFIG=\"${libxml2_path}/${LIBXML2_CONFIG}\"\n    fi\n    AC_MSG_RESULT([${LIBXML2_CONFIG}])\n    LIBXML2_VERSION=`${LIBXML2_CONFIG} --version | sed 's/^[[^0-9]][[^[:space:]]][[^[:space:]]]*[[[:space:]]]*//'`\n    if test ! -z \"${LIBXML2_VERSION}\"; then AC_MSG_NOTICE(xml VERSION: $LIBXML2_VERSION); fi\n    LIBXML2_CFLAGS=\"`${LIBXML2_CONFIG} --cflags` -DWITH_LIBXML2\"\n    if test ! -z \"${LIBXML2_CFLAGS}\"; then AC_MSG_NOTICE(xml CFLAGS: $LIBXML2_CFLAGS); fi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/libxml.m4"
                },
                "region": {
                  "startLine": 19,
                  "startColumn": 26,
                  "endLine": 19,
                  "endColumn": 34,
                  "snippet": {
                    "text": "        break\n    fi\n\n    dnl # Try known config script names/locations\n    for LIBXML2_CONFIG in xml2-config xml-2-config xml-config; do\n        if test -e \"${x}/bin/${LIBXML2_CONFIG}\"; then\n            libxml2_path=\"${x}/bin\"\n",
                    "rendered": {
                      "text": "        break\n    fi\n\n    dnl # Try known config script names/locations\n    for LIBXML2_CONFIG in xml2-config xml-2-config xml-config; do\n        if test -e \"${x}/bin/${LIBXML2_CONFIG}\"; then\n            libxml2_path=\"${x}/bin\"\n",
                      "markdown": "`        break\n    fi\n\n    dnl # Try known config script names/locations\n    for LIBXML2_CONFIG in xml2-config xml-2-config xml-config; do\n        if test -e \"${x}/bin/${LIBXML2_CONFIG}\"; then\n            libxml2_path=\"${x}/bin\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/build/libxml.m4"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 26,
                  "endLine": 12,
                  "endColumn": 34,
                  "snippet": {
                    "text": "AC_MSG_CHECKING([for libxml2 config script])\n\nfor x in ${test_paths}; do\n    dnl # Determine if the script was specified and use it directly\n    if test ! -d \"$x\" -a -e \"$x\"; then\n        LIBXML2_CONFIG=$x\n        libxml2_path=\"no\"\n",
                    "rendered": {
                      "text": "AC_MSG_CHECKING([for libxml2 config script])\n\nfor x in ${test_paths}; do\n    dnl # Determine if the script was specified and use it directly\n    if test ! -d \"$x\" -a -e \"$x\"; then\n        LIBXML2_CONFIG=$x\n        libxml2_path=\"no\"\n",
                      "markdown": "`AC_MSG_CHECKING([for libxml2 config script])\n\nfor x in ${test_paths}; do\n    dnl # Determine if the script was specified and use it directly\n    if test ! -d \"$x\" -a -e \"$x\"; then\n        LIBXML2_CONFIG=$x\n        libxml2_path=\"no\"\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 24,
                  "endLine": 26,
                  "endColumn": 28,
                  "snippet": {
                    "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                    "rendered": {
                      "text": "\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n",
                      "markdown": "`\n# Cross platform projects tend to avoid non-ASCII filenames; prevent\n# them from being added to the repository. We exploit the fact that the\n# printable range starts at the space character and ends with tilde.\nif [ \"$allownonascii\" != \"true\" ] &&\n\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 49,
                  "startColumn": 4,
                  "endLine": 49,
                  "endColumn": 9,
                  "snippet": {
                    "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                    "rendered": {
                      "text": "fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n",
                      "markdown": "`fi\n\n# If there are whitespace errors, print the offending file names and fail.\nexec git diff-index --check --cached $against --\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 43,
                  "startColumn": 1,
                  "endLine": 43,
                  "endColumn": 6,
                  "snippet": {
                    "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                    "rendered": {
                      "text": "\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n",
                      "markdown": "`\nIf you know what you are doing you can disable this check using:\n\n  git config hooks.allownonascii true\nEOF\n\texit 1\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 34,
                  "endLine": 34,
                  "endColumn": 5,
                  "snippet": {
                    "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                    "rendered": {
                      "text": "\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n",
                      "markdown": "`\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\nError: Attempt to add a non-ASCII file name.\n\nThis can cause problems if you want to work with people on other platforms.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 31,
                  "startColumn": 11,
                  "endLine": 31,
                  "endColumn": 17,
                  "snippet": {
                    "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                    "rendered": {
                      "text": "\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n",
                      "markdown": "`\t# Note that the use of brackets around a tr range is ok here, (it's\n\t# even required, for portability to Solaris 10's /usr/bin/tr), since\n\t# the square bracket bytes happen to fall in the designated range.\n\ttest $(git diff --cached --name-only --diff-filter=A -z $against |\n\t  LC_ALL=C tr -d '[ -~]\\0' | wc -c) != 0\nthen\n\tcat <<\\EOF\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 14,
                  "startColumn": 18,
                  "endLine": 14,
                  "endColumn": 24,
                  "snippet": {
                    "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                    "rendered": {
                      "text": "then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n",
                      "markdown": "`then\n\tagainst=HEAD\nelse\n\t# Initial commit: diff against an empty tree object\n\tagainst=$(git hash-object -t tree /dev/null)\nfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 25,
                  "endLine": 10,
                  "endColumn": 31,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 10,
                  "startColumn": 2,
                  "endLine": 10,
                  "endColumn": 7,
                  "snippet": {
                    "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                    "rendered": {
                      "text": "#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n",
                      "markdown": "`#\n# To enable this hook, rename this file to \"pre-commit\".\n\nif git rev-parse --verify HEAD >/dev/null 2>&1\nthen\n\tagainst=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/pre-commit.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed.\n# Called by \"git commit\" with no arguments.  The hook should\n# exit with non-zero status after issuing an appropriate message if\n# it wants to stop the commit.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/pre-applypatch.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to verify what is about to be committed\n# by applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/pre-receive.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to make use of push options.\n# The example simply echoes all push options that start with 'echoback='\n# and rejects all pushes when the \"reject\" push option is used.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 39,
                  "startColumn": 4,
                  "endLine": 39,
                  "endColumn": 12,
                  "snippet": {
                    "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                    "rendered": {
                      "text": "\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n",
                      "markdown": "`\t\t\t# New branch, examine all commits\n\t\t\trange=\"$local_oid\"\n\t\telse\n\t\t\t# Update to existing branch, examine new commits\n\t\t\trange=\"$remote_oid..$local_oid\"\n\t\tfi\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                    "rendered": {
                      "text": "\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n",
                      "markdown": "`\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n# This hook is called with the following parameters:\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/pre-push.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to verify what is about to be pushed.  Called by \"git\n# push\" after it has checked the remote status, but before anything has been\n# pushed.  If this script exits with a non-zero status nothing will be pushed.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 15,
                  "endLine": 77,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 7,
                  "startColumn": 10,
                  "endLine": 7,
                  "endColumn": 18,
                  "snippet": {
                    "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                    "rendered": {
                      "text": "#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n",
                      "markdown": "`#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n#\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 27,
                  "endLine": 3,
                  "endColumn": 35,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 4,
                  "endLine": 75,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n",
                      "markdown": "`\tdie \"Working directory has staged changes\"\nfi\n\nif ! git read-tree -u -m \"$commit\"\nthen\n\tdie \"Could not update working tree to new HEAD\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 4,
                  "endLine": 70,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                    "rendered": {
                      "text": "\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n",
                      "markdown": "`\thead=$(git hash-object -t tree --stdin </dev/null)\nfi\n\nif ! git diff-index --quiet --cached --ignore-submodules $head --\nthen\n\tdie \"Working directory has staged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 18,
                  "endLine": 63,
                  "endColumn": 24,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 63,
                  "startColumn": 2,
                  "endLine": 63,
                  "endColumn": 7,
                  "snippet": {
                    "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                    "rendered": {
                      "text": "# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n",
                      "markdown": "`# This is a rough translation of:\n#\n#   head_has_history() ? \"HEAD\" : EMPTY_TREE_SHA1_HEX\nif git cat-file -e HEAD 2>/dev/null\nthen\n\thead=HEAD\nelse\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 55,
                  "startColumn": 4,
                  "endLine": 55,
                  "endColumn": 9,
                  "snippet": {
                    "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                    "rendered": {
                      "text": "\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n",
                      "markdown": "`\tdie \"Up-to-date check failed\"\nfi\n\nif ! git diff-files --quiet --ignore-submodules --\nthen\n\tdie \"Working directory has unstaged changes\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 50,
                  "startColumn": 4,
                  "endLine": 50,
                  "endColumn": 9,
                  "snippet": {
                    "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                    "rendered": {
                      "text": "# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n",
                      "markdown": "`# the working tree, you will have to adapt your code accordingly, e.g.\n# by adding \"cd ..\" or using relative paths.\n\nif ! git update-index -q --ignore-submodules --refresh\nthen\n\tdie \"Up-to-date check failed\"\nfi\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 39,
                  "endLine": 37,
                  "endColumn": 44,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 37,
                  "startColumn": 25,
                  "endLine": 37,
                  "endColumn": 30,
                  "snippet": {
                    "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                    "rendered": {
                      "text": "# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n",
                      "markdown": "`# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 40,
                  "endLine": 36,
                  "endColumn": 45,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 36,
                  "startColumn": 6,
                  "endLine": 36,
                  "endColumn": 11,
                  "snippet": {
                    "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                    "rendered": {
                      "text": "#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n",
                      "markdown": "`#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n# not interfere with the difference between the branches.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 35,
                  "startColumn": 21,
                  "endLine": 35,
                  "endColumn": 26,
                  "snippet": {
                    "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                    "rendered": {
                      "text": "# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n",
                      "markdown": "`# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n# branches while keeping the local changes in the working tree that do\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 58,
                  "endLine": 34,
                  "endColumn": 64,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 34,
                  "startColumn": 38,
                  "endLine": 34,
                  "endColumn": 43,
                  "snippet": {
                    "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                    "rendered": {
                      "text": "# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n",
                      "markdown": "`# index to bring them to the desired state when the tip of the current\n# branch is updated to the new commit, and exit with a zero status.\n#\n# For example, the hook can simply run git read-tree -u -m HEAD \"$1\"\n# in order to emulate git fetch that is run in the reverse direction\n# with git push, as the two-tree form of git read-tree -u -m is\n# essentially the same as git switch or git checkout that switches\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 5,
                  "startColumn": 63,
                  "endLine": 6,
                  "snippet": {
                    "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                    "rendered": {
                      "text": "\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n",
                      "markdown": "`\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n# tries to update the branch that is currently checked out and the\n# receive.denyCurrentBranch configuration variable is set to\n# updateInstead.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 58,
                  "endLine": 3,
                  "endColumn": 63,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/push-to-checkout.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                    "rendered": {
                      "text": "#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n",
                      "markdown": "`#!/bin/sh\n\n# An example hook script to update a checked-out tree on a git push.\n#\n# This hook is invoked by git-receive-pack(1) when it reacts to git\n# push and updates reference(s) in its repository, and when the push\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/.git/hooks/applypatch-msg.sample"
                },
                "region": {
                  "startLine": 3,
                  "startColumn": 17,
                  "endLine": 3,
                  "endColumn": 25,
                  "snippet": {
                    "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                    "rendered": {
                      "text": "#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n",
                      "markdown": "`#!/bin/sh\n#\n# An example hook script to check the commit log message taken by\n# applypatch from an e-mail message.\n#\n# The hook should exit with non-zero status after issuing an\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/regression/fn-setHostname.json"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 21,
                  "endLine": 33,
                  "endColumn": 29,
                  "snippet": {
                    "text": "    },\n    \"expected\":{\n      \"http_code\": 403,\n      \"debug_log\": \"[hostname: \\\"modsecurity.org\\\"]\"\n    },\n    \"rules\":[\n      \"SecRuleEngine On\",\n",
                    "rendered": {
                      "text": "    },\n    \"expected\":{\n      \"http_code\": 403,\n      \"debug_log\": \"[hostname: \\\"modsecurity.org\\\"]\"\n    },\n    \"rules\":[\n      \"SecRuleEngine On\",\n",
                      "markdown": "`    },\n    \"expected\":{\n      \"http_code\": 403,\n      \"debug_log\": \"[hostname: \\\"modsecurity.org\\\"]\"\n    },\n    \"rules\":[\n      \"SecRuleEngine On\",\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/test-cases/regression/fn-setHostname.json"
                },
                "region": {
                  "startLine": 12,
                  "startColumn": 7,
                  "endLine": 12,
                  "endColumn": 15,
                  "snippet": {
                    "text": "    \"server\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":80,\n      \"hostname\":\"modsecurity.org\"\n    },\n    \"request\": {\n      \"headers\": {\n",
                    "rendered": {
                      "text": "    \"server\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":80,\n      \"hostname\":\"modsecurity.org\"\n    },\n    \"request\": {\n      \"headers\": {\n",
                      "markdown": "`    \"server\":{\n      \"ip\":\"200.249.12.31\",\n      \"port\":80,\n      \"hostname\":\"modsecurity.org\"\n    },\n    \"request\": {\n      \"headers\": {\n`"
                    }
                  },
                  "sourceLanguage": "json"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/optimization/optimization.cc"
                },
                "region": {
                  "startLine": 99,
                  "startColumn": 74,
                  "endLine": 99,
                  "endColumn": 79,
                  "snippet": {
                    "text": "                }\n            }\n\n            if (auto rwo = dynamic_cast<modsecurity::RuleWithOperator *>(z.get())) {\n                std::string op = rwo->getOperatorName();\n                if (operators.count(op) > 0) {\n                    operators[op] = 1 + operators[op];\n",
                    "rendered": {
                      "text": "                }\n            }\n\n            if (auto rwo = dynamic_cast<modsecurity::RuleWithOperator *>(z.get())) {\n                std::string op = rwo->getOperatorName();\n                if (operators.count(op) > 0) {\n                    operators[op] = 1 + operators[op];\n",
                      "markdown": "`                }\n            }\n\n            if (auto rwo = dynamic_cast<modsecurity::RuleWithOperator *>(z.get())) {\n                std::string op = rwo->getOperatorName();\n                if (operators.count(op) > 0) {\n                    operators[op] = 1 + operators[op];\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000700"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration",
            "id": "BD000700"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/optimization/optimization.cc"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 64,
                  "endLine": 90,
                  "endColumn": 69,
                  "snippet": {
                    "text": "                continue;\n            }\n\n            if (dynamic_cast<modsecurity::RuleUnconditional *>(z.get())) {\n                std::string op = \"Unconditional\";\n                if (operators.count(op) > 0) {\n                    operators[op] = 1 + operators[op];\n",
                    "rendered": {
                      "text": "                continue;\n            }\n\n            if (dynamic_cast<modsecurity::RuleUnconditional *>(z.get())) {\n                std::string op = \"Unconditional\";\n                if (operators.count(op) > 0) {\n                    operators[op] = 1 + operators[op];\n",
                      "markdown": "`                continue;\n            }\n\n            if (dynamic_cast<modsecurity::RuleUnconditional *>(z.get())) {\n                std::string op = \"Unconditional\";\n                if (operators.count(op) > 0) {\n                    operators[op] = 1 + operators[op];\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/optimization/optimization.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/regression/custom_debug_log.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/regression/regression_test.h"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 16,
                  "endLine": 64,
                  "endColumn": 24,
                  "snippet": {
                    "text": "    std::string serverIp;\n    int clientPort;\n    int serverPort;\n    std::string hostname;\n\n    std::string method;\n    std::string httpVersion;\n",
                    "rendered": {
                      "text": "    std::string serverIp;\n    int clientPort;\n    int serverPort;\n    std::string hostname;\n\n    std::string method;\n    std::string httpVersion;\n",
                      "markdown": "`    std::string serverIp;\n    int clientPort;\n    int serverPort;\n    std::string hostname;\n\n    std::string method;\n    std::string httpVersion;\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/regression/regression_test.cc"
                },
                "region": {
                  "startLine": 138,
                  "startColumn": 23,
                  "endLine": 138,
                  "endColumn": 31,
                  "snippet": {
                    "text": "                    u->serverPort = YAJL_GET_INTEGER(val2);\n                }\n                if (strcmp(key2, \"hostname\") == 0) {\n                    u->hostname = YAJL_GET_STRING(val2);\n                }\n            }\n        }\n",
                    "rendered": {
                      "text": "                    u->serverPort = YAJL_GET_INTEGER(val2);\n                }\n                if (strcmp(key2, \"hostname\") == 0) {\n                    u->hostname = YAJL_GET_STRING(val2);\n                }\n            }\n        }\n",
                      "markdown": "`                    u->serverPort = YAJL_GET_INTEGER(val2);\n                }\n                if (strcmp(key2, \"hostname\") == 0) {\n                    u->hostname = YAJL_GET_STRING(val2);\n                }\n            }\n        }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/regression/regression_test.cc"
                },
                "region": {
                  "startLine": 137,
                  "startColumn": 34,
                  "endLine": 137,
                  "endColumn": 42,
                  "snippet": {
                    "text": "                if (strcmp(key2, \"port\") == 0) {\n                    u->serverPort = YAJL_GET_INTEGER(val2);\n                }\n                if (strcmp(key2, \"hostname\") == 0) {\n                    u->hostname = YAJL_GET_STRING(val2);\n                }\n            }\n",
                    "rendered": {
                      "text": "                if (strcmp(key2, \"port\") == 0) {\n                    u->serverPort = YAJL_GET_INTEGER(val2);\n                }\n                if (strcmp(key2, \"hostname\") == 0) {\n                    u->hostname = YAJL_GET_STRING(val2);\n                }\n            }\n",
                      "markdown": "`                if (strcmp(key2, \"port\") == 0) {\n                    u->serverPort = YAJL_GET_INTEGER(val2);\n                }\n                if (strcmp(key2, \"hostname\") == 0) {\n                    u->hostname = YAJL_GET_STRING(val2);\n                }\n            }\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/regression/regression_test.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/regression/regression.cc"
                },
                "region": {
                  "startLine": 313,
                  "startColumn": 54,
                  "endLine": 313,
                  "endColumn": 62,
                  "snippet": {
                    "text": "            t->clientPort, t->serverIp.c_str(), t->serverPort);\n\n        if (t->hostname != \"\") {\n            modsec_transaction->setRequestHostName(t->hostname);\n        }\n\n        actions(&r, modsec_transaction, &serverLog);\n",
                    "rendered": {
                      "text": "            t->clientPort, t->serverIp.c_str(), t->serverPort);\n\n        if (t->hostname != \"\") {\n            modsec_transaction->setRequestHostName(t->hostname);\n        }\n\n        actions(&r, modsec_transaction, &serverLog);\n",
                      "markdown": "`            t->clientPort, t->serverIp.c_str(), t->serverPort);\n\n        if (t->hostname != \"\") {\n            modsec_transaction->setRequestHostName(t->hostname);\n        }\n\n        actions(&r, modsec_transaction, &serverLog);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000704"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Hostname)",
            "id": "BD000704"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/regression/regression.cc"
                },
                "region": {
                  "startLine": 312,
                  "startColumn": 15,
                  "endLine": 312,
                  "endColumn": 23,
                  "snippet": {
                    "text": "        modsec_transaction->processConnection(t->clientIp.c_str(),\n            t->clientPort, t->serverIp.c_str(), t->serverPort);\n\n        if (t->hostname != \"\") {\n            modsec_transaction->setRequestHostName(t->hostname);\n        }\n\n",
                    "rendered": {
                      "text": "        modsec_transaction->processConnection(t->clientIp.c_str(),\n            t->clientPort, t->serverIp.c_str(), t->serverPort);\n\n        if (t->hostname != \"\") {\n            modsec_transaction->setRequestHostName(t->hostname);\n        }\n\n",
                      "markdown": "`        modsec_transaction->processConnection(t->clientIp.c_str(),\n            t->clientPort, t->serverIp.c_str(), t->serverPort);\n\n        if (t->hostname != \"\") {\n            modsec_transaction->setRequestHostName(t->hostname);\n        }\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/regression/regression.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/benchmark/download-owasp-v4-rules.sh"
                },
                "region": {
                  "startLine": 2,
                  "endLine": 3,
                  "endColumn": 4,
                  "snippet": {
                    "text": "#!/bin/bash\n\ngit clone -c advice.detachedHead=false --depth 1 --branch v4.3.0 https://github.com/coreruleset/coreruleset.git owasp-v4\n\necho 'Include \"owasp-v4/crs-setup.conf.example\"' >> basic_rules.conf\necho 'Include \"owasp-v4/rules/*.conf\"' >> basic_rules.conf\n",
                    "rendered": {
                      "text": "#!/bin/bash\n\ngit clone -c advice.detachedHead=false --depth 1 --branch v4.3.0 https://github.com/coreruleset/coreruleset.git owasp-v4\n\necho 'Include \"owasp-v4/crs-setup.conf.example\"' >> basic_rules.conf\necho 'Include \"owasp-v4/rules/*.conf\"' >> basic_rules.conf\n",
                      "markdown": "`#!/bin/bash\n\ngit clone -c advice.detachedHead=false --depth 1 --branch v4.3.0 https://github.com/coreruleset/coreruleset.git owasp-v4\n\necho 'Include \"owasp-v4/crs-setup.conf.example\"' >> basic_rules.conf\necho 'Include \"owasp-v4/rules/*.conf\"' >> basic_rules.conf\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/benchmark/benchmark.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/test/benchmark/download-owasp-v3-rules.sh"
                },
                "region": {
                  "startLine": 2,
                  "endLine": 3,
                  "endColumn": 4,
                  "snippet": {
                    "text": "#!/bin/bash\n\ngit clone -c advice.detachedHead=false --depth 1 --branch v3.0.2 https://github.com/coreruleset/coreruleset.git owasp-v3\n\necho 'Include \"owasp-v3/crs-setup.conf.example\"' >> basic_rules.conf\necho 'Include \"owasp-v3/rules/*.conf\"' >> basic_rules.conf\n",
                    "rendered": {
                      "text": "#!/bin/bash\n\ngit clone -c advice.detachedHead=false --depth 1 --branch v3.0.2 https://github.com/coreruleset/coreruleset.git owasp-v3\n\necho 'Include \"owasp-v3/crs-setup.conf.example\"' >> basic_rules.conf\necho 'Include \"owasp-v3/rules/*.conf\"' >> basic_rules.conf\n",
                      "markdown": "`#!/bin/bash\n\ngit clone -c advice.detachedHead=false --depth 1 --branch v3.0.2 https://github.com/coreruleset/coreruleset.git owasp-v3\n\necho 'Include \"owasp-v3/crs-setup.conf.example\"' >> basic_rules.conf\necho 'Include \"owasp-v3/rules/*.conf\"' >> basic_rules.conf\n`"
                    }
                  },
                  "sourceLanguage": "shellscript"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/verify_cpf.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/validate_hash.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/operators/str_eq.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/hex_encode.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/replace_comments.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/compress_whitespace.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/normalise_path.cc"
                },
                "region": {
                  "startLine": 72,
                  "startColumn": 27,
                  "endLine": 72,
                  "endColumn": 31,
                  "snippet": {
                    "text": "            }\n        }\n\n        /* Always normalize at the end of the input. */\n        if (src == end) {\n            done = 1;\n        } else if (*(src + 1) != '/') {\n",
                    "rendered": {
                      "text": "            }\n        }\n\n        /* Always normalize at the end of the input. */\n        if (src == end) {\n            done = 1;\n        } else if (*(src + 1) != '/') {\n",
                      "markdown": "`            }\n        }\n\n        /* Always normalize at the end of the input. */\n        if (src == end) {\n            done = 1;\n        } else if (*(src + 1) != '/') {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/normalise_path.cc"
                },
                "region": {
                  "startLine": 42,
                  "startColumn": 11,
                  "endLine": 42,
                  "endColumn": 15,
                  "snippet": {
                    "text": "\n    bool changed = false;\n\n    /* Need at least one byte to normalize */\n    if(val.empty()) return false;\n\n    auto input = reinterpret_cast<unsigned char*>(val.data());\n",
                    "rendered": {
                      "text": "\n    bool changed = false;\n\n    /* Need at least one byte to normalize */\n    if(val.empty()) return false;\n\n    auto input = reinterpret_cast<unsigned char*>(val.data());\n",
                      "markdown": "`\n    bool changed = false;\n\n    /* Need at least one byte to normalize */\n    if(val.empty()) return false;\n\n    auto input = reinterpret_cast<unsigned char*>(val.data());\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/normalise_path.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/trim_right.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/actions/transformations/trim_left.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/request_body_processor/xml.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/request_body_processor/multipart.cc"
                },
                "region": {
                  "startLine": 1736,
                  "startColumn": 14,
                  "endLine": 1736,
                  "endColumn": 22,
                  "snippet": {
                    "text": "                }\n            }\n\n            /* Update the offset of the data we are about\n             * to process. This is to allow us to know the\n             * offsets of individual files and variables.\n             */\n",
                    "rendered": {
                      "text": "                }\n            }\n\n            /* Update the offset of the data we are about\n             * to process. This is to allow us to know the\n             * offsets of individual files and variables.\n             */\n",
                      "markdown": "`                }\n            }\n\n            /* Update the offset of the data we are about\n             * to process. This is to allow us to know the\n             * offsets of individual files and variables.\n             */\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/request_body_processor/multipart.cc"
                },
                "region": {
                  "startLine": 1574,
                  "startColumn": 72,
                  "endLine": 1574,
                  "endColumn": 76,
                  "snippet": {
                    "text": "\n                    } else {\n                        char *boundary_end = m_buf + 2 + m_boundary.size();\n                        /* if it match, AND there was a matched boundary at least,\n                           set the m_flag_unmatched_boundary flag to 2\n                           this indicates that there were an opened boundary, which\n                           matches the reference, and here is the final boundary.\n",
                    "rendered": {
                      "text": "\n                    } else {\n                        char *boundary_end = m_buf + 2 + m_boundary.size();\n                        /* if it match, AND there was a matched boundary at least,\n                           set the m_flag_unmatched_boundary flag to 2\n                           this indicates that there were an opened boundary, which\n                           matches the reference, and here is the final boundary.\n",
                      "markdown": "`\n                    } else {\n                        char *boundary_end = m_buf + 2 + m_boundary.size();\n                        /* if it match, AND there was a matched boundary at least,\n                           set the m_flag_unmatched_boundary flag to 2\n                           this indicates that there were an opened boundary, which\n                           matches the reference, and here is the final boundary.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/request_body_processor/multipart.cc"
                },
                "region": {
                  "startLine": 1530,
                  "startColumn": 56,
                  "endLine": 1530,
                  "endColumn": 60,
                  "snippet": {
                    "text": "        return false;\n    }\n\n    /* here we loop through the available data, one byte at a time */\n    while (inleft > 0) {\n        char c = *inptr;\n        int process_buffer = 0;\n",
                    "rendered": {
                      "text": "        return false;\n    }\n\n    /* here we loop through the available data, one byte at a time */\n    while (inleft > 0) {\n        char c = *inptr;\n        int process_buffer = 0;\n",
                      "markdown": "`        return false;\n    }\n\n    /* here we loop through the available data, one byte at a time */\n    while (inleft > 0) {\n        char c = *inptr;\n        int process_buffer = 0;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/request_body_processor/multipart.cc"
                },
                "region": {
                  "startLine": 1047,
                  "startColumn": 56,
                  "endLine": 1047,
                  "endColumn": 60,
                  "snippet": {
                    "text": "\n\n/**\n * Finalize multipart processing. This method is invoked at the end, when it\n * is clear that there is no more data to be processed.\n */\nint Multipart::multipart_complete(std::string *error) {\n",
                    "rendered": {
                      "text": "\n\n/**\n * Finalize multipart processing. This method is invoked at the end, when it\n * is clear that there is no more data to be processed.\n */\nint Multipart::multipart_complete(std::string *error) {\n",
                      "markdown": "`\n\n/**\n * Finalize multipart processing. This method is invoked at the end, when it\n * is clear that there is no more data to be processed.\n */\nint Multipart::multipart_complete(std::string *error) {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/request_body_processor/multipart.cc"
                },
                "region": {
                  "startLine": 860,
                  "startColumn": 14,
                  "endLine": 860,
                  "endColumn": 22,
                  "snippet": {
                    "text": "            new_value = std::string(data);\n            utils::string::chomp(new_value);\n\n            /* update the header value in the table */\n            header_value = m_mpp->m_headers.at(\n                m_mpp->m_last_header_name).second;\n            new_value = header_value + \" \" +  new_value;\n",
                    "rendered": {
                      "text": "            new_value = std::string(data);\n            utils::string::chomp(new_value);\n\n            /* update the header value in the table */\n            header_value = m_mpp->m_headers.at(\n                m_mpp->m_last_header_name).second;\n            new_value = header_value + \" \" +  new_value;\n",
                      "markdown": "`            new_value = std::string(data);\n            utils::string::chomp(new_value);\n\n            /* update the header value in the table */\n            header_value = m_mpp->m_headers.at(\n                m_mpp->m_last_header_name).second;\n            new_value = header_value + \" \" +  new_value;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/request_body_processor/multipart.cc"
                },
                "region": {
                  "startLine": 835,
                  "startColumn": 47,
                  "endLine": 835,
                  "endColumn": 51,
                  "snippet": {
                    "text": "            }\n\n            if (m_mpp->m_last_header_name.empty()) {\n                /* we are not building a header at this moment */\n                ms_dbg_a(m_transaction, 1,\n                    \"Multipart: Invalid part header (folding error).\");\n\n",
                    "rendered": {
                      "text": "            }\n\n            if (m_mpp->m_last_header_name.empty()) {\n                /* we are not building a header at this moment */\n                ms_dbg_a(m_transaction, 1,\n                    \"Multipart: Invalid part header (folding error).\");\n\n",
                      "markdown": "`            }\n\n            if (m_mpp->m_last_header_name.empty()) {\n                /* we are not building a header at this moment */\n                ms_dbg_a(m_transaction, 1,\n                    \"Multipart: Invalid part header (folding error).\");\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/request_body_processor/multipart.cc"
                },
                "region": {
                  "startLine": 418,
                  "startColumn": 37,
                  "endLine": 418,
                  "endColumn": 41,
                  "snippet": {
                    "text": "                value.append((p++), 1);\n            }\n\n            p++; /* go over the quote at the end */\n\n        } else {\n            /* not quoted */\n",
                    "rendered": {
                      "text": "                value.append((p++), 1);\n            }\n\n            p++; /* go over the quote at the end */\n\n        } else {\n            /* not quoted */\n",
                      "markdown": "`                value.append((p++), 1);\n            }\n\n            p++; /* go over the quote at the end */\n\n        } else {\n            /* not quoted */\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/request_body_processor/multipart.cc"
                },
                "region": {
                  "startLine": 350,
                  "startColumn": 38,
                  "endLine": 350,
                  "endColumn": 42,
                  "snippet": {
                    "text": "                p++;\n            }\n            if ((*p != '\\'') || (p == start_of_charset)) {\n                return -16; // Must be at least one legit char before ' for start of language\n            }\n            p++;\n            while ((*p != '\\0') && (*p != '\\'')) {\n",
                    "rendered": {
                      "text": "                p++;\n            }\n            if ((*p != '\\'') || (p == start_of_charset)) {\n                return -16; // Must be at least one legit char before ' for start of language\n            }\n            p++;\n            while ((*p != '\\0') && (*p != '\\'')) {\n",
                      "markdown": "`                p++;\n            }\n            if ((*p != '\\'') || (p == start_of_charset)) {\n                return -16; // Must be at least one legit char before ' for start of language\n            }\n            p++;\n            while ((*p != '\\0') && (*p != '\\'')) {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/request_body_processor/multipart.cc"
                },
                "region": {
                  "startLine": 177,
                  "startColumn": 39,
                  "endLine": 177,
                  "endColumn": 43,
                  "snippet": {
                    "text": "\n\nint Multipart::is_token_char(unsigned char c) {\n    /* ENH Is the performance important at all? We could use a table instead. */\n\n    /* CTLs not allowed */\n    if ((c <= 32) || (c >= 127)) {\n",
                    "rendered": {
                      "text": "\n\nint Multipart::is_token_char(unsigned char c) {\n    /* ENH Is the performance important at all? We could use a table instead. */\n\n    /* CTLs not allowed */\n    if ((c <= 32) || (c >= 127)) {\n",
                      "markdown": "`\n\nint Multipart::is_token_char(unsigned char c) {\n    /* ENH Is the performance important at all? We could use a table instead. */\n\n    /* CTLs not allowed */\n    if ((c <= 32) || (c >= 127)) {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/request_body_processor/multipart.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/request_body_processor/multipart.cc"
                },
                "region": {
                  "startLine": 1530,
                  "startColumn": 61,
                  "endLine": 1530,
                  "endColumn": 67,
                  "snippet": {
                    "text": "        return false;\n    }\n\n    /* here we loop through the available data, one byte at a time */\n    while (inleft > 0) {\n        char c = *inptr;\n        int process_buffer = 0;\n",
                    "rendered": {
                      "text": "        return false;\n    }\n\n    /* here we loop through the available data, one byte at a time */\n    while (inleft > 0) {\n        char c = *inptr;\n        int process_buffer = 0;\n",
                      "markdown": "`        return false;\n    }\n\n    /* here we loop through the available data, one byte at a time */\n    while (inleft > 0) {\n        char c = *inptr;\n        int process_buffer = 0;\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/request_body_processor/multipart.cc"
                },
                "region": {
                  "startLine": 1477,
                  "startColumn": 25,
                  "endLine": 1477,
                  "endColumn": 31,
                  "snippet": {
                    "text": "            error->assign(\"Multipart: Invalid boundary in C-T (empty).\");\n            return false;\n        }\n    } else { /* Could not find boundary in the C-T header. */\n        m_flag_error = 1;\n\n        /* Test for case-insensitive boundary. Allowed by the RFC but\n",
                    "rendered": {
                      "text": "            error->assign(\"Multipart: Invalid boundary in C-T (empty).\");\n            return false;\n        }\n    } else { /* Could not find boundary in the C-T header. */\n        m_flag_error = 1;\n\n        /* Test for case-insensitive boundary. Allowed by the RFC but\n",
                      "markdown": "`            error->assign(\"Multipart: Invalid boundary in C-T (empty).\");\n            return false;\n        }\n    } else { /* Could not find boundary in the C-T header. */\n        m_flag_error = 1;\n\n        /* Test for case-insensitive boundary. Allowed by the RFC but\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/request_body_processor/multipart.cc"
                },
                "region": {
                  "startLine": 826,
                  "startColumn": 63,
                  "endLine": 826,
                  "endColumn": 68,
                  "snippet": {
                    "text": "            /* header folding, add data to the header we are building */\n            m_flag_header_folding = 1;\n\n            /* RFC-2557 states header folding is SP / HTAB, but PHP and\n             * perhaps others will take any whitespace.  So, we accept,\n             * but with a flag set.\n             */\n",
                    "rendered": {
                      "text": "            /* header folding, add data to the header we are building */\n            m_flag_header_folding = 1;\n\n            /* RFC-2557 states header folding is SP / HTAB, but PHP and\n             * perhaps others will take any whitespace.  So, we accept,\n             * but with a flag set.\n             */\n",
                      "markdown": "`            /* header folding, add data to the header we are building */\n            m_flag_header_folding = 1;\n\n            /* RFC-2557 states header folding is SP / HTAB, but PHP and\n             * perhaps others will take any whitespace.  So, we accept,\n             * but with a flag set.\n             */\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/variables/time_year.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/variables/time.h"
                },
                "region": {
                  "startLine": 32,
                  "startColumn": 5,
                  "endLine": 32,
                  "endColumn": 11,
                  "snippet": {
                    "text": "class Transaction;\nnamespace variables {\n\nclass Time : public Variable {\n public:\n    explicit Time(const std::string &_name)\n        : Variable(_name),\n",
                    "rendered": {
                      "text": "class Transaction;\nnamespace variables {\n\nclass Time : public Variable {\n public:\n    explicit Time(const std::string &_name)\n        : Variable(_name),\n",
                      "markdown": "`class Transaction;\nnamespace variables {\n\nclass Time : public Variable {\n public:\n    explicit Time(const std::string &_name)\n        : Variable(_name),\n`"
                    }
                  },
                  "sourceLanguage": "c"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/variables/remote_user.cc"
                },
                "region": {
                  "startLine": 60,
                  "startColumn": 65,
                  "endLine": 60,
                  "endColumn": 71,
                  "snippet": {
                    "text": "        base64 = Utils::Base64::decode(base64);\n\n        if (const auto pos{base64.find(\":\")}; pos != std::string::npos) {\n            transaction->m_variableRemoteUser.assign(std::string(base64, 0, pos));\n\n            auto var = std::make_unique<VariableValue>(&v->getKeyWithCollection(),\n                &transaction->m_variableRemoteUser);\n",
                    "rendered": {
                      "text": "        base64 = Utils::Base64::decode(base64);\n\n        if (const auto pos{base64.find(\":\")}; pos != std::string::npos) {\n            transaction->m_variableRemoteUser.assign(std::string(base64, 0, pos));\n\n            auto var = std::make_unique<VariableValue>(&v->getKeyWithCollection(),\n                &transaction->m_variableRemoteUser);\n",
                      "markdown": "`        base64 = Utils::Base64::decode(base64);\n\n        if (const auto pos{base64.find(\":\")}; pos != std::string::npos) {\n            transaction->m_variableRemoteUser.assign(std::string(base64, 0, pos));\n\n            auto var = std::make_unique<VariableValue>(&v->getKeyWithCollection(),\n                &transaction->m_variableRemoteUser);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/variables/remote_user.cc"
                },
                "region": {
                  "startLine": 59,
                  "startColumn": 27,
                  "endLine": 59,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n        base64 = Utils::Base64::decode(base64);\n\n        if (const auto pos{base64.find(\":\")}; pos != std::string::npos) {\n            transaction->m_variableRemoteUser.assign(std::string(base64, 0, pos));\n\n            auto var = std::make_unique<VariableValue>(&v->getKeyWithCollection(),\n",
                    "rendered": {
                      "text": "\n        base64 = Utils::Base64::decode(base64);\n\n        if (const auto pos{base64.find(\":\")}; pos != std::string::npos) {\n            transaction->m_variableRemoteUser.assign(std::string(base64, 0, pos));\n\n            auto var = std::make_unique<VariableValue>(&v->getKeyWithCollection(),\n",
                      "markdown": "`\n        base64 = Utils::Base64::decode(base64);\n\n        if (const auto pos{base64.find(\":\")}; pos != std::string::npos) {\n            transaction->m_variableRemoteUser.assign(std::string(base64, 0, pos));\n\n            auto var = std::make_unique<VariableValue>(&v->getKeyWithCollection(),\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/variables/remote_user.cc"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 39,
                  "endLine": 57,
                  "endColumn": 45,
                  "snippet": {
                    "text": "            base64 = std::string(header, 6, header.length());\n        }\n\n        base64 = Utils::Base64::decode(base64);\n\n        if (const auto pos{base64.find(\":\")}; pos != std::string::npos) {\n            transaction->m_variableRemoteUser.assign(std::string(base64, 0, pos));\n",
                    "rendered": {
                      "text": "            base64 = std::string(header, 6, header.length());\n        }\n\n        base64 = Utils::Base64::decode(base64);\n\n        if (const auto pos{base64.find(\":\")}; pos != std::string::npos) {\n            transaction->m_variableRemoteUser.assign(std::string(base64, 0, pos));\n",
                      "markdown": "`            base64 = std::string(header, 6, header.length());\n        }\n\n        base64 = Utils::Base64::decode(base64);\n\n        if (const auto pos{base64.find(\":\")}; pos != std::string::npos) {\n            transaction->m_variableRemoteUser.assign(std::string(base64, 0, pos));\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/variables/remote_user.cc"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 24,
                  "endLine": 57,
                  "endColumn": 30,
                  "snippet": {
                    "text": "            base64 = std::string(header, 6, header.length());\n        }\n\n        base64 = Utils::Base64::decode(base64);\n\n        if (const auto pos{base64.find(\":\")}; pos != std::string::npos) {\n            transaction->m_variableRemoteUser.assign(std::string(base64, 0, pos));\n",
                    "rendered": {
                      "text": "            base64 = std::string(header, 6, header.length());\n        }\n\n        base64 = Utils::Base64::decode(base64);\n\n        if (const auto pos{base64.find(\":\")}; pos != std::string::npos) {\n            transaction->m_variableRemoteUser.assign(std::string(base64, 0, pos));\n",
                      "markdown": "`            base64 = std::string(header, 6, header.length());\n        }\n\n        base64 = Utils::Base64::decode(base64);\n\n        if (const auto pos{base64.find(\":\")}; pos != std::string::npos) {\n            transaction->m_variableRemoteUser.assign(std::string(base64, 0, pos));\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/variables/remote_user.cc"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 8,
                  "endLine": 57,
                  "endColumn": 14,
                  "snippet": {
                    "text": "            base64 = std::string(header, 6, header.length());\n        }\n\n        base64 = Utils::Base64::decode(base64);\n\n        if (const auto pos{base64.find(\":\")}; pos != std::string::npos) {\n            transaction->m_variableRemoteUser.assign(std::string(base64, 0, pos));\n",
                    "rendered": {
                      "text": "            base64 = std::string(header, 6, header.length());\n        }\n\n        base64 = Utils::Base64::decode(base64);\n\n        if (const auto pos{base64.find(\":\")}; pos != std::string::npos) {\n            transaction->m_variableRemoteUser.assign(std::string(base64, 0, pos));\n",
                      "markdown": "`            base64 = std::string(header, 6, header.length());\n        }\n\n        base64 = Utils::Base64::decode(base64);\n\n        if (const auto pos{base64.find(\":\")}; pos != std::string::npos) {\n            transaction->m_variableRemoteUser.assign(std::string(base64, 0, pos));\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/variables/remote_user.cc"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 12,
                  "endLine": 54,
                  "endColumn": 18,
                  "snippet": {
                    "text": "        std::string base64;\n\n        if (header.compare(0, 6, \"Basic \") == 0) {\n            base64 = std::string(header, 6, header.length());\n        }\n\n        base64 = Utils::Base64::decode(base64);\n",
                    "rendered": {
                      "text": "        std::string base64;\n\n        if (header.compare(0, 6, \"Basic \") == 0) {\n            base64 = std::string(header, 6, header.length());\n        }\n\n        base64 = Utils::Base64::decode(base64);\n",
                      "markdown": "`        std::string base64;\n\n        if (header.compare(0, 6, \"Basic \") == 0) {\n            base64 = std::string(header, 6, header.length());\n        }\n\n        base64 = Utils::Base64::decode(base64);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/variables/remote_user.cc"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 20,
                  "endLine": 51,
                  "endColumn": 26,
                  "snippet": {
                    "text": "\n        const auto &header = v->getValue();\n\n        std::string base64;\n\n        if (header.compare(0, 6, \"Basic \") == 0) {\n            base64 = std::string(header, 6, header.length());\n",
                    "rendered": {
                      "text": "\n        const auto &header = v->getValue();\n\n        std::string base64;\n\n        if (header.compare(0, 6, \"Basic \") == 0) {\n            base64 = std::string(header, 6, header.length());\n",
                      "markdown": "`\n        const auto &header = v->getValue();\n\n        std::string base64;\n\n        if (header.compare(0, 6, \"Basic \") == 0) {\n            base64 = std::string(header, 6, header.length());\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/variables/remote_user.cc"
                },
                "region": {
                  "startLine": 33,
                  "startColumn": 20,
                  "endLine": 33,
                  "endColumn": 26,
                  "snippet": {
                    "text": "#include <memory>\n\n#include \"modsecurity/transaction.h\"\n#include \"src/utils/base64.h\"\n\nnamespace modsecurity {\nnamespace variables {\n",
                    "rendered": {
                      "text": "#include <memory>\n\n#include \"modsecurity/transaction.h\"\n#include \"src/utils/base64.h\"\n\nnamespace modsecurity {\nnamespace variables {\n",
                      "markdown": "`#include <memory>\n\n#include \"modsecurity/transaction.h\"\n#include \"src/utils/base64.h\"\n\nnamespace modsecurity {\nnamespace variables {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/variables/remote_user.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/variables/remote_user.cc"
                },
                "region": {
                  "startLine": 57,
                  "startColumn": 7,
                  "endLine": 57,
                  "endColumn": 15,
                  "snippet": {
                    "text": "            base64 = std::string(header, 6, header.length());\n        }\n\n        base64 = Utils::Base64::decode(base64);\n\n        if (const auto pos{base64.find(\":\")}; pos != std::string::npos) {\n            transaction->m_variableRemoteUser.assign(std::string(base64, 0, pos));\n",
                    "rendered": {
                      "text": "            base64 = std::string(header, 6, header.length());\n        }\n\n        base64 = Utils::Base64::decode(base64);\n\n        if (const auto pos{base64.find(\":\")}; pos != std::string::npos) {\n            transaction->m_variableRemoteUser.assign(std::string(base64, 0, pos));\n",
                      "markdown": "`            base64 = std::string(header, 6, header.length());\n        }\n\n        base64 = Utils::Base64::decode(base64);\n\n        if (const auto pos{base64.find(\":\")}; pos != std::string::npos) {\n            transaction->m_variableRemoteUser.assign(std::string(base64, 0, pos));\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/variables/remote_user.cc"
                },
                "region": {
                  "startLine": 54,
                  "startColumn": 11,
                  "endLine": 54,
                  "endColumn": 19,
                  "snippet": {
                    "text": "        std::string base64;\n\n        if (header.compare(0, 6, \"Basic \") == 0) {\n            base64 = std::string(header, 6, header.length());\n        }\n\n        base64 = Utils::Base64::decode(base64);\n",
                    "rendered": {
                      "text": "        std::string base64;\n\n        if (header.compare(0, 6, \"Basic \") == 0) {\n            base64 = std::string(header, 6, header.length());\n        }\n\n        base64 = Utils::Base64::decode(base64);\n",
                      "markdown": "`        std::string base64;\n\n        if (header.compare(0, 6, \"Basic \") == 0) {\n            base64 = std::string(header, 6, header.length());\n        }\n\n        base64 = Utils::Base64::decode(base64);\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/geo_lookup.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/system.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/utils/random.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rules_exceptions.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2023 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rules_exceptions.cc"
                },
                "region": {
                  "startLine": 134,
                  "startColumn": 44,
                  "endLine": 134,
                  "endColumn": 50,
                  "snippet": {
                    "text": "        size_t dash = b.find('-');\n        if (dash != std::string::npos) {\n            std::string n1s = std::string(b, 0, dash);\n            std::string n2s = std::string(b, dash + 1, b.size() - (dash + 1));\n            int n1n = 0;\n            int n2n = 0;\n            try {\n",
                    "rendered": {
                      "text": "        size_t dash = b.find('-');\n        if (dash != std::string::npos) {\n            std::string n1s = std::string(b, 0, dash);\n            std::string n2s = std::string(b, dash + 1, b.size() - (dash + 1));\n            int n1n = 0;\n            int n2n = 0;\n            try {\n",
                      "markdown": "`        size_t dash = b.find('-');\n        if (dash != std::string::npos) {\n            std::string n1s = std::string(b, 0, dash);\n            std::string n2s = std::string(b, dash + 1, b.size() - (dash + 1));\n            int n1n = 0;\n            int n2n = 0;\n            try {\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/rules_exceptions.cc"
                },
                "region": {
                  "startLine": 131,
                  "startColumn": 14,
                  "endLine": 131,
                  "endColumn": 20,
                  "snippet": {
                    "text": "            continue;\n        }\n\n        size_t dash = b.find('-');\n        if (dash != std::string::npos) {\n            std::string n1s = std::string(b, 0, dash);\n            std::string n2s = std::string(b, dash + 1, b.size() - (dash + 1));\n",
                    "rendered": {
                      "text": "            continue;\n        }\n\n        size_t dash = b.find('-');\n        if (dash != std::string::npos) {\n            std::string n1s = std::string(b, 0, dash);\n            std::string n2s = std::string(b, dash + 1, b.size() - (dash + 1));\n",
                      "markdown": "`            continue;\n        }\n\n        size_t dash = b.find('-');\n        if (dash != std::string::npos) {\n            std::string n1s = std::string(b, 0, dash);\n            std::string n2s = std::string(b, dash + 1, b.size() - (dash + 1));\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/src/anchored_set_variable.cc"
                },
                "region": {
                  "startLine": 6,
                  "startColumn": 53,
                  "endLine": 7,
                  "snippet": {
                    "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                    "rendered": {
                      "text": " * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n",
                      "markdown": "` * Copyright (c) 2015 - 2021 Trustwave Holdings, Inc. (http://www.trustwave.com/)\n *\n * You may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * If any of the files related to licensing are missing or if you have any\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/others/Makefile.am"
                },
                "region": {
                  "startLine": 26,
                  "startColumn": 17,
                  "endLine": 26,
                  "endColumn": 23,
                  "snippet": {
                    "text": "\tmbedtls/include/mbedtls/sha1.h\n\nlibmbedtls_la_SOURCES = \\\n\tmbedtls/library/base64.c \\\n\tmbedtls/library/md5.c \\\n\tmbedtls/library/sha1.c \\\n\tmbedtls/library/platform_util.c\n",
                    "rendered": {
                      "text": "\tmbedtls/include/mbedtls/sha1.h\n\nlibmbedtls_la_SOURCES = \\\n\tmbedtls/library/base64.c \\\n\tmbedtls/library/md5.c \\\n\tmbedtls/library/sha1.c \\\n\tmbedtls/library/platform_util.c\n",
                      "markdown": "`\tmbedtls/include/mbedtls/sha1.h\n\nlibmbedtls_la_SOURCES = \\\n\tmbedtls/library/base64.c \\\n\tmbedtls/library/md5.c \\\n\tmbedtls/library/sha1.c \\\n\tmbedtls/library/platform_util.c\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000800"
          },
          "message": {
            "text": "Backdoor: Obfuscation",
            "id": "BD000800"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/others/Makefile.am"
                },
                "region": {
                  "startLine": 18,
                  "startColumn": 25,
                  "endLine": 18,
                  "endColumn": 31,
                  "snippet": {
                    "text": "\tlibinjection/src/libinjection_sqli.h \\\n\tlibinjection/src/libinjection_sqli_data.h \\\n\tlibinjection/src/libinjection_xss.h \\\n\tmbedtls/include/mbedtls/base64.h \\\n\tmbedtls/include/mbedtls/check_config.h \\\n\tmbedtls/include/mbedtls/mbedtls_config.h \\\n\tmbedtls/include/mbedtls/md5.h \\\n",
                    "rendered": {
                      "text": "\tlibinjection/src/libinjection_sqli.h \\\n\tlibinjection/src/libinjection_sqli_data.h \\\n\tlibinjection/src/libinjection_xss.h \\\n\tmbedtls/include/mbedtls/base64.h \\\n\tmbedtls/include/mbedtls/check_config.h \\\n\tmbedtls/include/mbedtls/mbedtls_config.h \\\n\tmbedtls/include/mbedtls/md5.h \\\n",
                      "markdown": "`\tlibinjection/src/libinjection_sqli.h \\\n\tlibinjection/src/libinjection_sqli_data.h \\\n\tlibinjection/src/libinjection_xss.h \\\n\tmbedtls/include/mbedtls/base64.h \\\n\tmbedtls/include/mbedtls/check_config.h \\\n\tmbedtls/include/mbedtls/mbedtls_config.h \\\n\tmbedtls/include/mbedtls/md5.h \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000702"
          },
          "message": {
            "text": "Backdoor: Data Exfiltration (Environment)",
            "id": "BD000702"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/modsecurity.conf-recommended"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 2,
                  "endLine": 80,
                  "endColumn": 65,
                  "snippet": {
                    "text": "\n# By default be strict with what we accept in the multipart/form-data\n# request body. If the rule below proves to be too strict for your\n# environment consider changing it to detection-only. You are encouraged\n# _not_ to remove it altogether.\n#\nSecRule MULTIPART_STRICT_ERROR \"!@eq 0\" \\\n",
                    "rendered": {
                      "text": "\n# By default be strict with what we accept in the multipart/form-data\n# request body. If the rule below proves to be too strict for your\n# environment consider changing it to detection-only. You are encouraged\n# _not_ to remove it altogether.\n#\nSecRule MULTIPART_STRICT_ERROR \"!@eq 0\" \\\n",
                      "markdown": "`\n# By default be strict with what we accept in the multipart/form-data\n# request body. If the rule below proves to be too strict for your\n# environment consider changing it to detection-only. You are encouraged\n# _not_ to remove it altogether.\n#\nSecRule MULTIPART_STRICT_ERROR \"!@eq 0\" \\\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 2,
            "Confidence": 4
          }
        },
        {
          "rule": {
            "id": "BD000600"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Windows Indicator",
            "id": "BD000600"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/modsecurity.conf-recommended"
                },
                "region": {
                  "startLine": 216,
                  "startColumn": 16,
                  "endLine": 216,
                  "endColumn": 20,
                  "snippet": {
                    "text": "\n# By default, only keep the files that were determined to be unusual\n# in some way (by an external inspection script). For this to work you\n# will also need at least one file inspection rule.\n#\n#SecUploadKeepFiles RelevantOnly\n\n",
                    "rendered": {
                      "text": "\n# By default, only keep the files that were determined to be unusual\n# in some way (by an external inspection script). For this to work you\n# will also need at least one file inspection rule.\n#\n#SecUploadKeepFiles RelevantOnly\n\n",
                      "markdown": "`\n# By default, only keep the files that were determined to be unusual\n# in some way (by an external inspection script). For this to work you\n# will also need at least one file inspection rule.\n#\n#SecUploadKeepFiles RelevantOnly\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/modsecurity.conf-recommended"
                },
                "region": {
                  "startLine": 282,
                  "startColumn": 48,
                  "endLine": 282,
                  "endColumn": 53,
                  "snippet": {
                    "text": "# Improve the quality of ModSecurity by sharing information about your\n# current ModSecurity version and dependencies versions.\n# The following information will be shared: ModSecurity version,\n# Web Server version, APR version, PCRE version, Lua version, Libxml2\n# version, Anonymous unique id for host.\n# NB: As of April 2022, there is no longer any advantage to turning this\n# setting On, as there is no active receiver for the information.\n",
                    "rendered": {
                      "text": "# Improve the quality of ModSecurity by sharing information about your\n# current ModSecurity version and dependencies versions.\n# The following information will be shared: ModSecurity version,\n# Web Server version, APR version, PCRE version, Lua version, Libxml2\n# version, Anonymous unique id for host.\n# NB: As of April 2022, there is no longer any advantage to turning this\n# setting On, as there is no active receiver for the information.\n",
                      "markdown": "`# Improve the quality of ModSecurity by sharing information about your\n# current ModSecurity version and dependencies versions.\n# The following information will be shared: ModSecurity version,\n# Web Server version, APR version, PCRE version, Lua version, Libxml2\n# version, Anonymous unique id for host.\n# NB: As of April 2022, there is no longer any advantage to turning this\n# setting On, as there is no active receiver for the information.\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/modsecurity.conf-recommended"
                },
                "region": {
                  "startLine": 262,
                  "startColumn": 25,
                  "endLine": 262,
                  "endColumn": 33,
                  "snippet": {
                    "text": "\n# Use the most commonly used application/x-www-form-urlencoded parameter\n# separator. There's probably only one application somewhere that uses\n# something else so don't expect to change this value.\n#\nSecArgumentSeparator &\n\n",
                    "rendered": {
                      "text": "\n# Use the most commonly used application/x-www-form-urlencoded parameter\n# separator. There's probably only one application somewhere that uses\n# something else so don't expect to change this value.\n#\nSecArgumentSeparator &\n\n",
                      "markdown": "`\n# Use the most commonly used application/x-www-form-urlencoded parameter\n# separator. There's probably only one application somewhere that uses\n# something else so don't expect to change this value.\n#\nSecArgumentSeparator &\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        },
        {
          "rule": {
            "id": "BD000610"
          },
          "message": {
            "text": "Backdoor: LOLBAS: Linux Indicator",
            "id": "BD000610"
          },
          "locations": [
            {
              "physicalLocation": {
                "address": {
                  "relativeAddress": -1,
                  "fullyQualifiedName": "/tmp/lyvd/panic-at-the-distro-malicious-apks/datasets/upstream_repos/modsecurity.zip/modsecurity.conf-recommended"
                },
                "region": {
                  "startLine": 94,
                  "startColumn": 34,
                  "endLine": 95,
                  "endColumn": 3,
                  "snippet": {
                    "text": "HF %{MULTIPART_HEADER_FOLDING}, \\\nLF %{MULTIPART_LF_LINE}, \\\nSM %{MULTIPART_MISSING_SEMICOLON}, \\\nIQ %{MULTIPART_INVALID_QUOTING}, \\\nIP %{MULTIPART_INVALID_PART}, \\\nIH %{MULTIPART_INVALID_HEADER_FOLDING}, \\\nFL %{MULTIPART_FILE_LIMIT_EXCEEDED}'\"\n\n",
                    "rendered": {
                      "text": "HF %{MULTIPART_HEADER_FOLDING}, \\\nLF %{MULTIPART_LF_LINE}, \\\nSM %{MULTIPART_MISSING_SEMICOLON}, \\\nIQ %{MULTIPART_INVALID_QUOTING}, \\\nIP %{MULTIPART_INVALID_PART}, \\\nIH %{MULTIPART_INVALID_HEADER_FOLDING}, \\\nFL %{MULTIPART_FILE_LIMIT_EXCEEDED}'\"\n\n",
                      "markdown": "`HF %{MULTIPART_HEADER_FOLDING}, \\\nLF %{MULTIPART_LF_LINE}, \\\nSM %{MULTIPART_MISSING_SEMICOLON}, \\\nIQ %{MULTIPART_INVALID_QUOTING}, \\\nIP %{MULTIPART_INVALID_PART}, \\\nIH %{MULTIPART_INVALID_HEADER_FOLDING}, \\\nFL %{MULTIPART_FILE_LIMIT_EXCEEDED}'\"\n\n`"
                    }
                  },
                  "sourceLanguage": "Unknown"
                }
              }
            }
          ],
          "properties": {
            "Severity": 4,
            "Confidence": 1
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}